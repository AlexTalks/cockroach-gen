// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:873
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13622

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1577,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	260, 409,
	-2, 0,
	-1, 74,
	242, 243,
	515, 243,
	-2, 0,
	-1, 87,
	230, 1313,
	244, 1313,
	260, 405,
	389, 405,
	400, 1067,
	439, 405,
	452, 1067,
	499, 1067,
	526, 405,
	552, 1067,
	-2, 0,
	-1, 93,
	132, 1577,
	237, 1577,
	537, 1577,
	538, 1577,
	-2, 0,
	-1, 109,
	150, 1548,
	169, 1548,
	182, 1548,
	240, 1548,
	273, 1548,
	340, 1548,
	350, 1548,
	532, 1548,
	-2, 1519,
	-1, 150,
	158, 916,
	259, 916,
	392, 877,
	457, 877,
	498, 877,
	518, 916,
	520, 877,
	-2, 0,
	-1, 154,
	4, 1579,
	21, 1579,
	22, 1579,
	23, 1579,
	24, 1579,
	25, 1579,
	26, 1579,
	27, 1579,
	29, 1579,
	30, 1579,
	36, 1579,
	41, 1579,
	42, 1579,
	44, 1579,
	45, 1579,
	46, 1579,
	47, 1579,
	48, 1579,
	49, 1579,
	50, 1579,
	51, 1579,
	53, 1579,
	54, 1579,
	55, 1579,
	56, 1579,
	58, 1579,
	59, 1579,
	60, 1579,
	61, 1579,
	62, 1579,
	63, 1579,
	64, 1579,
	68, 1579,
	69, 1579,
	70, 1579,
	71, 1579,
	73, 1579,
	74, 1579,
	75, 1579,
	79, 1579,
	80, 1579,
	81, 1579,
	82, 1579,
	83, 1579,
	84, 1579,
	85, 1579,
	88, 1579,
	89, 1579,
	90, 1579,
	91, 1579,
	92, 1579,
	94, 1579,
	96, 1579,
	97, 1579,
	98, 1579,
	99, 1579,
	100, 1579,
	101, 1579,
	103, 1579,
	104, 1579,
	105, 1579,
	107, 1579,
	108, 1579,
	109, 1579,
	117, 1579,
	118, 1579,
	119, 1579,
	120, 1579,
	121, 1579,
	123, 1579,
	124, 1579,
	125, 1579,
	127, 1579,
	128, 1579,
	129, 1579,
	131, 1579,
	132, 1579,
	133, 1579,
	135, 1579,
	136, 1579,
	137, 1579,
	140, 1579,
	141, 1579,
	142, 1579,
	144, 1579,
	145, 1579,
	147, 1579,
	148, 1579,
	149, 1579,
	151, 1579,
	152, 1579,
	153, 1579,
	154, 1579,
	155, 1579,
	156, 1579,
	157, 1579,
	158, 1579,
	159, 1579,
	160, 1579,
	161, 1579,
	162, 1579,
	163, 1579,
	164, 1579,
	165, 1579,
	166, 1579,
	168, 1579,
	174, 1579,
	175, 1579,
	176, 1579,
	177, 1579,
	181, 1579,
	183, 1579,
	184, 1579,
	188, 1579,
	189, 1579,
	190, 1579,
	191, 1579,
	192, 1579,
	193, 1579,
	194, 1579,
	195, 1579,
	196, 1579,
	197, 1579,
	198, 1579,
	199, 1579,
	200, 1579,
	201, 1579,
	203, 1579,
	204, 1579,
	206, 1579,
	207, 1579,
	209, 1579,
	210, 1579,
	211, 1579,
	212, 1579,
	213, 1579,
	214, 1579,
	215, 1579,
	216, 1579,
	217, 1579,
	219, 1579,
	220, 1579,
	222, 1579,
	223, 1579,
	224, 1579,
	225, 1579,
	226, 1579,
	230, 1579,
	231, 1579,
	232, 1579,
	233, 1579,
	234, 1579,
	237, 1579,
	238, 1579,
	239, 1579,
	241, 1579,
	243, 1579,
	244, 1579,
	246, 1579,
	248, 1579,
	249, 1579,
	250, 1579,
	252, 1579,
	256, 1579,
	257, 1579,
	258, 1579,
	259, 1579,
	260, 1579,
	261, 1579,
	263, 1579,
	264, 1579,
	265, 1579,
	267, 1579,
	268, 1579,
	270, 1579,
	271, 1579,
	274, 1579,
	278, 1579,
	279, 1579,
	280, 1579,
	283, 1579,
	284, 1579,
	285, 1579,
	286, 1579,
	288, 1579,
	289, 1579,
	290, 1579,
	291, 1579,
	292, 1579,
	293, 1579,
	294, 1579,
	295, 1579,
	296, 1579,
	297, 1579,
	298, 1579,
	299, 1579,
	300, 1579,
	301, 1579,
	302, 1579,
	303, 1579,
	304, 1579,
	305, 1579,
	306, 1579,
	307, 1579,
	308, 1579,
	309, 1579,
	311, 1579,
	313, 1579,
	314, 1579,
	315, 1579,
	316, 1579,
	317, 1579,
	318, 1579,
	319, 1579,
	320, 1579,
	321, 1579,
	322, 1579,
	323, 1579,
	324, 1579,
	325, 1579,
	327, 1579,
	328, 1579,
	330, 1579,
	332, 1579,
	333, 1579,
	335, 1579,
	336, 1579,
	337, 1579,
	338, 1579,
	339, 1579,
	342, 1579,
	345, 1579,
	346, 1579,
	347, 1579,
	348, 1579,
	351, 1579,
	352, 1579,
	353, 1579,
	355, 1579,
	357, 1579,
	358, 1579,
	359, 1579,
	360, 1579,
	361, 1579,
	362, 1579,
	363, 1579,
	364, 1579,
	365, 1579,
	366, 1579,
	367, 1579,
	368, 1579,
	369, 1579,
	371, 1579,
	372, 1579,
	373, 1579,
	374, 1579,
	375, 1579,
	376, 1579,
	377, 1579,
	378, 1579,
	379, 1579,
	380, 1579,
	381, 1579,
	382, 1579,
	383, 1579,
	384, 1579,
	385, 1579,
	387, 1579,
	388, 1579,
	390, 1579,
	391, 1579,
	392, 1579,
	393, 1579,
	394, 1579,
	395, 1579,
	396, 1579,
	397, 1579,
	398, 1579,
	399, 1579,
	400, 1579,
	401, 1579,
	402, 1579,
	404, 1579,
	406, 1579,
	407, 1579,
	408, 1579,
	414, 1579,
	416, 1579,
	417, 1579,
	418, 1579,
	419, 1579,
	420, 1579,
	421, 1579,
	422, 1579,
	423, 1579,
	424, 1579,
	425, 1579,
	427, 1579,
	428, 1579,
	429, 1579,
	431, 1579,
	432, 1579,
	433, 1579,
	434, 1579,
	435, 1579,
	436, 1579,
	437, 1579,
	439, 1579,
	440, 1579,
	441, 1579,
	442, 1579,
	443, 1579,
	444, 1579,
	445, 1579,
	446, 1579,
	447, 1579,
	448, 1579,
	449, 1579,
	450, 1579,
	452, 1579,
	453, 1579,
	454, 1579,
	455, 1579,
	456, 1579,
	457, 1579,
	459, 1579,
	460, 1579,
	461, 1579,
	462, 1579,
	463, 1579,
	464, 1579,
	466, 1579,
	467, 1579,
	468, 1579,
	469, 1579,
	470, 1579,
	471, 1579,
	472, 1579,
	473, 1579,
	475, 1579,
	477, 1579,
	478, 1579,
	479, 1579,
	480, 1579,
	481, 1579,
	482, 1579,
	483, 1579,
	484, 1579,
	485, 1579,
	486, 1579,
	487, 1579,
	488, 1579,
	489, 1579,
	490, 1579,
	491, 1579,
	492, 1579,
	494, 1579,
	495, 1579,
	497, 1579,
	498, 1579,
	500, 1579,
	501, 1579,
	502, 1579,
	503, 1579,
	504, 1579,
	505, 1579,
	506, 1579,
	507, 1579,
	508, 1579,
	510, 1579,
	511, 1579,
	512, 1579,
	513, 1579,
	514, 1579,
	516, 1579,
	518, 1579,
	519, 1579,
	520, 1579,
	521, 1579,
	522, 1579,
	523, 1579,
	525, 1579,
	526, 1579,
	527, 1579,
	528, 1579,
	530, 1579,
	531, 1579,
	534, 1579,
	535, 1579,
	536, 1579,
	537, 1579,
	538, 1579,
	539, 1579,
	540, 1579,
	542, 1579,
	545, 1579,
	546, 1579,
	547, 1579,
	548, 1579,
	549, 1579,
	550, 1579,
	552, 1579,
	553, 1579,
	554, 1579,
	555, 1579,
	557, 1579,
	562, 1579,
	563, 1579,
	564, 1579,
	565, 1579,
	566, 1579,
	567, 1579,
	-2, 0,
	-1, 155,
	1, 1430,
	130, 1430,
	248, 1430,
	329, 1430,
	387, 1430,
	396, 1430,
	571, 1430,
	600, 1430,
	-2, 0,
	-1, 157,
	1, 1430,
	600, 1430,
	-2, 0,
	-1, 158,
	1, 1430,
	600, 1430,
	-2, 0,
	-1, 159,
	1, 1430,
	515, 1430,
	600, 1430,
	-2, 0,
	-1, 188,
	150, 1547,
	169, 1547,
	182, 1547,
	240, 1547,
	273, 1547,
	340, 1547,
	350, 1547,
	532, 1547,
	-2, 1522,
	-1, 236,
	4, 1586,
	5, 1586,
	6, 1586,
	7, 1586,
	8, 1586,
	9, 1586,
	10, 1586,
	21, 1586,
	22, 1586,
	23, 1586,
	24, 1586,
	25, 1586,
	26, 1586,
	27, 1586,
	29, 1586,
	30, 1586,
	36, 1586,
	37, 1586,
	41, 1586,
	42, 1586,
	43, 1586,
	44, 1586,
	45, 1586,
	46, 1586,
	47, 1586,
	48, 1586,
	49, 1586,
	50, 1586,
	51, 1586,
	53, 1586,
	54, 1586,
	55, 1586,
	56, 1586,
	58, 1586,
	59, 1586,
	60, 1586,
	61, 1586,
	62, 1586,
	63, 1586,
	64, 1586,
	65, 1586,
	66, 1586,
	67, 1586,
	68, 1586,
	69, 1586,
	70, 1586,
	71, 1586,
	73, 1586,
	74, 1586,
	75, 1586,
	77, 1586,
	79, 1586,
	80, 1586,
	81, 1586,
	82, 1586,
	83, 1586,
	84, 1586,
	85, 1586,
	88, 1586,
	89, 1586,
	90, 1586,
	91, 1586,
	92, 1586,
	94, 1586,
	96, 1586,
	97, 1586,
	98, 1586,
	99, 1586,
	100, 1586,
	101, 1586,
	103, 1586,
	104, 1586,
	105, 1586,
	106, 1586,
	107, 1586,
	108, 1586,
	109, 1586,
	110, 1586,
	111, 1586,
	112, 1586,
	113, 1586,
	114, 1586,
	115, 1586,
	116, 1586,
	117, 1586,
	118, 1586,
	119, 1586,
	120, 1586,
	121, 1586,
	122, 1586,
	123, 1586,
	124, 1586,
	125, 1586,
	126, 1586,
	127, 1586,
	128, 1586,
	129, 1586,
	131, 1586,
	132, 1586,
	133, 1586,
	135, 1586,
	136, 1586,
	137, 1586,
	140, 1586,
	141, 1586,
	142, 1586,
	144, 1586,
	145, 1586,
	147, 1586,
	148, 1586,
	149, 1586,
	151, 1586,
	152, 1586,
	153, 1586,
	154, 1586,
	155, 1586,
	156, 1586,
	157, 1586,
	158, 1586,
	159, 1586,
	160, 1586,
	161, 1586,
	162, 1586,
	163, 1586,
	164, 1586,
	165, 1586,
	166, 1586,
	167, 1586,
	168, 1586,
	174, 1586,
	175, 1586,
	176, 1586,
	177, 1586,
	181, 1586,
	183, 1586,
	184, 1586,
	187, 1586,
	188, 1586,
	189, 1586,
	190, 1586,
	191, 1586,
	192, 1586,
	193, 1586,
	194, 1586,
	195, 1586,
	196, 1586,
	197, 1586,
	198, 1586,
	199, 1586,
	200, 1586,
	201, 1586,
	203, 1586,
	204, 1586,
	206, 1586,
	207, 1586,
	209, 1586,
	210, 1586,
	211, 1586,
	212, 1586,
	213, 1586,
	214, 1586,
	215, 1586,
	216, 1586,
	217, 1586,
	218, 1586,
	219, 1586,
	220, 1586,
	222, 1586,
	223, 1586,
	224, 1586,
	225, 1586,
	226, 1586,
	230, 1586,
	231, 1586,
	232, 1586,
	233, 1586,
	234, 1586,
	236, 1586,
	237, 1586,
	238, 1586,
	239, 1586,
	241, 1586,
	243, 1586,
	244, 1586,
	245, 1586,
	246, 1586,
	247, 1586,
	248, 1586,
	249, 1586,
	250, 1586,
	251, 1586,
	252, 1586,
	256, 1586,
	257, 1586,
	258, 1586,
	259, 1586,
	260, 1586,
	261, 1586,
	263, 1586,
	264, 1586,
	265, 1586,
	267, 1586,
	268, 1586,
	269, 1586,
	270, 1586,
	271, 1586,
	272, 1586,
	274, 1586,
	278, 1586,
	279, 1586,
	280, 1586,
	281, 1586,
	282, 1586,
	283, 1586,
	284, 1586,
	285, 1586,
	286, 1586,
	288, 1586,
	289, 1586,
	290, 1586,
	291, 1586,
	292, 1586,
	293, 1586,
	294, 1586,
	295, 1586,
	296, 1586,
	297, 1586,
	298, 1586,
	299, 1586,
	300, 1586,
	301, 1586,
	302, 1586,
	303, 1586,
	304, 1586,
	305, 1586,
	306, 1586,
	307, 1586,
	308, 1586,
	309, 1586,
	311, 1586,
	312, 1586,
	313, 1586,
	314, 1586,
	315, 1586,
	316, 1586,
	317, 1586,
	318, 1586,
	319, 1586,
	320, 1586,
	321, 1586,
	322, 1586,
	323, 1586,
	324, 1586,
	325, 1586,
	326, 1586,
	327, 1586,
	328, 1586,
	329, 1586,
	330, 1586,
	331, 1586,
	332, 1586,
	333, 1586,
	334, 1586,
	335, 1586,
	336, 1586,
	337, 1586,
	338, 1586,
	339, 1586,
	342, 1586,
	346, 1586,
	347, 1586,
	348, 1586,
	351, 1586,
	352, 1586,
	353, 1586,
	354, 1586,
	355, 1586,
	356, 1586,
	357, 1586,
	358, 1586,
	359, 1586,
	360, 1586,
	361, 1586,
	362, 1586,
	363, 1586,
	364, 1586,
	365, 1586,
	366, 1586,
	367, 1586,
	368, 1586,
	369, 1586,
	371, 1586,
	372, 1586,
	373, 1586,
	374, 1586,
	375, 1586,
	376, 1586,
	377, 1586,
	378, 1586,
	379, 1586,
	380, 1586,
	381, 1586,
	382, 1586,
	383, 1586,
	384, 1586,
	385, 1586,
	387, 1586,
	388, 1586,
	390, 1586,
	391, 1586,
	392, 1586,
	393, 1586,
	394, 1586,
	395, 1586,
	396, 1586,
	397, 1586,
	398, 1586,
	399, 1586,
	400, 1586,
	401, 1586,
	402, 1586,
	404, 1586,
	406, 1586,
	407, 1586,
	408, 1586,
	414, 1586,
	416, 1586,
	417, 1586,
	418, 1586,
	419, 1586,
	420, 1586,
	421, 1586,
	422, 1586,
	423, 1586,
	424, 1586,
	425, 1586,
	427, 1586,
	428, 1586,
	429, 1586,
	430, 1586,
	431, 1586,
	432, 1586,
	433, 1586,
	434, 1586,
	435, 1586,
	436, 1586,
	437, 1586,
	439, 1586,
	440, 1586,
	441, 1586,
	442, 1586,
	443, 1586,
	444, 1586,
	445, 1586,
	446, 1586,
	447, 1586,
	448, 1586,
	449, 1586,
	450, 1586,
	452, 1586,
	453, 1586,
	454, 1586,
	455, 1586,
	456, 1586,
	457, 1586,
	458, 1586,
	459, 1586,
	460, 1586,
	461, 1586,
	462, 1586,
	463, 1586,
	464, 1586,
	465, 1586,
	466, 1586,
	467, 1586,
	468, 1586,
	469, 1586,
	470, 1586,
	471, 1586,
	472, 1586,
	473, 1586,
	475, 1586,
	477, 1586,
	478, 1586,
	479, 1586,
	480, 1586,
	481, 1586,
	482, 1586,
	483, 1586,
	484, 1586,
	485, 1586,
	486, 1586,
	487, 1586,
	488, 1586,
	489, 1586,
	490, 1586,
	491, 1586,
	492, 1586,
	494, 1586,
	495, 1586,
	496, 1586,
	497, 1586,
	498, 1586,
	500, 1586,
	501, 1586,
	502, 1586,
	503, 1586,
	504, 1586,
	505, 1586,
	506, 1586,
	507, 1586,
	508, 1586,
	510, 1586,
	511, 1586,
	512, 1586,
	513, 1586,
	514, 1586,
	516, 1586,
	518, 1586,
	519, 1586,
	520, 1586,
	521, 1586,
	522, 1586,
	523, 1586,
	524, 1586,
	525, 1586,
	526, 1586,
	527, 1586,
	528, 1586,
	530, 1586,
	531, 1586,
	533, 1586,
	534, 1586,
	535, 1586,
	536, 1586,
	537, 1586,
	538, 1586,
	539, 1586,
	540, 1586,
	541, 1586,
	542, 1586,
	545, 1586,
	546, 1586,
	547, 1586,
	548, 1586,
	549, 1586,
	550, 1586,
	552, 1586,
	553, 1586,
	554, 1586,
	555, 1586,
	557, 1586,
	562, 1586,
	563, 1586,
	564, 1586,
	565, 1586,
	566, 1586,
	567, 1586,
	568, 1586,
	581, 1586,
	588, 1586,
	589, 1586,
	590, 1586,
	597, 1586,
	601, 1586,
	-2, 0,
	-1, 741,
	4, 1311,
	21, 1311,
	22, 1311,
	23, 1311,
	24, 1311,
	25, 1311,
	26, 1311,
	27, 1311,
	29, 1311,
	30, 1311,
	36, 1311,
	41, 1311,
	42, 1311,
	44, 1311,
	45, 1311,
	46, 1311,
	47, 1311,
	48, 1311,
	49, 1311,
	50, 1311,
	51, 1311,
	53, 1311,
	54, 1311,
	55, 1311,
	56, 1311,
	58, 1311,
	59, 1311,
	60, 1311,
	61, 1311,
	62, 1311,
	63, 1311,
	64, 1311,
	68, 1311,
	69, 1311,
	70, 1311,
	71, 1311,
	73, 1311,
	74, 1311,
	75, 1311,
	79, 1311,
	80, 1311,
	81, 1311,
	82, 1311,
	83, 1311,
	84, 1311,
	85, 1311,
	88, 1311,
	89, 1311,
	90, 1311,
	91, 1311,
	92, 1311,
	94, 1311,
	96, 1311,
	97, 1311,
	98, 1311,
	99, 1311,
	100, 1311,
	101, 1311,
	103, 1311,
	104, 1311,
	105, 1311,
	107, 1311,
	108, 1311,
	109, 1311,
	117, 1311,
	118, 1311,
	119, 1311,
	120, 1311,
	121, 1311,
	123, 1311,
	124, 1311,
	125, 1311,
	127, 1311,
	128, 1311,
	129, 1311,
	131, 1311,
	132, 1311,
	133, 1311,
	135, 1311,
	136, 1311,
	137, 1311,
	140, 1311,
	141, 1311,
	142, 1311,
	144, 1311,
	145, 1311,
	147, 1311,
	148, 1311,
	149, 1311,
	151, 1311,
	152, 1311,
	153, 1311,
	154, 1311,
	155, 1311,
	156, 1311,
	157, 1311,
	158, 1311,
	159, 1311,
	160, 1311,
	161, 1311,
	162, 1311,
	163, 1311,
	164, 1311,
	165, 1311,
	166, 1311,
	168, 1311,
	174, 1311,
	175, 1311,
	176, 1311,
	177, 1311,
	181, 1311,
	183, 1311,
	184, 1311,
	188, 1311,
	189, 1311,
	190, 1311,
	191, 1311,
	192, 1311,
	193, 1311,
	194, 1311,
	195, 1311,
	196, 1311,
	197, 1311,
	198, 1311,
	199, 1311,
	200, 1311,
	201, 1311,
	203, 1311,
	204, 1311,
	206, 1311,
	207, 1311,
	209, 1311,
	210, 1311,
	211, 1311,
	212, 1311,
	213, 1311,
	214, 1311,
	215, 1311,
	216, 1311,
	217, 1311,
	219, 1311,
	220, 1311,
	222, 1311,
	223, 1311,
	224, 1311,
	225, 1311,
	226, 1311,
	230, 1311,
	231, 1311,
	232, 1311,
	233, 1311,
	234, 1311,
	237, 1311,
	238, 1311,
	239, 1311,
	241, 1311,
	243, 1311,
	244, 1311,
	246, 1311,
	248, 1311,
	249, 1311,
	250, 1311,
	252, 1311,
	256, 1311,
	257, 1311,
	258, 1311,
	259, 1311,
	260, 1311,
	261, 1311,
	263, 1311,
	264, 1311,
	265, 1311,
	267, 1311,
	268, 1311,
	270, 1311,
	271, 1311,
	274, 1311,
	278, 1311,
	279, 1311,
	280, 1311,
	283, 1311,
	284, 1311,
	285, 1311,
	286, 1311,
	288, 1311,
	289, 1311,
	290, 1311,
	291, 1311,
	292, 1311,
	293, 1311,
	294, 1311,
	295, 1311,
	296, 1311,
	297, 1311,
	298, 1311,
	299, 1311,
	300, 1311,
	301, 1311,
	302, 1311,
	303, 1311,
	304, 1311,
	305, 1311,
	306, 1311,
	307, 1311,
	308, 1311,
	309, 1311,
	311, 1311,
	313, 1311,
	314, 1311,
	315, 1311,
	316, 1311,
	317, 1311,
	318, 1311,
	319, 1311,
	320, 1311,
	321, 1311,
	322, 1311,
	323, 1311,
	324, 1311,
	325, 1311,
	327, 1311,
	328, 1311,
	330, 1311,
	332, 1311,
	333, 1311,
	335, 1311,
	336, 1311,
	337, 1311,
	338, 1311,
	339, 1311,
	342, 1311,
	346, 1311,
	347, 1311,
	348, 1311,
	351, 1311,
	352, 1311,
	353, 1311,
	355, 1311,
	357, 1311,
	358, 1311,
	359, 1311,
	360, 1311,
	361, 1311,
	362, 1311,
	363, 1311,
	364, 1311,
	365, 1311,
	366, 1311,
	367, 1311,
	368, 1311,
	369, 1311,
	371, 1311,
	372, 1311,
	373, 1311,
	374, 1311,
	375, 1311,
	376, 1311,
	377, 1311,
	378, 1311,
	379, 1311,
	380, 1311,
	381, 1311,
	382, 1311,
	383, 1311,
	384, 1311,
	385, 1311,
	387, 1311,
	388, 1311,
	390, 1311,
	391, 1311,
	392, 1311,
	393, 1311,
	394, 1311,
	395, 1311,
	396, 1311,
	397, 1311,
	398, 1311,
	399, 1311,
	400, 1311,
	401, 1311,
	402, 1311,
	404, 1311,
	406, 1311,
	407, 1311,
	408, 1311,
	414, 1311,
	416, 1311,
	417, 1311,
	418, 1311,
	419, 1311,
	420, 1311,
	421, 1311,
	422, 1311,
	423, 1311,
	424, 1311,
	425, 1311,
	427, 1311,
	428, 1311,
	429, 1311,
	431, 1311,
	432, 1311,
	433, 1311,
	434, 1311,
	435, 1311,
	436, 1311,
	437, 1311,
	439, 1311,
	440, 1311,
	441, 1311,
	442, 1311,
	443, 1311,
	444, 1311,
	445, 1311,
	446, 1311,
	447, 1311,
	448, 1311,
	449, 1311,
	450, 1311,
	452, 1311,
	453, 1311,
	454, 1311,
	455, 1311,
	456, 1311,
	457, 1311,
	459, 1311,
	460, 1311,
	461, 1311,
	462, 1311,
	463, 1311,
	464, 1311,
	466, 1311,
	467, 1311,
	468, 1311,
	469, 1311,
	470, 1311,
	471, 1311,
	472, 1311,
	473, 1311,
	475, 1311,
	477, 1311,
	478, 1311,
	479, 1311,
	480, 1311,
	481, 1311,
	482, 1311,
	483, 1311,
	484, 1311,
	485, 1311,
	486, 1311,
	487, 1311,
	488, 1311,
	489, 1311,
	490, 1311,
	491, 1311,
	492, 1311,
	494, 1311,
	495, 1311,
	497, 1311,
	498, 1311,
	500, 1311,
	501, 1311,
	502, 1311,
	503, 1311,
	504, 1311,
	505, 1311,
	506, 1311,
	507, 1311,
	508, 1311,
	510, 1311,
	511, 1311,
	512, 1311,
	513, 1311,
	514, 1311,
	516, 1311,
	518, 1311,
	519, 1311,
	520, 1311,
	521, 1311,
	522, 1311,
	523, 1311,
	525, 1311,
	526, 1311,
	527, 1311,
	528, 1311,
	530, 1311,
	531, 1311,
	534, 1311,
	535, 1311,
	536, 1311,
	537, 1311,
	538, 1311,
	539, 1311,
	540, 1311,
	542, 1311,
	545, 1311,
	546, 1311,
	547, 1311,
	548, 1311,
	549, 1311,
	550, 1311,
	552, 1311,
	553, 1311,
	554, 1311,
	555, 1311,
	557, 1311,
	562, 1311,
	563, 1311,
	564, 1311,
	565, 1311,
	566, 1311,
	567, 1311,
	-2, 0,
	-1, 760,
	186, 2374,
	515, 2374,
	580, 2374,
	599, 2374,
	-2, 0,
	-1, 761,
	186, 2361,
	515, 2361,
	580, 2361,
	599, 2361,
	-2, 0,
	-1, 763,
	186, 2618,
	515, 2618,
	580, 2618,
	599, 2618,
	-2, 0,
	-1, 766,
	186, 2481,
	515, 2481,
	580, 2481,
	599, 2481,
	-2, 0,
	-1, 767,
	186, 2659,
	515, 2659,
	580, 2659,
	599, 2659,
	-2, 0,
	-1, 775,
	186, 2508,
	515, 2508,
	580, 2508,
	599, 2508,
	-2, 703,
	-1, 810,
	599, 2310,
	602, 2310,
	-2, 996,
	-1, 811,
	599, 2312,
	602, 2312,
	-2, 997,
	-1, 812,
	599, 2311,
	602, 2311,
	-2, 998,
	-1, 813,
	602, 2236,
	-2, 999,
	-1, 836,
	182, 264,
	-2, 0,
	-1, 860,
	43, 2283,
	-2, 0,
	-1, 861,
	552, 1289,
	-2, 1068,
	-1, 877,
	4, 1716,
	21, 1716,
	22, 1716,
	23, 1716,
	24, 1716,
	25, 1716,
	26, 1716,
	27, 1716,
	29, 1716,
	30, 1716,
	36, 1716,
	41, 1716,
	42, 1716,
	44, 1716,
	45, 1716,
	46, 1716,
	47, 1716,
	48, 1716,
	49, 1716,
	50, 1716,
	51, 1716,
	53, 1716,
	54, 1716,
	55, 1716,
	56, 1716,
	58, 1716,
	59, 1716,
	60, 1716,
	61, 1716,
	62, 1716,
	63, 1716,
	64, 1716,
	68, 1716,
	69, 1716,
	70, 1716,
	71, 1716,
	73, 1716,
	74, 1716,
	75, 1716,
	79, 1716,
	80, 1716,
	81, 1716,
	82, 1716,
	83, 1716,
	84, 1716,
	85, 1716,
	88, 1716,
	89, 1716,
	90, 1716,
	91, 1716,
	92, 1716,
	94, 1716,
	96, 1716,
	97, 1716,
	98, 1716,
	99, 1716,
	100, 1716,
	101, 1716,
	103, 1716,
	104, 1716,
	105, 1716,
	107, 1716,
	108, 1716,
	109, 1716,
	117, 1716,
	118, 1716,
	119, 1716,
	120, 1716,
	121, 1716,
	123, 1716,
	124, 1716,
	125, 1716,
	127, 1716,
	128, 1716,
	129, 1716,
	131, 1716,
	132, 1716,
	133, 1716,
	135, 1716,
	136, 1716,
	137, 1716,
	140, 1716,
	141, 1716,
	142, 1716,
	144, 1716,
	145, 1716,
	147, 1716,
	148, 1716,
	149, 1716,
	151, 1716,
	152, 1716,
	153, 1716,
	154, 1716,
	155, 1716,
	156, 1716,
	157, 1716,
	158, 1716,
	159, 1716,
	160, 1716,
	161, 1716,
	162, 1716,
	163, 1716,
	164, 1716,
	165, 1716,
	166, 1716,
	168, 1716,
	174, 1716,
	175, 1716,
	176, 1716,
	177, 1716,
	181, 1716,
	183, 1716,
	184, 1716,
	188, 1716,
	189, 1716,
	190, 1716,
	191, 1716,
	192, 1716,
	193, 1716,
	194, 1716,
	195, 1716,
	196, 1716,
	197, 1716,
	198, 1716,
	199, 1716,
	200, 1716,
	201, 1716,
	203, 1716,
	204, 1716,
	206, 1716,
	207, 1716,
	209, 1716,
	210, 1716,
	211, 1716,
	212, 1716,
	213, 1716,
	214, 1716,
	215, 1716,
	216, 1716,
	217, 1716,
	219, 1716,
	220, 1716,
	222, 1716,
	223, 1716,
	224, 1716,
	225, 1716,
	226, 1716,
	230, 1716,
	231, 1716,
	232, 1716,
	233, 1716,
	234, 1716,
	237, 1716,
	238, 1716,
	239, 1716,
	241, 1716,
	243, 1716,
	244, 1716,
	246, 1716,
	248, 1716,
	249, 1716,
	250, 1716,
	252, 1716,
	256, 1716,
	257, 1716,
	258, 1716,
	259, 1716,
	260, 1716,
	261, 1716,
	263, 1716,
	264, 1716,
	265, 1716,
	267, 1716,
	268, 1716,
	270, 1716,
	271, 1716,
	274, 1716,
	278, 1716,
	279, 1716,
	280, 1716,
	283, 1716,
	284, 1716,
	285, 1716,
	286, 1716,
	288, 1716,
	289, 1716,
	290, 1716,
	291, 1716,
	292, 1716,
	293, 1716,
	294, 1716,
	295, 1716,
	296, 1716,
	297, 1716,
	298, 1716,
	299, 1716,
	300, 1716,
	301, 1716,
	302, 1716,
	303, 1716,
	304, 1716,
	305, 1716,
	306, 1716,
	307, 1716,
	308, 1716,
	309, 1716,
	311, 1716,
	313, 1716,
	314, 1716,
	315, 1716,
	316, 1716,
	317, 1716,
	318, 1716,
	319, 1716,
	320, 1716,
	321, 1716,
	322, 1716,
	323, 1716,
	324, 1716,
	325, 1716,
	327, 1716,
	328, 1716,
	330, 1716,
	332, 1716,
	333, 1716,
	335, 1716,
	336, 1716,
	337, 1716,
	338, 1716,
	339, 1716,
	342, 1716,
	346, 1716,
	347, 1716,
	348, 1716,
	351, 1716,
	352, 1716,
	353, 1716,
	355, 1716,
	357, 1716,
	358, 1716,
	359, 1716,
	360, 1716,
	361, 1716,
	362, 1716,
	363, 1716,
	364, 1716,
	365, 1716,
	366, 1716,
	367, 1716,
	368, 1716,
	369, 1716,
	371, 1716,
	372, 1716,
	373, 1716,
	374, 1716,
	375, 1716,
	376, 1716,
	377, 1716,
	378, 1716,
	379, 1716,
	380, 1716,
	381, 1716,
	382, 1716,
	383, 1716,
	384, 1716,
	385, 1716,
	387, 1716,
	388, 1716,
	390, 1716,
	391, 1716,
	392, 1716,
	393, 1716,
	394, 1716,
	395, 1716,
	396, 1716,
	397, 1716,
	398, 1716,
	399, 1716,
	400, 1716,
	401, 1716,
	402, 1716,
	404, 1716,
	406, 1716,
	407, 1716,
	408, 1716,
	414, 1716,
	416, 1716,
	417, 1716,
	418, 1716,
	419, 1716,
	420, 1716,
	421, 1716,
	422, 1716,
	423, 1716,
	424, 1716,
	425, 1716,
	427, 1716,
	428, 1716,
	429, 1716,
	431, 1716,
	432, 1716,
	433, 1716,
	434, 1716,
	435, 1716,
	436, 1716,
	437, 1716,
	439, 1716,
	440, 1716,
	441, 1716,
	442, 1716,
	443, 1716,
	444, 1716,
	445, 1716,
	446, 1716,
	447, 1716,
	448, 1716,
	449, 1716,
	450, 1716,
	452, 1716,
	453, 1716,
	454, 1716,
	455, 1716,
	456, 1716,
	457, 1716,
	459, 1716,
	460, 1716,
	461, 1716,
	462, 1716,
	463, 1716,
	464, 1716,
	466, 1716,
	467, 1716,
	468, 1716,
	469, 1716,
	470, 1716,
	471, 1716,
	472, 1716,
	473, 1716,
	475, 1716,
	477, 1716,
	478, 1716,
	479, 1716,
	480, 1716,
	481, 1716,
	482, 1716,
	483, 1716,
	484, 1716,
	485, 1716,
	486, 1716,
	487, 1716,
	488, 1716,
	489, 1716,
	490, 1716,
	491, 1716,
	492, 1716,
	494, 1716,
	495, 1716,
	497, 1716,
	498, 1716,
	500, 1716,
	501, 1716,
	502, 1716,
	503, 1716,
	504, 1716,
	505, 1716,
	506, 1716,
	507, 1716,
	508, 1716,
	510, 1716,
	511, 1716,
	512, 1716,
	513, 1716,
	514, 1716,
	516, 1716,
	518, 1716,
	519, 1716,
	520, 1716,
	521, 1716,
	522, 1716,
	523, 1716,
	525, 1716,
	526, 1716,
	527, 1716,
	528, 1716,
	530, 1716,
	531, 1716,
	534, 1716,
	535, 1716,
	536, 1716,
	537, 1716,
	538, 1716,
	539, 1716,
	540, 1716,
	542, 1716,
	545, 1716,
	546, 1716,
	547, 1716,
	548, 1716,
	549, 1716,
	550, 1716,
	552, 1716,
	553, 1716,
	554, 1716,
	555, 1716,
	557, 1716,
	562, 1716,
	563, 1716,
	564, 1716,
	565, 1716,
	566, 1716,
	567, 1716,
	-2, 0,
	-1, 887,
	260, 409,
	-2, 0,
	-1, 960,
	392, 878,
	457, 878,
	498, 878,
	520, 878,
	-2, 0,
	-1, 961,
	392, 877,
	457, 877,
	498, 877,
	520, 877,
	-2, 813,
	-1, 965,
	1, 930,
	596, 930,
	598, 930,
	600, 930,
	-2, 0,
	-1, 967,
	1, 852,
	596, 852,
	598, 852,
	600, 852,
	-2, 0,
	-1, 968,
	1, 856,
	596, 856,
	598, 856,
	600, 856,
	-2, 0,
	-1, 969,
	1, 995,
	182, 995,
	596, 995,
	598, 995,
	600, 995,
	-2, 0,
	-1, 977,
	1, 883,
	596, 883,
	598, 883,
	600, 883,
	-2, 0,
	-1, 984,
	1, 930,
	596, 930,
	598, 930,
	600, 930,
	-2, 0,
	-1, 985,
	1, 932,
	596, 932,
	598, 932,
	600, 932,
	-2, 0,
	-1, 986,
	1, 935,
	596, 935,
	598, 935,
	600, 935,
	-2, 0,
	-1, 992,
	1, 959,
	596, 959,
	598, 959,
	600, 959,
	-2, 0,
	-1, 993,
	1, 961,
	596, 961,
	598, 961,
	600, 961,
	-2, 0,
	-1, 998,
	1, 989,
	596, 989,
	598, 989,
	600, 989,
	-2, 0,
	-1, 1048,
	169, 1590,
	182, 1590,
	273, 1590,
	340, 1590,
	-2, 1526,
	-1, 1063,
	169, 1589,
	182, 1589,
	273, 1589,
	340, 1589,
	-2, 1523,
	-1, 1090,
	599, 2309,
	-2, 711,
	-1, 1119,
	5, 2301,
	597, 2299,
	-2, 2290,
	-1, 1127,
	5, 2322,
	597, 2319,
	-2, 2310,
	-1, 1128,
	5, 2323,
	597, 2320,
	-2, 2311,
	-1, 1136,
	599, 2307,
	-2, 2289,
	-1, 1137,
	597, 2742,
	-2, 2308,
	-1, 1160,
	597, 2741,
	-2, 2324,
	-1, 1161,
	5, 1791,
	-2, 2712,
	-1, 1162,
	5, 1792,
	-2, 2713,
	-1, 1163,
	5, 1793,
	-2, 2727,
	-1, 1164,
	5, 1794,
	-2, 2691,
	-1, 1165,
	5, 1795,
	-2, 2725,
	-1, 1166,
	5, 1803,
	-2, 2704,
	-1, 1167,
	5, 1790,
	-2, 2700,
	-1, 1168,
	5, 1790,
	-2, 2699,
	-1, 1169,
	5, 1790,
	-2, 2718,
	-1, 1170,
	5, 1801,
	-2, 2693,
	-1, 1171,
	5, 1806,
	-2, 2692,
	-1, 1172,
	5, 1808,
	-2, 2737,
	-1, 1175,
	5, 1830,
	-2, 2730,
	-1, 1176,
	5, 1822,
	-2, 2731,
	-1, 1177,
	5, 1830,
	-2, 2732,
	-1, 1178,
	5, 1826,
	-2, 2733,
	-1, 1179,
	5, 1776,
	-2, 2705,
	-1, 1180,
	5, 1777,
	-2, 2706,
	-1, 1181,
	5, 1778,
	-2, 2694,
	-1, 1209,
	5, 1813,
	-2, 2738,
	-1, 1210,
	5, 1814,
	-2, 2728,
	-1, 1211,
	5, 1815,
	553, 1815,
	-2, 2695,
	-1, 1212,
	5, 1816,
	553, 1816,
	-2, 2696,
	-1, 1249,
	597, 2319,
	-2, 2310,
	-1, 1250,
	597, 2320,
	-2, 2311,
	-1, 1351,
	186, 2659,
	515, 2659,
	580, 2659,
	599, 2659,
	-2, 0,
	-1, 1356,
	1, 688,
	600, 688,
	-2, 1438,
	-1, 1485,
	359, 2284,
	416, 2284,
	459, 2284,
	590, 2284,
	-2, 2274,
	-1, 1496,
	601, 2284,
	-2, 2286,
	-1, 1504,
	1, 1286,
	421, 1250,
	459, 1250,
	574, 1250,
	596, 1286,
	598, 1286,
	600, 1286,
	-2, 1575,
	-1, 1510,
	202, 1383,
	221, 1383,
	429, 1383,
	-2, 0,
	-1, 1556,
	400, 1067,
	552, 1067,
	-2, 404,
	-1, 1573,
	43, 2282,
	-2, 1033,
	-1, 1580,
	1, 1286,
	596, 1286,
	598, 1286,
	600, 1286,
	-2, 1575,
	-1, 1588,
	4, 1311,
	21, 1311,
	22, 1311,
	23, 1311,
	24, 1311,
	25, 1311,
	26, 1311,
	27, 1311,
	29, 1311,
	30, 1311,
	36, 1311,
	41, 1311,
	42, 1311,
	44, 1311,
	45, 1311,
	46, 1311,
	47, 1311,
	48, 1311,
	49, 1311,
	50, 1311,
	51, 1311,
	53, 1311,
	54, 1311,
	55, 1311,
	56, 1311,
	58, 1311,
	59, 1311,
	60, 1311,
	61, 1311,
	62, 1311,
	63, 1311,
	64, 1311,
	68, 1311,
	69, 1311,
	70, 1311,
	71, 1311,
	73, 1311,
	74, 1311,
	75, 1311,
	79, 1311,
	80, 1311,
	81, 1311,
	82, 1311,
	83, 1311,
	84, 1311,
	85, 1311,
	88, 1311,
	89, 1311,
	90, 1311,
	91, 1311,
	92, 1311,
	94, 1311,
	96, 1311,
	97, 1311,
	98, 1311,
	99, 1311,
	100, 1311,
	101, 1311,
	103, 1311,
	104, 1311,
	105, 1311,
	107, 1311,
	108, 1311,
	109, 1311,
	117, 1311,
	118, 1311,
	119, 1311,
	120, 1311,
	121, 1311,
	123, 1311,
	124, 1311,
	125, 1311,
	127, 1311,
	128, 1311,
	129, 1311,
	131, 1311,
	132, 1311,
	133, 1311,
	135, 1311,
	136, 1311,
	137, 1311,
	140, 1311,
	141, 1311,
	142, 1311,
	144, 1311,
	145, 1311,
	147, 1311,
	148, 1311,
	149, 1311,
	151, 1311,
	152, 1311,
	153, 1311,
	154, 1311,
	155, 1311,
	156, 1311,
	157, 1311,
	158, 1311,
	159, 1311,
	160, 1311,
	161, 1311,
	162, 1311,
	163, 1311,
	164, 1311,
	165, 1311,
	166, 1311,
	174, 1311,
	175, 1311,
	176, 1311,
	177, 1311,
	181, 1311,
	183, 1311,
	184, 1311,
	188, 1311,
	189, 1311,
	190, 1311,
	191, 1311,
	192, 1311,
	193, 1311,
	194, 1311,
	195, 1311,
	196, 1311,
	197, 1311,
	198, 1311,
	199, 1311,
	200, 1311,
	201, 1311,
	203, 1311,
	204, 1311,
	206, 1311,
	207, 1311,
	209, 1311,
	210, 1311,
	211, 1311,
	212, 1311,
	213, 1311,
	214, 1311,
	215, 1311,
	216, 1311,
	217, 1311,
	219, 1311,
	220, 1311,
	222, 1311,
	223, 1311,
	224, 1311,
	225, 1311,
	226, 1311,
	231, 1311,
	232, 1311,
	233, 1311,
	234, 1311,
	237, 1311,
	238, 1311,
	239, 1311,
	241, 1311,
	243, 1311,
	244, 1311,
	246, 1311,
	248, 1311,
	249, 1311,
	250, 1311,
	252, 1311,
	256, 1311,
	257, 1311,
	258, 1311,
	259, 1311,
	260, 1311,
	261, 1311,
	263, 1311,
	264, 1311,
	265, 1311,
	267, 1311,
	268, 1311,
	270, 1311,
	271, 1311,
	274, 1311,
	278, 1311,
	279, 1311,
	280, 1311,
	283, 1311,
	284, 1311,
	285, 1311,
	286, 1311,
	288, 1311,
	289, 1311,
	290, 1311,
	291, 1311,
	292, 1311,
	293, 1311,
	294, 1311,
	295, 1311,
	296, 1311,
	297, 1311,
	298, 1311,
	299, 1311,
	300, 1311,
	301, 1311,
	302, 1311,
	303, 1311,
	304, 1311,
	305, 1311,
	306, 1311,
	307, 1311,
	308, 1311,
	309, 1311,
	311, 1311,
	313, 1311,
	314, 1311,
	315, 1311,
	316, 1311,
	317, 1311,
	318, 1311,
	319, 1311,
	320, 1311,
	321, 1311,
	322, 1311,
	323, 1311,
	324, 1311,
	325, 1311,
	327, 1311,
	328, 1311,
	332, 1311,
	333, 1311,
	335, 1311,
	336, 1311,
	337, 1311,
	338, 1311,
	339, 1311,
	342, 1311,
	344, 1311,
	346, 1311,
	347, 1311,
	348, 1311,
	351, 1311,
	352, 1311,
	353, 1311,
	355, 1311,
	357, 1311,
	358, 1311,
	359, 1311,
	360, 1311,
	361, 1311,
	362, 1311,
	363, 1311,
	364, 1311,
	365, 1311,
	366, 1311,
	367, 1311,
	368, 1311,
	369, 1311,
	371, 1311,
	372, 1311,
	373, 1311,
	374, 1311,
	375, 1311,
	376, 1311,
	377, 1311,
	378, 1311,
	379, 1311,
	380, 1311,
	381, 1311,
	382, 1311,
	383, 1311,
	384, 1311,
	385, 1311,
	387, 1311,
	388, 1311,
	390, 1311,
	391, 1311,
	392, 1311,
	393, 1311,
	394, 1311,
	395, 1311,
	396, 1311,
	397, 1311,
	398, 1311,
	399, 1311,
	400, 1311,
	401, 1311,
	402, 1311,
	404, 1311,
	406, 1311,
	407, 1311,
	408, 1311,
	414, 1311,
	416, 1311,
	417, 1311,
	418, 1311,
	419, 1311,
	420, 1311,
	421, 1311,
	422, 1311,
	423, 1311,
	424, 1311,
	425, 1311,
	427, 1311,
	428, 1311,
	429, 1311,
	431, 1311,
	432, 1311,
	433, 1311,
	434, 1311,
	435, 1311,
	436, 1311,
	437, 1311,
	439, 1311,
	440, 1311,
	441, 1311,
	442, 1311,
	443, 1311,
	444, 1311,
	445, 1311,
	446, 1311,
	447, 1311,
	448, 1311,
	449, 1311,
	450, 1311,
	452, 1311,
	453, 1311,
	454, 1311,
	455, 1311,
	456, 1311,
	457, 1311,
	459, 1311,
	460, 1311,
	461, 1311,
	462, 1311,
	463, 1311,
	464, 1311,
	466, 1311,
	467, 1311,
	468, 1311,
	469, 1311,
	470, 1311,
	471, 1311,
	472, 1311,
	473, 1311,
	475, 1311,
	477, 1311,
	478, 1311,
	479, 1311,
	480, 1311,
	481, 1311,
	482, 1311,
	483, 1311,
	484, 1311,
	485, 1311,
	486, 1311,
	487, 1311,
	488, 1311,
	489, 1311,
	490, 1311,
	491, 1311,
	492, 1311,
	494, 1311,
	495, 1311,
	497, 1311,
	498, 1311,
	500, 1311,
	501, 1311,
	502, 1311,
	503, 1311,
	504, 1311,
	505, 1311,
	506, 1311,
	507, 1311,
	508, 1311,
	510, 1311,
	511, 1311,
	512, 1311,
	513, 1311,
	514, 1311,
	516, 1311,
	518, 1311,
	519, 1311,
	520, 1311,
	521, 1311,
	522, 1311,
	523, 1311,
	525, 1311,
	526, 1311,
	527, 1311,
	528, 1311,
	530, 1311,
	531, 1311,
	534, 1311,
	535, 1311,
	536, 1311,
	537, 1311,
	538, 1311,
	539, 1311,
	540, 1311,
	542, 1311,
	545, 1311,
	546, 1311,
	547, 1311,
	548, 1311,
	549, 1311,
	550, 1311,
	552, 1311,
	553, 1311,
	554, 1311,
	555, 1311,
	557, 1311,
	562, 1311,
	563, 1311,
	564, 1311,
	565, 1311,
	566, 1311,
	567, 1311,
	-2, 0,
	-1, 1611,
	1, 549,
	596, 549,
	598, 549,
	600, 549,
	-2, 1546,
	-1, 1614,
	4, 2736,
	11, 2736,
	12, 2736,
	14, 2736,
	15, 2736,
	16, 2736,
	17, 2736,
	18, 2736,
	19, 2736,
	21, 2736,
	22, 2736,
	23, 2736,
	24, 2736,
	25, 2736,
	26, 2736,
	27, 2736,
	29, 2736,
	30, 2736,
	33, 2736,
	34, 2736,
	36, 2736,
	38, 2736,
	41, 2736,
	42, 2736,
	44, 2736,
	45, 2736,
	46, 2736,
	47, 2736,
	48, 2736,
	49, 2736,
	50, 2736,
	51, 2736,
	53, 2736,
	54, 2736,
	55, 2736,
	56, 2736,
	58, 2736,
	59, 2736,
	60, 2736,
	61, 2736,
	62, 2736,
	63, 2736,
	64, 2736,
	67, 2736,
	68, 2736,
	69, 2736,
	70, 2736,
	71, 2736,
	73, 2736,
	74, 2736,
	75, 2736,
	76, 2736,
	79, 2736,
	80, 2736,
	81, 2736,
	82, 2736,
	83, 2736,
	84, 2736,
	85, 2736,
	86, 2736,
	88, 2736,
	89, 2736,
	90, 2736,
	91, 2736,
	92, 2736,
	94, 2736,
	95, 2736,
	96, 2736,
	97, 2736,
	98, 2736,
	99, 2736,
	100, 2736,
	101, 2736,
	103, 2736,
	104, 2736,
	105, 2736,
	106, 2736,
	107, 2736,
	108, 2736,
	109, 2736,
	117, 2736,
	118, 2736,
	119, 2736,
	120, 2736,
	121, 2736,
	123, 2736,
	124, 2736,
	125, 2736,
	127, 2736,
	128, 2736,
	129, 2736,
	131, 2736,
	132, 2736,
	133, 2736,
	135, 2736,
	136, 2736,
	137, 2736,
	140, 2736,
	141, 2736,
	142, 2736,
	144, 2736,
	145, 2736,
	147, 2736,
	148, 2736,
	149, 2736,
	151, 2736,
	152, 2736,
	153, 2736,
	154, 2736,
	155, 2736,
	156, 2736,
	157, 2736,
	158, 2736,
	159, 2736,
	160, 2736,
	161, 2736,
	162, 2736,
	163, 2736,
	164, 2736,
	165, 2736,
	166, 2736,
	170, 2736,
	171, 2736,
	172, 2736,
	173, 2736,
	174, 2736,
	175, 2736,
	176, 2736,
	177, 2736,
	180, 2736,
	181, 2736,
	183, 2736,
	184, 2736,
	187, 2736,
	188, 2736,
	189, 2736,
	190, 2736,
	191, 2736,
	192, 2736,
	193, 2736,
	194, 2736,
	195, 2736,
	196, 2736,
	197, 2736,
	198, 2736,
	199, 2736,
	200, 2736,
	201, 2736,
	203, 2736,
	204, 2736,
	206, 2736,
	207, 2736,
	209, 2736,
	210, 2736,
	211, 2736,
	212, 2736,
	213, 2736,
	214, 2736,
	215, 2736,
	216, 2736,
	217, 2736,
	218, 2736,
	219, 2736,
	220, 2736,
	221, 2736,
	222, 2736,
	223, 2736,
	224, 2736,
	225, 2736,
	226, 2736,
	228, 2736,
	229, 2736,
	231, 2736,
	232, 2736,
	233, 2736,
	234, 2736,
	236, 2736,
	237, 2736,
	238, 2736,
	239, 2736,
	241, 2736,
	243, 2736,
	244, 2736,
	245, 2736,
	246, 2736,
	247, 2736,
	248, 2736,
	249, 2736,
	250, 2736,
	251, 2736,
	252, 2736,
	254, 2736,
	255, 2736,
	256, 2736,
	257, 2736,
	258, 2736,
	259, 2736,
	260, 2736,
	261, 2736,
	263, 2736,
	264, 2736,
	265, 2736,
	267, 2736,
	268, 2736,
	269, 2736,
	270, 2736,
	271, 2736,
	272, 2736,
	274, 2736,
	278, 2736,
	279, 2736,
	280, 2736,
	283, 2736,
	284, 2736,
	285, 2736,
	286, 2736,
	287, 2736,
	288, 2736,
	289, 2736,
	290, 2736,
	291, 2736,
	292, 2736,
	293, 2736,
	294, 2736,
	295, 2736,
	296, 2736,
	297, 2736,
	298, 2736,
	299, 2736,
	300, 2736,
	301, 2736,
	302, 2736,
	303, 2736,
	304, 2736,
	305, 2736,
	306, 2736,
	307, 2736,
	308, 2736,
	309, 2736,
	311, 2736,
	312, 2736,
	313, 2736,
	314, 2736,
	315, 2736,
	316, 2736,
	317, 2736,
	318, 2736,
	319, 2736,
	320, 2736,
	321, 2736,
	322, 2736,
	323, 2736,
	324, 2736,
	325, 2736,
	327, 2736,
	328, 2736,
	331, 2736,
	332, 2736,
	333, 2736,
	335, 2736,
	336, 2736,
	337, 2736,
	338, 2736,
	339, 2736,
	342, 2736,
	346, 2736,
	347, 2736,
	348, 2736,
	349, 2736,
	351, 2736,
	352, 2736,
	353, 2736,
	355, 2736,
	357, 2736,
	358, 2736,
	359, 2736,
	360, 2736,
	361, 2736,
	362, 2736,
	363, 2736,
	364, 2736,
	365, 2736,
	366, 2736,
	367, 2736,
	368, 2736,
	369, 2736,
	371, 2736,
	372, 2736,
	373, 2736,
	374, 2736,
	375, 2736,
	376, 2736,
	377, 2736,
	378, 2736,
	379, 2736,
	380, 2736,
	381, 2736,
	382, 2736,
	383, 2736,
	384, 2736,
	385, 2736,
	387, 2736,
	388, 2736,
	390, 2736,
	391, 2736,
	392, 2736,
	393, 2736,
	394, 2736,
	395, 2736,
	396, 2736,
	397, 2736,
	398, 2736,
	399, 2736,
	400, 2736,
	401, 2736,
	402, 2736,
	404, 2736,
	406, 2736,
	407, 2736,
	408, 2736,
	414, 2736,
	415, 2736,
	416, 2736,
	417, 2736,
	418, 2736,
	419, 2736,
	420, 2736,
	421, 2736,
	422, 2736,
	423, 2736,
	424, 2736,
	425, 2736,
	427, 2736,
	428, 2736,
	429, 2736,
	430, 2736,
	431, 2736,
	432, 2736,
	433, 2736,
	434, 2736,
	435, 2736,
	436, 2736,
	437, 2736,
	438, 2736,
	439, 2736,
	440, 2736,
	441, 2736,
	442, 2736,
	443, 2736,
	444, 2736,
	445, 2736,
	446, 2736,
	447, 2736,
	448, 2736,
	449, 2736,
	450, 2736,
	452, 2736,
	453, 2736,
	454, 2736,
	455, 2736,
	456, 2736,
	457, 2736,
	459, 2736,
	460, 2736,
	461, 2736,
	462, 2736,
	463, 2736,
	464, 2736,
	465, 2736,
	466, 2736,
	467, 2736,
	468, 2736,
	469, 2736,
	470, 2736,
	471, 2736,
	472, 2736,
	473, 2736,
	475, 2736,
	477, 2736,
	478, 2736,
	479, 2736,
	480, 2736,
	481, 2736,
	482, 2736,
	483, 2736,
	484, 2736,
	485, 2736,
	486, 2736,
	487, 2736,
	488, 2736,
	489, 2736,
	490, 2736,
	491, 2736,
	492, 2736,
	494, 2736,
	495, 2736,
	496, 2736,
	497, 2736,
	498, 2736,
	500, 2736,
	501, 2736,
	502, 2736,
	503, 2736,
	504, 2736,
	505, 2736,
	506, 2736,
	507, 2736,
	508, 2736,
	510, 2736,
	511, 2736,
	512, 2736,
	513, 2736,
	514, 2736,
	516, 2736,
	518, 2736,
	519, 2736,
	520, 2736,
	521, 2736,
	522, 2736,
	523, 2736,
	525, 2736,
	526, 2736,
	527, 2736,
	528, 2736,
	530, 2736,
	531, 2736,
	534, 2736,
	535, 2736,
	536, 2736,
	537, 2736,
	538, 2736,
	539, 2736,
	540, 2736,
	542, 2736,
	545, 2736,
	546, 2736,
	547, 2736,
	548, 2736,
	549, 2736,
	550, 2736,
	552, 2736,
	553, 2736,
	554, 2736,
	555, 2736,
	557, 2736,
	562, 2736,
	563, 2736,
	564, 2736,
	565, 2736,
	566, 2736,
	567, 2736,
	568, 2736,
	570, 2736,
	578, 2736,
	579, 2736,
	580, 2736,
	581, 2736,
	582, 2736,
	583, 2736,
	585, 2736,
	586, 2736,
	587, 2736,
	588, 2736,
	589, 2736,
	590, 2736,
	591, 2736,
	592, 2736,
	593, 2736,
	595, 2736,
	598, 2736,
	599, 2736,
	601, 2736,
	602, 2736,
	-2, 0,
	-1, 1619,
	186, 2618,
	515, 2618,
	580, 2618,
	599, 2618,
	-2, 0,
	-1, 1668,
	392, 878,
	457, 878,
	498, 878,
	520, 878,
	-2, 0,
	-1, 1679,
	1, 1383,
	596, 1383,
	598, 1383,
	600, 1383,
	-2, 0,
	-1, 1696,
	1, 873,
	596, 873,
	598, 873,
	600, 873,
	-2, 0,
	-1, 1697,
	1, 917,
	596, 917,
	598, 917,
	600, 917,
	-2, 0,
	-1, 1698,
	1, 925,
	596, 925,
	598, 925,
	600, 925,
	-2, 0,
	-1, 1701,
	1, 882,
	596, 882,
	598, 882,
	600, 882,
	-2, 0,
	-1, 1703,
	1, 888,
	596, 888,
	598, 888,
	600, 888,
	-2, 0,
	-1, 1706,
	1, 884,
	596, 884,
	598, 884,
	600, 884,
	-2, 0,
	-1, 1711,
	1, 898,
	596, 898,
	598, 898,
	600, 898,
	-2, 0,
	-1, 1742,
	1, 2601,
	596, 2601,
	598, 2601,
	599, 2601,
	600, 2601,
	-2, 0,
	-1, 1746,
	1, 970,
	596, 970,
	598, 970,
	600, 970,
	-2, 0,
	-1, 1761,
	1, 1433,
	600, 1433,
	-2, 1438,
	-1, 1764,
	169, 1589,
	182, 1589,
	273, 1589,
	340, 1589,
	-2, 1527,
	-1, 1864,
	150, 1548,
	169, 1548,
	182, 1548,
	240, 1548,
	273, 1548,
	340, 1548,
	350, 1548,
	532, 1548,
	-2, 1995,
	-1, 1925,
	598, 2170,
	-2, 0,
	-1, 1960,
	150, 1548,
	169, 1548,
	182, 1548,
	240, 1548,
	273, 1548,
	340, 1548,
	350, 1548,
	532, 1548,
	-2, 1677,
	-1, 1997,
	515, 2615,
	599, 2615,
	602, 2615,
	-2, 0,
	-1, 2014,
	597, 1818,
	-2, 1806,
	-1, 2046,
	186, 2615,
	599, 2615,
	602, 2615,
	-2, 0,
	-1, 2088,
	1, 690,
	600, 690,
	-2, 1438,
	-1, 2228,
	221, 259,
	-2, 2318,
	-1, 2229,
	221, 260,
	-2, 311,
	-1, 2336,
	1, 875,
	596, 875,
	598, 875,
	600, 875,
	-2, 0,
	-1, 2337,
	1, 919,
	596, 919,
	598, 919,
	600, 919,
	-2, 0,
	-1, 2338,
	1, 927,
	596, 927,
	598, 927,
	600, 927,
	-2, 0,
	-1, 2339,
	1, 972,
	596, 972,
	598, 972,
	600, 972,
	-2, 0,
	-1, 2380,
	1, 900,
	596, 900,
	598, 900,
	600, 900,
	-2, 0,
	-1, 2398,
	1, 955,
	596, 955,
	598, 955,
	600, 955,
	-2, 0,
	-1, 2443,
	436, 1616,
	437, 1616,
	-2, 1851,
	-1, 2474,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1871,
	-1, 2475,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1872,
	-1, 2476,
	95, 0,
	254, 0,
	255, 0,
	582, 0,
	583, 0,
	-2, 1873,
	-1, 2477,
	95, 0,
	254, 0,
	255, 0,
	582, 0,
	583, 0,
	-2, 1874,
	-1, 2478,
	95, 0,
	254, 0,
	255, 0,
	582, 0,
	583, 0,
	-2, 1875,
	-1, 2479,
	95, 0,
	254, 0,
	255, 0,
	582, 0,
	583, 0,
	-2, 1876,
	-1, 2480,
	95, 0,
	254, 0,
	255, 0,
	582, 0,
	583, 0,
	-2, 1877,
	-1, 2481,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1878,
	-1, 2493,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1890,
	-1, 2494,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1891,
	-1, 2495,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1892,
	-1, 2499,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1899,
	-1, 2505,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1903,
	-1, 2507,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1911,
	-1, 2508,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1912,
	-1, 2509,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1913,
	-1, 2510,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1914,
	-1, 2684,
	5, 2322,
	186, 2181,
	597, 2319,
	-2, 2310,
	-1, 2685,
	186, 2182,
	-2, 2687,
	-1, 2686,
	186, 2183,
	-2, 2507,
	-1, 2687,
	186, 2184,
	-2, 2392,
	-1, 2688,
	186, 2185,
	-2, 2447,
	-1, 2689,
	186, 2186,
	-2, 2492,
	-1, 2690,
	186, 2187,
	-2, 2613,
	-1, 2691,
	186, 2188,
	-2, 1978,
	-1, 2762,
	1, 1678,
	2, 1678,
	106, 1678,
	150, 1678,
	169, 1678,
	182, 1678,
	187, 1678,
	205, 1678,
	208, 1678,
	236, 1678,
	240, 1678,
	251, 1678,
	269, 1678,
	273, 1678,
	312, 1678,
	340, 1678,
	344, 1678,
	350, 1678,
	426, 1678,
	430, 1678,
	532, 1678,
	543, 1678,
	559, 1678,
	560, 1678,
	561, 1678,
	571, 1678,
	596, 1678,
	598, 1678,
	600, 1678,
	602, 1678,
	-2, 1677,
	-1, 2775,
	597, 2291,
	-2, 2305,
	-1, 2777,
	1, 328,
	559, 328,
	-2, 1575,
	-1, 2806,
	597, 1817,
	-2, 1807,
	-1, 2991,
	1, 1286,
	421, 1250,
	459, 1250,
	574, 1250,
	596, 1286,
	598, 1286,
	600, 1286,
	-2, 1575,
	-1, 3177,
	345, 1619,
	-2, 2726,
	-1, 3178,
	345, 1620,
	-2, 2598,
	-1, 3182,
	436, 2247,
	437, 2247,
	-2, 1976,
	-1, 3183,
	436, 2251,
	437, 2251,
	-2, 1977,
	-1, 3184,
	436, 2248,
	437, 2248,
	-2, 1976,
	-1, 3185,
	436, 2252,
	437, 2252,
	-2, 1977,
	-1, 3198,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1901,
	-1, 3199,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1905,
	-1, 3205,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1907,
	-1, 3428,
	1, 685,
	596, 685,
	598, 685,
	600, 685,
	-2, 1438,
	-1, 3593,
	43, 2282,
	-2, 1034,
	-1, 3598,
	1, 1286,
	596, 1286,
	598, 1286,
	600, 1286,
	-2, 1575,
	-1, 3708,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1909,
	-1, 3715,
	245, 0,
	247, 0,
	331, 0,
	-2, 1928,
	-1, 3783,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1957,
	-1, 3784,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1958,
	-1, 3785,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1959,
	-1, 3789,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1963,
	-1, 3790,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1964,
	-1, 3791,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1965,
	-1, 3838,
	597, 2292,
	-2, 2306,
	-1, 4012,
	599, 2844,
	-2, 1501,
	-1, 4072,
	245, 0,
	247, 0,
	331, 0,
	-2, 1929,
	-1, 4075,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1932,
	-1, 4076,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1934,
	-1, 4174,
	599, 2307,
	-2, 1321,
	-1, 4327,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1933,
	-1, 4328,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1935,
	-1, 4339,
	245, 0,
	-2, 1968,
	-1, 4526,
	245, 0,
	-2, 1969,
	-1, 4726,
	50, 0,
	218, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 2690,
}

const sqlPrivate = 57344

const sqlLast = 131783

var sqlAct = [...]int{
	272, 4843, 3582, 2057, 4922, 3336, 4719, 4830, 2868, 4595,
	4718, 3079, 3066, 4567, 4784, 4448, 4559, 4707, 4725, 4736,
	4859, 4388, 3581, 2138, 4616, 4591, 4170, 4675, 2225, 4652,
	1242, 4694, 4672, 4737, 2912, 4738, 4797, 4455, 4479, 4370,
	4433, 1253, 4530, 3748, 4724, 4278, 4283, 4219, 4348, 4244,
	2301, 3700, 4316, 1327, 4393, 2937, 2453, 3996, 4004, 3036,
	4258, 3449, 3615, 4265, 1316, 3932, 4171, 3191, 3509, 1073,
	4055, 4267, 1119, 701, 2717, 812, 4151, 4288, 4493, 4464,
	2312, 1323, 2522, 3609, 2950, 3577, 3977, 2070, 2461, 1773,
	3959, 3452, 2274, 1635, 2146, 1064, 2002, 2001, 1390, 3103,
	3961, 812, 3656, 772, 3658, 3022, 3088, 3055, 3380, 3559,
	3558, 3841, 3090, 3342, 3566, 3359, 1482, 3351, 4344, 3319,
	3098, 1966, 2752, 3052, 2454, 885, 4, 4054, 712, 1072,
	179, 1318, 3050, 2310, 889, 3340, 1935, 3087, 3081, 3067,
	3318, 4111, 2212, 2214, 2157, 4831, 3471, 2998, 2870, 3809,
	2755, 2458, 2173, 2600, 4531, 1911, 1872, 2754, 2535, 3175,
	3446, 880, 1575, 1842, 1519, 1489, 108, 1321, 807, 3097,
	2213, 2967, 2757, 3026, 768, 2208, 2189, 1233, 1123, 2196,
	1371, 2130, 3037, 2126, 1761, 2068, 1295, 2735, 1955, 2591,
	2602, 2519, 1128, 2116, 2442, 266, 3387, 1309, 1126, 2425,
	2714, 1936, 2423, 2789, 1676, 3579, 745, 1612, 265, 1633,
	1578, 2261, 3060, 813, 814, 2893, 4617, 3091, 809, 954,
	2911, 1906, 688, 179, 2856, 2788, 710, 39, 1358, 1952,
	2744, 3953, 1236, 2725, 1945, 2594, 3032, 1215, 2572, 1250,
	1856, 2646, 2680, 1774, 1775, 1711, 188, 2424, 753, 1306,
	1696, 2222, 764, 2287, 1232, 2426, 2260, 1514, 1125, 1603,
	2145, 189, 4785, 4844, 2447, 1104, 705, 3033, 44, 43,
	818, 728, 1213, 1780, 861, 41, 32, 30, 28, 3228,
	802, 1760, 1525, 821, 702, 1238, 713, 975, 3823, 1610,
	3824, 3338, 3222, 4363, 862, 2059, 818, 2059, 1788, 1789,
	4765, 1821, 1822, 1823, 1832, 1833, 1834, 4132, 2059, 821,
	4935, 1248, 2059, 4925, 2734, 2059, 2059, 3634, 4909, 904,
	1825, 1819, 2734, 4908, 1068, 4898, 4879, 2734, 1791, 2234,
	4392, 4877, 4816, 3625, 3624, 4392, 2234, 1838, 4773, 4762,
	4760, 2234, 4774, 2734, 2734, 4757, 4360, 4754, 2234, 4758,
	1102, 4755, 1230, 3413, 1844, 4722, 4721, 1069, 4720, 2234,
	2234, 4715, 2080, 1790, 4714, 2080, 4705, 4703, 2080, 3411,
	4392, 4392, 4700, 1810, 4670, 4641, 4467, 4634, 4392, 2797,
	1068, 2734, 1807, 4633, 3289, 3290, 3396, 2734, 4628, 4627,
	1702, 1642, 4392, 4392, 4621, 1518, 4587, 4528, 2234, 2727,
	4235, 2797, 4510, 1216, 1216, 4507, 4041, 1058, 4504, 2234,
	4457, 4411, 4392, 4410, 4458, 2234, 4399, 2234, 1273, 1367,
	2234, 4398, 3289, 3290, 4391, 4392, 1049, 4355, 4392, 3634,
	4329, 2234, 4307, 2077, 2797, 4296, 2080, 1245, 4214, 3634,
	4197, 1048, 2734, 2817, 2734, 4074, 1367, 1628, 4020, 2797,
	2311, 1266, 3651, 2234, 3190, 1788, 1789, 1813, 1814, 1815,
	1816, 4014, 3975, 2734, 3833, 3651, 3976, 1796, 3834, 1063,
	3831, 3816, 3732, 2077, 3832, 2734, 2234, 3813, 1819, 3728,
	3650, 4642, 3641, 2734, 3651, 1791, 3642, 3335, 4532, 4523,
	3330, 2734, 3289, 3290, 2734, 3329, 3280, 1244, 3278, 2734,
	3281, 4511, 3279, 3270, 1217, 1829, 3268, 3271, 1839, 2793,
	2734, 1844, 3289, 3290, 3239, 1818, 1820, 3237, 2734, 236,
	1790, 3107, 3077, 3238, 3076, 2080, 2297, 2840, 2297, 2796,
	2234, 2734, 1835, 2797, 1836, 2786, 2779, 4467, 1267, 2734,
	2234, 1805, 1806, 2733, 2597, 2296, 2080, 2734, 93, 2297,
	2234, 3813, 1219, 3295, 1220, 2726, 4276, 4235, 2077, 1827,
	1267, 4198, 4041, 3642, 2940, 2150, 2855, 238, 2095, 2058,
	1527, 1527, 2074, 3028, 1811, 2233, 2734, 2960, 2853, 1931,
	1513, 3915, 3289, 3290, 3703, 3307, 3308, 3309, 3677, 1246,
	1953, 3295, 2201, 3626, 2771, 2770, 1678, 2769, 2768, 2767,
	1221, 1218, 1057, 1056, 4070, 1055, 1054, 1053, 1130, 1052,
	236, 1051, 3627, 1518, 1047, 1046, 237, 1045, 1837, 1044,
	1788, 1789, 1043, 1042, 1796, 1041, 1040, 1527, 1039, 230,
	4747, 1038, 3227, 2598, 3149, 4127, 1826, 1037, 231, 1788,
	1789, 1036, 1035, 1034, 1033, 1032, 1031, 1841, 1030, 1012,
	1791, 952, 951, 950, 2060, 949, 2060, 3304, 238, 948,
	3305, 3295, 1819, 1788, 1789, 190, 947, 2060, 4086, 1791,
	946, 2060, 1818, 1820, 2060, 2060, 945, 944, 943, 942,
	1539, 3295, 941, 940, 939, 1790, 938, 937, 936, 935,
	934, 933, 932, 1791, 931, 1844, 930, 929, 3305, 928,
	927, 926, 1817, 925, 1790, 924, 923, 237, 922, 2077,
	921, 920, 3289, 3290, 1810, 2599, 919, 2596, 918, 917,
	907, 906, 902, 901, 895, 1812, 894, 879, 1790, 878,
	835, 1811, 834, 1841, 833, 832, 824, 823, 822, 788,
	779, 778, 777, 759, 260, 259, 1332, 1128, 258, 3624,
	257, 3295, 1830, 256, 255, 254, 190, 253, 252, 2629,
	251, 250, 249, 248, 247, 246, 245, 3855, 3305, 1267,
	244, 1841, 243, 242, 1128, 1128, 1128, 241, 240, 239,
	3827, 3652, 1956, 1843, 3383, 2077, 2372, 3250, 3305, 1796,
	3233, 3224, 1393, 3131, 3008, 2801, 1393, 2776, 1813, 1814,
	1815, 1816, 3333, 1332, 1841, 3045, 2761, 2627, 1796, 2124,
	1787, 3306, 2613, 2611, 2079, 2726, 3311, 1979, 4290, 2304,
	3289, 3290, 1883, 1521, 1379, 1252, 4746, 1128, 4743, 1128,
	4535, 1128, 1796, 2234, 1267, 2827, 4723, 1332, 236, 236,
	236, 1841, 3334, 1375, 1376, 1377, 2058, 4702, 1362, 3306,
	2077, 150, 4602, 2074, 2418, 1828, 1818, 1820, 3305, 4520,
	1874, 1841, 1497, 1332, 4514, 1802, 1803, 1809, 1831, 1808,
	1804, 2601, 1801, 1799, 1800, 1792, 1793, 1794, 1795, 1797,
	1798, 3295, 1812, 1332, 1492, 4096, 238, 238, 238, 4095,
	1332, 4512, 1538, 4383, 1914, 3304, 236, 4343, 1128, 4297,
	1128, 1913, 4275, 2303, 1332, 4138, 4109, 4108, 3063, 1914,
	1128, 4102, 1128, 1984, 1391, 1811, 1913, 4101, 1490, 3306,
	4100, 4093, 4092, 4090, 4085, 4082, 1300, 1303, 1917, 1584,
	1587, 1841, 4081, 1533, 3974, 237, 237, 237, 1517, 3306,
	1843, 1354, 3859, 1912, 238, 3858, 1704, 1313, 230, 230,
	230, 3857, 1356, 3980, 3837, 3804, 3803, 231, 231, 231,
	1332, 3291, 3292, 3293, 3294, 3296, 3297, 1876, 1386, 1502,
	1479, 1484, 3802, 3724, 3719, 1339, 3378, 3326, 3317, 1646,
	1128, 3288, 3285, 1128, 190, 190, 190, 2595, 1841, 3295,
	3284, 3282, 1487, 237, 3277, 3276, 3300, 3298, 3299, 3291,
	3292, 3293, 3294, 3296, 3297, 1173, 230, 3275, 3272, 3306,
	3269, 818, 1841, 179, 179, 231, 1348, 1526, 2810, 1875,
	3249, 1873, 1881, 4292, 821, 3232, 3225, 3223, 1573, 1516,
	1515, 1800, 1792, 1793, 1794, 1795, 1797, 1798, 3078, 2762,
	2584, 1787, 190, 1817, 1229, 1615, 1617, 1786, 1647, 1069,
	1874, 2277, 3047, 2241, 1632, 1524, 1340, 1531, 4929, 1537,
	2239, 1841, 4869, 4868, 3981, 1590, 1812, 3298, 3299, 3291,
	3292, 3293, 3294, 3296, 3297, 4832, 3913, 4783, 4536, 1128,
	1128, 1128, 1128, 1128, 1128, 1128, 1128, 4781, 3299, 3291,
	3292, 3293, 3294, 3296, 3297, 1254, 3305, 1362, 2799, 3750,
	1362, 3289, 3290, 4662, 4594, 4578, 4575, 1071, 4574, 4573,
	3331, 4553, 1128, 4552, 4550, 4534, 4533, 4508, 1128, 4492,
	4491, 2525, 4477, 4474, 1843, 4473, 1626, 4468, 1631, 236,
	1121, 4407, 1606, 4378, 4341, 4324, 4323, 4304, 1640, 4303,
	1645, 4261, 4236, 4126, 1765, 1532, 4107, 4042, 4034, 3301,
	3302, 3303, 4031, 3901, 3900, 3883, 3300, 3298, 3299, 3291,
	3292, 3293, 3294, 3296, 3297, 3882, 3880, 3819, 3403, 1841,
	3807, 3714, 1861, 73, 3653, 1652, 3635, 238, 3601, 3526,
	3484, 1627, 3451, 3405, 3254, 3253, 3248, 3214, 3021, 1720,
	74, 1759, 1920, 1641, 1919, 1918, 1915, 1527, 1907, 1794,
	1795, 1797, 1798, 3375, 1905, 1703, 78, 2808, 3981, 2807,
	2773, 2531, 2766, 1801, 1799, 1800, 1792, 1793, 1794, 1795,
	1797, 1798, 2732, 1128, 1128, 1128, 237, 2609, 1860, 1128,
	1978, 1863, 1934, 236, 1929, 236, 1250, 1928, 1250, 230,
	1792, 1793, 1794, 1795, 1797, 1798, 87, 3306, 231, 1669,
	1927, 1926, 1925, 1393, 1924, 3046, 1923, 1922, 1933, 1921,
	1705, 1902, 1901, 1128, 1900, 1899, 812, 1898, 1897, 1896,
	3295, 1895, 2019, 812, 1894, 190, 4291, 1893, 1069, 1766,
	1892, 238, 1891, 238, 1890, 1889, 887, 1888, 1329, 3291,
	3292, 3293, 3294, 3296, 3297, 1887, 1876, 1862, 49, 1859,
	107, 1762, 1854, 1942, 2064, 93, 104, 2066, 1248, 1347,
	1248, 1271, 1770, 2071, 2305, 1262, 1604, 2073, 4264, 1049,
	1769, 4134, 2076, 4078, 3854, 3830, 3822, 3236, 1764, 2764,
	237, 1988, 237, 1916, 1048, 4361, 4136, 1992, 3853, 1609,
	1783, 1784, 1875, 230, 3401, 230, 1857, 1989, 1128, 3630,
	1974, 1963, 231, 1332, 231, 2628, 1788, 1789, 3289, 3290,
	1939, 1940, 2115, 4866, 94, 4200, 1372, 4858, 2115, 179,
	1374, 2938, 1128, 4576, 4469, 1980, 2115, 4460, 4459, 3062,
	1393, 190, 236, 4295, 4238, 1367, 1791, 1216, 4237, 4465,
	1908, 1909, 4199, 2140, 3300, 3298, 3299, 3291, 3292, 3293,
	3294, 3296, 3297, 2626, 1069, 2113, 4129, 4045, 2612, 2610,
	2107, 2106, 4044, 4043, 2115, 2117, 4739, 3825, 3655, 1982,
	2916, 1790, 2086, 3654, 3637, 3636, 4812, 1964, 236, 4810,
	238, 1998, 1362, 4515, 1245, 1373, 1245, 1987, 2047, 2184,
	2049, 2122, 3984, 1914, 1367, 1956, 1368, 3701, 2101, 2085,
	1913, 3927, 1367, 1983, 3274, 1757, 3273, 3196, 3898, 2898,
	4513, 818, 1668, 1954, 1370, 3453, 236, 1970, 818, 3584,
	1961, 3583, 1885, 3487, 821, 1028, 238, 2965, 1677, 237,
	4795, 821, 2302, 4456, 1993, 3518, 2062, 1932, 4382, 1721,
	4769, 2042, 230, 4750, 1244, 4735, 1244, 1897, 3567, 2198,
	3104, 231, 2125, 236, 1897, 236, 2082, 3646, 1973, 1972,
	97, 1678, 1332, 1332, 238, 1971, 1969, 1968, 1967, 2215,
	1029, 1958, 1393, 2216, 3988, 237, 3971, 2328, 190, 3929,
	3924, 3906, 2110, 3674, 1999, 3426, 2088, 2309, 230, 4345,
	3338, 3752, 2597, 3242, 2592, 4185, 4402, 231, 2806, 2946,
	4374, 238, 4182, 238, 1930, 1910, 236, 3575, 4744, 2150,
	2271, 1583, 1509, 237, 1364, 187, 100, 3875, 1343, 103,
	2895, 1299, 4759, 4756, 190, 3620, 230, 1656, 2957, 2954,
	2952, 4568, 2180, 4279, 2188, 231, 1246, 2193, 1246, 1608,
	4669, 4546, 2183, 2084, 3456, 236, 3893, 4813, 3130, 3085,
	237, 3059, 237, 888, 238, 2226, 2231, 3550, 150, 2945,
	2278, 3000, 190, 230, 1882, 230, 4405, 1332, 4814, 1332,
	2091, 1332, 231, 4401, 231, 4745, 4380, 2872, 874, 3695,
	2894, 2598, 3430, 3942, 4848, 2118, 2108, 1332, 1332, 1228,
	4429, 4187, 1558, 238, 2235, 1369, 1550, 2112, 1332, 190,
	1026, 190, 2841, 237, 4924, 1024, 2800, 4582, 2433, 1609,
	1332, 1022, 1332, 1332, 1332, 2156, 230, 1008, 2102, 154,
	1020, 4422, 1511, 1719, 2386, 231, 1017, 4413, 2218, 2219,
	3293, 3294, 3296, 3297, 191, 2111, 812, 2220, 2384, 3056,
	4228, 4227, 237, 3940, 2267, 1374, 4166, 3939, 3931, 3921,
	3920, 3941, 190, 1365, 2178, 230, 3878, 3918, 1128, 818,
	3917, 2327, 1366, 2599, 231, 2596, 2859, 2431, 2314, 3905,
	2859, 3870, 821, 2272, 3869, 3556, 3555, 1516, 1515, 1559,
	4159, 2857, 3395, 875, 2284, 2857, 3247, 3246, 2089, 3245,
	2875, 190, 3244, 1128, 3200, 2963, 2962, 2959, 2948, 2932,
	2177, 2174, 1067, 2192, 2931, 4181, 3402, 1654, 2307, 2926,
	1373, 2925, 2417, 2924, 2903, 2902, 2863, 2787, 4403, 2332,
	4183, 2232, 4375, 2506, 1763, 751, 3432, 1128, 2292, 1128,
	2642, 2641, 1718, 1069, 4160, 1069, 1128, 2463, 751, 2019,
	2019, 1393, 2814, 1128, 1128, 1128, 1128, 1128, 1128, 1128,
	1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128,
	1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128,
	1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 2253,
	1128, 2252, 1128, 1128, 1128, 1128, 2294, 2791, 2281, 2896,
	3453, 4849, 1066, 1357, 1014, 3675, 3516, 2315, 2320, 4438,
	4322, 1374, 1606, 1077, 2289, 2290, 2289, 2286, 1128, 2216,
	2896, 1554, 1128, 1128, 2435, 2432, 1368, 2302, 2415, 2601,
	1128, 2422, 1348, 1596, 1128, 1595, 1128, 1128, 3155, 3486,
	2013, 818, 2230, 1717, 1393, 2459, 2460, 1367, 2324, 2410,
	1128, 1128, 1128, 1128, 821, 1285, 1128, 1128, 1128, 1128,
	1128, 1128, 1128, 1128, 2357, 2319, 2298, 2398, 2299, 1608,
	2251, 1755, 2147, 2462, 2521, 2920, 1373, 1594, 4144, 1593,
	2336, 1567, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128,
	1128, 2347, 2900, 2848, 2373, 1128, 2573, 2574, 1798, 2430,
	3297, 2874, 2913, 2914, 3211, 1512, 2143, 1250, 2913, 2914,
	2573, 2589, 1068, 4201, 1393, 1670, 2913, 2914, 2592, 2380,
	4853, 2186, 2397, 1250, 2407, 3144, 2521, 3110, 2344, 2886,
	2778, 1368, 2446, 3209, 1649, 2148, 2149, 2637, 1572, 1128,
	1393, 4143, 4184, 2390, 1364, 2595, 2529, 4155, 3158, 2378,
	1734, 2433, 4156, 2527, 2119, 2120, 2683, 2683, 2697, 2409,
	2573, 750, 4161, 2718, 2720, 2144, 2604, 3517, 3173, 2724,
	1700, 4741, 2419, 2421, 750, 4561, 2427, 2434, 1666, 1248,
	1756, 2420, 1700, 4813, 2537, 1730, 1069, 1049, 2341, 2517,
	1049, 1049, 2588, 877, 876, 1248, 1069, 1678, 2749, 2335,
	1069, 700, 2450, 4881, 4158, 2451, 2452, 2885, 1678, 1768,
	2431, 2956, 2291, 2774, 1944, 3950, 4854, 1346, 2515, 1974,
	2741, 4162, 3684, 1258, 3683, 1369, 2822, 695, 3146, 2601,
	1713, 2158, 2826, 4226, 3188, 2337, 1963, 915, 2345, 2844,
	3429, 1332, 1332, 2955, 2953, 2951, 2837, 1697, 2873, 1364,
	3919, 4179, 1650, 3890, 2162, 4439, 2533, 786, 2639, 2416,
	2846, 3916, 2775, 2640, 1216, 1255, 2643, 4437, 2644, 2645,
	3862, 752, 3951, 4435, 2586, 3206, 1699, 2175, 1655, 4321,
	3741, 3157, 2763, 1365, 752, 1393, 2794, 2790, 1699, 1069,
	179, 2429, 1366, 2740, 1065, 1948, 4563, 2847, 2338, 2830,
	3207, 2748, 1716, 2753, 3212, 1245, 2759, 2760, 1260, 3503,
	1698, 2159, 3154, 3902, 3849, 3949, 3562, 2858, 2845, 2019,
	4434, 1245, 2679, 2836, 2709, 2692, 4856, 1018, 4827, 2722,
	1369, 1613, 1018, 2730, 2731, 1362, 2813, 2838, 1018, 2862,
	2746, 2747, 2742, 2150, 1951, 3554, 4742, 1019, 4436, 1916,
	2385, 4157, 2181, 1018, 1579, 1961, 2802, 2862, 2432, 1946,
	2511, 2899, 1393, 3514, 2383, 1244, 3504, 784, 3187, 2131,
	2833, 3888, 2958, 2150, 2132, 1259, 2923, 1949, 1332, 2901,
	2512, 1244, 2238, 2237, 872, 2513, 871, 4884, 1365, 2518,
	4167, 4168, 3495, 2406, 2995, 2176, 1731, 1366, 2864, 1128,
	1128, 1553, 1128, 3180, 3181, 2832, 1577, 2854, 2821, 3502,
	1908, 1909, 2824, 2809, 2825, 2906, 2202, 3156, 2163, 4862,
	1947, 2209, 4835, 4802, 4638, 812, 2839, 1332, 2408, 2812,
	2829, 4834, 2430, 1086, 2861, 1284, 2601, 2016, 4912, 2831,
	2816, 2131, 908, 2785, 3678, 2921, 2132, 3563, 2949, 3496,
	4740, 2996, 3353, 2170, 4177, 2153, 4060, 1246, 1332, 4059,
	3070, 2905, 3617, 825, 3560, 3152, 2936, 1367, 1556, 4180,
	3618, 2211, 1332, 1246, 1332, 3099, 3043, 1060, 2059, 1002,
	2889, 4648, 2699, 2842, 2164, 2165, 2131, 2133, 4366, 1332,
	3208, 2132, 3494, 2904, 2994, 4709, 2939, 4710, 3738, 3440,
	3210, 1015, 896, 1062, 2137, 3903, 2922, 2343, 2160, 2867,
	2171, 264, 2154, 3964, 2930, 2928, 2199, 2877, 2880, 2927,
	3003, 4855, 3962, 2860, 3039, 3005, 2964, 3202, 2210, 3111,
	3112, 2992, 2993, 4569, 2203, 1732, 4589, 1128, 1950, 1579,
	3118, 3119, 3120, 3431, 2915, 2917, 2918, 2919, 1653, 1061,
	1002, 2161, 3617, 2169, 3102, 2152, 2929, 2013, 2013, 2133,
	2503, 3101, 2007, 4562, 2934, 3105, 1728, 3468, 2944, 3529,
	749, 696, 1367, 2859, 1062, 2514, 2137, 2134, 2139, 2520,
	3739, 2379, 1679, 785, 3025, 2516, 179, 4776, 2878, 818,
	3001, 1256, 1510, 3128, 2528, 1003, 1269, 4777, 3084, 1128,
	3966, 4801, 821, 4253, 2133, 1128, 1128, 1516, 3006, 3108,
	2777, 4636, 2172, 4178, 3113, 1903, 3114, 916, 3074, 2187,
	818, 2137, 2185, 3019, 3467, 3009, 3072, 3399, 3012, 1733,
	3014, 1651, 787, 821, 3029, 3965, 783, 1665, 1667, 2187,
	2185, 2199, 2141, 3030, 1257, 4056, 2199, 3134, 2340, 2134,
	2139, 3352, 697, 4334, 4637, 3160, 4502, 3162, 4824, 2334,
	2135, 1128, 1128, 3065, 1729, 3075, 1003, 1128, 1767, 2182,
	4860, 3086, 2166, 4692, 2184, 3061, 1345, 3132, 3061, 3133,
	1128, 1128, 3472, 3106, 4680, 3073, 1128, 1128, 3889, 909,
	910, 3561, 1128, 3054, 2134, 2139, 4211, 4318, 2583, 2195,
	1002, 698, 3127, 699, 3478, 1948, 3441, 3125, 2141, 4494,
	826, 827, 2179, 1853, 718, 3001, 3252, 3137, 2745, 3139,
	3135, 3141, 4495, 3136, 1062, 3138, 2194, 3140, 2501, 1068,
	4885, 2504, 2135, 2758, 3474, 3754, 2601, 1128, 1128, 1128,
	4061, 4872, 4263, 1128, 2186, 4050, 4870, 3203, 2167, 897,
	898, 2206, 3150, 1128, 1951, 4496, 3168, 4231, 3850, 3142,
	2190, 3476, 3179, 1274, 2935, 4268, 3697, 3171, 3163, 2743,
	1128, 3165, 4596, 4685, 4615, 1684, 2129, 2135, 4861, 3979,
	2141, 3170, 2500, 3169, 4269, 4476, 1004, 1949, 1326, 2148,
	2149, 4230, 2446, 3174, 4229, 4002, 3189, 4913, 3473, 1777,
	3605, 2092, 4800, 2259, 3477, 3963, 4057, 1941, 2204, 1272,
	1265, 687, 3230, 3231, 4863, 4105, 1003, 3234, 4498, 2191,
	1778, 4254, 2449, 2151, 2103, 2141, 4400, 2183, 3793, 4485,
	3226, 4890, 4545, 2127, 4317, 3388, 4003, 2060, 3935, 3964,
	4775, 4497, 3922, 3874, 3447, 1504, 3606, 2100, 3962, 3666,
	3597, 2205, 1069, 829, 828, 3201, 3843, 1004, 3659, 4499,
	3443, 3044, 1128, 1128, 1128, 1128, 3038, 3023, 2285, 1777,
	2279, 2273, 1128, 1128, 1128, 2439, 2128, 1128, 3435, 1542,
	2265, 2879, 1772, 3666, 911, 912, 3361, 1128, 1250, 1393,
	2245, 2136, 3659, 1128, 2244, 1128, 3345, 3346, 3737, 4597,
	1547, 1276, 758, 1776, 1250, 1580, 1005, 3808, 3235, 3866,
	3844, 4653, 3698, 2862, 1777, 4618, 2391, 830, 831, 4005,
	2096, 4284, 1393, 2098, 3020, 4062, 3966, 2013, 1287, 4454,
	4452, 1059, 1621, 1006, 1250, 4377, 3845, 1393, 3842, 3459,
	3241, 3455, 3454, 3194, 899, 900, 1634, 3172, 1950, 2325,
	3970, 3328, 3821, 3350, 2016, 2016, 3661, 2736, 2019, 3368,
	1248, 3965, 1393, 2136, 3381, 2099, 3349, 3347, 1707, 1706,
	1778, 3660, 4319, 1776, 1701, 2502, 1248, 1005, 1332, 2907,
	2784, 3362, 2783, 2782, 2781, 3416, 1007, 2780, 3418, 3419,
	3661, 1066, 2739, 3422, 1602, 3423, 4266, 3424, 1588, 3027,
	1128, 4556, 1660, 1600, 1006, 3660, 1248, 1004, 2136, 4449,
	4063, 3344, 1589, 2440, 1128, 4106, 1853, 3355, 1776, 3794,
	4245, 914, 2140, 4389, 1332, 3436, 3437, 2883, 3795, 2019,
	3382, 3360, 3357, 2738, 3881, 3647, 2283, 3570, 2737, 4889,
	1778, 4821, 4593, 3871, 3371, 4364, 3457, 1128, 3377, 3461,
	4301, 3960, 2999, 3412, 3400, 3397, 2140, 1007, 3109, 3384,
	3004, 3657, 3002, 1332, 3365, 1613, 3356, 1613, 3530, 3427,
	2313, 3366, 3323, 3324, 3325, 3420, 3374, 3369, 3370, 2007,
	2007, 3386, 1362, 3433, 3404, 1332, 1245, 1332, 3339, 3367,
	3354, 2215, 1659, 3289, 3290, 4598, 3307, 3308, 3309, 4659,
	3458, 4372, 1245, 3463, 4385, 3867, 3465, 2198, 4500, 1393,
	4557, 3372, 3394, 3373, 4501, 4069, 2198, 1685, 4384, 4666,
	1332, 3532, 4300, 3534, 1332, 3448, 3538, 1005, 4390, 4650,
	3544, 3963, 1245, 3444, 4112, 3810, 3409, 3846, 3390, 3391,
	3392, 3393, 2608, 1988, 4825, 1751, 1244, 4373, 3489, 1332,
	4687, 4826, 2908, 2909, 1006, 3519, 3493, 3512, 3406, 3407,
	4823, 3408, 1244, 1332, 3389, 1332, 2402, 4761, 3304, 1393,
	3417, 3363, 3364, 4585, 3421, 4577, 812, 1332, 4441, 4340,
	4104, 3667, 3662, 3663, 3664, 3665, 3428, 4660, 1332, 757,
	3580, 3969, 1244, 3527, 1753, 1750, 3320, 3434, 4558, 3713,
	3672, 1748, 3507, 1332, 3872, 3321, 1725, 1007, 3671, 1723,
	3410, 1695, 1693, 3283, 3414, 3667, 3662, 3663, 3664, 3665,
	1250, 1691, 3213, 1689, 3613, 1687, 1681, 3024, 2947, 1675,
	1673, 3099, 2897, 3475, 1601, 1598, 2811, 3589, 1246, 3485,
	3099, 3596, 2411, 1599, 1981, 1332, 1332, 1977, 1754, 3498,
	1637, 2382, 2349, 2224, 1246, 1317, 3565, 3693, 3568, 3692,
	3442, 913, 3295, 1772, 3501, 3148, 3147, 3116, 2428, 1712,
	1332, 2352, 3611, 2264, 3604, 2243, 2048, 3531, 3479, 3480,
	3520, 3481, 3482, 3483, 1246, 1886, 3528, 1648, 3622, 3633,
	3515, 3384, 1248, 1571, 3552, 2607, 3541, 3499, 3547, 3492,
	2930, 3500, 4734, 4212, 3926, 1485, 3925, 4213, 1496, 1317,
	4196, 4649, 4282, 4218, 4209, 1393, 4148, 4277, 1393, 4001,
	3992, 3506, 3553, 3508, 2016, 3938, 3564, 3311, 3676, 3521,
	3522, 3923, 3523, 3524, 3525, 3557, 3896, 1016, 3894, 3873,
	3600, 3595, 2905, 3585, 3572, 4798, 2404, 3607, 3551, 3057,
	2403, 1128, 3734, 3049, 3594, 3614, 3540, 1128, 1128, 3593,
	3546, 1128, 1128, 1128, 3592, 1128, 179, 179, 3669, 3305,
	3042, 818, 1991, 3031, 1128, 2019, 1317, 1317, 1752, 1749,
	3649, 3610, 3017, 1128, 821, 1747, 3645, 3016, 1128, 1069,
	1724, 2997, 3619, 1722, 1393, 1694, 1692, 3621, 3631, 3632,
	3668, 3628, 4789, 1128, 2104, 1690, 3691, 1688, 1944, 1686,
	1680, 1393, 3643, 1674, 1672, 3612, 3690, 2828, 1245, 1597,
	2823, 2019, 2019, 1128, 1128, 2242, 1128, 1128, 1128, 2240,
	2217, 2381, 2348, 2223, 2200, 2168, 2155, 1490, 2142, 2081,
	1391, 2078, 1841, 2075, 1128, 2072, 2067, 2065, 1128, 2007,
	2019, 2019, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128,
	1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128,
	1128, 1128, 3716, 1128, 3766, 3699, 3767, 3686, 1244, 3670,
	3687, 1128, 1128, 2019, 2061, 3726, 3727, 2052, 1128, 1948,
	1781, 3192, 4814, 3542, 3696, 1021, 1023, 1025, 2209, 1128,
	1225, 4555, 3680, 3166, 3681, 4268, 3682, 3164, 2123, 2990,
	1250, 1250, 2414, 3688, 1128, 4697, 3730, 2459, 3757, 4306,
	3306, 4299, 3694, 4298, 4269, 4225, 1226, 4140, 3100, 1552,
	4487, 2884, 4480, 3746, 4013, 2859, 2150, 2859, 1951, 1745,
	1746, 3721, 2339, 2282, 1393, 1866, 2459, 3772, 3723, 1871,
	2857, 3839, 2881, 1946, 1307, 3733, 2376, 1308, 2412, 3740,
	3742, 3743, 3805, 2371, 4696, 2346, 2013, 3749, 4188, 3826,
	1246, 1949, 3756, 1788, 1789, 1788, 1789, 4220, 1671, 3801,
	4522, 3864, 1248, 1248, 2887, 3865, 3193, 3769, 3764, 4387,
	4113, 4091, 3765, 1128, 3470, 2888, 2910, 1785, 3797, 3744,
	1782, 3771, 1341, 1791, 2413, 1275, 4817, 3934, 4808, 4770,
	261, 3543, 1128, 3015, 1947, 3989, 2888, 3806, 2266, 1352,
	3798, 179, 3763, 3817, 3818, 3895, 2954, 3897, 1308, 3933,
	2952, 2961, 2941, 2890, 3812, 2943, 1227, 2013, 1790, 1308,
	1790, 2892, 4658, 4643, 4609, 1128, 1128, 4603, 2942, 4554,
	4471, 4857, 4447, 4365, 2891, 3814, 3815, 684, 3999, 3991,
	3301, 3302, 3303, 2300, 3978, 3836, 3838, 3300, 3298, 3299,
	3291, 3292, 3293, 3294, 3296, 3297, 3599, 3064, 2723, 1326,
	2316, 2087, 2000, 3828, 4386, 2933, 1508, 1128, 4689, 1507,
	2318, 3829, 3398, 4690, 4888, 3289, 3290, 1658, 3937, 1788,
	1789, 4605, 2326, 1657, 2329, 2330, 2331, 4689, 1245, 1245,
	3998, 1332, 4690, 4829, 1518, 2092, 1332, 2851, 2852, 3907,
	3847, 3848, 2849, 2850, 4083, 2603, 3852, 2851, 2849, 2638,
	1727, 4472, 1950, 1726, 4423, 3860, 3861, 4222, 3863, 4217,
	4216, 2019, 4079, 3912, 3914, 3851, 1613, 3745, 3928, 3536,
	3911, 3533, 1880, 1879, 4874, 4836, 3856, 3936, 3877, 4647,
	4646, 3930, 4645, 4584, 4583, 4538, 4450, 4417, 1244, 1244,
	4362, 1496, 1332, 4359, 4357, 4256, 4242, 3899, 1128, 4186,
	4135, 4037, 4019, 3904, 3973, 3892, 1250, 1128, 3884, 4015,
	3603, 3602, 2443, 3070, 3952, 3954, 3464, 1332, 1332, 1332,
	3415, 3153, 3145, 3124, 3123, 3122, 2905, 4022, 3121, 3948,
	3048, 3018, 2882, 2819, 1332, 1332, 1332, 2815, 1496, 2804,
	3099, 2803, 2792, 2532, 2405, 4007, 4006, 3985, 3972, 2377,
	2370, 2369, 1332, 2368, 2367, 2366, 2280, 3448, 1393, 4010,
	2254, 2250, 2249, 2248, 3968, 2247, 2246, 2055, 2054, 2053,
	4026, 2051, 1990, 3995, 3956, 1744, 1743, 1682, 1248, 3958,
	1246, 1246, 3967, 1566, 1393, 1565, 3945, 1128, 1128, 4009,
	3986, 3957, 3990, 1128, 1128, 2019, 1564, 1563, 1128, 1128,
	1562, 1128, 1561, 1560, 1555, 1551, 1128, 1549, 1548, 1501,
	1500, 1499, 1384, 1383, 1382, 4038, 1381, 1128, 1380, 1344,
	1294, 3993, 1293, 1136, 1292, 1291, 1290, 1289, 1288, 1286,
	1281, 1280, 1279, 1128, 4011, 1278, 4008, 1277, 886, 8,
	1208, 4017, 2094, 1027, 4016, 4048, 1013, 4560, 4046, 4165,
	4064, 4033, 4036, 4021, 3439, 4027, 4028, 4164, 2700, 4032,
	4029, 4163, 2401, 92, 1557, 4035, 848, 86, 4065, 268,
	268, 268, 3947, 690, 691, 4077, 706, 690, 706, 716,
	2207, 3891, 756, 2016, 4047, 4764, 776, 981, 4686, 4588,
	1540, 782, 4073, 856, 1250, 3491, 4668, 3987, 268, 4058,
	3466, 2966, 1250, 2013, 1245, 2351, 1393, 3994, 1393, 1683,
	2353, 3376, 2765, 4635, 4087, 1250, 3251, 3505, 893, 4529,
	4333, 2606, 1884, 3332, 268, 88, 1332, 1332, 1112, 1158,
	4252, 4251, 4149, 3876, 3089, 4249, 1393, 4248, 2004, 2006,
	1076, 1396, 4708, 2105, 1118, 3381, 2121, 2114, 2805, 2013,
	2013, 2682, 3539, 1135, 2016, 1132, 3545, 2008, 4141, 4142,
	2010, 1250, 1134, 1250, 1244, 1133, 1248, 2009, 1904, 4103,
	4053, 1131, 2003, 3997, 1248, 3068, 3629, 1607, 2013, 2013,
	4049, 1605, 983, 4189, 2109, 2526, 1332, 1248, 2590, 4175,
	4121, 4172, 3240, 4172, 1877, 1092, 1393, 1114, 1332, 2587,
	1270, 1332, 1103, 1091, 3358, 3337, 3616, 4114, 2007, 2270,
	3835, 2013, 1393, 4110, 2438, 4119, 4117, 179, 866, 4120,
	3286, 4145, 2593, 4125, 1261, 2706, 2698, 4221, 2694, 4223,
	4123, 3425, 4128, 1248, 4124, 1248, 4115, 4116, 4190, 3058,
	1758, 4347, 1855, 2835, 1326, 3069, 1378, 1096, 2524, 1868,
	1332, 1332, 3218, 2448, 690, 690, 1246, 3623, 4137, 3379,
	4147, 4133, 268, 2798, 4118, 4246, 4693, 3753, 3151, 2258,
	1332, 1224, 4210, 1223, 4139, 1268, 1222, 4674, 4671, 2007,
	2197, 4030, 1393, 3578, 2097, 2843, 4224, 1332, 2536, 3586,
	1108, 4205, 1245, 1495, 4243, 2395, 4215, 3343, 3648, 1568,
	1245, 781, 4394, 1120, 1840, 2987, 2986, 4549, 1363, 1361,
	1360, 1359, 1250, 1245, 4845, 4911, 3887, 4274, 4208, 3886,
	3885, 235, 3186, 1779, 1332, 1332, 1332, 1771, 4176, 232,
	4271, 4240, 234, 233, 4257, 3840, 3385, 1393, 4302, 4768,
	4286, 4285, 4172, 3909, 4241, 4191, 4192, 4233, 4232, 1128,
	1128, 1128, 1244, 4234, 3569, 23, 22, 21, 113, 1245,
	1244, 1245, 4239, 42, 20, 4273, 4280, 1393, 4262, 4247,
	152, 2396, 1128, 1244, 130, 1128, 1128, 149, 148, 4289,
	2991, 122, 147, 146, 1248, 1128, 2092, 145, 2019, 144,
	151, 4294, 143, 1128, 1128, 142, 4287, 137, 141, 140,
	139, 138, 136, 134, 135, 129, 133, 2530, 1393, 132,
	1332, 131, 128, 4325, 127, 126, 125, 124, 4311, 1244,
	123, 1244, 4195, 1866, 121, 4309, 4308, 4313, 153, 120,
	119, 118, 2092, 1393, 4204, 4320, 117, 4207, 116, 115,
	114, 1128, 769, 770, 1246, 61, 60, 112, 110, 111,
	19, 40, 1246, 14, 1128, 65, 4330, 66, 270, 1391,
	18, 13, 4314, 1128, 35, 1246, 91, 102, 2019, 2013,
	101, 2092, 36, 4408, 4409, 99, 98, 1128, 2705, 4305,
	1128, 34, 17, 16, 15, 4342, 4255, 96, 95, 4331,
	33, 3117, 4368, 2092, 1128, 2092, 4336, 31, 11, 4272,
	2016, 1393, 9, 4424, 37, 4426, 4270, 4427, 1332, 4397,
	1245, 1246, 1965, 1246, 4353, 4354, 12, 5, 1332, 1332,
	184, 4369, 4293, 183, 4356, 186, 182, 185, 2092, 4376,
	4331, 90, 2092, 181, 180, 4367, 89, 29, 10, 176,
	4463, 3983, 81, 178, 177, 175, 2016, 2016, 174, 4416,
	3580, 4440, 4428, 173, 82, 2462, 79, 172, 4419, 85,
	171, 80, 84, 1393, 4406, 4462, 1332, 83, 27, 6,
	1244, 64, 3176, 4453, 7, 2016, 2016, 4418, 4315, 3673,
	105, 106, 4414, 38, 1250, 1250, 77, 76, 75, 4425,
	26, 63, 25, 170, 217, 4470, 216, 215, 214, 213,
	212, 4432, 211, 2013, 1128, 1128, 210, 4443, 2016, 205,
	4505, 4506, 4445, 4451, 4172, 4172, 4442, 204, 209, 4482,
	4481, 1128, 2019, 2462, 4466, 2007, 1317, 4461, 4490, 207,
	206, 4484, 208, 203, 227, 226, 4446, 220, 4509, 219,
	225, 224, 223, 222, 221, 218, 229, 4478, 202, 201,
	1090, 4483, 4488, 2700, 2700, 200, 1248, 1248, 4489, 1128,
	4503, 1128, 1246, 1128, 4289, 198, 194, 193, 197, 199,
	196, 2007, 2007, 1250, 195, 1317, 192, 228, 4518, 4519,
	72, 168, 169, 71, 167, 166, 1128, 165, 1250, 4420,
	4517, 164, 4544, 163, 162, 161, 70, 24, 2, 1,
	2007, 2007, 0, 4172, 0, 0, 1317, 1317, 0, 4521,
	0, 0, 4580, 4540, 4572, 0, 1263, 0, 4172, 4527,
	0, 0, 0, 0, 0, 4543, 0, 0, 0, 0,
	0, 0, 0, 2007, 4571, 2140, 4486, 0, 0, 4564,
	1128, 1128, 4565, 0, 4431, 1248, 0, 0, 3946, 1283,
	1128, 0, 4592, 0, 0, 1250, 0, 0, 1250, 0,
	1248, 268, 1332, 268, 268, 0, 1312, 268, 1322, 4579,
	0, 0, 1332, 1332, 4581, 0, 0, 0, 0, 1342,
	0, 4612, 1245, 1245, 4614, 4172, 0, 776, 4172, 1332,
	776, 0, 0, 0, 0, 4586, 0, 0, 4626, 4599,
	1485, 0, 0, 1128, 1128, 4537, 0, 0, 4539, 4600,
	4601, 4611, 4607, 1128, 268, 4619, 268, 268, 1312, 4606,
	268, 268, 4620, 4604, 4466, 1322, 0, 1248, 0, 4622,
	1248, 4623, 1496, 0, 0, 2700, 2700, 2700, 2700, 268,
	0, 1520, 1244, 1244, 4630, 0, 0, 0, 0, 0,
	0, 0, 0, 4624, 4625, 4661, 1128, 1128, 0, 1128,
	4640, 4644, 1545, 4665, 0, 0, 2016, 0, 0, 0,
	4629, 1245, 0, 0, 0, 0, 0, 4639, 0, 0,
	0, 1570, 0, 4695, 1322, 0, 1245, 0, 268, 268,
	0, 1312, 4656, 4657, 4691, 0, 0, 4663, 4688, 0,
	0, 4664, 0, 0, 0, 0, 0, 4713, 0, 4682,
	0, 0, 776, 0, 268, 268, 0, 1128, 1128, 1128,
	0, 4717, 0, 4716, 4673, 4676, 4678, 0, 0, 0,
	4677, 1244, 4698, 4681, 1246, 1246, 0, 893, 0, 4704,
	0, 0, 0, 0, 0, 0, 1244, 4712, 0, 0,
	1128, 0, 4748, 1245, 4711, 4590, 1245, 0, 4631, 0,
	4632, 0, 4730, 4731, 4753, 4732, 4763, 4733, 4766, 0,
	0, 0, 0, 0, 0, 0, 0, 1496, 0, 4610,
	0, 4771, 0, 0, 0, 0, 0, 73, 1317, 4751,
	0, 2007, 2705, 0, 4778, 0, 2013, 4780, 0, 0,
	2016, 4794, 4782, 0, 74, 0, 4767, 1128, 0, 0,
	0, 0, 4792, 1244, 4793, 268, 1244, 4779, 0, 0,
	78, 0, 0, 1246, 0, 4799, 4787, 4683, 0, 0,
	4684, 4788, 0, 0, 0, 0, 0, 268, 1246, 1496,
	0, 1496, 0, 0, 4786, 4790, 4791, 4805, 4806, 4819,
	4815, 4796, 4811, 4809, 4807, 0, 0, 0, 0, 0,
	87, 4818, 1250, 4695, 1250, 2140, 4822, 0, 4820, 4838,
	0, 0, 0, 2705, 2705, 0, 2013, 4839, 4841, 4828,
	4852, 0, 4592, 4850, 4837, 0, 4833, 0, 4840, 4851,
	4842, 0, 4172, 4847, 4172, 0, 0, 4194, 0, 0,
	887, 4865, 0, 0, 0, 1246, 4673, 4749, 1246, 4676,
	4203, 4699, 49, 4206, 107, 4864, 0, 4701, 4867, 93,
	104, 0, 3215, 3216, 2092, 2007, 0, 0, 0, 0,
	0, 0, 4878, 4882, 1248, 4876, 1248, 0, 1128, 1128,
	4875, 0, 4883, 0, 0, 4880, 0, 1128, 0, 1128,
	1128, 3548, 0, 0, 0, 4895, 4886, 0, 0, 0,
	0, 4902, 0, 0, 4896, 4899, 4907, 4900, 4906, 4892,
	3070, 4901, 0, 0, 4905, 4904, 4903, 0, 94, 3573,
	0, 0, 0, 4915, 0, 0, 4919, 4914, 4917, 4910,
	3590, 4920, 0, 4921, 0, 4923, 0, 0, 4916, 4918,
	0, 4926, 0, 0, 0, 3598, 0, 0, 0, 4928,
	1128, 4931, 4927, 4933, 0, 0, 0, 4934, 4930, 4936,
	4937, 0, 4923, 4893, 4894, 0, 0, 0, 0, 0,
	2013, 4846, 1090, 1090, 1090, 0, 0, 0, 690, 0,
	0, 0, 0, 0, 0, 0, 0, 3639, 3640, 0,
	1477, 0, 0, 0, 1477, 2705, 2705, 2705, 2705, 268,
	1245, 268, 1245, 0, 0, 268, 0, 0, 0, 0,
	0, 4871, 0, 0, 0, 0, 0, 4873, 1520, 1312,
	1985, 268, 0, 268, 4932, 0, 0, 0, 0, 268,
	1520, 706, 0, 0, 0, 0, 268, 1520, 0, 1520,
	0, 0, 0, 0, 3313, 3314, 3315, 3316, 0, 0,
	0, 2056, 0, 0, 0, 0, 0, 0, 0, 0,
	1244, 0, 1244, 268, 97, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 2700, 2700, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1788, 1789,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1520, 0, 0, 0, 776,
	0, 1819, 0, 0, 0, 0, 0, 0, 1791, 187,
	100, 0, 0, 103, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2016, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1844, 0, 0, 0, 0, 236,
	0, 0, 1246, 1790, 1246, 0, 0, 888, 0, 0,
	4430, 0, 150, 0, 0, 2700, 2700, 2700, 2700, 2700,
	2700, 2700, 2700, 2700, 2700, 2700, 2700, 2700, 2700, 2700,
	2700, 2700, 2700, 2700, 2700, 0, 2700, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 4166, 1496,
	1496, 0, 2548, 2549, 2550, 2567, 2568, 2569, 0, 2982,
	0, 0, 0, 2016, 2092, 0, 0, 0, 0, 0,
	0, 0, 2570, 154, 0, 0, 2092, 0, 0, 2092,
	0, 0, 4159, 0, 0, 0, 4152, 0, 191, 0,
	0, 0, 2974, 2972, 0, 0, 237, 0, 0, 2976,
	2978, 2968, 0, 4150, 0, 1844, 0, 1796, 2007, 230,
	0, 0, 4154, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 1496, 268, 2560, 0, 0, 268, 0, 0,
	0, 0, 0, 2556, 0, 0, 4160, 0, 0, 0,
	0, 0, 0, 0, 0, 1618, 0, 2270, 2092, 0,
	0, 0, 0, 0, 0, 1818, 1820, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4153, 0,
	0, 268, 0, 0, 0, 268, 0, 0, 2007, 0,
	0, 268, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2561, 2562,
	2563, 2564, 0, 268, 1811, 268, 0, 2016, 2555, 690,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 776, 0, 0, 0, 893, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 1312, 268, 0, 0, 0, 0,
	0, 1317, 0, 0, 0, 0, 0, 0, 0, 776,
	2970, 0, 0, 0, 0, 0, 268, 1841, 0, 0,
	0, 2984, 2565, 2566, 2350, 0, 0, 0, 0, 268,
	268, 1477, 268, 3943, 268, 0, 268, 0, 268, 0,
	0, 0, 2983, 2975, 2973, 2977, 2979, 2969, 2971, 2985,
	0, 0, 0, 0, 0, 2558, 0, 0, 2981, 0,
	0, 0, 0, 2387, 0, 0, 2388, 0, 2389, 4155,
	0, 0, 2007, 0, 4156, 2705, 2705, 0, 0, 0,
	268, 268, 268, 268, 4161, 0, 0, 0, 0, 0,
	0, 2988, 0, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 756, 0, 0,
	1496, 776, 0, 0, 0, 0, 2092, 0, 0, 4023,
	4024, 4025, 0, 0, 3709, 3710, 4158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1326, 4039, 4040, 0,
	0, 0, 0, 4162, 0, 0, 0, 0, 0, 0,
	1090, 0, 0, 1843, 0, 0, 0, 0, 1477, 0,
	0, 0, 0, 0, 0, 2705, 2705, 2705, 2705, 2705,
	2705, 2705, 2705, 2705, 2705, 2705, 2705, 2705, 2705, 2705,
	2705, 2705, 2705, 2705, 2705, 0, 2705, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2538, 0, 2559, 0, 0, 0,
	0, 0, 0, 0, 3773, 3774, 3775, 3776, 3777, 3778,
	3779, 3780, 3781, 3782, 3783, 3784, 3785, 3786, 3787, 3788,
	3789, 3790, 3791, 3792, 0, 3796, 0, 0, 0, 0,
	0, 0, 1801, 1799, 1800, 1792, 1793, 1794, 1795, 1797,
	1798, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 0, 0, 0, 0, 0,
	0, 2989, 0, 4157, 0, 690, 0, 0, 0, 0,
	2980, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 690,
	1477, 0, 0, 0, 0, 0, 268, 0, 690, 0,
	0, 0, 4167, 4168, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 4130, 4131,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 1322,
	0, 0, 0, 0, 0, 0, 2545, 2546, 2547, 2571,
	2557, 2551, 0, 2553, 2554, 2552, 2539, 2540, 2541, 2542,
	2543, 2544, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1788, 1789, 0, 0, 0, 0, 0, 268, 1322, 0,
	0, 0, 706, 0, 0, 0, 2818, 0, 0, 0,
	0, 0, 268, 1819, 0, 268, 0, 0, 0, 268,
	1791, 268, 0, 0, 0, 0, 1312, 0, 268, 268,
	0, 1322, 1322, 2834, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 1844, 0, 0, 0,
	0, 0, 0, 0, 0, 1790, 160, 0, 0, 0,
	0, 0, 1326, 0, 73, 1810, 46, 45, 0, 0,
	0, 0, 0, 0, 1807, 0, 0, 0, 0, 0,
	0, 74, 0, 0, 155, 2871, 0, 0, 0, 0,
	0, 0, 0, 0, 1317, 0, 268, 78, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 67, 268,
	0, 0, 0, 0, 0, 48, 0, 157, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 4068, 0,
	0, 0, 0, 776, 0, 47, 4310, 87, 4312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1813,
	1814, 1815, 1816, 0, 268, 0, 0, 2270, 0, 1796,
	0, 0, 0, 50, 68, 0, 0, 0, 2700, 0,
	0, 0, 51, 0, 0, 0, 0, 57, 0, 1477,
	0, 158, 0, 0, 0, 0, 0, 268, 3007, 49,
	0, 107, 0, 0, 0, 0, 93, 104, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1818, 1820, 0,
	0, 0, 0, 1520, 0, 0, 268, 0, 268, 73,
	0, 0, 4358, 0, 2700, 268, 0, 0, 0, 0,
	0, 0, 0, 1805, 1806, 3053, 74, 52, 0, 0,
	0, 0, 0, 0, 0, 2871, 0, 690, 0, 0,
	0, 0, 78, 0, 0, 94, 3082, 893, 0, 2871,
	2871, 0, 0, 0, 0, 0, 1811, 0, 0, 0,
	0, 0, 1477, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 268, 1312, 268,
	0, 0, 0, 0, 0, 0, 1520, 0, 1520, 1322,
	268, 0, 0, 1312, 0, 1312, 0, 1312, 0, 0,
	0, 0, 0, 1083, 0, 0, 0, 0, 0, 0,
	4444, 0, 887, 0, 0, 0, 0, 0, 0, 1841,
	0, 0, 1477, 0, 0, 0, 107, 0, 0, 0,
	0, 93, 104, 0, 0, 0, 0, 0, 0, 0,
	268, 268, 268, 268, 1312, 0, 0, 1312, 1477, 268,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1788, 1789, 0, 0,
	0, 0, 0, 0, 1817, 0, 0, 0, 0, 0,
	0, 97, 0, 268, 2700, 0, 0, 0, 0, 1819,
	94, 268, 0, 0, 0, 0, 1791, 1812, 0, 53,
	3289, 3290, 0, 3307, 3308, 3309, 0, 0, 0, 0,
	0, 0, 0, 0, 56, 0, 0, 0, 0, 59,
	0, 0, 1844, 0, 2700, 0, 0, 0, 0, 69,
	0, 1790, 0, 0, 0, 58, 187, 100, 0, 0,
	103, 1810, 0, 0, 54, 0, 0, 0, 159, 2700,
	1807, 0, 0, 0, 0, 1843, 55, 0, 0, 0,
	0, 0, 0, 2270, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 62, 3304, 0, 0, 0, 150,
	0, 0, 0, 1317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1477, 156, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 2795, 1520, 0, 0,
	0, 0, 0, 0, 0, 1813, 1814, 1815, 1816, 0,
	0, 0, 0, 0, 0, 1796, 97, 0, 0, 0,
	154, 1808, 1804, 0, 1801, 1799, 1800, 1792, 1793, 1794,
	1795, 1797, 1798, 0, 0, 191, 0, 0, 0, 0,
	0, 0, 0, 237, 1326, 1326, 0, 0, 2705, 3295,
	1477, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 1326, 0, 1818, 1820, 231, 0, 0, 0, 0,
	0, 187, 100, 0, 0, 103, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1805,
	1806, 0, 190, 0, 0, 3, 0, 4339, 0, 0,
	0, 236, 0, 881, 2705, 0, 0, 0, 0, 888,
	0, 0, 0, 0, 150, 0, 0, 0, 0, 0,
	0, 0, 1811, 0, 0, 0, 0, 0, 0, 0,
	73, 0, 884, 883, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 74, 0, 238,
	0, 0, 0, 4379, 0, 0, 3305, 268, 0, 0,
	0, 0, 690, 78, 0, 0, 0, 690, 0, 0,
	690, 0, 0, 690, 690, 154, 0, 0, 0, 690,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	191, 0, 0, 73, 0, 1841, 0, 0, 237, 0,
	0, 1520, 0, 87, 0, 0, 0, 0, 0, 0,
	74, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 1520, 78, 0, 0, 1841,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 268, 268, 887, 0, 0, 0, 190, 0, 0,
	1817, 0, 0, 0, 0, 49, 0, 107, 0, 0,
	0, 0, 93, 104, 0, 0, 87, 0, 0, 0,
	2871, 2871, 268, 1812, 1985, 0, 0, 0, 0, 0,
	2871, 0, 0, 3450, 2705, 0, 0, 0, 0, 0,
	0, 2871, 3450, 0, 2871, 3450, 0, 0, 3450, 0,
	0, 0, 0, 0, 0, 0, 887, 3306, 0, 0,
	0, 0, 0, 268, 268, 1985, 0, 268, 49, 0,
	107, 94, 0, 0, 2705, 93, 104, 0, 0, 0,
	0, 1843, 0, 4526, 0, 0, 0, 1985, 0, 268,
	0, 3511, 3511, 0, 1496, 0, 1312, 0, 0, 2705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2871, 0, 2871, 0,
	3537, 2871, 1985, 4548, 0, 2871, 1985, 0, 0, 776,
	0, 0, 0, 0, 94, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4570, 0,
	0, 0, 0, 0, 1312, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 1520, 0, 1808, 1804, 0,
	1801, 1799, 1800, 1792, 1793, 1794, 1795, 1797, 1798, 268,
	0, 3574, 0, 0, 3576, 2871, 0, 0, 268, 0,
	0, 0, 268, 0, 0, 1322, 0, 3301, 3302, 3303,
	0, 1317, 0, 0, 3300, 3298, 3299, 3291, 3292, 3293,
	3294, 3296, 3297, 268, 1788, 1789, 0, 97, 3053, 0,
	0, 1312, 0, 268, 0, 0, 2871, 0, 690, 0,
	0, 0, 0, 0, 0, 2871, 0, 1819, 0, 0,
	0, 0, 0, 0, 1791, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 3053, 0, 0,
	3053, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1844, 0, 187, 100, 0, 0, 103, 0, 0, 1790,
	97, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3679, 0, 0, 0, 0,
	0, 73, 236, 0, 0, 0, 0, 0, 0, 0,
	888, 0, 0, 3685, 0, 150, 1520, 0, 74, 1312,
	268, 0, 268, 0, 0, 0, 0, 1477, 1312, 0,
	0, 0, 0, 0, 78, 187, 100, 0, 0, 103,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	1477, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 888, 87, 1477, 154, 0, 150, 0,
	0, 1788, 1789, 1796, 1821, 1822, 1823, 1832, 1833, 1834,
	0, 191, 0, 0, 0, 0, 0, 0, 0, 237,
	1477, 0, 0, 1825, 1819, 0, 0, 0, 0, 0,
	0, 1791, 230, 238, 887, 0, 3751, 0, 0, 0,
	1838, 231, 0, 0, 0, 0, 0, 0, 107, 0,
	0, 1818, 1820, 93, 104, 0, 0, 1844, 1090, 154,
	0, 0, 0, 0, 0, 0, 1790, 0, 882, 0,
	0, 0, 1090, 0, 191, 0, 1810, 0, 0, 0,
	0, 0, 237, 0, 0, 1807, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	1811, 0, 94, 0, 0, 0, 0, 0, 1943, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1616, 0, 268, 268, 0, 0, 0, 0, 0,
	0, 2675, 2676, 2677, 2678, 2671, 2672, 2673, 2674, 0,
	0, 0, 0, 0, 0, 0, 690, 690, 0, 0,
	1813, 1814, 1815, 1816, 0, 0, 0, 1477, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 1520,
	1520, 0, 0, 1841, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1520, 1520, 0, 1520, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1829, 0,
	0, 1839, 0, 0, 0, 0, 0, 0, 1818, 1820,
	0, 0, 0, 2651, 2652, 2653, 2654, 1477, 0, 1824,
	0, 0, 0, 0, 0, 1835, 0, 1836, 0, 0,
	0, 0, 0, 0, 1805, 1806, 2663, 2664, 2665, 2666,
	2659, 2660, 2661, 2662, 2667, 2668, 2669, 2670, 97, 0,
	0, 1812, 1827, 0, 0, 0, 0, 0, 0, 0,
	776, 0, 0, 0, 0, 0, 0, 1811, 0, 3289,
	3290, 0, 3307, 3308, 3309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3718, 0, 3511, 0, 0, 0, 0, 0, 0,
	1075, 0, 0, 187, 100, 0, 268, 103, 0, 1843,
	0, 1837, 2647, 2648, 2649, 2650, 2655, 2656, 2657, 2658,
	0, 0, 0, 0, 0, 0, 0, 0, 1985, 1826,
	268, 0, 0, 236, 706, 706, 1322, 0, 0, 0,
	1841, 888, 0, 0, 3304, 0, 150, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 1477, 0, 0, 1477, 0, 0, 268,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 268,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 2871, 268,
	0, 1792, 1793, 1794, 1795, 1797, 1798, 154, 3082, 3082,
	0, 0, 0, 0, 893, 893, 2871, 0, 1812, 0,
	3053, 3053, 191, 0, 893, 2871, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 0, 0, 0, 3295, 0,
	0, 0, 1477, 230, 0, 1830, 0, 0, 0, 268,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 1477,
	0, 0, 0, 0, 0, 0, 1788, 1789, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 0, 0, 190,
	0, 1824, 0, 0, 0, 0, 0, 0, 0, 1819,
	0, 0, 0, 0, 0, 0, 1791, 0, 0, 0,
	0, 0, 0, 3311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1844, 0, 4088, 0, 0, 0, 0, 0,
	0, 1790, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 3305, 0, 0, 1828, 0,
	1807, 0, 0, 0, 0, 0, 0, 0, 1802, 1803,
	1809, 1831, 1808, 1804, 0, 1801, 1799, 1800, 1792, 1793,
	1794, 1795, 1797, 1798, 0, 0, 0, 0, 3264, 0,
	0, 0, 3265, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 1477, 1520, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 3707, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 0,
	0, 0, 0, 1322, 0, 1813, 1814, 1815, 1816, 0,
	0, 0, 0, 0, 0, 1796, 1322, 0, 0, 0,
	0, 0, 0, 2871, 2871, 0, 3511, 2871, 0, 0,
	0, 0, 0, 0, 4174, 0, 4174, 1520, 0, 0,
	0, 0, 0, 0, 0, 0, 1824, 0, 2871, 0,
	3450, 0, 1824, 0, 1520, 1520, 268, 1985, 1824, 0,
	0, 0, 0, 1818, 1820, 0, 0, 0, 0, 0,
	1985, 0, 268, 1985, 0, 268, 3306, 3511, 0, 0,
	1788, 1789, 0, 1821, 1822, 1823, 1832, 1833, 1834, 1805,
	1806, 0, 2871, 0, 2871, 268, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	1791, 0, 0, 0, 0, 0, 0, 1788, 1789, 1838,
	0, 0, 1811, 0, 0, 0, 0, 0, 0, 0,
	2871, 0, 0, 0, 0, 4259, 1844, 0, 0, 0,
	1819, 0, 0, 0, 0, 1790, 268, 1791, 1824, 0,
	0, 0, 0, 1824, 0, 1810, 268, 0, 0, 0,
	0, 0, 1824, 0, 1807, 0, 0, 1824, 0, 0,
	0, 0, 0, 1844, 0, 0, 0, 0, 0, 0,
	0, 0, 1790, 0, 0, 4174, 0, 0, 1520, 0,
	0, 0, 1810, 0, 0, 1841, 0, 0, 0, 0,
	0, 1807, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3301, 3302, 3303, 0,
	0, 0, 0, 3300, 3298, 3299, 3291, 3292, 3293, 3294,
	3296, 3297, 1824, 0, 0, 1337, 0, 0, 1824, 1813,
	1814, 1815, 1816, 0, 0, 0, 0, 0, 0, 1796,
	1817, 0, 0, 0, 0, 3706, 0, 0, 0, 0,
	0, 0, 1075, 1075, 1075, 0, 1477, 0, 0, 0,
	0, 0, 0, 1812, 0, 0, 1813, 1814, 1815, 1816,
	0, 0, 0, 0, 0, 0, 1796, 1829, 0, 0,
	1839, 0, 1477, 0, 0, 0, 0, 1818, 1820, 0,
	0, 0, 2871, 0, 3450, 0, 0, 4371, 0, 0,
	0, 0, 0, 0, 0, 1522, 268, 1528, 0, 1534,
	0, 0, 0, 1805, 1806, 0, 4395, 0, 4395, 0,
	0, 1843, 0, 0, 1818, 1820, 0, 0, 0, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 776, 0, 0, 0, 1811, 0, 0, 0,
	1805, 1806, 0, 3511, 0, 1312, 0, 0, 0, 1824,
	1824, 1824, 1824, 1824, 1824, 1824, 1824, 0, 0, 0,
	1985, 0, 268, 0, 0, 0, 1624, 0, 1629, 1824,
	0, 0, 0, 1811, 0, 0, 0, 0, 1638, 0,
	1643, 0, 1824, 0, 0, 0, 0, 4371, 0, 0,
	0, 0, 0, 0, 1477, 2871, 1477, 1808, 1804, 0,
	1801, 1799, 1800, 1792, 1793, 1794, 1795, 1797, 1798, 1841,
	0, 0, 0, 4475, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1477, 1520, 0, 0, 2704, 0,
	0, 0, 0, 0, 0, 0, 0, 4174, 4174, 0,
	0, 1824, 0, 0, 0, 0, 1841, 1824, 1708, 0,
	0, 1714, 0, 0, 0, 268, 268, 0, 0, 0,
	0, 0, 0, 0, 1817, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3751,
	0, 0, 0, 0, 1477, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 1520, 0, 0, 1520, 3511, 4542,
	1477, 1817, 0, 0, 0, 0, 4371, 0, 0, 0,
	0, 0, 0, 0, 1830, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1812, 0, 4174, 0, 3289, 3290,
	0, 3307, 3308, 3309, 0, 0, 0, 0, 0, 0,
	0, 4174, 0, 0, 0, 1843, 0, 1845, 1846, 1847,
	1848, 1849, 1850, 1851, 1852, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	1477, 0, 0, 0, 0, 706, 0, 0, 0, 0,
	1865, 0, 1843, 0, 0, 0, 1878, 0, 0, 0,
	3289, 3290, 4259, 3307, 3308, 3309, 0, 0, 0, 0,
	0, 0, 0, 3304, 0, 0, 0, 0, 4174, 0,
	268, 4174, 3717, 0, 0, 3289, 3290, 1828, 3307, 3308,
	3309, 3450, 0, 0, 0, 1477, 0, 1802, 1803, 1809,
	1831, 1808, 1804, 0, 1801, 1799, 1800, 1792, 1793, 1794,
	1795, 1797, 1798, 0, 0, 0, 0, 1520, 0, 1520,
	0, 0, 0, 0, 0, 1477, 0, 0, 1788, 1789,
	0, 0, 0, 0, 0, 3304, 0, 0, 1808, 1804,
	0, 1801, 1799, 1800, 1792, 1793, 1794, 1795, 1797, 1798,
	0, 1819, 0, 0, 4654, 0, 0, 0, 1791, 0,
	3304, 1937, 1937, 1937, 0, 0, 1477, 3295, 0, 0,
	4395, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1844, 0, 1520, 0, 0, 1520,
	0, 1477, 0, 1790, 0, 0, 0, 0, 2871, 0,
	0, 0, 0, 1810, 0, 0, 0, 0, 3312, 0,
	0, 0, 1807, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3295,
	0, 0, 3311, 0, 0, 0, 0, 0, 1090, 0,
	0, 0, 0, 0, 0, 0, 3751, 0, 0, 0,
	0, 0, 0, 0, 3295, 0, 0, 0, 0, 1477,
	0, 0, 0, 0, 0, 0, 1520, 0, 0, 0,
	0, 0, 0, 0, 3305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 1814, 1815,
	1816, 1160, 0, 0, 3311, 0, 268, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1075, 0, 0, 0, 0, 0, 0, 0, 0, 3311,
	0, 1477, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3305, 0, 4371, 0,
	0, 0, 0, 0, 0, 1818, 1820, 1841, 1824, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1805, 1806, 1824, 0, 0, 0, 0, 2871, 0,
	0, 0, 0, 0, 0, 4174, 0, 4174, 0, 0,
	1520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1811, 0, 0, 0, 0, 1841,
	0, 1824, 0, 0, 0, 1824, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3306, 0, 0, 0, 1824,
	1520, 0, 0, 0, 1841, 0, 1520, 0, 1824, 1824,
	1824, 1824, 1824, 1824, 1824, 1824, 1824, 1824, 1824, 1824,
	1824, 1824, 1824, 1824, 1824, 1824, 1824, 1824, 1824, 1824,
	1824, 1824, 1824, 1824, 1824, 1824, 1824, 1824, 1824, 1824,
	1824, 1824, 1824, 1824, 0, 0, 3082, 1841, 0, 1824,
	0, 1824, 1824, 1824, 1824, 2871, 0, 3306, 0, 0,
	0, 0, 0, 2704, 2704, 0, 0, 0, 1090, 1090,
	0, 3082, 0, 0, 0, 0, 0, 0, 1824, 0,
	0, 0, 3306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1251, 0, 1817, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1812, 0, 0, 0, 1824,
	0, 0, 0, 0, 0, 3301, 3302, 3303, 0, 0,
	0, 0, 3300, 3298, 3299, 3291, 3292, 3293, 3294, 3296,
	3297, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	0, 0, 1824, 0, 0, 1824, 0, 0, 1824, 0,
	0, 0, 0, 0, 1824, 1824, 1824, 1824, 1824, 1824,
	1824, 0, 0, 1843, 0, 1090, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3301, 3302, 3303,
	0, 0, 0, 0, 3300, 3298, 3299, 3291, 3292, 3293,
	3294, 3296, 3297, 0, 0, 0, 2374, 0, 0, 0,
	0, 0, 3301, 3302, 3303, 0, 0, 0, 0, 3300,
	3298, 3299, 3291, 3292, 3293, 3294, 3296, 3297, 0, 0,
	1824, 0, 0, 3310, 0, 2704, 2704, 2704, 2704, 0,
	0, 2399, 1824, 0, 1824, 0, 0, 0, 0, 1824,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1808,
	1804, 0, 1801, 1799, 1800, 1792, 1793, 1794, 1795, 1797,
	1798, 0, 0, 0, 0, 2437, 0, 2441, 0, 0,
	0, 0, 0, 0, 2455, 0, 0, 0, 0, 0,
	0, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472,
	2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482,
	2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492,
	2493, 2494, 2495, 2496, 2497, 2498, 2499, 0, 2505, 0,
	2507, 2508, 2509, 2510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 0, 2585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1788, 1789, 0, 0, 0, 0, 2615, 2618,
	2621, 2624, 0, 0, 2630, 2631, 2632, 2633, 2634, 2635,
	2636, 0, 0, 0, 0, 1819, 0, 0, 0, 0,
	0, 0, 1791, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2696, 0, 2708, 2710, 2715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1844, 0,
	0, 0, 0, 0, 0, 0, 0, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1788, 1789, 0, 1821,
	1822, 1823, 1832, 1833, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1825, 1819,
	0, 0, 0, 0, 0, 0, 1791, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1844, 0, 0, 0, 0, 0, 0, 0,
	0, 1790, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 0, 0, 1824, 1824, 0, 1824, 0, 0,
	1807, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1251, 0, 1818,
	1820, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 1814, 1815, 1816, 0,
	0, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 1251, 0, 0, 0, 1251, 0, 0,
	0, 0, 0, 0, 1251, 0, 0, 0, 1811, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 0, 0, 1839, 1824, 0, 0,
	0, 0, 0, 1818, 1820, 0, 0, 0, 1251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1835, 0, 1836, 0, 0, 0, 0, 0, 0, 1805,
	1806, 0, 0, 0, 1251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 1841, 1824, 1824, 1251, 2704, 2704, 3010, 3011, 1824,
	3013, 1251, 1811, 0, 0, 0, 0, 0, 0, 3310,
	3310, 0, 0, 1824, 1824, 1251, 0, 0, 0, 0,
	0, 0, 0, 1824, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1824, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 0, 0, 1824,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 0, 0, 0, 0, 1812,
	0, 1251, 0, 0, 0, 1841, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2704, 2704, 2704, 2704, 2704,
	2704, 2704, 2704, 2704, 2704, 2704, 2704, 2704, 2704, 2704,
	2704, 2704, 2704, 2704, 2704, 0, 2704, 3310, 3310, 3310,
	3310, 1788, 1789, 0, 0, 0, 0, 1832, 1833, 1834,
	0, 0, 0, 0, 0, 0, 0, 1843, 0, 0,
	1817, 0, 0, 0, 1819, 3143, 0, 0, 0, 0,
	0, 1791, 1824, 0, 0, 0, 0, 0, 0, 0,
	1838, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1844, 0, 0,
	0, 0, 0, 0, 0, 0, 1790, 0, 0, 0,
	1830, 0, 0, 0, 0, 0, 1810, 0, 0, 0,
	0, 0, 0, 0, 0, 1807, 0, 0, 0, 0,
	0, 0, 0, 1845, 1846, 0, 0, 0, 0, 0,
	0, 1843, 0, 0, 0, 0, 0, 1799, 1800, 1792,
	1793, 1794, 1795, 1797, 1798, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3198,
	3199, 0, 0, 1824, 0, 3205, 0, 0, 0, 0,
	1813, 1814, 1815, 1816, 0, 0, 0, 0, 0, 0,
	1796, 0, 0, 1828, 3219, 3220, 0, 0, 0, 0,
	2585, 0, 0, 1802, 1803, 1809, 1831, 1808, 1804, 0,
	1801, 1799, 1800, 1792, 1793, 1794, 1795, 1797, 1798, 0,
	0, 0, 0, 2581, 0, 1788, 1789, 2582, 1829, 0,
	0, 1839, 0, 0, 0, 0, 0, 0, 1818, 1820,
	0, 0, 0, 0, 0, 3229, 0, 0, 1819, 0,
	0, 0, 0, 0, 0, 1791, 0, 1251, 0, 1251,
	0, 3243, 0, 0, 1805, 1806, 0, 0, 0, 0,
	0, 0, 0, 0, 1251, 0, 0, 0, 3255, 0,
	0, 1844, 1827, 0, 0, 0, 0, 0, 0, 0,
	1790, 0, 0, 2020, 0, 0, 0, 1811, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 789, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 800, 0,
	0, 0, 0, 3204, 0, 0, 0, 0, 0, 0,
	1841, 0, 0, 0, 1251, 0, 0, 0, 0, 0,
	2715, 2715, 2715, 0, 1813, 1814, 1815, 1816, 0, 0,
	0, 0, 0, 0, 1796, 1937, 0, 0, 0, 0,
	0, 1251, 0, 3348, 0, 0, 0, 0, 1824, 1824,
	0, 0, 1824, 3310, 3310, 1824, 0, 0, 0, 1824,
	0, 0, 0, 0, 0, 1817, 1824, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	0, 0, 1818, 1820, 0, 0, 0, 0, 1812, 0,
	0, 794, 0, 0, 0, 0, 0, 806, 0, 0,
	0, 0, 1824, 1824, 1824, 1824, 1824, 0, 1805, 1806,
	0, 799, 1824, 0, 1824, 1830, 0, 3310, 3310, 3310,
	3310, 3310, 3310, 3310, 3310, 3310, 3310, 3310, 3310, 3310,
	3310, 3310, 3310, 3310, 3310, 3310, 3310, 0, 0, 0,
	3310, 1811, 0, 1824, 1824, 0, 1843, 0, 1075, 0,
	0, 0, 0, 0, 0, 1824, 0, 0, 0, 798,
	0, 0, 1075, 0, 1824, 0, 0, 0, 0, 0,
	0, 0, 0, 1251, 1251, 0, 751, 0, 0, 0,
	0, 0, 0, 1251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3469, 0, 0, 0, 0,
	0, 796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 0, 1841, 0, 0, 0, 1828, 0,
	0, 0, 0, 1824, 0, 0, 0, 0, 0, 0,
	0, 1831, 1808, 1804, 0, 1801, 1799, 1800, 1792, 1793,
	1794, 1795, 1797, 1798, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 0, 0, 0, 0, 0, 0, 0,
	805, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 1251, 0,
	1251, 0, 1251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 0, 0, 1251, 1251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1251, 0, 1251, 1251, 1251, 0, 0, 0, 0,
	0, 0, 0, 0, 791, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 0, 0, 795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 750, 0, 0, 0, 0, 0, 0, 0,
	1824, 1824, 0, 0, 0, 1824, 1824, 801, 0, 1824,
	1824, 0, 0, 793, 1824, 0, 0, 0, 1824, 0,
	0, 0, 0, 1824, 0, 0, 1808, 1804, 0, 1801,
	1799, 1800, 1792, 1793, 1794, 1795, 1797, 1798, 2704, 0,
	2020, 2020, 1251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	790, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 797, 2455,
	0, 0, 0, 0, 2704, 3704, 3705, 0, 0, 3708,
	0, 0, 752, 3711, 0, 0, 0, 0, 0, 0,
	0, 0, 3715, 792, 0, 0, 0, 0, 0, 0,
	0, 3722, 0, 0, 0, 0, 3348, 0, 0, 0,
	0, 0, 0, 0, 0, 1251, 803, 804, 0, 0,
	0, 3735, 1124, 0, 0, 0, 1788, 1789, 0, 1821,
	1822, 1823, 1832, 1833, 1834, 0, 0, 0, 0, 0,
	0, 3758, 3759, 0, 3760, 3761, 3762, 0, 1825, 1819,
	0, 0, 0, 0, 0, 0, 1791, 0, 0, 0,
	0, 0, 3768, 0, 0, 1838, 3770, 0, 267, 267,
	267, 0, 0, 0, 0, 0, 0, 0, 1251, 0,
	0, 0, 1844, 0, 0, 1251, 0, 0, 0, 0,
	0, 1790, 0, 0, 1251, 0, 0, 819, 0, 3799,
	3800, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	1807, 1251, 0, 0, 0, 0, 0, 3811, 0, 0,
	0, 0, 0, 819, 0, 0, 0, 0, 0, 0,
	0, 0, 3820, 0, 0, 0, 0, 0, 0, 0,
	1824, 1824, 1824, 0, 0, 0, 0, 0, 0, 0,
	0, 1824, 1824, 3310, 2704, 0, 0, 0, 0, 0,
	1824, 0, 0, 1824, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 1814, 1815, 1816, 0,
	0, 0, 0, 3310, 2704, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 3868, 1251, 1251, 0, 0, 0, 0, 1824, 2704,
	0, 0, 0, 0, 0, 0, 1824, 0, 0, 0,
	3879, 0, 0, 1829, 0, 1824, 1839, 0, 0, 0,
	0, 0, 0, 1818, 1820, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1251, 0, 0, 0,
	1835, 1247, 1836, 0, 3908, 0, 0, 0, 0, 1805,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	2020, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1811, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1251, 0, 0, 0, 0, 0, 0,
	3310, 0, 0, 0, 0, 0, 1837, 0, 0, 1251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1824, 3310, 0, 1826, 1824, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1841, 0, 0, 0, 0,
	0, 0, 0, 0, 3310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1937, 0, 1251, 0,
	0, 0, 0, 0, 0, 4018, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 0, 0, 0, 0, 0, 0, 1251,
	1817, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1251, 0, 1251, 0, 0, 0, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	1251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 0, 4066, 4067, 0, 0, 0,
	0, 4071, 4072, 0, 0, 0, 4075, 4076, 0, 0,
	0, 0, 0, 0, 4080, 0, 0, 0, 0, 0,
	0, 1843, 0, 0, 0, 4084, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4089, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1824, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1824, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1802, 1803, 1809, 1831, 1808, 1804, 0,
	1801, 1799, 1800, 1792, 1793, 1794, 1795, 1797, 1798, 0,
	0, 0, 0, 0, 0, 0, 0, 4094, 1788, 1789,
	0, 1821, 1822, 1823, 1832, 1833, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1825, 1819, 0, 0, 0, 0, 0, 0, 1791, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 1790, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1810, 0, 0, 0, 0, 0, 0,
	0, 1824, 1807, 0, 0, 1824, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 267, 267, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 1814, 1815,
	1816, 0, 0, 0, 0, 0, 0, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 267, 267, 0, 0, 267,
	267, 0, 0, 0, 0, 1829, 0, 0, 1839, 0,
	0, 0, 0, 0, 0, 1818, 1820, 0, 819, 0,
	0, 0, 0, 0, 0, 0, 0, 4326, 4327, 4328,
	0, 0, 1835, 0, 1836, 0, 0, 0, 0, 1251,
	1251, 1805, 1806, 0, 0, 0, 0, 0, 0, 0,
	2455, 0, 0, 4337, 4338, 1251, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 267, 267, 0,
	0, 4346, 4349, 1251, 1811, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1251, 0, 0, 1251, 0,
	0, 0, 0, 267, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2020,
	0, 0, 0, 1251, 0, 0, 0, 0, 1837, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1251,
	0, 0, 4396, 0, 0, 0, 1826, 0, 0, 0,
	0, 4404, 0, 0, 0, 0, 0, 1841, 0, 0,
	0, 0, 0, 0, 0, 4412, 0, 0, 1075, 0,
	0, 0, 0, 0, 0, 1788, 1789, 0, 0, 0,
	0, 0, 4421, 0, 0, 1251, 0, 0, 0, 0,
	2020, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	0, 0, 0, 0, 267, 1791, 0, 0, 0, 0,
	0, 0, 1817, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1251, 0, 267, 0, 0, 0,
	0, 1844, 0, 0, 0, 1812, 0, 0, 0, 0,
	1790, 0, 0, 0, 0, 0, 1251, 0, 1251, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 1807,
	0, 0, 1830, 0, 0, 0, 0, 0, 0, 0,
	1251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1251, 0, 0, 0, 1251, 0, 0, 0, 0,
	0, 0, 0, 1843, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1251, 0, 0, 3197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1251, 0, 1251, 0, 0, 0,
	1251, 0, 0, 0, 1813, 1814, 1815, 1816, 1251, 0,
	0, 0, 0, 0, 1796, 0, 0, 4547, 0, 1251,
	0, 4551, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1251, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1802, 1803, 1809, 1831, 1808,
	1804, 1251, 1801, 1799, 1800, 1792, 1793, 1794, 1795, 1797,
	1798, 0, 1818, 1820, 0, 0, 0, 0, 0, 3720,
	0, 0, 0, 0, 0, 0, 1251, 1251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1805, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 1075, 1075,
	0, 1251, 0, 0, 0, 0, 0, 0, 4608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	1247, 1811, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 1959, 267, 0, 0, 0, 1251, 0, 819, 1251,
	0, 0, 0, 0, 0, 819, 0, 0, 0, 0,
	0, 0, 2455, 0, 0, 0, 0, 0, 0, 0,
	0, 4349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 1841, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2020, 0, 0, 0,
	0, 0, 0, 0, 0, 1075, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1251, 0, 0, 0, 0, 0, 736, 1817,
	0, 0, 2020, 2020, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 719, 0,
	0, 0, 1812, 720, 0, 4729, 4729, 4729, 0, 0,
	0, 2020, 2020, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4752, 0,
	0, 0, 721, 0, 2020, 0, 0, 0, 0, 0,
	0, 0, 0, 722, 0, 0, 0, 0, 0, 0,
	1843, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1251, 1251, 0, 723, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4729, 742, 0, 0, 0,
	0, 0, 0, 0, 0, 1251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 724, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 725,
	0, 0, 0, 0, 0, 0, 1808, 1804, 0, 1801,
	1799, 1800, 1792, 1793, 1794, 1795, 1797, 1798, 0, 0,
	0, 726, 0, 0, 727, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 751, 0, 0, 267, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 741, 0, 0, 0,
	0, 0, 267, 0, 267, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 4729, 4887, 0, 0,
	0, 0, 0, 0, 0, 4891, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 267, 738, 0, 0, 0, 0,
	0, 0, 1251, 0, 0, 0, 0, 1251, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 819, 267,
	0, 267, 2020, 267, 0, 267, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1251, 748, 0, 729, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1251, 0, 267,
	267, 267, 267, 0, 0, 0, 0, 0, 1251, 1251,
	1251, 0, 0, 0, 0, 749, 0, 730, 0, 0,
	0, 0, 0, 0, 0, 1251, 1251, 1251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1137, 1251, 0, 0, 0, 0, 0, 1251,
	0, 0, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 0, 0, 0, 731, 0, 0, 0, 0,
	746, 747, 744, 0, 0, 1251, 0, 0, 739, 0,
	0, 732, 0, 0, 0, 0, 2020, 0, 269, 269,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 733, 0, 740, 0, 0, 0, 0,
	0, 0, 0, 0, 734, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 735, 0,
	0, 0, 0, 743, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 752, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 737, 0,
	0, 0, 0, 0, 0, 1251, 0, 0, 0, 0,
	0, 0, 0, 1251, 0, 0, 0, 1251, 0, 1251,
	0, 0, 0, 0, 0, 0, 1251, 0, 0, 1247,
	0, 0, 0, 0, 0, 0, 0, 1251, 1251, 0,
	0, 0, 0, 0, 0, 1247, 0, 1251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1251, 0, 1251, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1251, 0, 1251,
	0, 0, 1251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1251, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 267, 0, 0, 0, 267, 0,
	267, 0, 0, 0, 1240, 0, 0, 267, 267, 0,
	0, 1251, 1251, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1251, 0, 0, 0, 0, 1251, 0,
	263, 263, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1251, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1251, 1251, 1251, 267, 0,
	0, 0, 1113, 109, 0, 0, 0, 0, 1251, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1251, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2020,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 819, 0, 0, 1251,
	0, 1251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 1251, 267, 0, 819, 0, 0,
	0, 0, 1788, 1789, 267, 1821, 1822, 1823, 1832, 1833,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1825, 1819, 0, 0, 0, 2020,
	0, 0, 1791, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 1844, 0,
	0, 0, 1251, 0, 0, 0, 0, 1790, 0, 1251,
	0, 0, 1050, 0, 0, 0, 267, 1810, 267, 1251,
	1251, 0, 0, 1070, 0, 0, 1807, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1251, 0, 0, 1251, 0, 0,
	0, 1234, 0, 0, 0, 0, 0, 0, 0, 267,
	267, 267, 267, 0, 0, 1251, 1251, 0, 267, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1813, 1814, 1815, 1816, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 2020, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	0, 0, 1839, 0, 0, 0, 0, 0, 0, 1818,
	1820, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1251, 0, 1835, 0, 1836, 0,
	0, 0, 0, 0, 0, 1805, 1806, 0, 0, 1251,
	269, 0, 269, 269, 0, 0, 269, 0, 1335, 0,
	0, 736, 0, 1827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1811, 0,
	0, 719, 0, 0, 0, 0, 720, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 1335, 269, 269, 0, 1335, 269,
	269, 0, 0, 0, 0, 1335, 1251, 0, 0, 1251,
	0, 0, 1837, 1251, 0, 721, 0, 0, 269, 0,
	0, 0, 0, 1251, 1251, 0, 722, 0, 0, 0,
	1826, 0, 0, 0, 0, 0, 0, 0, 0, 1335,
	1251, 1841, 0, 0, 0, 0, 0, 723, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1335, 0, 269, 269, 742,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1335, 0, 0, 0, 724,
	0, 0, 1335, 269, 269, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1335, 0, 0, 0,
	0, 0, 725, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 726, 0, 0, 727, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 0,
	1247, 0, 0, 0, 751, 0, 0, 0, 0, 0,
	0, 0, 1335, 0, 0, 0, 1247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 0, 741,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 1959, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1298, 0, 1298, 1298, 0, 0, 738, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 1828,
	267, 267, 0, 0, 0, 0, 0, 0, 0, 1802,
	1803, 1809, 1831, 1808, 1804, 0, 1801, 1799, 1800, 1792,
	1793, 1794, 1795, 1797, 1798, 0, 0, 0, 0, 0,
	0, 267, 0, 3267, 0, 1388, 0, 0, 0, 0,
	0, 1494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 729,
	0, 0, 0, 1251, 0, 1251, 0, 0, 0, 0,
	0, 0, 267, 267, 0, 0, 267, 0, 0, 0,
	109, 0, 0, 1959, 0, 0, 0, 0, 749, 0,
	730, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 1788, 1789, 0, 1821, 1822, 1823, 1832, 1833,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1825, 1819, 0, 0, 0, 0,
	750, 0, 1791, 0, 0, 1622, 1623, 0, 731, 0,
	0, 1838, 0, 746, 747, 744, 0, 0, 0, 0,
	0, 739, 0, 0, 732, 0, 0, 0, 1844, 0,
	109, 0, 109, 0, 109, 0, 0, 1790, 0, 0,
	267, 0, 0, 0, 0, 0, 0, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 1807, 0, 819, 0,
	0, 0, 0, 0, 269, 0, 733, 267, 740, 0,
	0, 267, 0, 0, 0, 1335, 0, 734, 0, 0,
	269, 269, 269, 0, 0, 1070, 109, 109, 269, 0,
	0, 735, 267, 0, 0, 269, 743, 0, 0, 0,
	0, 109, 1247, 109, 0, 0, 1735, 0, 0, 0,
	752, 0, 0, 109, 0, 109, 0, 0, 0, 0,
	0, 737, 269, 0, 0, 0, 0, 0, 0, 269,
	0, 1813, 1814, 1815, 1816, 267, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1335, 0, 0, 0, 1829,
	109, 0, 1839, 0, 0, 0, 0, 0, 0, 1818,
	1820, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 267, 1335, 0, 0, 0, 1835, 0, 1836, 0,
	0, 0, 0, 0, 0, 1805, 1806, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1827, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1811, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1050, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1837, 0, 0, 0, 1858, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 0, 0, 0, 1864, 0, 0, 0, 1870, 0,
	0, 1841, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 1335, 1335, 269, 0, 0, 0,
	0, 0, 0, 0, 1335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1975, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 1494, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 1247, 1247, 269, 0, 0, 0, 0, 1812,
	269, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 1298, 0, 0, 0, 0, 0,
	0, 1494, 269, 0, 269, 0, 1830, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 1957, 1335,
	1960, 1335, 109, 1335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 0, 1335,
	1335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1335, 269, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 1335, 0, 1335, 1335, 1335, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 269,
	0, 269, 0, 269, 0, 269, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1802,
	1803, 1809, 1831, 1808, 1804, 0, 1801, 1799, 1800, 1792,
	1793, 1794, 1795, 1797, 1798, 0, 0, 0, 0, 269,
	269, 269, 269, 3266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1335, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 2256, 0, 0, 0, 2263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2276, 0,
	0, 0, 0, 0, 0, 0, 1335, 0, 0, 0,
	0, 0, 0, 0, 2288, 0, 2288, 0, 267, 0,
	0, 0, 2295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 811, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2263, 0, 0, 2322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1335, 0, 0, 811,
	0, 0, 0, 0, 0, 0, 0, 2342, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 2358, 1335, 2360, 0, 2362, 0, 2364, 0, 2365,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 1070,
	0, 1070, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2392, 2393, 2394, 0, 0, 1247, 0, 0, 0,
	0, 0, 0, 0, 1247, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1959, 0, 0,
	0, 269, 0, 0, 269, 0, 0, 0, 269, 0,
	269, 0, 0, 0, 0, 0, 0, 269, 269, 0,
	0, 0, 0, 1335, 1335, 0, 0, 269, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1959, 0, 1959, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 1335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 267, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 1050, 267, 0, 1050, 1050, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 1129, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 1335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	1335, 0, 2523, 0, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 1070, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1864, 0, 1959, 0, 1864, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 269, 0, 1335,
	0, 2772, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1335, 0, 1335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 1234,
	0, 1335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1960, 269, 0, 269, 0,
	0, 0, 0, 2820, 0, 0, 1298, 0, 0, 269,
	1298, 0, 1298, 1788, 1789, 0, 1821, 1822, 1823, 1832,
	1833, 1834, 0, 0, 0, 0, 0, 0, 0, 2276,
	0, 0, 0, 109, 0, 267, 1819, 0, 0, 0,
	0, 0, 0, 1791, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 0, 269,
	269, 269, 269, 0, 0, 0, 0, 0, 269, 1844,
	0, 269, 0, 0, 0, 0, 0, 0, 1790, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1810, 0,
	0, 0, 0, 0, 0, 0, 0, 1807, 0, 0,
	0, 267, 269, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1813, 1814, 1815, 1816, 1959, 1959, 0, 0,
	0, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2263, 0, 0,
	0, 0, 0, 0, 0, 0, 2276, 0, 0, 0,
	1829, 0, 0, 1839, 0, 0, 0, 0, 0, 0,
	1818, 1820, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1835, 0, 1836,
	0, 0, 0, 0, 1333, 0, 1805, 1806, 0, 0,
	0, 0, 0, 0, 0, 1959, 0, 0, 0, 3115,
	109, 0, 0, 109, 1827, 109, 0, 0, 0, 0,
	1959, 0, 0, 0, 0, 0, 0, 0, 3126, 1811,
	3129, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1394, 0, 267, 0, 1394, 0, 0, 0, 0, 0,
	0, 1333, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 109, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1333, 0, 1959, 0, 267,
	1959, 3159, 1494, 3161, 1494, 0, 0, 0, 0, 0,
	3167, 0, 1841, 0, 0, 0, 0, 0, 0, 0,
	0, 1333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1333, 0, 0, 1298, 0, 0, 0, 1333, 0,
	0, 0, 3195, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 1333, 0, 1335, 0, 0, 1817, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1830, 1333, 0,
	1335, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	269, 269, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 1335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 269, 0, 1335, 269, 0, 1864, 0,
	0, 0, 0, 269, 0, 267, 0, 0, 0, 0,
	1828, 0, 0, 1334, 0, 0, 0, 1335, 269, 1335,
	1802, 1803, 1809, 1831, 1808, 1804, 0, 1801, 1799, 1800,
	1792, 1793, 1794, 1795, 1797, 1798, 0, 0, 0, 0,
	0, 1335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1335, 0, 0, 0, 1335, 0, 0, 1395,
	0, 0, 0, 1395, 0, 0, 0, 0, 0, 0,
	1334, 0, 0, 0, 953, 0, 1002, 0, 0, 0,
	0, 1335, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 1959, 1335, 1959, 1335, 0, 0,
	961, 1335, 0, 0, 1334, 0, 0, 0, 269, 1335,
	0, 0, 0, 0, 0, 0, 976, 269, 959, 958,
	1335, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	1334, 0, 0, 0, 0, 1335, 0, 0, 0, 0,
	978, 0, 269, 0, 0, 0, 960, 0, 0, 0,
	1334, 963, 0, 0, 0, 0, 1011, 1334, 0, 0,
	0, 0, 0, 0, 0, 973, 974, 0, 0, 0,
	0, 1334, 0, 0, 991, 0, 0, 1335, 1335, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 1003, 965, 0, 0, 0, 0, 966, 0,
	1234, 1394, 1335, 0, 0, 0, 0, 0, 1298, 0,
	0, 0, 1494, 1494, 811, 0, 1234, 0, 0, 0,
	967, 811, 0, 0, 0, 0, 0, 1334, 0, 1000,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3438, 0, 0, 0, 1335, 0, 269,
	1335, 269, 0, 0, 0, 0, 0, 0, 0, 1001,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 969, 0, 0, 0, 0,
	0, 0, 0, 957, 3488, 3490, 0, 269, 2276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1333, 970, 971, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 979, 977, 0, 0, 0, 1335, 0, 1394, 972,
	0, 0, 0, 988, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1335, 0, 0, 0, 0, 0, 0,
	0, 1008, 999, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 109, 0, 109, 109, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1004, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3587,
	0, 0, 0, 3591, 109, 109, 0, 109, 109, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 964, 0, 0, 1010,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1333, 1333, 962, 0, 0, 0, 995, 996, 0, 0,
	1394, 0, 0, 0, 0, 0, 1335, 3644, 0, 0,
	998, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1005, 993, 0, 0, 0, 0, 0,
	0, 0, 1009, 989, 0, 0, 982, 980, 0, 985,
	1395, 0, 0, 0, 0, 986, 0, 0, 955, 0,
	1006, 0, 1234, 0, 0, 1070, 0, 0, 0, 0,
	0, 3689, 0, 1494, 0, 0, 0, 0, 0, 109,
	109, 0, 956, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 997, 1333, 987, 1333, 0, 1333,
	0, 0, 984, 0, 0, 0, 0, 0, 0, 3702,
	0, 0, 0, 1007, 0, 1333, 1333, 0, 0, 0,
	0, 990, 0, 0, 0, 0, 1333, 0, 0, 0,
	968, 0, 0, 0, 0, 0, 0, 0, 1333, 0,
	1333, 1333, 1333, 0, 992, 0, 0, 0, 0, 0,
	1334, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 811, 0, 0, 0, 0, 994,
	0, 0, 0, 1335, 0, 0, 0, 1395, 1335, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 1335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1335,
	1335, 1335, 0, 0, 0, 0, 0, 0, 0, 1394,
	0, 0, 0, 0, 0, 0, 1335, 1335, 1335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1335, 0, 0, 0, 269, 0,
	1335, 0, 0, 0, 0, 0, 0, 0, 0, 1334,
	1334, 0, 0, 0, 0, 0, 0, 0, 0, 1395,
	0, 0, 0, 0, 0, 0, 1335, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1234, 1234, 0, 0, 0, 0, 0, 0,
	0, 0, 1394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1334, 0, 1334, 0, 1334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1394, 0, 1334, 1334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1334, 0, 0, 1335, 0,
	1335, 0, 0, 0, 0, 0, 0, 1334, 1394, 1334,
	1334, 1334, 0, 0, 0, 0, 0, 0, 1335, 1335,
	0, 2276, 0, 0, 0, 0, 0, 0, 1335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3982, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2276, 0, 0, 0, 0,
	4000, 0, 0, 0, 0, 269, 0, 0, 1335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1335, 0,
	1335, 269, 0, 1335, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1335, 0, 0, 0, 0, 1333,
	1333, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1395, 0,
	4051, 0, 1335, 1335, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 1394, 0, 0, 0, 0, 0, 0,
	0, 0, 1335, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 1335, 269, 0, 0, 1234, 1335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1335, 1335, 1335, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 1335,
	1394, 1395, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 811, 0, 1333, 0, 0, 0, 0,
	1335, 1395, 1335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1335, 1333, 1395, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	1333, 0, 1333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 837, 0, 1333, 0, 0,
	109, 0, 0, 0, 0, 0, 1234, 4193, 0, 0,
	0, 0, 0, 0, 1234, 839, 0, 0, 0, 0,
	840, 0, 0, 2276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1335, 0, 0, 0, 0, 0, 0,
	1335, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	1335, 1335, 0, 0, 0, 0, 0, 0, 0, 841,
	0, 858, 0, 0, 0, 0, 0, 0, 1334, 1334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 842, 0, 0, 0,
	0, 843, 0, 0, 0, 1335, 0, 2276, 1335, 0,
	0, 0, 0, 0, 0, 0, 0, 4281, 0, 0,
	0, 0, 1395, 867, 0, 0, 0, 0, 0, 844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 865, 269, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 845, 0,
	0, 846, 0, 0, 109, 0, 0, 0, 0, 1395,
	0, 0, 0, 869, 0, 0, 0, 0, 751, 0,
	0, 0, 0, 0, 0, 1334, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4381, 0, 0,
	0, 0, 868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 863, 0, 0, 1334, 0, 0, 0, 269,
	0, 0, 0, 0, 1335, 0, 0, 0, 0, 1334,
	0, 1334, 0, 0, 1335, 1335, 1788, 1789, 0, 1821,
	1822, 1823, 1832, 1833, 1834, 0, 1334, 0, 0, 0,
	0, 1335, 0, 0, 0, 0, 0, 0, 1825, 1819,
	0, 0, 0, 2276, 0, 0, 1791, 0, 0, 0,
	0, 0, 847, 0, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 849, 0, 0, 0, 0, 0, 0,
	0, 0, 1844, 0, 0, 0, 0, 0, 0, 0,
	0, 1790, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 269, 0, 850, 0, 0, 0, 0, 0,
	1807, 0, 0, 0, 0, 0, 0, 1394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 750, 0, 4516, 1494, 269, 0,
	1394, 0, 0, 0, 0, 0, 0, 836, 0, 860,
	0, 0, 0, 0, 0, 1394, 0, 0, 851, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 1814, 1815, 1816, 0,
	1394, 0, 0, 857, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1333, 0, 2523, 0,
	852, 0, 0, 0, 853, 872, 0, 871, 0, 0,
	0, 854, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 1829, 0, 855, 1839, 0, 0, 0,
	864, 0, 0, 1818, 1820, 0, 873, 0, 870, 0,
	0, 0, 1333, 0, 752, 0, 0, 0, 0, 0,
	1835, 0, 1836, 0, 0, 0, 0, 0, 0, 1805,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 1333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4613, 1811, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1333, 0, 1333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1394, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 0, 1333, 0,
	0, 0, 1333, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 1826, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1841, 0, 1333, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 1333, 0, 1333, 4667, 0, 0, 1394, 0, 0,
	0, 0, 0, 0, 811, 1333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1817, 1333, 0, 0, 0, 0, 1395, 0, 0, 0,
	4706, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1395,
	0, 0, 0, 1333, 1333, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 1395, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1395,
	0, 1843, 0, 0, 0, 0, 109, 4772, 0, 0,
	0, 0, 109, 0, 0, 1334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1394, 0, 0, 1394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1802, 1803, 1809, 1831, 1808, 1804, 0,
	1801, 1799, 1800, 1792, 1793, 1794, 1795, 1797, 1798, 0,
	1334, 0, 0, 0, 0, 0, 0, 3263, 0, 0,
	0, 0, 1394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1334, 0, 1334, 0, 0, 0, 0, 1394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1395, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1334, 0, 0,
	0, 1334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1334, 0, 0, 1788,
	1789, 0, 1821, 1822, 1823, 1832, 1833, 1834, 0, 0,
	1334, 0, 1334, 0, 0, 0, 1395, 0, 0, 0,
	0, 1825, 1819, 0, 1334, 0, 0, 0, 0, 1791,
	0, 0, 0, 0, 0, 1334, 0, 0, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1334, 0, 0, 0, 0, 1844, 0, 0, 0, 0,
	0, 0, 0, 0, 1790, 0, 0, 0, 0, 0,
	0, 0, 1394, 0, 1810, 0, 0, 0, 0, 0,
	0, 0, 0, 1807, 0, 0, 0, 0, 0, 0,
	0, 0, 1334, 1334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1813, 1814,
	1815, 1816, 1395, 0, 0, 1395, 0, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 0, 0, 1839,
	0, 0, 0, 0, 0, 0, 1818, 1820, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1835, 0, 1836, 0, 0, 0, 1333,
	0, 1395, 1805, 1806, 1333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1395, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1811, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1837,
	0, 0, 0, 0, 0, 1333, 1333, 1333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 0, 0,
	0, 0, 1333, 1333, 1333, 0, 0, 0, 1841, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1333, 0, 0, 0, 0, 0, 1394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1395, 1394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1830, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1788, 1789, 0, 1821, 1822, 1823, 1832,
	1833, 1834, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 1825, 1819, 0, 0, 0,
	0, 0, 0, 1791, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1394, 0, 1394, 0, 0, 1844,
	0, 0, 0, 0, 0, 0, 0, 0, 1790, 0,
	0, 0, 0, 0, 1333, 1333, 0, 0, 1810, 0,
	0, 0, 0, 0, 1394, 0, 0, 1807, 0, 0,
	0, 0, 0, 0, 0, 0, 1828, 0, 1334, 0,
	0, 0, 0, 1334, 0, 0, 1802, 1803, 1809, 1831,
	1808, 1804, 0, 1801, 1799, 1800, 1792, 1793, 1794, 1795,
	1797, 1798, 0, 0, 0, 0, 0, 0, 0, 0,
	3262, 0, 0, 0, 1333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1394, 0, 1333, 0, 0, 1333,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1334,
	1394, 0, 1813, 1814, 1815, 1816, 0, 0, 0, 0,
	0, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1334, 1334, 1334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1333, 1333,
	0, 1334, 1334, 1334, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 1839, 0, 0, 0, 0, 1333, 1334,
	1818, 1820, 0, 0, 0, 1395, 0, 0, 0, 0,
	1394, 0, 0, 0, 0, 1333, 0, 1835, 0, 1836,
	0, 0, 0, 0, 0, 0, 1805, 1806, 0, 0,
	0, 1395, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1827, 0, 0, 0, 0, 0,
	0, 0, 1333, 1333, 1333, 0, 0, 0, 0, 1811,
	0, 0, 0, 0, 0, 1394, 1788, 1789, 0, 1821,
	1822, 1823, 1832, 1833, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1825, 1819,
	0, 0, 0, 0, 0, 1394, 1791, 0, 0, 0,
	0, 0, 0, 1837, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 1844, 0, 0, 0, 0, 0, 0, 0,
	0, 1790, 1841, 0, 0, 0, 1394, 0, 1333, 0,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	1807, 0, 0, 1395, 0, 1395, 0, 0, 0, 0,
	0, 1394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1334, 1334, 0, 0, 0, 0, 0,
	0, 0, 0, 1395, 0, 0, 0, 1817, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 1814, 1815, 1816, 1394,
	0, 0, 0, 1334, 0, 1796, 1333, 1830, 0, 0,
	0, 0, 0, 1395, 0, 1334, 1333, 1333, 1334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1395,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 0,
	0, 0, 0, 1829, 0, 0, 1839, 0, 0, 0,
	0, 0, 0, 1818, 1820, 0, 0, 0, 0, 0,
	0, 1394, 0, 0, 1333, 0, 0, 1334, 1334, 0,
	1835, 0, 1836, 0, 0, 0, 0, 0, 0, 1805,
	1806, 0, 0, 0, 0, 0, 0, 1334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 1395,
	0, 0, 0, 0, 1334, 0, 0, 0, 0, 0,
	1828, 0, 1811, 0, 0, 0, 0, 0, 0, 0,
	1802, 1803, 1809, 1831, 1808, 1804, 0, 1801, 1799, 1800,
	1792, 1793, 1794, 1795, 1797, 1798, 0, 0, 0, 0,
	0, 1334, 1334, 1334, 3261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1395, 0, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1395, 1841, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1395, 0, 1334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1817, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1395, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1333, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	1333, 1333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1333, 0, 0,
	1830, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1395, 0,
	0, 1843, 0, 0, 0, 1334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1334, 1334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1395, 0, 0, 1334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1802, 1803, 1809, 1831, 1808, 1804, 0,
	1801, 1799, 1800, 1792, 1793, 1794, 1795, 1797, 1798, 0,
	0, 0, 0, 0, 0, 0, 0, 2582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1392, 0, 0, 1334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1334,
	1334, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	1397, 284, 285, 1398, 1399, 1400, 1334, 1401, 632, 1402,
	1403, 1404, 1405, 286, 287, 1191, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 1406,
	637, 296, 297, 298, 299, 300, 301, 1407, 1408, 0,
	302, 638, 639, 640, 1409, 303, 304, 641, 1410, 1336,
	1411, 305, 306, 307, 308, 309, 310, 311, 0, 1412,
	313, 314, 315, 312, 316, 1413, 317, 0, 318, 319,
	320, 321, 322, 323, 1414, 324, 325, 326, 1192, 327,
	328, 329, 1415, 1416, 1418, 1417, 1419, 1420, 1421, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 1422, 339,
	336, 337, 1423, 340, 338, 341, 1424, 342, 343, 344,
	1425, 1426, 345, 346, 347, 1427, 348, 349, 1428, 350,
	351, 352, 1429, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 1430,
	274, 1431, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 1432, 371, 372, 1433, 1434, 1193,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 1435, 385, 650, 1436, 651, 386,
	1437, 387, 388, 389, 390, 391, 652, 653, 654, 471,
	1195, 392, 393, 1438, 394, 395, 396, 397, 398, 0,
	0, 0, 275, 399, 400, 401, 403, 1439, 1194, 402,
	655, 656, 1440, 657, 1441, 404, 405, 1196, 658, 1197,
	406, 407, 408, 1198, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 1442, 416, 418, 417, 1443, 419,
	659, 1199, 420, 421, 1200, 1444, 422, 0, 0, 0,
	423, 424, 427, 1445, 1446, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 1201, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 1202, 467,
	456, 1447, 276, 1203, 468, 469, 1448, 660, 470, 661,
	472, 473, 1449, 0, 474, 0, 1450, 1451, 476, 477,
	478, 1452, 1453, 479, 480, 662, 1204, 481, 1205, 663,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 1454, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 1455, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 1456, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 1457, 533,
	534, 535, 1206, 536, 537, 538, 539, 540, 669, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 1458, 558, 559, 557, 560, 561, 562,
	1459, 563, 564, 546, 547, 565, 566, 1207, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 1460, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 1461, 590, 591, 0, 587,
	578, 1462, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 1463, 600, 673, 674, 675, 676, 1464, 609, 1465,
	601, 602, 603, 677, 604, 678, 1466, 605, 606, 607,
	608, 0, 610, 611, 1467, 1468, 612, 613, 614, 616,
	617, 615, 618, 1469, 619, 1470, 0, 620, 621, 622,
	679, 680, 681, 1471, 624, 623, 625, 682, 1472, 626,
	1473, 1474, 1475, 1476, 627, 628, 683, 629, 630, 631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1392,
	0, 0, 0, 0, 0, 0, 0, 2750, 0, 0,
	0, 0, 0, 0, 0, 2751, 277, 279, 278, 280,
	281, 282, 283, 1397, 284, 285, 1398, 1399, 1400, 0,
	1401, 632, 1402, 1403, 1404, 1405, 286, 287, 1191, 288,
	289, 290, 291, 292, 293, 633, 634, 0, 294, 635,
	295, 636, 1406, 637, 296, 297, 298, 299, 300, 301,
	1407, 1408, 0, 302, 638, 639, 640, 1409, 303, 304,
	641, 1410, 1336, 1411, 305, 306, 307, 308, 309, 310,
	311, 0, 1412, 313, 314, 315, 312, 316, 1413, 317,
	0, 318, 319, 320, 321, 322, 323, 1414, 324, 325,
	326, 1192, 327, 328, 329, 1415, 1416, 1418, 1417, 1419,
	1420, 1421, 330, 331, 332, 333, 334, 0, 335, 642,
	643, 1422, 339, 336, 337, 1423, 340, 338, 341, 1424,
	342, 343, 344, 1425, 1426, 345, 346, 347, 1427, 348,
	349, 1428, 350, 351, 352, 1429, 353, 354, 644, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 645,
	646, 366, 1430, 274, 1431, 0, 0, 0, 0, 367,
	368, 369, 647, 0, 0, 0, 370, 1432, 371, 372,
	1433, 1434, 1193, 373, 374, 375, 648, 649, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 1435, 385, 650,
	1436, 651, 386, 1437, 387, 388, 389, 390, 391, 652,
	653, 654, 471, 1195, 392, 393, 1438, 394, 395, 396,
	397, 398, 0, 0, 0, 275, 399, 400, 401, 403,
	1439, 1194, 402, 655, 656, 1440, 657, 1441, 404, 405,
	1196, 658, 1197, 406, 407, 408, 1198, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 1442, 416, 418,
	417, 1443, 419, 659, 1199, 420, 421, 1200, 1444, 422,
	0, 0, 0, 423, 424, 427, 1445, 1446, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 1201, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 1202, 467, 456, 1447, 276, 1203, 468, 469, 1448,
	660, 470, 661, 472, 473, 1449, 0, 474, 0, 1450,
	1451, 476, 477, 478, 1452, 1453, 479, 480, 662, 1204,
	481, 1205, 663, 482, 483, 475, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 1454, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 666, 501, 667, 502,
	503, 1455, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 668, 513, 514, 516, 515, 517, 1456, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 1457, 533, 534, 535, 1206, 536, 537, 538, 539,
	540, 669, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 1458, 558, 559, 557,
	560, 561, 562, 1459, 563, 564, 546, 547, 565, 566,
	1207, 567, 568, 569, 570, 571, 572, 573, 670, 0,
	574, 1460, 575, 576, 577, 579, 548, 580, 585, 586,
	671, 581, 582, 583, 584, 672, 588, 589, 1461, 590,
	591, 0, 587, 578, 1462, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 1463, 600, 673, 674, 675, 676,
	1464, 609, 1465, 601, 602, 603, 677, 604, 678, 1466,
	605, 606, 607, 608, 0, 610, 611, 1467, 1468, 612,
	613, 614, 616, 617, 615, 618, 1469, 619, 1470, 0,
	620, 621, 622, 679, 680, 681, 1471, 624, 623, 625,
	682, 1472, 626, 1473, 1474, 1475, 1476, 627, 628, 683,
	629, 630, 631, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1392, 0, 0, 0, 0, 3729, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3731, 277, 279, 278,
	280, 281, 282, 283, 1397, 284, 285, 1398, 1399, 1400,
	0, 1401, 632, 1402, 1403, 1404, 1405, 286, 287, 1191,
	288, 289, 290, 291, 292, 293, 633, 634, 0, 294,
	635, 295, 636, 1406, 637, 296, 297, 298, 299, 300,
	301, 1407, 1408, 0, 302, 638, 639, 640, 1409, 303,
	304, 641, 1410, 1336, 1411, 305, 306, 307, 308, 309,
	310, 311, 0, 1412, 313, 314, 315, 312, 316, 1413,
	317, 0, 318, 319, 320, 321, 322, 323, 1414, 324,
	325, 326, 1192, 327, 328, 329, 1415, 1416, 1418, 1417,
	1419, 1420, 1421, 330, 331, 332, 333, 334, 0, 335,
	642, 643, 1422, 339, 336, 337, 1423, 340, 338, 341,
	1424, 342, 343, 344, 1425, 1426, 345, 346, 347, 1427,
	348, 349, 1428, 350, 351, 352, 1429, 353, 354, 644,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	645, 646, 366, 1430, 274, 1431, 0, 0, 0, 0,
	367, 368, 369, 647, 0, 0, 0, 370, 1432, 371,
	372, 1433, 1434, 1193, 373, 374, 375, 648, 649, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 1435, 385,
	650, 1436, 651, 386, 1437, 387, 388, 389, 390, 391,
	652, 653, 654, 471, 1195, 392, 393, 1438, 394, 395,
	396, 397, 398, 0, 0, 0, 275, 399, 400, 401,
	403, 1439, 1194, 402, 655, 656, 1440, 657, 1441, 404,
	405, 1196, 658, 1197, 406, 407, 408, 1198, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 1442, 416,
	418, 417, 1443, 419, 659, 1199, 420, 421, 1200, 1444,
	422, 0, 0, 0, 423, 424, 427, 1445, 1446, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 1201, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 1202, 467, 456, 1447, 276, 1203, 468, 469,
	1448, 660, 470, 661, 472, 473, 1449, 0, 474, 0,
	1450, 1451, 476, 477, 478, 1452, 1453, 479, 480, 662,
	1204, 481, 1205, 663, 482, 483, 475, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 1454, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 666, 501, 667,
	502, 503, 1455, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 668, 513, 514, 516, 515, 517, 1456,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 1457, 533, 534, 535, 1206, 536, 537, 538,
	539, 540, 669, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 1458, 558, 559,
	557, 560, 561, 562, 1459, 563, 564, 546, 547, 565,
	566, 1207, 567, 568, 569, 570, 571, 572, 573, 670,
	0, 574, 1460, 575, 576, 577, 579, 548, 580, 585,
	586, 671, 581, 582, 583, 584, 672, 588, 589, 1461,
	590, 591, 0, 587, 578, 1462, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 1463, 600, 673, 674, 675,
	676, 1464, 609, 1465, 601, 602, 603, 677, 604, 678,
	1466, 605, 606, 607, 608, 0, 610, 611, 1467, 1468,
	612, 613, 614, 616, 617, 615, 618, 1469, 619, 1470,
	0, 620, 621, 622, 679, 680, 681, 1471, 624, 623,
	625, 682, 1472, 626, 1473, 1474, 1475, 1476, 627, 628,
	683, 629, 630, 631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1392, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4122, 277, 279, 278, 280, 281, 282, 283, 1397,
	284, 285, 1398, 1399, 1400, 0, 1401, 632, 1402, 1403,
	1404, 1405, 286, 287, 1191, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 1406, 637,
	296, 297, 298, 299, 300, 301, 1407, 1408, 0, 302,
	638, 639, 640, 1409, 303, 304, 641, 1410, 1336, 1411,
	305, 306, 307, 308, 309, 310, 311, 0, 1412, 313,
	314, 315, 312, 316, 1413, 317, 0, 318, 319, 320,
	321, 322, 323, 1414, 324, 325, 326, 1192, 327, 328,
	329, 1415, 1416, 1418, 1417, 1419, 1420, 1421, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 1422, 339, 336,
	337, 1423, 340, 338, 341, 1424, 342, 343, 344, 1425,
	1426, 345, 346, 347, 1427, 348, 349, 1428, 350, 351,
	352, 1429, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 1430, 274,
	1431, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 1432, 371, 372, 1433, 1434, 1193, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 1435, 385, 650, 1436, 651, 386, 1437,
	387, 388, 389, 390, 391, 652, 653, 654, 471, 1195,
	392, 393, 1438, 394, 395, 396, 397, 398, 0, 0,
	0, 275, 399, 400, 401, 403, 1439, 1194, 402, 655,
	656, 1440, 657, 1441, 404, 405, 1196, 658, 1197, 406,
	407, 408, 1198, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 1442, 416, 418, 417, 1443, 419, 659,
	1199, 420, 421, 1200, 1444, 422, 0, 0, 0, 423,
	424, 427, 1445, 1446, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 1201, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 1202, 467, 456,
	1447, 276, 1203, 468, 469, 1448, 660, 470, 661, 472,
	473, 1449, 0, 474, 0, 1450, 1451, 476, 477, 478,
	1452, 1453, 479, 480, 662, 1204, 481, 1205, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 1454, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 1455, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 1456, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 1457, 533, 534,
	535, 1206, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 1458, 558, 559, 557, 560, 561, 562, 1459,
	563, 564, 546, 547, 565, 566, 1207, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 1460, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 1461, 590, 591, 0, 587, 578,
	1462, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	1463, 600, 673, 674, 675, 676, 1464, 609, 1465, 601,
	602, 603, 677, 604, 678, 1466, 605, 606, 607, 608,
	0, 610, 611, 1467, 1468, 612, 613, 614, 616, 617,
	615, 618, 1469, 619, 1470, 0, 620, 621, 622, 679,
	680, 681, 1471, 624, 623, 625, 682, 1472, 626, 1473,
	1474, 1475, 1476, 627, 628, 683, 629, 630, 631, 0,
	0, 0, 0, 0, 0, 1392, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4332, 277, 279, 278, 280, 281, 282, 283, 1397,
	284, 285, 1398, 1399, 1400, 0, 1401, 632, 1402, 1403,
	1404, 1405, 286, 287, 1191, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 1406, 637,
	296, 297, 298, 299, 300, 301, 1407, 1408, 0, 302,
	638, 639, 640, 1409, 303, 304, 641, 1410, 1336, 1411,
	305, 306, 307, 308, 309, 310, 311, 0, 1412, 313,
	314, 315, 312, 316, 1413, 317, 0, 318, 319, 320,
	321, 322, 323, 1414, 324, 325, 326, 1192, 327, 328,
	329, 1415, 1416, 1418, 1417, 1419, 1420, 1421, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 1422, 339, 336,
	337, 1423, 340, 338, 341, 1424, 342, 343, 344, 1425,
	1426, 345, 346, 347, 1427, 348, 349, 1428, 350, 351,
	352, 1429, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 1430, 274,
	1431, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 1432, 371, 372, 1433, 1434, 1193, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 1435, 385, 650, 1436, 651, 386, 1437,
	387, 388, 389, 390, 391, 652, 653, 654, 471, 1195,
	392, 393, 1438, 394, 395, 396, 397, 398, 0, 0,
	0, 275, 399, 400, 401, 403, 1439, 1194, 402, 655,
	656, 1440, 657, 1441, 404, 405, 1196, 658, 1197, 406,
	407, 408, 1198, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 1442, 416, 418, 417, 1443, 419, 659,
	1199, 420, 421, 1200, 1444, 422, 0, 0, 0, 423,
	424, 427, 1445, 1446, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 1201, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 1202, 467, 456,
	1447, 276, 1203, 468, 469, 1448, 660, 470, 661, 472,
	473, 1449, 0, 474, 0, 1450, 1451, 476, 477, 478,
	1452, 1453, 479, 480, 662, 1204, 481, 1205, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 1454, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 1455, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 1456, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 1457, 533, 534,
	535, 1206, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 1458, 558, 559, 557, 560, 561, 562, 1459,
	563, 564, 546, 547, 565, 566, 1207, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 1460, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 1461, 590, 591, 0, 587, 578,
	1462, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	1463, 600, 673, 674, 675, 676, 1464, 609, 1465, 601,
	602, 603, 677, 604, 678, 1466, 605, 606, 607, 608,
	0, 610, 611, 1467, 1468, 612, 613, 614, 616, 617,
	615, 618, 1469, 619, 1470, 0, 620, 621, 622, 679,
	680, 681, 1471, 624, 623, 625, 682, 1472, 626, 1473,
	1474, 1475, 1476, 627, 628, 683, 629, 630, 631, 0,
	0, 0, 0, 0, 0, 1392, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4202, 277, 279, 278, 280, 281, 282, 283, 1397,
	284, 285, 1398, 1399, 1400, 0, 1401, 632, 1402, 1403,
	1404, 1405, 286, 287, 1191, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 1406, 637,
	296, 297, 298, 299, 300, 301, 1407, 1408, 0, 302,
	638, 639, 640, 1409, 303, 304, 641, 1410, 1336, 1411,
	305, 306, 307, 308, 309, 310, 311, 0, 1412, 313,
	314, 315, 312, 316, 1413, 317, 0, 318, 319, 320,
	321, 322, 323, 1414, 324, 325, 326, 1192, 327, 328,
	329, 1415, 1416, 1418, 1417, 1419, 1420, 1421, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 1422, 339, 336,
	337, 1423, 340, 338, 341, 1424, 342, 343, 344, 1425,
	1426, 345, 346, 347, 1427, 348, 349, 1428, 350, 351,
	352, 1429, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 1430, 274,
	1431, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 1432, 371, 372, 1433, 1434, 1193, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 1435, 385, 650, 1436, 651, 386, 1437,
	387, 388, 389, 390, 391, 652, 653, 654, 471, 1195,
	392, 393, 1438, 394, 395, 396, 397, 398, 0, 0,
	0, 275, 399, 400, 401, 403, 1439, 1194, 402, 655,
	656, 1440, 657, 1441, 404, 405, 1196, 658, 1197, 406,
	407, 408, 1198, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 1442, 416, 418, 417, 1443, 419, 659,
	1199, 420, 421, 1200, 1444, 422, 0, 0, 0, 423,
	424, 427, 1445, 1446, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 1201, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 1202, 467, 456,
	1447, 276, 1203, 468, 469, 1448, 660, 470, 661, 472,
	473, 1449, 0, 474, 0, 1450, 1451, 476, 477, 478,
	1452, 1453, 479, 480, 662, 1204, 481, 1205, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 1454, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 1455, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 1456, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 1457, 533, 534,
	535, 1206, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 1458, 558, 559, 557, 560, 561, 562, 1459,
	563, 564, 546, 547, 565, 566, 1207, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 1460, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 1461, 590, 591, 0, 587, 578,
	1462, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	1463, 600, 673, 674, 675, 676, 1464, 609, 1465, 601,
	602, 603, 677, 604, 678, 1466, 605, 606, 607, 608,
	0, 610, 611, 1467, 1468, 612, 613, 614, 616, 617,
	615, 618, 1469, 619, 1470, 0, 620, 621, 622, 679,
	680, 681, 1471, 624, 623, 625, 682, 1472, 626, 1473,
	1474, 1475, 1476, 627, 628, 683, 629, 630, 631, 0,
	0, 0, 0, 0, 0, 1392, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4052, 277, 279, 278, 280, 281, 282, 283, 1397,
	284, 285, 1398, 1399, 1400, 0, 1401, 632, 1402, 1403,
	1404, 1405, 286, 287, 1191, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 1406, 637,
	296, 297, 298, 299, 300, 301, 1407, 1408, 0, 302,
	638, 639, 640, 1409, 303, 304, 641, 1410, 1336, 1411,
	305, 306, 307, 308, 309, 310, 311, 0, 1412, 313,
	314, 315, 312, 316, 1413, 317, 0, 318, 319, 320,
	321, 322, 323, 1414, 324, 325, 326, 1192, 327, 328,
	329, 1415, 1416, 1418, 1417, 1419, 1420, 1421, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 1422, 339, 336,
	337, 1423, 340, 338, 341, 1424, 342, 343, 344, 1425,
	1426, 345, 346, 347, 1427, 348, 349, 1428, 350, 351,
	352, 1429, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 1430, 274,
	1431, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 1432, 371, 372, 1433, 1434, 1193, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 1435, 385, 650, 1436, 651, 386, 1437,
	387, 388, 389, 390, 391, 652, 653, 654, 471, 1195,
	392, 393, 1438, 394, 395, 396, 397, 398, 0, 0,
	0, 275, 399, 400, 401, 403, 1439, 1194, 402, 655,
	656, 1440, 657, 1441, 404, 405, 1196, 658, 1197, 406,
	407, 408, 1198, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 1442, 416, 418, 417, 1443, 419, 659,
	1199, 420, 421, 1200, 1444, 422, 0, 0, 0, 423,
	424, 427, 1445, 1446, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 1201, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 1202, 467, 456,
	1447, 276, 1203, 468, 469, 1448, 660, 470, 661, 472,
	473, 1449, 0, 474, 0, 1450, 1451, 476, 477, 478,
	1452, 1453, 479, 480, 662, 1204, 481, 1205, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 1454, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 1455, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 1456, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 1457, 533, 534,
	535, 1206, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 1458, 558, 559, 557, 560, 561, 562, 1459,
	563, 564, 546, 547, 565, 566, 1207, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 1460, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 1461, 590, 591, 0, 587, 578,
	1462, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	1463, 600, 673, 674, 675, 676, 1464, 609, 1465, 601,
	602, 603, 677, 604, 678, 1466, 605, 606, 607, 608,
	0, 610, 611, 1467, 1468, 612, 613, 614, 616, 617,
	615, 618, 1469, 619, 1470, 0, 620, 621, 622, 679,
	680, 681, 1471, 624, 623, 625, 682, 1472, 626, 1473,
	1474, 1475, 1476, 627, 628, 683, 629, 630, 631, 0,
	0, 0, 0, 0, 0, 1392, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3747, 277, 279, 278, 280, 281, 282, 283, 1397,
	284, 285, 1398, 1399, 1400, 0, 1401, 632, 1402, 1403,
	1404, 1405, 286, 287, 1191, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 1406, 637,
	296, 297, 298, 299, 300, 301, 1407, 1408, 0, 302,
	638, 639, 640, 1409, 303, 304, 641, 1410, 1336, 1411,
	305, 306, 307, 308, 309, 310, 311, 0, 1412, 313,
	314, 315, 312, 316, 1413, 317, 0, 318, 319, 320,
	321, 322, 323, 1414, 324, 325, 326, 1192, 327, 328,
	329, 1415, 1416, 1418, 1417, 1419, 1420, 1421, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 1422, 339, 336,
	337, 1423, 340, 338, 341, 1424, 342, 343, 344, 1425,
	1426, 345, 346, 347, 1427, 348, 349, 1428, 350, 351,
	352, 1429, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 1430, 274,
	1431, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 1432, 371, 372, 1433, 1434, 1193, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 1435, 385, 650, 1436, 651, 386, 1437,
	387, 388, 389, 390, 391, 652, 653, 654, 471, 1195,
	392, 393, 1438, 394, 395, 396, 397, 398, 0, 0,
	0, 275, 399, 400, 401, 403, 1439, 1194, 402, 655,
	656, 1440, 657, 1441, 404, 405, 1196, 658, 1197, 406,
	407, 408, 1198, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 1442, 416, 418, 417, 1443, 419, 659,
	1199, 420, 421, 1200, 1444, 422, 0, 0, 0, 423,
	424, 427, 1445, 1446, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 1201, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 1202, 467, 456,
	1447, 276, 1203, 468, 469, 1448, 660, 470, 661, 472,
	473, 1449, 0, 474, 0, 1450, 1451, 476, 477, 478,
	1452, 1453, 479, 480, 662, 1204, 481, 1205, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 1454, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 1455, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 1456, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 1457, 533, 534,
	535, 1206, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 1458, 558, 559, 557, 560, 561, 562, 1459,
	563, 564, 546, 547, 565, 566, 1207, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 1460, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 1461, 590, 591, 0, 587, 578,
	1462, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	1463, 600, 673, 674, 675, 676, 1464, 609, 1465, 601,
	602, 603, 677, 604, 678, 1466, 605, 606, 607, 608,
	0, 610, 611, 1467, 1468, 612, 613, 614, 616, 617,
	615, 618, 1469, 619, 1470, 0, 620, 621, 622, 679,
	680, 681, 1471, 624, 623, 625, 682, 1472, 626, 1473,
	1474, 1475, 1476, 627, 628, 683, 629, 630, 631, 0,
	0, 0, 0, 0, 0, 1392, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3571, 277, 279, 278, 280, 281, 282, 283, 1397,
	284, 285, 1398, 1399, 1400, 0, 1401, 632, 1402, 1403,
	1404, 1405, 286, 287, 1191, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 1406, 637,
	296, 297, 298, 299, 300, 301, 1407, 1408, 0, 302,
	638, 639, 640, 1409, 303, 304, 641, 1410, 1336, 1411,
	305, 306, 307, 308, 309, 310, 311, 0, 1412, 313,
	314, 315, 312, 316, 1413, 317, 0, 318, 319, 320,
	321, 322, 323, 1414, 324, 325, 326, 1192, 327, 328,
	329, 1415, 1416, 1418, 1417, 1419, 1420, 1421, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 1422, 339, 336,
	337, 1423, 340, 338, 341, 1424, 342, 343, 344, 1425,
	1426, 345, 346, 347, 1427, 348, 349, 1428, 350, 351,
	352, 1429, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 1430, 274,
	1431, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 1432, 371, 372, 1433, 1434, 1193, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 1435, 385, 650, 1436, 651, 386, 1437,
	387, 388, 389, 390, 391, 652, 653, 654, 471, 1195,
	392, 393, 1438, 394, 395, 396, 397, 398, 0, 0,
	0, 275, 399, 400, 401, 403, 1439, 1194, 402, 655,
	656, 1440, 657, 1441, 404, 405, 1196, 658, 1197, 406,
	407, 408, 1198, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 1442, 416, 418, 417, 1443, 419, 659,
	1199, 420, 421, 1200, 1444, 422, 0, 0, 0, 423,
	424, 427, 1445, 1446, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 1201, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 1202, 467, 456,
	1447, 276, 1203, 468, 469, 1448, 660, 470, 661, 472,
	473, 1449, 0, 474, 0, 1450, 1451, 476, 477, 478,
	1452, 1453, 479, 480, 662, 1204, 481, 1205, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 1454, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 1455, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 1456, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 1457, 533, 534,
	535, 1206, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 1458, 558, 559, 557, 560, 561, 562, 1459,
	563, 564, 546, 547, 565, 566, 1207, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 1460, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 1461, 590, 591, 0, 587, 578,
	1462, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	1463, 600, 673, 674, 675, 676, 1464, 609, 1465, 601,
	602, 603, 677, 604, 678, 1466, 605, 606, 607, 608,
	0, 610, 611, 1467, 1468, 612, 613, 614, 616, 617,
	615, 618, 1469, 619, 1470, 0, 620, 621, 622, 679,
	680, 681, 1471, 624, 623, 625, 682, 1472, 626, 1473,
	1474, 1475, 1476, 627, 628, 683, 629, 630, 631, 0,
	0, 0, 0, 0, 0, 1392, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2605, 277, 279, 278, 280, 281, 282, 283, 1397,
	284, 285, 1398, 1399, 1400, 0, 1401, 632, 1402, 1403,
	1404, 1405, 286, 287, 1191, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 1406, 637,
	296, 297, 298, 299, 300, 301, 1407, 1408, 0, 302,
	638, 639, 640, 1409, 303, 304, 641, 1410, 1336, 1411,
	305, 306, 307, 308, 309, 310, 311, 0, 1412, 313,
	314, 315, 312, 316, 1413, 317, 0, 318, 319, 320,
	321, 322, 323, 1414, 324, 325, 326, 1192, 327, 328,
	329, 1415, 1416, 1418, 1417, 1419, 1420, 1421, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 1422, 339, 336,
	337, 1423, 340, 338, 341, 1424, 342, 343, 344, 1425,
	1426, 345, 346, 347, 1427, 348, 349, 1428, 350, 351,
	352, 1429, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 1430, 274,
	1431, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 1432, 371, 372, 1433, 1434, 1193, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 1435, 385, 650, 1436, 651, 386, 1437,
	387, 388, 389, 390, 391, 652, 653, 654, 471, 1195,
	392, 393, 1438, 394, 395, 396, 397, 398, 0, 0,
	0, 275, 399, 400, 401, 403, 1439, 1194, 402, 655,
	656, 1440, 657, 1441, 404, 405, 1196, 658, 1197, 406,
	407, 408, 1198, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 1442, 416, 418, 417, 1443, 419, 659,
	1199, 420, 421, 1200, 1444, 422, 0, 0, 0, 423,
	424, 427, 1445, 1446, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 1201, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 1202, 467, 456,
	1447, 276, 1203, 468, 469, 1448, 660, 470, 661, 472,
	473, 1449, 0, 474, 0, 1450, 1451, 476, 477, 478,
	1452, 1453, 479, 480, 662, 1204, 481, 1205, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 1454, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 1455, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 1456, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 1457, 533, 534,
	535, 1206, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 1458, 558, 559, 557, 560, 561, 562, 1459,
	563, 564, 546, 547, 565, 566, 1207, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 1460, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 1461, 590, 591, 0, 587, 578,
	1462, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	1463, 600, 673, 674, 675, 676, 1464, 609, 1465, 601,
	602, 603, 677, 604, 678, 1466, 605, 606, 607, 608,
	0, 610, 611, 1467, 1468, 612, 613, 614, 616, 617,
	615, 618, 1469, 619, 1470, 0, 620, 621, 622, 679,
	680, 681, 1471, 624, 623, 625, 682, 1472, 626, 1473,
	1474, 1475, 1476, 627, 628, 683, 629, 630, 631, 0,
	0, 0, 0, 1488, 0, 1392, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2236, 277, 279, 278, 280, 281, 282, 283, 1397,
	284, 285, 1398, 1399, 1400, 0, 1401, 632, 1402, 1403,
	1404, 1405, 286, 287, 1191, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 1406, 637,
	296, 297, 298, 299, 300, 301, 1407, 1408, 0, 302,
	638, 639, 640, 1409, 303, 304, 641, 1410, 1336, 1411,
	305, 306, 307, 308, 309, 310, 311, 0, 1412, 313,
	314, 315, 312, 316, 1413, 317, 0, 318, 319, 320,
	321, 322, 323, 1414, 324, 325, 326, 1192, 327, 328,
	329, 1415, 1416, 1418, 1417, 1419, 1420, 1421, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 1422, 339, 336,
	337, 1423, 340, 338, 341, 1424, 342, 343, 344, 1425,
	1426, 345, 346, 347, 1427, 348, 349, 1428, 350, 351,
	352, 1429, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 1430, 274,
	1431, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 1432, 371, 372, 1433, 1434, 1193, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 1435, 385, 650, 1436, 651, 386, 1437,
	387, 388, 389, 390, 391, 652, 653, 654, 471, 1195,
	392, 393, 1438, 394, 395, 396, 397, 398, 0, 0,
	0, 275, 399, 400, 401, 403, 1439, 1194, 402, 655,
	656, 1440, 657, 1441, 404, 405, 1196, 658, 1197, 406,
	407, 408, 1198, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 1442, 416, 418, 417, 1443, 419, 659,
	1199, 420, 421, 1200, 1444, 422, 0, 0, 0, 423,
	424, 427, 1445, 1446, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 1201, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 1202, 467, 456,
	1447, 276, 1203, 468, 469, 1448, 660, 470, 661, 472,
	473, 1449, 0, 474, 0, 1450, 1451, 476, 477, 478,
	1452, 1453, 479, 480, 662, 1204, 481, 1205, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 1454, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 1455, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 1456, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 1457, 533, 534,
	535, 1206, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 1458, 558, 559, 557, 560, 561, 562, 1459,
	563, 564, 546, 547, 565, 566, 1207, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 1460, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 1461, 590, 591, 0, 587, 578,
	1462, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	1463, 600, 673, 674, 675, 676, 1464, 609, 1465, 601,
	602, 603, 677, 604, 678, 1466, 605, 606, 607, 608,
	0, 610, 611, 1467, 1468, 612, 613, 614, 616, 617,
	615, 618, 1469, 619, 1470, 0, 620, 621, 622, 679,
	680, 681, 1471, 624, 623, 625, 682, 1472, 626, 1473,
	1474, 1475, 1476, 627, 628, 683, 629, 630, 631, 1389,
	0, 1392, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 1397, 284, 285, 1398, 1399,
	1400, 0, 1401, 632, 1402, 1403, 1404, 1405, 286, 287,
	1191, 288, 289, 290, 291, 292, 293, 633, 634, 0,
	294, 635, 295, 636, 1406, 637, 296, 297, 298, 299,
	300, 301, 1407, 1408, 0, 302, 638, 639, 640, 1409,
	303, 304, 641, 1410, 1336, 1411, 305, 306, 307, 308,
	309, 310, 311, 0, 1412, 313, 314, 315, 312, 316,
	1413, 317, 0, 318, 319, 320, 321, 322, 323, 1414,
	324, 325, 326, 1192, 327, 328, 329, 1415, 1416, 1418,
	1417, 1419, 1420, 1421, 330, 331, 332, 333, 334, 0,
	335, 642, 643, 1422, 339, 336, 337, 1423, 340, 338,
	341, 1424, 342, 343, 344, 1425, 1426, 345, 346, 347,
	1427, 348, 349, 1428, 350, 351, 352, 1429, 353, 354,
	644, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 645, 646, 366, 1430, 274, 1431, 0, 0, 0,
	0, 367, 368, 369, 647, 0, 0, 0, 370, 1432,
	371, 372, 1433, 1434, 1193, 373, 374, 375, 648, 649,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 1435,
	385, 650, 1436, 651, 386, 1437, 387, 388, 389, 390,
	391, 652, 653, 654, 471, 1195, 392, 393, 1438, 394,
	395, 396, 397, 398, 0, 0, 0, 275, 399, 400,
	401, 403, 1439, 1194, 402, 655, 656, 1440, 657, 1441,
	404, 405, 1196, 658, 1197, 406, 407, 408, 1198, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 1442,
	416, 418, 417, 1443, 419, 659, 1199, 420, 421, 1200,
	1444, 422, 0, 0, 0, 423, 424, 427, 1445, 1446,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 1201,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 1202, 467, 456, 1447, 276, 1203, 468,
	469, 1448, 660, 470, 661, 472, 473, 1449, 0, 474,
	0, 1450, 1451, 476, 477, 478, 1452, 1453, 479, 480,
	662, 1204, 481, 1205, 663, 482, 483, 475, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 1454, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 666, 501,
	667, 502, 503, 1455, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 668, 513, 514, 516, 515, 517,
	1456, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 1457, 533, 534, 535, 1206, 536, 537,
	538, 539, 540, 669, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 1458, 558,
	559, 557, 560, 561, 562, 1459, 563, 564, 546, 547,
	565, 566, 1207, 567, 568, 569, 570, 571, 572, 573,
	670, 0, 574, 1460, 575, 576, 577, 579, 548, 580,
	585, 586, 671, 581, 582, 583, 584, 672, 588, 589,
	1461, 590, 591, 0, 587, 578, 1462, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 1463, 600, 673, 674,
	675, 676, 1464, 609, 1465, 601, 602, 603, 677, 604,
	678, 1466, 605, 606, 607, 608, 0, 610, 611, 1467,
	1468, 612, 613, 614, 616, 617, 615, 618, 1469, 619,
	1470, 0, 620, 621, 622, 679, 680, 681, 1471, 624,
	623, 625, 682, 1472, 626, 1473, 1474, 1475, 1476, 627,
	628, 683, 629, 630, 631, 1392, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 1397,
	284, 285, 1398, 1399, 1400, 0, 1401, 632, 1402, 1403,
	1404, 1405, 286, 287, 1191, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 1406, 637,
	296, 297, 298, 299, 300, 301, 1407, 1408, 0, 302,
	638, 639, 640, 1409, 303, 304, 641, 1410, 1336, 1411,
	305, 306, 307, 308, 309, 310, 311, 0, 1412, 313,
	314, 315, 312, 316, 1413, 317, 0, 318, 319, 320,
	321, 322, 323, 1414, 324, 325, 326, 1192, 327, 328,
	329, 1415, 1416, 1418, 1417, 1419, 1420, 1421, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 1422, 339, 336,
	337, 1423, 340, 338, 341, 1424, 342, 343, 344, 1425,
	1426, 345, 346, 347, 1427, 348, 349, 1428, 350, 351,
	352, 1429, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 1430, 274,
	1431, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 1432, 371, 372, 1433, 1434, 1193, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 1435, 385, 650, 1436, 651, 386, 1437,
	387, 388, 389, 390, 391, 652, 653, 654, 471, 1195,
	392, 393, 1438, 394, 395, 396, 397, 398, 0, 0,
	0, 275, 399, 400, 401, 403, 1439, 1194, 402, 655,
	656, 1440, 657, 1441, 404, 405, 1196, 658, 1197, 406,
	407, 408, 1198, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 1442, 416, 418, 417, 1443, 419, 659,
	1199, 420, 421, 1200, 1444, 422, 0, 0, 0, 423,
	424, 427, 1445, 1446, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 1201, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 1202, 467, 456,
	1447, 276, 1203, 468, 469, 1448, 660, 470, 661, 472,
	473, 1449, 0, 474, 0, 1450, 1451, 476, 477, 478,
	1452, 1453, 479, 480, 662, 1204, 481, 1205, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 1454, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 1455, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 1456, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 1457, 533, 534,
	535, 1206, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 1458, 558, 559, 557, 560, 561, 562, 1459,
	563, 564, 546, 547, 565, 566, 1207, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 1460, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 1461, 590, 591, 0, 587, 578,
	1462, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	1463, 600, 673, 674, 675, 676, 1464, 609, 1465, 601,
	602, 603, 677, 604, 678, 1466, 605, 606, 607, 608,
	0, 610, 611, 1467, 1468, 612, 613, 614, 616, 617,
	615, 618, 1469, 619, 1470, 0, 620, 621, 622, 679,
	680, 681, 1471, 624, 623, 625, 682, 1472, 626, 1473,
	1474, 1475, 1476, 627, 628, 683, 629, 630, 631, 2580,
	0, 1127, 1099, 1100, 1101, 1097, 1098, 1110, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 2577, 284, 285, 0, 0,
	0, 0, 0, 1151, 1115, 0, 0, 0, 286, 287,
	1191, 288, 289, 290, 291, 292, 293, 633, 1164, 0,
	294, 1171, 295, 1170, 0, 1181, 296, 297, 298, 299,
	300, 301, 1117, 1150, 1082, 302, 1211, 1212, 640, 0,
	303, 304, 1157, 0, 1138, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1192, 327, 328, 329, 1141, 1139, 1140,
	1147, 1143, 1142, 1146, 330, 331, 332, 333, 334, 1174,
	335, 1168, 1167, 1087, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 2578, 0, 345, 1159, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	1093, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 1182, 1183, 366, 1106, 274, 0, 0, 0, 0,
	0, 367, 368, 369, 1166, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 1193, 373, 374, 375, 1179, 1180,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 1189, 0, 1116, 386, 0, 387, 388, 389, 390,
	391, 1152, 1153, 1156, 471, 1195, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 275, 399, 400,
	401, 403, 0, 1194, 402, 1161, 1162, 0, 1122, 0,
	404, 405, 1196, 1154, 1197, 406, 407, 408, 1198, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 1190, 1199, 420, 421, 1200,
	0, 422, 0, 0, 0, 423, 424, 427, 1145, 1144,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 1201,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 1202, 467, 456, 1084, 276, 1203, 468,
	469, 1107, 1155, 470, 1169, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	662, 1204, 481, 1205, 1184, 482, 483, 1094, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 1185, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 1165, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 1206, 536, 537,
	538, 539, 540, 1095, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 0, 558,
	559, 557, 560, 561, 562, 1148, 563, 564, 546, 547,
	565, 566, 1207, 567, 568, 569, 570, 571, 572, 573,
	1163, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 1210, 581, 582, 583, 584, 1186, 588, 589,
	0, 590, 591, 1081, 587, 578, 0, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 1175, 1176,
	1177, 1178, 0, 609, 0, 601, 602, 603, 1187, 604,
	1188, 1105, 605, 606, 607, 608, 0, 610, 611, 0,
	1088, 612, 613, 614, 616, 617, 615, 618, 1149, 619,
	0, 0, 620, 621, 622, 679, 1172, 1209, 2576, 624,
	623, 625, 682, 0, 626, 0, 0, 0, 0, 627,
	628, 683, 629, 630, 631, 1085, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1080, 0,
	0, 0, 0, 0, 0, 1078, 1079, 2579, 0, 0,
	0, 0, 0, 0, 1111, 2575, 0, 1071, 1109, 1127,
	1099, 1100, 1101, 1097, 1098, 1110, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 1151, 1115, 0, 0, 0, 286, 287, 1191, 288,
	289, 290, 291, 292, 293, 633, 1164, 0, 294, 1171,
	295, 1170, 0, 1181, 296, 297, 298, 299, 300, 301,
	1117, 1150, 1082, 302, 1211, 1212, 640, 0, 303, 304,
	1157, 0, 1138, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1192, 327, 328, 329, 1141, 1139, 1140, 1147, 1143,
	1142, 1146, 330, 331, 332, 333, 334, 1174, 335, 1168,
	1167, 1087, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 1159, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 1093, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 1182,
	1183, 366, 1106, 274, 0, 0, 0, 0, 0, 367,
	368, 369, 1166, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 1193, 373, 374, 375, 1179, 1180, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 1189,
	0, 1116, 386, 0, 387, 388, 389, 390, 391, 1152,
	1153, 1156, 471, 1195, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 275, 399, 400, 401, 403,
	0, 1194, 402, 1161, 1162, 0, 1122, 0, 404, 405,
	1196, 1154, 1197, 406, 407, 408, 1198, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 1190, 1199, 420, 421, 1200, 0, 422,
	0, 0, 0, 423, 424, 427, 1145, 1144, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 1201, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 1202, 467, 456, 1084, 276, 1203, 468, 469, 1107,
	1155, 470, 1169, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 1204,
	481, 1205, 1184, 482, 483, 1094, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 1185, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 1165, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 1206, 536, 537, 538, 539,
	540, 1095, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 236, 558, 559, 557,
	560, 561, 562, 1148, 563, 564, 546, 547, 565, 566,
	1207, 567, 568, 569, 570, 571, 572, 573, 1163, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	1210, 581, 582, 583, 584, 1186, 588, 589, 0, 590,
	591, 1081, 587, 578, 238, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 1175, 1176, 1177, 1178,
	0, 609, 0, 601, 602, 603, 1187, 604, 1188, 1105,
	605, 606, 607, 608, 0, 610, 611, 0, 1088, 612,
	613, 614, 616, 617, 615, 618, 1149, 619, 0, 0,
	620, 621, 622, 1614, 1172, 1209, 0, 624, 623, 625,
	682, 0, 626, 0, 0, 0, 230, 627, 628, 683,
	629, 630, 631, 1085, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1080, 0, 0, 0,
	0, 0, 0, 1078, 1079, 1127, 1099, 1100, 1101, 1097,
	1098, 1110, 1869, 1867, 0, 0, 1109, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 1151, 1115, 0,
	0, 0, 286, 287, 1191, 288, 289, 290, 291, 292,
	293, 633, 1164, 0, 294, 1171, 295, 1170, 0, 1181,
	296, 297, 298, 299, 300, 301, 1117, 1150, 1082, 302,
	1211, 1212, 640, 0, 303, 304, 1157, 0, 1138, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1192, 327, 328,
	329, 1141, 1139, 1140, 1147, 1143, 1142, 1146, 330, 331,
	332, 333, 334, 1174, 335, 1168, 1167, 1087, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 1159, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 1093, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 1182, 1183, 366, 1106, 274,
	0, 0, 0, 0, 0, 367, 368, 369, 1166, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 1193, 373,
	374, 375, 1179, 1180, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 1189, 0, 1116, 386, 0,
	387, 388, 389, 390, 391, 1152, 1153, 1156, 471, 1195,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 275, 399, 400, 401, 403, 0, 1194, 402, 1161,
	1162, 0, 1122, 0, 404, 405, 1196, 1154, 1197, 406,
	407, 408, 1198, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 1190,
	1199, 420, 421, 1200, 0, 422, 0, 0, 0, 423,
	424, 427, 1145, 1144, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 1201, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 1202, 467, 456,
	1084, 276, 1203, 468, 469, 1107, 1155, 470, 1169, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 1204, 481, 1205, 1184, 482,
	483, 1094, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 1185, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 1165, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 1206, 536, 537, 538, 539, 540, 1095, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 236, 558, 559, 557, 560, 561, 562, 1148,
	563, 564, 546, 547, 565, 566, 1207, 567, 568, 569,
	570, 571, 572, 573, 1163, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 1210, 581, 582, 583,
	584, 1186, 588, 589, 0, 590, 591, 1081, 587, 578,
	238, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 1175, 1176, 1177, 1178, 0, 609, 0, 601,
	602, 603, 1187, 604, 1188, 1105, 605, 606, 607, 608,
	0, 610, 611, 0, 1088, 612, 613, 614, 616, 617,
	615, 618, 1149, 619, 0, 0, 620, 621, 622, 1614,
	1172, 1209, 0, 624, 623, 625, 682, 0, 626, 0,
	0, 0, 230, 627, 628, 683, 629, 630, 631, 1085,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1080, 0, 0, 0, 0, 0, 0, 1078,
	1079, 1127, 1099, 1100, 1101, 1097, 1098, 1110, 1869, 3217,
	0, 0, 1109, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 1151, 1115, 0, 0, 0, 286, 287,
	1191, 288, 289, 290, 291, 292, 293, 633, 1164, 0,
	294, 1171, 295, 1170, 0, 1181, 296, 297, 298, 299,
	300, 301, 1117, 1150, 1082, 302, 1211, 1212, 640, 0,
	303, 304, 1157, 0, 1138, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1192, 327, 328, 329, 1141, 1139, 1140,
	1147, 1143, 1142, 1146, 330, 331, 332, 333, 334, 1174,
	335, 1168, 1167, 1087, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 1159, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	1093, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 1182, 1183, 366, 1106, 274, 0, 0, 0, 0,
	0, 367, 368, 369, 1166, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 1193, 373, 374, 375, 1179, 1180,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 1189, 0, 1116, 386, 0, 387, 388, 389, 390,
	391, 1152, 1153, 1156, 471, 1195, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 275, 399, 400,
	401, 403, 0, 1194, 402, 1161, 1162, 0, 1122, 0,
	404, 405, 1196, 1154, 1197, 406, 407, 408, 1198, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 1190, 1199, 420, 421, 1200,
	0, 422, 0, 0, 0, 423, 424, 427, 1145, 1144,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 1201,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 1202, 467, 456, 1084, 276, 1203, 468,
	469, 1107, 1155, 470, 1169, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	662, 1204, 481, 1205, 1184, 482, 483, 1094, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 1185, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 1165, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 1206, 536, 537,
	538, 539, 540, 1095, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 236, 558,
	559, 557, 560, 561, 562, 1148, 563, 564, 546, 547,
	565, 566, 1207, 567, 568, 569, 570, 571, 572, 573,
	1163, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 1210, 581, 582, 583, 584, 1186, 588, 589,
	0, 590, 591, 1081, 587, 578, 238, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 1175, 1176,
	1177, 1178, 0, 609, 0, 601, 602, 603, 1187, 604,
	1188, 1105, 605, 606, 607, 608, 0, 610, 611, 0,
	1088, 612, 613, 614, 616, 617, 615, 618, 1149, 619,
	0, 0, 620, 621, 622, 1614, 1172, 1209, 0, 624,
	623, 625, 682, 0, 626, 0, 0, 0, 230, 627,
	628, 683, 629, 630, 631, 1085, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1080, 0,
	0, 0, 0, 0, 0, 1078, 1079, 1127, 1099, 1100,
	1101, 1097, 1098, 1110, 1869, 1867, 0, 0, 1109, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 1151,
	1115, 0, 0, 0, 286, 287, 1191, 288, 289, 290,
	291, 292, 293, 633, 1164, 0, 294, 1171, 295, 1170,
	2711, 1181, 296, 297, 298, 299, 300, 301, 1117, 1150,
	1082, 302, 1211, 1212, 640, 0, 303, 304, 1157, 0,
	1138, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1192,
	327, 328, 329, 1141, 1139, 1140, 1147, 1143, 1142, 1146,
	330, 331, 332, 333, 334, 1174, 335, 1168, 1167, 1087,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 1159, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 1093, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 1182, 1183, 366,
	1106, 274, 0, 0, 0, 0, 0, 367, 368, 369,
	1166, 0, 0, 0, 370, 0, 371, 372, 0, 2716,
	1193, 373, 374, 375, 1179, 1180, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 1189, 0, 1116,
	386, 0, 387, 388, 389, 390, 391, 1152, 1153, 1156,
	471, 1195, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 275, 399, 400, 401, 403, 0, 1194,
	402, 1161, 1162, 0, 1122, 0, 404, 405, 1196, 1154,
	1197, 406, 407, 408, 1198, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 2712,
	419, 1190, 1199, 420, 421, 1200, 0, 422, 0, 0,
	0, 423, 424, 427, 1145, 1144, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 1201, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 1202,
	467, 456, 1084, 276, 1203, 468, 469, 1107, 1155, 470,
	1169, 472, 473, 0, 0, 474, 0, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 1204, 481, 1205,
	1184, 482, 483, 1094, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 1185, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	1165, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 1206, 536, 537, 538, 539, 540, 1095,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 1148, 563, 564, 546, 547, 565, 566, 1207, 567,
	568, 569, 570, 571, 572, 573, 1163, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 1210, 581,
	582, 583, 584, 1186, 588, 589, 0, 590, 591, 1081,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 1175, 1176, 1177, 1178, 0, 609,
	2713, 601, 602, 603, 1187, 604, 1188, 1105, 605, 606,
	607, 608, 0, 610, 611, 0, 1088, 612, 613, 614,
	616, 617, 615, 618, 1149, 619, 0, 0, 620, 621,
	622, 679, 1172, 1209, 0, 624, 623, 625, 682, 0,
	626, 0, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 1085, 0, 0, 2625, 0, 1127, 1099, 1100, 1101,
	1097, 1098, 1110, 0, 1080, 0, 0, 0, 0, 0,
	0, 1078, 1079, 277, 279, 278, 280, 281, 282, 283,
	1111, 284, 285, 0, 1109, 0, 0, 0, 1151, 1115,
	0, 0, 0, 286, 287, 1191, 288, 289, 290, 291,
	292, 293, 633, 1164, 0, 294, 1171, 295, 1170, 0,
	1181, 296, 297, 298, 299, 300, 301, 1117, 1150, 1082,
	302, 1211, 1212, 640, 0, 303, 304, 1157, 0, 1138,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1192, 327,
	328, 329, 1141, 1139, 1140, 1147, 1143, 1142, 1146, 330,
	331, 332, 333, 334, 1174, 335, 1168, 1167, 1087, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 1159, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 1093, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 1182, 1183, 366, 1106,
	274, 0, 0, 0, 0, 0, 367, 368, 369, 1166,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 1193,
	373, 374, 375, 1179, 1180, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 1189, 0, 1116, 386,
	0, 387, 388, 389, 390, 391, 1152, 1153, 1156, 471,
	1195, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 275, 399, 400, 401, 403, 0, 1194, 402,
	1161, 1162, 0, 1122, 0, 404, 405, 1196, 1154, 1197,
	406, 407, 408, 1198, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	1190, 1199, 420, 421, 1200, 0, 422, 0, 0, 0,
	423, 424, 427, 1145, 1144, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 1201, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 1202, 467,
	456, 1084, 276, 1203, 468, 469, 1107, 1155, 470, 1169,
	472, 473, 0, 0, 474, 0, 0, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 1204, 481, 1205, 1184,
	482, 483, 1094, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 1185, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 1165,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 1206, 536, 537, 538, 539, 540, 1095, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 0, 558, 559, 557, 560, 561, 562,
	1148, 563, 564, 546, 547, 565, 566, 1207, 567, 568,
	569, 570, 571, 572, 573, 1163, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 1210, 581, 582,
	583, 584, 1186, 588, 589, 0, 590, 591, 1081, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 1175, 1176, 1177, 1178, 0, 609, 0,
	601, 602, 603, 1187, 604, 1188, 1105, 605, 606, 607,
	608, 0, 610, 611, 0, 1088, 612, 613, 614, 616,
	617, 615, 618, 1149, 619, 0, 0, 620, 621, 622,
	679, 1172, 1209, 0, 624, 623, 625, 682, 0, 626,
	0, 0, 0, 0, 627, 628, 683, 629, 630, 631,
	1085, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1080, 0, 0, 0, 0, 0, 0,
	1078, 1079, 0, 0, 0, 0, 0, 0, 0, 1111,
	2623, 0, 2622, 1109, 1127, 1099, 1100, 1101, 1097, 1098,
	1110, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 1151, 1115, 0, 0,
	0, 286, 287, 1191, 288, 289, 290, 291, 292, 293,
	633, 1164, 0, 294, 1171, 295, 1170, 0, 1181, 296,
	297, 298, 299, 300, 301, 1117, 1150, 1082, 302, 1211,
	1212, 640, 0, 303, 304, 1157, 0, 1138, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1192, 327, 328, 329,
	1141, 1139, 1140, 1147, 1143, 1142, 1146, 330, 331, 332,
	333, 334, 1174, 335, 1168, 1167, 1087, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 1159, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 1093, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 1182, 1183, 366, 1106, 274, 0,
	0, 0, 0, 0, 367, 368, 369, 1166, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 1193, 373, 374,
	375, 1179, 1180, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 1189, 0, 1116, 386, 0, 387,
	388, 389, 390, 391, 1152, 1153, 1156, 471, 1195, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	275, 399, 400, 401, 403, 0, 1194, 402, 1161, 1162,
	0, 1122, 0, 404, 405, 1196, 1154, 1197, 406, 407,
	408, 1198, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 1190, 1199,
	420, 421, 1200, 0, 422, 0, 0, 0, 423, 424,
	427, 1145, 1144, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 1201, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 1202, 467, 456, 1084,
	276, 1203, 468, 469, 1107, 1155, 470, 1169, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 1204, 481, 1205, 1184, 482, 483,
	1094, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 1185, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 1165, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	1206, 536, 537, 538, 539, 540, 1095, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 1148, 563,
	564, 546, 547, 565, 566, 1207, 567, 568, 569, 570,
	571, 572, 573, 1163, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 1210, 581, 582, 583, 584,
	1186, 588, 589, 0, 590, 591, 1081, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 1175, 1176, 1177, 1178, 0, 609, 0, 601, 602,
	603, 1187, 604, 1188, 1105, 605, 606, 607, 608, 0,
	610, 611, 0, 1088, 612, 613, 614, 616, 617, 615,
	618, 1149, 619, 0, 0, 620, 621, 622, 679, 1172,
	1209, 0, 624, 623, 625, 682, 0, 626, 0, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 1085, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1080, 0, 0, 0, 0, 0, 0, 1078, 1079,
	0, 0, 0, 0, 0, 0, 0, 1111, 2620, 0,
	2619, 1109, 1127, 1099, 1100, 1101, 1097, 1098, 1110, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 1151, 1115, 0, 0, 0, 286,
	287, 1191, 288, 289, 290, 291, 292, 293, 633, 1164,
	0, 294, 1171, 295, 1170, 0, 1181, 296, 297, 298,
	299, 300, 301, 1117, 1150, 1082, 302, 1211, 1212, 640,
	0, 303, 304, 1157, 0, 1138, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1192, 327, 328, 329, 1141, 1139,
	1140, 1147, 1143, 1142, 1146, 330, 331, 332, 333, 334,
	1174, 335, 1168, 1167, 1087, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 1159,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 1093, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 1182, 1183, 366, 1106, 274, 0, 0, 0,
	0, 0, 367, 368, 369, 1166, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 1193, 373, 374, 375, 1179,
	1180, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 1189, 0, 1116, 386, 0, 387, 388, 389,
	390, 391, 1152, 1153, 1156, 471, 1195, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 275, 399,
	400, 401, 403, 0, 1194, 402, 1161, 1162, 0, 1122,
	0, 404, 405, 1196, 1154, 1197, 406, 407, 408, 1198,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 1190, 1199, 420, 421,
	1200, 0, 422, 0, 0, 0, 423, 424, 427, 1145,
	1144, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	1201, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 1202, 467, 456, 1084, 276, 1203,
	468, 469, 1107, 1155, 470, 1169, 472, 473, 0, 0,
	474, 0, 0, 0, 476, 477, 478, 0, 0, 479,
	480, 662, 1204, 481, 1205, 1184, 482, 483, 1094, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 1185,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 1165, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 1206, 536,
	537, 538, 539, 540, 1095, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 552, 553, 554, 555, 556, 0,
	558, 559, 557, 560, 561, 562, 1148, 563, 564, 546,
	547, 565, 566, 1207, 567, 568, 569, 570, 571, 572,
	573, 1163, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 1210, 581, 582, 583, 584, 1186, 588,
	589, 0, 590, 591, 1081, 587, 578, 0, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 0, 600, 1175,
	1176, 1177, 1178, 0, 609, 0, 601, 602, 603, 1187,
	604, 1188, 1105, 605, 606, 607, 608, 0, 610, 611,
	0, 1088, 612, 613, 614, 616, 617, 615, 618, 1149,
	619, 0, 0, 620, 621, 622, 679, 1172, 1209, 0,
	624, 623, 625, 682, 0, 626, 0, 0, 0, 0,
	627, 628, 683, 629, 630, 631, 1085, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1080,
	0, 0, 0, 0, 0, 0, 1078, 1079, 0, 0,
	0, 0, 0, 0, 0, 1111, 2617, 0, 2616, 1109,
	1127, 1099, 1100, 1101, 1097, 1098, 1110, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 1151, 1115, 0, 0, 0, 286, 287, 1191,
	288, 289, 290, 291, 292, 293, 633, 1164, 0, 294,
	1171, 295, 1170, 0, 1181, 296, 297, 298, 299, 300,
	301, 1117, 1150, 1082, 302, 1211, 1212, 640, 0, 303,
	304, 1157, 0, 1138, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1192, 327, 328, 329, 1141, 1139, 1140, 1147,
	1143, 1142, 1146, 330, 331, 332, 333, 334, 1174, 335,
	1168, 1167, 1087, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 1159, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 1093,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	1182, 1183, 366, 1106, 274, 0, 0, 0, 0, 0,
	367, 368, 369, 1166, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 1193, 373, 374, 375, 1179, 1180, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	1189, 0, 1116, 386, 0, 387, 388, 389, 390, 391,
	1152, 1153, 1156, 471, 1195, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 275, 399, 400, 401,
	403, 0, 1194, 402, 1161, 1162, 0, 1122, 0, 404,
	405, 1196, 1154, 1197, 406, 407, 408, 1198, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 1190, 1199, 420, 421, 1200, 0,
	422, 0, 0, 0, 423, 424, 427, 1145, 1144, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 1201, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 1202, 467, 456, 1084, 276, 1203, 468, 469,
	1107, 1155, 470, 1169, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	1204, 481, 1205, 1184, 482, 483, 1094, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 1185, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 1165, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 1206, 536, 537, 538,
	539, 540, 1095, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 1148, 563, 564, 546, 547, 565,
	566, 1207, 567, 568, 569, 570, 571, 572, 573, 1163,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 1210, 581, 582, 583, 584, 1186, 588, 589, 0,
	590, 591, 1081, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 1175, 1176, 1177,
	1178, 0, 609, 0, 601, 602, 603, 1187, 604, 1188,
	1105, 605, 606, 607, 608, 0, 610, 611, 0, 1088,
	612, 613, 614, 616, 617, 615, 618, 1149, 619, 0,
	0, 620, 621, 622, 679, 1172, 1209, 0, 624, 623,
	625, 682, 0, 626, 0, 0, 0, 0, 627, 628,
	683, 629, 630, 631, 1085, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1080, 0, 0,
	0, 0, 0, 0, 1078, 1079, 0, 0, 0, 0,
	0, 0, 0, 1111, 2614, 0, 1710, 1109, 1127, 1099,
	1100, 1101, 1097, 1098, 1110, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	1151, 1115, 0, 0, 0, 286, 287, 1191, 288, 289,
	290, 291, 292, 293, 633, 1164, 0, 294, 1171, 295,
	1170, 0, 1181, 296, 297, 298, 299, 300, 301, 1117,
	1150, 1082, 302, 1211, 1212, 640, 0, 303, 304, 1157,
	0, 1138, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1192, 327, 328, 329, 1141, 1139, 1140, 1147, 1143, 1142,
	1146, 330, 331, 332, 333, 334, 1174, 335, 1168, 1167,
	1087, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 1159, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 1093, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 1182, 1183,
	366, 1106, 274, 0, 0, 0, 0, 0, 367, 368,
	369, 1166, 0, 0, 0, 370, 0, 371, 372, 0,
	0, 1193, 373, 374, 375, 1179, 1180, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 1189, 0,
	1116, 386, 0, 387, 388, 389, 390, 391, 1152, 1153,
	1156, 471, 1195, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 275, 399, 400, 401, 403, 0,
	1194, 402, 1161, 1162, 0, 1122, 0, 404, 405, 1196,
	1154, 1197, 406, 407, 408, 1198, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 1190, 1199, 420, 421, 1200, 0, 422, 0,
	0, 0, 423, 424, 427, 1145, 1144, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 1201, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	1202, 467, 456, 1084, 276, 1203, 468, 469, 1107, 1155,
	470, 1169, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 1204, 481,
	1205, 1184, 482, 483, 1094, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 1185, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 1165, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 1206, 536, 537, 538, 539, 540,
	1095, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 1148, 563, 564, 546, 547, 565, 566, 1207,
	567, 568, 569, 570, 571, 572, 573, 1163, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 1210,
	581, 582, 583, 584, 1186, 588, 589, 0, 590, 591,
	1081, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 1175, 1176, 1177, 1178, 0,
	609, 0, 601, 602, 603, 1187, 604, 1188, 1105, 605,
	606, 607, 608, 0, 610, 611, 0, 1088, 612, 613,
	614, 616, 617, 615, 618, 1149, 619, 0, 0, 620,
	621, 622, 679, 1172, 1209, 0, 624, 623, 625, 682,
	0, 626, 1709, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 1085, 0, 0, 1074, 0, 1127, 1099, 1100,
	1101, 1097, 1098, 1110, 0, 1080, 0, 0, 0, 0,
	0, 0, 1078, 1079, 277, 279, 278, 280, 281, 282,
	283, 1111, 284, 285, 0, 1109, 0, 0, 0, 1151,
	1115, 0, 0, 0, 286, 287, 1191, 288, 289, 290,
	291, 292, 293, 633, 1164, 0, 294, 1171, 295, 1170,
	0, 1181, 296, 297, 298, 299, 300, 301, 1117, 1150,
	1082, 302, 1211, 1212, 640, 0, 303, 304, 1157, 0,
	1138, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1192,
	327, 328, 329, 1141, 1139, 1140, 1147, 1143, 1142, 1146,
	330, 331, 332, 333, 334, 1174, 335, 1168, 1167, 1087,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 1159, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 1093, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 1182, 1183, 366,
	1106, 274, 0, 0, 0, 0, 0, 367, 368, 369,
	1166, 0, 0, 0, 370, 0, 371, 372, 0, 0,
	1193, 373, 374, 375, 1179, 1180, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 1189, 0, 1116,
	386, 0, 387, 388, 389, 390, 391, 1152, 1153, 1156,
	471, 1195, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 275, 399, 400, 401, 403, 0, 1194,
	402, 1161, 1162, 0, 1122, 0, 404, 405, 1196, 1154,
	1197, 406, 407, 408, 1198, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 1190, 1199, 420, 421, 1200, 0, 422, 0, 0,
	0, 423, 424, 427, 1145, 1144, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 1201, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 1202,
	467, 456, 1084, 276, 1203, 468, 469, 1107, 1155, 470,
	1169, 472, 473, 0, 0, 474, 0, 1089, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 1204, 481, 1205,
	1184, 482, 483, 1094, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 1185, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	1165, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 1206, 536, 537, 538, 539, 540, 1095,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 1148, 563, 564, 546, 547, 565, 566, 1207, 567,
	568, 569, 570, 571, 572, 573, 1163, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 1210, 581,
	582, 583, 584, 1186, 588, 589, 0, 590, 591, 1081,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 1175, 1176, 1177, 1178, 0, 609,
	0, 601, 602, 603, 1187, 604, 1188, 1105, 605, 606,
	607, 608, 0, 610, 611, 0, 1088, 612, 613, 614,
	616, 617, 615, 618, 1149, 619, 0, 0, 620, 621,
	622, 679, 1172, 1209, 0, 624, 623, 625, 682, 0,
	626, 0, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 1085, 0, 0, 0, 0, 1127, 1099, 1100, 1101,
	1097, 1098, 1110, 0, 1080, 0, 0, 0, 0, 0,
	0, 1078, 1079, 277, 279, 278, 280, 281, 282, 283,
	1111, 284, 285, 0, 1109, 0, 0, 0, 1151, 1115,
	0, 0, 0, 286, 287, 1191, 288, 289, 290, 291,
	292, 293, 633, 1164, 0, 294, 1171, 295, 1170, 0,
	1181, 296, 297, 298, 299, 300, 301, 1117, 1150, 1082,
	302, 1211, 1212, 640, 0, 303, 304, 1157, 0, 1138,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 4679, 323, 0, 324, 325, 326, 1192, 327,
	328, 329, 1141, 1139, 1140, 1147, 1143, 1142, 1146, 330,
	331, 332, 333, 334, 1174, 335, 1168, 1167, 1087, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 1159, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 1093, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 1182, 1183, 366, 1106,
	274, 0, 0, 0, 0, 0, 367, 368, 369, 1166,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 1193,
	373, 374, 375, 1179, 1180, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 1189, 0, 1116, 386,
	0, 387, 388, 389, 390, 391, 1152, 1153, 1156, 471,
	1195, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 275, 399, 400, 401, 403, 0, 1194, 402,
	1161, 1162, 0, 1122, 0, 404, 405, 1196, 1154, 1197,
	406, 407, 408, 1198, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	1190, 1199, 420, 421, 1200, 0, 422, 0, 0, 0,
	423, 424, 427, 1145, 1144, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 1201, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 1202, 467,
	456, 1084, 276, 1203, 468, 469, 1107, 1155, 470, 1169,
	472, 473, 0, 0, 474, 0, 1089, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 1204, 481, 1205, 1184,
	482, 483, 1094, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 1185, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 1165,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 1206, 536, 537, 538, 539, 540, 1095, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 0, 558, 559, 557, 560, 561, 562,
	1148, 563, 564, 546, 547, 565, 566, 1207, 567, 568,
	569, 570, 571, 572, 573, 1163, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 1210, 581, 582,
	583, 584, 1186, 588, 589, 0, 590, 591, 1081, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 1175, 1176, 1177, 1178, 0, 609, 0,
	601, 602, 603, 1187, 604, 1188, 1105, 605, 606, 607,
	608, 0, 610, 611, 0, 1088, 612, 613, 614, 616,
	617, 615, 618, 1149, 619, 0, 0, 620, 621, 622,
	679, 1172, 1209, 0, 624, 623, 625, 682, 0, 626,
	0, 0, 0, 0, 627, 628, 683, 629, 630, 631,
	1085, 0, 0, 0, 0, 1127, 1099, 1100, 1101, 1097,
	1098, 1110, 0, 1080, 0, 0, 0, 0, 0, 0,
	1078, 1079, 277, 279, 278, 280, 281, 282, 283, 1111,
	284, 285, 0, 1109, 0, 0, 0, 1151, 1115, 0,
	0, 0, 286, 287, 1191, 288, 289, 290, 291, 292,
	293, 633, 1164, 0, 294, 1171, 295, 1170, 0, 1181,
	296, 297, 298, 299, 300, 301, 1117, 1150, 1082, 302,
	1211, 1212, 640, 0, 303, 304, 1157, 0, 1138, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1192, 327, 328,
	329, 1141, 1139, 1140, 1147, 1143, 1142, 1146, 330, 331,
	332, 333, 334, 1174, 335, 1168, 1167, 1087, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 1159, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 1093, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 1182, 1183, 366, 1106, 274,
	0, 0, 0, 0, 0, 367, 368, 369, 1166, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 1193, 373,
	374, 375, 1179, 1180, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 1189, 0, 1116, 386, 0,
	387, 388, 389, 390, 391, 1152, 1153, 1156, 471, 1195,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 2457, 399, 400, 401, 403, 0, 1194, 402, 1161,
	1162, 0, 1122, 0, 404, 405, 1196, 1154, 1197, 406,
	407, 408, 1198, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 1190,
	1199, 420, 421, 1200, 0, 422, 0, 0, 0, 423,
	424, 427, 1145, 1144, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 1201, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 1202, 467, 456,
	1084, 276, 1203, 468, 469, 1107, 1155, 470, 1169, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 1204, 481, 1205, 1184, 482,
	483, 1094, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 1185, 501, 667, 502, 503, 2456, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 1165, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 1206, 536, 537, 538, 539, 540, 1095, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 561, 562, 1148,
	563, 564, 546, 547, 565, 566, 1207, 567, 568, 569,
	570, 571, 572, 573, 1163, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 1210, 581, 582, 583,
	584, 1186, 588, 589, 0, 590, 591, 1081, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 1175, 1176, 1177, 1178, 0, 609, 0, 601,
	602, 603, 1187, 604, 1188, 1105, 605, 606, 607, 608,
	0, 610, 611, 0, 1088, 612, 613, 614, 616, 617,
	615, 618, 1149, 619, 0, 0, 620, 621, 622, 679,
	1172, 1209, 0, 624, 623, 625, 682, 0, 626, 0,
	0, 0, 0, 627, 628, 683, 629, 630, 631, 1085,
	0, 0, 0, 0, 1127, 1099, 1100, 1101, 1097, 1098,
	1110, 0, 1080, 0, 0, 0, 0, 0, 0, 1078,
	1079, 277, 279, 278, 280, 281, 282, 283, 1111, 284,
	285, 0, 1109, 0, 0, 0, 1151, 1115, 0, 0,
	0, 286, 287, 1191, 288, 289, 290, 291, 292, 293,
	633, 1164, 0, 294, 1171, 295, 1170, 0, 1181, 296,
	297, 298, 299, 300, 301, 1117, 1150, 1082, 302, 1211,
	1212, 640, 0, 303, 304, 1157, 0, 1138, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1192, 327, 328, 329,
	1141, 1139, 1140, 1147, 1143, 1142, 1146, 330, 331, 332,
	333, 334, 1174, 335, 1168, 1167, 1087, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 1159, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 1093, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 1182, 1183, 366, 1106, 274, 0,
	0, 0, 0, 0, 367, 368, 369, 1166, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 1193, 373, 374,
	375, 1179, 1180, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 1189, 0, 1116, 386, 0, 387,
	388, 389, 390, 391, 1152, 1153, 1156, 471, 1195, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	275, 399, 400, 401, 403, 0, 1194, 402, 1161, 1162,
	0, 1122, 0, 404, 405, 1196, 1154, 1197, 406, 407,
	408, 1198, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 1190, 1199,
	420, 421, 1200, 0, 422, 0, 0, 0, 423, 424,
	427, 1145, 1144, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 1201, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 1202, 467, 456, 1084,
	276, 1203, 468, 469, 1107, 1155, 470, 1169, 472, 473,
	0, 0, 474, 0, 1089, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 1204, 481, 1205, 1184, 482, 483,
	1094, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 1185, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 1165, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	1206, 536, 537, 538, 539, 540, 1095, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 1148, 563,
	564, 546, 547, 565, 566, 1207, 567, 568, 569, 570,
	571, 572, 573, 1163, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 1210, 581, 582, 583, 584,
	1186, 588, 589, 0, 590, 591, 1081, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 1175, 1176, 1177, 1178, 0, 609, 0, 601, 602,
	603, 1187, 604, 1188, 1105, 605, 606, 607, 608, 0,
	610, 611, 0, 1088, 612, 613, 614, 616, 617, 615,
	618, 1149, 619, 0, 0, 620, 621, 622, 679, 1172,
	1209, 0, 624, 623, 625, 682, 0, 626, 0, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 1085, 0,
	0, 0, 0, 1127, 1099, 1100, 1101, 1097, 1098, 1110,
	0, 1080, 0, 0, 0, 0, 0, 0, 1078, 1079,
	277, 279, 278, 280, 281, 282, 283, 1111, 284, 285,
	0, 1109, 0, 0, 0, 1151, 1115, 0, 0, 0,
	286, 287, 1191, 288, 289, 290, 291, 292, 293, 633,
	1164, 0, 294, 1171, 295, 1170, 0, 1181, 296, 297,
	298, 299, 300, 301, 1117, 1150, 1082, 302, 1211, 1212,
	640, 0, 303, 304, 1157, 0, 1138, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 4415,
	323, 0, 324, 325, 326, 1192, 327, 328, 329, 1141,
	1139, 1140, 1147, 1143, 1142, 1146, 330, 331, 332, 333,
	334, 1174, 335, 1168, 1167, 1087, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	1159, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 1093, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 1182, 1183, 366, 1106, 274, 0, 0,
	0, 0, 0, 367, 368, 369, 1166, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 1193, 373, 374, 375,
	1179, 1180, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 1189, 0, 1116, 386, 0, 387, 388,
	389, 390, 391, 1152, 1153, 1156, 471, 1195, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 275,
	399, 400, 401, 403, 0, 1194, 402, 1161, 1162, 0,
	1122, 0, 404, 405, 1196, 1154, 1197, 406, 407, 408,
	1198, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 1190, 1199, 420,
	421, 1200, 0, 422, 0, 0, 0, 423, 424, 427,
	1145, 1144, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 1201, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 1202, 467, 456, 1084, 276,
	1203, 468, 469, 1107, 1155, 470, 1169, 472, 473, 0,
	0, 474, 0, 1089, 0, 476, 477, 478, 0, 0,
	479, 480, 662, 1204, 481, 1205, 1184, 482, 483, 1094,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	1185, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 1165, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 1206,
	536, 537, 538, 539, 540, 1095, 541, 0, 542, 543,
	549, 550, 551, 544, 545, 552, 553, 554, 555, 556,
	0, 558, 559, 557, 560, 561, 562, 1148, 563, 564,
	546, 547, 565, 566, 1207, 567, 568, 569, 570, 571,
	572, 573, 1163, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 1210, 581, 582, 583, 584, 1186,
	588, 589, 0, 590, 591, 1081, 587, 578, 0, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	1175, 1176, 1177, 1178, 0, 609, 0, 601, 602, 603,
	1187, 604, 1188, 1105, 605, 606, 607, 608, 0, 610,
	611, 0, 1088, 612, 613, 614, 616, 617, 615, 618,
	1149, 619, 0, 0, 620, 621, 622, 679, 1172, 1209,
	0, 624, 623, 625, 682, 0, 626, 0, 0, 0,
	0, 627, 628, 683, 629, 630, 631, 1085, 0, 0,
	0, 0, 1127, 1099, 1100, 1101, 1097, 1098, 1110, 0,
	1080, 0, 0, 0, 0, 0, 0, 1078, 1079, 277,
	279, 278, 280, 281, 282, 283, 1111, 284, 285, 0,
	1109, 0, 0, 0, 1151, 1115, 0, 0, 0, 286,
	287, 1191, 288, 289, 290, 291, 292, 293, 633, 1164,
	0, 294, 1171, 295, 1170, 0, 1181, 296, 297, 298,
	299, 300, 301, 1117, 1150, 1082, 302, 1211, 1212, 640,
	0, 303, 304, 1157, 0, 1138, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1192, 327, 328, 329, 1141, 1139,
	1140, 1147, 1143, 1142, 1146, 330, 331, 332, 333, 334,
	1174, 335, 1168, 1167, 1087, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 1159,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 1093, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 1182, 1183, 366, 1106, 274, 0, 0, 0,
	0, 0, 367, 368, 369, 1166, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 1193, 373, 374, 375, 1179,
	1180, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 1189, 0, 1116, 386, 0, 387, 388, 389,
	390, 391, 1152, 1153, 1156, 471, 1195, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 275, 399,
	400, 401, 403, 0, 1194, 402, 1161, 1162, 0, 1122,
	0, 404, 405, 1196, 1154, 1197, 406, 407, 408, 1198,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 1190, 1199, 420, 421,
	1200, 0, 422, 0, 0, 0, 423, 424, 427, 1145,
	1144, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	1201, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 1202, 467, 456, 1084, 4012, 1203,
	468, 469, 1107, 1155, 470, 1169, 472, 473, 0, 0,
	474, 0, 0, 0, 476, 477, 478, 0, 0, 479,
	480, 662, 1204, 481, 1205, 1184, 482, 483, 1094, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 1185,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 1165, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 1206, 536,
	537, 538, 539, 540, 1095, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 552, 553, 554, 555, 556, 0,
	558, 559, 557, 560, 561, 562, 1148, 563, 564, 546,
	547, 565, 566, 1207, 567, 568, 569, 570, 571, 572,
	573, 1163, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 1210, 581, 582, 583, 584, 1186, 588,
	589, 0, 590, 591, 1081, 587, 578, 0, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 0, 600, 1175,
	1176, 1177, 1178, 0, 609, 0, 601, 602, 603, 1187,
	604, 1188, 1105, 605, 606, 607, 608, 0, 610, 611,
	0, 1088, 612, 613, 614, 616, 617, 615, 618, 1149,
	619, 0, 0, 620, 621, 622, 679, 1172, 1209, 0,
	624, 623, 625, 682, 0, 626, 0, 0, 0, 0,
	627, 628, 683, 629, 630, 631, 1085, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1080,
	0, 0, 0, 0, 0, 0, 1078, 1079, 1938, 0,
	0, 0, 0, 0, 0, 1111, 0, 0, 0, 1109,
	1127, 1099, 1100, 1101, 1097, 1098, 1110, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 1151, 1115, 0, 0, 0, 286, 287, 1191,
	288, 289, 290, 291, 292, 293, 633, 1164, 0, 294,
	1171, 295, 1170, 0, 1181, 296, 297, 298, 299, 300,
	301, 1117, 1150, 1082, 302, 1211, 1212, 640, 0, 303,
	304, 1157, 0, 1138, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1192, 327, 328, 329, 1141, 1139, 1140, 1147,
	1143, 1142, 1146, 330, 331, 332, 333, 334, 1174, 335,
	1168, 1167, 1087, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 1159, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 1093,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	1182, 1183, 366, 1106, 274, 0, 0, 0, 0, 0,
	367, 368, 369, 1166, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 1193, 373, 374, 375, 1179, 1180, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	1189, 0, 1116, 386, 0, 387, 388, 389, 390, 391,
	1152, 1153, 1156, 471, 1195, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 275, 399, 400, 401,
	403, 0, 1194, 402, 1161, 1162, 0, 1122, 0, 404,
	405, 1196, 1154, 1197, 406, 407, 408, 1198, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 1190, 1199, 420, 421, 1200, 0,
	422, 0, 0, 0, 423, 424, 427, 1145, 1144, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 1201, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 1202, 467, 456, 1084, 276, 1203, 468, 469,
	1107, 1155, 470, 1169, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	1204, 481, 1205, 1184, 482, 483, 1094, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 1185, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 1165, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 1206, 536, 537, 538,
	539, 540, 1095, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 1148, 563, 564, 546, 547, 565,
	566, 1207, 567, 568, 569, 570, 571, 572, 573, 1163,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 1210, 581, 582, 583, 584, 1186, 588, 589, 0,
	590, 591, 1081, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 1175, 1176, 1177,
	1178, 0, 609, 0, 601, 602, 603, 1187, 604, 1188,
	1105, 605, 606, 607, 608, 0, 610, 611, 0, 1088,
	612, 613, 614, 616, 617, 615, 618, 1149, 619, 0,
	0, 620, 621, 622, 679, 1172, 1209, 3725, 624, 623,
	625, 682, 0, 626, 0, 0, 0, 0, 627, 628,
	683, 629, 630, 631, 1085, 0, 0, 0, 0, 1127,
	1099, 1100, 1101, 1097, 1098, 1110, 0, 1080, 0, 0,
	0, 0, 0, 0, 1078, 1079, 277, 279, 278, 280,
	281, 282, 283, 1111, 284, 285, 0, 1109, 0, 0,
	0, 1151, 1115, 0, 0, 0, 286, 287, 1191, 288,
	289, 290, 291, 292, 293, 633, 1164, 0, 294, 1171,
	295, 1170, 0, 1181, 296, 297, 298, 299, 300, 301,
	1117, 1150, 1082, 302, 1211, 1212, 640, 0, 303, 304,
	1157, 0, 1138, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1192, 327, 328, 329, 1141, 1139, 1140, 1147, 1143,
	1142, 1146, 330, 331, 332, 333, 334, 1174, 335, 1168,
	1167, 1087, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 1159, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 1093, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 1182,
	1183, 366, 1106, 274, 0, 0, 0, 0, 0, 367,
	368, 369, 1166, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 1193, 373, 374, 375, 1179, 1180, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 1189,
	0, 1116, 386, 0, 387, 388, 389, 390, 391, 1152,
	1153, 1156, 471, 1195, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 275, 399, 400, 401, 403,
	0, 1194, 402, 1161, 1162, 0, 1122, 0, 404, 405,
	1196, 1154, 1197, 406, 407, 408, 1198, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 1190, 1199, 420, 421, 1200, 0, 422,
	0, 0, 0, 423, 424, 427, 1145, 1144, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 1201, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 1202, 467, 456, 1084, 276, 1203, 468, 469, 1107,
	1155, 470, 1169, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 1204,
	481, 1205, 1184, 482, 483, 1094, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 1185, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 1165, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 1206, 536, 537, 538, 539,
	540, 1095, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 1148, 563, 564, 546, 547, 565, 566,
	1207, 567, 568, 569, 570, 571, 572, 573, 1163, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	1210, 581, 582, 583, 584, 1186, 588, 589, 0, 590,
	591, 1081, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 1175, 1176, 1177, 1178,
	0, 609, 0, 601, 602, 603, 1187, 604, 1188, 1105,
	605, 606, 607, 608, 0, 610, 611, 0, 1088, 612,
	613, 614, 616, 617, 615, 618, 1149, 619, 0, 0,
	620, 621, 622, 679, 1172, 1209, 0, 624, 623, 625,
	682, 0, 626, 0, 0, 0, 0, 627, 628, 683,
	629, 630, 631, 1085, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1080, 0, 0, 0,
	0, 0, 0, 1078, 1079, 1938, 0, 0, 0, 0,
	0, 0, 1111, 0, 0, 0, 1109, 1127, 1099, 1100,
	1101, 1097, 1098, 1110, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 1151,
	1115, 0, 0, 0, 286, 287, 1191, 288, 289, 290,
	291, 292, 293, 633, 1164, 0, 294, 1171, 295, 1170,
	0, 1181, 296, 297, 298, 299, 300, 301, 1117, 1150,
	1082, 302, 1211, 1212, 640, 0, 303, 304, 1157, 0,
	1138, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1192,
	327, 328, 329, 1141, 1139, 1140, 1147, 1143, 1142, 1146,
	330, 331, 332, 333, 334, 1174, 335, 1168, 1167, 1087,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 1159, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 1093, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 1182, 1183, 366,
	1106, 274, 0, 0, 0, 0, 0, 367, 368, 369,
	1166, 0, 0, 0, 370, 0, 371, 372, 0, 2716,
	1193, 373, 374, 375, 1179, 1180, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 1189, 0, 1116,
	386, 0, 387, 388, 389, 390, 391, 1152, 1153, 1156,
	471, 1195, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 275, 399, 400, 401, 403, 0, 1194,
	402, 1161, 1162, 0, 1122, 0, 404, 405, 1196, 1154,
	1197, 406, 407, 408, 1198, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 1190, 1199, 420, 421, 1200, 0, 422, 0, 0,
	0, 423, 424, 427, 1145, 1144, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 1201, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 1202,
	467, 456, 1084, 276, 1203, 468, 469, 1107, 1155, 470,
	1169, 472, 473, 0, 0, 474, 0, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 1204, 481, 1205,
	1184, 482, 483, 1094, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 1185, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	1165, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 1206, 536, 537, 538, 539, 540, 1095,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 1148, 563, 564, 546, 547, 565, 566, 1207, 567,
	568, 569, 570, 571, 572, 573, 1163, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 1210, 581,
	582, 583, 584, 1186, 588, 589, 0, 590, 591, 1081,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 1175, 1176, 1177, 1178, 0, 609,
	0, 601, 602, 603, 1187, 604, 1188, 1105, 605, 606,
	607, 608, 0, 610, 611, 0, 1088, 612, 613, 614,
	616, 617, 615, 618, 1149, 619, 0, 0, 620, 621,
	622, 679, 1172, 1209, 0, 624, 623, 625, 682, 0,
	626, 0, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 1085, 0, 0, 0, 0, 1127, 1099, 1100, 1101,
	1097, 1098, 1110, 0, 1080, 0, 0, 0, 0, 0,
	0, 1078, 1079, 277, 279, 278, 280, 281, 282, 283,
	1111, 284, 285, 0, 1109, 0, 0, 0, 1151, 1115,
	0, 0, 0, 286, 287, 1191, 288, 289, 290, 291,
	292, 293, 633, 1164, 0, 294, 1171, 295, 1170, 0,
	1181, 296, 297, 298, 299, 300, 301, 1117, 1150, 1082,
	302, 1211, 1212, 640, 0, 303, 304, 1157, 0, 1138,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1192, 327,
	328, 329, 1141, 1139, 1140, 1147, 1143, 1142, 1146, 330,
	331, 332, 333, 334, 1174, 335, 1168, 1167, 1087, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 1159, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 1093, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 1182, 1183, 366, 1106,
	274, 0, 0, 0, 0, 0, 367, 368, 369, 1166,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 1193,
	373, 374, 375, 1179, 1180, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 1189, 0, 1116, 386,
	0, 387, 388, 389, 390, 391, 1152, 1153, 1156, 471,
	1195, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 275, 399, 400, 401, 403, 0, 1194, 402,
	1161, 1162, 0, 1122, 0, 404, 405, 1196, 1154, 1197,
	406, 407, 408, 1198, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	1190, 1199, 420, 421, 1200, 0, 422, 0, 0, 0,
	423, 424, 427, 1145, 1144, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 1201, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 1202, 467,
	456, 1084, 276, 1203, 468, 469, 1107, 1155, 470, 1169,
	472, 473, 0, 0, 474, 0, 0, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 1204, 481, 1205, 1184,
	482, 483, 1094, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 1185, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 1165,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 1206, 536, 537, 538, 539, 540, 1095, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 0, 558, 559, 557, 560, 561, 562,
	1148, 563, 564, 546, 547, 565, 566, 1207, 567, 568,
	569, 570, 571, 572, 573, 1163, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 1210, 581, 582,
	583, 584, 1186, 588, 589, 0, 590, 591, 1081, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 1175, 1176, 1177, 1178, 0, 609, 0,
	601, 602, 603, 1187, 604, 1188, 1105, 605, 606, 607,
	608, 0, 610, 611, 0, 1088, 612, 613, 614, 616,
	617, 615, 618, 1149, 619, 0, 0, 620, 621, 622,
	679, 1172, 1209, 0, 624, 623, 625, 682, 0, 626,
	0, 0, 0, 0, 627, 628, 683, 629, 630, 631,
	1085, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1080, 0, 0, 0, 0, 0, 0,
	1078, 1079, 0, 0, 0, 0, 0, 0, 0, 1111,
	1867, 0, 2721, 1109, 1127, 1099, 1100, 1101, 1097, 1098,
	1110, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 1151, 1115, 0, 0,
	0, 286, 287, 1191, 288, 289, 290, 291, 292, 293,
	633, 1164, 0, 294, 1171, 295, 1170, 0, 1181, 296,
	297, 298, 299, 300, 301, 1117, 1150, 1082, 302, 1211,
	1212, 640, 0, 303, 304, 1157, 0, 1138, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1192, 327, 328, 329,
	1141, 1139, 1140, 1147, 1143, 1142, 1146, 330, 331, 332,
	333, 334, 1174, 335, 1168, 1167, 1087, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 1159, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 1093, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 1182, 1183, 366, 1106, 274, 0,
	0, 0, 0, 0, 367, 368, 369, 1166, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 1193, 373, 374,
	375, 1179, 1180, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 1189, 0, 1116, 386, 0, 387,
	388, 389, 390, 391, 1152, 1153, 1156, 471, 1195, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	275, 399, 400, 401, 403, 0, 1194, 402, 1161, 1162,
	0, 1122, 0, 404, 405, 1196, 1154, 1197, 406, 407,
	408, 1198, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 1190, 1199,
	420, 421, 1200, 0, 422, 0, 0, 0, 423, 424,
	427, 1145, 1144, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 1201, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 1202, 467, 456, 1084,
	276, 1203, 468, 469, 1107, 1155, 470, 1169, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 1204, 481, 1205, 1184, 482, 483,
	1094, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 1185, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 1165, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	1206, 536, 537, 538, 539, 540, 1095, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 1148, 563,
	564, 546, 547, 565, 566, 1207, 567, 568, 569, 570,
	571, 572, 573, 1163, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 1210, 581, 582, 583, 584,
	1186, 588, 589, 0, 590, 591, 1081, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 1175, 1176, 1177, 1178, 0, 609, 0, 601, 602,
	603, 1187, 604, 1188, 1105, 605, 606, 607, 608, 0,
	610, 611, 0, 1088, 612, 613, 614, 616, 617, 615,
	618, 1149, 619, 0, 0, 620, 621, 622, 679, 1172,
	1209, 0, 624, 623, 625, 682, 0, 626, 0, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 1085, 0,
	0, 2719, 0, 1127, 1099, 1100, 1101, 1097, 1098, 1110,
	0, 1080, 0, 0, 0, 0, 0, 0, 1078, 1079,
	277, 279, 278, 280, 281, 282, 283, 1111, 284, 285,
	0, 1109, 0, 0, 0, 1151, 1115, 0, 0, 0,
	286, 287, 1191, 288, 289, 290, 291, 292, 293, 633,
	1164, 0, 294, 1171, 295, 1170, 0, 1181, 296, 297,
	298, 299, 300, 301, 1117, 1150, 1082, 302, 1211, 1212,
	640, 0, 303, 304, 1157, 0, 1138, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1192, 327, 328, 329, 1141,
	1139, 1140, 1147, 1143, 1142, 1146, 330, 331, 332, 333,
	334, 1174, 335, 1168, 1167, 1087, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	1159, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 1093, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 1182, 1183, 366, 1106, 274, 0, 0,
	0, 0, 0, 367, 368, 369, 1166, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 1193, 373, 374, 375,
	1179, 1180, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 1189, 0, 1116, 386, 0, 387, 388,
	389, 390, 391, 1152, 1153, 1156, 471, 1195, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 275,
	399, 400, 401, 403, 0, 1194, 402, 1161, 1162, 0,
	1122, 0, 404, 405, 1196, 1154, 1197, 406, 407, 408,
	1198, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 1190, 1199, 420,
	421, 1200, 0, 422, 0, 0, 0, 423, 424, 427,
	1145, 1144, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 1201, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 1202, 467, 456, 1084, 276,
	1203, 468, 469, 1107, 1155, 470, 1169, 472, 473, 0,
	0, 474, 0, 0, 0, 476, 477, 478, 0, 0,
	479, 480, 662, 1204, 481, 1205, 1184, 482, 483, 1094,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	1185, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 1165, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 1206,
	536, 537, 538, 539, 540, 1095, 541, 0, 542, 543,
	549, 550, 551, 544, 545, 552, 553, 554, 555, 556,
	0, 558, 559, 557, 560, 561, 562, 1148, 563, 564,
	546, 547, 565, 566, 1207, 567, 568, 569, 570, 571,
	572, 573, 1163, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 1210, 581, 582, 583, 584, 1186,
	588, 589, 0, 590, 591, 1081, 587, 578, 0, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	1175, 1176, 1177, 1178, 0, 609, 0, 601, 602, 603,
	1187, 604, 1188, 1105, 605, 606, 607, 608, 0, 610,
	611, 0, 1088, 612, 613, 614, 616, 617, 615, 618,
	1149, 619, 0, 0, 620, 621, 622, 679, 1172, 1209,
	0, 624, 623, 625, 682, 0, 626, 0, 0, 0,
	0, 627, 628, 683, 629, 630, 631, 1085, 0, 0,
	2707, 0, 1127, 1099, 1100, 1101, 1097, 1098, 1110, 0,
	1080, 0, 0, 0, 0, 0, 0, 1078, 1079, 277,
	279, 278, 280, 281, 282, 283, 1111, 284, 285, 0,
	1109, 0, 0, 0, 1151, 1115, 0, 0, 0, 286,
	287, 1191, 288, 289, 290, 291, 292, 293, 633, 1164,
	0, 294, 1171, 295, 1170, 0, 1181, 296, 297, 298,
	299, 300, 301, 1117, 1150, 1082, 302, 1211, 1212, 640,
	0, 303, 304, 1157, 0, 1138, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1192, 327, 328, 329, 1141, 1139,
	1140, 1147, 1143, 1142, 1146, 330, 331, 332, 333, 334,
	1174, 335, 1168, 1167, 1087, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 1159,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 1093, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 1182, 1183, 366, 1106, 274, 0, 0, 0,
	0, 0, 367, 368, 369, 1166, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 1193, 373, 374, 375, 1179,
	1180, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 1189, 0, 1116, 386, 0, 387, 388, 389,
	390, 391, 1152, 1153, 1156, 471, 1195, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 275, 399,
	400, 401, 403, 0, 1194, 402, 1161, 1162, 0, 1122,
	0, 404, 405, 1196, 1154, 1197, 406, 407, 408, 1198,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 1190, 1199, 420, 421,
	1200, 0, 422, 0, 0, 0, 423, 424, 427, 1145,
	1144, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	1201, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 1202, 467, 456, 1084, 276, 1203,
	468, 469, 1107, 1155, 470, 1169, 472, 473, 0, 0,
	474, 0, 0, 0, 476, 477, 478, 0, 0, 479,
	480, 662, 1204, 481, 1205, 1184, 482, 483, 1094, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 1185,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 1165, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 1206, 536,
	537, 538, 539, 540, 1095, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 552, 553, 554, 555, 556, 0,
	558, 559, 557, 560, 561, 562, 1148, 563, 564, 546,
	547, 565, 566, 1207, 567, 568, 569, 570, 571, 572,
	573, 1163, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 1210, 581, 582, 583, 584, 1186, 588,
	589, 0, 590, 591, 1081, 587, 578, 0, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 0, 600, 1175,
	1176, 1177, 1178, 0, 609, 0, 601, 602, 603, 1187,
	604, 1188, 1105, 605, 606, 607, 608, 0, 610, 611,
	0, 1088, 612, 613, 614, 616, 617, 615, 618, 1149,
	619, 0, 0, 620, 621, 622, 679, 1172, 1209, 0,
	624, 623, 625, 682, 0, 626, 0, 0, 0, 0,
	627, 628, 683, 629, 630, 631, 1085, 0, 0, 2695,
	0, 1127, 1099, 1100, 1101, 1097, 1098, 1110, 0, 1080,
	0, 0, 0, 0, 0, 0, 1078, 1079, 277, 279,
	278, 280, 281, 282, 283, 1111, 284, 285, 0, 1109,
	0, 0, 0, 1151, 1115, 0, 0, 0, 286, 287,
	1191, 288, 289, 290, 291, 292, 293, 633, 1164, 0,
	294, 1171, 295, 1170, 0, 1181, 296, 297, 298, 299,
	300, 301, 1117, 1150, 1082, 302, 1211, 1212, 640, 0,
	303, 304, 1157, 0, 1138, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1192, 327, 328, 329, 1141, 1139, 1140,
	1147, 1143, 1142, 1146, 330, 331, 332, 333, 334, 1174,
	335, 1168, 1167, 1087, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 1159, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	1093, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 1182, 1183, 366, 1106, 274, 0, 0, 0, 0,
	0, 367, 368, 369, 1166, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 1193, 373, 374, 375, 1179, 1180,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 1189, 0, 1116, 386, 0, 387, 388, 389, 390,
	391, 1152, 1153, 1156, 471, 1195, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 275, 399, 400,
	401, 403, 0, 1194, 402, 1161, 1162, 0, 1122, 0,
	404, 405, 1196, 1154, 1197, 406, 407, 408, 1198, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 1190, 1199, 420, 421, 1200,
	0, 422, 0, 0, 0, 423, 424, 427, 1145, 1144,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 1201,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 1202, 467, 456, 1084, 276, 1203, 468,
	469, 1107, 1155, 470, 1169, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	662, 1204, 481, 1205, 1184, 482, 483, 1094, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 1185, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 1165, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 1206, 536, 537,
	538, 539, 540, 1095, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 0, 558,
	559, 557, 560, 561, 562, 1148, 563, 564, 546, 547,
	565, 566, 1207, 567, 568, 569, 570, 571, 572, 573,
	1163, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 1210, 581, 582, 583, 584, 1186, 588, 589,
	0, 590, 591, 1081, 587, 578, 0, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 1175, 1176,
	1177, 1178, 0, 609, 0, 601, 602, 603, 1187, 604,
	1188, 1105, 605, 606, 607, 608, 0, 610, 611, 0,
	1088, 612, 613, 614, 616, 617, 615, 618, 1149, 619,
	0, 0, 620, 621, 622, 679, 1172, 1209, 0, 624,
	623, 625, 682, 0, 626, 0, 0, 0, 0, 627,
	628, 683, 629, 630, 631, 1085, 0, 0, 2693, 0,
	2684, 2691, 1100, 1101, 1097, 1098, 1110, 0, 1080, 0,
	0, 0, 0, 0, 0, 1078, 1079, 277, 279, 278,
	280, 281, 282, 283, 1111, 284, 285, 0, 1109, 0,
	0, 0, 1151, 1115, 0, 0, 0, 286, 287, 1191,
	288, 289, 290, 291, 292, 293, 633, 1164, 0, 294,
	1171, 295, 1170, 0, 1181, 296, 297, 298, 299, 300,
	301, 1117, 1150, 1082, 302, 1211, 1212, 640, 0, 303,
	304, 1157, 0, 1138, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1192, 327, 328, 329, 1141, 1139, 1140, 1147,
	1143, 1142, 1146, 330, 331, 332, 333, 334, 1174, 2687,
	1168, 1167, 1087, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 1159, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 1093,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	1182, 1183, 366, 1106, 274, 0, 0, 0, 0, 0,
	367, 368, 369, 1166, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 1193, 373, 374, 375, 1179, 1180, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	1189, 0, 1116, 386, 0, 387, 388, 389, 2688, 391,
	1152, 1153, 1156, 471, 1195, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 275, 399, 400, 401,
	403, 0, 1194, 402, 1161, 1162, 0, 1122, 0, 404,
	405, 1196, 1154, 1197, 406, 407, 408, 1198, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 1190, 1199, 420, 421, 1200, 0,
	422, 0, 0, 0, 423, 424, 427, 1145, 1144, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	2689, 437, 2686, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 1201, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 1202, 467, 456, 1084, 276, 1203, 468, 469,
	1107, 1155, 470, 1169, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	1204, 481, 1205, 1184, 482, 483, 1094, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 1185, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 1165, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 1206, 536, 537, 538,
	539, 540, 1095, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 2690, 0, 558, 559,
	557, 560, 561, 562, 1148, 563, 564, 546, 547, 565,
	566, 1207, 567, 568, 569, 570, 571, 572, 573, 1163,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 1210, 581, 582, 583, 584, 1186, 588, 589, 0,
	590, 591, 1081, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 1175, 1176, 1177,
	1178, 0, 609, 0, 601, 602, 603, 1187, 604, 1188,
	1105, 605, 606, 607, 608, 0, 610, 611, 0, 1088,
	612, 613, 614, 616, 617, 615, 618, 1149, 619, 0,
	0, 620, 621, 622, 679, 1172, 1209, 0, 624, 623,
	625, 682, 0, 626, 0, 0, 0, 0, 627, 628,
	683, 629, 2685, 631, 1085, 0, 0, 2681, 0, 2684,
	2691, 1100, 1101, 1097, 1098, 1110, 0, 1080, 0, 0,
	0, 0, 0, 0, 1078, 1079, 277, 279, 278, 280,
	281, 282, 283, 1111, 284, 285, 0, 1109, 0, 0,
	0, 1151, 1115, 0, 0, 0, 286, 287, 1191, 288,
	289, 290, 291, 292, 293, 633, 1164, 0, 294, 1171,
	295, 1170, 0, 1181, 296, 297, 298, 299, 300, 301,
	1117, 1150, 1082, 302, 1211, 1212, 640, 0, 303, 304,
	1157, 0, 1138, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1192, 327, 328, 329, 1141, 1139, 1140, 1147, 1143,
	1142, 1146, 330, 331, 332, 333, 334, 1174, 2687, 1168,
	1167, 1087, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 1159, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 1093, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 1182,
	1183, 366, 1106, 274, 0, 0, 0, 0, 0, 367,
	368, 369, 1166, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 1193, 373, 374, 375, 1179, 1180, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 1189,
	0, 1116, 386, 0, 387, 388, 389, 2688, 391, 1152,
	1153, 1156, 471, 1195, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 275, 399, 400, 401, 403,
	0, 1194, 402, 1161, 1162, 0, 1122, 0, 404, 405,
	1196, 1154, 1197, 406, 407, 408, 1198, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 1190, 1199, 420, 421, 1200, 0, 422,
	0, 0, 0, 423, 424, 427, 1145, 1144, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 2689,
	437, 2686, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 1201, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 1202, 467, 456, 1084, 276, 1203, 468, 469, 1107,
	1155, 470, 1169, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 1204,
	481, 1205, 1184, 482, 483, 1094, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 1185, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 1165, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 1206, 536, 537, 538, 539,
	540, 1095, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 2690, 0, 558, 559, 557,
	560, 561, 562, 1148, 563, 564, 546, 547, 565, 566,
	1207, 567, 568, 569, 570, 571, 572, 573, 1163, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	1210, 581, 582, 583, 584, 1186, 588, 589, 0, 590,
	591, 1081, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 1175, 1176, 1177, 1178,
	0, 609, 0, 601, 602, 603, 1187, 604, 1188, 1105,
	605, 606, 607, 608, 0, 610, 611, 0, 1088, 612,
	613, 614, 616, 617, 615, 618, 1149, 619, 0, 0,
	620, 621, 622, 679, 1172, 1209, 0, 624, 623, 625,
	682, 0, 626, 0, 0, 0, 0, 627, 628, 683,
	629, 2685, 631, 1085, 0, 0, 0, 0, 1127, 1099,
	1100, 1101, 1097, 1098, 1110, 0, 1080, 0, 0, 0,
	0, 0, 0, 1078, 1079, 277, 279, 278, 280, 281,
	282, 283, 1111, 284, 285, 0, 1109, 0, 0, 0,
	1151, 1115, 0, 0, 0, 286, 287, 1191, 288, 289,
	290, 291, 292, 293, 633, 1164, 0, 294, 1171, 295,
	1170, 0, 1181, 296, 297, 298, 299, 300, 301, 1117,
	1150, 1082, 302, 1211, 1212, 640, 0, 303, 304, 1157,
	0, 1138, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1192, 327, 328, 329, 1141, 1139, 1140, 1147, 1143, 1142,
	1146, 330, 331, 332, 333, 334, 1174, 335, 1168, 1167,
	1087, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 1159, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 1093, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 1182, 1183,
	366, 1106, 274, 0, 0, 0, 0, 0, 367, 368,
	369, 1166, 0, 0, 0, 370, 0, 371, 372, 0,
	0, 1193, 373, 374, 375, 1179, 1180, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 1189, 0,
	1116, 386, 0, 387, 388, 389, 390, 391, 1152, 1153,
	1156, 471, 1195, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 275, 399, 400, 401, 403, 0,
	1194, 402, 1161, 1162, 0, 1122, 0, 404, 405, 1196,
	1154, 1197, 406, 407, 408, 1198, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 1190, 1199, 420, 421, 1200, 0, 422, 0,
	0, 0, 423, 424, 427, 1145, 1144, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 1201, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	1202, 467, 456, 1084, 276, 1203, 468, 469, 1107, 1155,
	470, 1169, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 1204, 481,
	1205, 1184, 482, 483, 1094, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 1185, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 1165, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 1206, 536, 537, 538, 539, 540,
	1095, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 1148, 563, 564, 546, 547, 565, 566, 1207,
	567, 568, 569, 570, 571, 572, 573, 1163, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 1210,
	581, 582, 583, 584, 1186, 588, 589, 0, 590, 591,
	1081, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 1175, 1176, 1177, 1178, 0,
	609, 0, 601, 602, 603, 1187, 604, 1188, 1105, 605,
	606, 607, 608, 0, 610, 611, 0, 1088, 612, 613,
	614, 616, 617, 615, 618, 1149, 619, 0, 0, 620,
	621, 622, 679, 1172, 1209, 0, 624, 623, 625, 682,
	0, 626, 0, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 1085, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1080, 0, 0, 0, 0,
	0, 0, 1078, 1079, 0, 0, 0, 0, 0, 1875,
	0, 1111, 0, 0, 0, 1109, 1127, 1099, 1100, 1101,
	1097, 1098, 1110, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	2436, 284, 285, 0, 0, 0, 0, 0, 1151, 1115,
	0, 0, 0, 286, 287, 1191, 288, 289, 290, 291,
	292, 293, 633, 1164, 0, 294, 1171, 295, 1170, 0,
	1181, 296, 297, 298, 299, 300, 301, 1117, 1150, 1082,
	302, 1211, 1212, 640, 0, 303, 304, 1157, 0, 1138,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1192, 327,
	328, 329, 1141, 1139, 1140, 1147, 1143, 1142, 1146, 330,
	331, 332, 333, 334, 1174, 335, 1168, 1167, 1087, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 1159, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 1093, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 1182, 1183, 366, 1106,
	274, 0, 0, 0, 0, 0, 367, 368, 369, 1166,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 1193,
	373, 374, 375, 1179, 1180, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 1189, 0, 1116, 386,
	0, 387, 388, 389, 390, 391, 1152, 1153, 1156, 471,
	1195, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 275, 399, 400, 401, 403, 0, 1194, 402,
	1161, 1162, 0, 1122, 0, 404, 405, 1196, 1154, 1197,
	406, 407, 408, 1198, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	1190, 1199, 420, 421, 1200, 0, 422, 0, 0, 0,
	423, 424, 427, 1145, 1144, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 1201, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 1202, 467,
	456, 1084, 276, 1203, 468, 469, 1107, 1155, 470, 1169,
	472, 473, 0, 0, 474, 0, 0, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 1204, 481, 1205, 1184,
	482, 483, 1094, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 1185, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 1165,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 1206, 536, 537, 538, 539, 540, 1095, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 0, 558, 559, 557, 560, 561, 562,
	1148, 563, 564, 546, 547, 565, 566, 1207, 567, 568,
	569, 570, 571, 572, 573, 1163, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 1210, 581, 582,
	583, 584, 1186, 588, 589, 0, 590, 591, 1081, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 1175, 1176, 1177, 1178, 0, 609, 0,
	601, 602, 603, 1187, 604, 1188, 1105, 605, 606, 607,
	608, 0, 610, 611, 0, 1088, 612, 613, 614, 616,
	617, 615, 618, 1149, 619, 0, 0, 620, 621, 622,
	679, 1172, 1209, 0, 624, 623, 625, 682, 0, 626,
	0, 0, 0, 0, 627, 628, 683, 629, 630, 631,
	1085, 0, 0, 2400, 0, 1127, 1099, 1100, 1101, 1097,
	1098, 1110, 0, 1080, 0, 0, 0, 0, 0, 0,
	1078, 1079, 277, 279, 278, 280, 281, 282, 283, 1111,
	284, 285, 0, 1109, 0, 0, 0, 1151, 1115, 0,
	0, 0, 286, 287, 1191, 288, 289, 290, 291, 292,
	293, 633, 1164, 0, 294, 1171, 295, 1170, 0, 1181,
	296, 297, 298, 299, 300, 301, 1117, 1150, 1082, 302,
	1211, 1212, 640, 0, 303, 304, 1157, 0, 1138, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1192, 327, 328,
	329, 1141, 1139, 1140, 1147, 1143, 1142, 1146, 330, 331,
	332, 333, 334, 1174, 335, 1168, 1167, 1087, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 1159, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 1093, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 1182, 1183, 366, 1106, 274,
	0, 0, 0, 0, 0, 367, 368, 369, 1166, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 1193, 373,
	374, 375, 1179, 1180, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 1189, 0, 1116, 386, 0,
	387, 388, 389, 390, 391, 1152, 1153, 1156, 471, 1195,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 275, 399, 400, 401, 403, 0, 1194, 402, 1161,
	1162, 0, 1122, 0, 404, 405, 1196, 1154, 1197, 406,
	407, 408, 1198, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 1190,
	1199, 420, 421, 1200, 0, 422, 0, 0, 0, 423,
	424, 427, 1145, 1144, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 1201, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 1202, 467, 456,
	1084, 276, 1203, 468, 469, 1107, 1155, 470, 1169, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 1204, 481, 1205, 1184, 482,
	483, 1094, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 1185, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 1165, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 1206, 536, 537, 538, 539, 540, 1095, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 561, 562, 1148,
	563, 564, 546, 547, 565, 566, 1207, 567, 568, 569,
	570, 571, 572, 573, 1163, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 1210, 581, 582, 583,
	584, 1186, 588, 589, 0, 590, 591, 1081, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 1175, 1176, 1177, 1178, 0, 609, 0, 601,
	602, 603, 1187, 604, 1188, 1105, 605, 606, 607, 608,
	0, 610, 611, 0, 1088, 612, 613, 614, 616, 617,
	615, 618, 1149, 619, 0, 0, 620, 621, 622, 679,
	1172, 1209, 0, 624, 623, 625, 682, 0, 626, 0,
	0, 0, 0, 627, 628, 683, 629, 630, 631, 1085,
	0, 0, 2375, 0, 1127, 1099, 1100, 1101, 1097, 1098,
	1110, 0, 1080, 0, 0, 0, 0, 0, 0, 1078,
	1079, 277, 279, 278, 280, 281, 282, 283, 1111, 284,
	285, 0, 1109, 0, 0, 0, 1151, 1115, 0, 0,
	0, 286, 287, 1191, 288, 289, 290, 291, 292, 293,
	633, 1164, 0, 294, 1171, 295, 1170, 0, 1181, 296,
	297, 298, 299, 300, 301, 1117, 1150, 1082, 302, 1211,
	1212, 640, 0, 303, 304, 1157, 0, 1138, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1192, 327, 328, 329,
	1141, 1139, 1140, 1147, 1143, 1142, 1146, 330, 331, 332,
	333, 334, 1174, 335, 1168, 1167, 1087, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 1159, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 1093, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 1182, 1183, 366, 1106, 274, 0,
	0, 0, 0, 0, 367, 368, 369, 1166, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 1193, 373, 374,
	375, 1179, 1180, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 1189, 0, 1116, 386, 0, 387,
	388, 389, 390, 391, 1152, 1153, 1156, 471, 1195, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	275, 399, 400, 401, 403, 0, 1194, 402, 1161, 1162,
	0, 1122, 0, 404, 405, 1196, 1154, 1197, 406, 407,
	408, 1198, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 1190, 1199,
	420, 421, 1200, 0, 422, 0, 0, 0, 423, 424,
	427, 1145, 1144, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 1201, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 1202, 467, 456, 1084,
	276, 1203, 468, 469, 1107, 1155, 470, 1169, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 1204, 481, 1205, 1184, 482, 483,
	1094, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 1185, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 1165, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	1206, 536, 537, 538, 539, 540, 1095, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 1148, 563,
	564, 546, 547, 565, 566, 1207, 567, 568, 569, 570,
	571, 572, 573, 1163, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 1210, 581, 582, 583, 584,
	1186, 588, 589, 0, 590, 591, 1081, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 1175, 1176, 1177, 1178, 0, 609, 0, 601, 602,
	603, 1187, 604, 1188, 1105, 605, 606, 607, 608, 0,
	610, 611, 0, 1088, 612, 613, 614, 616, 617, 615,
	618, 1149, 619, 0, 0, 620, 621, 622, 679, 1172,
	1209, 0, 624, 623, 625, 682, 0, 626, 0, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 1085, 0,
	0, 1715, 0, 1127, 1099, 1100, 1101, 1097, 1098, 1110,
	0, 1080, 0, 0, 0, 0, 0, 0, 1078, 1079,
	277, 279, 278, 280, 281, 282, 283, 1111, 284, 285,
	0, 1109, 0, 0, 0, 1151, 1115, 0, 0, 0,
	286, 287, 1191, 288, 289, 290, 291, 292, 293, 633,
	1164, 0, 294, 1171, 295, 1170, 0, 1181, 296, 297,
	298, 299, 300, 301, 1117, 1150, 1082, 302, 1211, 1212,
	640, 0, 303, 304, 1157, 0, 1138, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1192, 327, 328, 329, 1141,
	1139, 1140, 1147, 1143, 1142, 1146, 330, 331, 332, 333,
	334, 1174, 335, 1168, 1167, 1087, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	1159, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 1093, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 1182, 1183, 366, 1106, 274, 0, 0,
	0, 0, 0, 367, 368, 369, 1166, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 1193, 373, 374, 375,
	1179, 1180, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 1189, 0, 1116, 386, 0, 387, 388,
	389, 390, 391, 1152, 1153, 1156, 471, 1195, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 275,
	399, 400, 401, 403, 0, 1194, 402, 1161, 1162, 0,
	1122, 0, 404, 405, 1196, 1154, 1197, 406, 407, 408,
	1198, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 1190, 1199, 420,
	421, 1200, 0, 422, 0, 0, 0, 423, 424, 427,
	1145, 1144, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 1201, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 1202, 467, 456, 1084, 276,
	1203, 468, 469, 1107, 1155, 470, 1169, 472, 473, 0,
	0, 474, 0, 0, 0, 476, 477, 478, 0, 0,
	479, 480, 662, 1204, 481, 1205, 1184, 482, 483, 1094,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	1185, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 1165, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 1206,
	536, 537, 538, 539, 540, 1095, 541, 0, 542, 543,
	549, 550, 551, 544, 545, 552, 553, 554, 555, 556,
	0, 558, 559, 557, 560, 561, 562, 1148, 563, 564,
	546, 547, 565, 566, 1207, 567, 568, 569, 570, 571,
	572, 573, 1163, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 1210, 581, 582, 583, 584, 1186,
	588, 589, 0, 590, 591, 1081, 587, 578, 0, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	1175, 1176, 1177, 1178, 0, 609, 0, 601, 602, 603,
	1187, 604, 1188, 1105, 605, 606, 607, 608, 0, 610,
	611, 0, 1088, 612, 613, 614, 616, 617, 615, 618,
	1149, 619, 0, 0, 620, 621, 622, 679, 1172, 1209,
	0, 624, 623, 625, 682, 0, 626, 0, 0, 0,
	0, 627, 628, 683, 629, 630, 631, 1085, 0, 0,
	1644, 0, 1127, 1099, 1100, 1101, 1097, 1098, 1110, 0,
	1080, 0, 0, 0, 0, 0, 0, 1078, 1079, 277,
	279, 278, 280, 281, 282, 283, 1111, 284, 285, 0,
	1109, 0, 0, 0, 1151, 1115, 0, 0, 0, 286,
	287, 1191, 288, 289, 290, 291, 292, 293, 633, 1164,
	0, 294, 1171, 295, 1170, 0, 1181, 296, 297, 298,
	299, 300, 301, 1117, 1150, 1082, 302, 1211, 1212, 640,
	0, 303, 304, 1157, 0, 1138, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1192, 327, 328, 329, 1141, 1139,
	1140, 1147, 1143, 1142, 1146, 330, 331, 332, 333, 334,
	1174, 335, 1168, 1167, 1087, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 1159,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 1093, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 1182, 1183, 366, 1106, 274, 0, 0, 0,
	0, 0, 367, 368, 369, 1166, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 1193, 373, 374, 375, 1179,
	1180, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 1189, 0, 1116, 386, 0, 387, 388, 389,
	390, 391, 1152, 1153, 1156, 471, 1195, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 275, 399,
	400, 401, 403, 0, 1194, 402, 1161, 1162, 0, 1122,
	0, 404, 405, 1196, 1154, 1197, 406, 407, 408, 1198,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 1190, 1199, 420, 421,
	1200, 0, 422, 0, 0, 0, 423, 424, 427, 1145,
	1144, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	1201, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 1202, 467, 456, 1084, 276, 1203,
	468, 469, 1107, 1155, 470, 1169, 472, 473, 0, 0,
	474, 0, 0, 0, 476, 477, 478, 0, 0, 479,
	480, 662, 1204, 481, 1205, 1184, 482, 483, 1094, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 1185,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 1165, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 1206, 536,
	537, 538, 539, 540, 1095, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 552, 553, 554, 555, 556, 0,
	558, 559, 557, 560, 561, 562, 1148, 563, 564, 546,
	547, 565, 566, 1207, 567, 568, 569, 570, 571, 572,
	573, 1163, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 1210, 581, 582, 583, 584, 1186, 588,
	589, 0, 590, 591, 1081, 587, 578, 0, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 0, 600, 1175,
	1176, 1177, 1178, 0, 609, 0, 601, 602, 603, 1187,
	604, 1188, 1105, 605, 606, 607, 608, 0, 610, 611,
	0, 1088, 612, 613, 614, 616, 617, 615, 618, 1149,
	619, 0, 0, 620, 621, 622, 679, 1172, 1209, 0,
	624, 623, 625, 682, 0, 626, 0, 0, 0, 0,
	627, 628, 683, 629, 630, 631, 1085, 0, 0, 1639,
	0, 1127, 1099, 1100, 1101, 1097, 1098, 1110, 0, 1080,
	0, 0, 0, 0, 0, 0, 1078, 1079, 277, 279,
	278, 280, 281, 282, 283, 1111, 284, 285, 0, 1109,
	0, 0, 0, 1151, 1115, 0, 0, 0, 286, 287,
	1191, 288, 289, 290, 291, 292, 293, 633, 1164, 0,
	294, 1171, 295, 1170, 0, 1181, 296, 297, 298, 299,
	300, 301, 1117, 1150, 1082, 302, 1211, 1212, 640, 0,
	303, 304, 1157, 0, 1138, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1192, 327, 328, 329, 1141, 1139, 1140,
	1147, 1143, 1142, 1146, 330, 331, 332, 333, 334, 1174,
	335, 1168, 1167, 1087, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 1159, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	1093, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 1182, 1183, 366, 1106, 274, 0, 0, 0, 0,
	0, 367, 368, 369, 1166, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 1193, 373, 374, 375, 1179, 1180,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 1189, 0, 1116, 386, 0, 387, 388, 389, 390,
	391, 1152, 1153, 1156, 471, 1195, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 275, 399, 400,
	401, 403, 0, 1194, 402, 1161, 1162, 0, 1122, 0,
	404, 405, 1196, 1154, 1197, 406, 407, 408, 1198, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 1190, 1199, 420, 421, 1200,
	0, 422, 0, 0, 0, 423, 424, 427, 1145, 1144,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 1201,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 1202, 467, 456, 1084, 276, 1203, 468,
	469, 1107, 1155, 470, 1169, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	662, 1204, 481, 1205, 1184, 482, 483, 1094, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 1185, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 1165, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 1206, 536, 537,
	538, 539, 540, 1095, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 0, 558,
	559, 557, 560, 561, 562, 1148, 563, 564, 546, 547,
	565, 566, 1207, 567, 568, 569, 570, 571, 572, 573,
	1163, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 1210, 581, 582, 583, 584, 1186, 588, 589,
	0, 590, 591, 1081, 587, 578, 0, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 1175, 1176,
	1177, 1178, 0, 609, 0, 601, 602, 603, 1187, 604,
	1188, 1105, 605, 606, 607, 608, 0, 610, 611, 0,
	1088, 612, 613, 614, 616, 617, 615, 618, 1149, 619,
	0, 0, 620, 621, 622, 679, 1172, 1209, 0, 624,
	623, 625, 682, 0, 626, 0, 0, 0, 0, 627,
	628, 683, 629, 630, 631, 1085, 0, 0, 1630, 0,
	1127, 1099, 1100, 1101, 1097, 1098, 1110, 0, 1080, 0,
	0, 0, 0, 0, 0, 1078, 1079, 277, 279, 278,
	280, 281, 282, 283, 1111, 284, 285, 0, 1109, 0,
	0, 0, 1151, 1115, 0, 0, 0, 286, 287, 1191,
	288, 289, 290, 291, 292, 293, 633, 1164, 0, 294,
	1171, 295, 1170, 0, 1181, 296, 297, 298, 299, 300,
	301, 1117, 1150, 1082, 302, 1211, 1212, 640, 0, 303,
	304, 1157, 0, 1138, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1192, 327, 328, 329, 1141, 1139, 1140, 1147,
	1143, 1142, 1146, 330, 331, 332, 333, 334, 1174, 335,
	1168, 1167, 1087, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 1159, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 1093,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	1182, 1183, 366, 1106, 274, 0, 0, 0, 0, 0,
	367, 368, 369, 1166, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 1193, 373, 374, 375, 1179, 1180, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	1189, 0, 1116, 386, 0, 387, 388, 389, 390, 391,
	1152, 1153, 1156, 471, 1195, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 275, 399, 400, 401,
	403, 0, 1194, 402, 1161, 1162, 0, 1122, 0, 404,
	405, 1196, 1154, 1197, 406, 407, 408, 1198, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 1190, 1199, 420, 421, 1200, 0,
	422, 0, 0, 0, 423, 424, 427, 1145, 1144, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 1201, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 1202, 467, 456, 1084, 276, 1203, 468, 469,
	1107, 1155, 470, 1169, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	1204, 481, 1205, 1184, 482, 483, 1094, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 1185, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 1165, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 1206, 536, 537, 538,
	539, 540, 1095, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 1148, 563, 564, 546, 547, 565,
	566, 1207, 567, 568, 569, 570, 571, 572, 573, 1163,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 1210, 581, 582, 583, 584, 1186, 588, 589, 0,
	590, 591, 1081, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 1175, 1176, 1177,
	1178, 0, 609, 0, 601, 602, 603, 1187, 604, 1188,
	1105, 605, 606, 607, 608, 0, 610, 611, 0, 1088,
	612, 613, 614, 616, 617, 615, 618, 1149, 619, 0,
	0, 620, 621, 622, 679, 1172, 1209, 0, 624, 623,
	625, 682, 0, 626, 0, 0, 0, 0, 627, 628,
	683, 629, 630, 631, 1085, 0, 0, 1625, 0, 1127,
	1099, 1100, 1101, 1097, 1098, 1110, 0, 1080, 0, 0,
	0, 0, 0, 0, 1078, 1079, 277, 279, 278, 280,
	281, 282, 283, 1111, 284, 285, 0, 1109, 0, 0,
	0, 1151, 1115, 0, 0, 0, 286, 287, 1191, 288,
	289, 290, 291, 292, 293, 633, 1164, 0, 294, 1171,
	295, 1170, 0, 1181, 296, 297, 298, 299, 300, 301,
	1117, 1150, 1082, 302, 1211, 1212, 640, 0, 303, 304,
	1157, 0, 1138, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1192, 327, 328, 329, 1141, 1139, 1140, 1147, 1143,
	1142, 1146, 330, 331, 332, 333, 334, 1174, 335, 1168,
	1167, 1087, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 1159, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 1093, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 1182,
	1183, 366, 1106, 274, 0, 0, 0, 0, 0, 367,
	368, 369, 1166, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 1193, 373, 374, 375, 1179, 1180, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 1189,
	0, 1116, 386, 0, 387, 388, 389, 390, 391, 1152,
	1153, 1156, 471, 1195, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 275, 399, 400, 401, 403,
	0, 1194, 402, 1161, 1162, 0, 1122, 0, 404, 405,
	1196, 1154, 1197, 406, 407, 408, 1198, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 1190, 1199, 420, 421, 1200, 0, 422,
	0, 0, 0, 423, 424, 427, 1145, 1144, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 1201, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 1202, 467, 456, 1084, 276, 1203, 468, 469, 1107,
	1155, 470, 1169, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 1204,
	481, 1205, 1184, 482, 483, 1094, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 1185, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 1165, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 1206, 536, 537, 538, 539,
	540, 1095, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 1148, 563, 564, 546, 547, 565, 566,
	1207, 567, 568, 569, 570, 571, 572, 573, 1163, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	1210, 581, 582, 583, 584, 1186, 588, 589, 0, 590,
	591, 1081, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 1175, 1176, 1177, 1178,
	0, 609, 0, 601, 602, 603, 1187, 604, 1188, 1105,
	605, 606, 607, 608, 0, 610, 611, 0, 1088, 612,
	613, 614, 616, 617, 615, 618, 1149, 619, 0, 0,
	620, 621, 622, 679, 1172, 1209, 0, 624, 623, 625,
	682, 0, 626, 0, 0, 0, 0, 627, 628, 683,
	629, 630, 631, 1085, 0, 0, 1536, 0, 1127, 1099,
	1100, 1101, 1097, 1098, 1110, 0, 1080, 0, 0, 0,
	0, 0, 0, 1078, 1079, 277, 279, 278, 280, 281,
	282, 283, 1111, 284, 285, 0, 1109, 0, 0, 0,
	1151, 1115, 0, 0, 0, 286, 287, 1191, 288, 289,
	290, 291, 292, 293, 633, 1164, 0, 294, 1171, 295,
	1170, 0, 1181, 296, 297, 298, 299, 300, 301, 1117,
	1150, 1082, 302, 1211, 1212, 640, 0, 303, 304, 1157,
	0, 1138, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1192, 327, 328, 329, 1141, 1139, 1140, 1147, 1143, 1142,
	1146, 330, 331, 332, 333, 334, 1174, 335, 1168, 1167,
	1087, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 1159, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 1093, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 1182, 1183,
	366, 1106, 274, 0, 0, 0, 0, 0, 367, 368,
	369, 1166, 0, 0, 0, 370, 0, 371, 372, 0,
	0, 1193, 373, 374, 375, 1179, 1180, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 1189, 0,
	1116, 386, 0, 387, 388, 389, 390, 391, 1535, 1153,
	1156, 471, 1195, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 275, 399, 400, 401, 403, 0,
	1194, 402, 1161, 1162, 0, 1122, 0, 404, 405, 1196,
	1154, 1197, 406, 407, 408, 1198, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 1190, 1199, 420, 421, 1200, 0, 422, 0,
	0, 0, 423, 424, 427, 1145, 1144, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 1201, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	1202, 467, 456, 1084, 276, 1203, 468, 469, 1107, 1155,
	470, 1169, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 1204, 481,
	1205, 1184, 482, 483, 1094, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 1185, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 1165, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 1206, 536, 537, 538, 539, 540,
	1095, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 1148, 563, 564, 546, 547, 565, 566, 1207,
	567, 568, 569, 570, 571, 572, 573, 1163, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 1210,
	581, 582, 583, 584, 1186, 588, 589, 0, 590, 591,
	1081, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 1175, 1176, 1177, 1178, 0,
	609, 0, 601, 602, 603, 1187, 604, 1188, 1105, 605,
	606, 607, 608, 0, 610, 611, 0, 1088, 612, 613,
	614, 616, 617, 615, 618, 1149, 619, 0, 0, 620,
	621, 622, 679, 1172, 1209, 0, 624, 623, 625, 682,
	0, 626, 0, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 1085, 0, 0, 1530, 0, 1127, 1099, 1100,
	1101, 1097, 1098, 1110, 0, 1080, 0, 0, 0, 0,
	0, 0, 1078, 1079, 277, 279, 278, 280, 281, 282,
	283, 1111, 284, 285, 0, 1109, 0, 0, 0, 1151,
	1115, 0, 0, 0, 286, 287, 1191, 288, 289, 290,
	291, 292, 293, 633, 1164, 0, 294, 1171, 295, 1170,
	0, 1181, 296, 297, 298, 299, 300, 301, 1117, 1150,
	1082, 302, 1211, 1212, 640, 0, 303, 304, 1157, 0,
	1138, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1192,
	327, 328, 329, 1141, 1139, 1140, 1147, 1143, 1142, 1146,
	330, 331, 332, 333, 334, 1174, 335, 1168, 1167, 1087,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 1159, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 1093, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 1182, 1183, 366,
	1106, 274, 0, 0, 0, 0, 0, 367, 368, 369,
	1166, 0, 0, 0, 370, 0, 371, 372, 0, 0,
	1193, 373, 374, 375, 1179, 1180, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 1189, 0, 1116,
	386, 0, 387, 388, 389, 390, 391, 1529, 1153, 1156,
	471, 1195, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 275, 399, 400, 401, 403, 0, 1194,
	402, 1161, 1162, 0, 1122, 0, 404, 405, 1196, 1154,
	1197, 406, 407, 408, 1198, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 1190, 1199, 420, 421, 1200, 0, 422, 0, 0,
	0, 423, 424, 427, 1145, 1144, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 1201, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 1202,
	467, 456, 1084, 276, 1203, 468, 469, 1107, 1155, 470,
	1169, 472, 473, 0, 0, 474, 0, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 1204, 481, 1205,
	1184, 482, 483, 1094, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 1185, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	1165, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 1206, 536, 537, 538, 539, 540, 1095,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 1148, 563, 564, 546, 547, 565, 566, 1207, 567,
	568, 569, 570, 571, 572, 573, 1163, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 1210, 581,
	582, 583, 584, 1186, 588, 589, 0, 590, 591, 1081,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 1175, 1176, 1177, 1178, 0, 609,
	0, 601, 602, 603, 1187, 604, 1188, 1105, 605, 606,
	607, 608, 0, 610, 611, 0, 1088, 612, 613, 614,
	616, 617, 615, 618, 1149, 619, 0, 0, 620, 621,
	622, 679, 1172, 1209, 0, 624, 623, 625, 682, 0,
	626, 0, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 1085, 0, 0, 1523, 0, 1127, 1099, 1100, 1101,
	1097, 1098, 1110, 0, 1080, 0, 0, 0, 0, 0,
	0, 1078, 1079, 277, 279, 278, 280, 281, 282, 283,
	1111, 284, 285, 0, 1109, 0, 0, 0, 1151, 1115,
	0, 0, 0, 286, 287, 1191, 288, 289, 290, 291,
	292, 293, 633, 1164, 0, 294, 1171, 295, 1170, 0,
	1181, 296, 297, 298, 299, 300, 301, 1117, 1150, 1082,
	302, 1211, 1212, 640, 0, 303, 304, 1157, 0, 1138,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1192, 327,
	328, 329, 1141, 1139, 1140, 1147, 1143, 1142, 1146, 330,
	331, 332, 333, 334, 1174, 335, 1168, 1167, 1087, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 1159, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 1093, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 1182, 1183, 366, 1106,
	274, 0, 0, 0, 0, 0, 367, 368, 369, 1166,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 1193,
	373, 374, 375, 1179, 1180, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 1189, 0, 1116, 386,
	0, 387, 388, 389, 390, 391, 1152, 1153, 1156, 471,
	1195, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 275, 399, 400, 401, 403, 0, 1194, 402,
	1161, 1162, 0, 1122, 0, 404, 405, 1196, 1154, 1197,
	406, 407, 408, 1198, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	1190, 1199, 420, 421, 1200, 0, 422, 0, 0, 0,
	423, 424, 427, 1145, 1144, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 1201, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 1202, 467,
	456, 1084, 276, 1203, 468, 469, 1107, 1155, 470, 1169,
	472, 473, 0, 0, 474, 0, 0, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 1204, 481, 1205, 1184,
	482, 483, 1094, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 1185, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 1165,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 1206, 536, 537, 538, 539, 540, 1095, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 0, 558, 559, 557, 560, 561, 562,
	1148, 563, 564, 546, 547, 565, 566, 1207, 567, 568,
	569, 570, 571, 572, 573, 1163, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 1210, 581, 582,
	583, 584, 1186, 588, 589, 0, 590, 591, 1081, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 1175, 1176, 1177, 1178, 0, 609, 0,
	601, 602, 603, 1187, 604, 1188, 1105, 605, 606, 607,
	608, 0, 610, 611, 0, 1088, 612, 613, 614, 616,
	617, 615, 618, 1149, 619, 0, 0, 620, 621, 622,
	679, 1172, 1209, 0, 624, 623, 625, 682, 0, 626,
	0, 0, 0, 0, 627, 628, 683, 629, 630, 631,
	1085, 0, 0, 1338, 0, 1127, 1099, 1100, 1101, 1097,
	1098, 1110, 0, 1080, 0, 0, 0, 0, 0, 0,
	1078, 1079, 277, 279, 278, 280, 281, 282, 283, 1111,
	284, 285, 0, 1109, 0, 0, 0, 1151, 1115, 0,
	0, 0, 286, 287, 1191, 288, 289, 290, 291, 292,
	293, 633, 1164, 0, 294, 1171, 295, 1170, 0, 1181,
	296, 297, 298, 299, 300, 301, 1117, 1150, 1082, 302,
	1211, 1212, 640, 0, 303, 304, 1157, 0, 1138, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1192, 327, 328,
	329, 1141, 1139, 1140, 1147, 1143, 1142, 1146, 330, 331,
	332, 333, 334, 1174, 335, 1168, 1167, 1087, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 1159, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 1093, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 1182, 1183, 366, 1106, 274,
	0, 0, 0, 0, 0, 367, 368, 369, 1166, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 1193, 373,
	374, 375, 1179, 1180, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 1189, 0, 1116, 386, 0,
	387, 388, 389, 390, 391, 1152, 1153, 1156, 471, 1195,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 275, 399, 400, 401, 403, 0, 1194, 402, 1161,
	1162, 0, 1122, 0, 404, 405, 1196, 1154, 1197, 406,
	407, 408, 1198, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 1190,
	1199, 420, 421, 1200, 0, 422, 0, 0, 0, 423,
	424, 427, 1145, 1144, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 1201, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 1202, 467, 456,
	1084, 276, 1203, 468, 469, 1107, 1155, 470, 1169, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 1204, 481, 1205, 1184, 482,
	483, 1094, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 1185, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 1165, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 1206, 536, 537, 538, 539, 540, 1095, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 561, 562, 1148,
	563, 564, 546, 547, 565, 566, 1207, 567, 568, 569,
	570, 571, 572, 573, 1163, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 1210, 581, 582, 583,
	584, 1186, 588, 589, 0, 590, 591, 1081, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 1175, 1176, 1177, 1178, 0, 609, 0, 601,
	602, 603, 1187, 604, 1188, 1105, 605, 606, 607, 608,
	0, 610, 611, 0, 1088, 612, 613, 614, 616, 617,
	615, 618, 1149, 619, 0, 0, 620, 621, 622, 679,
	1172, 1209, 0, 624, 623, 625, 682, 0, 626, 0,
	0, 0, 0, 627, 628, 683, 629, 630, 631, 1085,
	0, 0, 0, 0, 1127, 1099, 1100, 1101, 1097, 1098,
	1110, 0, 1080, 0, 0, 0, 0, 0, 0, 1078,
	1079, 277, 279, 278, 280, 281, 282, 283, 1111, 284,
	285, 0, 1109, 0, 0, 0, 1151, 1115, 0, 0,
	0, 286, 287, 1191, 288, 289, 290, 291, 292, 293,
	633, 1164, 0, 294, 1171, 295, 1170, 0, 1181, 296,
	297, 298, 299, 300, 301, 1117, 1150, 1082, 302, 1211,
	1212, 640, 0, 303, 304, 1157, 0, 1138, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1192, 327, 328, 329,
	1141, 1139, 1140, 1147, 1143, 1142, 1146, 330, 331, 332,
	333, 334, 1174, 335, 1168, 1167, 1087, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 1159, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 1093, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 1182, 1183, 366, 1106, 274, 0,
	0, 0, 0, 0, 367, 368, 369, 1166, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 1193, 373, 374,
	375, 1179, 1180, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 1189, 0, 1116, 386, 0, 387,
	388, 389, 390, 391, 1152, 1153, 1156, 471, 1195, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	275, 399, 400, 401, 403, 0, 1194, 402, 1161, 1162,
	0, 1122, 0, 404, 405, 1196, 1154, 1197, 406, 407,
	408, 1198, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 1190, 1199,
	420, 421, 1200, 0, 422, 0, 0, 0, 423, 424,
	427, 1145, 1144, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 1201, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 1202, 467, 456, 1084,
	276, 1203, 468, 469, 1107, 1155, 470, 1169, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 1204, 481, 1205, 1184, 482, 483,
	1094, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 1185, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 1165, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	1206, 536, 537, 538, 539, 540, 1095, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 1148, 563,
	564, 546, 547, 565, 566, 1207, 567, 568, 569, 570,
	571, 572, 573, 1163, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 1210, 581, 582, 583, 584,
	1186, 588, 589, 0, 590, 591, 1081, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 1175, 1176, 1177, 1178, 0, 609, 0, 601, 602,
	603, 1187, 604, 1188, 1105, 605, 606, 607, 608, 0,
	610, 611, 0, 1088, 612, 613, 614, 616, 617, 615,
	618, 1149, 619, 0, 0, 620, 621, 622, 679, 1172,
	1209, 0, 624, 623, 625, 682, 0, 626, 0, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 1085, 0,
	0, 0, 0, 1127, 1099, 1100, 1101, 1097, 1098, 1110,
	0, 1080, 0, 0, 0, 0, 0, 0, 1078, 1079,
	277, 279, 278, 280, 281, 282, 283, 1111, 284, 285,
	0, 1109, 0, 0, 0, 1151, 1115, 0, 0, 0,
	286, 287, 1191, 288, 289, 290, 291, 292, 293, 633,
	1164, 0, 294, 1171, 295, 1170, 0, 1181, 296, 297,
	298, 299, 300, 301, 1117, 1150, 1082, 302, 1211, 1212,
	640, 0, 303, 304, 1157, 0, 1138, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1192, 327, 328, 4728, 1141,
	1139, 1140, 1147, 1143, 1142, 1146, 330, 331, 332, 333,
	334, 1174, 335, 1168, 1167, 1087, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	1159, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 1093, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 1182, 1183, 366, 1106, 274, 0, 0,
	0, 0, 0, 367, 368, 369, 1166, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 1193, 373, 374, 375,
	1179, 1180, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 1189, 0, 1116, 386, 0, 387, 388,
	389, 390, 391, 1152, 1153, 1156, 471, 1195, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 275,
	399, 400, 401, 403, 0, 1194, 402, 1161, 1162, 0,
	1122, 0, 404, 405, 1196, 1154, 1197, 406, 407, 408,
	1198, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 1190, 1199, 420,
	421, 1200, 0, 422, 0, 0, 0, 423, 424, 427,
	1145, 1144, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 1201, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 1202, 467, 456, 1084, 276,
	1203, 468, 469, 1107, 1155, 470, 1169, 472, 473, 0,
	0, 474, 0, 0, 0, 476, 477, 478, 0, 0,
	479, 480, 662, 1204, 481, 1205, 1184, 482, 483, 1094,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	1185, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 1165, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 1206,
	536, 537, 538, 539, 540, 1095, 541, 0, 542, 543,
	549, 550, 551, 544, 545, 552, 553, 554, 555, 556,
	0, 558, 559, 557, 560, 561, 562, 1148, 563, 564,
	546, 547, 565, 566, 1207, 567, 568, 569, 570, 571,
	572, 573, 1163, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 1210, 581, 582, 583, 584, 1186,
	588, 589, 0, 590, 591, 1081, 587, 578, 0, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	1175, 1176, 1177, 1178, 0, 609, 0, 601, 602, 603,
	1187, 604, 1188, 1105, 605, 606, 607, 608, 0, 4727,
	611, 0, 1088, 612, 613, 614, 616, 617, 615, 618,
	1149, 619, 0, 0, 620, 621, 622, 679, 1172, 1209,
	0, 624, 623, 625, 682, 0, 626, 0, 0, 0,
	0, 627, 628, 683, 629, 630, 631, 1085, 0, 0,
	0, 0, 1127, 1099, 1100, 1101, 1097, 1098, 1110, 0,
	1080, 0, 0, 0, 0, 0, 0, 1078, 1079, 277,
	279, 278, 280, 281, 282, 283, 1111, 284, 285, 0,
	1109, 0, 0, 0, 1151, 1115, 0, 0, 0, 286,
	287, 1191, 288, 289, 290, 291, 292, 293, 4726, 1164,
	0, 294, 1171, 295, 1170, 0, 1181, 296, 297, 298,
	299, 300, 301, 1117, 1150, 1082, 302, 1211, 1212, 640,
	0, 303, 304, 1157, 0, 1138, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1192, 327, 328, 4728, 1141, 1139,
	1140, 1147, 1143, 1142, 1146, 330, 331, 332, 333, 334,
	1174, 335, 1168, 1167, 1087, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 1159,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 1093, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 1182, 1183, 366, 1106, 274, 0, 0, 0,
	0, 0, 367, 368, 369, 1166, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 1193, 373, 374, 375, 1179,
	1180, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 1189, 0, 1116, 386, 0, 387, 388, 389,
	390, 391, 1152, 1153, 1156, 471, 1195, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 275, 399,
	400, 401, 403, 0, 1194, 402, 1161, 1162, 0, 1122,
	0, 404, 405, 1196, 1154, 1197, 406, 407, 408, 1198,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 1190, 1199, 420, 421,
	1200, 0, 422, 0, 0, 0, 423, 424, 427, 1145,
	1144, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	1201, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 1202, 467, 456, 1084, 276, 1203,
	468, 469, 1107, 1155, 470, 1169, 472, 473, 0, 0,
	474, 0, 0, 0, 476, 477, 478, 0, 0, 479,
	480, 662, 1204, 481, 1205, 1184, 482, 483, 1094, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 1185,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 1165, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 1206, 536,
	537, 538, 539, 540, 1095, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 552, 553, 554, 555, 556, 0,
	558, 559, 557, 560, 561, 562, 1148, 563, 564, 546,
	547, 565, 566, 1207, 567, 568, 569, 570, 571, 572,
	573, 1163, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 1210, 581, 582, 583, 584, 1186, 588,
	589, 0, 590, 591, 1081, 587, 578, 0, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 0, 600, 1175,
	1176, 1177, 1178, 0, 609, 0, 601, 602, 603, 1187,
	604, 1188, 1105, 605, 606, 607, 608, 0, 4727, 611,
	0, 1088, 612, 613, 614, 616, 617, 615, 618, 1149,
	619, 0, 0, 620, 621, 622, 679, 1172, 1209, 0,
	624, 623, 625, 682, 0, 626, 0, 0, 0, 0,
	627, 628, 683, 629, 630, 631, 1085, 0, 0, 0,
	0, 1127, 1099, 1100, 1101, 1097, 1098, 1110, 0, 1080,
	0, 0, 0, 0, 0, 0, 1078, 1079, 277, 279,
	278, 280, 281, 282, 283, 1111, 284, 285, 0, 1109,
	0, 0, 0, 1151, 1115, 0, 0, 0, 286, 287,
	1191, 288, 289, 290, 291, 292, 293, 633, 1164, 0,
	294, 1171, 295, 1170, 0, 1181, 296, 297, 298, 299,
	300, 301, 1117, 1150, 1082, 302, 1211, 1212, 640, 0,
	303, 304, 1157, 0, 1138, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1192, 327, 4351, 329, 1141, 1139, 1140,
	1147, 1143, 1142, 1146, 330, 331, 332, 333, 334, 1174,
	335, 1168, 1167, 1087, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 1159, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	1093, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 1182, 1183, 366, 1106, 274, 0, 0, 0, 0,
	0, 367, 368, 369, 1166, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 1193, 373, 374, 375, 1179, 1180,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 1189, 0, 4352, 386, 0, 387, 388, 389, 390,
	391, 1152, 1153, 1156, 471, 1195, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 275, 399, 400,
	401, 403, 0, 1194, 402, 1161, 1162, 0, 1122, 0,
	404, 405, 1196, 1154, 1197, 406, 407, 408, 1198, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 1190, 1199, 420, 421, 1200,
	0, 422, 0, 0, 0, 423, 424, 427, 1145, 1144,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 1201,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 1202, 467, 456, 1084, 276, 1203, 468,
	469, 1107, 1155, 470, 1169, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	662, 1204, 481, 1205, 1184, 482, 483, 1094, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 1185, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 1165, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 1206, 536, 537,
	538, 4350, 540, 1095, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 0, 558,
	559, 557, 560, 561, 562, 1148, 563, 564, 546, 547,
	565, 566, 1207, 567, 568, 569, 570, 571, 572, 573,
	1163, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 1210, 581, 582, 583, 584, 1186, 588, 589,
	0, 590, 591, 1081, 587, 578, 0, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 1175, 1176,
	1177, 1178, 0, 609, 0, 601, 602, 603, 1187, 604,
	1188, 1105, 605, 606, 607, 608, 0, 610, 611, 0,
	1088, 612, 613, 614, 616, 617, 615, 618, 1149, 619,
	0, 0, 620, 621, 622, 679, 1172, 1209, 0, 624,
	623, 625, 682, 0, 626, 0, 0, 0, 0, 627,
	628, 683, 629, 630, 631, 1085, 0, 0, 0, 0,
	1127, 1099, 1100, 1101, 3184, 3185, 1110, 0, 1080, 0,
	0, 0, 0, 0, 0, 1078, 1079, 277, 279, 278,
	280, 281, 282, 283, 1111, 284, 285, 0, 1109, 0,
	0, 0, 1151, 1115, 0, 0, 0, 286, 287, 1191,
	288, 289, 290, 291, 292, 293, 633, 1164, 0, 294,
	1171, 295, 1170, 0, 1181, 296, 297, 298, 299, 300,
	301, 1117, 1150, 1082, 302, 1211, 1212, 640, 0, 303,
	304, 1157, 0, 1138, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1192, 327, 328, 329, 1141, 1139, 1140, 1147,
	1143, 1142, 1146, 330, 331, 332, 333, 334, 1174, 335,
	1168, 1167, 1087, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 1159, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 1093,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	1182, 1183, 366, 1106, 274, 0, 0, 0, 0, 0,
	367, 368, 369, 1166, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 1193, 373, 374, 375, 1179, 1180, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	1189, 0, 1116, 386, 0, 387, 388, 389, 390, 391,
	1152, 1153, 1156, 471, 1195, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 275, 399, 400, 401,
	403, 0, 1194, 402, 1161, 1162, 0, 1122, 0, 404,
	405, 1196, 1154, 1197, 406, 407, 408, 1198, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 1190, 1199, 420, 421, 1200, 0,
	422, 0, 0, 0, 423, 424, 427, 1145, 1144, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 1201, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 1202, 467, 456, 1084, 276, 1203, 468, 469,
	1107, 1155, 470, 1169, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	1204, 481, 1205, 1184, 482, 483, 1094, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 1185, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 1165, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 1206, 536, 537, 538,
	539, 540, 1095, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 1148, 563, 564, 546, 547, 565,
	566, 1207, 567, 568, 569, 570, 571, 572, 573, 1163,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 1210, 581, 582, 583, 584, 1186, 588, 589, 0,
	590, 591, 1081, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 1175, 1176, 1177,
	1178, 0, 609, 0, 601, 602, 603, 1187, 604, 1188,
	1105, 605, 606, 607, 608, 0, 610, 611, 0, 1088,
	612, 613, 614, 616, 617, 615, 618, 1149, 619, 0,
	0, 620, 621, 622, 679, 1172, 1209, 0, 624, 623,
	625, 682, 0, 626, 0, 0, 0, 0, 627, 628,
	683, 629, 630, 631, 1085, 0, 0, 0, 0, 1127,
	1099, 1100, 1101, 3182, 3183, 1110, 0, 1080, 0, 0,
	0, 0, 0, 0, 1078, 1079, 277, 279, 278, 280,
	281, 282, 283, 1111, 284, 285, 0, 1109, 0, 0,
	0, 1151, 1115, 0, 0, 0, 286, 287, 1191, 288,
	289, 290, 291, 292, 293, 633, 1164, 0, 294, 1171,
	295, 1170, 0, 1181, 296, 297, 298, 299, 300, 301,
	1117, 1150, 1082, 302, 1211, 1212, 640, 0, 303, 304,
	1157, 0, 1138, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1192, 327, 328, 329, 1141, 1139, 1140, 1147, 1143,
	1142, 1146, 330, 331, 332, 333, 334, 1174, 335, 1168,
	1167, 1087, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 1159, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 1093, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 1182,
	1183, 366, 1106, 274, 0, 0, 0, 0, 0, 367,
	368, 369, 1166, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 1193, 373, 374, 375, 1179, 1180, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 1189,
	0, 1116, 386, 0, 387, 388, 389, 390, 391, 1152,
	1153, 1156, 471, 1195, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 275, 399, 400, 401, 403,
	0, 1194, 402, 1161, 1162, 0, 1122, 0, 404, 405,
	1196, 1154, 1197, 406, 407, 408, 1198, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 1190, 1199, 420, 421, 1200, 0, 422,
	0, 0, 0, 423, 424, 427, 1145, 1144, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 1201, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 1202, 467, 456, 1084, 276, 1203, 468, 469, 1107,
	1155, 470, 1169, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 1204,
	481, 1205, 1184, 482, 483, 1094, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 1185, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 1165, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 1206, 536, 537, 538, 539,
	540, 1095, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 1148, 563, 564, 546, 547, 565, 566,
	1207, 567, 568, 569, 570, 571, 572, 573, 1163, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	1210, 581, 582, 583, 584, 1186, 588, 589, 0, 590,
	591, 1081, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 1175, 1176, 1177, 1178,
	0, 609, 0, 601, 602, 603, 1187, 604, 1188, 1105,
	605, 606, 607, 608, 0, 610, 611, 0, 1088, 612,
	613, 614, 616, 617, 615, 618, 1149, 619, 0, 0,
	620, 621, 622, 679, 1172, 1209, 0, 624, 623, 625,
	682, 0, 626, 0, 0, 0, 0, 627, 628, 683,
	629, 630, 631, 1085, 0, 0, 0, 0, 1127, 1099,
	1100, 1101, 1097, 1098, 1110, 0, 1080, 0, 0, 0,
	0, 0, 0, 1078, 1079, 277, 279, 278, 280, 281,
	282, 283, 1111, 284, 285, 0, 1109, 0, 0, 0,
	1151, 1115, 0, 0, 0, 286, 287, 1191, 288, 289,
	290, 291, 292, 293, 633, 1164, 0, 294, 1171, 295,
	1170, 0, 1181, 296, 297, 298, 299, 300, 301, 1117,
	1150, 1082, 302, 1211, 1212, 640, 0, 303, 304, 1157,
	0, 1138, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1192, 327, 328, 329, 1141, 1139, 1140, 1147, 1143, 1142,
	1146, 330, 331, 332, 333, 334, 1174, 335, 1168, 1167,
	1087, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 1159, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 1093, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 1182, 1183,
	366, 1106, 274, 0, 0, 0, 0, 0, 367, 368,
	369, 1166, 0, 0, 0, 370, 0, 371, 372, 0,
	0, 1193, 373, 374, 375, 1179, 1180, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 1189, 0,
	1116, 386, 0, 387, 388, 389, 390, 391, 1152, 1153,
	1156, 471, 1195, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 275, 399, 400, 401, 403, 0,
	1194, 402, 1161, 1162, 0, 1122, 0, 404, 405, 1196,
	1154, 1197, 406, 407, 408, 1198, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 1190, 1199, 420, 421, 1200, 0, 422, 0,
	0, 0, 423, 424, 427, 1145, 1144, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 1201, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	1202, 467, 456, 1084, 276, 1203, 468, 469, 1107, 1155,
	470, 1169, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 1204, 481,
	1205, 1184, 482, 483, 1094, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 1185, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 1165, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 1206, 536, 537, 538, 539, 540,
	1095, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 1148, 563, 564, 546, 547, 565, 566, 1207,
	567, 568, 569, 570, 571, 572, 573, 1163, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 1210,
	581, 582, 583, 584, 1186, 588, 589, 0, 590, 591,
	1081, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 1175, 1176, 1177, 1178, 0,
	609, 0, 601, 602, 603, 1187, 604, 1188, 1105, 605,
	606, 607, 608, 0, 610, 611, 0, 1088, 612, 613,
	614, 616, 617, 615, 618, 1149, 619, 0, 0, 620,
	621, 622, 679, 1172, 1209, 0, 624, 623, 625, 682,
	0, 626, 0, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 1085, 0, 0, 0, 0, 1127, 1099, 1100,
	1101, 1097, 1098, 1110, 0, 1080, 0, 0, 0, 0,
	0, 0, 2444, 2445, 277, 279, 278, 280, 281, 282,
	283, 1111, 284, 285, 0, 1109, 0, 0, 0, 1151,
	1115, 0, 0, 0, 286, 287, 1191, 288, 289, 290,
	291, 292, 293, 633, 1164, 0, 294, 1171, 295, 1170,
	0, 1181, 296, 297, 298, 299, 300, 301, 1117, 1150,
	0, 302, 1211, 1212, 640, 0, 303, 304, 1157, 0,
	1138, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1192,
	327, 328, 329, 1141, 1139, 1140, 1147, 1143, 1142, 1146,
	330, 331, 332, 333, 334, 1174, 335, 1168, 1167, 0,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 1159, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 1093, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 1182, 1183, 366,
	1106, 274, 0, 0, 0, 0, 0, 367, 368, 369,
	1166, 0, 0, 0, 370, 0, 371, 372, 0, 0,
	1193, 373, 374, 375, 1179, 1180, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 1189, 0, 1116,
	386, 0, 387, 388, 389, 390, 391, 1152, 1153, 1156,
	471, 1195, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 275, 399, 400, 401, 403, 0, 1194,
	402, 1161, 1162, 0, 1122, 0, 404, 405, 1196, 1154,
	1197, 406, 407, 408, 1198, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 1190, 1199, 420, 421, 1200, 0, 422, 0, 0,
	0, 423, 424, 427, 1145, 1144, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 1201, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 1202,
	467, 456, 0, 276, 1203, 468, 469, 1107, 1155, 470,
	1169, 472, 473, 0, 0, 474, 0, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 1204, 481, 1205,
	1184, 482, 483, 1094, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 1185, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	1165, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 1206, 536, 537, 538, 539, 540, 1095,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 1148, 563, 564, 546, 547, 565, 566, 1207, 567,
	568, 569, 570, 571, 572, 573, 1163, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 1210, 581,
	582, 583, 584, 1186, 588, 589, 0, 590, 591, 0,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 1175, 1176, 1177, 1178, 0, 609,
	0, 601, 602, 603, 1187, 604, 1188, 1105, 605, 606,
	607, 608, 0, 610, 611, 0, 0, 612, 613, 614,
	616, 617, 615, 618, 1149, 619, 0, 0, 620, 621,
	622, 679, 1172, 1209, 0, 624, 623, 625, 682, 0,
	626, 0, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 0, 0, 0, 0, 0, 1127, 1099, 1100, 1101,
	1097, 1098, 1110, 0, 2703, 0, 0, 0, 0, 0,
	0, 2701, 2702, 277, 279, 278, 280, 281, 282, 283,
	1111, 284, 285, 0, 1109, 0, 0, 0, 1151, 1115,
	0, 0, 0, 286, 287, 1191, 288, 289, 290, 291,
	292, 293, 633, 1164, 0, 294, 1171, 295, 1170, 0,
	1181, 296, 297, 298, 299, 300, 301, 1117, 1150, 0,
	302, 1211, 1212, 640, 0, 303, 304, 1157, 0, 1138,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1192, 327,
	328, 329, 1141, 1139, 1140, 1147, 1143, 1142, 1146, 330,
	331, 332, 333, 334, 1174, 335, 1168, 1167, 0, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 1159, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 1093, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 1182, 1183, 366, 1106,
	274, 0, 0, 0, 0, 0, 367, 368, 369, 1166,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 1193,
	373, 374, 375, 1179, 1180, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 1189, 0, 1116, 386,
	0, 387, 388, 389, 390, 391, 1152, 1153, 1156, 471,
	1195, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 275, 399, 400, 401, 403, 0, 1194, 402,
	1161, 1162, 0, 1122, 0, 404, 405, 1196, 1154, 1197,
	406, 407, 408, 1198, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	1190, 1199, 420, 421, 1200, 0, 422, 0, 0, 0,
	423, 424, 427, 1145, 1144, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 1201, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 1202, 467,
	456, 0, 276, 1203, 468, 469, 1107, 1155, 470, 1169,
	472, 473, 0, 0, 474, 0, 0, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 1204, 481, 1205, 1184,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 1185, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 1165,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 1206, 536, 537, 538, 539, 540, 3177, 3178,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 0, 558, 559, 557, 560, 561, 562,
	1148, 563, 564, 546, 547, 565, 566, 1207, 567, 568,
	569, 570, 571, 572, 573, 1163, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 1210, 581, 582,
	583, 584, 1186, 588, 589, 0, 590, 591, 0, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 1175, 1176, 1177, 1178, 0, 609, 0,
	601, 602, 603, 1187, 604, 1188, 1105, 605, 606, 607,
	608, 0, 610, 611, 0, 0, 612, 613, 614, 616,
	617, 615, 618, 1149, 619, 0, 0, 620, 621, 622,
	679, 1172, 1209, 0, 624, 623, 625, 682, 0, 626,
	0, 0, 0, 0, 627, 628, 683, 629, 630, 631,
	0, 0, 0, 0, 0, 1127, 1099, 1100, 1101, 1097,
	1098, 1110, 0, 0, 0, 0, 0, 0, 0, 0,
	2119, 2120, 277, 279, 278, 280, 281, 282, 283, 1111,
	284, 285, 0, 1109, 0, 0, 0, 1151, 1115, 0,
	0, 0, 286, 287, 1191, 288, 289, 290, 291, 292,
	293, 0, 1164, 0, 294, 1171, 295, 1170, 0, 1181,
	296, 297, 298, 299, 300, 301, 1117, 1150, 1082, 302,
	1211, 1212, 640, 0, 303, 304, 1157, 0, 1138, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1192, 327, 328,
	4728, 1141, 1139, 1140, 1147, 1143, 1142, 1146, 330, 331,
	332, 333, 334, 1174, 335, 1168, 1167, 1087, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 1159, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 1093, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 1182, 1183, 366, 1106, 274,
	0, 0, 0, 0, 0, 367, 368, 369, 1166, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 1193, 373,
	374, 375, 1179, 1180, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 1189, 0, 1116, 386, 0,
	387, 388, 389, 390, 391, 1152, 1153, 1156, 471, 0,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 275, 399, 400, 401, 403, 0, 1194, 402, 1161,
	1162, 0, 1122, 0, 404, 405, 0, 1154, 0, 406,
	407, 408, 1198, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 1190,
	1199, 420, 421, 0, 0, 422, 0, 0, 0, 423,
	424, 427, 1145, 1144, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 1201, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 1202, 467, 456,
	1084, 276, 0, 468, 469, 1107, 1155, 470, 1169, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 1204, 481, 1205, 1184, 482,
	483, 1094, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 1185, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 1165, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 1206, 536, 537, 538, 539, 540, 1095, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 561, 562, 1148,
	563, 564, 546, 547, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 1163, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 1210, 581, 582, 583,
	584, 1186, 588, 589, 0, 590, 591, 1081, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 1175, 1176, 1177, 1178, 0, 609, 0, 601,
	602, 603, 1187, 604, 1188, 1105, 605, 606, 607, 608,
	0, 4727, 611, 0, 1088, 612, 613, 614, 616, 617,
	615, 618, 1149, 619, 0, 0, 620, 621, 622, 679,
	1172, 1209, 0, 624, 623, 625, 682, 0, 626, 0,
	0, 0, 0, 627, 628, 683, 629, 630, 631, 0,
	0, 0, 1071, 0, 1249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1078,
	1079, 277, 279, 278, 280, 281, 282, 283, 1111, 284,
	285, 0, 1109, 0, 0, 0, 1151, 0, 0, 0,
	0, 286, 287, 1191, 288, 289, 290, 291, 292, 293,
	633, 634, 0, 294, 635, 295, 636, 0, 637, 296,
	297, 298, 299, 300, 301, 0, 1150, 0, 302, 638,
	639, 640, 0, 303, 304, 1157, 0, 1138, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1192, 327, 328, 329,
	1141, 1139, 1140, 1147, 1143, 1142, 1146, 330, 331, 332,
	333, 334, 0, 335, 642, 643, 0, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 346, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 644, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 1182, 1183, 366, 0, 274, 0,
	0, 0, 0, 0, 367, 368, 369, 647, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 1193, 373, 374,
	375, 648, 649, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 1189, 0, 651, 386, 0, 387,
	388, 389, 390, 391, 1152, 1153, 1156, 471, 1195, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	275, 399, 400, 401, 403, 0, 1194, 402, 655, 656,
	0, 657, 0, 404, 405, 1196, 1154, 1197, 406, 407,
	408, 1198, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 1235, 416, 418, 417, 0, 419, 1190, 1199,
	420, 421, 1200, 0, 422, 0, 0, 0, 423, 424,
	427, 1145, 1144, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 1201, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 1202, 467, 456, 0,
	276, 1203, 468, 469, 0, 1155, 470, 661, 472, 473,
	0, 0, 474, 0, 0, 1241, 476, 477, 478, 0,
	0, 479, 480, 662, 1204, 481, 1205, 1184, 482, 483,
	475, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 1185, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 668, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	1206, 536, 537, 538, 539, 540, 669, 1243, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 236, 558, 559, 557, 560, 561, 562, 1148, 563,
	564, 546, 547, 565, 566, 1207, 567, 568, 569, 570,
	571, 572, 573, 670, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 671, 581, 582, 583, 584,
	1186, 588, 589, 0, 590, 591, 0, 587, 578, 238,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 673, 674, 675, 676, 0, 609, 0, 601, 602,
	603, 1187, 604, 1188, 0, 605, 606, 607, 608, 0,
	610, 611, 0, 0, 612, 613, 614, 616, 617, 615,
	618, 1149, 619, 0, 0, 620, 621, 622, 1614, 680,
	681, 0, 624, 623, 625, 682, 0, 626, 0, 0,
	0, 230, 627, 628, 683, 629, 630, 631, 1249, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 1239, 0, 1962, 0, 0,
	1151, 0, 0, 0, 0, 286, 287, 1191, 288, 289,
	290, 291, 292, 293, 633, 634, 0, 294, 635, 295,
	636, 0, 637, 296, 297, 298, 299, 300, 301, 0,
	1150, 0, 302, 638, 639, 640, 0, 303, 304, 1157,
	0, 1138, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1192, 327, 328, 329, 1141, 1139, 1140, 1147, 1143, 1142,
	1146, 330, 331, 332, 333, 334, 0, 335, 642, 643,
	0, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 346, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 644, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 1182, 1183,
	366, 0, 274, 0, 0, 0, 0, 0, 367, 368,
	369, 647, 0, 0, 0, 370, 0, 371, 372, 0,
	0, 1193, 373, 374, 375, 648, 649, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 1189, 0,
	651, 386, 0, 387, 388, 389, 390, 391, 1152, 1153,
	1156, 471, 1195, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 275, 399, 400, 401, 403, 0,
	1194, 402, 655, 656, 0, 657, 0, 404, 405, 1196,
	1154, 1197, 406, 407, 408, 1198, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 1235, 416, 418, 417,
	0, 419, 1190, 1199, 420, 421, 1200, 0, 422, 0,
	0, 0, 423, 424, 427, 1145, 1144, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 1201, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	1202, 467, 456, 0, 276, 1203, 468, 469, 0, 1155,
	470, 661, 472, 473, 0, 0, 474, 0, 0, 1241,
	476, 477, 478, 0, 0, 479, 480, 662, 1204, 481,
	1205, 1184, 482, 483, 475, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 1185, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 668, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 1206, 536, 537, 538, 539, 540,
	669, 1243, 0, 542, 543, 549, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 236, 558, 559, 557, 560,
	561, 562, 1148, 563, 564, 546, 547, 565, 566, 1207,
	567, 568, 569, 570, 571, 572, 573, 670, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 671,
	581, 582, 583, 584, 1186, 588, 589, 0, 590, 591,
	0, 587, 578, 238, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 673, 674, 675, 676, 0,
	609, 0, 601, 602, 603, 1187, 604, 1188, 0, 605,
	606, 607, 608, 0, 610, 611, 0, 0, 612, 613,
	614, 616, 617, 615, 618, 1149, 619, 0, 0, 620,
	621, 622, 1614, 680, 681, 0, 624, 623, 625, 682,
	0, 626, 0, 0, 0, 230, 627, 628, 683, 629,
	630, 631, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 3341, 0, 1249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1239,
	0, 1962, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 1151, 0, 0,
	0, 0, 286, 287, 1191, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 0, 637,
	296, 297, 298, 299, 300, 301, 0, 1150, 0, 302,
	638, 639, 640, 0, 303, 304, 1157, 0, 1138, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1192, 327, 328,
	329, 1141, 1139, 1140, 1147, 1143, 1142, 1146, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 0, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 346, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 1182, 1183, 366, 0, 274,
	0, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 1193, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 1189, 0, 651, 386, 0,
	387, 388, 389, 390, 391, 1152, 1153, 1156, 471, 1195,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 275, 399, 400, 401, 403, 0, 1194, 402, 655,
	656, 0, 657, 0, 404, 405, 1196, 1154, 1197, 406,
	407, 408, 1198, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 1235, 416, 418, 417, 0, 419, 1190,
	1199, 420, 421, 1200, 0, 422, 0, 0, 0, 423,
	424, 427, 1145, 1144, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 1201, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 1202, 467, 456,
	0, 276, 1203, 468, 469, 0, 1155, 470, 661, 472,
	473, 0, 0, 474, 0, 0, 1241, 476, 477, 478,
	0, 0, 479, 480, 662, 1204, 481, 1205, 1184, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 1185, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 1206, 536, 537, 538, 539, 540, 669, 1243, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 561, 562, 1148,
	563, 564, 546, 547, 565, 566, 1207, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 1186, 588, 589, 0, 590, 591, 0, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 673, 674, 675, 676, 0, 609, 0, 601,
	602, 603, 1187, 604, 1188, 0, 605, 606, 607, 608,
	0, 610, 611, 0, 0, 612, 613, 614, 616, 617,
	615, 618, 1149, 619, 0, 0, 620, 621, 622, 679,
	680, 681, 0, 624, 623, 625, 682, 0, 626, 0,
	1231, 0, 1249, 627, 628, 683, 629, 630, 631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 1151, 0, 1239, 0, 1237, 286,
	287, 1191, 288, 289, 290, 291, 292, 293, 633, 634,
	0, 294, 635, 295, 636, 0, 637, 296, 297, 298,
	299, 300, 301, 0, 1150, 0, 302, 638, 639, 640,
	0, 303, 304, 1157, 0, 1138, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1192, 327, 328, 329, 1141, 1139,
	1140, 1147, 1143, 1142, 1146, 330, 331, 332, 333, 334,
	0, 335, 642, 643, 0, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 346,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 644, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 1182, 1183, 366, 0, 274, 0, 0, 0,
	0, 0, 367, 368, 369, 647, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 1193, 373, 374, 375, 648,
	649, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 1189, 0, 651, 386, 0, 387, 388, 389,
	390, 391, 1152, 1153, 1156, 471, 1195, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 275, 399,
	400, 401, 403, 0, 1194, 402, 655, 656, 0, 657,
	0, 404, 405, 1196, 1154, 1197, 406, 407, 408, 1198,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	1235, 416, 418, 417, 0, 419, 1190, 1199, 420, 421,
	1200, 0, 422, 0, 0, 0, 423, 424, 427, 1145,
	1144, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	1201, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 1202, 467, 456, 0, 276, 1203,
	468, 469, 0, 1155, 470, 661, 472, 473, 0, 0,
	474, 0, 0, 1241, 476, 477, 478, 0, 0, 479,
	480, 662, 1204, 481, 1205, 1184, 482, 483, 475, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 1185,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 668, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 1206, 536,
	537, 538, 539, 540, 669, 1243, 0, 542, 543, 549,
	550, 551, 544, 545, 552, 553, 554, 555, 556, 0,
	558, 559, 557, 560, 561, 562, 1148, 563, 564, 546,
	547, 565, 566, 1207, 567, 568, 569, 570, 571, 572,
	573, 670, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 671, 581, 582, 583, 584, 1186, 588,
	589, 0, 590, 591, 0, 587, 578, 0, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 0, 600, 673,
	674, 675, 676, 0, 609, 0, 601, 602, 603, 1187,
	604, 1188, 0, 605, 606, 607, 608, 0, 610, 611,
	0, 0, 612, 613, 614, 616, 617, 615, 618, 1149,
	619, 0, 0, 620, 621, 622, 679, 680, 681, 0,
	624, 623, 625, 682, 0, 626, 0, 0, 0, 1249,
	627, 628, 683, 629, 630, 631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 1151, 0, 1239, 0, 1237, 286, 287, 1191, 288,
	289, 290, 291, 292, 293, 633, 634, 0, 294, 635,
	295, 636, 0, 637, 296, 297, 298, 299, 300, 301,
	0, 1150, 0, 302, 638, 639, 640, 0, 303, 304,
	1157, 0, 1138, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1192, 327, 328, 329, 1141, 1139, 1140, 1147, 1143,
	1142, 1146, 330, 331, 332, 333, 334, 0, 335, 642,
	643, 0, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 346, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 644, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 1182,
	1183, 366, 0, 274, 0, 0, 0, 0, 0, 367,
	368, 369, 647, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 1193, 373, 374, 375, 648, 649, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 1189,
	0, 651, 386, 0, 387, 388, 389, 390, 391, 1152,
	1153, 1156, 471, 1195, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 275, 399, 400, 401, 403,
	0, 1194, 402, 655, 656, 0, 657, 0, 404, 405,
	1196, 1154, 1197, 406, 407, 408, 1198, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 1235, 416, 418,
	417, 0, 419, 1190, 1199, 420, 421, 1200, 0, 422,
	0, 0, 0, 423, 424, 427, 1145, 1144, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 1201, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 1202, 467, 456, 0, 276, 1203, 468, 469, 0,
	1155, 470, 661, 472, 473, 0, 0, 474, 0, 0,
	1241, 476, 477, 478, 0, 0, 479, 480, 662, 1204,
	481, 1205, 1184, 482, 483, 475, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 1185, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 668, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 1206, 536, 537, 538, 539,
	540, 669, 1243, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 1148, 563, 564, 546, 547, 565, 566,
	1207, 567, 568, 569, 570, 571, 572, 573, 670, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	671, 581, 582, 583, 584, 1186, 588, 589, 0, 590,
	591, 0, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 673, 674, 675, 676,
	0, 609, 0, 601, 602, 603, 1187, 604, 1188, 0,
	605, 606, 607, 608, 0, 610, 611, 0, 0, 612,
	613, 614, 616, 617, 615, 618, 1149, 619, 0, 0,
	620, 621, 622, 679, 680, 681, 0, 624, 623, 625,
	682, 0, 626, 0, 0, 0, 1249, 627, 628, 683,
	629, 630, 631, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 1151, 0,
	1239, 0, 1237, 286, 287, 1191, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 0,
	637, 296, 297, 298, 299, 300, 301, 0, 1150, 0,
	302, 638, 639, 640, 0, 303, 304, 1157, 0, 1138,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1192, 327,
	328, 329, 1141, 1139, 1140, 1147, 1143, 1142, 1146, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 0, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 346, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 1182, 1183, 366, 0,
	274, 0, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 1193,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 1189, 0, 651, 386,
	0, 387, 388, 389, 390, 391, 1152, 1153, 1156, 471,
	1195, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 275, 399, 400, 401, 403, 0, 1194, 402,
	655, 656, 0, 657, 0, 404, 405, 1196, 1154, 1197,
	406, 407, 408, 1198, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	1190, 1199, 420, 421, 1200, 0, 422, 0, 0, 0,
	423, 424, 427, 1145, 1144, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 1201, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 1202, 467,
	456, 0, 276, 1203, 468, 469, 0, 1155, 470, 661,
	472, 473, 0, 0, 474, 0, 0, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 1204, 481, 1205, 1184,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 1185, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 1206, 536, 537, 538, 539, 540, 669, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 0, 558, 559, 557, 560, 561, 562,
	1148, 563, 564, 546, 547, 565, 566, 1207, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 1186, 588, 589, 0, 590, 591, 0, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 673, 674, 675, 676, 0, 609, 0,
	601, 602, 603, 1187, 604, 1188, 0, 605, 606, 607,
	608, 0, 610, 611, 0, 0, 612, 613, 614, 616,
	617, 615, 618, 1149, 619, 0, 0, 620, 621, 622,
	679, 680, 681, 0, 624, 623, 625, 682, 0, 626,
	0, 0, 0, 1249, 627, 628, 683, 629, 630, 631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 1151, 0, 0, 0, 4173,
	286, 287, 1191, 288, 289, 290, 291, 292, 293, 633,
	634, 0, 294, 635, 295, 636, 0, 637, 296, 297,
	298, 299, 300, 301, 0, 1150, 0, 302, 638, 639,
	640, 0, 303, 304, 1157, 0, 1138, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1192, 327, 328, 329, 1141,
	1139, 1140, 1147, 1143, 1142, 1146, 330, 331, 332, 333,
	334, 0, 335, 642, 643, 0, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	346, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 644, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 1182, 1183, 366, 0, 274, 0, 0,
	0, 0, 0, 367, 368, 369, 647, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 1193, 373, 374, 375,
	648, 649, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 1189, 0, 651, 386, 0, 387, 388,
	389, 390, 391, 1152, 1153, 1156, 471, 1195, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 275,
	399, 400, 401, 403, 0, 1194, 402, 655, 656, 0,
	657, 0, 404, 405, 1196, 1154, 1197, 406, 407, 408,
	1198, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 1190, 1199, 420,
	421, 1200, 0, 422, 0, 0, 0, 423, 424, 427,
	1145, 1144, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 1201, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 1202, 467, 456, 0, 276,
	1203, 468, 469, 0, 1155, 470, 661, 472, 473, 0,
	0, 474, 0, 0, 0, 476, 477, 478, 0, 0,
	479, 480, 662, 1204, 481, 1205, 1184, 482, 483, 475,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	1185, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 668, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 1206,
	536, 537, 538, 539, 540, 669, 1243, 0, 542, 543,
	549, 550, 551, 544, 545, 552, 553, 554, 555, 556,
	0, 558, 559, 557, 560, 561, 562, 1148, 563, 564,
	546, 547, 565, 566, 1207, 567, 568, 569, 570, 571,
	572, 573, 670, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 671, 581, 582, 583, 584, 1186,
	588, 589, 0, 590, 591, 0, 587, 578, 0, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	673, 674, 675, 676, 0, 609, 0, 601, 602, 603,
	1187, 604, 1188, 0, 605, 606, 607, 608, 0, 610,
	611, 0, 0, 612, 613, 614, 616, 617, 615, 618,
	1149, 619, 0, 0, 620, 621, 622, 679, 680, 681,
	0, 624, 623, 625, 682, 0, 626, 271, 0, 0,
	0, 627, 628, 683, 629, 630, 631, 2548, 2549, 2550,
	2567, 2568, 2569, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 2570, 0, 632,
	0, 0, 0, 0, 286, 287, 1859, 288, 289, 290,
	291, 292, 293, 633, 634, 0, 294, 635, 295, 636,
	0, 637, 296, 297, 298, 299, 300, 301, 0, 0,
	1844, 302, 638, 639, 640, 0, 303, 304, 641, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 2560,
	0, 313, 314, 315, 312, 316, 0, 317, 2556, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 642, 643, 0,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 346, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 644, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 645, 646, 366,
	0, 0, 0, 2561, 2562, 2563, 2564, 367, 368, 369,
	647, 0, 0, 2555, 370, 0, 371, 372, 0, 0,
	0, 373, 374, 375, 648, 649, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 650, 0, 651,
	386, 0, 387, 388, 389, 390, 391, 652, 653, 654,
	471, 0, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 0, 399, 400, 401, 403, 0, 0,
	402, 655, 656, 0, 657, 0, 404, 405, 0, 658,
	0, 406, 407, 408, 0, 409, 0, 2565, 2566, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 659, 0, 420, 421, 0, 0, 422, 0, 0,
	0, 423, 424, 427, 0, 0, 425, 426, 428, 429,
	2558, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 0, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 0,
	467, 456, 0, 0, 0, 468, 469, 0, 660, 470,
	661, 472, 473, 0, 0, 474, 0, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 0, 481, 0,
	663, 482, 483, 475, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 666, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	668, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 669,
	541, 2559, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 0, 563, 564, 546, 547, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 670, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 671, 581,
	582, 583, 584, 672, 588, 589, 0, 590, 591, 1843,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 673, 674, 675, 676, 0, 609,
	0, 601, 602, 603, 677, 604, 678, 0, 605, 606,
	607, 608, 0, 610, 611, 0, 0, 612, 613, 614,
	616, 617, 615, 618, 0, 619, 0, 0, 620, 621,
	622, 679, 680, 681, 0, 624, 623, 625, 682, 0,
	626, 0, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 0, 0, 0, 0, 0, 0, 0, 1071, 0,
	1331, 2545, 2546, 2547, 2571, 2557, 2551, 0, 2553, 2554,
	2552, 2539, 2540, 2541, 2542, 2543, 2544, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 286, 287, 1191,
	288, 289, 290, 291, 292, 293, 633, 634, 0, 294,
	635, 295, 636, 0, 637, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 638, 639, 640, 0, 303,
	304, 641, 0, 1336, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1192, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	642, 643, 0, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 346, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 644,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	645, 646, 366, 0, 274, 0, 0, 0, 0, 0,
	367, 368, 369, 647, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 1193, 373, 374, 375, 648, 649, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	650, 0, 651, 386, 0, 387, 388, 389, 390, 391,
	652, 653, 654, 471, 1195, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 0, 399, 400, 401,
	403, 0, 1194, 402, 655, 656, 0, 657, 0, 404,
	405, 1196, 658, 1197, 406, 407, 408, 1198, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 659, 1199, 420, 421, 1200, 0,
	422, 0, 0, 0, 423, 424, 427, 0, 0, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 1201, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 1202, 467, 456, 0, 0, 1203, 468, 469,
	0, 660, 470, 661, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	1204, 481, 1205, 663, 482, 483, 475, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 666, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 668, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 1206, 536, 537, 538,
	539, 540, 669, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 236, 558, 559,
	557, 560, 561, 562, 0, 563, 564, 546, 547, 565,
	566, 1207, 567, 568, 569, 570, 571, 572, 573, 670,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 671, 581, 582, 583, 584, 672, 588, 589, 0,
	590, 591, 0, 587, 578, 238, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 673, 674, 675,
	676, 0, 609, 0, 601, 602, 603, 677, 604, 678,
	0, 605, 606, 607, 608, 0, 610, 611, 0, 0,
	612, 613, 614, 616, 617, 615, 618, 0, 619, 0,
	0, 620, 621, 622, 1614, 680, 681, 0, 624, 623,
	625, 682, 0, 626, 0, 0, 0, 230, 627, 628,
	683, 629, 630, 631, 0, 0, 231, 1611, 0, 1331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 190, 284, 285, 0, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 286, 287, 1191, 288,
	289, 290, 291, 292, 293, 633, 634, 0, 294, 635,
	295, 636, 0, 637, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 638, 639, 640, 0, 303, 304,
	641, 0, 1336, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1192, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 642,
	643, 0, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 346, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 644, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 645,
	646, 366, 0, 274, 0, 0, 0, 0, 0, 367,
	368, 369, 647, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 1193, 373, 374, 375, 648, 649, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 650,
	0, 651, 386, 0, 387, 388, 389, 390, 391, 652,
	653, 654, 471, 1195, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 0, 399, 400, 401, 403,
	0, 1194, 402, 655, 656, 0, 657, 0, 404, 405,
	1196, 658, 1197, 406, 407, 408, 1198, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 659, 1199, 420, 421, 1200, 0, 422,
	0, 0, 0, 423, 424, 427, 0, 0, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 1201, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 1202, 467, 456, 0, 0, 1203, 468, 469, 0,
	660, 470, 661, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 1204,
	481, 1205, 663, 482, 483, 475, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 666, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 668, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 1206, 536, 537, 538, 539,
	540, 669, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 236, 558, 559, 557,
	560, 561, 562, 0, 563, 564, 546, 547, 565, 566,
	1207, 567, 568, 569, 570, 571, 572, 573, 670, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	671, 581, 582, 583, 584, 672, 588, 589, 0, 590,
	591, 0, 587, 578, 238, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 673, 674, 675, 676,
	0, 609, 0, 601, 602, 603, 677, 604, 678, 0,
	605, 606, 607, 608, 0, 610, 611, 0, 0, 612,
	613, 614, 616, 617, 615, 618, 0, 619, 0, 0,
	620, 621, 622, 1614, 680, 681, 0, 624, 623, 625,
	682, 0, 626, 0, 0, 0, 230, 627, 628, 683,
	629, 630, 631, 1331, 1330, 231, 0, 0, 0, 1328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 190, 0, 0, 632, 0, 0, 0, 0,
	286, 287, 1191, 288, 289, 290, 291, 292, 293, 633,
	634, 0, 294, 635, 295, 636, 0, 637, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 638, 639,
	640, 0, 303, 304, 641, 0, 1336, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1192, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 642, 643, 0, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	346, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 644, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 645, 646, 366, 0, 274, 0, 0,
	0, 0, 0, 367, 368, 369, 647, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 1193, 373, 374, 375,
	648, 649, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 650, 0, 651, 386, 0, 387, 388,
	389, 390, 391, 652, 653, 654, 471, 1195, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 0,
	399, 400, 401, 403, 0, 1194, 402, 655, 656, 0,
	657, 0, 404, 405, 1196, 658, 1197, 406, 407, 408,
	1198, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 659, 1199, 420,
	421, 1200, 0, 422, 0, 0, 0, 423, 424, 427,
	0, 0, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 1201, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 1202, 467, 456, 0, 0,
	1203, 468, 469, 0, 660, 470, 661, 472, 473, 0,
	0, 474, 0, 0, 0, 476, 477, 478, 0, 0,
	479, 480, 662, 1204, 481, 1205, 663, 482, 483, 475,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	666, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 668, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 1206,
	536, 537, 538, 539, 540, 669, 541, 0, 542, 543,
	549, 550, 551, 544, 545, 552, 553, 554, 555, 556,
	0, 558, 559, 557, 560, 561, 562, 0, 563, 564,
	546, 547, 565, 566, 1207, 567, 568, 569, 570, 571,
	572, 573, 670, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 671, 581, 582, 583, 584, 672,
	588, 589, 0, 590, 591, 0, 587, 578, 0, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	673, 674, 675, 676, 0, 609, 0, 601, 602, 603,
	677, 604, 678, 0, 605, 606, 607, 608, 0, 610,
	611, 0, 0, 612, 613, 614, 616, 617, 615, 618,
	0, 619, 0, 0, 620, 621, 622, 679, 680, 681,
	0, 624, 623, 625, 682, 0, 626, 0, 0, 0,
	0, 627, 628, 683, 629, 630, 631, 1331, 1330, 0,
	0, 0, 0, 1328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 1636, 0, 0, 632,
	0, 0, 0, 0, 286, 287, 1191, 288, 289, 290,
	291, 292, 293, 633, 634, 0, 294, 635, 295, 636,
	0, 637, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 638, 639, 640, 0, 303, 304, 641, 0,
	1336, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1192,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 642, 643, 0,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 346, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 644, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 645, 646, 366,
	0, 274, 0, 0, 0, 0, 0, 367, 368, 369,
	647, 0, 0, 0, 370, 0, 371, 372, 0, 0,
	1193, 373, 374, 375, 648, 649, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 650, 0, 651,
	386, 0, 387, 388, 389, 390, 391, 652, 653, 654,
	471, 1195, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 0, 399, 400, 401, 403, 0, 1194,
	402, 655, 656, 0, 657, 0, 404, 405, 1196, 658,
	1197, 406, 407, 408, 1198, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 659, 1199, 420, 421, 1200, 0, 422, 0, 0,
	0, 423, 424, 427, 0, 0, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 1201, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 1202,
	467, 456, 0, 0, 1203, 468, 469, 0, 660, 470,
	661, 472, 473, 0, 0, 474, 0, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 1204, 481, 1205,
	663, 482, 483, 475, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 666, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	668, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 1206, 536, 537, 538, 539, 540, 669,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 0, 563, 564, 546, 547, 565, 566, 1207, 567,
	568, 569, 570, 571, 572, 573, 670, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 671, 581,
	582, 583, 584, 672, 588, 589, 0, 590, 591, 0,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 673, 674, 675, 676, 0, 609,
	0, 601, 602, 603, 677, 604, 678, 0, 605, 606,
	607, 608, 0, 610, 611, 0, 0, 612, 613, 614,
	616, 617, 615, 618, 0, 619, 0, 0, 620, 621,
	622, 679, 680, 681, 0, 624, 623, 625, 682, 0,
	626, 0, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 1331, 1330, 0, 0, 0, 0, 1328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	3638, 0, 0, 632, 0, 0, 0, 0, 286, 287,
	1191, 288, 289, 290, 291, 292, 293, 633, 634, 0,
	294, 635, 295, 636, 0, 637, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 638, 639, 640, 0,
	303, 304, 641, 0, 1336, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1192, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 642, 643, 0, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 346, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	644, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 645, 646, 366, 0, 274, 0, 0, 0, 0,
	0, 367, 368, 369, 647, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 1193, 373, 374, 375, 648, 649,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 650, 0, 651, 386, 0, 387, 388, 389, 390,
	391, 652, 653, 654, 471, 1195, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 0, 399, 400,
	401, 403, 0, 1194, 402, 655, 656, 0, 657, 0,
	404, 405, 1196, 658, 1197, 406, 407, 408, 1198, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 659, 1199, 420, 421, 1200,
	0, 422, 0, 0, 0, 423, 424, 427, 0, 0,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 1201,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 1202, 467, 456, 0, 0, 1203, 468,
	469, 0, 660, 470, 661, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	662, 1204, 481, 1205, 663, 482, 483, 475, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 666, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 668, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 2317, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 1206, 536, 537,
	538, 539, 540, 669, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 0, 558,
	559, 557, 560, 561, 562, 0, 563, 564, 546, 547,
	565, 566, 1207, 567, 568, 569, 570, 571, 572, 573,
	670, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 671, 581, 582, 583, 584, 672, 588, 589,
	0, 590, 591, 0, 587, 578, 0, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 673, 674,
	675, 676, 0, 609, 0, 601, 602, 603, 677, 604,
	678, 0, 605, 606, 607, 608, 0, 610, 611, 0,
	0, 612, 613, 614, 616, 617, 615, 618, 0, 619,
	0, 0, 620, 621, 622, 679, 680, 681, 0, 624,
	623, 625, 682, 0, 626, 0, 0, 0, 0, 627,
	628, 683, 629, 630, 631, 1331, 2228, 0, 0, 0,
	0, 2229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 1636, 0, 0, 632, 0, 0,
	0, 0, 286, 287, 1191, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 0, 637,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	638, 639, 640, 0, 303, 304, 641, 0, 1336, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1192, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 0, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 346, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 0, 274,
	0, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 1193, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 650, 0, 651, 386, 0,
	387, 388, 389, 390, 391, 652, 653, 654, 471, 1195,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 0, 399, 400, 401, 403, 0, 1194, 402, 655,
	656, 0, 657, 0, 404, 405, 1196, 658, 1197, 406,
	407, 408, 1198, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 2227, 418, 417, 0, 419, 659,
	1199, 420, 421, 1200, 0, 422, 0, 0, 0, 423,
	424, 427, 0, 0, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 1201, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 1202, 467, 456,
	0, 0, 1203, 468, 469, 0, 660, 470, 661, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 1204, 481, 1205, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 1206, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 561, 562, 0,
	563, 564, 546, 547, 565, 566, 1207, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 0, 590, 591, 0, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 673, 674, 675, 676, 0, 609, 0, 601,
	602, 603, 677, 604, 678, 0, 605, 606, 607, 608,
	0, 610, 611, 0, 0, 612, 613, 614, 616, 617,
	615, 618, 0, 619, 0, 0, 620, 621, 622, 679,
	680, 681, 0, 624, 623, 625, 682, 0, 626, 0,
	0, 0, 0, 627, 628, 683, 629, 630, 631, 1331,
	1330, 0, 0, 0, 0, 1328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 1636, 0,
	0, 632, 0, 0, 0, 0, 286, 287, 1191, 288,
	289, 290, 291, 292, 293, 633, 634, 0, 294, 635,
	295, 636, 0, 637, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 638, 639, 640, 0, 303, 304,
	641, 0, 1336, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1192, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 642,
	643, 0, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 346, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 644, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 645,
	646, 366, 0, 274, 0, 0, 0, 0, 0, 367,
	368, 369, 647, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 1193, 373, 374, 375, 648, 649, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 650,
	0, 651, 386, 0, 387, 388, 389, 390, 391, 652,
	653, 654, 471, 1195, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 0, 399, 400, 401, 403,
	0, 1194, 402, 655, 656, 0, 657, 0, 404, 405,
	1196, 658, 1197, 406, 407, 408, 1198, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 659, 1199, 420, 421, 1200, 0, 422,
	0, 0, 0, 423, 424, 427, 0, 0, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 1201, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 1202, 467, 456, 0, 0, 1203, 468, 469, 0,
	660, 470, 661, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 1204,
	481, 1205, 663, 482, 483, 475, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 666, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 668, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 1206, 536, 537, 538, 539,
	540, 669, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 0, 563, 564, 546, 547, 565, 566,
	1207, 567, 568, 569, 570, 571, 572, 573, 670, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	671, 581, 582, 583, 584, 672, 588, 589, 0, 590,
	591, 0, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 673, 674, 675, 676,
	0, 609, 0, 601, 602, 603, 677, 604, 678, 0,
	605, 606, 607, 608, 0, 610, 611, 0, 0, 612,
	613, 614, 616, 617, 615, 618, 0, 619, 0, 0,
	620, 621, 622, 679, 680, 681, 0, 624, 623, 625,
	682, 1071, 626, 271, 0, 0, 0, 627, 628, 683,
	629, 630, 631, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 632, 0, 0, 0, 0,
	286, 287, 1620, 288, 289, 290, 291, 292, 293, 633,
	634, 0, 294, 635, 295, 636, 0, 637, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 638, 639,
	640, 0, 303, 304, 641, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 642, 643, 0, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	346, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 644, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 645, 646, 366, 0, 0, 0, 0,
	0, 0, 0, 367, 368, 369, 647, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 0, 373, 374, 375,
	648, 649, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 650, 0, 651, 386, 0, 387, 388,
	389, 390, 391, 652, 653, 654, 471, 0, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 0,
	399, 400, 401, 403, 0, 0, 402, 655, 656, 0,
	657, 0, 404, 405, 0, 658, 0, 406, 407, 408,
	0, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 659, 0, 420,
	421, 0, 0, 422, 0, 0, 0, 423, 424, 427,
	0, 0, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 0, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 0, 467, 456, 0, 0,
	0, 468, 469, 0, 660, 470, 661, 472, 473, 0,
	0, 474, 0, 0, 0, 476, 477, 478, 0, 0,
	479, 480, 662, 0, 481, 0, 663, 482, 483, 475,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	666, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 668, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 669, 541, 0, 542, 543,
	549, 550, 551, 544, 545, 552, 553, 554, 555, 556,
	236, 558, 559, 557, 560, 561, 562, 0, 563, 564,
	546, 547, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 670, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 671, 581, 582, 583, 584, 672,
	588, 589, 0, 590, 591, 0, 587, 578, 238, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	673, 674, 675, 676, 0, 609, 0, 601, 602, 603,
	677, 604, 678, 0, 605, 606, 607, 608, 0, 610,
	611, 0, 0, 612, 613, 614, 616, 617, 615, 618,
	0, 619, 0, 0, 620, 621, 622, 1614, 680, 681,
	0, 624, 623, 625, 682, 0, 626, 271, 0, 0,
	230, 627, 628, 683, 629, 630, 631, 0, 0, 231,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 632,
	0, 0, 0, 0, 286, 287, 190, 288, 289, 290,
	291, 292, 293, 633, 634, 0, 294, 635, 295, 636,
	0, 637, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 638, 639, 640, 0, 303, 304, 641, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 642, 643, 0,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 346, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 644, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 645, 646, 366,
	0, 274, 0, 0, 0, 0, 0, 367, 368, 369,
	647, 0, 0, 0, 370, 0, 371, 372, 0, 0,
	0, 373, 374, 375, 648, 649, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 650, 0, 651,
	386, 0, 387, 388, 389, 390, 391, 652, 653, 654,
	471, 0, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 275, 399, 400, 401, 403, 0, 0,
	402, 655, 656, 0, 657, 0, 404, 405, 0, 658,
	0, 406, 407, 408, 0, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 659, 0, 420, 421, 0, 0, 422, 0, 0,
	0, 423, 424, 427, 0, 0, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 0, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 0,
	467, 456, 0, 276, 0, 468, 469, 0, 660, 470,
	661, 472, 473, 0, 0, 474, 0, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 0, 481, 0,
	663, 482, 483, 475, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 666, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	668, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 669,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 0, 563, 564, 546, 547, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 670, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 671, 581,
	582, 583, 584, 672, 588, 589, 0, 590, 591, 0,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 673, 674, 675, 676, 0, 609,
	0, 601, 602, 603, 677, 604, 678, 0, 605, 606,
	607, 608, 0, 610, 611, 0, 0, 612, 613, 614,
	616, 617, 615, 618, 0, 619, 0, 0, 620, 621,
	622, 679, 680, 681, 0, 624, 623, 625, 682, 0,
	626, 0, 0, 0, 1249, 627, 628, 683, 629, 630,
	631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 1151, 0, 0, 0,
	1976, 286, 287, 1191, 288, 289, 290, 291, 292, 293,
	633, 634, 0, 294, 635, 295, 636, 0, 637, 296,
	297, 298, 299, 300, 301, 0, 1150, 0, 302, 638,
	639, 640, 0, 303, 304, 1157, 0, 1138, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1192, 327, 328, 329,
	1141, 1139, 1140, 1147, 1143, 1142, 1146, 330, 331, 332,
	333, 334, 0, 335, 642, 643, 0, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 346, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 644, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 1182, 1183, 366, 0, 274, 0,
	0, 0, 0, 0, 367, 368, 369, 647, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 1193, 373, 374,
	375, 648, 649, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 1189, 0, 651, 386, 0, 387,
	388, 389, 390, 391, 1152, 1153, 1156, 471, 1195, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	275, 399, 400, 401, 403, 0, 1194, 402, 655, 656,
	0, 657, 0, 404, 405, 1196, 1154, 1197, 406, 407,
	408, 1198, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 1190, 1199,
	420, 421, 1200, 0, 422, 0, 0, 0, 423, 424,
	427, 1145, 1144, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 1201, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 1202, 467, 456, 0,
	276, 1203, 468, 469, 0, 1155, 470, 661, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 1204, 481, 1205, 1184, 482, 483,
	475, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 1185, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 668, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	1206, 536, 537, 538, 539, 540, 669, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 1148, 563,
	564, 546, 547, 565, 566, 1207, 567, 568, 569, 570,
	571, 572, 573, 670, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 671, 581, 582, 583, 584,
	1186, 588, 589, 0, 590, 591, 0, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 673, 674, 675, 676, 0, 609, 0, 601, 602,
	603, 1187, 604, 1188, 0, 605, 606, 607, 608, 0,
	610, 611, 0, 0, 612, 613, 614, 616, 617, 615,
	618, 1149, 619, 0, 0, 620, 621, 622, 679, 680,
	681, 0, 624, 623, 625, 682, 0, 626, 271, 3083,
	0, 0, 627, 628, 683, 629, 630, 631, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	632, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 633, 634, 0, 294, 635, 295,
	636, 0, 637, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 638, 639, 640, 0, 303, 304, 641,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 642, 643,
	0, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 346, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 644, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 645, 646,
	366, 0, 0, 0, 0, 0, 0, 0, 367, 368,
	369, 647, 0, 0, 0, 370, 0, 371, 372, 0,
	0, 0, 373, 374, 375, 648, 649, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 650, 0,
	651, 386, 0, 387, 388, 389, 390, 391, 652, 653,
	654, 471, 0, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 0, 399, 400, 401, 403, 0,
	0, 402, 655, 656, 0, 657, 0, 404, 405, 0,
	658, 0, 406, 407, 408, 0, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 659, 0, 420, 421, 0, 0, 422, 0,
	0, 0, 423, 424, 427, 0, 0, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 0, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	0, 467, 456, 0, 0, 0, 468, 469, 0, 660,
	470, 661, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 0, 481,
	0, 663, 482, 483, 475, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 666, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 668, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	669, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 0, 563, 564, 546, 547, 565, 566, 0,
	567, 568, 569, 570, 571, 572, 573, 670, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 671,
	581, 582, 583, 584, 672, 588, 589, 0, 590, 591,
	0, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 673, 674, 675, 676, 0,
	609, 0, 601, 602, 603, 677, 604, 678, 0, 605,
	606, 607, 608, 0, 610, 611, 0, 0, 612, 613,
	614, 616, 617, 615, 618, 0, 619, 0, 0, 620,
	621, 622, 679, 680, 681, 0, 624, 623, 625, 682,
	0, 626, 271, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 632, 0, 0, 0, 0, 286,
	287, 4897, 288, 289, 290, 291, 292, 293, 633, 634,
	0, 294, 635, 295, 636, 0, 637, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 638, 639, 640,
	0, 303, 304, 641, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 642, 643, 0, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 346,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 644, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 645, 646, 366, 0, 274, 0, 0, 0,
	0, 0, 367, 368, 369, 647, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 0, 373, 374, 375, 648,
	649, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 650, 0, 651, 386, 0, 387, 388, 389,
	390, 391, 652, 653, 654, 471, 0, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 275, 399,
	400, 401, 403, 0, 0, 402, 655, 656, 0, 657,
	0, 404, 405, 0, 658, 0, 406, 407, 408, 0,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 659, 0, 420, 421,
	0, 0, 422, 0, 0, 0, 423, 424, 427, 0,
	0, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	0, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 0, 467, 456, 0, 276, 0,
	468, 469, 0, 660, 470, 661, 472, 473, 0, 0,
	474, 0, 0, 0, 476, 477, 478, 0, 0, 479,
	480, 662, 0, 481, 0, 663, 482, 483, 475, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 666,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 668, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 669, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 552, 553, 554, 555, 556, 0,
	558, 559, 557, 560, 561, 562, 0, 563, 564, 546,
	547, 565, 566, 0, 567, 568, 569, 570, 571, 572,
	573, 670, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 671, 581, 582, 583, 584, 672, 588,
	589, 0, 590, 591, 0, 587, 578, 0, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 0, 600, 673,
	674, 675, 676, 0, 609, 0, 601, 602, 603, 677,
	604, 678, 0, 605, 606, 607, 608, 0, 610, 611,
	0, 0, 612, 613, 614, 616, 617, 615, 618, 0,
	619, 0, 0, 620, 621, 622, 679, 680, 681, 0,
	624, 623, 625, 682, 271, 626, 0, 0, 0, 0,
	627, 628, 683, 629, 630, 631, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 632, 0, 0, 0,
	0, 286, 287, 3588, 288, 289, 290, 291, 292, 293,
	633, 634, 0, 294, 635, 295, 636, 0, 637, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 638,
	639, 640, 0, 303, 304, 641, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 642, 643, 0, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 346, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 644, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 645, 646, 366, 0, 274, 0,
	0, 0, 0, 0, 367, 368, 369, 647, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 0, 373, 374,
	375, 648, 649, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 650, 0, 651, 386, 0, 387,
	388, 389, 390, 391, 652, 653, 654, 471, 0, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	275, 399, 400, 401, 403, 0, 0, 402, 655, 656,
	0, 657, 0, 404, 405, 0, 658, 0, 406, 407,
	408, 0, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 659, 0,
	420, 421, 0, 0, 422, 0, 0, 0, 423, 424,
	427, 0, 0, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 0, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 0, 467, 456, 0,
	276, 0, 468, 469, 0, 660, 470, 661, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 0, 481, 0, 663, 482, 483,
	475, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 666, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 668, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 669, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 0, 563,
	564, 546, 547, 565, 566, 0, 567, 568, 569, 570,
	571, 572, 573, 670, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 671, 581, 582, 583, 584,
	672, 588, 589, 0, 590, 591, 0, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 673, 674, 675, 676, 0, 609, 0, 601, 602,
	603, 677, 604, 678, 0, 605, 606, 607, 608, 0,
	610, 611, 0, 0, 612, 613, 614, 616, 617, 615,
	618, 0, 619, 0, 0, 620, 621, 622, 679, 680,
	681, 0, 624, 623, 625, 682, 271, 626, 0, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 632, 0,
	0, 0, 0, 286, 287, 1608, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 0,
	637, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 638, 639, 640, 0, 303, 304, 641, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 0, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 346, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 0,
	0, 0, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 0,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 650, 0, 651, 386,
	0, 387, 388, 389, 390, 391, 652, 653, 654, 471,
	0, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 0, 399, 400, 401, 403, 0, 0, 402,
	655, 656, 0, 657, 0, 404, 405, 0, 658, 0,
	406, 407, 408, 0, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	659, 0, 420, 421, 0, 0, 422, 0, 0, 0,
	423, 424, 427, 0, 0, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 0, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 0, 467,
	456, 0, 0, 0, 468, 469, 0, 660, 470, 661,
	472, 473, 0, 0, 474, 0, 0, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 0, 481, 0, 663,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 669, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 0, 558, 559, 557, 560, 561, 562,
	0, 563, 564, 546, 547, 565, 566, 0, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 0, 590, 591, 0, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 673, 674, 675, 676, 0, 609, 0,
	601, 602, 603, 677, 604, 678, 0, 605, 606, 607,
	608, 0, 610, 611, 0, 0, 612, 613, 614, 616,
	617, 615, 618, 0, 619, 0, 0, 620, 621, 622,
	679, 680, 681, 0, 624, 623, 625, 682, 0, 626,
	271, 0, 0, 0, 627, 628, 683, 629, 630, 631,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 286, 287, 3071,
	288, 289, 290, 291, 292, 293, 633, 634, 0, 294,
	635, 295, 636, 0, 637, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 638, 639, 640, 0, 303,
	304, 641, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	642, 643, 0, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 346, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 644,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	645, 646, 366, 0, 0, 0, 0, 0, 0, 0,
	367, 368, 369, 647, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 0, 373, 374, 375, 648, 649, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	650, 0, 651, 386, 0, 387, 388, 389, 390, 391,
	652, 653, 654, 471, 0, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 0, 399, 400, 401,
	403, 0, 0, 402, 655, 656, 0, 657, 0, 404,
	405, 0, 658, 0, 406, 407, 408, 0, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 659, 0, 420, 421, 0, 0,
	422, 0, 0, 0, 423, 424, 427, 0, 0, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 0, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 0, 467, 456, 0, 0, 0, 468, 469,
	0, 660, 470, 661, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	0, 481, 0, 663, 482, 483, 475, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 666, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 668, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 669, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 0, 563, 564, 546, 547, 565,
	566, 0, 567, 568, 569, 570, 571, 572, 573, 670,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 671, 581, 582, 583, 584, 672, 588, 589, 0,
	590, 591, 0, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 673, 674, 675,
	676, 0, 609, 0, 601, 602, 603, 677, 604, 678,
	0, 605, 606, 607, 608, 0, 610, 611, 0, 0,
	612, 613, 614, 616, 617, 615, 618, 0, 619, 0,
	0, 620, 621, 622, 679, 680, 681, 0, 624, 623,
	625, 682, 0, 626, 271, 0, 0, 0, 627, 628,
	683, 629, 630, 631, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 632, 0, 0, 0,
	0, 286, 287, 3750, 288, 289, 290, 291, 292, 293,
	633, 634, 0, 294, 635, 295, 636, 0, 637, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 638,
	639, 640, 0, 303, 304, 641, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 642, 643, 0, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 346, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 644, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 645, 646, 366, 0, 0, 0,
	0, 0, 0, 0, 367, 368, 369, 647, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 0, 373, 374,
	375, 648, 649, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 650, 0, 651, 386, 0, 387,
	388, 389, 390, 391, 652, 653, 654, 471, 0, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	0, 399, 400, 401, 403, 0, 0, 402, 655, 656,
	0, 657, 0, 404, 405, 0, 658, 0, 406, 407,
	408, 0, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 659, 0,
	420, 421, 0, 0, 422, 0, 0, 0, 423, 424,
	427, 0, 0, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 0, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 0, 467, 456, 0,
	0, 0, 468, 469, 0, 660, 470, 661, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 0, 481, 0, 663, 482, 483,
	475, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 666, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 668, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 669, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 0, 563,
	564, 546, 547, 565, 566, 0, 567, 568, 569, 570,
	571, 572, 573, 670, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 671, 581, 582, 583, 584,
	672, 588, 589, 0, 590, 591, 0, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 673, 674, 675, 676, 0, 609, 0, 601, 602,
	603, 677, 604, 678, 0, 605, 606, 607, 608, 0,
	610, 611, 0, 0, 612, 613, 614, 616, 617, 615,
	618, 0, 619, 0, 0, 620, 621, 622, 679, 680,
	681, 0, 624, 623, 625, 682, 905, 626, 810, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	632, 0, 0, 0, 0, 286, 287, 2306, 288, 289,
	290, 291, 292, 293, 633, 634, 0, 294, 635, 295,
	636, 0, 637, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 638, 639, 640, 0, 303, 304, 641,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 817, 334, 0, 335, 642, 643,
	0, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 346, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 644, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 645, 646,
	366, 0, 274, 0, 0, 0, 0, 0, 367, 368,
	369, 647, 0, 0, 0, 370, 0, 371, 372, 0,
	903, 0, 373, 374, 375, 648, 649, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 650, 0,
	651, 386, 0, 387, 388, 389, 390, 391, 652, 653,
	654, 471, 0, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 275, 399, 400, 401, 403, 0,
	0, 402, 655, 656, 0, 657, 0, 404, 405, 0,
	658, 0, 406, 407, 408, 0, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 659, 0, 420, 421, 0, 0, 422, 0,
	0, 0, 423, 424, 427, 0, 0, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 0, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	0, 467, 456, 0, 276, 0, 468, 469, 0, 660,
	470, 661, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 0, 481,
	0, 663, 482, 483, 475, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 666, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 668, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	669, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 0, 563, 564, 546, 547, 565, 566, 0,
	567, 568, 569, 570, 571, 572, 573, 670, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 671,
	581, 582, 583, 584, 672, 588, 589, 0, 590, 591,
	0, 587, 578, 815, 592, 593, 594, 595, 596, 816,
	598, 360, 599, 0, 600, 673, 674, 675, 676, 0,
	609, 0, 601, 602, 603, 677, 604, 678, 0, 605,
	606, 607, 608, 0, 610, 611, 0, 0, 612, 613,
	614, 616, 617, 615, 618, 0, 619, 0, 0, 620,
	621, 622, 679, 680, 681, 810, 624, 623, 625, 682,
	0, 626, 0, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 277, 279, 278, 280, 281, 282, 283, 2045,
	284, 285, 0, 0, 0, 0, 0, 632, 0, 0,
	0, 0, 286, 287, 820, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 0, 637,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	638, 639, 640, 0, 303, 304, 641, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 817, 334, 0, 335, 642, 643, 0, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 346, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 0, 274,
	0, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 0, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 650, 0, 651, 386, 0,
	387, 388, 389, 390, 391, 652, 653, 654, 471, 0,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 275, 399, 400, 401, 403, 0, 0, 402, 655,
	656, 0, 657, 0, 404, 405, 0, 658, 0, 406,
	407, 408, 0, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 659,
	0, 420, 421, 0, 0, 422, 0, 0, 0, 423,
	424, 427, 0, 0, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 0, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 0, 467, 456,
	0, 276, 0, 468, 469, 0, 660, 470, 661, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 0, 481, 0, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 2044, 553, 554,
	555, 556, 0, 2046, 559, 557, 560, 561, 562, 0,
	563, 564, 546, 547, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 0, 590, 591, 0, 587, 578,
	815, 592, 593, 594, 595, 596, 816, 598, 360, 599,
	0, 600, 673, 674, 675, 676, 0, 609, 0, 601,
	602, 603, 677, 604, 678, 0, 605, 606, 2043, 608,
	0, 610, 611, 0, 0, 612, 613, 614, 616, 617,
	615, 618, 0, 619, 0, 0, 620, 621, 622, 679,
	680, 681, 810, 624, 623, 625, 682, 0, 626, 0,
	0, 0, 0, 627, 628, 683, 629, 630, 631, 277,
	279, 278, 280, 281, 282, 283, 1996, 284, 285, 0,
	0, 0, 0, 0, 632, 0, 0, 0, 0, 286,
	287, 820, 288, 289, 290, 291, 292, 293, 633, 634,
	0, 294, 635, 295, 636, 0, 637, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 638, 639, 640,
	0, 303, 304, 641, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 817, 334,
	0, 335, 642, 643, 0, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 346,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 644, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 645, 646, 366, 0, 274, 0, 0, 0,
	0, 0, 367, 368, 369, 647, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 0, 373, 374, 375, 648,
	649, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 650, 0, 651, 386, 0, 387, 388, 389,
	390, 391, 652, 653, 654, 471, 0, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 275, 399,
	400, 401, 403, 0, 0, 402, 655, 656, 0, 657,
	0, 404, 405, 0, 658, 0, 406, 407, 408, 0,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 659, 0, 420, 421,
	0, 0, 422, 0, 0, 0, 423, 424, 427, 0,
	0, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	0, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 0, 467, 456, 0, 276, 0,
	468, 469, 0, 660, 470, 661, 472, 473, 0, 0,
	474, 0, 0, 0, 476, 477, 478, 0, 0, 479,
	480, 662, 0, 481, 0, 663, 482, 483, 475, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 666,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 668, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 669, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 1995, 553, 554, 555, 556, 0,
	1997, 559, 557, 560, 561, 562, 0, 563, 564, 546,
	547, 565, 566, 0, 567, 568, 569, 570, 571, 572,
	573, 670, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 671, 581, 582, 583, 584, 672, 588,
	589, 0, 590, 591, 0, 587, 578, 815, 592, 593,
	594, 595, 596, 816, 598, 360, 599, 0, 600, 673,
	674, 675, 676, 0, 609, 0, 601, 602, 603, 677,
	604, 678, 0, 605, 606, 1994, 608, 0, 610, 611,
	0, 0, 612, 613, 614, 616, 617, 615, 618, 0,
	619, 0, 0, 620, 621, 622, 679, 680, 681, 0,
	624, 623, 625, 682, 0, 626, 808, 0, 810, 0,
	627, 628, 683, 629, 630, 631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 820, 0,
	632, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 633, 634, 0, 294, 635, 295,
	636, 0, 637, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 638, 639, 640, 0, 303, 304, 641,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 817, 334, 0, 335, 642, 643,
	0, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 346, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 644, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 645, 646,
	366, 0, 274, 0, 0, 0, 0, 0, 367, 368,
	369, 647, 0, 0, 0, 370, 0, 371, 372, 0,
	0, 0, 373, 374, 375, 648, 649, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 650, 0,
	651, 386, 0, 387, 388, 389, 390, 391, 652, 653,
	654, 471, 0, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 275, 399, 400, 401, 403, 0,
	0, 402, 655, 656, 0, 657, 0, 404, 405, 0,
	658, 0, 406, 407, 408, 0, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 659, 0, 420, 421, 0, 0, 422, 0,
	0, 0, 423, 424, 427, 0, 0, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 0, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	0, 467, 456, 0, 276, 0, 468, 469, 0, 660,
	470, 661, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 0, 481,
	0, 663, 482, 483, 475, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 666, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 668, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	669, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 0, 563, 564, 546, 547, 565, 566, 0,
	567, 568, 569, 570, 571, 572, 573, 670, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 671,
	581, 582, 583, 584, 672, 588, 589, 0, 590, 591,
	0, 587, 578, 815, 592, 593, 594, 595, 596, 816,
	598, 360, 599, 0, 600, 673, 674, 675, 676, 0,
	609, 0, 601, 602, 603, 677, 604, 678, 0, 605,
	606, 607, 608, 0, 610, 611, 0, 0, 612, 613,
	614, 616, 617, 615, 618, 0, 619, 0, 0, 620,
	621, 622, 679, 680, 681, 0, 624, 623, 625, 682,
	2018, 626, 0, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 0, 0, 820, 0, 0, 286, 287, 1191,
	288, 289, 290, 291, 292, 293, 0, 2024, 0, 294,
	2014, 295, 2030, 0, 2037, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 2040, 2041, 0, 0, 303,
	304, 0, 0, 1336, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1192, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 1174, 335,
	2028, 2027, 0, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 1159, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 0,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	0, 0, 366, 0, 0, 0, 0, 0, 0, 0,
	367, 368, 369, 2026, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 1193, 373, 374, 375, 2035, 2036, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	0, 0, 0, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 471, 1195, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 0, 399, 400, 401,
	403, 0, 1194, 402, 2021, 2022, 0, 2017, 0, 404,
	405, 1196, 0, 1197, 406, 407, 408, 1198, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 0, 1199, 420, 421, 1200, 0,
	422, 0, 0, 0, 423, 424, 427, 0, 0, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 1201, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 1202, 467, 456, 0, 0, 1203, 468, 469,
	0, 0, 470, 2029, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 0,
	1204, 481, 1205, 0, 482, 483, 475, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 2011,
	495, 496, 497, 2012, 498, 499, 500, 0, 501, 0,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 2025, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 1206, 536, 537, 538,
	539, 540, 0, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 0, 563, 564, 546, 547, 565,
	566, 1207, 567, 568, 569, 570, 571, 572, 573, 2023,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 2039, 581, 582, 583, 584, 0, 588, 589, 0,
	590, 591, 0, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 2031, 2032, 2033,
	2034, 0, 609, 0, 601, 602, 603, 0, 604, 0,
	0, 605, 606, 607, 608, 0, 610, 611, 0, 0,
	612, 613, 614, 616, 617, 615, 618, 0, 619, 0,
	0, 620, 621, 622, 0, 2015, 2038, 0, 624, 623,
	625, 0, 0, 626, 0, 0, 0, 0, 627, 628,
	0, 629, 630, 631, 810, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 632, 2005, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	633, 634, 0, 294, 635, 295, 636, 0, 637, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 638,
	639, 640, 0, 303, 304, 641, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	817, 334, 0, 335, 642, 643, 0, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 346, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 644, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 645, 646, 366, 0, 274, 0,
	0, 0, 0, 0, 367, 368, 369, 647, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 0, 373, 374,
	375, 648, 649, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 650, 0, 651, 386, 0, 387,
	388, 389, 390, 391, 652, 653, 654, 471, 0, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	275, 399, 400, 401, 403, 0, 0, 402, 655, 656,
	0, 657, 0, 404, 405, 0, 658, 0, 406, 407,
	408, 0, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 659, 0,
	420, 421, 0, 0, 422, 0, 0, 0, 423, 424,
	427, 0, 0, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 0, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 0, 467, 456, 0,
	276, 0, 468, 469, 0, 660, 470, 661, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 0, 481, 0, 663, 482, 483,
	475, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 666, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 668, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 669, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 0, 563,
	564, 546, 547, 565, 566, 0, 567, 568, 569, 570,
	571, 572, 573, 670, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 671, 581, 582, 583, 584,
	672, 588, 589, 0, 590, 591, 0, 587, 578, 815,
	592, 593, 594, 595, 596, 816, 598, 360, 599, 0,
	600, 673, 674, 675, 676, 0, 609, 0, 601, 602,
	603, 677, 604, 678, 0, 605, 606, 607, 608, 0,
	610, 611, 0, 0, 612, 613, 614, 616, 617, 615,
	618, 0, 619, 0, 0, 620, 621, 622, 679, 680,
	681, 810, 624, 623, 625, 682, 0, 626, 0, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 286, 287,
	820, 288, 289, 290, 291, 292, 293, 633, 634, 0,
	294, 635, 295, 636, 0, 637, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 638, 639, 640, 0,
	303, 304, 641, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 817, 334, 0,
	335, 642, 643, 0, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 346, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	644, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 645, 646, 366, 0, 274, 0, 0, 0, 0,
	0, 367, 368, 369, 647, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 0, 373, 374, 375, 648, 649,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 650, 0, 651, 386, 0, 387, 388, 389, 390,
	391, 652, 653, 654, 471, 0, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 275, 399, 400,
	401, 403, 0, 0, 402, 655, 656, 0, 657, 0,
	404, 405, 0, 658, 0, 406, 407, 408, 0, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 659, 0, 420, 421, 0,
	0, 422, 0, 0, 0, 423, 424, 427, 0, 0,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 0,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 0, 467, 456, 0, 276, 0, 468,
	469, 0, 660, 470, 661, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	662, 0, 481, 0, 663, 482, 483, 475, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 666, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 668, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 0, 2354, 537,
	538, 539, 540, 669, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 2355, 553, 554, 555, 556, 0, 558,
	559, 557, 560, 561, 562, 0, 563, 564, 546, 547,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	670, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 671, 581, 582, 583, 584, 672, 588, 589,
	0, 590, 591, 0, 587, 578, 815, 592, 593, 594,
	595, 596, 816, 598, 360, 599, 0, 600, 673, 674,
	675, 676, 0, 609, 0, 601, 602, 603, 677, 604,
	678, 0, 605, 606, 2356, 608, 0, 610, 611, 0,
	0, 612, 613, 614, 616, 617, 615, 618, 0, 619,
	0, 0, 620, 621, 622, 679, 680, 681, 271, 624,
	623, 625, 682, 0, 626, 0, 0, 0, 0, 627,
	628, 683, 629, 630, 631, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	632, 0, 0, 0, 0, 286, 287, 820, 288, 289,
	290, 291, 292, 293, 633, 634, 0, 294, 635, 295,
	636, 0, 637, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 638, 639, 640, 0, 303, 304, 641,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 642, 643,
	0, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 346, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 644, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 645, 646,
	366, 0, 274, 0, 0, 0, 0, 0, 367, 368,
	369, 647, 0, 0, 0, 370, 0, 371, 372, 0,
	0, 0, 373, 374, 375, 648, 649, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 650, 0,
	651, 386, 0, 387, 388, 389, 390, 391, 652, 653,
	654, 471, 0, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 275, 399, 400, 401, 403, 0,
	0, 402, 655, 656, 0, 657, 0, 404, 405, 0,
	658, 0, 406, 407, 408, 0, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 659, 0, 420, 421, 0, 0, 422, 0,
	0, 0, 423, 424, 427, 0, 0, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 0, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	0, 467, 456, 0, 276, 0, 468, 469, 0, 660,
	470, 661, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 0, 481,
	0, 663, 482, 483, 475, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 666, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 668, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	669, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 0, 563, 564, 546, 547, 565, 566, 0,
	567, 568, 569, 570, 571, 572, 573, 670, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 671,
	581, 582, 583, 584, 672, 588, 589, 0, 590, 591,
	0, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 673, 674, 675, 676, 0,
	609, 0, 601, 602, 603, 677, 604, 678, 0, 605,
	606, 607, 608, 0, 610, 611, 0, 0, 612, 613,
	614, 616, 617, 615, 618, 0, 619, 0, 0, 620,
	621, 622, 679, 680, 681, 0, 624, 623, 625, 682,
	0, 626, 0, 1331, 2093, 0, 627, 628, 683, 629,
	630, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 820, 632, 0, 0, 0, 0,
	286, 287, 1191, 288, 289, 290, 291, 292, 293, 633,
	634, 0, 294, 635, 295, 636, 0, 637, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 638, 639,
	640, 0, 303, 304, 641, 0, 1336, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1192, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 3034, 330, 331, 332, 333,
	334, 0, 335, 642, 643, 0, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	346, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 644, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 645, 646, 366, 0, 274, 0, 0,
	0, 0, 0, 367, 368, 369, 647, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 1193, 373, 374, 375,
	648, 649, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 650, 0, 651, 386, 0, 387, 388,
	389, 390, 391, 652, 653, 654, 471, 1195, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 0,
	399, 400, 401, 403, 0, 1194, 402, 655, 656, 0,
	657, 0, 404, 405, 1196, 658, 1197, 406, 407, 408,
	1198, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 659, 1199, 420,
	421, 1200, 0, 422, 0, 0, 0, 423, 424, 427,
	0, 0, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 1201, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 1202, 467, 456, 0, 0,
	1203, 468, 469, 0, 660, 470, 661, 472, 473, 0,
	0, 474, 0, 0, 0, 476, 477, 478, 0, 0,
	479, 480, 662, 1204, 481, 1205, 663, 482, 483, 475,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	666, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 668, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 1206,
	536, 537, 538, 539, 540, 669, 541, 0, 542, 543,
	549, 550, 551, 544, 545, 552, 553, 554, 555, 556,
	0, 558, 559, 557, 560, 561, 562, 3035, 563, 564,
	546, 547, 565, 566, 1207, 567, 568, 569, 570, 571,
	572, 573, 670, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 671, 581, 582, 583, 584, 672,
	588, 589, 0, 590, 591, 0, 587, 578, 0, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	673, 674, 675, 676, 0, 609, 0, 601, 602, 603,
	677, 604, 678, 0, 605, 606, 607, 608, 0, 610,
	611, 0, 0, 612, 613, 614, 616, 617, 615, 618,
	0, 619, 0, 0, 620, 621, 622, 679, 680, 681,
	0, 624, 623, 625, 682, 0, 626, 0, 0, 0,
	0, 627, 628, 683, 629, 630, 631, 1331, 1330, 0,
	0, 0, 0, 1328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 632,
	0, 0, 0, 0, 286, 287, 1191, 288, 289, 290,
	291, 292, 293, 633, 634, 0, 294, 635, 295, 636,
	0, 637, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 638, 639, 640, 0, 303, 304, 641, 0,
	1336, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1192,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 642, 643, 0,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 346, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 644, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 645, 646, 366,
	0, 274, 0, 0, 0, 0, 0, 367, 368, 369,
	647, 0, 0, 0, 370, 0, 371, 372, 0, 0,
	1193, 373, 374, 375, 648, 649, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 650, 0, 651,
	386, 0, 387, 388, 389, 390, 391, 652, 653, 654,
	471, 1195, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 0, 399, 400, 401, 403, 0, 1194,
	402, 655, 656, 0, 657, 0, 404, 405, 1196, 658,
	1197, 406, 407, 408, 1198, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 659, 1199, 420, 421, 1200, 0, 422, 0, 0,
	0, 423, 424, 427, 0, 0, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 1201, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 1202,
	467, 456, 0, 0, 1203, 468, 469, 3944, 660, 470,
	661, 472, 473, 0, 0, 474, 0, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 1204, 481, 1205,
	663, 482, 483, 475, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 666, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	668, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 1206, 536, 537, 538, 539, 540, 669,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 0, 563, 564, 546, 547, 565, 566, 1207, 567,
	568, 569, 570, 571, 572, 573, 670, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 671, 581,
	582, 583, 584, 672, 588, 589, 0, 590, 591, 0,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 673, 674, 675, 676, 0, 609,
	0, 601, 602, 603, 677, 604, 678, 0, 605, 606,
	607, 608, 0, 610, 611, 0, 0, 612, 613, 614,
	616, 617, 615, 618, 0, 619, 0, 0, 620, 621,
	622, 679, 680, 681, 0, 624, 623, 625, 682, 0,
	626, 0, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 1331, 1330, 0, 0, 0, 0, 1328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 286, 287,
	1191, 288, 289, 290, 291, 292, 293, 633, 634, 0,
	294, 635, 295, 636, 0, 637, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 638, 639, 640, 0,
	303, 304, 641, 0, 1336, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1192, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 642, 643, 0, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 346, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	644, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 645, 646, 366, 0, 274, 0, 0, 0, 0,
	0, 367, 368, 369, 647, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 1193, 373, 374, 375, 648, 649,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 650, 0, 651, 386, 0, 387, 388, 389, 390,
	391, 652, 653, 654, 471, 1195, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 0, 399, 400,
	401, 403, 0, 1194, 402, 655, 656, 0, 657, 0,
	404, 405, 1196, 658, 1197, 406, 407, 408, 1198, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 659, 1199, 420, 421, 1200,
	0, 422, 0, 0, 0, 423, 424, 427, 0, 0,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 1201,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 1202, 467, 456, 0, 0, 1203, 468,
	469, 3549, 660, 470, 661, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	662, 1204, 481, 1205, 663, 482, 483, 475, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 666, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 668, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 1206, 536, 537,
	538, 539, 540, 669, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 0, 558,
	559, 557, 560, 561, 562, 0, 563, 564, 546, 547,
	565, 566, 1207, 567, 568, 569, 570, 571, 572, 573,
	670, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 671, 581, 582, 583, 584, 672, 588, 589,
	0, 590, 591, 0, 587, 578, 0, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 673, 674,
	675, 676, 0, 609, 0, 601, 602, 603, 677, 604,
	678, 0, 605, 606, 607, 608, 0, 610, 611, 0,
	0, 612, 613, 614, 616, 617, 615, 618, 0, 619,
	0, 0, 620, 621, 622, 679, 680, 681, 0, 624,
	623, 625, 682, 0, 626, 0, 0, 0, 0, 627,
	628, 683, 629, 630, 631, 1664, 0, 1331, 1330, 0,
	0, 0, 0, 1328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 632,
	0, 0, 0, 0, 286, 287, 1191, 288, 289, 290,
	291, 292, 293, 633, 634, 0, 294, 635, 295, 636,
	0, 637, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 638, 639, 640, 0, 303, 304, 641, 0,
	1336, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1192,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 642, 643, 0,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 346, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 644, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 645, 646, 366,
	0, 274, 0, 0, 0, 0, 0, 1663, 368, 369,
	647, 0, 0, 0, 370, 0, 371, 372, 0, 0,
	1193, 373, 374, 375, 648, 649, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 650, 0, 651,
	386, 0, 387, 388, 389, 390, 391, 652, 653, 654,
	471, 1195, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 0, 399, 400, 401, 403, 0, 1194,
	402, 655, 656, 0, 657, 0, 404, 405, 1196, 658,
	1197, 406, 407, 408, 1198, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 659, 1199, 420, 421, 1200, 0, 422, 0, 0,
	0, 423, 424, 427, 0, 0, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 1201, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 1202,
	467, 456, 0, 0, 1203, 468, 469, 0, 660, 470,
	661, 472, 473, 0, 0, 474, 0, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 1204, 481, 1205,
	663, 482, 483, 475, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 666, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 1662, 512,
	668, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 1206, 536, 537, 538, 539, 540, 669,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	1661, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 0, 563, 564, 546, 547, 565, 566, 1207, 567,
	568, 569, 570, 571, 572, 573, 670, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 671, 581,
	582, 583, 584, 672, 588, 589, 0, 590, 591, 0,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 673, 674, 675, 676, 0, 609,
	0, 601, 602, 603, 677, 604, 678, 0, 605, 606,
	607, 608, 0, 610, 611, 0, 0, 612, 613, 614,
	616, 617, 615, 618, 0, 619, 0, 0, 620, 621,
	622, 679, 680, 681, 0, 624, 623, 625, 682, 0,
	626, 0, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 1582, 0, 1331, 1330, 0, 0, 0, 0, 1328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 632, 0, 0, 0, 0,
	286, 287, 1191, 288, 289, 290, 291, 292, 293, 633,
	634, 0, 294, 635, 295, 636, 0, 637, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 638, 639,
	640, 0, 303, 304, 641, 0, 1336, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1192, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 642, 643, 0, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	346, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 644, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 645, 646, 366, 0, 274, 0, 0,
	0, 0, 0, 367, 368, 369, 647, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 1193, 373, 374, 375,
	648, 649, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 650, 0, 651, 386, 0, 387, 388,
	389, 390, 391, 1581, 653, 654, 471, 1195, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 0,
	399, 400, 401, 403, 0, 1194, 402, 655, 656, 0,
	657, 0, 404, 405, 1196, 658, 1197, 406, 407, 408,
	1198, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 659, 1199, 420,
	421, 1200, 0, 422, 0, 0, 0, 423, 424, 427,
	0, 0, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 1201, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 1202, 467, 456, 0, 0,
	1203, 468, 469, 0, 660, 470, 661, 472, 473, 0,
	0, 474, 0, 0, 0, 476, 477, 478, 0, 0,
	479, 480, 662, 1204, 481, 1205, 663, 482, 483, 475,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	666, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 668, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 1206,
	536, 537, 538, 539, 540, 669, 541, 0, 542, 543,
	549, 550, 551, 544, 545, 552, 553, 554, 555, 556,
	0, 558, 559, 557, 560, 561, 562, 0, 563, 564,
	546, 547, 565, 566, 1207, 567, 568, 569, 570, 571,
	572, 573, 670, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 671, 581, 582, 583, 584, 672,
	588, 589, 0, 590, 591, 0, 587, 578, 0, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	673, 674, 675, 676, 0, 609, 0, 601, 602, 603,
	677, 604, 678, 0, 605, 606, 607, 608, 0, 610,
	611, 0, 0, 612, 613, 614, 616, 617, 615, 618,
	0, 619, 0, 0, 620, 621, 622, 679, 680, 681,
	0, 624, 623, 625, 682, 0, 626, 0, 0, 0,
	0, 627, 628, 683, 629, 630, 631, 1541, 0, 1331,
	1330, 0, 0, 0, 0, 1328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 286, 287, 1191, 288,
	289, 290, 291, 292, 293, 633, 634, 0, 294, 635,
	295, 636, 0, 637, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 638, 639, 640, 0, 303, 304,
	641, 0, 1336, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1192, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 642,
	643, 0, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 346, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 644, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 645,
	646, 366, 0, 274, 0, 0, 0, 0, 0, 367,
	368, 369, 647, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 1193, 373, 374, 375, 648, 649, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 650,
	0, 651, 386, 0, 387, 388, 389, 390, 391, 1543,
	653, 654, 471, 1195, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 0, 399, 400, 401, 403,
	0, 1194, 402, 655, 656, 0, 657, 0, 404, 405,
	1196, 658, 1197, 406, 407, 408, 1198, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 659, 1199, 420, 421, 1200, 0, 422,
	0, 0, 0, 423, 424, 427, 0, 0, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 1201, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 1202, 467, 456, 0, 0, 1203, 468, 469, 0,
	660, 470, 661, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 1204,
	481, 1205, 663, 482, 483, 475, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 666, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 668, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 1206, 536, 537, 538, 539,
	540, 669, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 0, 563, 564, 546, 547, 565, 566,
	1207, 567, 568, 569, 570, 571, 572, 573, 670, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	671, 581, 582, 583, 584, 672, 588, 589, 0, 590,
	591, 0, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 673, 674, 675, 676,
	0, 609, 0, 601, 602, 603, 677, 604, 678, 0,
	605, 606, 607, 608, 0, 610, 611, 0, 0, 612,
	613, 614, 616, 617, 615, 618, 0, 619, 0, 0,
	620, 621, 622, 679, 680, 681, 0, 624, 623, 625,
	682, 0, 626, 0, 0, 0, 0, 627, 628, 683,
	629, 630, 631, 1506, 0, 1331, 1330, 0, 0, 0,
	0, 1328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 632, 0, 0,
	0, 0, 286, 287, 1191, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 0, 637,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	638, 639, 640, 0, 303, 304, 641, 0, 1336, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1192, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 0, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 346, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 0, 274,
	0, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 1193, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 650, 0, 651, 386, 0,
	387, 388, 389, 390, 391, 1505, 653, 654, 471, 1195,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 0, 399, 400, 401, 403, 0, 1194, 402, 655,
	656, 0, 657, 0, 404, 405, 1196, 658, 1197, 406,
	407, 408, 1198, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 659,
	1199, 420, 421, 1200, 0, 422, 0, 0, 0, 423,
	424, 427, 0, 0, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 1201, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 1202, 467, 456,
	0, 0, 1203, 468, 469, 0, 660, 470, 661, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 1204, 481, 1205, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 1206, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 561, 562, 0,
	563, 564, 546, 547, 565, 566, 1207, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 0, 590, 591, 0, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 673, 674, 675, 676, 0, 609, 0, 601,
	602, 603, 677, 604, 678, 0, 605, 606, 607, 608,
	0, 610, 611, 0, 0, 612, 613, 614, 616, 617,
	615, 618, 0, 619, 0, 0, 620, 621, 622, 679,
	680, 681, 0, 624, 623, 625, 682, 0, 626, 0,
	0, 0, 0, 627, 628, 683, 629, 630, 631, 1325,
	0, 1331, 1330, 0, 0, 0, 0, 1328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 286, 287,
	1191, 288, 289, 290, 291, 292, 293, 633, 634, 0,
	294, 635, 295, 636, 0, 637, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 638, 639, 640, 0,
	303, 304, 641, 0, 1336, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1192, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 642, 643, 0, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 346, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	644, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 645, 646, 366, 0, 274, 0, 0, 0, 0,
	0, 367, 368, 369, 647, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 1193, 373, 374, 375, 648, 649,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 650, 0, 651, 386, 0, 387, 388, 389, 390,
	391, 1324, 653, 654, 471, 1195, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 0, 399, 400,
	401, 403, 0, 1194, 402, 655, 656, 0, 657, 0,
	404, 405, 1196, 658, 1197, 406, 407, 408, 1198, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 659, 1199, 420, 421, 1200,
	0, 422, 0, 0, 0, 423, 424, 427, 0, 0,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 1201,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 1202, 467, 456, 0, 0, 1203, 468,
	469, 0, 660, 470, 661, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	662, 1204, 481, 1205, 663, 482, 483, 475, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 666, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 668, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 1206, 536, 537,
	538, 539, 540, 669, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 0, 558,
	559, 557, 560, 561, 562, 0, 563, 564, 546, 547,
	565, 566, 1207, 567, 568, 569, 570, 571, 572, 573,
	670, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 671, 581, 582, 583, 584, 672, 588, 589,
	0, 590, 591, 0, 587, 578, 0, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 673, 674,
	675, 676, 0, 609, 0, 601, 602, 603, 677, 604,
	678, 0, 605, 606, 607, 608, 0, 610, 611, 0,
	0, 612, 613, 614, 616, 617, 615, 618, 0, 619,
	0, 0, 620, 621, 622, 679, 680, 681, 0, 624,
	623, 625, 682, 0, 626, 0, 0, 0, 0, 627,
	628, 683, 629, 630, 631, 1331, 1330, 0, 0, 0,
	0, 1328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 632, 0, 0,
	0, 0, 286, 287, 1191, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 0, 637,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	638, 639, 640, 0, 303, 304, 641, 0, 1336, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1192, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 0, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 346, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 0, 274,
	0, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 1193, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 650, 0, 651, 386, 0,
	387, 388, 389, 390, 391, 652, 653, 654, 471, 1195,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 0, 399, 400, 401, 403, 0, 1194, 402, 655,
	656, 0, 657, 0, 404, 405, 1196, 658, 1197, 406,
	407, 408, 1198, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 659,
	1199, 420, 421, 1200, 0, 422, 0, 0, 0, 423,
	424, 427, 0, 0, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 1201, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 1202, 467, 456,
	0, 0, 1203, 468, 469, 0, 660, 470, 661, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 1204, 481, 1205, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 1206, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 561, 562, 0,
	563, 564, 546, 547, 565, 566, 1207, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 0, 590, 591, 0, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 673, 674, 675, 676, 0, 609, 0, 601,
	602, 603, 677, 604, 678, 0, 605, 606, 607, 608,
	0, 610, 611, 0, 0, 612, 613, 614, 616, 617,
	615, 618, 0, 619, 0, 0, 620, 621, 622, 679,
	680, 681, 0, 624, 623, 625, 682, 0, 626, 1331,
	2093, 0, 0, 627, 628, 683, 629, 630, 631, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 286, 287, 1191, 288,
	289, 290, 291, 292, 293, 633, 634, 0, 294, 635,
	295, 636, 0, 637, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 638, 639, 640, 0, 303, 304,
	641, 0, 1336, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1192, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 642,
	643, 2090, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 346, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 644, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 645,
	646, 366, 0, 274, 0, 0, 0, 0, 0, 367,
	368, 369, 647, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 1193, 373, 374, 375, 648, 649, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 650,
	0, 651, 386, 0, 387, 388, 389, 390, 391, 652,
	653, 654, 471, 1195, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 0, 399, 400, 401, 403,
	0, 1194, 402, 655, 656, 0, 657, 0, 404, 405,
	1196, 658, 1197, 406, 407, 408, 1198, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 659, 1199, 420, 421, 1200, 0, 422,
	0, 0, 0, 423, 424, 427, 0, 0, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 1201, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 1202, 467, 456, 0, 0, 1203, 468, 469, 0,
	660, 470, 661, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 1204,
	481, 1205, 663, 482, 483, 475, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 666, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 668, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 1206, 536, 537, 538, 539,
	540, 669, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 0, 563, 564, 546, 547, 565, 566,
	1207, 567, 568, 569, 570, 571, 572, 573, 670, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	671, 581, 582, 583, 584, 672, 588, 589, 0, 590,
	591, 0, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 673, 674, 675, 676,
	0, 609, 0, 601, 602, 603, 677, 604, 678, 0,
	605, 606, 607, 608, 0, 610, 611, 0, 0, 612,
	613, 614, 616, 617, 615, 618, 0, 619, 0, 0,
	620, 621, 622, 679, 680, 681, 0, 624, 623, 625,
	682, 0, 626, 1331, 1330, 0, 0, 627, 628, 683,
	629, 630, 631, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 632, 0, 0, 0, 0,
	286, 287, 1191, 288, 289, 290, 291, 292, 293, 633,
	634, 0, 294, 635, 295, 636, 0, 637, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 638, 639,
	640, 0, 303, 304, 641, 0, 1336, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1192, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 642, 643, 0, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	346, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 644, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 645, 646, 366, 0, 274, 0, 0,
	0, 0, 0, 367, 368, 369, 647, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 1193, 373, 374, 375,
	648, 649, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 650, 0, 651, 386, 0, 387, 388,
	389, 390, 391, 652, 653, 654, 471, 1195, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 0,
	399, 400, 401, 403, 0, 1194, 402, 655, 656, 0,
	657, 0, 404, 405, 1196, 658, 1197, 406, 407, 408,
	1198, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 659, 1199, 420,
	421, 1200, 0, 422, 0, 0, 0, 423, 424, 427,
	0, 0, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 1201, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 1202, 467, 456, 0, 0,
	1203, 468, 469, 0, 660, 470, 661, 472, 473, 0,
	0, 474, 0, 0, 0, 476, 477, 478, 0, 0,
	479, 480, 662, 1204, 481, 1205, 663, 482, 483, 475,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	666, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 668, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 1206,
	536, 537, 538, 539, 540, 669, 541, 0, 542, 543,
	549, 550, 551, 544, 545, 552, 553, 554, 555, 556,
	0, 558, 559, 557, 560, 561, 562, 0, 563, 564,
	546, 547, 565, 566, 1207, 567, 568, 569, 570, 571,
	572, 573, 670, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 671, 581, 582, 583, 584, 672,
	588, 589, 0, 590, 591, 0, 587, 578, 0, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	673, 674, 675, 676, 0, 609, 0, 601, 602, 603,
	677, 604, 678, 0, 605, 606, 607, 608, 0, 610,
	611, 0, 0, 612, 613, 614, 616, 617, 615, 618,
	0, 619, 0, 0, 620, 621, 622, 679, 680, 681,
	1331, 624, 623, 625, 682, 0, 626, 0, 0, 0,
	0, 627, 628, 683, 629, 630, 631, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 286, 287, 1191,
	288, 289, 290, 291, 292, 293, 633, 634, 0, 294,
	635, 295, 636, 0, 637, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 638, 639, 640, 0, 303,
	304, 641, 0, 1336, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1192, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	642, 643, 0, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 346, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 644,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	645, 646, 366, 0, 274, 0, 0, 0, 0, 0,
	367, 368, 369, 647, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 1193, 373, 374, 375, 648, 649, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	650, 0, 651, 386, 0, 387, 388, 389, 390, 391,
	652, 653, 654, 471, 1195, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 0, 399, 400, 401,
	403, 0, 1194, 402, 655, 656, 0, 657, 0, 404,
	405, 1196, 658, 1197, 406, 407, 408, 1198, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 659, 1199, 420, 421, 1200, 0,
	422, 0, 0, 0, 423, 424, 427, 0, 0, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 1201, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 1202, 467, 456, 0, 0, 1203, 468, 469,
	0, 660, 470, 661, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	1204, 481, 1205, 663, 482, 483, 475, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 666, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 668, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 1206, 536, 537, 538,
	539, 540, 669, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 0, 563, 564, 546, 547, 565,
	566, 1207, 567, 568, 569, 570, 571, 572, 573, 670,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 671, 581, 582, 583, 584, 672, 588, 589, 0,
	590, 591, 0, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 673, 674, 675,
	676, 0, 609, 0, 601, 602, 603, 677, 604, 678,
	0, 605, 606, 607, 608, 0, 610, 611, 0, 0,
	612, 613, 614, 616, 617, 615, 618, 0, 619, 0,
	0, 620, 621, 622, 679, 680, 681, 271, 624, 623,
	625, 682, 0, 626, 0, 0, 0, 0, 627, 628,
	683, 629, 630, 631, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 632,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 633, 634, 0, 294, 635, 295, 636,
	0, 637, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 638, 639, 640, 2872, 303, 304, 641, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 2869, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 642, 643, 0,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 346, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 2876, 354, 644, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 645, 646, 366,
	0, 3096, 0, 0, 0, 0, 0, 367, 368, 369,
	647, 0, 0, 0, 370, 0, 371, 372, 2875, 0,
	0, 373, 374, 375, 648, 649, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 650, 0, 651,
	386, 0, 387, 388, 389, 390, 391, 652, 653, 654,
	471, 0, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 3093, 399, 400, 401, 403, 0, 0,
	402, 655, 656, 0, 657, 0, 404, 3095, 0, 658,
	0, 406, 407, 408, 0, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 659, 0, 420, 421, 3092, 0, 422, 0, 0,
	0, 423, 424, 427, 0, 0, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 0, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 0,
	467, 456, 0, 0, 0, 468, 469, 0, 660, 470,
	661, 472, 473, 0, 0, 474, 0, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 0, 481, 0,
	663, 482, 483, 475, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 666, 501, 667, 502, 503, 2874,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	668, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 669,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 0, 563, 564, 546, 547, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 670, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 671, 581,
	582, 583, 584, 672, 588, 589, 0, 590, 591, 0,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 673, 674, 675, 676, 0, 609,
	0, 601, 602, 603, 677, 604, 678, 0, 605, 606,
	607, 608, 0, 610, 611, 0, 3094, 612, 613, 614,
	616, 617, 615, 618, 0, 619, 0, 0, 620, 621,
	622, 679, 680, 681, 271, 624, 623, 625, 682, 0,
	626, 0, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 632, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	633, 634, 0, 294, 635, 295, 636, 0, 637, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 638,
	639, 640, 2872, 303, 304, 641, 0, 0, 2866, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 2869, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 642, 643, 0, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 346, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 2876, 354, 644, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 645, 646, 366, 0, 0, 0,
	0, 0, 0, 0, 367, 368, 369, 647, 0, 0,
	0, 370, 0, 371, 372, 2875, 0, 0, 373, 374,
	375, 648, 649, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 650, 0, 651, 386, 0, 387,
	388, 389, 390, 391, 2865, 653, 654, 471, 0, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	0, 399, 400, 401, 403, 0, 0, 402, 655, 656,
	0, 657, 0, 404, 405, 0, 658, 0, 406, 407,
	408, 0, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 659, 0,
	420, 421, 0, 0, 422, 0, 0, 0, 423, 424,
	427, 0, 0, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 0, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 0, 467, 456, 0,
	0, 0, 468, 469, 0, 660, 470, 661, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 0, 481, 0, 663, 482, 483,
	475, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 666, 501, 667, 502, 503, 2874, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 668, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 669, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 0, 563,
	564, 546, 547, 565, 566, 0, 567, 568, 569, 570,
	571, 572, 573, 670, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 671, 581, 582, 583, 584,
	672, 588, 589, 0, 590, 591, 0, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 673, 674, 675, 676, 0, 609, 0, 601, 602,
	603, 677, 604, 678, 0, 605, 606, 607, 608, 0,
	610, 611, 0, 2873, 612, 613, 614, 616, 617, 615,
	618, 0, 619, 0, 0, 620, 621, 622, 679, 680,
	681, 0, 624, 623, 625, 682, 1741, 626, 271, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 1740, 284, 285, 0, 0, 0, 0, 0,
	632, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 633, 634, 0, 294, 635, 295,
	636, 0, 637, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 638, 639, 640, 0, 303, 304, 641,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 1739, 334, 0, 335, 642, 643,
	0, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 346, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 644, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 645, 646,
	366, 0, 274, 0, 0, 0, 0, 0, 367, 368,
	369, 647, 0, 0, 0, 370, 0, 371, 372, 0,
	0, 0, 373, 374, 375, 648, 649, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 650, 0,
	651, 386, 0, 387, 388, 389, 390, 391, 652, 653,
	654, 471, 0, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 275, 399, 400, 401, 403, 0,
	0, 402, 655, 656, 0, 657, 0, 404, 405, 0,
	658, 0, 406, 407, 408, 0, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 659, 0, 420, 421, 0, 0, 422, 0,
	0, 0, 423, 424, 427, 0, 0, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 0, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	0, 467, 456, 0, 276, 0, 468, 469, 0, 660,
	470, 661, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 0, 481,
	0, 663, 482, 483, 475, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 666, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 668, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	669, 541, 0, 542, 543, 549, 550, 551, 1742, 545,
	552, 553, 554, 555, 556, 0, 1738, 559, 557, 560,
	561, 562, 0, 563, 564, 546, 547, 565, 566, 0,
	567, 568, 569, 570, 571, 572, 573, 670, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 671,
	581, 582, 583, 584, 672, 588, 589, 0, 590, 591,
	0, 587, 578, 1736, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 673, 674, 675, 676, 0,
	609, 0, 601, 602, 603, 677, 604, 678, 0, 605,
	606, 607, 608, 0, 610, 611, 0, 0, 612, 613,
	614, 616, 617, 615, 618, 0, 619, 0, 0, 620,
	621, 622, 679, 680, 681, 0, 1737, 623, 625, 682,
	1481, 626, 271, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 632, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 633, 634,
	0, 294, 635, 295, 636, 0, 637, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 638, 639, 640,
	0, 303, 304, 641, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 642, 643, 0, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 346,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 644, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 645, 646, 366, 0, 274, 0, 0, 0,
	0, 0, 367, 368, 369, 647, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 0, 373, 374, 375, 648,
	649, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 650, 0, 651, 386, 0, 387, 388, 389,
	390, 391, 1483, 653, 654, 471, 0, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 275, 399,
	400, 401, 403, 0, 0, 402, 655, 656, 0, 657,
	0, 404, 405, 0, 658, 0, 406, 407, 408, 0,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 659, 0, 420, 421,
	0, 0, 422, 0, 0, 0, 423, 424, 427, 0,
	0, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	0, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 0, 467, 456, 0, 276, 0,
	468, 469, 0, 660, 470, 661, 472, 473, 0, 0,
	474, 0, 0, 1241, 476, 477, 478, 0, 0, 479,
	480, 662, 0, 481, 0, 663, 482, 483, 475, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 666,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 668, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 669, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 552, 553, 554, 555, 556, 0,
	558, 559, 557, 560, 561, 562, 0, 563, 564, 546,
	547, 565, 566, 0, 567, 568, 569, 570, 571, 572,
	573, 670, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 671, 581, 582, 583, 584, 672, 588,
	589, 0, 590, 591, 0, 587, 578, 0, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 0, 600, 673,
	674, 675, 676, 0, 609, 0, 601, 602, 603, 677,
	604, 678, 0, 605, 606, 607, 608, 0, 610, 611,
	0, 0, 612, 613, 614, 616, 617, 615, 618, 0,
	619, 0, 0, 620, 621, 622, 679, 680, 681, 0,
	624, 623, 625, 682, 1478, 626, 271, 0, 0, 0,
	627, 628, 683, 629, 630, 631, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 632, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 0,
	637, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 638, 639, 640, 0, 303, 304, 641, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 0, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 346, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 0,
	274, 0, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 0,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 650, 0, 651, 386,
	0, 387, 388, 389, 390, 391, 1480, 653, 654, 471,
	0, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 275, 399, 400, 401, 403, 0, 0, 402,
	655, 656, 0, 657, 0, 404, 405, 0, 658, 0,
	406, 407, 408, 0, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	659, 0, 420, 421, 0, 0, 422, 0, 0, 0,
	423, 424, 427, 0, 0, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 0, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 0, 467,
	456, 0, 276, 0, 468, 469, 0, 660, 470, 661,
	472, 473, 0, 0, 474, 0, 0, 1241, 476, 477,
	478, 0, 0, 479, 480, 662, 0, 481, 0, 663,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 669, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 0, 558, 559, 557, 560, 561, 562,
	0, 563, 564, 546, 547, 565, 566, 0, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 0, 590, 591, 0, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 673, 674, 675, 676, 0, 609, 0,
	601, 602, 603, 677, 604, 678, 0, 605, 606, 607,
	608, 0, 610, 611, 0, 0, 612, 613, 614, 616,
	617, 615, 618, 0, 619, 0, 0, 620, 621, 622,
	679, 680, 681, 0, 624, 623, 625, 682, 1385, 626,
	271, 0, 0, 0, 627, 628, 683, 629, 630, 631,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 633, 634, 0, 294,
	635, 295, 636, 0, 637, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 638, 639, 640, 0, 303,
	304, 641, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	642, 643, 0, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 346, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 644,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	645, 646, 366, 0, 274, 0, 0, 0, 0, 0,
	367, 368, 369, 647, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 0, 373, 374, 375, 648, 649, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	650, 0, 651, 386, 0, 387, 388, 389, 390, 391,
	1387, 653, 654, 471, 0, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 275, 399, 400, 401,
	403, 0, 0, 402, 655, 656, 0, 657, 0, 404,
	405, 0, 658, 0, 406, 407, 408, 0, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 659, 0, 420, 421, 0, 0,
	422, 0, 0, 0, 423, 424, 427, 0, 0, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 0, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 0, 467, 456, 0, 276, 0, 468, 469,
	0, 660, 470, 661, 472, 473, 0, 0, 474, 0,
	0, 1241, 476, 477, 478, 0, 0, 479, 480, 662,
	0, 481, 0, 663, 482, 483, 475, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 666, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 668, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 669, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 0, 563, 564, 546, 547, 565,
	566, 0, 567, 568, 569, 570, 571, 572, 573, 670,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 671, 581, 582, 583, 584, 672, 588, 589, 0,
	590, 591, 0, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 673, 674, 675,
	676, 0, 609, 0, 601, 602, 603, 677, 604, 678,
	0, 605, 606, 607, 608, 0, 610, 611, 0, 0,
	612, 613, 614, 616, 617, 615, 618, 0, 619, 0,
	0, 620, 621, 622, 679, 680, 681, 0, 624, 623,
	625, 682, 715, 626, 271, 0, 0, 0, 627, 628,
	683, 629, 630, 631, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 714, 282, 283, 704, 284,
	285, 0, 0, 0, 0, 0, 632, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	633, 634, 0, 294, 635, 295, 636, 0, 637, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 638,
	639, 640, 0, 303, 304, 641, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 707, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 642, 643, 0, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 346, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 644, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 645, 646, 366, 0, 0, 0,
	0, 0, 0, 0, 367, 368, 369, 647, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 0, 373, 374,
	375, 648, 649, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 708, 385, 650, 0, 651, 386, 0, 387,
	388, 389, 390, 391, 652, 653, 654, 471, 0, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	0, 399, 400, 401, 403, 0, 0, 402, 655, 656,
	0, 657, 0, 404, 405, 0, 658, 0, 406, 407,
	408, 0, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 659, 0,
	420, 421, 0, 0, 422, 0, 0, 0, 423, 424,
	427, 0, 0, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 0, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 0, 467, 456, 0,
	0, 0, 468, 469, 0, 660, 470, 661, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 0, 481, 0, 663, 482, 483,
	475, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 666, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 668, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 669, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 709, 558, 559, 557, 560, 561, 562, 0, 563,
	564, 546, 547, 565, 566, 0, 567, 568, 569, 570,
	571, 572, 573, 670, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 671, 581, 582, 583, 584,
	672, 588, 589, 0, 590, 591, 0, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 673, 674, 675, 676, 0, 609, 0, 601, 602,
	603, 677, 604, 678, 0, 605, 606, 607, 608, 0,
	610, 611, 0, 0, 612, 613, 614, 616, 617, 615,
	618, 0, 619, 0, 0, 620, 621, 622, 679, 680,
	681, 0, 624, 623, 625, 682, 703, 626, 271, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 704, 284, 285, 0, 0, 0, 0, 0,
	632, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 633, 634, 0, 294, 635, 295,
	636, 0, 637, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 638, 639, 640, 0, 303, 304, 641,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 707, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 642, 643,
	0, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 346, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 644, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 645, 646,
	366, 0, 0, 0, 0, 0, 0, 0, 367, 368,
	369, 647, 0, 0, 0, 370, 0, 371, 372, 0,
	0, 0, 373, 374, 375, 648, 649, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 708, 385, 650, 0,
	651, 386, 0, 387, 388, 389, 390, 391, 652, 653,
	654, 471, 0, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 0, 399, 400, 401, 403, 0,
	0, 402, 655, 656, 0, 657, 0, 404, 405, 0,
	658, 0, 406, 407, 408, 0, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 659, 0, 420, 421, 0, 0, 422, 0,
	0, 0, 423, 424, 427, 0, 0, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 0, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	0, 467, 456, 0, 0, 0, 468, 469, 0, 660,
	470, 661, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 0, 481,
	0, 663, 482, 483, 475, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 666, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 668, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	669, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 709, 558, 559, 557, 560,
	561, 562, 0, 563, 564, 546, 547, 565, 566, 0,
	567, 568, 569, 570, 571, 572, 573, 670, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 671,
	581, 582, 583, 584, 672, 588, 589, 0, 590, 591,
	0, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 673, 674, 675, 676, 0,
	609, 0, 601, 602, 603, 677, 604, 678, 0, 605,
	606, 607, 608, 0, 610, 611, 0, 0, 612, 613,
	614, 616, 617, 615, 618, 0, 619, 0, 0, 620,
	621, 622, 679, 680, 681, 271, 624, 623, 625, 682,
	0, 626, 0, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 277, 279, 278, 280, 281, 282, 283, 704,
	284, 285, 0, 0, 0, 0, 0, 632, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 0, 637,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	638, 639, 640, 0, 303, 304, 641, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 707, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 0, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 346, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 0, 0,
	0, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 0, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 708, 385, 650, 0, 651, 386, 0,
	387, 388, 389, 390, 391, 652, 653, 654, 471, 0,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 0, 399, 400, 401, 403, 0, 0, 402, 655,
	656, 0, 657, 0, 404, 405, 0, 658, 0, 406,
	407, 408, 0, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 659,
	0, 420, 421, 0, 0, 422, 0, 0, 0, 423,
	424, 427, 0, 0, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 0, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 0, 467, 456,
	0, 0, 0, 468, 469, 0, 660, 470, 661, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 0, 481, 0, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 709, 558, 559, 557, 560, 561, 562, 0,
	563, 564, 546, 547, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 0, 590, 591, 0, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 673, 674, 675, 676, 0, 609, 0, 601,
	602, 603, 677, 604, 678, 0, 605, 606, 607, 608,
	0, 610, 611, 0, 0, 612, 613, 614, 616, 617,
	615, 618, 0, 619, 0, 0, 620, 621, 622, 679,
	680, 681, 271, 624, 623, 625, 682, 0, 626, 0,
	0, 0, 0, 627, 628, 683, 629, 630, 631, 277,
	279, 278, 280, 281, 282, 283, 704, 284, 285, 0,
	0, 0, 0, 0, 632, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 633, 634,
	0, 294, 635, 295, 636, 0, 637, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 638, 639, 640,
	0, 303, 304, 641, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	707, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 642, 643, 0, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 346,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 644, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 645, 646, 366, 0, 0, 0, 0, 0,
	0, 0, 367, 368, 369, 647, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 0, 373, 374, 375, 648,
	649, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	3955, 385, 650, 0, 651, 386, 0, 387, 388, 389,
	390, 391, 652, 653, 654, 471, 0, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 0, 399,
	400, 401, 403, 0, 0, 402, 655, 656, 0, 657,
	0, 404, 405, 0, 658, 0, 406, 407, 408, 0,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 659, 0, 420, 421,
	0, 0, 422, 0, 0, 0, 423, 424, 427, 0,
	0, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	0, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 0, 467, 456, 0, 0, 0,
	468, 469, 0, 660, 470, 661, 472, 473, 0, 0,
	474, 0, 0, 0, 476, 477, 478, 0, 0, 479,
	480, 662, 0, 481, 0, 663, 482, 483, 475, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 666,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 668, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 669, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 552, 553, 554, 555, 556, 709,
	558, 559, 557, 560, 561, 562, 0, 563, 564, 546,
	547, 565, 566, 0, 567, 568, 569, 570, 571, 572,
	573, 670, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 671, 581, 582, 583, 584, 672, 588,
	589, 0, 590, 591, 0, 587, 578, 0, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 0, 600, 673,
	674, 675, 676, 0, 609, 0, 601, 602, 603, 677,
	604, 678, 0, 605, 606, 607, 608, 0, 610, 611,
	0, 0, 612, 613, 614, 616, 617, 615, 618, 0,
	619, 0, 0, 620, 621, 622, 679, 680, 681, 271,
	624, 623, 625, 682, 0, 626, 0, 0, 0, 0,
	627, 628, 683, 629, 630, 631, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 633, 634, 0, 294, 635,
	295, 636, 0, 637, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 638, 639, 640, 0, 303, 304,
	641, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 642,
	643, 0, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 346, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 644, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 645,
	646, 366, 0, 274, 0, 0, 0, 0, 0, 367,
	368, 369, 647, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 0, 373, 374, 375, 648, 649, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 650,
	0, 651, 386, 0, 387, 388, 389, 390, 391, 652,
	653, 654, 471, 0, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 275, 399, 400, 401, 403,
	0, 0, 402, 655, 656, 0, 657, 0, 404, 405,
	0, 658, 0, 406, 407, 408, 0, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 659, 0, 420, 421, 0, 0, 422,
	0, 0, 0, 423, 424, 427, 0, 0, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 0, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 0, 467, 456, 0, 276, 0, 468, 469, 0,
	660, 470, 661, 472, 473, 0, 0, 474, 0, 0,
	1241, 476, 477, 478, 0, 0, 479, 480, 662, 0,
	481, 0, 663, 482, 483, 475, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 666, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 668, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 669, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 0, 563, 564, 546, 547, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 670, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	671, 581, 582, 583, 584, 672, 588, 589, 0, 590,
	591, 0, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 673, 674, 675, 676,
	0, 609, 0, 601, 602, 603, 677, 604, 678, 0,
	605, 606, 607, 608, 0, 610, 611, 0, 0, 612,
	613, 614, 616, 617, 615, 618, 0, 619, 0, 0,
	620, 621, 622, 679, 680, 681, 271, 624, 623, 625,
	682, 0, 626, 0, 0, 0, 0, 627, 628, 683,
	629, 630, 631, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 632, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 0,
	637, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 638, 639, 640, 0, 303, 304, 641, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 0, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 346, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 0,
	274, 0, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 0,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 650, 0, 651, 386,
	0, 387, 388, 389, 390, 391, 652, 653, 654, 471,
	0, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 275, 399, 400, 401, 403, 0, 0, 402,
	655, 656, 0, 657, 0, 404, 405, 0, 658, 0,
	406, 407, 408, 0, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	659, 0, 420, 421, 0, 0, 422, 0, 0, 0,
	423, 424, 427, 0, 0, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 0, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 3497, 467,
	456, 0, 276, 0, 468, 469, 0, 660, 470, 661,
	472, 473, 0, 0, 474, 0, 0, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 0, 481, 0, 663,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 669, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 0, 558, 559, 557, 560, 561, 562,
	0, 563, 564, 546, 547, 565, 566, 0, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 0, 590, 591, 0, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 673, 674, 675, 676, 0, 609, 0,
	601, 602, 603, 677, 604, 678, 0, 605, 606, 607,
	608, 0, 610, 611, 0, 0, 612, 613, 614, 616,
	617, 615, 618, 0, 619, 0, 0, 620, 621, 622,
	679, 680, 681, 0, 624, 623, 625, 682, 3041, 626,
	271, 0, 0, 0, 627, 628, 683, 629, 630, 631,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 633, 634, 0, 294,
	635, 295, 636, 0, 637, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 638, 639, 640, 0, 303,
	304, 641, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	642, 643, 0, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 346, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 644,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	645, 646, 366, 0, 274, 0, 0, 0, 0, 0,
	367, 368, 369, 647, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 0, 373, 374, 375, 648, 649, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	650, 0, 651, 386, 0, 387, 388, 389, 390, 391,
	3040, 653, 654, 471, 0, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 275, 399, 400, 401,
	403, 0, 0, 402, 655, 656, 0, 657, 0, 404,
	405, 0, 658, 0, 406, 407, 408, 0, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 659, 0, 420, 421, 0, 0,
	422, 0, 0, 0, 423, 424, 427, 0, 0, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 0, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 0, 467, 456, 0, 276, 0, 468, 469,
	0, 660, 470, 661, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	0, 481, 0, 663, 482, 483, 475, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 666, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 668, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 669, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 0, 563, 564, 546, 547, 565,
	566, 0, 567, 568, 569, 570, 571, 572, 573, 670,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 671, 581, 582, 583, 584, 672, 588, 589, 0,
	590, 591, 0, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 673, 674, 675,
	676, 0, 609, 0, 601, 602, 603, 677, 604, 678,
	0, 605, 606, 607, 608, 0, 610, 611, 0, 0,
	612, 613, 614, 616, 617, 615, 618, 0, 619, 0,
	0, 620, 621, 622, 679, 680, 681, 0, 624, 623,
	625, 682, 2323, 626, 271, 0, 0, 0, 627, 628,
	683, 629, 630, 631, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 632, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	633, 634, 0, 294, 635, 295, 636, 0, 637, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 638,
	639, 640, 0, 303, 304, 641, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 642, 643, 0, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 346, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 644, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 645, 646, 366, 0, 274, 0,
	0, 0, 0, 0, 367, 368, 369, 647, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 0, 373, 374,
	375, 648, 649, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 650, 0, 651, 386, 0, 387,
	388, 389, 390, 391, 652, 653, 654, 471, 0, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	275, 399, 400, 401, 403, 0, 0, 402, 655, 656,
	0, 657, 0, 404, 405, 0, 658, 0, 406, 407,
	408, 0, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 659, 0,
	420, 421, 0, 0, 422, 0, 0, 0, 423, 424,
	427, 0, 0, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 0, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 0, 467, 456, 0,
	276, 0, 468, 469, 0, 660, 470, 661, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 0, 481, 0, 663, 482, 483,
	475, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 666, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 668, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 669, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 0, 563,
	564, 546, 547, 565, 566, 0, 567, 568, 569, 570,
	571, 572, 573, 670, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 671, 581, 582, 583, 584,
	672, 588, 589, 0, 590, 591, 0, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 673, 674, 675, 676, 0, 609, 0, 601, 602,
	603, 677, 604, 678, 0, 605, 606, 607, 608, 0,
	610, 611, 0, 0, 612, 613, 614, 616, 617, 615,
	618, 0, 619, 0, 0, 620, 621, 622, 679, 680,
	681, 271, 624, 623, 625, 682, 0, 626, 0, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 633, 634, 0,
	294, 635, 295, 636, 0, 637, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 638, 639, 640, 0,
	303, 304, 641, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 642, 643, 0, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 346, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	644, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 645, 646, 366, 0, 274, 0, 0, 0, 0,
	0, 367, 368, 369, 647, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 0, 373, 374, 375, 648, 649,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 650, 0, 651, 386, 0, 387, 388, 389, 390,
	391, 652, 653, 654, 471, 0, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 275, 399, 400,
	401, 403, 0, 0, 402, 655, 656, 0, 657, 0,
	404, 405, 0, 658, 0, 406, 407, 408, 0, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 659, 0, 420, 421, 0,
	0, 422, 0, 0, 0, 423, 424, 427, 0, 0,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 0,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 0, 467, 456, 0, 276, 0, 468,
	469, 0, 660, 470, 661, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	662, 0, 481, 0, 663, 482, 483, 475, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 666, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 668, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 669, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 0, 558,
	559, 557, 560, 561, 562, 0, 563, 564, 546, 547,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	670, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 671, 581, 582, 583, 584, 672, 588, 589,
	0, 590, 591, 0, 587, 578, 2262, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 673, 674,
	675, 676, 0, 609, 0, 601, 602, 603, 677, 604,
	678, 0, 605, 606, 607, 608, 0, 610, 611, 0,
	0, 612, 613, 614, 616, 617, 615, 618, 0, 619,
	0, 0, 620, 621, 622, 679, 680, 681, 0, 624,
	623, 625, 682, 2269, 626, 271, 0, 0, 0, 627,
	628, 683, 629, 630, 631, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 632, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 0, 637,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	638, 639, 640, 0, 303, 304, 641, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 0, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 346, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 0, 274,
	0, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 0, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 650, 0, 651, 386, 0,
	387, 388, 389, 390, 391, 2268, 653, 654, 471, 0,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 275, 399, 400, 401, 403, 0, 0, 402, 655,
	656, 0, 657, 0, 404, 405, 0, 658, 0, 406,
	407, 408, 0, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 659,
	0, 420, 421, 0, 0, 422, 0, 0, 0, 423,
	424, 427, 0, 0, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 0, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 0, 467, 456,
	0, 276, 0, 468, 469, 0, 660, 470, 661, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 0, 481, 0, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 561, 562, 0,
	563, 564, 546, 547, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 0, 590, 591, 0, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 673, 674, 675, 676, 0, 609, 0, 601,
	602, 603, 677, 604, 678, 0, 605, 606, 607, 608,
	0, 610, 611, 0, 0, 612, 613, 614, 616, 617,
	615, 618, 0, 619, 0, 0, 620, 621, 622, 679,
	680, 681, 0, 624, 623, 625, 682, 2255, 626, 271,
	0, 0, 0, 627, 628, 683, 629, 630, 631, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 633, 634, 0, 294, 635,
	295, 636, 0, 637, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 638, 639, 640, 0, 303, 304,
	641, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 642,
	643, 0, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 346, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 644, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 645,
	646, 366, 0, 274, 0, 0, 0, 0, 0, 367,
	368, 369, 647, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 0, 373, 374, 375, 648, 649, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 650,
	0, 651, 386, 0, 387, 388, 389, 390, 391, 2257,
	653, 654, 471, 0, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 275, 399, 400, 401, 403,
	0, 0, 402, 655, 656, 0, 657, 0, 404, 405,
	0, 658, 0, 406, 407, 408, 0, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 659, 0, 420, 421, 0, 0, 422,
	0, 0, 0, 423, 424, 427, 0, 0, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 0, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 0, 467, 456, 0, 276, 0, 468, 469, 0,
	660, 470, 661, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 0,
	481, 0, 663, 482, 483, 475, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 666, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 668, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 669, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 0, 563, 564, 546, 547, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 670, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	671, 581, 582, 583, 584, 672, 588, 589, 0, 590,
	591, 0, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 673, 674, 675, 676,
	0, 609, 0, 601, 602, 603, 677, 604, 678, 0,
	605, 606, 607, 608, 0, 610, 611, 0, 0, 612,
	613, 614, 616, 617, 615, 618, 0, 619, 0, 0,
	620, 621, 622, 679, 680, 681, 271, 624, 623, 625,
	682, 0, 626, 0, 0, 0, 0, 627, 628, 683,
	629, 630, 631, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 632, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 0,
	637, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 638, 639, 640, 0, 303, 304, 641, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 0, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 346, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 0,
	274, 0, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 0,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 650, 0, 651, 386,
	0, 387, 388, 389, 390, 391, 2221, 653, 654, 471,
	0, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 275, 399, 400, 401, 403, 0, 0, 402,
	655, 656, 0, 657, 0, 404, 405, 0, 658, 0,
	406, 407, 408, 0, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	659, 0, 420, 421, 0, 0, 422, 0, 0, 0,
	423, 424, 427, 0, 0, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 0, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 0, 467,
	456, 0, 276, 0, 468, 469, 0, 660, 470, 661,
	472, 473, 0, 0, 474, 0, 0, 1241, 476, 477,
	478, 0, 0, 479, 480, 662, 0, 481, 0, 663,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 669, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 0, 558, 559, 557, 560, 561, 562,
	0, 563, 564, 546, 547, 565, 566, 0, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 0, 590, 591, 0, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 673, 674, 675, 676, 0, 609, 0,
	601, 602, 603, 677, 604, 678, 0, 605, 606, 607,
	608, 0, 610, 611, 0, 0, 612, 613, 614, 616,
	617, 615, 618, 0, 619, 0, 0, 620, 621, 622,
	679, 680, 681, 0, 624, 623, 625, 682, 1586, 626,
	271, 0, 0, 0, 627, 628, 683, 629, 630, 631,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 633, 634, 0, 294,
	635, 295, 636, 0, 637, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 638, 639, 640, 0, 303,
	304, 641, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	642, 643, 0, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 346, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 644,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	645, 646, 366, 0, 274, 0, 0, 0, 0, 0,
	367, 368, 369, 647, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 0, 373, 374, 375, 648, 649, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	650, 0, 651, 386, 0, 387, 388, 389, 390, 391,
	1585, 653, 654, 471, 0, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 275, 399, 400, 401,
	403, 0, 0, 402, 655, 656, 0, 657, 0, 404,
	405, 0, 658, 0, 406, 407, 408, 0, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 659, 0, 420, 421, 0, 0,
	422, 0, 0, 0, 423, 424, 427, 0, 0, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 0, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 0, 467, 456, 0, 276, 0, 468, 469,
	0, 660, 470, 661, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	0, 481, 0, 663, 482, 483, 475, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 666, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 668, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 669, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 0, 563, 564, 546, 547, 565,
	566, 0, 567, 568, 569, 570, 571, 572, 573, 670,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 671, 581, 582, 583, 584, 672, 588, 589, 0,
	590, 591, 0, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 673, 674, 675,
	676, 0, 609, 0, 601, 602, 603, 677, 604, 678,
	0, 605, 606, 607, 608, 0, 610, 611, 0, 0,
	612, 613, 614, 616, 617, 615, 618, 0, 619, 0,
	0, 620, 621, 622, 679, 680, 681, 0, 624, 623,
	625, 682, 1498, 626, 271, 0, 0, 0, 627, 628,
	683, 629, 630, 631, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 632, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	633, 634, 0, 294, 635, 295, 636, 0, 637, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 638,
	639, 640, 0, 303, 304, 641, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 642, 643, 0, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 346, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 644, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 645, 646, 366, 0, 274, 0,
	0, 0, 0, 0, 367, 368, 369, 647, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 0, 373, 374,
	375, 648, 649, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 650, 0, 651, 386, 0, 387,
	388, 389, 390, 391, 652, 653, 654, 471, 0, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	275, 399, 400, 401, 403, 0, 0, 402, 655, 656,
	0, 657, 0, 404, 405, 0, 658, 0, 406, 407,
	408, 0, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 659, 0,
	420, 421, 0, 0, 422, 0, 0, 0, 423, 424,
	427, 0, 0, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 0, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 0, 467, 456, 0,
	276, 0, 468, 469, 0, 660, 470, 661, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 0, 481, 0, 663, 482, 483,
	475, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 666, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 668, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 669, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 0, 563,
	564, 546, 547, 565, 566, 0, 567, 568, 569, 570,
	571, 572, 573, 670, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 671, 581, 582, 583, 584,
	672, 588, 589, 0, 590, 591, 0, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 673, 674, 675, 676, 0, 609, 0, 601, 602,
	603, 677, 604, 678, 0, 605, 606, 607, 608, 0,
	610, 611, 0, 0, 612, 613, 614, 616, 617, 615,
	618, 0, 619, 0, 0, 620, 621, 622, 679, 680,
	681, 0, 624, 623, 625, 682, 1491, 626, 271, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	632, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 633, 634, 0, 294, 635, 295,
	636, 0, 637, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 638, 639, 640, 0, 303, 304, 641,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 642, 643,
	0, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 346, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 644, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 645, 646,
	366, 0, 274, 0, 0, 0, 0, 0, 367, 368,
	369, 647, 0, 0, 0, 370, 0, 371, 372, 0,
	0, 0, 373, 374, 375, 648, 649, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 650, 0,
	651, 386, 0, 387, 388, 389, 390, 391, 1493, 653,
	654, 471, 0, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 275, 399, 400, 401, 403, 0,
	0, 402, 655, 656, 0, 657, 0, 404, 405, 0,
	658, 0, 406, 407, 408, 0, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 659, 0, 420, 421, 0, 0, 422, 0,
	0, 0, 423, 424, 427, 0, 0, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 0, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	0, 467, 456, 0, 276, 0, 468, 469, 0, 660,
	470, 661, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 0, 481,
	0, 663, 482, 483, 475, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 666, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 668, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	669, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 0, 563, 564, 546, 547, 565, 566, 0,
	567, 568, 569, 570, 571, 572, 573, 670, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 671,
	581, 582, 583, 584, 672, 588, 589, 0, 590, 591,
	0, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 673, 674, 675, 676, 0,
	609, 0, 601, 602, 603, 677, 604, 678, 0, 605,
	606, 607, 608, 0, 610, 611, 0, 0, 612, 613,
	614, 616, 617, 615, 618, 0, 619, 0, 0, 620,
	621, 622, 679, 680, 681, 0, 624, 623, 625, 682,
	1315, 626, 271, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 632, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 633, 634,
	0, 294, 635, 295, 636, 0, 637, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 638, 639, 640,
	0, 303, 304, 641, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 642, 643, 0, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 346,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 644, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 645, 646, 366, 0, 274, 0, 0, 0,
	0, 0, 367, 368, 369, 647, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 0, 373, 374, 375, 648,
	649, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 650, 0, 651, 386, 0, 387, 388, 389,
	390, 391, 1314, 653, 654, 471, 0, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 275, 399,
	400, 401, 403, 0, 0, 402, 655, 656, 0, 657,
	0, 404, 405, 0, 658, 0, 406, 407, 408, 0,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 659, 0, 420, 421,
	0, 0, 422, 0, 0, 0, 423, 424, 427, 0,
	0, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	0, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 0, 467, 456, 0, 276, 0,
	468, 469, 0, 660, 470, 661, 472, 473, 0, 0,
	474, 0, 0, 0, 476, 477, 478, 0, 0, 479,
	480, 662, 0, 481, 0, 663, 482, 483, 475, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 666,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 668, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 669, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 552, 553, 554, 555, 556, 0,
	558, 559, 557, 560, 561, 562, 0, 563, 564, 546,
	547, 565, 566, 0, 567, 568, 569, 570, 571, 572,
	573, 670, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 671, 581, 582, 583, 584, 672, 588,
	589, 0, 590, 591, 0, 587, 578, 0, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 0, 600, 673,
	674, 675, 676, 0, 609, 0, 601, 602, 603, 677,
	604, 678, 0, 605, 606, 607, 608, 0, 610, 611,
	0, 0, 612, 613, 614, 616, 617, 615, 618, 0,
	619, 0, 0, 620, 621, 622, 679, 680, 681, 0,
	624, 623, 625, 682, 1305, 626, 271, 0, 0, 0,
	627, 628, 683, 629, 630, 631, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 632, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 0,
	637, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 638, 639, 640, 0, 303, 304, 641, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 0, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 346, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 0,
	274, 0, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 0,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 650, 0, 651, 386,
	0, 387, 388, 389, 390, 391, 1304, 653, 654, 471,
	0, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 275, 399, 400, 401, 403, 0, 0, 402,
	655, 656, 0, 657, 0, 404, 405, 0, 658, 0,
	406, 407, 408, 0, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	659, 0, 420, 421, 0, 0, 422, 0, 0, 0,
	423, 424, 427, 0, 0, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 0, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 0, 467,
	456, 0, 276, 0, 468, 469, 0, 660, 470, 661,
	472, 473, 0, 0, 474, 0, 0, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 0, 481, 0, 663,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 669, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 0, 558, 559, 557, 560, 561, 562,
	0, 563, 564, 546, 547, 565, 566, 0, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 0, 590, 591, 0, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 673, 674, 675, 676, 0, 609, 0,
	601, 602, 603, 677, 604, 678, 0, 605, 606, 607,
	608, 0, 610, 611, 0, 0, 612, 613, 614, 616,
	617, 615, 618, 0, 619, 0, 0, 620, 621, 622,
	679, 680, 681, 0, 624, 623, 625, 682, 1302, 626,
	271, 0, 0, 0, 627, 628, 683, 629, 630, 631,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 633, 634, 0, 294,
	635, 295, 636, 0, 637, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 638, 639, 640, 0, 303,
	304, 641, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	642, 643, 0, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 346, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 644,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	645, 646, 366, 0, 274, 0, 0, 0, 0, 0,
	367, 368, 369, 647, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 0, 373, 374, 375, 648, 649, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	650, 0, 651, 386, 0, 387, 388, 389, 390, 391,
	1301, 653, 654, 471, 0, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 275, 399, 400, 401,
	403, 0, 0, 402, 655, 656, 0, 657, 0, 404,
	405, 0, 658, 0, 406, 407, 408, 0, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 659, 0, 420, 421, 0, 0,
	422, 0, 0, 0, 423, 424, 427, 0, 0, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 0, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 0, 467, 456, 0, 276, 0, 468, 469,
	0, 660, 470, 661, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	0, 481, 0, 663, 482, 483, 475, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 666, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 668, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 669, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 0, 563, 564, 546, 547, 565,
	566, 0, 567, 568, 569, 570, 571, 572, 573, 670,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 671, 581, 582, 583, 584, 672, 588, 589, 0,
	590, 591, 0, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 673, 674, 675,
	676, 0, 609, 0, 601, 602, 603, 677, 604, 678,
	0, 605, 606, 607, 608, 0, 610, 611, 0, 0,
	612, 613, 614, 616, 617, 615, 618, 0, 619, 0,
	0, 620, 621, 622, 679, 680, 681, 0, 624, 623,
	625, 682, 1297, 626, 271, 0, 0, 0, 627, 628,
	683, 629, 630, 631, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 632, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	633, 634, 0, 294, 635, 295, 636, 0, 637, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 638,
	639, 640, 0, 303, 304, 641, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 642, 643, 0, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 346, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 644, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 645, 646, 366, 0, 274, 0,
	0, 0, 0, 0, 367, 368, 369, 647, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 0, 373, 374,
	375, 648, 649, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 650, 0, 651, 386, 0, 387,
	388, 389, 390, 391, 1296, 653, 654, 471, 0, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	275, 399, 400, 401, 403, 0, 0, 402, 655, 656,
	0, 657, 0, 404, 405, 0, 658, 0, 406, 407,
	408, 0, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 659, 0,
	420, 421, 0, 0, 422, 0, 0, 0, 423, 424,
	427, 0, 0, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 0, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 0, 467, 456, 0,
	276, 0, 468, 469, 0, 660, 470, 661, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 0, 481, 0, 663, 482, 483,
	475, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 666, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 668, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 669, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 0, 563,
	564, 546, 547, 565, 566, 0, 567, 568, 569, 570,
	571, 572, 573, 670, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 671, 581, 582, 583, 584,
	672, 588, 589, 0, 590, 591, 0, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 673, 674, 675, 676, 0, 609, 0, 601, 602,
	603, 677, 604, 678, 0, 605, 606, 607, 608, 0,
	610, 611, 0, 0, 612, 613, 614, 616, 617, 615,
	618, 0, 619, 0, 0, 620, 621, 622, 679, 680,
	681, 0, 624, 623, 625, 682, 685, 626, 271, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	632, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 633, 634, 0, 294, 635, 295,
	636, 0, 637, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 638, 639, 640, 0, 303, 304, 641,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 642, 643,
	0, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 346, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 644, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 645, 646,
	366, 0, 274, 0, 0, 0, 0, 0, 367, 368,
	369, 647, 0, 0, 0, 370, 0, 371, 372, 0,
	0, 0, 373, 374, 375, 648, 649, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 650, 0,
	651, 386, 0, 387, 388, 389, 390, 391, 652, 653,
	654, 471, 0, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 275, 399, 400, 401, 403, 0,
	0, 402, 655, 656, 0, 657, 0, 404, 405, 0,
	658, 0, 406, 407, 408, 0, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 659, 0, 420, 421, 0, 0, 422, 0,
	0, 0, 423, 424, 427, 0, 0, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 0, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	0, 467, 456, 0, 276, 0, 468, 469, 0, 660,
	470, 661, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 0, 481,
	0, 663, 482, 483, 475, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 666, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 668, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	669, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 0, 563, 564, 546, 547, 565, 566, 0,
	567, 568, 569, 570, 571, 572, 573, 670, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 671,
	581, 582, 583, 584, 672, 588, 589, 0, 590, 591,
	0, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 673, 674, 675, 676, 0,
	609, 0, 601, 602, 603, 677, 604, 678, 0, 605,
	606, 607, 608, 0, 610, 611, 0, 0, 612, 613,
	614, 616, 617, 615, 618, 0, 619, 0, 0, 620,
	621, 622, 679, 680, 681, 0, 624, 623, 625, 682,
	262, 626, 271, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 632, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 633, 634,
	0, 294, 635, 295, 636, 0, 637, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 638, 639, 640,
	0, 303, 304, 641, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 642, 643, 0, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 346,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 644, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 645, 646, 366, 0, 274, 0, 0, 0,
	0, 0, 367, 368, 369, 647, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 0, 373, 374, 375, 648,
	649, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 650, 0, 651, 386, 0, 387, 388, 389,
	390, 391, 652, 653, 654, 471, 0, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 275, 399,
	400, 401, 403, 0, 0, 402, 655, 656, 0, 657,
	0, 404, 405, 0, 658, 0, 406, 407, 408, 0,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 659, 0, 420, 421,
	0, 0, 422, 0, 0, 0, 423, 424, 427, 0,
	0, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	0, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 0, 467, 456, 0, 276, 0,
	468, 469, 0, 660, 470, 661, 472, 473, 0, 0,
	474, 0, 0, 0, 476, 477, 478, 0, 0, 479,
	480, 662, 0, 481, 0, 663, 482, 483, 475, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 666,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 668, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 669, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 552, 553, 554, 555, 556, 0,
	558, 559, 557, 560, 561, 562, 0, 563, 564, 546,
	547, 565, 566, 0, 567, 568, 569, 570, 571, 572,
	573, 670, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 671, 581, 582, 583, 584, 672, 588,
	589, 0, 590, 591, 0, 587, 578, 0, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 0, 600, 673,
	674, 675, 676, 0, 609, 0, 601, 602, 603, 677,
	604, 678, 0, 605, 606, 607, 608, 0, 610, 611,
	0, 0, 612, 613, 614, 616, 617, 615, 618, 0,
	619, 0, 0, 620, 621, 622, 679, 680, 681, 271,
	624, 623, 625, 682, 0, 626, 0, 0, 0, 0,
	627, 628, 683, 629, 630, 631, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 633, 634, 0, 294, 635,
	295, 636, 0, 637, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 638, 639, 640, 0, 303, 304,
	641, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 642,
	643, 0, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 346, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 644, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 645,
	646, 366, 0, 274, 0, 0, 0, 0, 0, 367,
	368, 369, 647, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 0, 373, 374, 375, 648, 649, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 650,
	0, 651, 386, 0, 387, 388, 389, 390, 391, 652,
	653, 654, 471, 0, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 275, 399, 400, 401, 403,
	0, 0, 402, 655, 656, 0, 657, 0, 404, 405,
	0, 658, 0, 406, 407, 408, 0, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 659, 0, 420, 421, 0, 0, 422,
	0, 0, 0, 423, 424, 427, 0, 0, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 0, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 0, 467, 456, 0, 276, 0, 468, 469, 0,
	660, 470, 661, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 0,
	481, 0, 663, 482, 483, 475, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 666, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 668, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 669, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 0, 563, 564, 546, 547, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 670, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	671, 581, 582, 583, 584, 672, 588, 589, 0, 590,
	591, 0, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 673, 674, 675, 676,
	0, 609, 0, 601, 602, 603, 677, 604, 678, 0,
	605, 606, 607, 608, 0, 610, 611, 0, 0, 612,
	613, 614, 616, 617, 615, 618, 0, 619, 0, 0,
	620, 621, 622, 679, 680, 681, 271, 624, 623, 625,
	682, 0, 626, 0, 0, 0, 0, 627, 628, 683,
	629, 630, 631, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 632, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 0,
	637, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 638, 639, 640, 0, 303, 304, 641, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 707, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 0, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 346, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 0,
	0, 0, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 0,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 708, 385, 650, 0, 651, 386,
	0, 387, 388, 389, 390, 391, 652, 653, 654, 471,
	0, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 0, 399, 400, 401, 403, 0, 0, 402,
	655, 656, 0, 657, 0, 404, 405, 0, 658, 0,
	406, 407, 408, 0, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	659, 0, 420, 421, 0, 0, 422, 0, 0, 0,
	423, 424, 427, 0, 0, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 0, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 0, 467,
	456, 0, 0, 0, 468, 469, 0, 660, 470, 661,
	472, 473, 0, 0, 474, 0, 0, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 0, 481, 0, 663,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 669, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 709, 558, 559, 557, 560, 561, 562,
	0, 563, 564, 546, 547, 565, 566, 0, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 0, 590, 591, 0, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 673, 674, 675, 676, 0, 609, 0,
	601, 602, 603, 677, 604, 678, 0, 605, 606, 607,
	608, 0, 610, 611, 0, 0, 612, 613, 614, 616,
	617, 615, 618, 0, 619, 0, 0, 620, 621, 622,
	679, 680, 681, 271, 624, 623, 625, 682, 0, 626,
	0, 0, 0, 0, 627, 628, 683, 629, 630, 631,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 632, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 633,
	634, 0, 294, 635, 295, 636, 0, 637, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 638, 639,
	640, 0, 303, 304, 641, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 2363,
	334, 0, 335, 642, 643, 0, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	346, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 644, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 645, 646, 366, 0, 274, 0, 0,
	0, 0, 0, 367, 368, 369, 647, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 0, 373, 374, 375,
	648, 649, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 650, 0, 651, 386, 0, 387, 388,
	389, 390, 391, 652, 653, 654, 471, 0, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 275,
	399, 400, 401, 403, 0, 0, 402, 655, 656, 0,
	657, 0, 404, 405, 0, 658, 0, 406, 407, 408,
	0, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 659, 0, 420,
	421, 0, 0, 422, 0, 0, 0, 423, 424, 427,
	0, 0, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 0, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 0, 467, 456, 0, 276,
	0, 468, 469, 0, 660, 470, 661, 472, 473, 0,
	0, 474, 0, 0, 0, 476, 477, 478, 0, 0,
	479, 480, 662, 0, 481, 0, 663, 482, 483, 475,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	666, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 668, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 669, 541, 0, 542, 543,
	549, 550, 551, 544, 545, 552, 553, 554, 555, 556,
	0, 558, 559, 557, 560, 561, 562, 0, 563, 564,
	546, 547, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 670, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 671, 581, 582, 583, 584, 672,
	588, 589, 0, 590, 591, 0, 587, 578, 0, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	673, 674, 675, 676, 0, 609, 0, 601, 602, 603,
	677, 604, 678, 0, 605, 606, 607, 608, 0, 610,
	611, 0, 0, 612, 613, 614, 616, 617, 615, 618,
	0, 619, 0, 0, 620, 621, 622, 679, 680, 681,
	271, 624, 623, 625, 682, 0, 626, 0, 0, 0,
	0, 627, 628, 683, 629, 630, 631, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 633, 634, 0, 294,
	635, 295, 636, 0, 637, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 638, 639, 640, 0, 303,
	304, 641, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 2361, 334, 0, 335,
	642, 643, 0, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 346, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 644,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	645, 646, 366, 0, 274, 0, 0, 0, 0, 0,
	367, 368, 369, 647, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 0, 373, 374, 375, 648, 649, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	650, 0, 651, 386, 0, 387, 388, 389, 390, 391,
	652, 653, 654, 471, 0, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 275, 399, 400, 401,
	403, 0, 0, 402, 655, 656, 0, 657, 0, 404,
	405, 0, 658, 0, 406, 407, 408, 0, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 659, 0, 420, 421, 0, 0,
	422, 0, 0, 0, 423, 424, 427, 0, 0, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 0, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 0, 467, 456, 0, 276, 0, 468, 469,
	0, 660, 470, 661, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	0, 481, 0, 663, 482, 483, 475, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 666, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 668, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 669, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 0, 563, 564, 546, 547, 565,
	566, 0, 567, 568, 569, 570, 571, 572, 573, 670,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 671, 581, 582, 583, 584, 672, 588, 589, 0,
	590, 591, 0, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 673, 674, 675,
	676, 0, 609, 0, 601, 602, 603, 677, 604, 678,
	0, 605, 606, 607, 608, 0, 610, 611, 0, 0,
	612, 613, 614, 616, 617, 615, 618, 0, 619, 0,
	0, 620, 621, 622, 679, 680, 681, 271, 624, 623,
	625, 682, 0, 626, 0, 0, 0, 0, 627, 628,
	683, 629, 630, 631, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 632,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 633, 634, 0, 294, 635, 295, 636,
	0, 637, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 638, 639, 640, 0, 303, 304, 641, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 2359, 334, 0, 335, 642, 643, 0,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 346, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 644, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 645, 646, 366,
	0, 274, 0, 0, 0, 0, 0, 367, 368, 369,
	647, 0, 0, 0, 370, 0, 371, 372, 0, 0,
	0, 373, 374, 375, 648, 649, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 650, 0, 651,
	386, 0, 387, 388, 389, 390, 391, 652, 653, 654,
	471, 0, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 275, 399, 400, 401, 403, 0, 0,
	402, 655, 656, 0, 657, 0, 404, 405, 0, 658,
	0, 406, 407, 408, 0, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 659, 0, 420, 421, 0, 0, 422, 0, 0,
	0, 423, 424, 427, 0, 0, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 0, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 0,
	467, 456, 0, 276, 0, 468, 469, 0, 660, 470,
	661, 472, 473, 0, 0, 474, 0, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 0, 481, 0,
	663, 482, 483, 475, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 666, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	668, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 669,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 0, 563, 564, 546, 547, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 670, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 671, 581,
	582, 583, 584, 672, 588, 589, 0, 590, 591, 0,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 673, 674, 675, 676, 0, 609,
	0, 601, 602, 603, 677, 604, 678, 0, 605, 606,
	607, 608, 0, 610, 611, 0, 0, 612, 613, 614,
	616, 617, 615, 618, 0, 619, 0, 0, 620, 621,
	622, 679, 680, 681, 271, 624, 623, 625, 682, 0,
	626, 0, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 632, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	633, 634, 0, 294, 635, 295, 636, 0, 637, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 638,
	639, 640, 0, 303, 304, 641, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 642, 643, 0, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 346, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 644, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 645, 646, 366, 0, 274, 0,
	0, 0, 0, 0, 367, 368, 369, 647, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 0, 373, 374,
	375, 648, 649, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 650, 0, 651, 386, 0, 387,
	388, 389, 390, 391, 2275, 653, 654, 471, 0, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	275, 399, 400, 401, 403, 0, 0, 402, 655, 656,
	0, 657, 0, 404, 405, 0, 658, 0, 406, 407,
	408, 0, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 659, 0,
	420, 421, 0, 0, 422, 0, 0, 0, 423, 424,
	427, 0, 0, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 0, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 0, 467, 456, 0,
	276, 0, 468, 469, 0, 660, 470, 661, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 0, 481, 0, 663, 482, 483,
	475, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 666, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 668, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 669, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 0, 563,
	564, 546, 547, 565, 566, 0, 567, 568, 569, 570,
	571, 572, 573, 670, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 671, 581, 582, 583, 584,
	672, 588, 589, 0, 590, 591, 0, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 673, 674, 675, 676, 0, 609, 0, 601, 602,
	603, 677, 604, 678, 0, 605, 606, 607, 608, 0,
	610, 611, 0, 0, 612, 613, 614, 616, 617, 615,
	618, 0, 619, 0, 0, 620, 621, 622, 679, 680,
	681, 271, 624, 623, 625, 682, 0, 626, 0, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 633, 634, 0,
	294, 635, 295, 636, 0, 637, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 638, 639, 640, 0,
	303, 304, 641, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 642, 643, 0, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 346, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	644, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 645, 646, 366, 0, 274, 0, 0, 0, 0,
	0, 367, 368, 369, 647, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 0, 373, 374, 375, 648, 649,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 650, 0, 651, 386, 0, 387, 388, 389, 390,
	391, 2069, 653, 654, 471, 0, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 275, 399, 400,
	401, 403, 0, 0, 402, 655, 656, 0, 657, 0,
	404, 405, 0, 658, 0, 406, 407, 408, 0, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 659, 0, 420, 421, 0,
	0, 422, 0, 0, 0, 423, 424, 427, 0, 0,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 0,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 0, 467, 456, 0, 276, 0, 468,
	469, 0, 660, 470, 661, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	662, 0, 481, 0, 663, 482, 483, 475, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 666, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 668, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 669, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 0, 558,
	559, 557, 560, 561, 562, 0, 563, 564, 546, 547,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	670, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 671, 581, 582, 583, 584, 672, 588, 589,
	0, 590, 591, 0, 587, 578, 0, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 673, 674,
	675, 676, 0, 609, 0, 601, 602, 603, 677, 604,
	678, 0, 605, 606, 607, 608, 0, 610, 611, 0,
	0, 612, 613, 614, 616, 617, 615, 618, 0, 619,
	0, 0, 620, 621, 622, 679, 680, 681, 271, 624,
	623, 625, 682, 0, 626, 0, 0, 0, 0, 627,
	628, 683, 629, 630, 631, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	632, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 633, 634, 0, 294, 635, 295,
	636, 0, 637, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 638, 639, 640, 0, 303, 304, 641,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 642, 643,
	0, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 346, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 644, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 645, 646,
	366, 0, 274, 0, 0, 0, 0, 0, 367, 368,
	369, 647, 0, 0, 0, 370, 0, 371, 372, 0,
	0, 0, 373, 374, 375, 648, 649, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 650, 0,
	651, 386, 0, 387, 388, 389, 390, 391, 2063, 653,
	654, 471, 0, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 275, 399, 400, 401, 403, 0,
	0, 402, 655, 656, 0, 657, 0, 404, 405, 0,
	658, 0, 406, 407, 408, 0, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 659, 0, 420, 421, 0, 0, 422, 0,
	0, 0, 423, 424, 427, 0, 0, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 0, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	0, 467, 456, 0, 276, 0, 468, 469, 0, 660,
	470, 661, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 0, 481,
	0, 663, 482, 483, 475, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 666, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 668, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	669, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 0, 563, 564, 546, 547, 565, 566, 0,
	567, 568, 569, 570, 571, 572, 573, 670, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 671,
	581, 582, 583, 584, 672, 588, 589, 0, 590, 591,
	0, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 673, 674, 675, 676, 0,
	609, 0, 601, 602, 603, 677, 604, 678, 0, 605,
	606, 607, 608, 0, 610, 611, 0, 0, 612, 613,
	614, 616, 617, 615, 618, 0, 619, 0, 0, 620,
	621, 622, 679, 680, 681, 0, 624, 623, 625, 682,
	892, 626, 271, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 632, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 633, 634,
	0, 294, 635, 295, 636, 0, 637, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 638, 639, 640,
	0, 303, 304, 641, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 642, 643, 0, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 346,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 644, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 645, 646, 366, 0, 0, 0, 0, 0,
	0, 0, 367, 368, 369, 647, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 0, 373, 374, 375, 648,
	649, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 650, 0, 651, 386, 0, 387, 388, 389,
	390, 391, 652, 653, 654, 471, 0, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 0, 399,
	400, 401, 403, 0, 0, 402, 655, 656, 0, 657,
	891, 404, 405, 0, 658, 0, 406, 407, 408, 0,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 659, 0, 420, 421,
	0, 0, 422, 0, 0, 0, 423, 424, 427, 0,
	0, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	0, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 0, 467, 456, 0, 0, 0,
	468, 469, 0, 660, 470, 661, 472, 473, 0, 0,
	474, 0, 0, 0, 476, 477, 478, 0, 0, 479,
	480, 662, 0, 481, 0, 663, 482, 483, 475, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 666,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 668, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 669, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 552, 553, 554, 555, 556, 0,
	558, 559, 557, 560, 561, 562, 0, 563, 564, 546,
	547, 565, 566, 0, 567, 568, 569, 570, 571, 572,
	573, 670, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 671, 581, 582, 583, 584, 672, 588,
	589, 0, 590, 591, 0, 587, 578, 890, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 0, 600, 673,
	674, 675, 676, 0, 609, 0, 601, 602, 603, 677,
	604, 678, 0, 605, 606, 607, 608, 0, 610, 611,
	0, 0, 612, 613, 614, 616, 617, 615, 618, 0,
	619, 0, 0, 620, 621, 622, 679, 680, 681, 271,
	624, 623, 625, 682, 0, 626, 0, 0, 0, 0,
	627, 628, 683, 629, 630, 631, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 633, 634, 0, 294, 635,
	295, 636, 0, 637, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 638, 639, 640, 0, 303, 304,
	641, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 642,
	643, 0, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 346, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 644, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 645,
	646, 366, 0, 3096, 0, 0, 0, 0, 0, 367,
	368, 369, 647, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 0, 373, 374, 375, 648, 649, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 650,
	0, 651, 386, 0, 387, 388, 389, 390, 391, 652,
	653, 654, 471, 0, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 0, 399, 400, 401, 403,
	0, 0, 402, 655, 656, 0, 657, 0, 404, 405,
	0, 658, 0, 406, 407, 408, 0, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 659, 0, 420, 421, 0, 0, 422,
	0, 0, 0, 423, 424, 427, 0, 0, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 0, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 0, 467, 456, 0, 0, 0, 468, 469, 0,
	660, 470, 661, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 0,
	481, 0, 663, 482, 483, 475, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 666, 501, 667, 502,
	503, 4250, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 668, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 669, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 0, 563, 564, 546, 547, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 670, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	671, 581, 582, 583, 584, 672, 588, 589, 0, 590,
	591, 0, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 673, 674, 675, 676,
	0, 609, 0, 601, 602, 603, 677, 604, 678, 0,
	605, 606, 607, 608, 0, 610, 611, 0, 0, 612,
	613, 614, 616, 617, 615, 618, 0, 619, 0, 0,
	620, 621, 622, 679, 680, 681, 0, 624, 623, 625,
	682, 1349, 626, 271, 0, 0, 0, 627, 628, 683,
	629, 630, 631, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 632, 0, 0, 0, 0,
	286, 287, 1352, 288, 289, 290, 291, 292, 293, 633,
	634, 0, 294, 635, 295, 636, 0, 637, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 638, 639,
	1350, 0, 303, 304, 641, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 642, 643, 0, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	346, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 644, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 645, 646, 366, 0, 0, 0, 0,
	0, 0, 0, 367, 368, 369, 647, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 0, 373, 374, 375,
	648, 649, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 650, 0, 651, 386, 0, 387, 388,
	389, 390, 391, 652, 653, 654, 471, 0, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 0,
	399, 400, 401, 403, 0, 0, 402, 655, 656, 0,
	657, 0, 404, 405, 0, 658, 0, 406, 407, 408,
	0, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 659, 0, 420,
	421, 0, 0, 422, 0, 0, 0, 423, 424, 427,
	0, 0, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	775, 0, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 0, 467, 456, 0, 0,
	0, 468, 469, 0, 660, 470, 661, 472, 473, 0,
	0, 474, 0, 0, 0, 476, 477, 478, 0, 0,
	479, 480, 662, 0, 481, 0, 663, 482, 483, 475,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	666, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 668, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 0,
	774, 537, 538, 539, 540, 669, 541, 0, 542, 543,
	549, 550, 551, 544, 545, 773, 553, 554, 555, 556,
	0, 558, 559, 557, 560, 1353, 562, 0, 563, 564,
	546, 547, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 670, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 671, 581, 582, 583, 584, 672,
	588, 589, 0, 590, 591, 0, 587, 578, 0, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	771, 674, 675, 676, 0, 609, 0, 601, 602, 603,
	677, 604, 678, 0, 605, 606, 607, 608, 0, 610,
	611, 0, 0, 612, 613, 614, 616, 617, 615, 618,
	0, 619, 0, 0, 620, 621, 622, 679, 680, 681,
	0, 624, 623, 625, 682, 1349, 626, 271, 0, 0,
	0, 627, 628, 683, 629, 630, 631, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 632,
	0, 0, 0, 0, 286, 287, 1352, 288, 289, 290,
	291, 292, 293, 633, 634, 0, 294, 635, 295, 636,
	0, 637, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 638, 639, 1350, 0, 303, 304, 641, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 642, 643, 0,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 346, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 644, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 645, 646, 366,
	0, 0, 0, 0, 0, 0, 0, 367, 368, 369,
	647, 0, 0, 0, 370, 0, 371, 372, 0, 0,
	0, 373, 374, 375, 648, 649, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 650, 0, 651,
	386, 0, 387, 388, 389, 390, 391, 652, 653, 654,
	471, 0, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 0, 399, 400, 401, 403, 0, 0,
	402, 655, 656, 0, 657, 0, 404, 405, 0, 658,
	0, 406, 407, 408, 0, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 659, 0, 420, 421, 0, 0, 422, 0, 0,
	0, 423, 424, 427, 0, 0, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 775, 0, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 0,
	467, 456, 0, 0, 0, 468, 469, 0, 660, 470,
	661, 472, 473, 0, 0, 474, 0, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 0, 481, 0,
	663, 482, 483, 475, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 666, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	668, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 0, 774, 537, 538, 539, 540, 669,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 773,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 1353,
	562, 0, 563, 564, 546, 547, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 670, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 671, 581,
	582, 583, 584, 672, 588, 589, 0, 590, 591, 0,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 771, 674, 675, 676, 0, 609,
	0, 601, 1351, 603, 677, 604, 678, 0, 605, 606,
	607, 608, 0, 610, 611, 0, 0, 612, 613, 614,
	616, 617, 615, 618, 0, 619, 0, 0, 620, 621,
	622, 679, 680, 681, 0, 624, 623, 625, 682, 694,
	626, 271, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 693, 284, 285, 0, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 633, 634, 0,
	294, 635, 295, 636, 0, 637, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 638, 639, 640, 0,
	303, 304, 641, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 642, 643, 0, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 346, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	644, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 645, 646, 366, 0, 0, 0, 0, 0, 0,
	0, 367, 368, 369, 647, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 0, 373, 374, 375, 648, 649,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 650, 0, 651, 386, 0, 387, 388, 389, 390,
	391, 652, 653, 654, 471, 0, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 0, 399, 400,
	401, 403, 0, 0, 402, 655, 656, 0, 657, 0,
	404, 405, 0, 658, 0, 406, 407, 408, 0, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 659, 0, 420, 421, 0,
	0, 422, 0, 0, 0, 423, 424, 427, 0, 0,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 0,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 0, 467, 456, 0, 0, 0, 468,
	469, 0, 660, 470, 661, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	662, 0, 481, 0, 663, 482, 483, 475, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 666, 501,
	667, 692, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 668, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 669, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 0, 558,
	559, 557, 560, 561, 562, 0, 563, 564, 546, 547,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	670, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 671, 581, 582, 583, 584, 672, 588, 589,
	0, 590, 591, 0, 587, 578, 0, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 673, 674,
	675, 676, 0, 609, 0, 601, 602, 603, 677, 604,
	678, 0, 605, 606, 607, 608, 0, 610, 611, 0,
	0, 612, 613, 614, 616, 617, 615, 618, 0, 619,
	0, 0, 620, 621, 622, 679, 680, 681, 0, 624,
	623, 625, 682, 0, 626, 271, 3083, 0, 0, 627,
	628, 683, 629, 630, 631, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 632, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 0, 637,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	638, 639, 640, 0, 303, 304, 641, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 0, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 346, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 0, 0,
	0, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 0, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 650, 0, 651, 386, 0,
	387, 388, 389, 390, 391, 652, 653, 654, 471, 0,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 0, 399, 400, 401, 403, 0, 0, 402, 655,
	656, 0, 657, 0, 404, 405, 0, 658, 0, 406,
	407, 408, 0, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 659,
	0, 420, 421, 0, 0, 422, 0, 0, 0, 423,
	424, 427, 0, 0, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 0, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 0, 467, 456,
	0, 0, 0, 468, 469, 0, 660, 470, 661, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 0, 481, 0, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 561, 562, 0,
	563, 564, 546, 547, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 0, 590, 591, 0, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 673, 674, 675, 676, 0, 609, 0, 601,
	602, 603, 677, 604, 678, 0, 605, 606, 607, 608,
	0, 610, 611, 0, 0, 612, 613, 614, 616, 617,
	615, 618, 0, 619, 0, 0, 620, 621, 622, 679,
	680, 681, 0, 624, 623, 625, 682, 0, 626, 271,
	4260, 0, 0, 627, 628, 683, 629, 630, 631, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 633, 634, 0, 294, 635,
	295, 636, 0, 637, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 638, 639, 640, 0, 303, 304,
	641, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 642,
	643, 0, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 346, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 644, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 645,
	646, 366, 0, 0, 0, 0, 0, 0, 0, 367,
	368, 369, 647, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 0, 373, 374, 375, 648, 649, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 650,
	0, 651, 386, 0, 387, 388, 389, 390, 391, 652,
	653, 654, 471, 0, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 0, 399, 400, 401, 403,
	0, 0, 402, 655, 656, 0, 657, 0, 404, 405,
	0, 658, 0, 406, 407, 408, 0, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 659, 0, 420, 421, 0, 0, 422,
	0, 0, 0, 423, 424, 427, 0, 0, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 0, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 0, 467, 456, 0, 0, 0, 468, 469, 0,
	660, 470, 661, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 0,
	481, 0, 663, 482, 483, 475, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 666, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 668, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 669, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 0, 563, 564, 546, 547, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 670, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	671, 581, 582, 583, 584, 672, 588, 589, 0, 590,
	591, 0, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 673, 674, 675, 676,
	0, 609, 0, 601, 602, 603, 677, 604, 678, 0,
	605, 606, 607, 608, 0, 610, 611, 0, 0, 612,
	613, 614, 616, 617, 615, 618, 0, 619, 0, 0,
	620, 621, 622, 679, 680, 681, 271, 624, 623, 625,
	682, 0, 626, 0, 0, 0, 0, 627, 628, 683,
	629, 630, 631, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 632, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 0,
	637, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 638, 639, 640, 0, 303, 304, 641, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 0, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 346, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 0,
	0, 0, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 0,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 650, 0, 651, 386,
	0, 387, 388, 389, 390, 391, 652, 653, 654, 471,
	0, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 0, 399, 400, 401, 403, 0, 0, 402,
	655, 656, 0, 657, 0, 404, 405, 0, 658, 0,
	406, 407, 408, 0, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	659, 0, 420, 421, 0, 0, 422, 0, 0, 0,
	423, 424, 427, 0, 0, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 0, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 0, 467,
	456, 0, 0, 0, 468, 469, 0, 660, 470, 661,
	472, 473, 0, 0, 474, 0, 0, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 0, 481, 0, 663,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 4541, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 669, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 0, 558, 559, 557, 560, 561, 562,
	0, 563, 564, 546, 547, 565, 566, 0, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 0, 590, 591, 0, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 673, 674, 675, 676, 0, 609, 0,
	601, 602, 603, 677, 604, 678, 0, 605, 606, 607,
	608, 0, 610, 611, 0, 0, 612, 613, 614, 616,
	617, 615, 618, 0, 619, 0, 0, 620, 621, 622,
	679, 680, 681, 271, 624, 623, 625, 682, 0, 626,
	0, 0, 0, 0, 627, 628, 683, 629, 630, 631,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 632, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 633,
	634, 0, 294, 635, 295, 636, 0, 637, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 638, 639,
	640, 0, 303, 304, 641, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 642, 643, 0, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	346, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 644, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 645, 646, 366, 0, 0, 0, 0,
	0, 0, 0, 367, 368, 369, 647, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 0, 373, 374, 375,
	648, 649, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 650, 0, 651, 386, 0, 387, 388,
	389, 390, 391, 652, 653, 654, 471, 0, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 0,
	399, 400, 401, 403, 0, 0, 402, 655, 656, 0,
	657, 0, 404, 405, 0, 658, 0, 406, 407, 408,
	0, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 659, 0, 420,
	421, 0, 0, 422, 0, 0, 0, 423, 424, 427,
	0, 0, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 0, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 0, 467, 456, 0, 0,
	0, 468, 469, 0, 660, 470, 661, 472, 473, 0,
	0, 474, 0, 0, 0, 476, 477, 478, 0, 0,
	479, 480, 662, 0, 481, 0, 663, 482, 483, 475,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	666, 501, 667, 502, 503, 4146, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 668, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 669, 541, 0, 542, 543,
	549, 550, 551, 544, 545, 552, 553, 554, 555, 556,
	0, 558, 559, 557, 560, 561, 562, 0, 563, 564,
	546, 547, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 670, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 671, 581, 582, 583, 584, 672,
	588, 589, 0, 590, 591, 0, 587, 578, 0, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	673, 674, 675, 676, 0, 609, 0, 601, 602, 603,
	677, 604, 678, 0, 605, 606, 607, 608, 0, 610,
	611, 0, 0, 612, 613, 614, 616, 617, 615, 618,
	0, 619, 0, 0, 620, 621, 622, 679, 680, 681,
	271, 624, 623, 625, 682, 0, 626, 0, 0, 0,
	0, 627, 628, 683, 629, 630, 631, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 633, 634, 0, 294,
	635, 295, 636, 0, 637, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 638, 639, 640, 0, 303,
	304, 641, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	642, 643, 3910, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 346, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 644,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	645, 646, 366, 0, 0, 0, 0, 0, 0, 0,
	367, 368, 369, 647, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 0, 373, 374, 375, 648, 649, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	650, 0, 651, 386, 0, 387, 388, 389, 390, 391,
	652, 653, 654, 471, 0, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 0, 399, 400, 401,
	403, 0, 0, 402, 655, 656, 0, 657, 0, 404,
	405, 0, 658, 0, 406, 407, 408, 0, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 659, 0, 420, 421, 0, 0,
	422, 0, 0, 0, 423, 424, 427, 0, 0, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 0, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 0, 467, 456, 0, 0, 0, 468, 469,
	0, 660, 470, 661, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	0, 481, 0, 663, 482, 483, 475, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 666, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 668, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 669, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 0, 563, 564, 546, 547, 565,
	566, 0, 567, 568, 569, 570, 571, 572, 573, 670,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 671, 581, 582, 583, 584, 672, 588, 589, 0,
	590, 591, 0, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 673, 674, 675,
	676, 0, 609, 0, 601, 602, 603, 677, 604, 678,
	0, 605, 606, 607, 608, 0, 610, 611, 0, 0,
	612, 613, 614, 616, 617, 615, 618, 0, 619, 0,
	0, 620, 621, 622, 679, 680, 681, 271, 624, 623,
	625, 682, 0, 626, 0, 0, 0, 0, 627, 628,
	683, 629, 630, 631, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 632,
	0, 2756, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 633, 634, 0, 294, 635, 295, 636,
	0, 637, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 638, 639, 640, 0, 303, 304, 641, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 642, 643, 0,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 346, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 644, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 645, 646, 366,
	0, 0, 0, 0, 0, 0, 0, 367, 368, 369,
	647, 0, 0, 0, 370, 0, 371, 372, 0, 0,
	0, 373, 374, 375, 648, 649, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 650, 0, 651,
	386, 0, 387, 388, 389, 390, 391, 652, 653, 654,
	471, 0, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 0, 399, 400, 401, 403, 0, 0,
	402, 655, 656, 0, 657, 0, 404, 405, 0, 658,
	0, 406, 407, 408, 0, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 659, 0, 420, 421, 0, 0, 422, 0, 0,
	0, 423, 424, 427, 0, 0, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 0, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 0,
	467, 456, 0, 0, 0, 468, 469, 0, 660, 470,
	661, 472, 473, 0, 0, 474, 0, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 0, 481, 0,
	663, 482, 483, 475, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 666, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	668, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 669,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 0, 563, 564, 546, 547, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 670, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 671, 581,
	582, 583, 584, 672, 588, 589, 0, 590, 591, 0,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 673, 674, 675, 676, 0, 609,
	0, 601, 602, 603, 677, 604, 678, 0, 605, 606,
	607, 608, 0, 610, 611, 0, 0, 612, 613, 614,
	616, 617, 615, 618, 0, 619, 0, 0, 620, 621,
	622, 679, 680, 681, 0, 624, 623, 625, 682, 0,
	626, 271, 3083, 0, 0, 627, 628, 683, 629, 630,
	631, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 633, 634, 0,
	294, 635, 295, 636, 0, 637, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 638, 639, 640, 0,
	303, 304, 641, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 642, 643, 0, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 346, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	644, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 645, 646, 366, 0, 0, 0, 0, 0, 0,
	0, 367, 368, 369, 647, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 0, 373, 374, 375, 648, 649,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 650, 0, 651, 386, 0, 387, 388, 389, 390,
	391, 652, 653, 654, 471, 0, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 0, 399, 400,
	401, 403, 0, 0, 402, 655, 656, 0, 657, 0,
	404, 405, 0, 658, 0, 406, 407, 408, 0, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 659, 0, 420, 421, 0,
	0, 422, 0, 0, 0, 423, 424, 427, 0, 0,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 0,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 0, 467, 456, 0, 0, 0, 468,
	469, 0, 660, 470, 661, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 3080, 0, 0, 479, 480,
	662, 0, 481, 0, 663, 482, 483, 475, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 666, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 668, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 669, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 0, 558,
	559, 557, 560, 561, 562, 0, 563, 564, 546, 547,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	670, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 671, 581, 582, 583, 584, 672, 588, 589,
	0, 590, 591, 0, 587, 578, 0, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 673, 674,
	675, 676, 0, 609, 0, 601, 602, 603, 677, 604,
	678, 0, 605, 606, 607, 608, 0, 610, 611, 0,
	0, 612, 613, 614, 616, 617, 615, 618, 0, 619,
	0, 0, 620, 621, 622, 679, 680, 681, 271, 624,
	623, 625, 682, 0, 626, 0, 0, 0, 0, 627,
	628, 683, 629, 630, 631, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	632, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 633, 634, 0, 294, 635, 295,
	636, 0, 637, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 638, 639, 640, 0, 303, 304, 641,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 642, 643,
	0, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 346, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 644, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 645, 646,
	366, 0, 0, 0, 0, 0, 0, 0, 367, 368,
	369, 647, 0, 0, 0, 370, 0, 371, 372, 0,
	0, 0, 373, 374, 375, 648, 649, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 650, 0,
	651, 386, 0, 387, 388, 389, 390, 391, 652, 653,
	654, 471, 0, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 0, 399, 400, 401, 403, 0,
	0, 402, 655, 656, 0, 657, 0, 404, 405, 0,
	658, 0, 406, 407, 408, 0, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 659, 0, 420, 421, 0, 0, 422, 0,
	0, 0, 423, 424, 427, 0, 0, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 0, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	0, 467, 456, 0, 0, 0, 468, 469, 0, 660,
	470, 661, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 0, 481,
	0, 663, 482, 483, 475, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 666, 501, 667, 502, 503,
	2187, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 668, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 0, 774, 537, 538, 539, 540,
	669, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	773, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 0, 563, 564, 546, 547, 565, 566, 0,
	567, 568, 569, 570, 571, 572, 573, 670, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 671,
	581, 582, 583, 584, 672, 588, 589, 0, 590, 591,
	0, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 771, 674, 675, 676, 0,
	609, 0, 601, 602, 603, 677, 604, 678, 0, 605,
	606, 607, 608, 0, 610, 611, 0, 0, 612, 613,
	614, 616, 617, 615, 618, 0, 619, 0, 0, 620,
	621, 622, 679, 680, 681, 271, 624, 623, 625, 682,
	0, 626, 0, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 277, 279, 278, 280, 281, 282, 283, 2333,
	284, 285, 0, 0, 0, 0, 0, 632, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 0, 637,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	638, 639, 640, 0, 303, 304, 641, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 0, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 346, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 0, 0,
	0, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 0, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 650, 0, 651, 386, 0,
	387, 388, 389, 390, 391, 652, 653, 654, 471, 0,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 0, 399, 400, 401, 403, 0, 0, 402, 655,
	656, 0, 657, 0, 404, 405, 0, 658, 0, 406,
	407, 408, 0, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 659,
	0, 420, 421, 0, 0, 422, 0, 0, 0, 423,
	424, 427, 0, 0, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 0, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 0, 467, 456,
	0, 0, 0, 468, 469, 0, 660, 470, 661, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 0, 481, 0, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 561, 562, 0,
	563, 564, 546, 547, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 0, 590, 591, 0, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 673, 674, 675, 676, 0, 609, 0, 601,
	602, 603, 677, 604, 678, 0, 605, 606, 607, 608,
	0, 610, 611, 0, 0, 612, 613, 614, 616, 617,
	615, 618, 0, 619, 0, 0, 620, 621, 622, 679,
	680, 681, 0, 624, 623, 625, 682, 2321, 626, 271,
	0, 0, 0, 627, 628, 683, 629, 630, 631, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 633, 634, 0, 294, 635,
	295, 636, 0, 637, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 638, 639, 640, 0, 303, 304,
	641, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 642,
	643, 0, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 346, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 644, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 645,
	646, 366, 0, 0, 0, 0, 0, 0, 0, 367,
	368, 369, 647, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 0, 373, 374, 375, 648, 649, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 650,
	0, 651, 386, 0, 387, 388, 389, 390, 391, 652,
	653, 654, 471, 0, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 0, 399, 400, 401, 403,
	0, 0, 402, 655, 656, 0, 657, 0, 404, 405,
	0, 658, 0, 406, 407, 408, 0, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 659, 0, 420, 421, 0, 0, 422,
	0, 0, 0, 423, 424, 427, 0, 0, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 0, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 0, 467, 456, 0, 0, 0, 468, 469, 0,
	660, 470, 661, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 0,
	481, 0, 663, 482, 483, 475, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 666, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 668, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 669, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 0, 563, 564, 546, 547, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 670, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	671, 581, 582, 583, 584, 672, 588, 589, 0, 590,
	591, 0, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 673, 674, 675, 676,
	0, 609, 0, 601, 602, 603, 677, 604, 678, 0,
	605, 606, 607, 608, 0, 610, 611, 0, 0, 612,
	613, 614, 616, 617, 615, 618, 0, 619, 0, 0,
	620, 621, 622, 679, 680, 681, 0, 624, 623, 625,
	682, 2083, 626, 271, 0, 0, 0, 627, 628, 683,
	629, 630, 631, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 632, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 633,
	634, 0, 294, 635, 295, 636, 0, 637, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 638, 639,
	640, 0, 303, 304, 641, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 642, 643, 0, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	346, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 644, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 645, 646, 366, 0, 0, 0, 0,
	0, 0, 0, 367, 368, 369, 647, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 0, 373, 374, 375,
	648, 649, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 650, 0, 651, 386, 0, 387, 388,
	389, 390, 391, 652, 653, 654, 471, 0, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 0,
	399, 400, 401, 403, 0, 0, 402, 655, 656, 0,
	657, 0, 404, 405, 0, 658, 0, 406, 407, 408,
	0, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 659, 0, 420,
	421, 0, 0, 422, 0, 0, 0, 423, 424, 427,
	0, 0, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 0, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 0, 467, 456, 0, 0,
	0, 468, 469, 0, 660, 470, 661, 472, 473, 0,
	0, 474, 0, 0, 0, 476, 477, 478, 0, 0,
	479, 480, 662, 0, 481, 0, 663, 482, 483, 475,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	666, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 668, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 669, 541, 0, 542, 543,
	549, 550, 551, 544, 545, 552, 553, 554, 555, 556,
	0, 558, 559, 557, 560, 561, 562, 0, 563, 564,
	546, 547, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 670, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 671, 581, 582, 583, 584, 672,
	588, 589, 0, 590, 591, 0, 587, 578, 0, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	673, 674, 675, 676, 0, 609, 0, 601, 602, 603,
	677, 604, 678, 0, 605, 606, 607, 608, 0, 610,
	611, 0, 0, 612, 613, 614, 616, 617, 615, 618,
	0, 619, 0, 0, 620, 621, 622, 679, 680, 681,
	0, 624, 623, 625, 682, 2050, 626, 271, 0, 0,
	0, 627, 628, 683, 629, 630, 631, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 632,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 633, 634, 0, 294, 635, 295, 636,
	0, 637, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 638, 639, 640, 0, 303, 304, 641, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 642, 643, 0,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 346, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 644, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 645, 646, 366,
	0, 0, 0, 0, 0, 0, 0, 367, 368, 369,
	647, 0, 0, 0, 370, 0, 371, 372, 0, 0,
	0, 373, 374, 375, 648, 649, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 650, 0, 651,
	386, 0, 387, 388, 389, 390, 391, 652, 653, 654,
	471, 0, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 0, 399, 400, 401, 403, 0, 0,
	402, 655, 656, 0, 657, 0, 404, 405, 0, 658,
	0, 406, 407, 408, 0, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 659, 0, 420, 421, 0, 0, 422, 0, 0,
	0, 423, 424, 427, 0, 0, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 0, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 0,
	467, 456, 0, 0, 0, 468, 469, 0, 660, 470,
	661, 472, 473, 0, 0, 474, 0, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 0, 481, 0,
	663, 482, 483, 475, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 666, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	668, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 669,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 0, 563, 564, 546, 547, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 670, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 671, 581,
	582, 583, 584, 672, 588, 589, 0, 590, 591, 0,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 673, 674, 675, 676, 0, 609,
	0, 601, 602, 603, 677, 604, 678, 0, 605, 606,
	607, 608, 0, 610, 611, 0, 0, 612, 613, 614,
	616, 617, 615, 618, 0, 619, 0, 0, 620, 621,
	622, 679, 680, 681, 0, 624, 623, 625, 682, 765,
	626, 271, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 633, 634, 0,
	294, 635, 295, 636, 0, 637, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 638, 639, 640, 0,
	303, 761, 641, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 642, 643, 0, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 346, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	644, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 645, 646, 366, 0, 0, 0, 0, 0, 0,
	0, 367, 368, 369, 647, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 0, 373, 374, 375, 648, 649,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 650, 0, 651, 386, 0, 387, 388, 389, 390,
	391, 652, 653, 654, 471, 0, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 0, 399, 400,
	401, 403, 0, 0, 402, 655, 656, 0, 657, 0,
	404, 405, 0, 658, 0, 406, 407, 408, 0, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 659, 0, 420, 421, 0,
	0, 422, 0, 0, 0, 423, 766, 427, 0, 0,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 775, 0,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 0, 467, 456, 0, 0, 0, 468,
	469, 0, 660, 470, 661, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	662, 0, 481, 0, 663, 482, 483, 475, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 666, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 668, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 0, 774, 537,
	538, 539, 540, 669, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 773, 553, 554, 555, 556, 0, 558,
	559, 557, 560, 1619, 562, 0, 563, 564, 546, 547,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	670, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 671, 581, 582, 583, 584, 672, 588, 589,
	0, 590, 591, 0, 587, 578, 0, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 771, 674,
	675, 676, 0, 609, 0, 601, 602, 603, 677, 604,
	678, 0, 605, 606, 607, 608, 0, 610, 611, 0,
	0, 612, 613, 614, 616, 617, 615, 618, 0, 619,
	0, 0, 620, 621, 622, 679, 680, 681, 0, 624,
	623, 625, 682, 1592, 626, 271, 0, 0, 0, 627,
	628, 683, 629, 630, 631, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 632, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 0, 637,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	638, 639, 640, 0, 303, 304, 641, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 0, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 346, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 0, 0,
	0, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 0, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 650, 0, 651, 386, 0,
	387, 388, 389, 390, 391, 1591, 653, 654, 471, 0,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 0, 399, 400, 401, 403, 0, 0, 402, 655,
	656, 0, 657, 0, 404, 405, 0, 658, 0, 406,
	407, 408, 0, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 659,
	0, 420, 421, 0, 0, 422, 0, 0, 0, 423,
	424, 427, 0, 0, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 0, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 0, 467, 456,
	0, 0, 0, 468, 469, 0, 660, 470, 661, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 0, 481, 0, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 561, 562, 0,
	563, 564, 546, 547, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 0, 590, 591, 0, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 673, 674, 675, 676, 0, 609, 0, 601,
	602, 603, 677, 604, 678, 0, 605, 606, 607, 608,
	0, 610, 611, 0, 0, 612, 613, 614, 616, 617,
	615, 618, 0, 619, 0, 0, 620, 621, 622, 679,
	680, 681, 0, 624, 623, 625, 682, 1576, 626, 271,
	0, 0, 0, 627, 628, 683, 629, 630, 631, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 633, 634, 0, 294, 635,
	295, 636, 0, 637, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 638, 639, 640, 0, 303, 304,
	641, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 642,
	643, 0, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 346, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 644, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 645,
	646, 366, 0, 0, 0, 0, 0, 0, 0, 367,
	368, 369, 647, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 0, 373, 374, 375, 648, 649, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 650,
	0, 651, 386, 0, 387, 388, 389, 390, 391, 1574,
	653, 654, 471, 0, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 0, 399, 400, 401, 403,
	0, 0, 402, 655, 656, 0, 657, 0, 404, 405,
	0, 658, 0, 406, 407, 408, 0, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 659, 0, 420, 421, 0, 0, 422,
	0, 0, 0, 423, 424, 427, 0, 0, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 0, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 0, 467, 456, 0, 0, 0, 468, 469, 0,
	660, 470, 661, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 0,
	481, 0, 663, 482, 483, 475, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 666, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 668, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 669, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 0, 563, 564, 546, 547, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 670, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	671, 581, 582, 583, 584, 672, 588, 589, 0, 590,
	591, 0, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 673, 674, 675, 676,
	0, 609, 0, 601, 602, 603, 677, 604, 678, 0,
	605, 606, 607, 608, 0, 610, 611, 0, 0, 612,
	613, 614, 616, 617, 615, 618, 0, 619, 0, 0,
	620, 621, 622, 679, 680, 681, 0, 624, 623, 625,
	682, 1569, 626, 271, 0, 0, 0, 627, 628, 683,
	629, 630, 631, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 632, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 633,
	634, 0, 294, 635, 295, 636, 0, 637, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 638, 639,
	640, 0, 303, 304, 641, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 642, 643, 0, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	346, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 644, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 645, 646, 366, 0, 0, 0, 0,
	0, 0, 0, 367, 368, 369, 647, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 0, 373, 374, 375,
	648, 649, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 650, 0, 651, 386, 0, 387, 388,
	389, 390, 391, 652, 653, 654, 471, 0, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 0,
	399, 400, 401, 403, 0, 0, 402, 655, 656, 0,
	657, 0, 404, 405, 0, 658, 0, 406, 407, 408,
	0, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 659, 0, 420,
	421, 0, 0, 422, 0, 0, 0, 423, 424, 427,
	0, 0, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 0, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 0, 467, 456, 0, 0,
	0, 468, 469, 0, 660, 470, 661, 472, 473, 0,
	0, 474, 0, 0, 0, 476, 477, 478, 0, 0,
	479, 480, 662, 0, 481, 0, 663, 482, 483, 475,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	666, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 668, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 669, 541, 0, 542, 543,
	549, 550, 551, 544, 545, 552, 553, 554, 555, 556,
	0, 558, 559, 557, 560, 561, 562, 0, 563, 564,
	546, 547, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 670, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 671, 581, 582, 583, 584, 672,
	588, 589, 0, 590, 591, 0, 587, 578, 0, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	673, 674, 675, 676, 0, 609, 0, 601, 602, 603,
	677, 604, 678, 0, 605, 606, 607, 608, 0, 610,
	611, 0, 0, 612, 613, 614, 616, 617, 615, 618,
	0, 619, 0, 0, 620, 621, 622, 679, 680, 681,
	0, 624, 623, 625, 682, 1546, 626, 271, 0, 0,
	0, 627, 628, 683, 629, 630, 631, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 632,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 633, 634, 0, 294, 635, 295, 636,
	0, 637, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 638, 639, 640, 0, 303, 304, 641, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 642, 643, 0,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 346, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 644, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 645, 646, 366,
	0, 0, 0, 0, 0, 0, 0, 367, 368, 369,
	647, 0, 0, 0, 370, 0, 371, 372, 0, 0,
	0, 373, 374, 375, 648, 649, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 650, 0, 651,
	386, 0, 387, 388, 389, 390, 391, 1544, 653, 654,
	471, 0, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 0, 399, 400, 401, 403, 0, 0,
	402, 655, 656, 0, 657, 0, 404, 405, 0, 658,
	0, 406, 407, 408, 0, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 659, 0, 420, 421, 0, 0, 422, 0, 0,
	0, 423, 424, 427, 0, 0, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 0, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 0,
	467, 456, 0, 0, 0, 468, 469, 0, 660, 470,
	661, 472, 473, 0, 0, 474, 0, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 0, 481, 0,
	663, 482, 483, 475, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 666, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	668, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 669,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 0, 563, 564, 546, 547, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 670, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 671, 581,
	582, 583, 584, 672, 588, 589, 0, 590, 591, 0,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 673, 674, 675, 676, 0, 609,
	0, 601, 602, 603, 677, 604, 678, 0, 605, 606,
	607, 608, 0, 610, 611, 0, 0, 612, 613, 614,
	616, 617, 615, 618, 0, 619, 0, 0, 620, 621,
	622, 679, 680, 681, 0, 624, 623, 625, 682, 1503,
	626, 271, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 633, 634, 0,
	294, 635, 295, 636, 0, 637, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 638, 639, 640, 0,
	303, 304, 641, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 642, 643, 0, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 346, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	644, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 645, 646, 366, 0, 0, 0, 0, 0, 0,
	0, 367, 368, 369, 647, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 0, 373, 374, 375, 648, 649,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 650, 0, 651, 386, 0, 387, 388, 389, 390,
	391, 652, 653, 654, 471, 0, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 0, 399, 400,
	401, 403, 0, 0, 402, 655, 656, 0, 657, 0,
	404, 405, 0, 658, 0, 406, 407, 408, 0, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 659, 0, 420, 421, 0,
	0, 422, 0, 0, 0, 423, 424, 427, 0, 0,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 0,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 0, 467, 456, 0, 0, 0, 468,
	469, 0, 660, 470, 661, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	662, 0, 481, 0, 663, 482, 483, 475, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 666, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 668, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 669, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 0, 558,
	559, 557, 560, 561, 562, 0, 563, 564, 546, 547,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	670, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 671, 581, 582, 583, 584, 672, 588, 589,
	0, 590, 591, 0, 587, 578, 0, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 673, 674,
	675, 676, 0, 609, 0, 601, 602, 603, 677, 604,
	678, 0, 605, 606, 607, 608, 0, 610, 611, 0,
	0, 612, 613, 614, 616, 617, 615, 618, 0, 619,
	0, 0, 620, 621, 622, 679, 680, 681, 0, 624,
	623, 625, 682, 1486, 626, 271, 0, 0, 0, 627,
	628, 683, 629, 630, 631, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 632, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 0, 637,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	638, 639, 640, 0, 303, 304, 641, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 0, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 346, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 0, 0,
	0, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 0, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 650, 0, 651, 386, 0,
	387, 388, 389, 390, 391, 652, 653, 654, 471, 0,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 0, 399, 400, 401, 403, 0, 0, 402, 655,
	656, 0, 657, 0, 404, 405, 0, 658, 0, 406,
	407, 408, 0, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 659,
	0, 420, 421, 0, 0, 422, 0, 0, 0, 423,
	424, 427, 0, 0, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 0, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 0, 467, 456,
	0, 0, 0, 468, 469, 0, 660, 470, 661, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 0, 481, 0, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 561, 562, 0,
	563, 564, 546, 547, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 0, 590, 591, 0, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 673, 674, 675, 676, 0, 609, 0, 601,
	602, 603, 677, 604, 678, 0, 605, 606, 607, 608,
	0, 610, 611, 0, 0, 612, 613, 614, 616, 617,
	615, 618, 0, 619, 0, 0, 620, 621, 622, 679,
	680, 681, 0, 624, 623, 625, 682, 1355, 626, 271,
	0, 0, 0, 627, 628, 683, 629, 630, 631, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 633, 634, 0, 294, 635,
	295, 636, 0, 637, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 638, 639, 640, 0, 303, 304,
	641, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 642,
	643, 0, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 346, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 644, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 645,
	646, 366, 0, 0, 0, 0, 0, 0, 0, 367,
	368, 369, 647, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 0, 373, 374, 375, 648, 649, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 650,
	0, 651, 386, 0, 387, 388, 389, 390, 391, 652,
	653, 654, 471, 0, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 0, 399, 400, 401, 403,
	0, 0, 402, 655, 656, 0, 657, 0, 404, 405,
	0, 658, 0, 406, 407, 408, 0, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 659, 0, 420, 421, 0, 0, 422,
	0, 0, 0, 423, 424, 427, 0, 0, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 0, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 0, 467, 456, 0, 0, 0, 468, 469, 0,
	660, 470, 661, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 0,
	481, 0, 663, 482, 483, 475, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 666, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 668, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 0, 774, 537, 538, 539,
	540, 669, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 773, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 0, 563, 564, 546, 547, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 670, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	671, 581, 582, 583, 584, 672, 588, 589, 0, 590,
	591, 0, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 771, 674, 675, 676,
	0, 609, 0, 601, 602, 603, 677, 604, 678, 0,
	605, 606, 607, 608, 0, 610, 611, 0, 0, 612,
	613, 614, 616, 617, 615, 618, 0, 619, 0, 0,
	620, 621, 622, 679, 680, 681, 0, 624, 623, 625,
	682, 1320, 626, 271, 0, 0, 0, 627, 628, 683,
	629, 630, 631, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 632, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 633,
	634, 0, 294, 635, 295, 636, 0, 637, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 638, 639,
	640, 0, 303, 304, 641, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 642, 643, 0, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	346, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 644, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 645, 646, 366, 0, 0, 0, 0,
	0, 0, 0, 367, 368, 369, 647, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 0, 373, 374, 375,
	648, 649, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 650, 0, 651, 386, 0, 387, 388,
	389, 390, 391, 1319, 653, 654, 471, 0, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 0,
	399, 400, 401, 403, 0, 0, 402, 655, 656, 0,
	657, 0, 404, 405, 0, 658, 0, 406, 407, 408,
	0, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 659, 0, 420,
	421, 0, 0, 422, 0, 0, 0, 423, 424, 427,
	0, 0, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 0, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 0, 467, 456, 0, 0,
	0, 468, 469, 0, 660, 470, 661, 472, 473, 0,
	0, 474, 0, 0, 0, 476, 477, 478, 0, 0,
	479, 480, 662, 0, 481, 0, 663, 482, 483, 475,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	666, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 668, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 669, 541, 0, 542, 543,
	549, 550, 551, 544, 545, 552, 553, 554, 555, 556,
	0, 558, 559, 557, 560, 561, 562, 0, 563, 564,
	546, 547, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 670, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 671, 581, 582, 583, 584, 672,
	588, 589, 0, 590, 591, 0, 587, 578, 0, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	673, 674, 675, 676, 0, 609, 0, 601, 602, 603,
	677, 604, 678, 0, 605, 606, 607, 608, 0, 610,
	611, 0, 0, 612, 613, 614, 616, 617, 615, 618,
	0, 619, 0, 0, 620, 621, 622, 679, 680, 681,
	0, 624, 623, 625, 682, 1311, 626, 271, 0, 0,
	0, 627, 628, 683, 629, 630, 631, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 632,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 633, 634, 0, 294, 635, 295, 636,
	0, 637, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 638, 639, 640, 0, 303, 304, 641, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 642, 643, 0,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 346, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 644, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 645, 646, 366,
	0, 0, 0, 0, 0, 0, 0, 367, 368, 369,
	647, 0, 0, 0, 370, 0, 371, 372, 0, 0,
	0, 373, 374, 375, 648, 649, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 650, 0, 651,
	386, 0, 387, 388, 389, 390, 391, 1310, 653, 654,
	471, 0, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 0, 399, 400, 401, 403, 0, 0,
	402, 655, 656, 0, 657, 0, 404, 405, 0, 658,
	0, 406, 407, 408, 0, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 659, 0, 420, 421, 0, 0, 422, 0, 0,
	0, 423, 424, 427, 0, 0, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 0, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 0,
	467, 456, 0, 0, 0, 468, 469, 0, 660, 470,
	661, 472, 473, 0, 0, 474, 0, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 0, 481, 0,
	663, 482, 483, 475, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 666, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	668, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 669,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 0, 563, 564, 546, 547, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 670, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 671, 581,
	582, 583, 584, 672, 588, 589, 0, 590, 591, 0,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 673, 674, 675, 676, 0, 609,
	0, 601, 602, 603, 677, 604, 678, 0, 605, 606,
	607, 608, 0, 610, 611, 0, 0, 612, 613, 614,
	616, 617, 615, 618, 0, 619, 0, 0, 620, 621,
	622, 679, 680, 681, 271, 624, 623, 625, 682, 0,
	626, 0, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 277, 279, 278, 280, 281, 282, 283, 1264, 284,
	285, 0, 0, 0, 0, 0, 632, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	633, 634, 0, 294, 635, 295, 636, 0, 637, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 638,
	639, 640, 0, 303, 304, 641, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 642, 643, 0, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 346, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 644, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 645, 646, 366, 0, 0, 0,
	0, 0, 0, 0, 367, 368, 369, 647, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 0, 373, 374,
	375, 648, 649, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 650, 0, 651, 386, 0, 387,
	388, 389, 390, 391, 652, 653, 654, 471, 0, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	0, 399, 400, 401, 403, 0, 0, 402, 655, 656,
	0, 657, 0, 404, 405, 0, 658, 0, 406, 407,
	408, 0, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 659, 0,
	420, 421, 0, 0, 422, 0, 0, 0, 423, 424,
	427, 0, 0, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 0, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 0, 467, 456, 0,
	0, 0, 468, 469, 0, 660, 470, 661, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 0, 481, 0, 663, 482, 483,
	475, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 666, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 668, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 669, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 0, 563,
	564, 546, 547, 565, 566, 0, 567, 568, 569, 570,
	571, 572, 573, 670, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 671, 581, 582, 583, 584,
	672, 588, 589, 0, 590, 591, 0, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 673, 674, 675, 676, 0, 609, 0, 601, 602,
	603, 677, 604, 678, 0, 605, 606, 607, 608, 0,
	610, 611, 0, 0, 612, 613, 614, 616, 617, 615,
	618, 0, 619, 0, 0, 620, 621, 622, 679, 680,
	681, 271, 624, 623, 625, 682, 0, 626, 0, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 277, 279,
	278, 280, 281, 282, 283, 780, 284, 285, 0, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 633, 634, 0,
	294, 635, 295, 636, 0, 637, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 638, 639, 640, 0,
	303, 304, 641, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 642, 643, 0, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 346, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	644, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 645, 646, 366, 0, 0, 0, 0, 0, 0,
	0, 367, 368, 369, 647, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 0, 373, 374, 375, 648, 649,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 650, 0, 651, 386, 0, 387, 388, 389, 390,
	391, 652, 653, 654, 471, 0, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 0, 399, 400,
	401, 403, 0, 0, 402, 655, 656, 0, 657, 0,
	404, 405, 0, 658, 0, 406, 407, 408, 0, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 659, 0, 420, 421, 0,
	0, 422, 0, 0, 0, 423, 424, 427, 0, 0,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 0,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 0, 467, 456, 0, 0, 0, 468,
	469, 0, 660, 470, 661, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	662, 0, 481, 0, 663, 482, 483, 475, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 666, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 668, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 669, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 0, 558,
	559, 557, 560, 561, 562, 0, 563, 564, 546, 547,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	670, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 671, 581, 582, 583, 584, 672, 588, 589,
	0, 590, 591, 0, 587, 578, 0, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 673, 674,
	675, 676, 0, 609, 0, 601, 602, 603, 677, 604,
	678, 0, 605, 606, 607, 608, 0, 610, 611, 0,
	0, 612, 613, 614, 616, 617, 615, 618, 0, 619,
	0, 0, 620, 621, 622, 679, 680, 681, 0, 624,
	623, 625, 682, 765, 626, 271, 0, 0, 0, 627,
	628, 683, 629, 630, 631, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 632, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 0, 637,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	638, 639, 640, 0, 303, 761, 641, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 760, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 0, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 346, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 0, 0,
	0, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 0, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 650, 0, 651, 386, 0,
	387, 388, 389, 390, 391, 652, 653, 654, 471, 0,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 0, 399, 400, 401, 403, 0, 0, 402, 655,
	656, 0, 657, 0, 404, 405, 0, 658, 0, 406,
	407, 408, 0, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 659,
	0, 420, 421, 0, 0, 422, 0, 0, 0, 423,
	766, 427, 0, 0, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 775, 0, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 0, 467, 456,
	0, 0, 0, 468, 469, 0, 660, 470, 661, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 0, 481, 0, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 0, 774, 537, 538, 539, 540, 762, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 773, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 763, 562, 0,
	563, 564, 546, 547, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 0, 590, 591, 0, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 771, 674, 675, 676, 0, 609, 0, 601,
	767, 603, 677, 604, 678, 0, 605, 606, 607, 608,
	0, 610, 611, 0, 0, 612, 613, 614, 616, 617,
	615, 618, 0, 619, 0, 0, 620, 621, 622, 679,
	680, 681, 0, 624, 623, 625, 682, 754, 626, 271,
	0, 0, 0, 627, 628, 683, 629, 630, 631, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 633, 634, 0, 294, 635,
	295, 636, 0, 637, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 638, 639, 640, 0, 303, 304,
	641, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 642,
	643, 0, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 346, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 644, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 645,
	646, 366, 0, 0, 0, 0, 0, 0, 0, 367,
	368, 369, 647, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 0, 373, 374, 375, 648, 649, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 650,
	0, 651, 386, 0, 387, 388, 389, 390, 391, 652,
	653, 654, 471, 0, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 0, 399, 400, 401, 403,
	0, 0, 402, 655, 656, 0, 657, 0, 404, 405,
	0, 658, 0, 406, 407, 408, 0, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 659, 0, 420, 421, 0, 0, 422,
	0, 0, 0, 423, 424, 427, 0, 0, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 0, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 0, 467, 456, 0, 0, 0, 468, 469, 0,
	660, 470, 661, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 0,
	481, 0, 663, 482, 483, 475, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 666, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 668, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 669, 541, 0, 542, 543, 755, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 0, 563, 564, 546, 547, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 670, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	671, 581, 582, 583, 584, 672, 588, 589, 0, 590,
	591, 0, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 673, 674, 675, 676,
	0, 609, 0, 601, 602, 603, 677, 604, 678, 0,
	605, 606, 607, 608, 0, 610, 611, 0, 0, 612,
	613, 614, 616, 617, 615, 618, 0, 619, 0, 0,
	620, 621, 622, 679, 680, 681, 0, 624, 623, 625,
	682, 717, 626, 271, 0, 0, 0, 627, 628, 683,
	629, 630, 631, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 632, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 633,
	634, 0, 294, 635, 295, 636, 0, 637, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 638, 639,
	640, 0, 303, 304, 641, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 642, 643, 0, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	346, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 644, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 645, 646, 366, 0, 0, 0, 0,
	0, 0, 0, 367, 368, 369, 647, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 0, 373, 374, 375,
	648, 649, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 650, 0, 651, 386, 0, 387, 388,
	389, 390, 391, 652, 653, 654, 471, 0, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 0,
	399, 400, 401, 403, 0, 0, 402, 655, 656, 0,
	657, 0, 404, 405, 0, 658, 0, 406, 407, 408,
	0, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 659, 0, 420,
	421, 0, 0, 422, 0, 0, 0, 423, 424, 427,
	0, 0, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 0, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 0, 467, 456, 0, 0,
	0, 468, 469, 0, 660, 470, 661, 472, 473, 0,
	0, 474, 0, 0, 0, 476, 477, 478, 0, 0,
	479, 480, 662, 0, 481, 0, 663, 482, 483, 475,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	666, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 668, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 669, 541, 0, 542, 543,
	549, 550, 551, 544, 545, 552, 553, 554, 555, 556,
	0, 558, 559, 557, 560, 561, 562, 0, 563, 564,
	546, 547, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 670, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 671, 581, 582, 583, 584, 672,
	588, 589, 0, 590, 591, 0, 587, 578, 0, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	673, 674, 675, 676, 0, 609, 0, 601, 602, 603,
	677, 604, 678, 0, 605, 606, 607, 608, 0, 610,
	611, 0, 0, 612, 613, 614, 616, 617, 615, 618,
	0, 619, 0, 0, 620, 621, 622, 679, 680, 681,
	0, 624, 623, 625, 682, 711, 626, 271, 0, 0,
	0, 627, 628, 683, 629, 630, 631, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 632,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 633, 634, 0, 294, 635, 295, 636,
	0, 637, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 638, 639, 640, 0, 303, 304, 641, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 642, 643, 0,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 346, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 644, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 645, 646, 366,
	0, 0, 0, 0, 0, 0, 0, 367, 368, 369,
	647, 0, 0, 0, 370, 0, 371, 372, 0, 0,
	0, 373, 374, 375, 648, 649, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 650, 0, 651,
	386, 0, 387, 388, 389, 390, 391, 652, 653, 654,
	471, 0, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 0, 399, 400, 401, 403, 0, 0,
	402, 655, 656, 0, 657, 0, 404, 405, 0, 658,
	0, 406, 407, 408, 0, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 659, 0, 420, 421, 0, 0, 422, 0, 0,
	0, 423, 424, 427, 0, 0, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 0, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 0,
	467, 456, 0, 0, 0, 468, 469, 0, 660, 470,
	661, 472, 473, 0, 0, 474, 0, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 0, 481, 0,
	663, 482, 483, 475, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 666, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	668, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 669,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 0, 563, 564, 546, 547, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 670, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 671, 581,
	582, 583, 584, 672, 588, 589, 0, 590, 591, 0,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 673, 674, 675, 676, 0, 609,
	0, 601, 602, 603, 677, 604, 678, 0, 605, 606,
	607, 608, 0, 610, 611, 0, 0, 612, 613, 614,
	616, 617, 615, 618, 0, 619, 0, 0, 620, 621,
	622, 679, 680, 681, 0, 624, 623, 625, 682, 689,
	626, 271, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 633, 634, 0,
	294, 635, 295, 636, 0, 637, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 638, 639, 640, 0,
	303, 304, 641, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 642, 643, 0, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 346, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	644, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 645, 646, 366, 0, 0, 0, 0, 0, 0,
	0, 367, 368, 369, 647, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 0, 373, 374, 375, 648, 649,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 650, 0, 651, 386, 0, 387, 388, 389, 390,
	391, 652, 653, 654, 471, 0, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 0, 399, 400,
	401, 403, 0, 0, 402, 655, 656, 0, 657, 0,
	404, 405, 0, 658, 0, 406, 407, 408, 0, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 659, 0, 420, 421, 0,
	0, 422, 0, 0, 0, 423, 424, 427, 0, 0,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 0,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 0, 467, 456, 0, 0, 0, 468,
	469, 0, 660, 470, 661, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	662, 0, 481, 0, 663, 482, 483, 475, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 666, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 668, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 669, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 0, 558,
	559, 557, 560, 561, 562, 0, 563, 564, 546, 547,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	670, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 671, 581, 582, 583, 584, 672, 588, 589,
	0, 590, 591, 0, 587, 578, 0, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 673, 674,
	675, 676, 0, 609, 0, 601, 602, 603, 677, 604,
	678, 0, 605, 606, 607, 608, 0, 610, 611, 0,
	0, 612, 613, 614, 616, 617, 615, 618, 0, 619,
	0, 0, 620, 621, 622, 679, 680, 681, 271, 624,
	623, 625, 682, 0, 626, 0, 0, 0, 0, 627,
	628, 683, 629, 630, 631, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	632, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 633, 634, 0, 294, 635, 295,
	636, 0, 637, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 638, 639, 640, 0, 303, 304, 641,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 642, 643,
	0, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 346, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 644, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 645, 646,
	366, 0, 0, 0, 0, 0, 0, 0, 367, 368,
	369, 647, 0, 0, 0, 370, 0, 371, 372, 0,
	0, 0, 373, 374, 375, 648, 649, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 650, 0,
	651, 386, 0, 387, 388, 389, 390, 391, 652, 653,
	654, 471, 0, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 0, 399, 400, 401, 403, 0,
	0, 402, 655, 656, 0, 657, 0, 404, 405, 0,
	658, 0, 406, 407, 408, 0, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 659, 0, 420, 421, 0, 0, 422, 0,
	0, 0, 423, 424, 427, 0, 0, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 0, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	0, 467, 456, 0, 0, 0, 468, 469, 0, 660,
	470, 661, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 0, 481,
	0, 663, 482, 483, 475, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 666, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 668, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	669, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 0, 563, 564, 546, 547, 565, 566, 0,
	567, 568, 569, 570, 571, 572, 573, 670, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 671,
	581, 582, 583, 584, 672, 588, 589, 0, 590, 591,
	0, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 673, 674, 675, 676, 0,
	609, 0, 601, 602, 603, 677, 604, 678, 0, 605,
	606, 607, 608, 0, 610, 611, 0, 0, 612, 613,
	614, 616, 617, 615, 618, 0, 619, 0, 0, 620,
	621, 622, 679, 680, 681, 271, 624, 623, 625, 682,
	0, 626, 0, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 632, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 0, 637,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	638, 639, 640, 0, 303, 304, 641, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 0, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 346, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 0, 0,
	0, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 0, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 650, 0, 651, 386, 0,
	387, 388, 389, 390, 391, 3608, 653, 654, 471, 0,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 0, 399, 400, 401, 403, 0, 0, 402, 655,
	656, 0, 657, 0, 404, 405, 0, 658, 0, 406,
	407, 408, 0, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 659,
	0, 420, 421, 0, 0, 422, 0, 0, 0, 423,
	424, 427, 0, 0, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 0, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 0, 467, 456,
	0, 0, 0, 468, 469, 0, 660, 470, 661, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 0, 481, 0, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 561, 562, 0,
	563, 564, 546, 547, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 0, 590, 591, 0, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 673, 674, 675, 676, 0, 609, 0, 601,
	602, 603, 677, 604, 678, 0, 605, 606, 607, 608,
	0, 610, 611, 0, 0, 612, 613, 614, 616, 617,
	615, 618, 0, 619, 0, 0, 620, 621, 622, 679,
	680, 681, 271, 624, 623, 625, 682, 0, 626, 0,
	0, 0, 0, 627, 628, 683, 629, 630, 631, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 632, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 633, 634,
	0, 294, 635, 295, 636, 0, 637, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 638, 639, 640,
	0, 303, 304, 641, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 642, 643, 0, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 346,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 644, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 645, 646, 366, 0, 0, 0, 0, 0,
	0, 0, 367, 368, 369, 647, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 0, 373, 374, 375, 648,
	649, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 650, 0, 651, 386, 0, 387, 388, 389,
	390, 391, 652, 653, 654, 471, 0, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 0, 399,
	400, 401, 403, 0, 0, 402, 655, 656, 0, 657,
	0, 404, 405, 0, 658, 0, 406, 407, 408, 0,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 659, 0, 420, 421,
	0, 0, 422, 0, 0, 0, 423, 424, 427, 0,
	0, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	0, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 0, 467, 456, 0, 0, 0,
	468, 469, 0, 660, 470, 661, 472, 473, 0, 0,
	474, 0, 0, 0, 476, 477, 478, 0, 0, 479,
	480, 662, 0, 481, 0, 663, 482, 483, 475, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 666,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 668, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 0, 774,
	537, 538, 539, 540, 669, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 773, 553, 554, 555, 556, 0,
	558, 559, 557, 560, 561, 562, 0, 563, 564, 546,
	547, 565, 566, 0, 567, 568, 569, 570, 571, 572,
	573, 670, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 671, 581, 582, 583, 584, 672, 588,
	589, 0, 590, 591, 0, 587, 578, 0, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 0, 600, 771,
	674, 675, 676, 0, 609, 0, 601, 602, 603, 677,
	604, 678, 0, 605, 606, 607, 608, 0, 610, 611,
	0, 0, 612, 613, 614, 616, 617, 615, 618, 0,
	619, 0, 0, 620, 621, 622, 679, 680, 681, 271,
	624, 623, 625, 682, 0, 626, 0, 0, 0, 0,
	627, 628, 683, 629, 630, 631, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 633, 634, 0, 294, 635,
	295, 636, 0, 637, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 638, 639, 640, 0, 303, 304,
	641, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 642,
	643, 0, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 346, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 644, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 645,
	646, 366, 0, 0, 0, 0, 0, 0, 0, 367,
	368, 369, 647, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 0, 373, 374, 375, 648, 649, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 650,
	0, 651, 386, 0, 387, 388, 389, 390, 391, 3535,
	653, 654, 471, 0, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 0, 399, 400, 401, 403,
	0, 0, 402, 655, 656, 0, 657, 0, 404, 405,
	0, 658, 0, 406, 407, 408, 0, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 659, 0, 420, 421, 0, 0, 422,
	0, 0, 0, 423, 424, 427, 0, 0, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 0, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 0, 467, 456, 0, 0, 0, 468, 469, 0,
	660, 470, 661, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 0,
	481, 0, 663, 482, 483, 475, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 666, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 668, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 669, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 0, 563, 564, 546, 547, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 670, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	671, 581, 582, 583, 584, 672, 588, 589, 0, 590,
	591, 0, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 673, 674, 675, 676,
	0, 609, 0, 601, 602, 603, 677, 604, 678, 0,
	605, 606, 607, 608, 0, 610, 611, 0, 0, 612,
	613, 614, 616, 617, 615, 618, 0, 619, 0, 0,
	620, 621, 622, 679, 680, 681, 271, 624, 623, 625,
	682, 0, 626, 0, 0, 0, 0, 627, 628, 683,
	629, 630, 631, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 632, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 0,
	637, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 638, 639, 640, 0, 303, 304, 641, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 0, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 346, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 0,
	0, 0, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 0,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 650, 0, 651, 386,
	0, 387, 388, 389, 390, 391, 3513, 653, 654, 471,
	0, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 0, 399, 400, 401, 403, 0, 0, 402,
	655, 656, 0, 657, 0, 404, 405, 0, 658, 0,
	406, 407, 408, 0, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	659, 0, 420, 421, 0, 0, 422, 0, 0, 0,
	423, 424, 427, 0, 0, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 0, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 0, 467,
	456, 0, 0, 0, 468, 469, 0, 660, 470, 661,
	472, 473, 0, 0, 474, 0, 0, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 0, 481, 0, 663,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 669, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 0, 558, 559, 557, 560, 561, 562,
	0, 563, 564, 546, 547, 565, 566, 0, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 0, 590, 591, 0, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 673, 674, 675, 676, 0, 609, 0,
	601, 602, 603, 677, 604, 678, 0, 605, 606, 607,
	608, 0, 610, 611, 0, 0, 612, 613, 614, 616,
	617, 615, 618, 0, 619, 0, 0, 620, 621, 622,
	679, 680, 681, 271, 624, 623, 625, 682, 0, 626,
	0, 0, 0, 0, 627, 628, 683, 629, 630, 631,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 632, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 633,
	634, 0, 294, 635, 295, 636, 0, 637, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 638, 639,
	640, 0, 303, 304, 641, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 642, 643, 0, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	346, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 644, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 645, 646, 366, 0, 0, 0, 0,
	0, 0, 0, 367, 368, 369, 647, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 0, 373, 374, 375,
	648, 649, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 650, 0, 651, 386, 0, 387, 388,
	389, 390, 391, 3510, 653, 654, 471, 0, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 0,
	399, 400, 401, 403, 0, 0, 402, 655, 656, 0,
	657, 0, 404, 405, 0, 658, 0, 406, 407, 408,
	0, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 659, 0, 420,
	421, 0, 0, 422, 0, 0, 0, 423, 424, 427,
	0, 0, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 0, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 0, 467, 456, 0, 0,
	0, 468, 469, 0, 660, 470, 661, 472, 473, 0,
	0, 474, 0, 0, 0, 476, 477, 478, 0, 0,
	479, 480, 662, 0, 481, 0, 663, 482, 483, 475,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	666, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 668, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 669, 541, 0, 542, 543,
	549, 550, 551, 544, 545, 552, 553, 554, 555, 556,
	0, 558, 559, 557, 560, 561, 562, 0, 563, 564,
	546, 547, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 670, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 671, 581, 582, 583, 584, 672,
	588, 589, 0, 590, 591, 0, 587, 578, 0, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	673, 674, 675, 676, 0, 609, 0, 601, 602, 603,
	677, 604, 678, 0, 605, 606, 607, 608, 0, 610,
	611, 0, 0, 612, 613, 614, 616, 617, 615, 618,
	0, 619, 0, 0, 620, 621, 622, 679, 680, 681,
	271, 624, 623, 625, 682, 0, 626, 0, 0, 0,
	0, 627, 628, 683, 629, 630, 631, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 633, 634, 0, 294,
	635, 295, 636, 0, 637, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 638, 639, 640, 0, 303,
	304, 641, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	642, 643, 0, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 346, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 644,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	645, 646, 366, 0, 0, 0, 0, 0, 0, 0,
	367, 368, 369, 647, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 0, 373, 374, 375, 648, 649, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	650, 0, 651, 386, 0, 387, 388, 389, 390, 391,
	3462, 653, 654, 471, 0, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 0, 399, 400, 401,
	403, 0, 0, 402, 655, 656, 0, 657, 0, 404,
	405, 0, 658, 0, 406, 407, 408, 0, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 659, 0, 420, 421, 0, 0,
	422, 0, 0, 0, 423, 424, 427, 0, 0, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 0, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 0, 467, 456, 0, 0, 0, 468, 469,
	0, 660, 470, 661, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	0, 481, 0, 663, 482, 483, 475, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 666, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 668, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 669, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 0, 563, 564, 546, 547, 565,
	566, 0, 567, 568, 569, 570, 571, 572, 573, 670,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 671, 581, 582, 583, 584, 672, 588, 589, 0,
	590, 591, 0, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 673, 674, 675,
	676, 0, 609, 0, 601, 602, 603, 677, 604, 678,
	0, 605, 606, 607, 608, 0, 610, 611, 0, 0,
	612, 613, 614, 616, 617, 615, 618, 0, 619, 0,
	0, 620, 621, 622, 679, 680, 681, 271, 624, 623,
	625, 682, 0, 626, 0, 0, 0, 0, 627, 628,
	683, 629, 630, 631, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 632,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 633, 634, 0, 294, 635, 295, 636,
	0, 637, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 638, 639, 640, 0, 303, 304, 641, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 642, 643, 0,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 346, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 644, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 645, 646, 366,
	0, 0, 0, 0, 0, 0, 0, 367, 368, 369,
	647, 0, 0, 0, 370, 0, 371, 372, 0, 0,
	0, 373, 374, 375, 648, 649, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 650, 0, 651,
	386, 0, 387, 388, 389, 390, 391, 3460, 653, 654,
	471, 0, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 0, 399, 400, 401, 403, 0, 0,
	402, 655, 656, 0, 657, 0, 404, 405, 0, 658,
	0, 406, 407, 408, 0, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 659, 0, 420, 421, 0, 0, 422, 0, 0,
	0, 423, 424, 427, 0, 0, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 0, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 0,
	467, 456, 0, 0, 0, 468, 469, 0, 660, 470,
	661, 472, 473, 0, 0, 474, 0, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 0, 481, 0,
	663, 482, 483, 475, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 666, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	668, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 669,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 0, 563, 564, 546, 547, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 670, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 671, 581,
	582, 583, 584, 672, 588, 589, 0, 590, 591, 0,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 673, 674, 675, 676, 0, 609,
	0, 601, 602, 603, 677, 604, 678, 0, 605, 606,
	607, 608, 0, 610, 611, 0, 0, 612, 613, 614,
	616, 617, 615, 618, 0, 619, 0, 0, 620, 621,
	622, 679, 680, 681, 271, 624, 623, 625, 682, 0,
	626, 0, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 632, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	633, 634, 0, 294, 635, 295, 636, 0, 637, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 638,
	639, 640, 0, 303, 304, 641, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 642, 643, 0, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 346, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 644, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 645, 646, 366, 0, 0, 0,
	0, 0, 0, 0, 367, 368, 369, 647, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 0, 373, 374,
	375, 648, 649, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 650, 0, 651, 386, 0, 387,
	388, 389, 390, 391, 3445, 653, 654, 471, 0, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	0, 399, 400, 401, 403, 0, 0, 402, 655, 656,
	0, 657, 0, 404, 405, 0, 658, 0, 406, 407,
	408, 0, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 659, 0,
	420, 421, 0, 0, 422, 0, 0, 0, 423, 424,
	427, 0, 0, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 0, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 0, 467, 456, 0,
	0, 0, 468, 469, 0, 660, 470, 661, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 0, 481, 0, 663, 482, 483,
	475, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 666, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 668, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 669, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 0, 563,
	564, 546, 547, 565, 566, 0, 567, 568, 569, 570,
	571, 572, 573, 670, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 671, 581, 582, 583, 584,
	672, 588, 589, 0, 590, 591, 0, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 673, 674, 675, 676, 0, 609, 0, 601, 602,
	603, 677, 604, 678, 0, 605, 606, 607, 608, 0,
	610, 611, 0, 0, 612, 613, 614, 616, 617, 615,
	618, 0, 619, 0, 0, 620, 621, 622, 679, 680,
	681, 271, 624, 623, 625, 682, 0, 626, 0, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 633, 634, 0,
	294, 635, 295, 636, 0, 637, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 638, 639, 640, 0,
	303, 304, 641, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 642, 643, 0, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 346, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	644, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 645, 646, 366, 0, 0, 0, 0, 0, 0,
	0, 367, 368, 369, 647, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 0, 373, 374, 375, 648, 649,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 650, 0, 651, 386, 0, 387, 388, 389, 390,
	391, 3051, 653, 654, 471, 0, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 0, 399, 400,
	401, 403, 0, 0, 402, 655, 656, 0, 657, 0,
	404, 405, 0, 658, 0, 406, 407, 408, 0, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 659, 0, 420, 421, 0,
	0, 422, 0, 0, 0, 423, 424, 427, 0, 0,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 0,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 0, 467, 456, 0, 0, 0, 468,
	469, 0, 660, 470, 661, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	662, 0, 481, 0, 663, 482, 483, 475, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 666, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 668, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 669, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 0, 558,
	559, 557, 560, 561, 562, 0, 563, 564, 546, 547,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	670, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 671, 581, 582, 583, 584, 672, 588, 589,
	0, 590, 591, 0, 587, 578, 0, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 673, 674,
	675, 676, 0, 609, 0, 601, 602, 603, 677, 604,
	678, 0, 605, 606, 607, 608, 0, 610, 611, 0,
	0, 612, 613, 614, 616, 617, 615, 618, 0, 619,
	0, 0, 620, 621, 622, 679, 680, 681, 271, 624,
	623, 625, 682, 0, 626, 0, 0, 0, 0, 627,
	628, 683, 629, 630, 631, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	632, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 633, 634, 0, 294, 635, 295,
	636, 0, 637, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 638, 639, 640, 0, 303, 304, 641,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 642, 643,
	0, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 346, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 644, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 645, 646,
	366, 0, 0, 0, 0, 0, 0, 0, 367, 368,
	369, 647, 0, 0, 0, 370, 0, 371, 372, 0,
	0, 0, 373, 374, 375, 648, 649, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 650, 0,
	651, 386, 0, 387, 388, 389, 390, 391, 652, 653,
	654, 471, 0, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 0, 399, 400, 401, 403, 0,
	0, 402, 655, 656, 0, 657, 0, 404, 405, 0,
	658, 0, 406, 407, 408, 0, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 659, 0, 420, 421, 0, 0, 422, 0,
	0, 0, 423, 424, 427, 0, 0, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 0, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	0, 467, 456, 0, 0, 0, 468, 469, 0, 660,
	470, 661, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 0, 481,
	0, 663, 482, 483, 475, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 666, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 668, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	669, 541, 0, 542, 543, 755, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 0, 563, 564, 546, 547, 565, 566, 0,
	567, 568, 569, 570, 571, 572, 573, 670, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 671,
	581, 582, 583, 584, 672, 588, 589, 0, 590, 591,
	0, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 673, 674, 675, 676, 0,
	609, 0, 601, 602, 603, 677, 604, 678, 0, 605,
	606, 607, 608, 0, 610, 611, 0, 0, 612, 613,
	614, 616, 617, 615, 618, 0, 619, 0, 0, 620,
	621, 622, 679, 680, 681, 271, 624, 623, 625, 682,
	0, 626, 0, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 632, 0, 2293,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 0, 637,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	638, 639, 640, 0, 303, 304, 641, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 0, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 346, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 0, 0,
	0, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 0, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 650, 0, 651, 386, 0,
	387, 388, 389, 390, 391, 652, 653, 654, 471, 0,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 0, 399, 400, 401, 403, 0, 0, 402, 655,
	656, 0, 657, 0, 404, 405, 0, 658, 0, 406,
	407, 408, 0, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 659,
	0, 420, 421, 0, 0, 422, 0, 0, 0, 423,
	424, 427, 0, 0, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 0, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 0, 467, 456,
	0, 0, 0, 468, 469, 0, 660, 470, 661, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 0, 481, 0, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 561, 562, 0,
	0, 564, 546, 547, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 0, 590, 591, 0, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 673, 674, 675, 676, 0, 609, 0, 601,
	602, 603, 677, 604, 678, 0, 605, 606, 607, 608,
	0, 610, 611, 0, 0, 612, 613, 614, 616, 617,
	615, 618, 0, 619, 0, 0, 620, 621, 622, 679,
	680, 681, 271, 624, 623, 625, 682, 0, 626, 0,
	0, 0, 0, 627, 628, 683, 629, 630, 631, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 632, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 633, 634,
	0, 294, 635, 295, 636, 0, 637, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 638, 639, 640,
	0, 303, 304, 641, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 642, 643, 0, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 346,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 644, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 645, 646, 366, 0, 0, 0, 0, 0,
	0, 0, 367, 368, 369, 647, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 0, 373, 374, 375, 648,
	649, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 650, 0, 651, 386, 0, 387, 388, 389,
	390, 391, 1282, 653, 654, 471, 0, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 0, 399,
	400, 401, 403, 0, 0, 402, 655, 656, 0, 657,
	0, 404, 405, 0, 658, 0, 406, 407, 408, 0,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 659, 0, 420, 421,
	0, 0, 422, 0, 0, 0, 423, 424, 427, 0,
	0, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	0, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 0, 467, 456, 0, 0, 0,
	468, 469, 0, 660, 470, 661, 472, 473, 0, 0,
	474, 0, 0, 0, 476, 477, 478, 0, 0, 479,
	480, 662, 0, 481, 0, 663, 482, 483, 475, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 666,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 668, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 669, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 552, 553, 554, 555, 556, 0,
	558, 559, 557, 560, 561, 562, 0, 563, 564, 546,
	547, 565, 566, 0, 567, 568, 569, 570, 571, 572,
	573, 670, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 671, 581, 582, 583, 584, 672, 588,
	589, 0, 590, 591, 0, 587, 578, 0, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 0, 600, 673,
	674, 675, 676, 0, 609, 0, 601, 602, 603, 677,
	604, 678, 0, 605, 606, 607, 608, 0, 610, 611,
	0, 0, 612, 613, 614, 616, 617, 615, 618, 0,
	619, 0, 0, 620, 621, 622, 679, 680, 681, 271,
	624, 623, 625, 682, 0, 626, 0, 0, 0, 0,
	627, 628, 683, 629, 630, 631, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 633, 634, 0, 294, 635,
	295, 636, 0, 637, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 638, 639, 640, 0, 303, 304,
	641, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 642,
	643, 0, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 346, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 644, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 645,
	646, 366, 0, 0, 0, 0, 0, 0, 0, 367,
	368, 369, 647, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 0, 373, 374, 375, 648, 649, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 650,
	0, 651, 386, 0, 387, 388, 389, 390, 391, 652,
	653, 654, 471, 0, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 0, 399, 400, 401, 403,
	0, 0, 402, 655, 656, 0, 657, 0, 404, 405,
	0, 658, 0, 406, 407, 408, 0, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 659, 0, 420, 421, 0, 0, 422,
	0, 0, 0, 423, 424, 427, 0, 0, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 0, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 0, 467, 456, 0, 0, 0, 468, 469, 0,
	660, 470, 661, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 0,
	481, 0, 663, 482, 483, 475, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 666, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 668, 513, 514, 1214, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 669, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 0, 563, 564, 546, 547, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 670, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	671, 581, 582, 583, 584, 672, 588, 589, 0, 590,
	591, 0, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 673, 674, 675, 676,
	0, 609, 0, 601, 602, 603, 677, 604, 678, 0,
	605, 606, 607, 608, 0, 610, 611, 0, 0, 612,
	613, 614, 616, 617, 615, 618, 0, 619, 0, 0,
	620, 621, 622, 679, 680, 681, 271, 624, 623, 625,
	682, 0, 626, 0, 0, 0, 0, 627, 628, 683,
	629, 630, 631, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 632, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 0,
	637, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 638, 639, 640, 0, 303, 304, 641, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 0, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 346, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 0,
	0, 0, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 0,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 650, 0, 651, 0,
	0, 387, 388, 389, 390, 391, 652, 653, 654, 471,
	0, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 0, 399, 400, 401, 403, 0, 0, 402,
	655, 656, 0, 657, 0, 404, 405, 0, 658, 0,
	406, 407, 408, 0, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	659, 0, 420, 421, 0, 0, 422, 0, 0, 0,
	423, 424, 427, 0, 0, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 0, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 0, 467,
	456, 0, 0, 0, 468, 469, 0, 660, 470, 661,
	472, 473, 0, 0, 474, 0, 0, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 0, 481, 0, 663,
	482, 483, 475, 484, 485, 0, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 0, 511, 512, 668,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 669, 0,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 0, 558, 559, 557, 560, 561, 562,
	0, 563, 564, 546, 547, 565, 566, 0, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 0, 590, 591, 0, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 673, 674, 675, 676, 0, 609, 0,
	601, 602, 603, 677, 604, 678, 0, 605, 606, 607,
	608, 0, 610, 611, 0, 0, 612, 613, 614, 616,
	617, 615, 618, 0, 619, 0, 0, 620, 621, 622,
	679, 680, 681, 0, 624, 623, 625, 682, 0, 626,
	0, 0, 0, 0, 627, 628, 683, 629, 630, 631,
	1788, 1789, 0, 1821, 1822, 1823, 1832, 1833, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1825, 1819, 0, 0, 0, 0, 0, 0,
	1791, 0, 0, 0, 0, 0, 0, 0, 0, 1838,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1844, 0, 0, 0,
	0, 0, 0, 1788, 1789, 1790, 1821, 1822, 1823, 1832,
	1833, 1834, 0, 0, 0, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 1807, 1825, 1819, 0, 0, 0,
	0, 0, 0, 1791, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1844,
	0, 0, 0, 0, 0, 0, 0, 0, 1790, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1810, 0,
	0, 0, 0, 0, 0, 0, 0, 1807, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1813,
	1814, 1815, 1816, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1788, 1789, 0, 1821, 1822, 1823, 1832, 1833,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1825, 1819, 0, 1829, 0, 0,
	1839, 0, 1791, 0, 0, 0, 0, 1818, 1820, 0,
	0, 1838, 1813, 1814, 1815, 1816, 0, 0, 0, 0,
	0, 0, 1796, 0, 1835, 0, 1836, 0, 1844, 0,
	0, 0, 0, 1805, 1806, 0, 0, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 0, 0,
	0, 1827, 0, 0, 0, 0, 1807, 0, 0, 0,
	1829, 0, 0, 1839, 0, 0, 1811, 0, 0, 0,
	1818, 1820, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1835, 0, 1836,
	0, 0, 0, 0, 0, 0, 1805, 1806, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1837, 0, 0, 0, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1826, 1811,
	0, 1813, 1814, 1815, 1816, 0, 0, 0, 0, 1841,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1837, 0, 0, 0, 0, 0, 1829,
	0, 0, 1839, 0, 0, 0, 0, 0, 0, 1818,
	1820, 1826, 0, 0, 1817, 0, 0, 0, 0, 0,
	0, 0, 1841, 0, 0, 0, 1835, 0, 1836, 0,
	0, 0, 0, 0, 0, 1805, 1806, 1812, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 0, 0, 0, 1811, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1830, 0, 0,
	1826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1841, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1802, 1803, 1809,
	1831, 1808, 1804, 0, 1801, 1799, 1800, 1792, 1793, 1794,
	1795, 1797, 1798, 0, 0, 0, 1817, 4655, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1802, 1803, 1809, 1831, 1808, 1804, 1830, 1801, 1799, 1800,
	1792, 1793, 1794, 1795, 1797, 1798, 0, 0, 1788, 1789,
	4651, 1821, 1822, 1823, 1832, 1833, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 0, 0,
	1825, 1819, 0, 0, 0, 0, 0, 0, 1791, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 1790, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1810, 0, 0, 0, 0, 0, 0,
	0, 0, 1807, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1802,
	1803, 1809, 1831, 1808, 1804, 0, 1801, 1799, 1800, 1792,
	1793, 1794, 1795, 1797, 1798, 0, 0, 1788, 1789, 4566,
	1821, 1822, 1823, 1832, 1833, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1825,
	1819, 0, 0, 0, 0, 0, 0, 1791, 0, 0,
	0, 0, 0, 0, 0, 0, 1838, 1813, 1814, 1815,
	1816, 0, 0, 0, 0, 0, 0, 1796, 0, 0,
	0, 0, 0, 1844, 0, 0, 0, 0, 0, 0,
	1788, 1789, 1790, 1821, 1822, 1823, 1832, 1833, 1834, 0,
	0, 0, 1810, 0, 0, 0, 0, 0, 0, 0,
	0, 1807, 1825, 1819, 0, 1829, 0, 0, 1839, 0,
	1791, 0, 0, 0, 0, 1818, 1820, 0, 0, 1838,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1835, 0, 1836, 0, 1844, 0, 0, 0,
	0, 1805, 1806, 0, 0, 1790, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 0, 0, 0, 1827,
	0, 0, 0, 0, 1807, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1811, 0, 1813, 1814, 1815, 1816,
	0, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1837, 0,
	0, 0, 0, 0, 1829, 0, 0, 1839, 0, 0,
	0, 0, 0, 0, 1818, 1820, 1826, 0, 0, 1813,
	1814, 1815, 1816, 0, 0, 0, 0, 1841, 0, 1796,
	0, 1835, 0, 1836, 0, 0, 0, 0, 0, 0,
	1805, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	1839, 0, 0, 1811, 0, 0, 0, 1818, 1820, 0,
	0, 0, 1817, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1835, 0, 1836, 0, 0, 0,
	0, 0, 0, 1805, 1806, 1812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1837, 0, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1830, 0, 0, 1826, 1811, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1841, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1826, 0,
	0, 1817, 0, 0, 0, 0, 0, 0, 0, 1841,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1802, 1803, 1809, 1831, 1808,
	1804, 1830, 1801, 1799, 1800, 1792, 1793, 1794, 1795, 1797,
	1798, 0, 0, 0, 1817, 4525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 0, 0, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1788, 1789, 0, 1821, 1822,
	1823, 1832, 1833, 1834, 1830, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1825, 1819, 0,
	0, 0, 0, 0, 0, 1791, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 1843, 0, 0, 0, 0,
	0, 0, 0, 0, 1828, 0, 0, 0, 0, 0,
	0, 1844, 0, 0, 1802, 1803, 1809, 1831, 1808, 1804,
	1790, 1801, 1799, 1800, 1792, 1793, 1794, 1795, 1797, 1798,
	1810, 0, 0, 0, 4524, 0, 0, 0, 0, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1802, 1803, 1809,
	1831, 1808, 1804, 0, 1801, 1799, 1800, 1792, 1793, 1794,
	1795, 1797, 1798, 0, 0, 0, 0, 4335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 1814, 1815, 1816, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1788, 1789, 0, 1821,
	1822, 1823, 1832, 1833, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1825, 1819,
	0, 0, 1829, 0, 0, 1839, 1791, 0, 0, 0,
	0, 0, 1818, 1820, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1835,
	0, 1836, 1844, 0, 0, 0, 0, 0, 1805, 1806,
	0, 1790, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 0, 1827, 0, 0, 0,
	1807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 0, 1788, 1789, 0, 1821, 1822, 1823,
	1832, 1833, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1825, 1819, 0, 0,
	0, 0, 0, 0, 1791, 0, 0, 0, 0, 0,
	0, 0, 0, 1838, 0, 1837, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1844, 0, 0, 1826, 0, 1813, 1814, 1815, 1816, 1790,
	0, 0, 0, 0, 1841, 1796, 0, 0, 0, 1810,
	0, 0, 0, 0, 0, 0, 0, 0, 1807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 0, 0, 1839, 0, 0, 0,
	0, 0, 0, 1818, 1820, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1835, 0, 1836, 0, 0, 0, 0, 0, 0, 1805,
	1806, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1813, 1814, 1815, 1816, 1827, 0, 0,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 1830,
	0, 0, 1811, 0, 0, 1788, 1789, 0, 1821, 1822,
	1823, 1832, 1833, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1825, 1819, 0,
	1843, 1829, 0, 0, 1839, 1791, 0, 0, 0, 0,
	0, 1818, 1820, 0, 1838, 0, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1835, 0,
	1836, 1844, 0, 0, 1826, 0, 0, 1805, 1806, 0,
	1790, 0, 0, 0, 0, 1841, 0, 0, 0, 0,
	1810, 0, 0, 0, 0, 1827, 0, 0, 0, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1811, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1802, 1803, 1809, 1831, 1808, 1804, 0, 1801,
	1799, 1800, 1792, 1793, 1794, 1795, 1797, 1798, 0, 0,
	1817, 0, 4169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1837, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	0, 0, 1826, 0, 1813, 1814, 1815, 1816, 0, 0,
	0, 0, 0, 1841, 1796, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 1829, 0, 0, 1839, 0, 0, 0, 0,
	0, 0, 1818, 1820, 0, 0, 0, 0, 1817, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1835,
	0, 1836, 0, 0, 0, 0, 0, 0, 1805, 1806,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 1811, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1802, 1803, 1809, 1831, 1808, 1804, 0,
	1801, 1799, 1800, 1792, 1793, 1794, 1795, 1797, 1798, 1843,
	0, 0, 0, 4099, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1837, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1841, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1802, 1803, 1809, 1831, 1808, 1804, 0, 1801, 1799,
	1800, 1792, 1793, 1794, 1795, 1797, 1798, 0, 0, 1817,
	0, 4098, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 1788, 1789, 0, 1821, 1822,
	1823, 1832, 1833, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1825, 1819, 1830,
	0, 0, 0, 0, 0, 1791, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 1844, 0, 0, 0, 0, 0, 0, 0, 0,
	1790, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1802, 1803, 1809, 1831, 1808, 1804, 0, 1801,
	1799, 1800, 1792, 1793, 1794, 1795, 1797, 1798, 0, 0,
	0, 0, 4097, 0, 1813, 1814, 1815, 1816, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1788, 1789, 0, 1821,
	1822, 1823, 1832, 1833, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1825, 1819,
	0, 0, 1829, 0, 0, 1839, 1791, 0, 0, 0,
	0, 0, 1818, 1820, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1835,
	0, 1836, 1844, 0, 0, 0, 0, 0, 1805, 1806,
	0, 1790, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 0, 1827, 0, 0, 0,
	1807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 0, 1788, 1789, 0, 1821, 1822, 1823,
	1832, 1833, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1825, 1819, 0, 0,
	0, 0, 0, 0, 1791, 0, 0, 0, 0, 0,
	0, 0, 0, 1838, 0, 1837, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1844, 0, 0, 1826, 0, 1813, 1814, 1815, 1816, 1790,
	0, 0, 0, 0, 1841, 1796, 0, 0, 0, 1810,
	0, 0, 0, 0, 0, 0, 0, 0, 1807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 0, 0, 1839, 0, 0, 0,
	0, 0, 0, 1818, 1820, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1835, 0, 1836, 0, 0, 0, 0, 0, 0, 1805,
	1806, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1813, 1814, 1815, 1816, 1827, 0, 0,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 1830,
	0, 0, 1811, 0, 0, 1788, 1789, 0, 1821, 1822,
	1823, 1832, 1833, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1825, 1819, 0,
	1843, 1829, 0, 0, 1839, 1791, 0, 0, 0, 0,
	0, 1818, 1820, 0, 1838, 0, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1835, 0,
	1836, 1844, 0, 0, 1826, 0, 0, 1805, 1806, 0,
	1790, 0, 0, 0, 0, 1841, 0, 0, 0, 0,
	1810, 0, 0, 0, 0, 1827, 0, 0, 0, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1811, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1802, 1803, 1809, 1831, 1808, 1804, 0, 1801,
	1799, 1800, 1792, 1793, 1794, 1795, 1797, 1798, 0, 0,
	1817, 0, 3755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1837, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	0, 0, 1826, 0, 1813, 1814, 1815, 1816, 0, 0,
	0, 0, 0, 1841, 1796, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 1829, 0, 0, 1839, 0, 0, 0, 0,
	0, 0, 1818, 1820, 0, 0, 0, 0, 1817, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1835,
	0, 1836, 0, 0, 0, 0, 0, 0, 1805, 1806,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 1811, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1802, 1803, 1809, 1831, 1808, 1804, 0,
	1801, 1799, 1800, 1792, 1793, 1794, 1795, 1797, 1798, 1843,
	0, 0, 0, 3259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1837, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1841, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1802, 1803, 1809, 1831, 1808, 1804, 0, 1801, 1799,
	1800, 1792, 1793, 1794, 1795, 1797, 1798, 0, 0, 1817,
	0, 3258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 1788, 1789, 0, 1821, 1822,
	1823, 1832, 1833, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1825, 1819, 1830,
	0, 0, 0, 0, 0, 1791, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 1844, 0, 0, 0, 0, 0, 0, 0, 0,
	1790, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1802, 1803, 1809, 1831, 1808, 1804, 0, 1801,
	1799, 1800, 1792, 1793, 1794, 1795, 1797, 1798, 0, 0,
	0, 0, 3257, 0, 1813, 1814, 1815, 1816, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1788, 1789, 0, 1821,
	1822, 1823, 1832, 1833, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1825, 1819,
	0, 0, 1829, 0, 0, 1839, 1791, 0, 0, 0,
	0, 0, 1818, 1820, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1835,
	0, 1836, 1844, 0, 0, 0, 0, 0, 1805, 1806,
	0, 1790, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 0, 1827, 0, 0, 0,
	1807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 0, 1788, 1789, 0, 1821, 1822, 1823,
	1832, 1833, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1825, 1819, 0, 0,
	0, 0, 0, 0, 1791, 0, 0, 0, 0, 0,
	0, 0, 0, 1838, 0, 1837, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1844, 0, 0, 1826, 0, 1813, 1814, 1815, 1816, 1790,
	0, 0, 0, 0, 1841, 1796, 0, 0, 0, 1810,
	0, 0, 0, 0, 0, 0, 0, 0, 1807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 0, 0, 1839, 0, 0, 0,
	0, 0, 0, 1818, 1820, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1835, 0, 1836, 0, 0, 0, 0, 0, 0, 1805,
	1806, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1813, 1814, 1815, 1816, 1827, 0, 0,
	0, 0, 0, 1796, 4804, 0, 0, 0, 0, 1830,
	0, 0, 1811, 0, 0, 0, 1788, 1789, 0, 1821,
	1822, 1823, 1832, 1833, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1825, 1819,
	1843, 1829, 0, 0, 1839, 0, 1791, 0, 0, 0,
	0, 1818, 1820, 0, 0, 1838, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1835, 0,
	1836, 0, 1844, 0, 1826, 0, 0, 1805, 1806, 0,
	0, 1790, 0, 0, 0, 1841, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 1827, 0, 0, 0, 0,
	1807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1811, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1802, 1803, 1809, 1831, 1808, 1804, 0, 1801,
	1799, 1800, 1792, 1793, 1794, 1795, 1797, 1798, 0, 0,
	1817, 0, 3256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1837, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	0, 0, 1826, 0, 0, 1813, 1814, 1815, 1816, 0,
	0, 0, 0, 1841, 0, 1796, 0, 3321, 0, 0,
	1830, 3320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 0, 1829, 0, 0, 1839, 0, 0, 0,
	0, 0, 0, 1818, 1820, 0, 0, 0, 1817, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1835, 0, 1836, 0, 0, 0, 0, 0, 0, 1805,
	1806, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 0, 1811, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1802, 1803, 1809, 1831, 1808, 1804, 0,
	1801, 1799, 1800, 1792, 1793, 1794, 1795, 1797, 1798, 1843,
	0, 3221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1841, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1802, 1803, 1809, 1831, 1808, 1804, 0, 1801, 1799,
	1800, 1792, 1793, 1794, 1795, 1797, 1798, 0, 0, 0,
	1817, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1788, 1789, 1812, 1821, 1822, 1823, 1832, 1833, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1825, 1819, 0, 0, 0, 0, 3192,
	1830, 1791, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1844, 0, 0,
	0, 1843, 0, 0, 0, 0, 1790, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 0, 0, 0,
	0, 0, 0, 0, 0, 1807, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3193, 0, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1802, 1803, 1809, 1831, 1808, 1804, 0,
	1801, 1799, 1800, 1792, 1793, 1794, 1795, 1797, 1798, 0,
	1813, 1814, 1815, 1816, 0, 0, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 2729, 0, 0, 0, 0,
	0, 0, 1788, 1789, 0, 1821, 1822, 1823, 1832, 1833,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1825, 1819, 0, 0, 1829, 2728,
	0, 1839, 1791, 0, 0, 0, 0, 0, 1818, 1820,
	0, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1835, 0, 1836, 1844, 0,
	0, 0, 0, 0, 1805, 1806, 0, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 0, 0,
	0, 0, 1827, 0, 0, 0, 1807, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 0, 0,
	1788, 1789, 0, 1821, 1822, 1823, 1832, 1833, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1825, 1819, 0, 0, 0, 0, 0, 0,
	1791, 0, 0, 0, 0, 0, 0, 0, 0, 1838,
	0, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1844, 0, 0, 1826,
	0, 1813, 1814, 1815, 1816, 1790, 0, 0, 0, 0,
	1841, 1796, 0, 0, 0, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 1807, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	0, 0, 1839, 0, 0, 0, 0, 0, 0, 1818,
	1820, 0, 0, 0, 0, 1817, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1835, 0, 1836, 0,
	0, 0, 0, 0, 0, 1805, 1806, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1813,
	1814, 1815, 1816, 1827, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 1830, 0, 0, 1811, 0,
	0, 1788, 1789, 0, 1821, 1822, 1823, 1832, 1833, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1825, 1819, 0, 1843, 1829, 0, 0,
	1839, 1791, 0, 0, 0, 0, 0, 1818, 1820, 0,
	1838, 0, 1837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1835, 0, 1836, 1844, 0, 0,
	1826, 0, 0, 1805, 1806, 0, 1790, 0, 0, 0,
	0, 1841, 0, 0, 0, 0, 1810, 0, 0, 0,
	0, 1827, 0, 0, 0, 1807, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1811, 0, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1802, 1803,
	1809, 1831, 1808, 1804, 0, 1801, 1799, 1800, 1792, 1793,
	1794, 1795, 1797, 1798, 0, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 1826, 1068,
	1813, 1814, 1815, 1816, 0, 0, 0, 0, 0, 1841,
	1796, 0, 0, 0, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 1829, 0,
	0, 1839, 0, 0, 0, 0, 0, 0, 1818, 1820,
	0, 0, 0, 0, 1817, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1835, 0, 1836, 0, 0,
	0, 0, 0, 0, 1805, 1806, 0, 1812, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 0, 0, 1811, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1802,
	1803, 1809, 1831, 1808, 1804, 0, 1801, 1799, 1800, 1792,
	1793, 1794, 1795, 1797, 1798, 1843, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1841, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1802, 1803, 1809,
	1831, 1808, 1804, 0, 1801, 1799, 1800, 1792, 1793, 1794,
	1795, 1797, 1798, 0, 0, 1817, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1788, 1789, 1812, 1821,
	1822, 1823, 1832, 1833, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1825, 1819,
	0, 0, 0, 0, 0, 1830, 1791, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1844, 0, 0, 0, 1843, 0, 0, 0,
	0, 1790, 0, 0, 0, 0, 0, 0, 0, 3736,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	1807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1802, 1803,
	1809, 1831, 1808, 1804, 0, 1801, 1799, 1800, 1792, 1793,
	1794, 1795, 1797, 1798, 0, 1813, 1814, 1815, 1816, 0,
	0, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 3327, 0, 0, 0, 0, 0, 1788, 1789, 0,
	1821, 1822, 1823, 1832, 1833, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1825,
	1819, 0, 0, 1829, 3322, 0, 1839, 1791, 0, 0,
	0, 0, 0, 1818, 1820, 0, 1838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1835, 0, 1836, 1844, 0, 0, 0, 0, 0, 1805,
	1806, 0, 1790, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 0, 0, 1827, 0, 0,
	0, 1807, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1811, 0, 0, 1788, 1789, 0, 1821, 1822,
	1823, 1832, 1833, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1825, 1819, 0,
	0, 0, 0, 0, 0, 1791, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 0, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1844, 0, 0, 1826, 0, 1813, 1814, 1815, 1816,
	1790, 0, 0, 0, 0, 1841, 1796, 0, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 0, 0, 1839, 0, 0,
	0, 0, 0, 0, 1818, 1820, 0, 0, 0, 0,
	1817, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1835, 0, 1836, 0, 0, 0, 0, 0, 0,
	1805, 1806, 0, 1812, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 1814, 1815, 1816, 1827, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	1830, 0, 0, 1811, 0, 0, 1788, 1789, 0, 1821,
	1822, 1823, 1832, 1833, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1825, 1819,
	0, 1843, 1829, 3260, 0, 1839, 1791, 0, 0, 0,
	0, 0, 1818, 1820, 0, 1838, 0, 1837, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1835,
	0, 1836, 1844, 0, 0, 1826, 0, 0, 1805, 1806,
	0, 1790, 0, 0, 0, 0, 1841, 0, 0, 0,
	0, 1810, 0, 0, 0, 0, 1827, 0, 0, 0,
	1807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1802, 1803, 1809, 1831, 1808, 1804, 0,
	1801, 1799, 1800, 1792, 1793, 1794, 1795, 1797, 1798, 0,
	0, 1817, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1837, 0, 0, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 1813, 1814, 1815, 1816, 0,
	0, 0, 0, 0, 1841, 1796, 0, 0, 0, 0,
	0, 1830, 0, 0, 3287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 1829, 0, 0, 1839, 0, 0, 0,
	0, 0, 0, 1818, 1820, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1835, 0, 1836, 0, 0, 0, 0, 0, 0, 1805,
	1806, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	0, 0, 1811, 0, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1802, 1803, 1809, 1831, 1808, 1804,
	0, 1801, 1799, 1800, 1792, 1793, 1794, 1795, 1797, 1798,
	1843, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1841, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1802, 1803, 1809, 1831, 1808, 1804, 0, 1801,
	1799, 1800, 1792, 1793, 1794, 1795, 1797, 1798, 0, 0,
	1817, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1788, 1789, 1812, 1821, 1822, 1823, 1832, 1833, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1825, 1819, 0, 0, 0, 0, 0,
	1830, 1791, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1844, 0, 0,
	0, 1843, 0, 0, 0, 0, 1790, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 0, 0, 0,
	0, 0, 0, 0, 0, 1807, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1802, 1803, 1809, 1831, 1808, 1804, 0,
	1801, 1799, 1800, 1792, 1793, 1794, 1795, 1797, 1798, 0,
	1813, 1814, 1815, 1816, 0, 0, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1788, 1789, 0, 1821, 1822, 1823, 1832, 1833,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1825, 1819, 0, 0, 1829, 0,
	0, 1839, 1791, 0, 0, 0, 0, 0, 1818, 1820,
	0, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1835, 0, 1836, 1844, 0,
	0, 0, 0, 0, 1805, 1806, 0, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 0, 0,
	0, 0, 1827, 0, 0, 0, 1807, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 0, 0,
	1788, 1789, 0, 1821, 1822, 1823, 1832, 1833, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1825, 1819, 0, 0, 0, 0, 0, 0,
	1791, 0, 0, 0, 0, 0, 0, 0, 0, 1838,
	0, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1844, 0, 0, 1826,
	0, 1813, 1814, 1815, 1816, 1790, 0, 0, 0, 0,
	1841, 1796, 0, 0, 0, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 1807, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	0, 0, 1839, 0, 0, 0, 0, 0, 0, 1818,
	1820, 0, 0, 0, 0, 1817, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1835, 0, 1836, 0,
	0, 0, 0, 0, 0, 1805, 1806, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1813,
	1814, 1815, 1816, 1827, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 1830, 0, 0, 1811, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 1829, 0, 0,
	1839, 0, 0, 0, 0, 0, 0, 1818, 1820, 0,
	0, 0, 1837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1835, 0, 1836, 0, 0, 0,
	1826, 0, 0, 1805, 1806, 0, 0, 0, 0, 0,
	0, 1841, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2308, 0, 0, 0, 0, 1811, 0, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1802, 1803,
	1809, 1831, 1808, 1804, 0, 1801, 1799, 1800, 1792, 1793,
	1794, 1795, 1797, 1798, 0, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1817, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 0, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1802,
	1803, 1809, 1831, 1808, 1804, 0, 1801, 1799, 1800, 1792,
	1793, 1794, 1795, 1797, 1798, 1843, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1802, 1803, 1809,
	1831, 1808, 1804, 0, 1801, 1799, 1800, 1792, 1793, 1794,
	1795, 1797, 1798,
}

var sqlPact = [...]int{
	5825, -1000, -1000, -1000, -1000, 179, -1000, -1000, 178, 177,
	173, 172, 170, 166, 165, 164, 163, 162, 161, -1000,
	-1000, -1000, -1000, -1000, -1000, 160, -1000, -1000, 158, -1000,
	157, 155, 154, -1000, -1000, 153, -1000, 150, -1000, -1000,
	-1000, -1000, 148, 145, 144, 93288, 92734, 93835, 2307, 116437,
	100427, 2039, 82804, 115883, 82250, 115329, 2196, 11686, 114775, 2740,
	143, -1000, 114221, 142, 141, 140, -1000, 113667, -1000, 1977,
	-1000, 139, -1000, 9741, 69444, 138, 137, 136, 2301, 135,
	-1000, 134, 132, -1000, -1000, 130, -1000, 16283, 1496, -1000,
	129, 127, -1000, 6431, 98218, 126, 124, 2340, 123, 122,
	67794, 121, 120, 2280, 2859, -1000, -1000, 2009, -1000, -1000,
	119, 118, 116, 111, 110, 108, 106, 105, 103, 101,
	100, 99, 97, -1000, 96, 94, 92, 91, 90, -1000,
	89, 88, 87, -1000, 86, -1000, 84, 83, 82, 79,
	78, 77, 76, 70, 66, 59, 55, 53, 52, 51,
	15082, -1000, -1000, 49, 1842, 1674, 1668, 1659, 1653, 1648,
	956, 48, 46, 45, 44, 43, 42, 41, 37, 31,
	28, 26, 25, 23, 22, 19, 17, 15, 14, 159,
	11, 9, 7, 6, 5, 3, 2, 2315, -1000, 1602,
	1105, 32063, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	124095, 116984, 1, -48, 0, -1000, 3338, 1042, 56068, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 226, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 498, 1985, 718, -1000,
	-1000, -1000, 113120, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2306, -64, -1000, 2048, -1000, -1000, -1000, -1000, -1000,
	714, -1000, 2305, 232, 2256, -1000, -1000, -1000, 3385, 2448,
	3755, 3753, 3750, 3749, 3748, 123548, 1776, 3747, 2508, 3746,
	3745, 3744, 3743, 3742, 3740, 3738, -1000, 92180, 1019, 91626,
	91072, 3392, 112573, 90518, 112019, 76167, 48111, 1054, 3382, -1000,
	-1000, -1000, -1000, -1000, -1000, 116984, -1000, 1016, -1000, -1000,
	3737, 2055, 712, 99873, -1000, -1000, 111465, 1841, -1000, -1000,
	-1000, 897, 1180, 33770, 33770, 33770, 225, -1000, -1000, -1000,
	-1000, -1000, -1000, 3736, 3734, 3732, 3731, 3730, -1000, -1000,
	81696, 25047, 81142, 80588, 110911, 24481, 89964, 89410, 3729, 3728,
	3727, 110357, 75601, 3501, 3498, 1010, 2044, 1430, -1000, -1000,
	-1000, -1000, -1000, -1000, -22, 71654, 3546, 116984, -1000, 224,
	-1000, -1000, -1000, -1000, -1000, -1000, 47542, 1015, 46973, 931,
	46404, 678, -1000, -1000, -1000, -1000, 75035, -1000, 109803, 2447,
	3726, 3725, 1124, 3723, 3271, 1742, 3722, 1890, 1203, 3721,
	3720, 3718, 3715, 3714, 3703, 3701, 1422, 109249, 2951, 1495,
	108695, 1794, 74469, 1009, 88856, 93835, 2608, 108141, 1415, 1371,
	-1000, -1000, -1000, -1000, 3073, 2841, 2832, 1314, -1000, -1000,
	-1000, -1000, 59435, 6494, 4678, -1000, -1000, 12849, 107587, 62255,
	93835, 93835, -1000, -1000, -1000, -1000, -1000, 45835, 445, 45266,
	1052, -1000, -1000, 59999, 2904, -1000, -1000, -1000, -1000, 44697,
	389, 44128, 977, 116984, -1000, 2945, 1972, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2386, 1575, 3535, 2711, 73903,
	2016, 1388, 3344, 3068, 3067, 1476, 2034, 3064, 3695, 2613,
	3063, 3061, 3059, 3050, 3049, 1630, 2564, 388, 2559, 31494,
	2927, 1625, 43559, 1624, 1487, 3047, 3044, 3568, 2013, 2023,
	1988, 80034, 3694, 3693, 3291, 3039, 3033, 2784, 3032, -1000,
	2902, 1412, -1000, -1000, -1000, -1000, -1000, 1453, -1000, -1000,
	-1000, -1000, -1000, 84445, -1000, -1000, 1316, -1000, -1000, 1316,
	-1000, -1000, -1000, -1000, -1000, 1259, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1602, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2536,
	-1000, 2047, -1000, -1000, 2540, 3302, 3302, 3302, 3377, 449,
	443, -1000, 159, -1000, -1000, 131091, -1000, -1000, 48680, 48680,
	48680, 48680, 48680, 48680, 48680, 48680, 2197, -1000, 705, -1000,
	-1000, 751, -1000, 702, 631, 575, -1000, -1000, -1000, -1000,
	-1000, -1000, 700, -1000, -1000, -1000, -1000, -1000, -1000, 3546,
	-1000, 27947, -1000, -1000, -1000, 424, 699, 48680, -1000, -1000,
	3588, 3587, 1017, -1000, 223, 910, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2943, 698,
	690, -1000, 688, 687, 685, 683, 680, -1000, 677, -1000,
	674, 672, 671, 670, 668, 667, 665, 664, -1000, 2072,
	-1000, -1000, -1000, -1000, -1000, -1000, 607, 601, 601, 601,
	-1000, 1002, -1000, -1000, -1000, 346, 599, 331, 598, 597,
	595, -1000, 662, 660, 659, 657, 655, 654, 653, 640,
	637, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1001, -1000,
	-1000, -1000, -1000, -23, 116984, -1000, 498, -23, -1000, -1000,
	635, -1000, 36075, 36075, 36075, -1000, -1000, 2303, 48680, -1000,
	3142, -1000, -11, -11, 875, 57739, -1000, 54934, 875, 387,
	760, 63363, -1000, 2901, -1000, -1000, 633, 218, -1000, -1000,
	-1000, -1000, 25611, 2898, 116984, 116984, 116984, 93835, 93835, 93835,
	3690, 3075, 48680, -1000, -1000, 68888, 116984, 94382, -1000, -1000,
	3484, 69996, 68341, 116984, 2934, 107033, 3689, -1000, -1000, -1000,
	-1000, -1000, 3174, 3687, 3686, 3685, -1000, 116984, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 244, 3171, -1000, -1000, 97664,
	244, 3134, -1000, 244, 3133, -1000, 97117, -1000, -1000, 2254,
	3132, -1000, -1000, 251, 3130, -1000, -1000, -1000, 248, 3128,
	-1000, -1000, 215, -56, 3126, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 131091, -1000, -1000,
	-1000, 106479, -1000, 3310, -1000, 116984, -1000, 48680, -1000, -1000,
	3483, 1736, 77285, 3416, -1000, -1000, -34, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2489, 2477, 1103, 2326, -1000, 3114,
	1406, 33770, 3239, -1000, -1000, -1000, -1000, -1000, 210, 25611,
	-1000, -1000, -1000, -1000, -1000, -1000, 2257, 3125, 1469, -1000,
	2325, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1936,
	3123, -1000, 2033, 3122, 1934, -1000, -1000, 2093, -1000, 3286,
	-1000, -1000, 2123, 3121, -9, -1000, -1000, 2232, -1000, -1000,
	-1000, -1000, 1952, -1000, 1298, 3117, -1000, 2710, 2710, 88302,
	3091, 61691, 59999, 71654, -27, -1000, -1000, -1000, -1000, -149,
	-1000, 23911, 131091, -1000, -1000, -1000, -1000, 1778, 131091, 907,
	-1000, -1000, 3116, -1000, 131091, 900, -1000, -1000, 3112, -1000,
	2933, -1000, -1000, 2405, 2401, -1000, -1000, 3684, -1000, -1000,
	3683, -1000, 3681, 3680, 3679, -1000, 1722, 2021, 3678, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 87755, 2299, -1000,
	-1000, 86647, 2931, -1000, 2391, 3415, -1000, 87201, 1008, -1000,
	962, 2382, -1000, 96570, 1013, 2381, -1000, 3674, 3381, 2646,
	962, 2379, -1000, -1000, -1000, -1000, -1000, 994, -1000, 65580,
	-1000, 65580, -1000, 1593, -1000, 123001, -11, 93835, 3546, -1000,
	-53, -1000, -1000, -1000, 1042, -1000, 58866, -1000, 58866, 99319,
	76731, 921, 717, 67240, 130910, -1000, 976, -1000, -1000, 131091,
	-1000, -1000, -1000, -152, 2689, -1000, 76731, 61127, 131091, -1000,
	-1000, -1000, -1000, 131091, -1000, -1000, -1000, 76731, 86647, -1000,
	105925, 86100, -1000, -1000, 1389, 2537, -1000, -1000, -1000, 76731,
	1306, 76731, 76731, 76731, -1000, 105371, -1000, -1000, 2037, 1618,
	3293, 2026, 93835, -1000, 1848, -1000, -1000, -1000, 3325, 3090,
	116984, -1000, -1000, 2929, -1000, 71107, 96023, -1000, 95476, -1000,
	94929, -1000, 93835, -1000, 93835, -1000, 3673, 3672, 3671, -1000,
	-1000, 3669, -1000, 3668, 3318, -1000, 784, 42990, 131091, 3311,
	-1000, 3667, 1943, 2927, 131091, -1000, 3089, 1686, 1672, 116984,
	-1000, -1000, 116984, -1000, 116984, -1000, -1000, -1000, 1503, -1000,
	-1000, 2485, -1000, -1000, -1000, -1000, 93835, 93835, 93835, 93835,
	1462, -1000, 42421, -1000, -1000, 3004, 3662, 1734, -1000, 1769,
	-1000, 2896, 3324, -1000, 1369, 1657, -1000, -1000, 252, -1000,
	-1000, -34, -1000, 122454, -1000, 2540, -1000, 116984, -1000, 2470,
	2921, 2926, 1735, 2320, 2585, -1000, 41852, 2539, 52094, 2324,
	159, -1000, -1000, 159, 159, 33201, -1000, -1000, 69996, 69996,
	25611, 1276, 48680, 48680, 48680, 48680, 48680, 48680, 48680, 48680,
	48680, 48680, 48680, 48680, 48680, 48680, 48680, 48680, 48680, 48680,
	48680, 48680, 48680, 48680, 48680, 48680, 48680, 48680, 48680, 48680,
	48680, 48680, 48680, 48680, 48680, 48680, 48680, 48680, 2350, 48680,
	1258, 48680, 48680, 48680, 48680, 1891, -1000, -1000, 1926, 524,
	1958, 631, -1000, -1000, -1000, 3528, 3528, 3528, 652, 652,
	652, 14452, 14452, 614, 3661, 751, -1000, 48680, -1000, 68,
	58293, 48680, 26177, -1000, 443, 9035, 2500, -1000, 442, 26775,
	-1000, -1000, -1000, 27947, 575, 41254, 48680, 986, 131091, -1000,
	-1000, 1419, 3557, 23341, 2960, 2777, 630, 811, 810, 30896,
	30298, 29700, 29102, 805, 757, 48680, 48680, 48680, 48680, 48680,
	48680, 48680, 48680, -1000, -1000, 3561, -1000, 3557, -1000, -1000,
	-1000, -1000, 3557, 1270, 1269, 3557, -1000, 3557, 3557, 6909,
	6909, 40685, 40116, 39547, 52663, 38978, 48680, 28533, 38409, 37840,
	-1000, 116984, -23, 3480, 48680, 213, -1000, 129321, -1000, 213,
	213, 625, -55, 131091, 2588, 2588, 56625, 2358, 2204, 2204,
	2204, -1000, 875, 18752, 875, 103723, 2222, 875, 875, 207,
	212, 441, 54370, 3142, 103723, 733, 615, -1, -2, -3,
	-1000, -1000, -5, -6, -1000, -1000, 93835, 613, 26177, 25611,
	198, 1968, -62, 2582, 2579, -1000, 2578, 2577, -1000, 2575,
	-1000, 1846, -63, 1252, 93835, 116984, 1337, 3660, -52, -1000,
	5980, -69, -1000, 1061, 196, 3557, -1000, -1000, -1000, -1000,
	-1000, 3659, 3657, -1000, 995, 612, 610, 421, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 607, 601, 601, 601,
	-1000, 346, 599, 331, 598, 597, 595, -1000, -1000, -1000,
	-1000, -1000, 2890, 93835, 116984, 1292, 3655, -149, 94382, -72,
	-1000, -1000, 116984, -1000, -1000, -1000, 3651, -1000, 93835, -1000,
	-1000, 93835, 244, 3107, -1000, 93835, -1000, 93835, 233, 3104,
	-1000, -1000, 116984, -1000, 93835, 93835, -1000, 116984, 116984, 116984,
	76731, 76731, 231, -1000, 93835, 855, -71, 1133, -34, -1000,
	-1000, -1000, -1000, -1000, 1316, -1000, 1683, -1000, -1000, -1000,
	-1000, -1000, -1000, 1438, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1017, -1000, -1000, -1000, -1000, -1000, -1000, 3554,
	3549, -24, -1000, -1000, 25611, -1000, -36, 1642, 1917, 1251,
	-1000, 79480, 2335, 3299, 3650, 2635, 3278, 1588, -1000, 1489,
	-1000, 3396, 84445, 3432, 3453, 1303, -1000, 2886, -1000, -1000,
	892, 1702, 1773, 1250, 1249, 84445, 2033, -1000, 69996, -1000,
	2701, 3376, 1368, 1360, 1368, 1368, 1354, -1000, 84445, 1770,
	1248, 1246, 1244, -1000, -1000, 1953, 1949, -1000, -1000, 104824,
	-1000, 1239, 1234, 3497, 2536, 2180, 791, 1930, -1000, -38,
	3431, 3447, 1282, -1000, 2882, 1233, -1000, -1000, -1000, 3375,
	93835, 25611, 1538, 1537, 1536, 1766, 1232, -25, -1000, 3429,
	1231, 1230, -1000, 1018, 5126, 3229, -1000, 76731, 1018, 1018,
	1875, 3078, 2671, 1583, -1000, 2681, 814, 2679, -1000, -1000,
	-1000, 814, -27, 71654, 116984, 195, -1000, 68, 48680, 48680,
	68, 48680, 68, 3407, 3074, 3069, -1000, -1000, -1000, -1000,
	-1000, 3649, 1979, 2504, -1000, -1000, 591, 2378, 2881, 116984,
	2597, -29, 93835, -1000, 70560, 3060, 72209, 2033, 2377, -1000,
	-1000, 85546, -1000, 3057, 498, 2372, -1000, 658, 3648, 3040,
	-1000, 121907, -1000, 3310, 1186, 3036, 1058, 782, 3479, -1000,
	782, 66132, -1000, 116984, -1000, -11, 1144, 78386, -74, -76,
	440, -1000, 104277, 116984, 1056, 78933, 116984, 3249, 2003, 1996,
	939, 59999, -1000, 59999, -77, -152, 2677, 1484, 921, 921,
	814, -1000, 814, -1000, 93835, 2925, -1000, -1000, 76731, 921,
	921, 921, -1000, -1000, -1000, -1000, 3646, 3643, 3642, 3641,
	-1000, -1000, 950, 93835, 116984, 93835, -1000, -1000, 1570, -1000,
	194, -1000, 116984, -1000, 116984, 116984, 93835, -1000, 950, 116984,
	950, 116984, 950, 116984, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 68, -1000, -1000, 131091, -1000, 48680, -1000, -1000, 1485,
	3640, 1612, -1000, 2924, -1000, 2923, -1000, 35, -1000, -1000,
	1879, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3639, 131091,
	-1000, 1758, -1000, -1000, -1000, -1000, 93835, 93835, 93835, 93835,
	116984, 3227, -1000, 116984, 3222, 93835, -1000, -1000, 84445, -1000,
	2470, 2921, -1000, -1000, -1000, -1000, -1000, -1000, 1402, 2262,
	-1000, 2531, -1000, 1545, -1000, -1000, -1000, 131091, 53232, -1000,
	-1000, 131091, 1807, -1000, 51525, 50956, -1000, -1000, 1741, 93835,
	2591, -1000, 2591, -148, -1000, 129140, 2527, 93835, -1000, -1000,
	-1000, -1000, -1000, 890, 609, 609, 1345, 1345, 1345, 1345,
	3402, 444, 6783, 8951, 9420, 9420, 628, 628, 628, 628,
	628, 9420, 5057, 652, 652, 5057, 5057, 5057, 5057, 5057,
	652, 652, 652, 9420, 9420, 9420, 652, 14452, 131189, 11274,
	48680, 48680, 1229, 1874, 524, 9624, 48680, 8257, 8257, 8257,
	8257, -1000, 1806, -1000, -1000, -1000, -1000, 2876, 590, 52663,
	52663, -1000, -1000, -1000, -1000, 27361, 48680, -1000, -1000, -1000,
	-1000, 37242, -1000, -1000, 128435, -313, 429, -1000, 192, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 428, -139, 30, -1000, 48680, 48680, 48680, 427,
	-1000, 191, 48680, 116984, -1000, 18005, 731, -79, -1000, -84,
	1400, -1000, 48680, -1000, -1000, 1227, -1000, 1224, 1222, 1221,
	-1000, 589, 422, -1000, 188, -1000, 2201, 588, 587, 48680,
	-1000, -1000, -1000, -1000, -1000, 128254, -1000, -1000, 127824, -1000,
	-1000, 127643, -1000, -1000, 127545, -1000, -1000, -1000, -1000, -1000,
	130485, 17722, 17258, 16585, 6950, 13241, 12581, -92, 412, -95,
	410, 889, 887, 409, 397, 396, -100, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -102,
	393, -1000, 2867, -139, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 392, -1000, 384, -1000, 130304, -139, 383, 8127,
	-1000, 52663, 52663, 52663, 52663, -1000, 380, -1000, 128715, -1000,
	130206, 36673, 36673, 36673, 379, 130025, 48680, -139, -103, -1000,
	-108, -1000, -1000, 513, -111, 981, 36075, 55511, 25611, -1000,
	981, 981, 48680, -1000, 48680, 2555, -1000, -1000, -1000, -1000,
	2542, 1948, 2588, 56625, -1000, -1000, -1000, -1000, 103723, -1000,
	3546, 2687, -1000, 103723, -1000, -1000, 116984, 498, -1000, 103723,
	103723, 25611, 875, -1000, 875, 103723, 605, -1000, -1000, -1000,
	-1000, -1000, 378, 63920, 30, 185, 25611, 962, -1000, -1000,
	2670, 2670, 2670, 2670, 2670, -1000, -1000, 116984, 1217, -30,
	-129, 2674, -1000, 3507, -1000, 2096, -1000, 69996, -1000, 749,
	1160, 25611, -1000, -1000, -1000, 586, -1000, 3557, 3557, -1000,
	3557, 116984, 2864, 183, 2672, -1000, 167, 72209, 3638, -1000,
	-1000, 244, -1000, 93835, 244, 244, -1000, 93835, 93835, 2254,
	-1000, 251, -1000, 248, -1000, -1000, -56, -1000, 974, 33770,
	-1000, 1316, -1000, -1000, 1549, -1000, 1987, -1000, 1265, -1000,
	-1000, -1000, -1000, 33770, -1000, 2302, 116984, 116984, 93835, -1000,
	116984, -1000, 2139, 72209, -1000, 2371, 121360, 2355, 69996, 116984,
	-1000, -1000, 585, 902, 2526, 2525, 1051, 116984, 116984, 2523,
	120813, 120266, -1000, 3634, 116984, 2068, 48680, 3374, 2244, 2185,
	68, 68, -1000, 68, 68, 68, -1000, 583, 1336, 93835,
	93835, 116984, 72209, 93835, 1873, -1000, -1000, -1000, -1000, -1000,
	84992, -1000, -1000, 3560, 3559, -1000, 1368, -1000, -1000, -1000,
	1368, 2033, 1790, 116984, 72209, 93835, 72209, 119719, 119172, -1000,
	-1000, 1757, 116984, -1000, -1000, -1000, -1000, 1440, -1000, 791,
	2118, 68, 68, -1000, 68, 68, 68, 582, 25611, 1993,
	-1000, 2903, 116984, 3586, 118625, 3584, 116984, 116984, 116984, 72209,
	3309, 116984, 116984, 72209, -1000, 118078, 5126, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 73337, 1068,
	116984, 1298, -1000, -1000, 1739, 1211, 1210, 84445, 2102, 1710,
	1855, 116984, 59999, 937, 59999, 2651, -1000, -1000, 22771, -1000,
	131091, 131091, -1000, 131091, -1000, 70560, 76731, 116984, -1000, 1005,
	116984, 78933, 908, 3030, 65028, -149, 921, 76731, 93835, -29,
	2597, 116984, -1000, -1000, -1000, -1000, -1000, 2033, 3028, 498,
	2361, -1000, 76731, 3478, 3027, 581, 3629, 3628, -1000, 93835,
	2296, 2357, -1000, -1000, 117531, 3077, 791, 116984, 981, 56625,
	1966, -1000, 62809, 1027, 116984, 1876, 147, -1000, -1000, -1000,
	13, 116984, -1000, 759, -1000, -1000, 1144, 1144, 921, -173,
	579, -1000, 845, 844, 60563, 76731, -116, -1000, -1000, -1000,
	-1000, 2355, 93835, 116984, 1277, 2645, 116984, -118, -1000, 182,
	577, 843, 838, -1000, 2553, -1000, -152, -1000, 939, 59999,
	2862, 2854, -1000, -1000, 972, -1000, 1346, 921, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -13,
	1852, 116984, -149, -149, -44, -30, -1000, 950, -1000, 950,
	-1000, 950, -1000, 131091, -1000, -1000, -1000, 1608, 1606, 116984,
	-1000, -1000, 116984, -1000, 25611, 116984, 93835, 25611, 93835, 2917,
	2915, -1000, -1000, -1000, 116984, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1092, -1000, 1807, 2261, -1000, 575, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2469, -1000, -33,
	33201, 878, -1000, -1000, 93835, -17, 48680, 48680, 7696, 7425,
	48680, 52663, 52663, -1000, 48680, 6165, -1000, -1000, -1000, -1000,
	-1000, 2853, 574, 48680, 69996, 8189, 7228, -1000, 376, 10907,
	5057, -1000, 48680, -1000, 5168, -1000, 375, 35506, -1000, 129419,
	-26, -119, -1000, 19335, -139, -126, -1000, -1000, 747, -1000,
	3046, -1000, 48680, 129600, 2442, 2126, 1826, 1619, 3557, 3582,
	22201, -1000, 66686, 982, 2225, 127364, -1000, -1000, -1000, -1000,
	69996, 69996, 48680, 48680, -1000, 48680, 48680, 48680, -1000, -1000,
	-1000, 3557, 880, -1000, -1000, -1000, 880, -1000, -1000, 1368,
	-1000, 1368, -1000, 48680, -1000, -1000, 2850, 48680, -1000, 69996,
	69996, 52663, 52663, 52663, 52663, 52663, 52663, 52663, 52663, 52663,
	52663, 52663, 52663, 52663, 52663, 52663, 52663, 52663, 52663, 52663,
	52663, 2530, 52663, 3524, 3524, 3524, 701, -1000, 2863, 2850,
	48680, 48680, 69996, 374, 358, 357, -1000, 48680, -139, -1000,
	-1000, 6852, 573, -1000, 2458, -1000, 2770, -1000, 48680, -1000,
	-125, -1000, 3142, -1000, -1000, 2770, 2770, -127, 131091, 56625,
	56625, -1000, 570, 48680, 2541, -1000, -1000, 730, -314, -1000,
	837, -1000, -1000, -1000, -1000, -1000, -1000, 498, -1000, -1000,
	-1000, 181, 103723, 103723, 729, -1000, -128, -1000, -1000, -134,
	-1000, 3467, 356, 25611, -1000, 981, 2643, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -149, 116984, 116984, 1708, 2251, 3580,
	-1000, 3558, 743, 728, 168, 3557, 353, 347, 344, -149,
	116984, 116984, 1664, 116984, -1000, -1000, -1000, 244, -1000, -1000,
	-1000, 233, -1000, -1000, -1000, -1000, 2630, -1000, -34, -1000,
	-1000, -1000, 48680, -1000, -1000, 3297, 1209, 1206, -1000, -1000,
	-1000, 2823, -1000, 3026, -1000, 2354, -1000, 1022, -1000, 1555,
	-1000, 48680, 569, 2644, 568, 558, 3626, 2069, 3623, 1053,
	3025, 2254, 3023, 2254, -1000, -1000, -1000, 893, -1000, 131091,
	2244, -1000, 557, 556, -1000, -36, 1638, 1899, 1204, 970,
	-1000, -1000, -1000, -1000, 48680, 48680, 103176, -1000, 475, 3286,
	-20, -1000, -1000, -1000, 1655, 1195, 1192, -1000, -1000, -1000,
	-1000, 2033, 1644, 1185, 1184, -1000, -1000, -1000, -1000, -1000,
	2353, -1000, -1000, 3018, 969, -1000, 2980, 2978, 884, 116984,
	-1000, 968, -1000, -1000, -1000, -1000, 48680, -1000, -38, 1183,
	3421, 2349, 93835, -1000, 2254, 3012, 1182, -1000, 1178, -1000,
	-1000, -1000, 3428, 3424, 1174, -1000, -1000, -1000, -1000, -1000,
	72773, -1000, -1000, 1018, 116984, 72209, 93835, 1696, -1000, -1000,
	83351, 83898, 116984, 2671, -149, 814, -1000, 2543, 814, 937,
	2845, -1000, 2548, -1000, 965, 93835, 3622, 336, -136, -39,
	69996, 3466, -1000, 2277, 611, 93835, 881, -1000, 3546, -1000,
	-1000, -1000, 963, -1000, 3412, 93835, 3461, 3007, 962, 68,
	93835, 3545, -1000, -1000, 3460, 93835, 3006, 2291, 2347, 2494,
	791, 77839, 962, 2219, -51, -1000, 1876, 34908, 3283, -137,
	-1000, -1000, -1000, 981, 66132, 56625, 48680, 3620, -150, -1000,
	-1000, -1000, -1000, -1000, 100981, 100981, 76731, 76731, 76731, 921,
	116984, 116984, 78933, -1000, -1000, 555, 116984, 116984, 551, -1000,
	116984, 116984, 3619, 76731, 76731, 76731, -40, 550, -1000, 833,
	832, 827, -1000, -1000, -1000, -1000, -1000, -1000, 939, -1000,
	-152, 59999, 68, -1000, 2237, 93835, -1000, 21631, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 950, -149, -1000, -1000, 2122,
	2308, 2122, 1863, 1860, -1000, -1000, 2235, -1000, -1000, -1000,
	-1000, 2589, 3292, 25611, 3404, 8257, 48680, 48680, 5769, 2922,
	571, 8257, 48680, 48680, 69996, 7659, -153, 48680, 48680, -1000,
	48680, 727, 131091, -1000, 3577, 48680, 334, 327, -1000, -1000,
	-1000, 3556, -1000, -1000, -1000, 131091, 48680, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 326, -1000, 69, -1000, -1000, -1000,
	124642, -1000, 48680, 325, 3371, -1000, 324, 323, 10315, 287,
	126934, 126753, 126655, 322, -1000, -1000, 319, 313, 131091, 2863,
	131091, -1000, -1000, 1090, 1090, 1347, 1347, 1347, 1347, 3524,
	501, 373, 481, 809, 809, 809, 411, 701, 701, 809,
	809, 809, 701, 2834, 2517, 549, 8214, -1000, -1000, 131091,
	131091, 309, -1000, -1000, -1000, -139, 308, 6852, -1000, 2766,
	3370, 131091, -1000, 56625, 2766, 2766, -1000, -1000, 1948, 116984,
	131091, 56625, -1000, 2687, -1000, 19916, -1000, 25611, -1000, -1000,
	-1000, -1000, 3546, -1000, 63920, -1000, 546, -1000, 36, -1000,
	2643, -1000, 826, -1000, -1000, 76731, 76731, -149, -254, 116984,
	-1000, -1000, 725, 3618, 741, 25611, 307, -1000, -1000, -1000,
	-149, -149, 116984, -149, -1000, -1000, -1000, 3248, 131091, 116984,
	116984, 1482, 102629, 116984, 3003, -1000, 5140, -1000, 1051, 126474,
	57182, -1000, 57182, 116984, -1000, -1000, -1000, -1000, 1965, 1426,
	3617, 1114, -1000, 3329, 116984, -1000, 116984, -1000, -1000, -1000,
	116984, 116984, 93835, 116984, -1000, 72209, 2990, -158, 131091, -41,
	-1000, 812, -1000, 1363, -1000, 21061, 116984, 72209, 93835, 116984,
	72209, 93835, 3001, 116984, 2175, -1000, -1000, 2977, -1000, 2987,
	-160, 25611, -1000, 3575, 3574, 3000, 3341, -1000, 116984, 3572,
	116984, 93835, 3246, -1000, -1000, -1000, -1000, -1000, -1000, 1627,
	1176, 1175, 2290, -42, 2287, 2250, -44, 2102, 937, -45,
	545, -1000, 808, -1000, -1000, 804, -1000, 937, -1000, 76731,
	59999, 3614, 498, -1000, 2628, -1000, 98765, 2275, 68, -1000,
	3613, 101535, 544, -1000, 2234, -1000, 722, -1000, 2488, 72209,
	2033, 68, 93835, -1000, -1000, 498, 304, -46, -1000, 3010,
	1040, 25611, 93835, 2999, 2497, 791, 77839, -1000, 1186, 2585,
	-1000, -47, -1000, 679, 68, 2219, -1000, -51, 131091, -1000,
	803, -1000, -163, -1000, -1000, 301, -1000, 3244, 3242, -1000,
	2738, 57182, 542, 540, 116984, 3240, -1000, -1000, -166, -1000,
	-1000, 2587, 2587, 76731, 59999, 76731, -1000, 939, 814, -1000,
	2444, -1000, -1000, -1000, -1000, -1000, 25611, 1620, -1000, 539,
	538, -1000, -1000, -1000, -1000, 3292, 8257, 8257, 48680, 48680,
	48680, 8257, 7659, -168, -1000, 8257, 8257, -139, -1000, -1000,
	129419, -1000, -1000, -1000, 131091, -1000, 20491, 2130, -1000, 126029,
	-1000, 33201, -1000, -1000, 48680, 48680, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 52663, 2833, 537, 69996, -1000, -1000,
	299, 979, 48680, 50387, 3142, 979, 979, -1000, -171, -1000,
	-1000, -1000, 3546, 36, -1000, -1000, 3612, 25611, -1000, 76731,
	-1000, -1000, 3611, -169, 740, -1000, 3608, -1000, -1000, 107,
	-1000, -1000, -1000, 2664, 3455, -1000, 1922, -1000, 116984, -1000,
	116984, -1000, 25611, 116984, 2773, 1216, -1000, 902, 2519, 536,
	52663, 1089, 93835, 891, 2745, 2731, -1000, 3494, 3369, 2733,
	-174, -1000, 116984, 48680, 116984, -177, -182, 2332, -1000, -1000,
	1086, 1212, 48680, 1079, -1000, -1000, -1000, 69996, 534, 2254,
	2254, -185, -187, -1000, -1000, -1000, 48680, 1162, 116984, 34339,
	-1000, 3605, 3286, -1000, -1000, -1000, -1000, -1000, -1000, 116984,
	-1000, 116984, -1000, 48680, 1156, -1000, -1000, -1000, 3569, 2254,
	25611, 2254, -1000, 2254, 3341, 1113, 116984, 72209, 93835, 1660,
	1660, 2836, -1000, -1000, -1000, 2217, 2217, 76731, 59999, -1000,
	-56, 937, -1000, 3454, 2615, 3604, -1000, -1000, -1000, -1000,
	2514, -1000, -1000, 116984, 2513, 922, -1000, -188, -1000, 798,
	797, 78933, 908, 873, -1000, -65, 530, -1000, 794, -1000,
	-1000, -1000, -1000, 498, 3452, -1000, 3566, 528, 526, 116984,
	2281, 525, 25611, 3280, 791, 77839, -1000, 3077, 1876, -1000,
	2339, 116984, 3277, -1000, 2585, 524, -1000, 921, 523, 522,
	2468, 2468, -190, 57182, 57182, -193, 520, 921, -1000, -196,
	-1000, -1000, -1000, -1000, -1000, -101, -1000, 863, 836, -1000,
	-1000, 93835, 93835, 48680, 48680, -1000, 8257, 8257, 8257, -1000,
	261, -1000, -1000, 2219, 3360, -1000, -113, 125966, 125847, 6199,
	52663, 69996, -201, -1000, -1000, 116984, 131091, -114, -1000, 131091,
	519, 518, 370, -1000, -1000, -1000, 482, -1000, -1000, -1000,
	116984, 3603, -1000, 116984, 102082, 116984, -1000, -1000, 1658, -1000,
	-1000, -1000, 116984, 2343, -1000, -1000, -1000, 1048, 48680, 8214,
	52663, 517, 48680, -1000, 516, 514, 3451, 3215, -1000, 2606,
	2819, 1914, 57182, -1000, 3292, -1000, 125381, -1000, 1038, 1970,
	-1000, -1000, -1000, -1000, 131091, 52663, 3341, 57182, -1000, -1000,
	512, 511, 131091, 509, 793, 2829, -1000, -1000, -1000, -1000,
	-1000, 131091, 508, 3421, -1000, -1000, -1000, -1000, 2254, 93835,
	-1000, -1000, -1000, 1142, -1000, -1000, -1000, -1000, 3602, 3601,
	2827, 83351, -1000, -202, -1000, -1000, 1975, 68, 2119, 2661,
	-1000, 2275, 507, -1000, -1000, 2268, 2620, -1000, 101535, 33770,
	33770, 254, 3449, 873, -1000, 3532, -1000, 3228, 3228, 48680,
	3446, 68, -1000, 3545, 57182, -1000, 93835, 57182, 2270, 2073,
	2482, 77839, -1000, 2494, -1000, -1000, -204, 116984, 1876, -1000,
	-1000, 76731, 76731, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1038, -209, -210, -1000, 76731, -1000,
	-1000, 2444, -1000, 116984, -1000, 116984, -1000, -1000, -215, -221,
	-1000, 2057, 48680, 33201, -1000, -1000, 6199, -223, -1000, -121,
	-1000, 3445, 50387, 3600, 3598, 3597, -1000, -149, -1000, -149,
	-1000, 1915, -1000, -1000, -1000, 2998, 2760, 125262, 8214, 2463,
	116984, 125199, 2033, 2033, -1000, 3444, 2808, -1000, -1000, 2615,
	506, -1000, -1000, -1000, -1000, 878, 116984, 2615, 2750, 93835,
	8214, 1047, -224, 2122, 2122, 48680, 32632, 2163, 48680, -1000,
	-1000, 3341, 116984, -1000, -1000, 116984, 2269, -1000, 2803, 3542,
	-1000, 908, -1000, 2152, 116984, -1000, 3322, -1000, 3236, -1000,
	-1000, -1000, 2628, 68, -1000, -1000, -1000, -226, 131091, 68,
	-1000, 249, -231, 1040, -232, 93835, 1929, -1000, 791, -1000,
	2497, 981, -1000, -1000, -234, -237, 1914, 1038, 2118, -240,
	-1000, -242, -243, -1000, -1000, 238, 49818, 49818, 49818, -139,
	-148, -1000, 116984, 502, -1000, -1000, -1000, -1000, -1000, 2974,
	934, -1000, 839, 1824, 230, 1070, 228, 32, -1000, -1000,
	-1000, 2118, 116984, -1000, -1000, -1000, 932, 498, -1000, 48680,
	1038, -251, -1000, 1025, -253, -1000, 1024, -258, -1000, 2821,
	-1000, -259, 2254, -261, 231, 1660, 929, 3403, -1000, -1000,
	-1000, 2268, 93835, -260, -1000, -1000, 2295, -1000, 2615, 922,
	-1000, -1000, -1000, 1038, 490, 1914, 480, 1470, 791, -1000,
	-1000, 1368, 3280, 3103, 921, 921, 2615, 1914, 919, -1000,
	921, -1000, -1000, -1000, 3034, -1000, 53801, 2260, 1827, 128533,
	3034, 3034, -1000, -1000, 116984, 3393, -1000, 852, 849, 1486,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2733, -266,
	3391, 2463, 131091, 2615, -1000, 2122, 2660, -1000, 2122, 2814,
	-1000, 2137, -1000, -1000, -1000, 2782, -1000, 2805, -1000, 1724,
	3523, 2473, 478, -1000, 116984, 1834, 1825, 3593, 2119, 2268,
	1914, 57182, 2615, 57182, 2111, -1000, 116984, -1000, 2073, 1304,
	-1000, -1000, 2118, 2615, 981, 467, -1000, -1000, 1851, 3458,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 787, -1000,
	3200, -1000, 1060, 2195, 2195, 981, -1000, 783, 839, -1000,
	-1000, 466, -1000, 465, -1000, 2239, 116984, 2233, -1000, -1000,
	-1000, -1000, 116984, -1000, -1000, 3592, -1000, 908, -1000, 2615,
	-267, 2118, -272, -1000, -1000, -1000, -149, 1929, -1000, 1584,
	919, 2118, -1000, 1791, -1000, -1000, 2218, 49249, 48680, -1000,
	3511, -1000, -1000, 2545, -1000, -1000, 48680, 2733, 48680, 48680,
	-1000, 231, 64474, -273, -1000, 2268, 2118, 1038, 919, 1914,
	1470, 66132, 981, 919, -1000, -1000, -1000, 131091, -1000, -1000,
	-1000, 131091, -1000, -275, -280, -1000, -173, 100981, 2214, 2473,
	919, 1914, 981, 2615, 2111, -268, -1000, 981, 2118, 1139,
	-285, -1000, -1000, -1000, -1000, 981, 2615, -1000, 2118, -1000,
	-1000, -1000, -1000, -1000, 461, -1000, -1000, 2118, 919, 48680,
	919, 981, -288, 981, -1000, 2118, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4419, 4418, 4417, 4416, 4415, 4414, 4413, 4411, 4407,
	4405, 4404, 4403, 152, 4402, 4401, 4400, 4397, 4396, 4394,
	4390, 4389, 4388, 4387, 4386, 4385, 4375, 4369, 4368, 4366,
	4365, 4364, 4363, 4362, 4361, 4360, 4359, 4357, 4355, 4354,
	4353, 4352, 4350, 4349, 4338, 4337, 4329, 4326, 4322, 4320,
	4319, 4318, 4317, 4316, 4314, 4313, 4312, 4311, 4310, 4308,
	4307, 4306, 4303, 4301, 4300, 4299, 4298, 52, 4294, 4291,
	4289, 4288, 4287, 4282, 4281, 4280, 4279, 4277, 4276, 4274,
	4273, 4268, 4265, 4264, 4263, 4262, 4261, 4260, 79, 4259,
	278, 4258, 4257, 4256, 4254, 4253, 4251, 4247, 4246, 4245,
	4243, 4240, 4237, 277, 4236, 125, 161, 4232, 4224, 3758,
	4222, 4218, 276, 4217, 4210, 4208, 4207, 282, 4204, 4203,
	4202, 4201, 4196, 4195, 4192, 4190, 4187, 4186, 4184, 93,
	209, 4181, 4180, 227, 4177, 4175, 4173, 4171, 4170, 4169,
	4168, 4167, 4166, 4165, 4163, 252, 174, 4162, 275, 4160,
	4159, 4158, 4156, 4151, 4150, 4149, 4148, 4144, 4140, 4137,
	4136, 4135, 4134, 4132, 4131, 4129, 4126, 4125, 4124, 4123,
	4122, 4121, 4120, 4119, 4118, 4117, 4115, 4112, 4110, 4109,
	4107, 4103, 4102, 4101, 4098, 4097, 4094, 4090, 250, 219,
	196, 4084, 4083, 269, 268, 4078, 4077, 4076, 4075, 4074,
	138, 11, 50, 4063, 4059, 114, 100, 90, 99, 104,
	102, 4056, 111, 4055, 134, 60, 4054, 22, 2, 166,
	261, 12482, 246, 4053, 4052, 4049, 255, 199, 4047, 244,
	4043, 4042, 4041, 4040, 4039, 4036, 67, 51, 181, 183,
	179, 176, 3, 4035, 160, 107, 83, 58, 46, 17,
	68, 216, 24, 1, 263, 4034, 262, 14, 145, 7,
	38, 4031, 4030, 4029, 4028, 3743, 123, 4027, 266, 248,
	171, 4026, 4025, 4024, 350, 4023, 4022, 47, 4021, 197,
	84, 132, 8, 120, 4019, 154, 170, 39, 4018, 172,
	61, 4017, 165, 98, 88, 10322, 12394, 4015, 4013, 116,
	64, 92, 2351, 208, 195, 203, 913, 167, 162, 131,
	214, 213, 178, 72, 4010, 253, 4009, 3450, 87, 185,
	163, 6113, 4008, 4005, 4004, 85, 205, 105, 4003, 4001,
	78, 9, 15, 4, 6, 146, 25, 23, 10, 4000,
	70, 127, 49, 32, 3998, 27, 3997, 3996, 3995, 3993,
	3991, 41, 169, 3989, 3988, 279, 3987, 95, 56, 26,
	3986, 164, 231, 3983, 233, 135, 3979, 3977, 257, 211,
	186, 3973, 74, 238, 3972, 3969, 3968, 3967, 3966, 136,
	12, 139, 3965, 3962, 149, 3961, 48, 247, 202, 3960,
	62, 3959, 3951, 182, 59, 144, 273, 204, 230, 117,
	234, 187, 242, 3948, 3946, 3945, 200, 3944, 3942, 235,
	153, 3940, 3938, 249, 287, 91, 45, 89, 243, 77,
	194, 159, 3934, 212, 3930, 3926, 281, 184, 228, 13,
	16, 106, 137, 3925, 5, 240, 158, 229, 115, 3924,
	7078, 2322, 1853, 3923, 3922, 140, 119, 82, 141, 156,
	265, 97, 3920, 3919, 2273, 3917, 3915, 3914, 3912, 189,
	3908, 3905, 3904, 150, 157, 188, 3902, 124, 66, 54,
	31, 113, 254, 285, 108, 232, 177, 259, 3901, 3897,
	3896, 201, 3895, 80, 133, 173, 207, 289, 57, 3893,
	96, 3892, 151, 1130, 65, 155, 3891, 221, 3888, 3887,
	3885, 3882, 3880, 3877, 3875, 1005, 241, 3873, 3871, 3868,
	34, 193, 3867, 264, 190, 220, 121, 69, 3866, 103,
	122, 3864, 608, 1288, 53, 267, 236, 3863, 1882, 81,
	3862, 0, 14277, 8431, 12102, 13958, 3861, 4178, 3860, 3859,
	3858, 217, 148, 3857, 3855, 3854, 112, 3853, 86, 3852,
	3851, 76, 3850, 29, 19, 20, 35, 33, 258, 198,
	3849, 3848, 30, 143, 129, 3845, 272, 237, 3843, 3842,
	3841, 3840, 118, 3839, 42, 3836, 43, 3834, 3833, 44,
	18, 36, 3832, 3831, 218, 3830, 225, 256, 3829, 168,
	3825, 73, 142, 3821, 3820, 3817, 71, 63, 260, 94,
	3816, 274, 3813, 206, 3810, 3809, 3809, 28, 3808, 3807,
	245, 110, 109, 3805, 251, 147, 40, 215, 180, 224,
	3801, 3800, 175, 3787, 3786, 3784, 271, 3783, 3782, 37,
	3781, 3777, 3769, 21, 3767, 3766, 210, 3177, 3763, 3762,
	55, 3760, 191,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 52, 52, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 37, 39, 38,
	32, 32, 33, 33, 34, 35, 35, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 18, 18,
	40, 40, 19, 19, 42, 42, 20, 20, 43, 43,
	598, 598, 617, 617, 23, 23, 45, 45, 24, 46,
	17, 599, 599, 599, 599, 36, 25, 47, 29, 29,
	29, 29, 29, 203, 203, 203, 203, 22, 22, 41,
	41, 239, 239, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	594, 594, 241, 241, 240, 233, 233, 234, 234, 235,
	235, 600, 600, 242, 242, 242, 244, 244, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 494, 494,
	494, 526, 526, 526, 525, 525, 621, 621, 622, 622,
	622, 622, 622, 132, 132, 392, 392, 392, 56, 56,
	56, 56, 56, 589, 589, 205, 205, 205, 207, 207,
	206, 206, 206, 206, 206, 79, 79, 606, 606, 607,
	607, 605, 604, 604, 604, 608, 608, 608, 204, 204,
	204, 128, 128, 128, 128, 128, 128, 129, 129, 130,
	130, 208, 208, 208, 210, 210, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 214, 16, 16, 16, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 108, 108,
	528, 528, 529, 529, 199, 199, 200, 200, 200, 200,
	201, 201, 202, 202, 202, 70, 70, 211, 211, 213,
	213, 212, 212, 212, 212, 212, 58, 58, 58, 58,
	58, 58, 58, 59, 59, 59, 59, 59, 60, 60,
	60, 60, 60, 60, 61, 61, 61, 61, 61, 61,
	68, 68, 68, 68, 68, 68, 190, 190, 71, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	71, 76, 76, 76, 76, 623, 623, 623, 623, 623,
	623, 623, 623, 623, 623, 623, 623, 623, 623, 623,
	623, 623, 623, 623, 624, 624, 625, 625, 626, 626,
	627, 627, 627, 627, 627, 627, 627, 627, 627, 627,
	627, 627, 627, 627, 627, 627, 627, 627, 627, 74,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 85, 85, 353, 353,
	316, 316, 86, 86, 86, 87, 87, 88, 88, 72,
	72, 587, 587, 369, 369, 485, 485, 73, 595, 595,
	595, 597, 597, 596, 596, 90, 90, 391, 391, 91,
	91, 91, 91, 91, 91, 92, 92, 92, 92, 92,
	92, 92, 93, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 93, 93, 100, 100, 100, 100,
	100, 101, 101, 101, 98, 98, 98, 95, 95, 95,
	94, 94, 94, 99, 99, 99, 586, 305, 305, 97,
	97, 97, 96, 96, 96, 370, 370, 102, 102, 102,
	102, 317, 103, 103, 103, 103, 103, 103, 103, 103,
	106, 106, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 487, 487, 104, 104, 104,
	452, 452, 109, 109, 109, 407, 407, 110, 110, 110,
	110, 110, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 131, 131, 131, 131, 131, 131, 131, 131, 591,
	591, 362, 362, 268, 268, 268, 268, 121, 121, 121,
	121, 122, 122, 122, 123, 123, 195, 195, 138, 138,
	138, 138, 137, 137, 137, 137, 137, 137, 137, 137,
	62, 62, 62, 63, 63, 64, 64, 65, 65, 66,
	66, 67, 67, 67, 67, 67, 141, 141, 618, 618,
	143, 140, 140, 140, 140, 140, 139, 139, 142, 142,
	142, 142, 144, 146, 146, 146, 146, 146, 145, 145,
	145, 145, 147, 147, 519, 519, 378, 378, 517, 517,
	538, 538, 518, 518, 323, 323, 323, 323, 323, 324,
	324, 324, 527, 527, 527, 527, 527, 527, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 196, 196, 197, 198, 198, 198, 198, 198, 173,
	173, 173, 189, 189, 189, 189, 189, 189, 189, 189,
	176, 176, 176, 160, 160, 149, 149, 149, 149, 149,
	149, 149, 154, 154, 154, 154, 154, 154, 154, 154,
	150, 150, 162, 162, 162, 162, 162, 155, 155, 156,
	156, 156, 157, 157, 157, 157, 183, 183, 159, 159,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 151,
	151, 151, 151, 164, 164, 164, 164, 414, 414, 414,
	188, 188, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 186, 186,
	186, 186, 186, 186, 609, 609, 610, 610, 610, 180,
	180, 180, 180, 180, 180, 466, 466, 174, 174, 174,
	174, 179, 179, 179, 179, 182, 182, 182, 182, 397,
	397, 171, 171, 171, 172, 172, 172, 177, 177, 178,
	354, 354, 175, 175, 181, 181, 181, 181, 152, 152,
	152, 152, 152, 152, 152, 153, 153, 153, 153, 184,
	184, 170, 170, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 628, 628, 166, 166, 166, 165,
	165, 165, 165, 168, 168, 169, 169, 169, 169, 169,
	169, 167, 158, 187, 588, 588, 584, 584, 584, 584,
	584, 584, 584, 584, 585, 585, 585, 585, 590, 590,
	114, 114, 114, 114, 114, 124, 124, 124, 124, 124,
	115, 115, 115, 115, 115, 115, 115, 117, 117, 116,
	116, 116, 116, 80, 80, 80, 80, 80, 15, 15,
	15, 81, 81, 259, 259, 217, 217, 217, 342, 342,
	218, 218, 331, 331, 331, 331, 215, 215, 216, 216,
	82, 82, 629, 629, 629, 601, 601, 601, 602, 602,
	602, 602, 602, 602, 325, 325, 326, 326, 432, 432,
	432, 432, 432, 329, 329, 329, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 332, 332, 243, 243, 243,
	340, 341, 341, 333, 333, 339, 338, 338, 337, 337,
	336, 336, 334, 335, 335, 335, 344, 344, 343, 346,
	346, 345, 431, 547, 547, 549, 549, 549, 549, 549,
	549, 549, 551, 551, 551, 551, 551, 551, 551, 551,
	551, 551, 551, 551, 551, 551, 551, 551, 551, 415,
	415, 630, 630, 631, 632, 545, 545, 545, 546, 541,
	541, 542, 542, 542, 542, 542, 327, 327, 328, 328,
	328, 328, 543, 544, 360, 360, 470, 548, 548, 550,
	550, 552, 633, 633, 633, 633, 633, 633, 634, 634,
	634, 430, 430, 429, 429, 351, 351, 553, 553, 553,
	553, 554, 554, 554, 554, 554, 557, 556, 555, 555,
	555, 555, 555, 84, 84, 84, 394, 394, 393, 393,
	395, 395, 395, 395, 395, 395, 395, 395, 395, 395,
	395, 395, 395, 395, 395, 192, 192, 271, 271, 78,
	78, 78, 12, 12, 12, 12, 12, 12, 12, 286,
	286, 13, 13, 13, 603, 603, 603, 83, 83, 83,
	83, 83, 83, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 593, 593, 592, 592, 272, 272, 636,
	636, 89, 89, 89, 89, 89, 89, 89, 89, 488,
	488, 489, 489, 77, 77, 77, 77, 77, 416, 416,
	413, 413, 412, 412, 359, 359, 468, 468, 468, 469,
	276, 276, 277, 277, 236, 236, 236, 31, 30, 21,
	21, 26, 26, 27, 27, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 28, 28, 49, 49, 49, 49,
	50, 50, 50, 50, 53, 53, 54, 54, 48, 48,
	48, 48, 51, 51, 44, 44, 55, 55, 55, 55,
	55, 611, 613, 613, 612, 612, 616, 616, 616, 616,
	616, 616, 614, 614, 615, 615, 619, 619, 620, 620,
	120, 120, 125, 125, 125, 125, 125, 126, 126, 126,
	126, 127, 127, 127, 127, 136, 136, 191, 191, 191,
	191, 191, 191, 191, 57, 57, 57, 57, 69, 69,
	69, 69, 134, 638, 638, 638, 135, 135, 135, 637,
	637, 269, 269, 426, 426, 427, 427, 639, 639, 428,
	428, 428, 428, 428, 262, 261, 263, 263, 264, 264,
	75, 75, 75, 252, 252, 251, 253, 253, 254, 254,
	249, 249, 530, 530, 256, 256, 256, 257, 257, 245,
	245, 246, 246, 247, 247, 248, 248, 260, 260, 640,
	640, 112, 112, 112, 194, 194, 315, 315, 315, 423,
	423, 423, 352, 352, 283, 283, 425, 425, 425, 425,
	390, 390, 390, 193, 193, 367, 367, 380, 380, 381,
	381, 482, 482, 382, 118, 118, 119, 119, 133, 133,
	221, 221, 219, 219, 219, 219, 219, 219, 219, 219,
	226, 226, 227, 227, 228, 228, 229, 230, 230, 230,
	230, 371, 371, 231, 231, 231, 220, 220, 220, 222,
	222, 222, 222, 222, 222, 222, 225, 225, 225, 225,
	232, 232, 232, 224, 224, 564, 564, 564, 566, 566,
	568, 568, 567, 567, 563, 563, 565, 565, 635, 635,
	396, 396, 396, 349, 350, 347, 347, 348, 348, 357,
	357, 355, 356, 356, 358, 358, 467, 467, 467, 237,
	237, 237, 387, 387, 387, 387, 388, 388, 419, 419,
	417, 417, 417, 417, 418, 418, 420, 420, 420, 421,
	421, 422, 422, 384, 384, 385, 385, 386, 386, 386,
	386, 448, 448, 223, 223, 223, 364, 364, 364, 365,
	365, 438, 438, 438, 438, 438, 438, 438, 439, 439,
	437, 437, 437, 437, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 472, 473, 473, 366, 366, 474, 424,
	424, 582, 582, 582, 583, 583, 465, 465, 475, 475,
	475, 475, 475, 475, 463, 463, 464, 464, 483, 484,
	484, 400, 400, 400, 400, 398, 398, 401, 401, 401,
	401, 401, 399, 399, 476, 476, 476, 476, 389, 389,
	477, 477, 477, 477, 478, 479, 479, 480, 480, 433,
	434, 434, 490, 490, 490, 490, 492, 363, 363, 363,
	363, 363, 540, 539, 539, 491, 491, 491, 491, 491,
	491, 491, 491, 491, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 507, 507, 507, 507,
	507, 507, 507, 493, 493, 493, 493, 493, 497, 497,
	497, 496, 496, 496, 496, 496, 496, 496, 496, 496,
	496, 496, 498, 498, 503, 503, 504, 504, 504, 499,
	500, 505, 505, 505, 505, 641, 641, 509, 509, 501,
	501, 501, 501, 501, 501, 501, 501, 501, 495, 495,
	495, 502, 502, 502, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 408, 408, 410,
	410, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 442, 442, 442, 442, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 558, 558, 558, 558, 558, 558, 558, 558, 444,
	444, 561, 561, 562, 562, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 569, 569, 570, 570,
	572, 572, 573, 573, 574, 575, 575, 575, 576, 577,
	577, 571, 571, 578, 578, 578, 578, 579, 579, 580,
	580, 580, 580, 580, 581, 581, 581, 581, 581, 454,
	454, 455, 455, 461, 461, 461, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 322, 322, 321, 273, 273, 273, 273, 273, 273,
	376, 376, 374, 374, 374, 377, 377, 375, 375, 373,
	373, 372, 372, 451, 451, 449, 449, 453, 453, 402,
	402, 508, 508, 508, 508, 508, 508, 508, 508, 403,
	403, 403, 411, 404, 404, 405, 405, 405, 405, 405,
	445, 446, 406, 406, 406, 447, 447, 456, 460, 460,
	459, 458, 458, 457, 457, 435, 435, 436, 436, 383,
	383, 642, 642, 379, 379, 481, 481, 481, 481, 319,
	319, 368, 368, 318, 318, 310, 310, 311, 311, 311,
	311, 361, 361, 462, 462, 510, 510, 511, 511, 512,
	512, 513, 513, 514, 515, 516, 450, 450, 294, 293,
	280, 281, 292, 291, 290, 279, 282, 287, 288, 289,
	284, 285, 301, 300, 299, 250, 255, 306, 307, 307,
	309, 309, 308, 308, 296, 297, 298, 486, 278, 312,
	312, 313, 313, 313, 314, 314, 314, 314, 274, 274,
	275, 275, 302, 302, 303, 304, 304, 295, 295, 295,
	265, 265, 265, 266, 266, 267, 267, 524, 524, 521,
	521, 521, 522, 522, 522, 523, 523, 523, 523, 520,
	520, 520, 520, 520, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 532, 532, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 534, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 537, 537,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 0, 6, 6, 6, 6, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	4, 4, 6, 5, 6, 5, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 3, 6, 4,
	6, 7, 9, 6, 2, 2, 3, 0, 8, 6,
	8, 7, 2, 0, 1, 2, 5, 0, 1, 3,
	3, 1, 1, 3, 1, 12, 3, 1, 0, 1,
	1, 2, 1, 4, 0, 3, 3, 0, 4, 6,
	0, 5, 7, 6, 8, 8, 2, 1, 3, 1,
	3, 2, 5, 0, 1, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 6,
	4, 9, 7, 12, 12, 12, 9, 2, 7, 2,
	1, 1, 1, 3, 3, 0, 3, 1, 3, 1,
	1, 3, 2, 5, 0, 7, 5, 2, 0, 1,
	2, 3, 1, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 2, 3, 3, 3, 3, 3, 3, 5,
	3, 3, 5, 3, 3, 5, 3, 3, 5, 3,
	6, 6, 6, 6, 6, 4, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 6, 3, 8, 3, 4, 3, 3, 4, 3,
	4, 4, 4, 3, 5, 7, 3, 3, 4, 3,
	3, 3, 3, 3, 2, 0, 1, 0, 1, 0,
	4, 3, 3, 3, 3, 3, 6, 4, 4, 4,
	3, 5, 3, 3, 3, 3, 3, 3, 3, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	1, 2, 1, 2, 1, 2, 7, 3, 2, 0,
	1, 3, 3, 1, 0, 1, 2, 2, 1, 6,
	5, 1, 2, 1, 3, 2, 0, 7, 2, 5,
	0, 1, 3, 3, 1, 9, 3, 2, 0, 2,
	2, 2, 2, 2, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 6, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 1, 1, 3, 4,
	6, 3, 3, 5, 3, 1, 3, 2, 2, 2,
	2, 1, 2, 2, 5, 3, 3, 6, 6, 3,
	1, 1, 1, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 3, 5, 7, 2,
	3, 0, 3, 5, 2, 3, 0, 2, 3, 2,
	3, 2, 6, 4, 7, 7, 7, 9, 10, 5,
	2, 6, 4, 7, 7, 7, 10, 5, 2, 2,
	1, 1, 3, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 2, 4, 3, 2, 2, 1, 2,
	1, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 3, 5, 4, 6, 4, 3, 0, 1,
	3, 2, 4, 2, 4, 1, 6, 3, 1, 1,
	5, 3, 3, 2, 2, 6, 3, 3, 3, 3,
	4, 4, 3, 1, 3, 3, 2, 2, 1, 3,
	3, 1, 2, 1, 1, 2, 2, 3, 1, 1,
	1, 1, 1, 3, 2, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 2, 1, 1, 1,
	2, 2, 2, 1, 3, 3, 3, 3, 3, 2,
	3, 3, 1, 1, 1, 1, 1, 1, 2, 2,
	5, 7, 3, 3, 3, 4, 4, 6, 5, 5,
	5, 3, 4, 4, 3, 4, 4, 3, 4, 4,
	5, 3, 5, 5, 5, 7, 3, 3, 3, 4,
	6, 4, 2, 6, 4, 3, 2, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 4,
	3, 4, 3, 3, 4, 4, 5, 0, 1, 1,
	1, 1, 3, 2, 3, 4, 3, 4, 3, 5,
	3, 4, 4, 3, 4, 5, 3, 4, 3, 4,
	4, 5, 3, 3, 1, 1, 0, 2, 3, 5,
	4, 6, 4, 6, 4, 1, 0, 3, 4, 4,
	5, 7, 5, 3, 3, 3, 4, 4, 5, 2,
	0, 4, 2, 3, 4, 2, 3, 3, 3, 5,
	2, 0, 3, 3, 4, 3, 3, 3, 3, 4,
	4, 4, 4, 4, 3, 4, 5, 4, 4, 2,
	3, 2, 3, 6, 6, 7, 9, 7, 9, 4,
	3, 4, 4, 5, 1, 1, 10, 10, 3, 5,
	5, 5, 3, 5, 6, 4, 4, 5, 5, 2,
	3, 2, 5, 4, 2, 0, 1, 1, 1, 1,
	3, 2, 2, 2, 2, 2, 2, 1, 2, 0,
	1, 2, 1, 2, 2, 1, 2, 1, 2, 2,
	3, 7, 3, 3, 7, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 6, 5, 8, 3, 6, 6,
	3, 13, 16, 1, 0, 1, 2, 3, 0, 2,
	0, 4, 0, 4, 5, 4, 3, 3, 1, 3,
	10, 13, 0, 2, 3, 1, 1, 0, 1, 2,
	2, 2, 2, 1, 1, 0, 1, 3, 1, 1,
	1, 2, 3, 3, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 8, 0, 1, 1, 0,
	2, 1, 0, 1, 0, 1, 1, 0, 1, 4,
	1, 0, 3, 7, 7, 1, 1, 3, 7, 1,
	3, 11, 3, 2, 0, 3, 1, 2, 2, 3,
	2, 6, 2, 1, 2, 2, 2, 8, 4, 2,
	3, 5, 5, 5, 2, 5, 5, 2, 2, 2,
	0, 1, 1, 3, 4, 11, 12, 9, 5, 3,
	1, 5, 10, 7, 11, 3, 3, 0, 2, 4,
	3, 3, 1, 5, 1, 3, 1, 2, 0, 1,
	2, 2, 0, 1, 3, 3, 2, 2, 1, 1,
	1, 4, 0, 6, 0, 3, 0, 2, 2, 2,
	0, 1, 1, 2, 2, 0, 3, 3, 2, 1,
	1, 2, 2, 5, 8, 4, 1, 0, 1, 2,
	2, 1, 2, 3, 3, 2, 2, 3, 2, 2,
	2, 2, 2, 3, 1, 4, 2, 2, 2, 4,
	7, 3, 4, 6, 5, 7, 5, 5, 3, 3,
	0, 2, 2, 2, 1, 1, 1, 8, 10, 11,
	7, 10, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 3, 0,
	1, 8, 11, 3, 6, 6, 5, 3, 4, 1,
	0, 1, 3, 17, 20, 16, 19, 4, 2, 0,
	1, 0, 1, 0, 1, 3, 2, 4, 2, 3,
	1, 0, 2, 0, 1, 1, 0, 9, 6, 6,
	8, 6, 8, 5, 7, 2, 6, 7, 4, 4,
	5, 2, 4, 6, 6, 8, 6, 7, 8, 9,
	6, 7, 8, 9, 6, 8, 6, 8, 6, 7,
	8, 9, 6, 8, 6, 8, 6, 6, 8, 8,
	4, 7, 3, 0, 7, 10, 1, 1, 1, 1,
	2, 2, 3, 0, 3, 0, 1, 0, 2, 0,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 1, 2, 1,
	2, 1, 2, 1, 3, 2, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 0, 2, 4, 2, 1,
	0, 2, 1, 1, 0, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 2, 3, 2, 2, 1, 2,
	13, 16, 3, 1, 0, 4, 1, 0, 2, 2,
	3, 0, 1, 1, 4, 4, 5, 1, 0, 3,
	0, 3, 0, 3, 0, 3, 0, 4, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 4, 8, 11, 5,
	2, 2, 0, 10, 3, 2, 0, 1, 3, 1,
	1, 3, 3, 5, 6, 4, 5, 4, 1, 1,
	3, 3, 1, 2, 4, 4, 2, 3, 5, 5,
	1, 3, 1, 0, 1, 2, 3, 2, 4, 2,
	3, 0, 2, 0, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 8, 8, 8, 2,
	4, 4, 4, 2, 2, 2, 2, 3, 1, 3,
	1, 2, 6, 7, 1, 0, 1, 0, 1, 0,
	1, 1, 0, 1, 5, 1, 0, 1, 0, 1,
	0, 3, 3, 5, 1, 3, 3, 4, 5, 2,
	2, 0, 2, 2, 1, 1, 1, 0, 1, 0,
	2, 2, 5, 4, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 3, 1, 3, 3,
	3, 2, 0, 4, 2, 5, 3, 2, 0, 1,
	3, 3, 5, 1, 1, 1, 1, 1, 1, 3,
	2, 4, 4, 0, 4, 4, 3, 4, 1, 5,
	3, 4, 5, 5, 1, 5, 1, 3, 2, 0,
	3, 0, 2, 3, 1, 3, 2, 0, 3, 5,
	6, 4, 6, 4, 3, 2, 1, 0, 5, 1,
	0, 2, 2, 2, 1, 1, 0, 1, 1, 1,
	1, 0, 4, 2, 1, 2, 2, 4, 1, 3,
	1, 2, 3, 2, 4, 1, 0, 1, 0, 2,
	1, 0, 2, 5, 7, 2, 1, 2, 4, 3,
	5, 0, 1, 3, 5, 1, 2, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 6, 6, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 3, 0, 5, 4, 1, 2, 1, 4,
	1, 1, 2, 1, 1, 1, 1, 1, 0, 1,
	2, 5, 1, 4, 2, 5, 1, 4, 3, 3,
	0, 1, 2, 4, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 1, 0, 1,
	4, 1, 3, 3, 3, 5, 2, 2, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 3, 3, 2, 2, 3,
	5, 4, 6, 3, 5, 4, 6, 4, 6, 5,
	7, 3, 3, 3, 3, 3, 4, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 1,
	3, 1, 3, 3, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 5, 6,
	6, 7, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 6, 1, 1, 1, 1, 1, 1, 2, 1,
	5, 5, 6, 3, 1, 1, 1, 2, 2, 2,
	4, 3, 5, 6, 8, 6, 5, 4, 3, 2,
	2, 4, 1, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 6, 8,
	8, 6, 4, 6, 6, 6, 4, 1, 3, 3,
	3, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 3, 3, 3, 4, 3,
	4, 3, 4, 3, 4, 4, 3, 6, 5, 5,
	5, 4, 4, 3, 4, 3, 5, 0, 5, 0,
	2, 0, 1, 3, 3, 2, 2, 0, 6, 1,
	0, 3, 0, 3, 3, 3, 0, 1, 4, 2,
	2, 2, 2, 2, 3, 2, 2, 3, 0, 4,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 1, 1, 1, 2, 1, 2,
	2, 3, 1, 2, 3, 2, 3, 2, 3, 1,
	0, 1, 3, 1, 3, 3, 3, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	3, 1, 2, 3, 0, 3, 3, 2, 2, 1,
	2, 2, 3, 2, 1, 1, 1, 5, 1, 2,
	4, 2, 0, 1, 0, 3, 5, 1, 0, 1,
	2, 1, 0, 1, 3, 3, 2, 1, 1, 1,
	3, 1, 3, 3, 1, 1, 1, 1, 5, 3,
	1, 1, 3, 1, 1, 1, 1, 2, 2, 1,
	1, 2, 2, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 7, 1, 7, 5, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 0, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 600, -105, -102, -70, -68, -109, -110,
	-91, -111, -104, -131, -136, -118, -119, -120, -132, -138,
	-191, -196, -197, -198, -3, -56, -58, -71, -90, -92,
	-103, -113, -112, -114, -121, -128, -124, -108, -62, -133,
	-137, -148, -192, -193, -194, 32, 31, 100, 80, 154,
	128, 137, 202, 384, 429, 441, 399, 142, 420, 404,
	-142, -143, 459, -57, -69, -135, -134, 73, 129, 414,
	-4, -12, -16, 29, 46, -59, -60, -61, 62, -78,
	-74, -85, -79, -72, -73, -76, -623, 102, -565, -93,
	-96, -127, -627, 161, 220, -115, -116, 366, -122, -123,
	422, -125, -126, 425, 162, -64, -63, 156, -219, -221,
	-140, -139, -141, -195, -149, -150, -151, -152, -153, -154,
	-155, -157, -183, -158, -159, -160, -161, -162, -163, -167,
	-186, -164, -165, -166, -169, -168, -170, -175, -171, -172,
	-173, -174, -176, -177, -179, -180, -181, -182, -184, -185,
	464, -178, -187, -156, 525, 49, 479, 82, 146, 433,
	21, -5, -6, -7, -8, -9, -10, -11, -15, -14,
	-55, -75, -77, -80, -81, -82, -89, -83, -84, -564,
	-94, -95, -98, -100, -101, -97, -99, 421, -222, -220,
	597, 540, -18, -23, -24, -19, -20, -22, -25, -21,
	-26, -27, -28, -40, -45, -46, -42, -43, -41, -44,
	-47, -48, -49, -50, -51, -52, -53, -54, -30, -36,
	-37, -31, -32, -33, -34, -35, -38, -39, -17, -29,
	561, 570, -225, -223, -224, -232, 451, 548, 499, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, -317, 2, -296, -302, -303, -304, -295, -265, -534,
	-537, 4, -531, -535, 168, 230, 330, 21, 23, 22,
	24, 25, 26, 27, 29, 30, 41, 42, 44, 45,
	46, 47, 48, 49, 53, 55, 59, 60, 61, 62,
	63, 64, 68, 73, 74, 79, 80, 81, 82, 83,
	84, 85, 91, 88, 89, 90, 92, 94, 96, 97,
	98, 99, 100, 101, 103, 104, 105, 107, 108, 109,
	117, 118, 119, 120, 121, 123, 128, 129, 132, 127,
	131, 133, 135, 136, 137, 140, 141, 142, 144, 145,
	147, 148, 149, 151, 152, 154, 155, 156, 159, 157,
	507, 158, 160, 161, 162, 163, 166, 174, 175, 176,
	181, 183, 184, 188, 189, 190, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 203, 207, 209, 210, 211,
	212, 213, 219, 220, 222, 223, 224, 225, 226, 231,
	232, 233, 237, 234, 243, 244, 248, 249, 250, 252,
	256, 257, 258, 259, 260, 261, 263, 265, 264, 267,
	270, 271, 274, 278, 279, 283, 284, 280, 285, 286,
	288, 289, 292, 290, 293, 294, 291, 295, 297, 298,
	299, 300, 301, 302, 303, 304, 305, 306, 307, 308,
	296, 311, 309, 313, 314, 315, 328, 324, 325, 319,
	320, 316, 321, 317, 318, 322, 323, 327, 332, 333,
	336, 217, 338, 339, 342, 360, 346, 347, 348, 351,
	352, 355, 358, 359, 361, 362, 363, 364, 365, 366,
	367, 368, 369, 371, 372, 374, 375, 376, 378, 379,
	380, 382, 384, 385, 387, 388, 390, 391, 392, 393,
	394, 395, 396, 398, 399, 401, 400, 402, 404, 406,
	407, 408, 414, 420, 416, 417, 418, 419, 421, 422,
	423, 424, 425, 427, 428, 429, 431, 432, 433, 434,
	435, 437, 439, 440, 444, 445, 461, 462, 481, 441,
	442, 443, 446, 447, 448, 449, 450, 454, 452, 453,
	455, 456, 457, 459, 460, 463, 464, 466, 467, 468,
	469, 470, 471, 472, 475, 477, 478, 479, 498, 480,
	482, 486, 487, 488, 489, 483, 484, 497, 491, 492,
	494, 495, 500, 501, 502, 503, 504, 505, 506, 508,
	510, 518, 519, 520, 522, 525, 526, 527, 528, 516,
	530, 531, 534, 535, 536, 539, 537, 538, 540, 542,
	545, 546, 547, 553, 552, 554, 557, 562, 563, 565,
	566, 567, 36, 50, 51, 54, 56, 58, 69, 70,
	71, 75, 124, 125, 153, 164, 165, 177, 191, 192,
	204, 206, 214, 215, 216, 238, 239, 241, 246, 268,
	335, 337, 353, 357, 373, 377, 381, 383, 397, 436,
	473, 485, 490, 511, 512, 513, 514, 521, 523, 548,
	549, 550, 555, 564, -317, 2, -296, 344, -289, 2,
	-265, -265, 384, 28, 2, 28, 372, 453, 502, 504,
	2, -591, -362, 2, 28, -268, -265, 102, 202, 451,
	-289, 2, -591, -362, 25, 2, -265, 2, 358, 22,
	27, 66, 77, 98, 140, 163, 185, 188, -626, 360,
	391, 439, 455, 497, 508, 522, 2, 552, 289, 452,
	499, 230, 120, 527, 446, -603, 444, 445, 358, 389,
	431, 205, 541, -269, 2, 441, -265, 289, 2, 600,
	94, 74, 436, 456, -145, 2, 279, 519, -146, -147,
	-144, 511, -519, 446, 431, 311, -265, 600, 600, 600,
	28, -278, -265, 499, 230, 446, 120, 495, 600, 2,
	499, 363, 552, 452, 120, 394, 230, 527, 188, 140,
	27, 446, -603, 575, 576, 289, 126, -589, 2, -584,
	4, -535, -531, -311, -310, 499, 505, 120, -304, -295,
	590, -303, 600, 600, 600, 2, 249, 250, 393, 392,
	456, 457, 600, 600, 600, 600, 444, 2, 163, 22,
	27, 66, 93, 98, 126, 185, 188, 349, -624, 360,
	391, 455, 497, 501, 508, 522, -602, 480, 68, 419,
	446, -601, -603, 289, 527, 140, -412, 120, 279, 200,
	535, 504, 502, 533, 132, 237, 538, 537, 600, 600,
	-106, 2, 597, 32, 31, -105, -109, 142, 459, -214,
	499, 242, 2, -265, 600, 600, 2, 249, 250, 444,
	445, 600, 600, 186, -584, 2, 600, 600, 2, 249,
	250, 444, 445, 242, 2, 68, 448, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 2, -189, 456, 480, 211, 47, 46,
	74, 28, 390, 79, 364, 121, 126, 148, 528, 203,
	230, 231, 257, 93, 94, -414, 44, 250, 68, 249,
	445, -609, 444, -466, 500, 447, 453, 494, 261, 441,
	519, 102, 542, 432, 567, 394, 395, 492, 408, 280,
	157, 187, 4, 120, 311, 431, 458, 511, 279, 440,
	367, 84, 600, -635, 2, 499, -637, 2, 519, 519,
	2, -637, 2, -637, 2, -637, 2, -638, 519, 564,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, -220, -222,
	-221, 600, 600, 600, 600, 600, 600, 600, -189, 456,
	2, 74, 28, -355, -357, 532, 240, 150, 350, -219,
	-221, 2, -564, -517, 2, -440, -538, -442, 588, 589,
	581, 496, 67, -321, 329, 568, -454, 126, 533, 344,
	-537, -443, -456, 153, 360, 436, -377, 8, 9, 5,
	6, 7, -274, -444, -450, 524, 167, 334, -314, 601,
	10, 597, -561, -221, -455, 37, 206, 65, -521, -313,
	-275, -493, 241, -312, -295, -558, -559, 4, -531, -532,
	-522, -496, -504, -500, -501, -507, -265, -534, 77, 111,
	112, 110, 115, 114, 282, 281, 116, 113, 458, 541,
	66, 36, 214, 215, 246, 335, 216, 75, -560, 141,
	-533, 238, 239, 473, 51, 397, 177, 125, 124, 337,
	56, 54, 549, -505, 122, 511, 512, 513, 514, 191,
	192, 58, 164, 165, 357, 381, 490, 521, 523, 204,
	268, 43, 106, 187, 236, 218, 245, 247, 251, 269,
	272, 312, 326, 331, 354, 356, 430, 465, -641, 550,
	485, 69, 70, -566, 400, -567, -289, -566, 600, 600,
	602, 600, -347, -349, -350, 2, 28, 138, 597, 2,
	-471, 2, -472, -476, -221, 262, -475, 597, -473, 595,
	-296, 345, -562, 437, -558, -559, -274, -295, -313, 4,
	-531, -533, 599, -351, 597, 120, 446, 499, 78, 230,
	163, -407, 597, -265, 28, 344, 515, 602, -348, 388,
	-452, 597, 344, 186, 347, 60, 293, 2, 2, 2,
	2, 2, 214, -265, 499, 119, 2, 260, 2, 2,
	2, 2, 2, 2, 2, -370, 214, 2, -296, 552,
	-370, 214, 2, -370, 214, 2, -413, 2, 87, -279,
	214, 2, -265, -305, 214, 2, -300, -302, -309, 214,
	2, -307, -265, -529, 214, 2, -528, -524, 10, -523,
	5, 4, -531, -535, -532, -534, 77, -440, 2, -133,
	2, 60, -265, 552, 2, 461, 2, 597, -145, 2,
	71, 519, 43, 456, -146, 2, -427, 2, -428, -261,
	-262, -263, -483, -264, 248, 387, 396, 571, 130, 329,
	567, -618, 186, 580, 515, -517, -517, -517, -378, 599,
	2, 2, 2, 2, 2, 2, -476, 214, -296, 2,
	-293, -520, 4, -531, -535, -532, -536, 28, 31, 32,
	33, 35, 37, 38, 39, 40, 57, 65, 66, 72,
	76, 78, 87, 93, 102, 110, 111, 113, 112, 114,
	115, 116, 126, 130, 134, 138, 139, 143, 146, 150,
	167, 169, 182, 185, 186, 202, 205, 208, 221, 235,
	240, 242, 262, 266, 273, 281, 282, 329, 334, 340,
	344, 345, 349, 350, 370, 386, 403, 426, 451, 458,
	476, 493, 499, 509, 515, 517, 524, 532, 533, 541,
	543, 551, 556, 558, 559, 560, 561, -537, 2, -476,
	214, 2, -299, 214, -476, -302, 2, -279, 2, -292,
	-520, 2, -318, 214, -296, -298, -302, -300, 2, 2,
	2, 2, -307, 2, -528, 214, 2, 28, 28, 552,
	388, 242, 515, 602, -368, -310, -311, -516, 8, -361,
	-265, 599, -440, 2, -133, -117, 2, 182, -440, 214,
	2, -133, 214, 2, -440, 214, 2, -133, 214, 2,
	-604, 2, -528, 214, 214, -265, 2, 293, 2, 2,
	522, 2, 98, 499, 119, 2, 418, -625, 439, 526,
	2, 2, 2, 2, 2, 2, 2, 499, -284, 2,
	-265, 182, 483, -307, 214, -308, 2, 452, -636, 400,
	-528, 214, 2, 552, -300, 214, 2, -300, 230, 244,
	-279, 214, 2, 504, 502, 504, 502, 186, 2, 242,
	2, 242, 2, -477, 2, -478, -472, -479, 595, 345,
	-487, 2, -486, -523, 548, -106, 597, -106, 597, 456,
	597, -528, -296, -296, -440, 2, -133, -117, 2, -440,
	2, -133, 2, -130, -528, -129, 597, 186, -440, 2,
	-133, -117, 2, -440, 2, -133, 2, -214, 182, 2,
	120, 499, -189, 2, 182, 543, 2, 8, 2, 221,
	-528, 447, 395, 174, 2, 461, 2, 462, 74, -414,
	567, 74, 186, 2, 186, 2, -397, 2, 561, 388,
	186, 2, 2, -588, 2, 344, 186, 2, 186, 2,
	186, 2, 186, 2, 186, 2, -188, 457, 520, 498,
	392, 250, 2, -133, 558, -117, 250, 249, -440, 558,
	2, -610, 182, 445, -440, 2, 518, 259, 158, 186,
	-397, 2, 186, 2, 186, 2, 5, 2, 393, 481,
	2, 248, 387, 481, 2, -296, 499, 552, 452, 120,
	28, 2, 444, 2, 2, 88, 89, 186, 2, 186,
	2, 201, 186, 2, 186, 499, 567, 2, -389, -476,
	-426, -427, -426, 515, -355, -357, -189, 461, 2, -226,
	-387, -228, 182, -417, -418, -229, 273, 169, 340, -230,
	-396, 28, 138, -396, -396, 60, 598, 598, 11, 12,
	76, 41, 588, 589, 590, 591, 180, 592, 593, 586,
	587, 585, 578, 579, 583, 254, 255, 95, 582, 580,
	86, 287, 438, 170, 171, 172, 173, 415, 228, 34,
	229, 14, 15, 16, -321, 33, 349, 272, 568, 218,
	465, 581, 17, 18, 19, 245, 247, 331, 50, 221,
	-273, 360, -320, 496, 67, -440, -440, -440, -440, -440,
	-440, -440, -440, 356, 597, -383, -435, 595, -221, 597,
	597, 597, 597, -516, -221, -440, -454, 598, -375, 597,
	-221, -454, -449, 597, 436, 595, 597, -457, -440, 5,
	5, 5, 597, 599, -569, 562, 182, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 383, -498, 597, -497, 597, -497, -497,
	553, -495, 597, 570, 563, 597, -495, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	553, 602, -566, -351, 597, -379, -481, -440, 590, -379,
	-379, 344, -372, -440, 106, -400, 251, 312, 187, 269,
	430, 236, -437, 601, -437, -465, 570, -221, -473, -295,
	-221, -475, 597, -471, -465, -107, -516, -90, -103, -112,
	-133, -148, -193, -194, 590, -296, 597, 186, 597, 599,
	-520, 186, -361, -279, -306, -265, -296, -312, -313, -318,
	2, 137, -372, -584, 527, 446, 28, 452, -361, -268,
	38, -451, -490, -491, -540, 601, -539, -493, -503, -499,
	-502, 373, 377, -522, 54, 549, -505, 241, 4, -531,
	-533, 238, 239, 473, 51, 397, 177, 125, 124, 337,
	56, 511, 512, 513, 514, 191, 192, 58, 550, 485,
	69, 70, -584, 527, 446, 28, 452, -361, 182, -361,
	2, 2, 153, 2, 2, 2, -265, -242, 602, 64,
	423, 153, -370, 214, -242, 153, -242, 153, -319, 214,
	-318, -242, 153, -242, 602, 153, -242, 602, 153, 599,
	602, 153, -361, 2, -413, -519, -372, 38, -427, 2,
	126, -525, -523, 5, -639, 602, 271, -324, 286, 328,
	210, 345, 565, 338, 130, -527, 5, 4, -450, -462,
	126, 279, 241, -510, -512, 8, -511, 9, -513, 588,
	589, -518, -517, 109, 599, -520, -239, 416, 459, 359,
	-238, 24, 29, 142, 232, 315, 546, 159, -337, 233,
	-334, 363, 153, 477, 536, -598, -599, 443, 506, 507,
	90, 338, 459, 359, 416, 153, -393, -395, 38, 118,
	315, 358, 61, 225, 291, 292, 479, 555, 153, 459,
	359, 416, 359, -13, -254, 24, 142, -256, -251, 459,
	-599, 99, 416, 574, 421, 369, 491, 386, -599, -241,
	477, 536, -598, -599, 443, 416, -240, -339, -334, 363,
	153, 601, 24, 142, 416, 459, 359, -621, -622, 29,
	416, 359, -592, -286, -563, 221, 561, 153, -286, -286,
	-476, 214, -614, 182, 2, -607, -129, 263, 5, 10,
	-528, -129, -368, 602, 602, -520, 590, 445, 444, 153,
	153, 153, 153, 182, 329, 329, 2, 2, 2, 2,
	2, 188, -601, -626, 2, 2, -296, 214, -353, 344,
	-587, -369, 499, -296, 182, 329, 43, -299, 214, 2,
	-302, 552, -592, 329, -301, 214, -296, 38, 597, 329,
	2, -413, 2, 230, -563, 329, -477, -315, -296, -472,
	-315, 459, -289, 38, -437, -296, 598, 602, -487, -487,
	-528, -202, 561, 186, 102, 597, 597, -214, 561, 561,
	-484, 602, -483, 221, -529, -130, -528, 419, -528, -587,
	-279, 2, -296, 2, 499, 252, -528, -202, 221, -528,
	-528, -528, -519, 28, 462, 2, -188, 457, 520, 89,
	462, 2, -296, 499, 120, 230, 80, -614, 182, 2,
	-265, -590, 182, -585, 431, 446, 527, -584, -296, 120,
	-296, 120, -296, 120, -296, -296, 2, 2, 2, 2,
	2, 85, 2, -133, -440, 2, 85, 2, 46, 478,
	-610, 182, 2, 518, 2, 518, 2, -265, -265, -265,
	480, 271, -296, -296, -296, -297, -302, 500, 445, -440,
	2, -628, 2, 186, 182, 2, 499, 230, 499, 230,
	120, 186, 74, 120, 28, 499, 442, -242, 602, -269,
	-226, -387, -519, -388, -387, -227, -226, -229, 182, 396,
	537, 315, 463, 256, -418, -417, 28, -440, -422, 176,
	314, -440, -420, -442, 588, 589, -511, -513, -371, 338,
	-220, -220, -220, -358, -467, -440, 386, 230, -492, -490,
	-490, -294, -520, 511, -440, -440, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, -440, -440,
	272, 218, 465, 50, 221, -440, 515, -440, -440, -440,
	-440, 309, 329, 334, 524, 167, 534, 138, 338, -642,
	493, 40, -447, -221, -376, 597, -461, 35, 476, 28,
	-454, 597, 2, -435, -440, -436, -322, -320, -265, 588,
	589, 590, 591, 592, 593, 578, 579, 580, 14, 15,
	16, 583, 587, 585, 586, 180, 95, 582, 287, 438,
	86, 170, 171, 172, 173, 254, 255, 17, 18, 19,
	34, 581, -373, -372, -372, 598, 551, 28, 138, 590,
	2, 598, 602, 38, 598, -440, -373, -453, -449, -372,
	-460, -459, 558, -408, -409, 566, 296, 123, 212, 294,
	-410, 450, -514, 8, -520, 590, -570, 175, 205, 597,
	598, 2, 598, 2, 598, -440, 2, 598, -440, 2,
	598, -440, 2, 598, -440, 2, 598, 2, 598, 2,
	-440, -440, -440, -440, -440, -440, -440, -372, 8, -514,
	-514, 511, 511, -514, -514, -514, -506, 373, 374, 375,
	376, 274, 275, 276, 277, 377, 378, 379, 380, 301,
	302, 303, 304, 297, 298, 299, 300, 305, 306, 307,
	308, 196, 197, 198, 199, 192, 193, 194, 195, -506,
	-402, 2, -508, -372, 4, 566, 296, 123, 212, 294,
	450, 5, -402, 2, -403, 2, -440, -372, -404, -441,
	-442, 588, 589, 581, -321, -454, -405, 2, -440, -373,
	-440, 57, 266, 517, -406, -440, 186, -372, -372, 2,
	-372, 2, -567, 38, -372, -364, 602, 186, 38, 4,
	-364, -364, 597, 598, 602, -401, 209, 290, 285, 244,
	-401, -471, -400, 251, -398, 354, -398, -398, -465, -280,
	595, 603, -520, -465, -464, -463, 38, -289, 351, -465,
	-465, 599, 598, -464, 596, -582, 597, 600, 600, 600,
	600, 600, -296, 597, -372, -520, 599, 482, 2, 598,
	245, 245, 245, 245, 245, 437, 598, 515, -586, -305,
	-309, 500, 2, 561, -105, 346, 598, 602, -363, 37,
	595, 599, -514, 2, 2, -509, 553, 597, 597, -409,
	597, 186, -586, -309, 500, 2, -362, 515, -265, 2,
	-296, -370, -242, 153, -370, -370, -242, 602, 153, -279,
	-300, -305, -307, -309, -265, -528, -529, -242, -301, -618,
	598, 519, -428, -323, 396, 475, 417, 454, 495, 8,
	9, 8, 9, 602, -520, 602, -619, 93, 515, 78,
	446, -258, 280, 515, -431, 214, 78, -541, -282, 93,
	-542, -265, 72, 533, 386, 185, 151, -619, 93, 386,
	-619, 93, 2, 232, 93, 459, 480, 28, 60, -476,
	41, 41, 28, -617, 327, 267, 557, 186, 567, 499,
	230, 446, 515, 515, -476, -395, -490, 118, 291, 292,
	60, -515, -510, 588, 589, -515, 60, -515, -515, -515,
	561, -299, -476, 446, 515, 515, 515, 406, 406, -251,
	-146, 515, 515, 28, -189, 424, 126, -640, 580, 406,
	602, 41, 41, 28, -617, 327, 267, 186, 515, -318,
	-280, 547, 42, 547, 42, 547, 515, 42, 446, 515,
	602, 42, 515, 515, -13, 459, -593, -270, 105, 321,
	284, 322, 97, 318, 96, 317, 103, 319, 104, 320,
	554, 332, 63, 316, 295, 323, -271, -272, 365, 545,
	120, -528, -13, -13, 459, 359, 416, 153, -615, 221,
	28, -603, 221, -484, 221, -484, -310, -265, 599, -133,
	-440, -440, -133, -440, -133, 46, 153, 153, 2, -636,
	260, 597, -327, 329, 186, -361, -485, 242, 602, -369,
	-584, 153, -526, -525, 116, 458, -394, -393, 329, -301,
	214, 2, 153, -351, 329, 147, 597, 394, 2, 153,
	-281, 214, -266, -265, -413, -245, 503, 153, -391, 543,
	-423, -133, 597, 126, 38, -423, -380, -381, -482, -382,
	-282, 597, -289, -437, -106, -486, 598, 598, 598, -201,
	348, -200, -265, 5, -214, 543, -326, -432, -431, -545,
	-546, -541, 272, 230, 533, 244, 168, -352, -283, -282,
	119, 398, 398, -208, 561, -129, -130, 598, -484, 221,
	483, -202, -202, -484, -484, -296, 182, -528, -202, -202,
	-202, 2, 2, 2, 2, -397, -296, -279, -318, -296,
	28, 599, -361, -361, -309, -305, -397, -279, -397, -279,
	-397, -279, -133, -440, 480, 2, 456, 182, 182, 599,
	-397, -354, 426, 2, 394, 120, 499, 363, 230, -296,
	-318, -296, -318, -279, 120, -279, 121, -296, -476, -388,
	-227, 345, 256, 463, -420, -421, -442, 436, 437, -421,
	436, 437, 8, 9, 8, 9, -231, 467, 333, -370,
	602, -236, 39, 134, 256, -296, 567, 149, -440, -440,
	515, -642, 493, -447, 149, -440, 309, 334, 524, 167,
	534, 138, 338, 186, 597, -441, -441, 598, -374, -440,
	-440, 596, 605, 598, 599, 598, -357, 602, -355, -440,
	-372, -372, 598, 599, -372, -361, 596, 596, 602, 598,
	-458, -459, 143, -440, 515, 515, 515, 515, 597, 598,
	599, -575, 355, 597, 597, -440, 598, 598, 598, 598,
	38, 602, 602, 602, 598, 602, 602, 602, 598, 598,
	598, 602, 598, 567, 567, 598, 598, 598, 598, 602,
	598, 602, 598, 186, 598, 598, -411, 370, 598, 11,
	12, 588, 589, 590, 591, 180, 592, 593, 586, 587,
	585, 578, 579, 580, 86, 287, 438, 14, 15, 16,
	-321, 245, 221, -441, -441, -441, -441, 598, -445, -446,
	186, 182, 38, -406, -406, -406, 598, 186, -372, 598,
	598, 597, -568, 289, 329, 598, -434, -433, 559, -481,
	-365, 2, -471, -291, -520, -434, -434, -372, -440, 251,
	251, -399, 543, 344, -401, -471, -464, -516, -439, -438,
	184, 39, 134, 324, 325, 217, -464, -289, -351, -464,
	-464, -520, -465, -465, -463, 598, -583, -516, 598, -366,
	-474, -562, -357, 599, -520, -211, -563, -190, 5, 334,
	-190, -190, -190, -190, -361, 515, 515, 221, 25, 371,
	-490, 595, 596, 8, -520, 597, -514, -514, -514, -361,
	186, 186, 221, 186, -526, 2, -242, -370, -242, -242,
	-318, -319, -242, -242, -242, -392, 561, -517, -427, 531,
	83, 396, 511, -517, -238, 416, -282, -282, -296, -306,
	200, 407, -526, 329, -431, 214, -244, 329, -490, -290,
	-265, 597, -415, 563, 256, 256, 543, -282, -290, 256,
	214, -282, 214, -290, 2, -290, -594, 396, 339, -440,
	60, -335, 278, 394, 330, -239, 416, 459, 359, -133,
	-133, -133, -133, -133, 597, -618, 543, 137, -296, -318,
	-296, -306, -526, -301, 459, 359, 416, 326, -312, -515,
	-515, -393, 459, 359, 416, -306, -526, -299, -526, -250,
	214, -265, -250, 214, 446, -279, 406, 567, 45, -640,
	-240, -133, -133, -133, -133, -133, 597, -280, -241, 416,
	5, 214, -282, 5, -282, 214, 5, -265, -282, -306,
	-526, -622, 24, 142, -282, -306, -526, -270, -528, 334,
	539, -279, -592, -286, 446, 515, 515, -476, -611, -612,
	202, 429, 446, 432, -361, -129, -205, 561, -129, -199,
	226, 590, -589, -528, -265, 552, -265, -325, -328, -326,
	-282, -217, -218, 563, 561, 153, -316, -296, 595, -202,
	-528, -296, -485, -307, -308, 153, -351, 329, -528, 38,
	153, 597, 2, 2, -300, 344, 329, -281, 214, -246,
	144, -640, -279, -434, -365, -390, -425, 426, 344, -352,
	548, -289, -390, -367, 602, 186, 580, 599, -352, -480,
	590, -106, -106, -202, 602, 597, 580, 580, 597, -528,
	-528, 598, 602, -244, -296, -281, 230, 230, -288, -266,
	598, 602, 599, 597, 580, 580, -210, 348, -209, 145,
	258, 243, 469, 470, 471, 472, 136, 468, -484, -208,
	-130, 186, 186, -65, 561, 499, -202, 601, 432, -265,
	-397, -397, -397, 456, 456, -265, -361, -292, -279, -296,
	-293, -318, 182, 182, -279, 537, -421, 345, 283, -467,
	-237, 569, -296, 601, -440, -440, 149, 149, -440, -441,
	-441, -440, 149, 186, 597, -440, -451, 33, 33, 598,
	602, -436, -440, -320, 598, 551, -357, -357, 598, 590,
	-520, 601, 598, -449, 146, -440, 509, 296, 212, 294,
	-410, 294, -410, -410, -514, 5, -520, 590, -576, -285,
	597, -265, 559, -356, 350, 598, -492, -490, -440, -440,
	-440, -440, -440, -514, -495, -495, -510, -510, -440, -445,
	-440, -492, -490, -441, -441, -441, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, -441,
	-441, -441, -441, 138, 329, 338, -441, -446, -445, -440,
	-440, -490, 598, 598, 598, -372, -105, 597, 289, -384,
	205, -440, -484, 602, -384, -384, 598, -471, -471, 597,
	-440, 251, 596, 602, 604, 580, -351, 599, -463, -464,
	596, 598, 602, 598, 602, -424, 38, 598, -520, -434,
	-213, -212, 135, 53, 107, 133, 334, -361, -361, 446,
	347, 5, 8, 595, 596, 599, -514, 598, 598, 598,
	-361, -361, 446, -361, -242, -242, 119, 315, -440, 515,
	515, 60, 221, 153, 329, 545, -547, -542, 151, -440,
	597, 230, 597, 597, 2, -233, -234, -235, 142, 459,
	24, -620, 2, 543, 153, -242, 153, -242, 565, -335,
	597, 597, 515, 446, -258, 515, 561, -372, -440, -203,
	126, -519, -599, 601, -599, 601, 446, 515, 515, 446,
	515, 515, 329, 153, 561, 166, 166, 567, -250, 561,
	-372, 515, -494, 48, 26, 329, -300, -242, 153, 515,
	515, 527, 459, -528, 334, -13, -306, -526, -301, 459,
	359, 416, -591, -362, -591, 202, -309, -615, -484, -207,
	348, -206, 145, 428, 136, 258, 223, -484, -205, 186,
	242, 561, -301, 2, 598, 598, 602, -548, 38, 342,
	342, 597, -296, -86, 561, -483, -516, -595, 561, 43,
	-299, 38, 153, -592, -133, -301, -488, -489, 5, 38,
	-296, 153, 344, 329, -247, 265, -640, -524, -563, -357,
	-390, -379, 330, 91, 598, -434, -381, -365, -440, 2,
	598, -200, -201, -528, -528, -528, -202, -214, -214, -432,
	-329, 597, -281, -266, 597, -214, -283, 2, -529, -528,
	-528, 602, 597, 580, 580, 580, -208, -484, -129, -133,
	348, -296, 590, -397, -341, -340, 363, 338, -341, 436,
	436, 345, 176, 261, -236, -280, -440, -440, 149, 33,
	33, -440, -440, -451, 598, -440, -440, -372, 596, 5,
	-440, 598, 598, 8, -440, 598, 599, -577, -265, -440,
	598, 60, 598, 598, 602, 602, 598, 598, 598, 598,
	598, 598, 598, -446, 186, 138, 338, 597, 598, 598,
	-105, -448, 208, 60, -471, -448, -448, -399, -361, -471,
	-438, -280, 595, -520, -516, -474, 597, 599, -212, 580,
	-528, -528, 561, -309, 596, 2, 595, -520, 598, -309,
	119, -282, -282, 499, 436, -250, 386, -431, 153, -549,
	93, -551, 76, 168, 102, 329, 334, 533, 386, 72,
	126, 344, 403, -630, -631, -632, 38, 572, 573, 598,
	-359, -468, -562, 597, -265, -359, -361, 329, 488, 126,
	344, 329, 126, 344, 556, 119, 2, 527, 79, -282,
	-290, -361, -361, -296, -306, -526, 160, 598, 602, 580,
	2, 590, 590, -306, -526, -301, -306, -526, -299, 153,
	-250, 361, 166, 160, 598, -280, 5, 5, 153, -277,
	76, -282, 5, -282, -300, 119, 446, 515, 515, 344,
	344, 347, -611, -612, -205, 602, 597, 580, 580, -205,
	-529, -129, 2, -351, -342, 232, -282, -546, -543, -544,
	386, -550, -552, 168, 386, -133, 2, -216, -215, -265,
	5, 597, -327, 348, 596, -597, 348, -596, 117, 136,
	-526, -394, -133, -301, -351, 598, 602, 147, -416, 543,
	-280, -296, 153, -248, 264, -640, -524, -245, -419, -417,
	139, 597, 344, -133, -357, 580, 598, 598, 119, 119,
	224, 152, -359, 597, 597, -361, 119, 598, -209, -210,
	-528, -129, -528, -208, -484, -66, -67, 230, 93, 368,
	-293, 499, 230, 597, 597, -236, -440, -440, -440, 598,
	-357, -520, 590, -571, 363, 598, -467, -440, -440, -441,
	186, 597, -451, 598, -572, 560, -440, -385, -386, -440,
	434, 108, 206, -572, -572, 598, -516, 2, -528, 2,
	515, 595, 2, 186, 221, 38, 406, -431, -290, -294,
	-287, -265, 168, 214, 334, 556, -415, 256, 597, -441,
	537, -296, 597, 2, 213, 213, 30, 60, -633, 130,
	235, 598, 602, -469, -276, -265, -440, -469, 598, 598,
	334, 537, 334, 556, -440, 537, -490, 597, -242, -242,
	598, 598, -440, 515, -519, 100, -517, 2, -599, -250,
	-279, -440, 515, 5, -242, -294, -242, -242, -277, 527,
	-306, -526, -301, -616, 500, 453, 528, 447, 189, 435,
	-616, 182, -206, -207, -528, -129, -205, 38, -332, 234,
	2, -548, 256, -287, 256, -629, 561, 598, 602, 580,
	580, -325, -217, -87, -88, 516, -483, 602, 597, 580,
	-351, 38, 5, 597, 597, -265, 344, 597, -280, -260,
	92, -640, -524, -246, -390, 330, -361, 93, -419, -447,
	-202, 597, 597, -330, 81, 94, 127, 213, 190, 231,
	480, 486, 28, -330, 598, -359, -359, 598, 597, -202,
	598, 602, 28, 597, 28, 597, -296, -318, -372, -372,
	598, -357, 60, 602, 598, 598, -441, -451, 598, -573,
	-574, -285, 602, 597, 597, 460, 596, -361, 2, -361,
	-250, 386, -265, -551, -287, 329, 543, -440, -441, -267,
	597, -440, 597, 597, 38, 126, 235, 131, 219, -430,
	-634, 101, 489, 222, -468, -236, 598, -429, 543, 403,
	-441, -277, -359, 597, 597, 597, 580, 186, 597, -494,
	-242, -300, 515, 2, 2, 186, -591, 598, -605, 401,
	-133, -336, -337, 221, 597, -331, 344, 119, 315, -215,
	-517, -517, 598, 38, -88, 9, -596, -597, -440, 38,
	-133, -488, -359, -296, -359, 344, -252, -251, 273, -524,
	-247, 598, -290, -390, -529, -529, -429, 598, 598, -529,
	-67, -361, -361, 598, 598, -578, 394, 437, 207, -372,
	-358, 598, 602, 38, -386, 2, 2, 2, 406, 153,
	209, 598, -553, 288, -265, 598, -394, -394, 38, 131,
	219, -332, 597, -237, -469, -332, 209, -296, -600, 543,
	598, -344, -343, -340, -346, -345, -340, -372, -517, 100,
	361, -372, -277, -361, -361, 344, -608, 187, -607, 5,
	10, -217, 361, -360, -470, -282, 82, 119, -342, -133,
	598, -133, 598, 598, -416, 598, -296, -249, -530, 406,
	408, -640, -248, -434, 598, 598, -430, -429, -338, -334,
	598, 598, 598, 598, -579, -580, 50, 530, 109, -440,
	-579, -579, -574, -576, 168, 561, -554, -557, -556, 577,
	466, 187, 362, 598, 488, 555, 598, 598, -338, -361,
	561, -351, -440, -429, 598, 602, 548, 598, 602, 548,
	598, 186, 598, -242, -613, 561, -242, -616, -204, 561,
	46, -331, -296, 598, 602, 385, 132, 142, -332, -629,
	-429, 597, -430, 597, -257, -256, -640, -510, -260, 139,
	-202, -202, -332, -430, -218, 561, -202, -581, 151, -580,
	382, 181, 436, 382, 181, -581, -581, -287, 55, -556,
	577, -557, 577, 537, 132, -633, 598, 55, -553, -332,
	-343, 221, -345, 186, 361, 202, 186, 444, -607, 30,
	-259, -258, 597, -470, 437, 437, 2, -336, -331, -430,
	-359, -332, -359, -253, -254, -255, -361, -252, 330, 537,
	-338, -332, -434, 109, 205, 510, 315, 33, 580, -555,
	315, 423, 64, 459, -555, -434, 580, -554, 597, 597,
	347, -361, 348, -361, 2, -217, -332, 598, -338, 598,
	-249, 459, -218, -338, 436, 352, -580, -440, 23, 334,
	126, -440, -633, -372, -372, -242, -201, 597, 598, -331,
	-338, -429, -218, -430, -257, -380, -434, -218, 598, 598,
	-201, -243, 64, 423, -259, -218, -430, -434, -332, -253,
	-434, -434, -333, -334, 515, 598, -434, -332, -338, 597,
	-338, -218, -372, -218, -434, 598, -434, -333,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 552, 553, 555, 556, 557, 559,
	560, 562, 564, 566, 567, 568, 570, 571, 573, 574,
	575, 576, 577, 579, 581, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	648, 650, 0, 1407, 1409, 1411, 1413, 0, 803, 0,
	36, 37, 39, 0, -2, 336, 338, 340, 0, 368,
	370, 371, 373, 375, 376, 377, 379, -2, 0, 485,
	486, 488, 490, -2, 0, 1010, 1012, 0, 637, 639,
	0, 1015, 1017, 0, 0, 660, 661, 0, 1518, -2,
	652, 654, 656, 658, 728, 730, 732, 734, 736, 738,
	740, 742, 744, 746, 747, 749, 751, 753, 755, 757,
	758, 760, 762, 764, 765, 767, 768, 770, 772, 774,
	776, 778, 780, 782, 784, 786, 788, 790, 792, 794,
	-2, 797, 798, 799, -2, -2, 0, -2, -2, -2,
	1425, 41, 43, 45, 47, 49, 51, 53, 55, 57,
	59, 429, 431, 433, 435, 437, 440, 442, 444, 1576,
	492, 494, 496, 498, 500, 502, 504, 0, -2, 1590,
	0, 0, 61, 62, 63, 64, 65, 66, 67, 68,
	69, 70, 71, 109, 110, 111, 112, 113, 114, 115,
	116, 75, 76, 77, 79, 80, 81, 82, 86, 87,
	88, 89, 90, 91, 92, 93, 94, 95, 107, 73,
	0, 0, 1549, 1551, 1553, 1555, -2, 0, 0, 5,
	9, 11, 13, 15, 17, 19, 21, 23, 25, 27,
	29, 554, 558, 561, 563, 565, 569, 572, 578, 580,
	582, 537, 538, 541, 2284, 2302, 2303, 2304, 2307, 2308,
	2309, 2310, 2311, 2312, 2761, 2843, 2844, 2334, 2335, 2336,
	2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346,
	2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356,
	2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366,
	2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376,
	2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386,
	2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396,
	2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406,
	2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416,
	2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426,
	2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436,
	2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446,
	2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456,
	2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466,
	2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476,
	2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486,
	2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496,
	2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506,
	2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516,
	2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526,
	2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536,
	2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546,
	2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556,
	2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566,
	2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576,
	2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586,
	2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596,
	2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606,
	2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616,
	2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626,
	2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636,
	2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646,
	2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656,
	2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666,
	2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676,
	2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686,
	2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696,
	2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706,
	2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716,
	2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726,
	2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736,
	2737, 2738, 2739, 2740, 539, 540, 1196, 0, 606, 604,
	2269, 607, 2559, 609, 611, 479, 480, 481, 482, 483,
	484, 0, 630, 620, 1588, 631, 633, 634, 635, 636,
	601, 599, 0, 630, 2338, 628, 1405, 1406, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 491, 0, 0, 0,
	0, -2, 0, 0, 0, 0, 0, 0, 0, 408,
	1254, 1255, 1256, 1390, 1391, 2606, 1432, 0, 234, 649,
	-2, -2, 2726, -2, 683, 684, -2, -2, 698, 701,
	693, 2730, 0, 2609, 2593, -2, 704, 1408, 1410, 1412,
	801, 802, 2288, 0, 0, 0, 0, 0, 38, 40,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 244,
	-2, -2, -2, -2, 0, 0, 2654, 2390, 2237, 2304,
	2240, 2235, 337, 339, 341, 342, 0, 0, 0, 0,
	0, 0, 369, 372, 374, 378, -2, 380, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	1073, 1065, 1066, 1312, 0, 0, 0, -2, 487, 489,
	542, 543, 0, 1577, 1577, 550, 551, -2, 0, 0,
	0, 0, 307, 295, 1011, 1013, 1014, 0, 0, 0,
	0, 638, 640, 0, 0, 276, 1016, 1018, 1019, 0,
	0, 0, 0, 0, 309, 0, 0, 653, 655, 657,
	659, 729, 731, 733, 735, 737, 739, 741, 743, 745,
	748, 750, 752, 754, 756, 759, 761, 763, 766, 769,
	771, 773, 775, 777, 779, 781, 783, 785, 787, 789,
	791, 793, 795, 796, 809, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, -2, 0, -2, -2, -2,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	906, 0, 0, 0, -2, -2, -2, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, -2, 991,
	0, 0, 812, 814, 815, 816, 817, 0, 879, 904,
	905, 915, 800, 0, 1236, 1578, 1434, 1415, 1429, 1434,
	1417, 1418, 1419, 1420, 1421, 1426, 1428, 1422, 1423, 1424,
	42, 44, 46, 48, 50, 52, 54, 56, 58, 60,
	430, 432, 434, 436, 438, 441, 443, 445, -2, 1547,
	1548, 493, 495, 497, 499, 501, 503, 505, 641, 0,
	643, 0, 813, -2, 0, 1582, 1582, 1582, 0, 0,
	1548, 1546, 0, 646, 647, 708, 709, 1851, 0, 0,
	0, 0, 0, 0, 0, 0, 2111, 1939, 0, 710,
	-2, 1972, 1974, 2701, 2532, 2726, 2110, 1976, 1977, 1978,
	1979, 1980, 0, 1982, 1983, 1984, 1985, 1986, 1987, 0,
	1989, 0, 1994, 1995, 1996, 0, 2708, 2214, 2298, -2,
	0, 0, 2714, 2294, 0, 2077, 2012, -2, -2, 2321,
	2300, 1783, 1784, 1785, 1786, 1787, -2, -2, 2744, 2016,
	2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026,
	0, 2689, 2709, 2710, 2715, 2717, 2711, 2698, 2037, 2403,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 1810, 1819, -2, -2, -2, -2, -2,
	-2, -2, 2702, 2703, 2720, 2723, 2729, 2734, 2735, 2707,
	2716, 2743, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752,
	2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 1811, -2,
	-2, -2, -2, 1565, 2573, 1568, 1196, 1566, 1550, 1552,
	0, 1554, 0, 0, 0, 1559, 1585, 1583, 0, 1634,
	1563, 1564, 1653, 1653, 1677, 0, 1658, 0, 1677, 1577,
	1704, 0, 1664, 2598, 2013, 2014, 0, 2304, 2299, -2,
	-2, 2741, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 602, 0, 608, 610, 0, 0, 0, 629, 1587,
	0, 0, 0, 0, 0, 0, 0, 411, 412, 413,
	414, 415, 2709, 0, 0, 0, 420, 0, 422, 423,
	424, 425, 426, 427, 428, 205, 2709, 510, 535, 0,
	205, 2709, 513, 205, 2709, 516, 0, 519, 1310, 205,
	2709, 522, 2265, 205, 2709, 525, 527, 2273, 205, 2709,
	531, 2280, 2278, 532, 2709, 534, 312, 310, 311, 2317,
	2318, 2325, 2326, 2327, 2328, 2742, 2744, 1401, 1402, 1403,
	1404, 0, 1431, 1311, 651, 0, 677, 0, 681, 682,
	2697, -2, 0, 2618, 686, 687, -2, 689, 1435, 1439,
	1440, 1441, 1442, 1443, 0, 0, 0, 0, 1448, 0,
	0, 0, 0, 678, 679, 696, 697, 702, 705, 0,
	804, 805, 806, 807, 808, 72, 0, 2709, 1704, 74,
	0, 2259, 2329, 2330, 2331, 2332, 2333, 2762, 2763, 2764,
	2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774,
	2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784,
	2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794,
	2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804,
	2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814,
	2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824,
	2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834,
	2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 78, 0,
	2709, 83, 0, 2709, 0, -2, 96, 0, 108, 0,
	2262, 117, 0, 2709, 0, 2234, -2, 0, 217, 296,
	297, 298, 0, 1040, -2, 2709, 1248, 1250, 1250, 0,
	-2, 0, 0, 0, 1001, 2231, 2236, 1002, 2255, 1003,
	2241, 0, 343, 344, 345, 346, 347, 0, 348, 2709,
	350, 351, 0, 353, 354, 2709, 356, 357, 0, 359,
	0, 256, 262, 2709, 2709, 382, 384, 0, 386, 387,
	0, 389, 0, 0, 0, 393, -2, 409, 0, 406,
	396, 397, 399, 400, 401, 402, 403, 0, 449, 447,
	2270, 0, 0, -2, 2709, 0, 1037, 0, 0, 1290,
	-2, 2709, 1241, 0, 1297, 2709, 1293, 0, -2, 0,
	1575, 2709, 1452, 1069, 1070, 1071, 1072, 1716, 476, 0,
	1483, 0, 1485, 0, 1504, 1710, 1653, 0, 0, 1715,
	0, -2, 595, 2287, -2, 545, 0, 546, 0, -2,
	0, 324, 0, 0, 1020, 1022, 1023, 1025, 1026, 1029,
	1030, 1031, 1032, 1690, 277, 279, 0, 0, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 0, 0, 662,
	0, 0, 810, 811, 0, 0, 822, 823, 824, 0,
	324, 2610, 2568, 2424, 831, 0, 834, 837, -2, 0,
	0, 0, 0, 841, 0, 846, 847, 848, 0, -2,
	0, 855, 857, 1009, 859, 0, 0, 861, 0, 865,
	0, 868, 0, 870, 0, 872, -2, -2, -2, 880,
	881, -2, 886, -2, 0, 890, -2, 0, 893, 0,
	896, -2, 0, 906, 902, 903, 0, 0, 0, 0,
	923, 924, 0, 933, 0, 936, 937, 938, 0, 942,
	943, 0, 945, 946, 947, 948, 0, 2681, 2615, 2390,
	0, 954, -2, 960, 962, 0, -2, 0, 978, 0,
	982, 0, 0, 990, 0, 0, 818, 819, 205, 1708,
	1414, -2, 1416, 0, -2, 0, 642, 0, 645, 1607,
	1533, 1530, 0, 1604, 1605, 1534, 0, 0, 0, 1541,
	0, 1580, 1581, 0, 0, 0, 1520, 1521, 0, 0,
	0, 0, 2116, 2117, 2118, 2119, 2132, 2120, 2121, 2131,
	2129, 2130, 2122, 2123, 2128, 2142, 2143, 2133, 2134, 2124,
	2137, 2135, 2136, 2138, 2139, 2140, 2141, 0, 0, 2147,
	0, 2125, 2126, 2127, 2155, 0, 0, 2156, 0, 2158,
	0, 2148, 2144, 2145, 2146, 0, 1918, 1920, 2222, 0,
	0, 0, 2154, 2149, 2150, 1856, 1857, 1858, 1859, 1860,
	1893, 1897, 1898, 0, 0, 1973, 2219, 2218, 1975, 0,
	0, 2170, 0, 1988, -2, 0, 2111, 2165, 0, 0,
	1997, 1998, 1999, 0, 0, 2170, 0, 0, 2213, 2009,
	2010, 1848, 0, 0, 2079, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 1796, 0, 1798, 0, 1799, 1800,
	1807, 1820, 0, 0, 0, 0, 1824, 0, 0, 0,
	0, 0, 0, 0, 2194, -2, 0, 0, 0, 0,
	1812, 0, 1567, 0, 0, 1638, 2223, 2227, 2228, 1638,
	1638, 0, 0, 2171, 1701, 1701, 0, 0, 1696, 1696,
	1696, 1694, 1677, 0, 1677, 1687, 0, 1677, 1677, 0,
	-2, 1658, 0, 0, 1687, 0, 1671, 583, 585, 587,
	589, 590, 591, 593, 1705, 1706, 0, 0, 0, 0,
	2305, 0, 0, 0, 0, 2277, 0, 0, 2290, 0,
	365, 0, 0, 0, 2664, 2609, 0, -2, 613, 632,
	1577, 0, 2173, 1731, 1735, 0, 1737, 1738, 1739, 1740,
	1741, 0, 0, 1732, -2, 1808, 1810, 1831, 2322, 2323,
	2324, 1791, 1792, 1793, 1794, 1795, 1803, 1790, 1790, 1790,
	1801, 1830, 1822, 1830, 1826, 1776, 1777, 1778, 1813, 1814,
	1815, 1816, 0, 2664, 2609, 0, -2, 622, 0, 0,
	1515, 410, 0, 417, 418, 419, 0, 506, 0, 203,
	204, 0, 205, 2709, 511, 0, 514, 0, 205, 2709,
	2229, 520, 0, 523, 0, 0, 529, 0, 0, 0,
	0, 0, 205, 1517, 0, 0, 0, 0, -2, 691,
	699, 700, 224, 225, 0, 1437, 0, 1444, 719, 720,
	721, 1446, 1447, 0, 1449, 694, 722, 723, 724, 725,
	726, 727, 0, 2243, 2244, 2245, 2246, 2249, 2250, 0,
	0, 692, 712, 695, 0, 706, 118, 1387, 0, 0,
	161, 0, 1387, 1387, 0, 0, 0, 0, 188, 0,
	1108, 0, 0, 0, 0, 133, 146, 157, 130, 131,
	0, 0, 0, 0, 0, 0, 84, 1218, 0, 1221,
	0, 0, 0, 0, 0, 0, 0, 1234, 0, 0,
	0, 0, 0, 98, 99, 0, 0, 104, 105, 0,
	145, 0, 0, 0, 0, 0, 1480, 0, 140, 120,
	0, 0, 133, 147, 159, 0, 192, 194, 1105, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 226, 0,
	0, 0, 1242, 0, 0, 0, 1574, 0, 0, 0,
	0, 2709, 1385, 0, 1370, 0, 1690, 2473, -2, -2,
	277, 1690, 1000, 0, 0, 2305, 2239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 388, 390, 391,
	392, 0, 1289, 0, 398, 439, 1167, 2709, 0, 0,
	466, 461, 0, 463, 0, 0, 0, 1217, 2709, 1215,
	2274, 0, 1239, 0, 1196, 2709, 2272, 0, 0, 0,
	1298, 2314, 1307, 1311, 1470, 0, 478, 0, 1486, 1488,
	0, 0, 1711, 0, 1713, 1653, 1577, 0, 0, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 0, 1689, 0, 0, 1690, 277, 2584, 324, 324,
	1690, 664, 1690, 666, 0, 0, 825, 826, 0, 324,
	324, 324, 832, 833, 835, 836, -2, -2, -2, -2,
	838, 839, 930, 0, 0, 0, 929, 849, 0, 851,
	854, 858, 0, 994, 2593, 2609, 2664, 1007, 930, 2390,
	930, 2390, 930, 2390, 869, 871, 874, 918, 926, 885,
	892, 0, 887, 891, 894, 897, 0, 899, 907, 0,
	-2, 0, 910, 0, 912, 0, 914, 930, 931, 934,
	941, 944, 949, 950, 951, 952, 2285, 953, -2, 957,
	958, 0, 969, 974, 975, 971, 0, 0, 0, 0,
	0, 0, 985, 986, 0, 0, 993, 1235, 0, 1427,
	1607, 1533, 644, 1524, 1606, 1525, 1532, 1535, 0, 0,
	1537, 0, 1539, 0, 1602, 1603, 1610, 1611, 0, 1621,
	1622, 1614, 0, -2, 0, 0, 1617, 1618, 1543, 0,
	1560, 1561, 1562, 1591, 1594, 1326, 0, 2843, 1852, 1726,
	1853, 1854, 2258, 0, 1861, 1862, 1863, 1864, 1865, 1866,
	1867, 1868, 1869, 1870, -2, -2, -2, -2, -2, -2,
	-2, -2, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886,
	1887, 1888, 1889, -2, -2, -2, 1894, 1895, 1896, -2,
	2157, 2159, 0, 2222, 0, -2, 0, -2, -2, -2,
	-2, 1915, 0, 1917, 1922, 1924, 1926, 0, 0, 0,
	0, 2221, 1936, 2205, 2206, 0, 0, 2113, 2114, 2115,
	1921, 0, 1940, 2220, 2217, 0, 0, 2151, 0, 2116,
	2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126,
	2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136,
	2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146,
	2147, 2148, 0, 2169, 1590, 2001, 0, 0, 0, 0,
	2008, 1993, 2167, 0, 2166, 0, 0, 0, 2177, 0,
	2212, 2208, 0, 2256, 1847, 1834, 1835, 1836, 1837, 1838,
	1839, 1849, 0, 2253, 2291, 2297, 2087, 0, 0, 0,
	2038, 2039, 2040, 2041, 2042, 0, 2044, 2045, 0, 2047,
	2048, 0, 2050, 2051, 0, 2053, 2054, 2055, 2056, 2057,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1744, 1745, 1746,
	1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756,
	1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766,
	1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 0,
	0, 2059, 0, 2180, -2, -2, -2, -2, -2, -2,
	-2, -2, 0, 2061, 0, 2063, 2171, 2191, 0, 0,
	1941, 0, 0, 0, 0, 2111, 0, 2066, 2171, 2199,
	0, 0, 0, 0, 0, 2171, 0, 2204, 0, 2073,
	0, 2075, 1569, 0, 0, 1721, 0, 0, 0, 2226,
	1721, 1721, 0, 1633, 0, 0, 1697, 1698, 1699, 1700,
	0, 0, 1701, 0, 1691, 1695, 1692, 1693, 1687, 1650,
	0, 0, 2260, 1687, 1656, 1686, 0, 1196, 1676, 1687,
	1687, 0, -2, 1660, 1677, 0, 0, 584, 586, 588,
	592, 594, 0, 0, 1590, -2, 0, -2, 326, 1195,
	0, 0, 0, 0, 0, 603, 605, 0, 0, 526,
	0, 0, 619, 0, 597, 0, 600, 0, 1722, 1725,
	0, 0, 1736, 1742, 1743, 0, -2, 0, 0, 1832,
	0, 0, 0, 0, 0, 627, 0, 0, 0, 421,
	536, 205, 508, 0, 205, 205, 517, 0, 0, 205,
	528, 205, 2281, 205, 2279, 313, 533, 1516, 237, 0,
	680, 0, 1436, 1445, 0, 716, 0, 718, 0, 2247,
	2251, 2248, 2252, 0, 707, 0, 0, 0, 0, 1386,
	0, 1333, 0, 0, 165, 2709, 0, 207, 0, 0,
	1160, 2266, 0, 1150, 0, 0, 2410, 0, 0, 0,
	0, 0, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 132, 0, 0, 0,
	0, 0, 0, 0, 0, 1219, 1220, 1222, 1229, 1231,
	0, 1225, 2254, 0, 0, 1226, 0, 1228, 1230, 1232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 106,
	1251, 0, 0, 1252, 1253, 1458, 1459, 0, 1479, 1480,
	0, 0, 0, 129, 0, 0, 0, 0, 0, 0,
	2233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1244, 0, 1285, 1283, 1263, 1264,
	1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274,
	1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 0, 0,
	0, -2, 1246, 1247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 315, 2232, 2242, 0, 1027,
	1028, 349, 352, 355, 358, 243, 0, 0, 394, 0,
	0, 1075, 1050, 0, 0, 448, 324, 0, 0, 462,
	466, 2283, 1035, 221, 222, 223, 1213, 1216, 0, 1196,
	2709, 1262, 0, 0, 0, 0, 0, 0, 1296, 0,
	0, 2709, 2261, 2313, 2314, 1472, 1480, 0, 1721, 0,
	1502, 1489, 0, 0, 0, 1502, 1506, 1507, 1509, 1510,
	0, 0, 1712, 1718, 544, 596, 1577, 1577, 324, 322,
	2535, 320, 317, 319, 0, 0, 0, 1076, 1078, 1079,
	1080, 207, 0, 2314, 1150, 2462, 2314, 0, 1492, 1494,
	0, 0, 0, 271, 0, 280, 1690, 278, 283, 0,
	0, 0, 460, 663, 668, 820, 0, 324, 828, 829,
	830, 876, 920, 928, 973, 840, 842, 843, 844, 0,
	0, 0, 1008, 1004, 1005, 1006, 860, 930, 863, 930,
	866, 930, 889, 895, 908, 901, 909, 0, 0, 0,
	922, 939, 0, 956, 0, 0, 0, 0, 0, 0,
	0, 979, 980, 981, 983, 988, 987, 992, 1709, 1528,
	1529, 1531, 0, 1540, 0, 0, 1616, -2, -2, 1615,
	1619, 1620, -2, -2, -2, -2, 1536, 0, 1545, 1542,
	0, 1601, 1324, 1325, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 1937, 0, -2, 1916, 1919, 1923, 1925,
	1927, 0, 0, 0, 0, 0, 0, 2160, 0, 2162,
	1938, 2215, 2218, 2153, 0, 2109, 0, 0, 1589, 1590,
	1590, 0, 2007, 0, 2168, 0, 2175, 2176, 0, 2000,
	0, 2209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2011, 0, 0, 0, 0, 2043, 2046, 2049, 2052,
	0, 0, 0, 0, 2032, 0, 0, 0, 2036, 1802,
	1788, 0, 1830, 1828, 1829, 1823, 1830, 1827, 1780, 0,
	1779, 0, 2058, 0, 2060, 2062, 0, 0, 2064, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1944, 1945, 1946, 1966, 2065, 2197, 2198,
	0, 0, 0, 0, 0, 0, 2071, 0, 2203, 2072,
	2074, 1577, 0, 1570, 0, 1635, 1624, 1720, 0, 2224,
	1690, 1637, 1639, 2225, 2263, 1624, 1624, 0, 2172, 0,
	0, 1681, 0, 0, 0, 1683, 1654, 0, 0, 1648,
	0, 1643, 1644, 1645, 1646, 1647, 1655, 1196, 1685, 1657,
	1661, 2291, 0, 1687, 0, 1672, 0, 1674, 1707, 0,
	1666, 1669, 0, 0, 2306, 1721, 0, 360, 366, 367,
	361, 362, 363, 364, 612, 0, 0, 0, 0, 0,
	2174, 0, 1727, 0, 1733, 0, 0, 0, 0, 621,
	0, 0, 0, 0, 1514, 416, 507, 205, 512, 515,
	2230, 205, 521, 524, 530, 233, 0, 676, -2, 714,
	715, 717, 0, 713, 162, 1387, 0, 0, 1329, 1331,
	1335, 1341, 1344, 0, 167, 2709, 179, 0, 1124, 0,
	2264, 0, 0, 0, 0, 0, 0, 1389, 0, 0,
	2709, 205, 2709, 205, 182, 184, 187, 0, 191, 189,
	0, 1112, 0, 0, 1115, 119, 1387, 0, 0, 122,
	126, 134, 135, 138, 0, 0, 0, 144, 0, 0,
	0, 1346, 1350, 1358, 0, 0, 0, 1223, 1224, 1227,
	1233, 85, 0, 0, 0, 1354, 1356, 1362, 97, 100,
	2709, 2275, 102, 2709, 0, 1328, 0, 0, 0, 0,
	193, 124, 128, 136, 137, 139, 0, 1364, 121, 0,
	220, 0, 0, 210, 205, 2709, 0, 212, 0, 213,
	214, 227, 0, 0, 0, 1038, 1039, 1284, 1237, 1238,
	0, 1249, 1243, 0, 0, 0, 0, 0, 1366, 1367,
	0, 0, 0, 1385, 1382, 1690, 239, 0, 1690, 247,
	0, 2238, 0, 263, 381, 0, 0, 0, 0, 1074,
	1178, 0, 1045, 0, 0, 0, 454, 450, 0, 459,
	465, 464, 470, -2, 0, 0, 0, 0, -2, 0,
	0, 1300, 1294, 1295, 0, 0, 0, 0, 2709, 1474,
	1480, 0, 1575, 1590, 477, 1481, 1502, 0, 0, 0,
	1491, 1487, 1484, 1721, 0, 0, 0, 0, 0, 1714,
	1717, 547, 548, 299, 0, 0, 0, 0, 0, 324,
	0, 0, 0, 1081, 1085, 0, 2314, 2314, 0, 2268,
	0, 0, 0, 0, 0, 0, 281, 0, 284, 0,
	0, 0, 289, 290, 291, 292, 293, 294, 283, 273,
	1690, 0, 0, 665, 0, 0, 827, 0, 850, 853,
	862, 864, 867, 911, 913, 930, 940, 963, 964, 1102,
	0, 1102, 0, 0, 984, 1538, 0, 1613, 1544, 1595,
	1596, 0, 1326, 0, 1855, 1900, 0, 0, -2, 0,
	0, 1904, 0, 0, 0, -2, 0, 0, 0, 2161,
	2163, 0, 2217, 2152, 2002, 0, 0, 0, 2006, 1990,
	1991, 0, 2112, 2178, 2207, 2211, 0, 1840, 1841, 1842,
	1843, 1844, 1845, 1846, 0, 2257, 2292, 2296, 2085, 2086,
	2090, 2271, 0, 0, 0, 2015, 0, 0, 0, 0,
	0, 0, 0, 0, 1821, 1825, 0, 0, 2179, 2190,
	2192, 1942, 1943, 1947, 1948, 1949, 1950, 1951, 1952, 1953,
	1954, 1955, 1956, -2, -2, -2, 1960, 1961, 1962, -2,
	-2, -2, 1967, 0, 0, 0, 2193, 2195, 2196, 2200,
	2201, 0, 2068, 2069, 2070, 2202, 0, 1577, 1571, 1632,
	0, 1719, 1636, 0, 1632, 1632, 1584, 1679, 0, 0,
	1703, 0, 1651, 0, 1652, 0, 1684, 0, 1659, 1662,
	1663, 1673, 0, 1665, 0, 1668, 0, 2002, -2, 325,
	327, 329, 0, 332, 333, 0, 0, 615, 616, 0,
	614, 598, 0, 0, 1729, 0, 0, 1805, 1809, 1833,
	624, 625, 0, 623, 509, 518, 235, 0, 1688, 0,
	0, 0, 0, 0, 0, 206, 1122, 1159, 0, 0,
	0, 1149, 0, 0, 1165, 169, 170, 171, 0, 0,
	0, 0, 180, 0, 0, 177, 0, 186, 190, 1109,
	0, 0, 0, 0, 1334, 0, 0, 0, 141, 142,
	143, 0, 148, 0, 149, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1464, 1465, 0, 1455, 0,
	0, 0, 208, 0, 0, 0, 1323, 229, 0, 0,
	0, 0, 0, 1287, 1288, 1245, 1347, 1351, 1359, 0,
	0, 0, 0, 630, 0, 635, 1384, 0, 247, 245,
	0, 248, 0, 251, 252, 0, 254, 247, 241, 0,
	0, 0, 1196, 395, 1048, 1166, 0, 1168, 0, 1046,
	0, 0, 1167, 446, 0, 453, 0, 467, 0, 0,
	1217, 0, 0, 1240, 1260, 1196, 0, 1299, 1301, 0,
	1309, 0, 0, 0, 1476, 1480, 0, 1469, 1470, 1609,
	1482, 1500, -2, 0, 0, 1590, 1508, 1505, 1511, 1512,
	0, 321, 0, 316, 318, 0, 302, 0, 0, 1077,
	1082, 0, 0, 0, 0, 0, 1493, 1495, 0, 1021,
	1024, 0, 0, 0, 0, 0, 272, 283, 1690, 308,
	0, 821, 845, 921, 965, 1101, 0, 0, 967, 0,
	0, 1612, 1599, 1600, 1597, 1326, 1902, 1906, 0, 0,
	0, 1908, -2, 0, 1930, -2, -2, 2164, 2216, 1981,
	1590, 2003, 2005, 1992, 2210, 1850, 0, 2092, 2089, 0,
	2076, 0, 2027, 2028, 0, 0, 2031, 2033, 2034, 2035,
	1789, 1782, 1781, 2189, 0, 0, 0, 0, 2067, 1572,
	0, 2081, 0, 0, 1640, 2081, 2081, 1680, 0, 1682,
	1649, 1641, 0, 2292, 1675, 1667, 0, 0, 330, 0,
	334, 335, 0, 0, 1723, 1728, 0, 1734, 1804, 0,
	236, 163, 164, 1338, 1342, 1339, 0, 166, 0, 1123,
	0, 1126, 0, 0, 0, 0, 1133, 1150, 0, 0,
	0, 0, 0, 0, 1152, 0, 1151, 0, 0, 1182,
	0, 1314, 1321, 0, -2, 0, 0, 0, 173, 196,
	0, 0, 0, 0, 199, 1388, 175, 0, 0, 205,
	205, 0, 0, 1330, 1332, 1345, 0, 0, 0, 0,
	151, 0, 0, 1348, 1352, 1360, 1355, 1357, 1363, 0,
	103, 0, 1466, 0, 0, 1365, 218, 219, 0, 205,
	0, 205, 211, 205, 1323, 0, 0, 0, 0, 0,
	0, 0, 1368, 1369, 238, 0, 0, 0, 0, 240,
	314, 247, 383, 0, 1096, 0, 1178, 1170, 1171, 1172,
	0, 1177, 1179, 0, 0, 1062, 1047, 0, 1058, 0,
	0, 1075, 1050, 0, 451, 468, 0, 471, 0, 474,
	1036, 1214, 1257, 1196, 0, 1291, 0, 0, 0, 0,
	0, 0, 0, 1478, 1480, 0, 1471, 1472, 1502, 1608,
	0, 0, 0, 1490, 1609, 0, 323, 324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 285, 0,
	286, 287, 288, 274, 275, 667, 669, 0, 0, 675,
	1100, 0, 0, 0, 0, 1598, 1910, -2, -2, 1931,
	0, 2293, 2295, 1590, 0, 2078, 1592, 0, 0, -2,
	0, 0, 0, 1573, 1556, 0, 1631, 1623, 1625, 1627,
	2596, 2385, 2708, 1557, 1558, 1702, 0, 1670, 331, 617,
	0, 0, 1730, 0, 0, 0, 1340, 168, 0, 1127,
	1128, 2267, 1130, 0, 1132, 1134, 1135, 1136, 0, 1139,
	0, 2316, 0, 1144, 1147, 1148, 0, 0, 1161, 1183,
	0, 1192, 0, 1316, 1326, 1320, 0, 1318, 1194, 0,
	172, 198, 174, 200, 195, 0, 1323, 0, 176, 185,
	0, 0, 123, 0, 0, 2379, 154, 152, 150, 101,
	1327, 125, 0, 220, 228, 1322, 230, 215, 205, 0,
	1349, 1353, 1361, 0, 1376, 1377, 1378, 1379, 0, 0,
	0, 0, 249, 0, 250, 253, 0, 0, 1111, 0,
	1049, 1169, 0, 1180, 1181, 1052, 0, 1051, 0, 0,
	0, 0, 0, 452, 455, 0, 458, 0, 0, 0,
	0, 0, 1302, 1300, 0, 1308, 0, 0, 0, 1454,
	0, 0, 1473, 1474, 475, 1496, 0, 0, 1502, 1513,
	301, 0, 0, 1083, 1086, 1087, 1088, 1089, 1090, 1091,
	1092, 1093, 1094, 1084, 1194, 0, 0, 1158, 0, 306,
	282, 0, 671, 0, 673, 0, 966, 968, 0, 0,
	2004, 2096, 0, 0, 2029, 2030, -2, 0, 1970, 2080,
	2082, 0, 0, 0, 0, 0, 1642, 618, 1724, 626,
	1336, 0, 1343, 1125, 1129, 0, 0, 0, 1140, 1200,
	0, 0, 1217, 1217, 1153, 0, 0, 1186, 1187, 1096,
	0, 1188, 1189, 1190, 1315, 1601, 1321, 1096, 0, 0,
	197, 202, 0, 0, 0, 0, 0, 0, 0, 209,
	231, 1323, 0, 1380, 1381, 0, 0, 246, 267, 0,
	1258, 1050, 1110, 0, 0, 1060, 0, 1063, 0, 1059,
	1056, 1057, 1048, 0, 456, 457, 472, 0, 473, 0,
	1261, 0, 0, 1309, 0, 0, 1461, 1453, 1480, 1475,
	1476, 1721, 1499, 1503, 0, 0, 1192, 1194, 1107, 0,
	670, 0, 0, 976, 977, 0, 0, 0, 0, 2091,
	1593, 1971, 0, 0, 1626, 1628, 1629, 1630, 1337, 0,
	0, 1138, 1205, 0, 0, 0, 0, 0, 1154, 1184,
	1185, 1107, 0, 1319, 1317, 1163, 0, 1196, 178, 0,
	1194, 0, 1116, 0, 0, 1119, 0, 0, 155, 2379,
	153, 0, 205, 1373, 205, 0, 270, 0, 261, 259,
	260, 1052, 0, 0, 1174, 1176, 0, 1064, 1096, 1062,
	469, 1259, 1292, 1194, 0, 1192, 0, 1468, 1480, 1462,
	1463, 0, 1478, 0, 324, 324, 1096, 1192, 1050, 1106,
	324, 672, 674, 2088, 2108, 2097, -2, 2667, 2386, 0,
	2108, 2108, 2083, 2084, 0, 0, 1141, 1201, 1202, 0,
	1197, 1198, 1199, 2315, 1142, 1143, 1145, 1146, 1182, 0,
	0, 1200, 201, 1096, 1113, 0, 0, 1114, 0, 0,
	158, 0, 160, 232, 1371, 0, 1374, 0, 255, 0,
	0, 1044, 0, 1173, 0, 0, 0, 0, 1111, 1052,
	1192, 0, 1096, 0, 1457, 1467, 0, 1477, 1454, 0,
	303, 304, 1107, 1096, 1721, 0, 305, 2093, 0, 0,
	2099, 2100, 2101, 2102, 2103, 2094, 2095, 1131, 0, 1203,
	0, 1204, 0, 0, 0, 1721, 1191, 0, 1205, 183,
	1117, 0, 1120, 0, 156, 0, 0, 0, 265, 266,
	1041, 1043, 0, 1175, 1053, 0, 1055, 1050, 1061, 1096,
	0, 1107, 0, 1450, 1456, 1460, 2276, 1461, 1497, 0,
	1050, 1107, 1157, 0, 2105, 2106, 0, 0, 0, 1206,
	0, 1209, 1210, 0, 1207, 1162, 0, 1182, 0, 0,
	1372, 205, 0, 0, 1054, 1052, 1107, 1194, 1050, 1192,
	1468, 0, 1721, 1050, 2104, 2107, 2098, 1137, 1208, 1211,
	1212, 1193, 1164, 0, 0, 1375, 268, 0, 1099, 1044,
	1050, 1192, 1721, 1096, 1457, 1721, 1155, 1721, 1104, 0,
	0, 1095, 1097, 1098, 1042, 1721, 1096, 1305, 1107, 1451,
	1498, 1156, 1118, 1103, 0, 269, 1303, 1107, 1050, 0,
	1050, 1721, 0, 1721, 1306, 1104, 1304, 1121,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 586, 3, 592, 587, 3,
	597, 598, 590, 588, 602, 589, 599, 591, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 605, 3,
	578, 580, 579, 583, 601, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 595, 3, 596, 593, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 603, 585, 604, 581,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 582, 57921, 584, 57922, 594, 57923, 600, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1475
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1480
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1482
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1485
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1486
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1487
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1489
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1490
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1491
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1492
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1502
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1511
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1513
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1516
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1517
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1518
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1519
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1520
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1521
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1522
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1523
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1524
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1584
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1610
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1624
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1642
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1646
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1650
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1680
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1684
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1691
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1703
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1713
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1720
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1730
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1737
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1747
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1756
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1763
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1787
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1819
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1823
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1827
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1833
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1837
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1843
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1852
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1863
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1867
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1873
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1881
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1891
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1895
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1904
		{
		}
	case 133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1905
		{
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1909
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1918
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1930
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1935
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1942
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1954
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1961
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1969
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1974
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1978
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1983
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1989
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1997
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2008
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2018
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2028
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2037
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2048
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 152:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2054
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2062
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2066
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2080
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2085
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2096
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2100
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2106
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2110
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2117
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2122
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2127
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2132
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2137
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2142
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2147
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2152
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2157
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2162
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2172
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2176
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2181
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2190
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2202
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2212
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2219
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2222
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2228
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2235
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2250
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2259
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2268
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2273
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2280
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2288
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2289
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2293
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2297
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2303
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2311
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2315
		{
			sqlVAL.union.val = nil
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2321
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = nil
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2331
		{
			sqlVAL.union.val = true
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2335
		{
			sqlVAL.union.val = false
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2341
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2345
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2352
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2356
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2360
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2370
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 208:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2395
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2406
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2417
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2426
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2436
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2445
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2463
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2467
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2470
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2474
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2488
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2493
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2495
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2500
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2507
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2515
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2539
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2546
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2550
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2554
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2558
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 238:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2588
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2600
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2610
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2621
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2630
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2634
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2638
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2646
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2650
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2654
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2661
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2665
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2674
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2678
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2682
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2686
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2690
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2772
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2783
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2788
		{
			sqlVAL.union.val = nil
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2796
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2800
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2810
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2816
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2820
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2824
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2833
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2837
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2841
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2847
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2851
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2855
		{
			sqlVAL.union.val = nil
		}
	case 271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2887
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2896
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2906
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2915
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2925
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2932
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2936
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2940
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2946
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2950
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2957
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2961
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2965
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2972
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2976
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2985
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2989
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2993
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2997
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3001
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3005
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3009
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3013
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3017
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3023
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3029
		{
			return unimplemented(sqllex, "alter function")
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3033
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3037
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3074
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3079
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3083
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3089
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3094
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3099
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3104
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3109
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3113
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3129
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3132
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3136
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3140
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3148
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3152
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3158
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3162
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3168
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3172
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3176
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3180
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3186
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3190
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3196
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 323:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3200
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3204
		{
			sqlVAL.union.val = nil
		}
	case 325:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3216
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3230
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3236
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3240
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3246
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3250
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3258
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3262
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3266
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3270
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3282
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3283
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3284
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3285
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3295
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3303
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3305
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3309
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3312
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3322
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3331
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3339
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3341
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3345
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3348
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3358
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3367
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3375
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3377
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3381
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3384
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3388
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3392
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3396
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3400
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3413
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3416
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3420
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3425
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3437
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3439
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3440
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3443
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3444
		{
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3445
		{
			return helpWith(sqllex, "CREATE")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3452
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3455
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3458
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3459
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3462
		{
			return unimplemented(sqllex, "create access method")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3463
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3464
		{
			return unimplemented(sqllex, "create cast")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3465
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3466
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3467
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3468
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3469
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3470
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3471
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3472
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3473
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3474
		{
			return unimplemented(sqllex, "create publication")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3475
		{
			return unimplemented(sqllex, "create rule")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3476
		{
			return unimplemented(sqllex, "create server")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3477
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3478
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3479
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3480
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3483
		{
		}
	case 405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3484
		{
		}
	case 406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3487
		{
		}
	case 407:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3488
		{
		}
	case 408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3491
		{
		}
	case 409:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3492
		{
		}
	case 410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3495
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3496
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3497
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3498
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3499
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3500
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3501
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3502
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3503
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3504
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3505
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3506
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3507
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3508
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3509
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3510
		{
			return unimplemented(sqllex, "drop server")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3511
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3512
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3513
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3516
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3517
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3518
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3519
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3520
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3522
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3523
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3524
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3525
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3535
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3543
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3547
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3551
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3557
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3561
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3570
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3577
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3583
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3589
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3593
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3604
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3616
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3631
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3639
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3649
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3653
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3659
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3663
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3670
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 466:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3674
		{

			sqlVAL.union.val = nil
		}
	case 467:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3691
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3702
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 469:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3706
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 470:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3710
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3717
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3721
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3730
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3734
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3747
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3757
		{
			return helpWith(sqllex, "DELETE")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3760
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3761
		{
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3769
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3772
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3773
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3774
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3775
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3776
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3785
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3786
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3787
		{
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3788
		{
			return helpWith(sqllex, "DROP")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3791
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3792
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3793
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3794
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3795
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3796
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3797
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3805
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3813
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3822
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3830
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3838
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3842
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3845
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3857
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3860
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3868
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3877
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3885
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3893
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3901
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3908
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3915
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3923
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3930
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3934
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3940
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3944
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 529:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3953
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3968
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3976
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3980
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3983
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3987
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3992
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4005
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4010
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4012
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4017
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4021
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4044
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4051
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4053
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4061
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4069
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4077
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4085
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4096
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4104
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4107
		{
			return helpWith(sqllex, "DELETE")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4109
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4110
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4111
		{
			return helpWith(sqllex, "INSERT")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4114
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4116
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4119
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4124
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4125
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4126
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4131
		{
			return helpWith(sqllex, "DELETE")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4132
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4133
		{
			return helpWith(sqllex, "INSERT")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4135
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4139
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4140
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4144
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4148
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 597:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4158
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4166
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4174
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4178
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 601:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4182
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4192
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4199
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4207
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4211
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 606:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4215
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4225
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4229
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4233
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4237
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4240
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4263
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4275
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4279
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4289
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4293
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4304
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4307
		{
			return helpWith(sqllex, "GRANT")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4330
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4334
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4338
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4342
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4346
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4356
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4367
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4370
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4375
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4379
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4389
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4393
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4407
		{
			return helpWith(sqllex, "RESET")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4408
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4416
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4420
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4423
		{
			return helpWith(sqllex, "RESET")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4431
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4434
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4445
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4448
		{
			return helpWith(sqllex, "USE")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4452
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4453
		{
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4454
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4458
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4459
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4460
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4461
		{
			return helpWith(sqllex, "USE")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4477
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4492
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4495
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4513
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4521
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4525
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 668:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4529
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4535
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4539
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4545
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4553
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4557
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4561
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4572
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4575
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4585
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4601
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4604
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4606
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4609
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4612
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4626
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4631
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4648
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4651
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4653
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4656
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4660
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4679
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4683
		{
			return unimplemented(sqllex, "set from current")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4687
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4692
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4701
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4706
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4718
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4723
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4730
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4734
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4740
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4744
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4751
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4772
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4776
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4782
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4790
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4794
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4798
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4804
		{
			sqlVAL.union.val = tree.Low
		}
	case 720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4808
		{
			sqlVAL.union.val = tree.Normal
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4812
		{
			sqlVAL.union.val = tree.High
		}
	case 722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4823
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4827
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4831
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4836
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4840
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4855
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4856
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4857
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4858
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4859
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4860
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4861
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4862
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4863
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4865
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4866
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4867
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4868
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4869
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4871
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4872
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4873
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4875
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4877
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4878
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4879
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4880
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4881
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4882
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4883
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4884
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4885
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4887
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4889
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4890
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4891
		{
			return helpWith(sqllex, "SHOW")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4894
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4899
		{
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4900
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4903
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4907
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4912
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4917
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4922
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4927
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4937
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4938
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4939
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4950
		{
			sqlVAL.str = "client_encoding"
		}
	case 818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4954
		{
			sqlVAL.str = "timezone"
		}
	case 819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4955
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4973
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4977
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4988
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4996
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5004
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5010
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5018
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5027
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5036
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5045
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5053
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5063
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5067
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5070
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5072
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5075
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5077
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5081
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5084
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5092
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5095
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5103
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5115
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5118
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5126
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5129
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5135
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.nameList(),
			}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5140
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5145
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5152
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5156
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5166
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5175
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5182
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5185
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5198
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5206
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5214
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5217
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5219
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5223
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5227
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5230
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5232
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5236
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5239
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5247
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5250
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5252
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5255
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5263
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5266
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5268
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5271
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5275
		{
			sqlVAL.union.val = true
		}
	case 878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5277
		{
			sqlVAL.union.val = true
		}
	case 879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5279
		{
			sqlVAL.union.val = false
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5296
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5300
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5304
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5307
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5308
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5309
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5311
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5315
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5319
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5323
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5326
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5328
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5336
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5344
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5352
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5353
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5363
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5369
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5371
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5377
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5379
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5385
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5389
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5393
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 906:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5399
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5403
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5407
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 909:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5418
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5421
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5423
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5426
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5428
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5432
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5435
		{
			sqlVAL.union.val = true
		}
	case 916:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5436
		{
			sqlVAL.union.val = false
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5444
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5447
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5449
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5452
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5460
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5470
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5480
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5483
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5490
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5493
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5498
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5501
		{
			sqlVAL.union.val = true
		}
	case 930:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5502
		{
			sqlVAL.union.val = false
		}
	case 931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5509
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5513
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5516
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5523
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5527
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5530
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5537
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5541
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5545
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5552
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 941:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5556
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5567
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5570
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5578
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5583
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5588
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5592
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5602
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5606
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5611
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5616
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5621
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5626
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5629
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5639
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5643
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5645
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5649
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5657
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5660
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5668
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5671
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5681
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5685
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5689
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5697
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5705
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5712
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5718
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5720
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5723
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5725
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5728
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5732
		{
		}
	case 976:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5741
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5749
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5755
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5764
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5769
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5773
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5776
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5785
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5789
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5805
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5811
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5817
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5830
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5835
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5839
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5845
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5852
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5859
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 995:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5864
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5984
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5992
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6031
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6035
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6040
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6044
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6052
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6061
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6065
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6069
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6076
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6080
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6093
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6094
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6095
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6105
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6106
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6107
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6117
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6126
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6135
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6141
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6145
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6148
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6153
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6157
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6172
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6180
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6182
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6188
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6196
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6202
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6209
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6216
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6223
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6234
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6243
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6251
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6290
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6306
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6324
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6328
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6335
		{

			sqlVAL.union.val = nil
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6341
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6347
		{
			sqlVAL.str = ""
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6351
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6357
		{
			sqlVAL.union.val = nil
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6361
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6366
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6370
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6374
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6378
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6384
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6388
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6394
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6398
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6404
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6418
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6433
		{
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6434
		{
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6435
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6453
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6454
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6455
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6459
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6460
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6462
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6463
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6468
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6474
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6478
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6484
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6490
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6503
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6512
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6516
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6522
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6527
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6528
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6529
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6530
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6531
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6532
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6533
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6534
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6535
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6540
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6549
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6556
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6561
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6566
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6572
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.str = ""
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6586
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6592
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6600
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6606
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6612
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6618
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6628
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6634
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6640
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6647
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6654
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6660
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6664
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6670
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6680
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6684
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6690
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6704
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6715
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6719
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6725
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6729
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6733
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6737
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6741
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6745
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6749
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6767
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6771
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6775
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6779
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6785
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6789
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6796
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6804
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6808
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6818
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6822
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6826
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6831
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6837
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6843
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6847
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6853
		{

			sqlVAL.union.val = true
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6858
		{
			sqlVAL.union.val = false
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6863
		{
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6867
		{
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6870
		{
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6874
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6887
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6902
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6915
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6927
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6932
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6938
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6945
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6958
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6970
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6981
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6988
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6992
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6998
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7008
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7019
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7023
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7030
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7036
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7047
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7051
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7057
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7063
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7067
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7073
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7083
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7088
		{
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7089
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7090
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7091
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7092
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7093
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7111
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7115
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7121
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7127
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7133
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7137
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7157
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7161
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7165
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7169
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7178
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7182
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7186
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7190
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7194
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7200
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7206
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7214
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7218
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7222
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7226
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7230
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7249
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7258
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7266
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7270
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7274
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7277
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7280
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7281
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7282
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7292
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7294
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7296
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7298
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7300
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7301
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7303
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7304
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7306
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7308
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7316
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7319
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7323
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7327
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7337
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7341
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7344
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7355
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7359
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7363
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.expr(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7367
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.expr(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7371
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7375
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7378
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7382
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.str = ""
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7392
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7396
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7400
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7408
		{
			sqlVAL.union.val = true
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7412
		{

			sqlVAL.union.val = true
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7417
		{
			sqlVAL.union.val = false
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7427
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7441
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7453
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7465
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7475
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7485
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7489
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7493
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7497
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7501
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7505
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7509
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7513
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7517
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7521
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7533
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7537
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7541
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7545
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7549
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7553
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7557
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7566
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7570
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7580
		{
			sqlVAL.union.val = nil
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7586
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7590
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7595
		{
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7596
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7605
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7613
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7621
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7623
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7625
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7627
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7629
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7631
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7635
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7639
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7645
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7669
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7687
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7706
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7723
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7740
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7744
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7759
		{
			sqlVAL.union.val = false
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7765
		{
			sqlVAL.union.val = true
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7769
		{
			sqlVAL.union.val = false
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7775
		{
			sqlVAL.union.val = true
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7779
		{
			sqlVAL.union.val = false
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7785
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7789
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7798
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7804
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7810
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7818
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7842
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7843
		{
			sqlVAL.str = ""
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7846
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7847
		{
			sqlVAL.str = ""
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7851
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7855
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7859
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7865
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7877
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7883
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7891
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7897
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7905
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7913
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7923
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7929
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7936
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7942
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7955
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7967
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7982
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8000
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8006
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8016
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8022
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8053
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8062
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8074
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8080
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8088
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8097
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8108
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8114
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8126
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8132
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8146
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8152
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8160
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8164
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8176
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8185
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8194
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8203
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8211
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8215
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.nameList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.union.val = true
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8230
		{
			sqlVAL.union.val = false
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8236
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.nameList(),
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8244
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.nameList(),
				GrantOptionFor: true,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8255
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8259
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8263
		{
			sqlVAL.union.val = tree.Types
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8267
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8271
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8275
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8281
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8284
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8290
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8294
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8299
		{
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8300
		{
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8303
		{
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8304
		{
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8312
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8315
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8325
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8333
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8335
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8339
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8342
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8355
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8363
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8365
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8371
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8384
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8392
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8394
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8400
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8408
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8411
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8415
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8416
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8417
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8433
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8436
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8441
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8454
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8456
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8459
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8468
		{
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8469
		{
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8470
		{
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8480
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8484
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8487
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8490
		{
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8491
		{
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8495
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8499
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8505
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8509
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8515
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8519
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8532
		{
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8534
		{
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8538
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8543
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8547
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8551
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8561
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8567
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8573
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8577
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8597
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8612
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8627
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8632
		{
			sqlVAL.str = ""
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8637
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8644
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8650
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8655
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8666
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8672
		{

		}
	case 1464:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8683
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8687
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8696
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8702
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.str = ""
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8712
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8716
		{
			sqlVAL.str = ""
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8726
		{
			sqlVAL.str = ""
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8732
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8736
		{
			sqlVAL.str = ""
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8742
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8750
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8755
		{
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8756
		{
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8771
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8778
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8785
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8796
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8803
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8807
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8816
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8821
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8827
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8831
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8835
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8841
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8845
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8865
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8869
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8876
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8884
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8892
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8896
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8901
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8934
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8937
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8940
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8946
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8963
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8966
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8970
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8981
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.nameList(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8987
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8996
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.nameList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9002
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9043
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9049
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9053
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9068
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9072
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9076
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9080
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9084
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9088
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9096
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9101
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9105
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9120
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9129
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9130
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9131
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9135
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9136
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9139
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9141
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9146
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9181
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9182
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9183
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9205
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9218
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9232
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9244
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9248
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9257
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9266
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9281
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9288
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9300
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9304
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9309
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9315
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9325
		{
			sqlVAL.union.val = true
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9329
		{
			sqlVAL.union.val = false
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9345
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9357
		{
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9358
		{
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9362
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9366
		{
			sqlVAL.union.val = nil
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9371
		{
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9372
		{
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9376
		{
			sqlVAL.union.val = true
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9380
		{
			sqlVAL.union.val = false
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9384
		{
			sqlVAL.union.val = false
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.union.val = true
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9396
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9401
		{
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9402
		{
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9405
		{
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9406
		{
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9410
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9414
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9420
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9426
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9430
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9437
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9441
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9447
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9468
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9473
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9485
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9489
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9493
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9499
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9508
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9519
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9520
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9524
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9528
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9532
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9546
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9550
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9558
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9565
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9587
		{
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9588
		{
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9591
		{
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9592
		{
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9609
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9613
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9618
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9619
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9626
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9627
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9628
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9632
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9636
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9655
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9658
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9660
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9672
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9675
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9677
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9683
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9687
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9693
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9697
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9702
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9707
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9713
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9723
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9735
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9754
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9762
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9794
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9804
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9822
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9831
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9835
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9839
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9850
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9874
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9880
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9895
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9901
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9903
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9907
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9913
		{
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9915
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = nil
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9919
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9920
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9928
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.union.val = true
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9938
		{
			sqlVAL.union.val = false
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9958
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9978
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10001
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10014
		{
			sqlVAL.str = tree.AstFull
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10018
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10022
		{
			sqlVAL.str = tree.AstRight
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10026
		{
			sqlVAL.str = tree.AstInner
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10032
		{
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10033
		{
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10057
		{
			sqlVAL.str = tree.AstHash
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10061
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10065
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10069
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.str = ""
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10086
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10090
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10095
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10097
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10098
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10102
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10107
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10121
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10125
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10131
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10137
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10147
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10157
		{
			sqlVAL.union.val = true
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10161
		{
			sqlVAL.union.val = false
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10167
		{
			sqlVAL.union.val = true
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10171
		{
			sqlVAL.union.val = false
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10184
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10196
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10209
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10217
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10218
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10235
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10236
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10238
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10246
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10259
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10266
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10275
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10315
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10320
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10327
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10328
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10331
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10332
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10333
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10334
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10335
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10336
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10337
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10338
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10340
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10341
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10342
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10344
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10346
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10347
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10348
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10351
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10352
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10354
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10356
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10358
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = types.Geography
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10366
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10377
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10385
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10411
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10419
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = nil
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10442
		{
			sqlVAL.union.val = types.Int2
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10446
		{
			sqlVAL.union.val = types.Int
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10450
		{
			sqlVAL.union.val = types.Float4
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10454
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10458
		{
			sqlVAL.union.val = types.Float
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10462
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10470
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10478
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10486
		{
			sqlVAL.union.val = types.Bool
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10492
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10505
		{
			sqlVAL.union.val = types.Float
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10511
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10517
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10525
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10529
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10533
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10539
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10557
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10561
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10565
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10569
		{
			sqlVAL.union.val = types.String
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10578
		{
			sqlVAL.union.val = true
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10579
		{
			sqlVAL.union.val = false
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10584
		{
			sqlVAL.union.val = types.Date
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10588
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10596
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10610
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10619
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10627
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10640
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10644
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = true
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10655
		{
			sqlVAL.union.val = false
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10656
		{
			sqlVAL.union.val = false
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10660
		{
			sqlVAL.union.val = types.Interval
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10664
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10668
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10687
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10695
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10703
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10711
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10719
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10725
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10734
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10743
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10752
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10758
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10767
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10773
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.union.val = nil
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10789
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10797
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10834
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10846
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10857
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10862
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10866
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10870
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10874
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10878
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10882
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10886
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10890
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10894
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10898
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10902
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10910
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10914
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10918
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10922
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10926
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10930
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10934
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10938
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10942
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10946
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10950
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10954
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10958
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10962
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10966
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10970
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10974
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10978
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10982
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10986
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10990
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10994
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10998
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11002
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11006
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11014
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11024
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11028
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11032
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11036
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11040
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11044
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11048
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11052
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11056
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11060
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11064
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11068
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11072
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11076
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11084
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11088
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11092
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11096
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11100
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11108
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11112
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11127
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11129
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11141
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11149
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11185
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11193
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11210
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11215
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11227
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11231
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11235
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11239
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11243
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11247
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11251
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11255
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11259
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11263
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11267
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11271
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11275
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11279
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11283
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11287
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11295
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11299
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11303
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11307
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11311
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11315
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11319
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11323
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11331
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11341
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11345
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11349
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11353
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11367
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11375
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11411
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11415
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11419
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11423
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11427
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11432
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11434
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11438
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11446
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11450
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11454
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11458
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11467
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11474
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11478
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11482
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11488
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11493
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11497
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11501
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11505
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11509
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11512
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11516
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11520
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11523
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11524
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11526
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11532
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11536
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11539
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11548
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11601
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11614
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11626
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11635
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11636
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11641
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11645
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11649
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11655
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11659
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11663
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11667
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11671
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11675
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11681
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11685
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11689
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11693
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11697
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11701
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11705
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11709
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11713
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11717
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11721
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11725
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11729
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11736
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11739
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11741
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11744
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11746
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11750
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11753
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11755
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11759
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11762
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11764
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11768
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11771
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11773
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11777
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11780
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11782
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11785
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11787
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11790
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11792
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11795
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11797
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11800
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11802
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11805
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11807
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11811
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11814
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11815
		{
			return unimplemented(sqllex, "treat")
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11817
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11821
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11825
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11829
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11833
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11836
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11838
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11841
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11847
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11851
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11857
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11861
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11868
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11872
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11878
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11882
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11888
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11896
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11900
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11904
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11911
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11931
		{
			sqlVAL.str = ""
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11937
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11941
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11947
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11955
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11963
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11971
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11977
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11990
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12018
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12022
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12026
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12030
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12037
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12046
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12050
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12054
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12058
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12063
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12076
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12080
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12087
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12099
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12103
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12107
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12123
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12124
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12125
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12126
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12127
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12128
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12129
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12130
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12131
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12132
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12133
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12134
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12136
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12137
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12138
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12139
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12140
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12141
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12142
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12143
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12144
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12145
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12146
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12147
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12148
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12149
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12150
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12151
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12152
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12153
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12154
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12155
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12156
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12157
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12158
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12163
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12179
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12186
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12187
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12188
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12189
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12212
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12216
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12222
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12226
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12230
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12241
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12245
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12251
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12255
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12262
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12268
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12272
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12278
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12282
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12288
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12292
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12298
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12302
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12308
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12312
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12335
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12339
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12343
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12349
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12356
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12360
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12377
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12381
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12385
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12389
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12393
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12399
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12405
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12411
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12415
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12419
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12425
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12437
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12444
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12448
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12454
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12460
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12464
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12471
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12477
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12481
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12488
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12494
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12498
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12503
		{
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12504
		{
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12508
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12512
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12518
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12527
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12531
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12535
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12543
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12547
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12553
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12557
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12576
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12584
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12607
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12616
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12620
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12624
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12628
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12634
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12638
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12653
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12657
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12669
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12673
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12682
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12693
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12702
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12710
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12727
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12812
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12820
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12824
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12830
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12834
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12842
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12869
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12876
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12880
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12884
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12898
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12902
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12906
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12919
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12928
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12946
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12959
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12966
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12991
		{
			sqlVAL.str = ""
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12997
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13001
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
