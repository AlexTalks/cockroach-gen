// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:65

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistenceType() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) partitionedBackup() tree.PartitionedBackup {
	return u.val.(tree.PartitionedBackup)
}
func (u *sqlSymUnion) partitionedBackups() []tree.PartitionedBackup {
	return u.val.([]tree.PartitionedBackup)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}

//line sql-gen.y:620
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BLOB = lex.BLOB
const BOOL = lex.BOOL
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BY = lex.BY
const BYTEA = lex.BYTEA
const BYTES = lex.BYTES
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEALLOCATE = lex.DEALLOCATE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const END = lex.END
const ENUM = lex.ENUM
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INT2VECTOR = lex.INT2VECTOR
const INT2 = lex.INT2
const INT4 = lex.INT4
const INT8 = lex.INT8
const INT64 = lex.INT64
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEXT = lex.NEXT
const NO = lex.NO
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIAL = lex.SERIAL
const SERIAL2 = lex.SERIAL2
const SERIAL4 = lex.SERIAL4
const SERIAL8 = lex.SERIAL8
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BIT",
	"BUCKET_COUNT",
	"BLOB",
	"BOOL",
	"BOOLEAN",
	"BOTH",
	"BY",
	"BYTEA",
	"BYTES",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEALLOCATE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"END",
	"ENUM",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXISTS",
	"EXECUTE",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INT2VECTOR",
	"INT2",
	"INT4",
	"INT8",
	"INT64",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEXT",
	"NO",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"SAVEPOINT",
	"SCATTER",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIAL",
	"SERIAL2",
	"SERIAL4",
	"SERIAL8",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:10119

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 24,
	-2, 1095,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 68,
	183, 917,
	200, 917,
	215, 252,
	298, 252,
	307, 744,
	334, 252,
	343, 744,
	382, 744,
	406, 252,
	430, 744,
	-2, 0,
	-1, 74,
	215, 256,
	-2, 0,
	-1, 75,
	110, 1095,
	189, 1095,
	416, 1095,
	417, 1095,
	-2, 0,
	-1, 87,
	123, 1069,
	139, 1069,
	152, 1069,
	197, 1069,
	227, 1069,
	262, 1069,
	272, 1069,
	411, 1069,
	-2, 1040,
	-1, 118,
	129, 662,
	214, 662,
	301, 642,
	352, 642,
	399, 662,
	-2, 0,
	-1, 119,
	4, 1097,
	21, 1097,
	22, 1097,
	23, 1097,
	24, 1097,
	25, 1097,
	27, 1097,
	33, 1097,
	38, 1097,
	39, 1097,
	40, 1097,
	41, 1097,
	42, 1097,
	43, 1097,
	44, 1097,
	45, 1097,
	46, 1097,
	47, 1097,
	48, 1097,
	49, 1097,
	50, 1097,
	52, 1097,
	53, 1097,
	54, 1097,
	55, 1097,
	56, 1097,
	57, 1097,
	60, 1097,
	61, 1097,
	62, 1097,
	63, 1097,
	65, 1097,
	66, 1097,
	70, 1097,
	71, 1097,
	72, 1097,
	73, 1097,
	74, 1097,
	75, 1097,
	77, 1097,
	78, 1097,
	79, 1097,
	80, 1097,
	82, 1097,
	84, 1097,
	85, 1097,
	86, 1097,
	89, 1097,
	90, 1097,
	98, 1097,
	99, 1097,
	100, 1097,
	101, 1097,
	102, 1097,
	103, 1097,
	104, 1097,
	105, 1097,
	107, 1097,
	109, 1097,
	110, 1097,
	112, 1097,
	115, 1097,
	116, 1097,
	117, 1097,
	119, 1097,
	121, 1097,
	122, 1097,
	124, 1097,
	125, 1097,
	126, 1097,
	127, 1097,
	128, 1097,
	129, 1097,
	130, 1097,
	131, 1097,
	132, 1097,
	133, 1097,
	134, 1097,
	135, 1097,
	136, 1097,
	138, 1097,
	144, 1097,
	145, 1097,
	146, 1097,
	147, 1097,
	148, 1097,
	149, 1097,
	151, 1097,
	153, 1097,
	157, 1097,
	158, 1097,
	160, 1097,
	161, 1097,
	163, 1097,
	164, 1097,
	166, 1097,
	167, 1097,
	168, 1097,
	169, 1097,
	170, 1097,
	171, 1097,
	172, 1097,
	173, 1097,
	175, 1097,
	176, 1097,
	178, 1097,
	179, 1097,
	180, 1097,
	183, 1097,
	184, 1097,
	185, 1097,
	186, 1097,
	189, 1097,
	190, 1097,
	191, 1097,
	192, 1097,
	193, 1097,
	194, 1097,
	195, 1097,
	196, 1097,
	198, 1097,
	200, 1097,
	202, 1097,
	204, 1097,
	205, 1097,
	206, 1097,
	208, 1097,
	209, 1097,
	212, 1097,
	213, 1097,
	214, 1097,
	215, 1097,
	216, 1097,
	218, 1097,
	219, 1097,
	221, 1097,
	222, 1097,
	224, 1097,
	225, 1097,
	228, 1097,
	229, 1097,
	232, 1097,
	233, 1097,
	234, 1097,
	236, 1097,
	237, 1097,
	238, 1097,
	239, 1097,
	240, 1097,
	241, 1097,
	242, 1097,
	243, 1097,
	244, 1097,
	245, 1097,
	247, 1097,
	248, 1097,
	249, 1097,
	251, 1097,
	253, 1097,
	255, 1097,
	257, 1097,
	258, 1097,
	259, 1097,
	260, 1097,
	261, 1097,
	263, 1097,
	264, 1097,
	265, 1097,
	267, 1097,
	268, 1097,
	269, 1097,
	270, 1097,
	273, 1097,
	274, 1097,
	275, 1097,
	277, 1097,
	279, 1097,
	280, 1097,
	281, 1097,
	282, 1097,
	283, 1097,
	284, 1097,
	285, 1097,
	286, 1097,
	287, 1097,
	288, 1097,
	290, 1097,
	291, 1097,
	292, 1097,
	293, 1097,
	294, 1097,
	295, 1097,
	297, 1097,
	299, 1097,
	300, 1097,
	301, 1097,
	302, 1097,
	303, 1097,
	304, 1097,
	305, 1097,
	306, 1097,
	307, 1097,
	308, 1097,
	310, 1097,
	311, 1097,
	312, 1097,
	313, 1097,
	314, 1097,
	316, 1097,
	317, 1097,
	318, 1097,
	319, 1097,
	320, 1097,
	321, 1097,
	322, 1097,
	323, 1097,
	325, 1097,
	327, 1097,
	328, 1097,
	329, 1097,
	330, 1097,
	331, 1097,
	332, 1097,
	334, 1097,
	335, 1097,
	336, 1097,
	337, 1097,
	338, 1097,
	339, 1097,
	340, 1097,
	341, 1097,
	343, 1097,
	344, 1097,
	345, 1097,
	346, 1097,
	347, 1097,
	348, 1097,
	349, 1097,
	350, 1097,
	351, 1097,
	352, 1097,
	354, 1097,
	355, 1097,
	356, 1097,
	357, 1097,
	358, 1097,
	360, 1097,
	361, 1097,
	362, 1097,
	363, 1097,
	364, 1097,
	366, 1097,
	367, 1097,
	368, 1097,
	369, 1097,
	370, 1097,
	371, 1097,
	372, 1097,
	373, 1097,
	374, 1097,
	375, 1097,
	376, 1097,
	377, 1097,
	379, 1097,
	380, 1097,
	381, 1097,
	383, 1097,
	384, 1097,
	385, 1097,
	386, 1097,
	387, 1097,
	388, 1097,
	389, 1097,
	391, 1097,
	392, 1097,
	393, 1097,
	394, 1097,
	395, 1097,
	397, 1097,
	399, 1097,
	400, 1097,
	401, 1097,
	402, 1097,
	403, 1097,
	405, 1097,
	406, 1097,
	407, 1097,
	409, 1097,
	410, 1097,
	413, 1097,
	414, 1097,
	415, 1097,
	416, 1097,
	417, 1097,
	418, 1097,
	420, 1097,
	422, 1097,
	423, 1097,
	424, 1097,
	425, 1097,
	426, 1097,
	427, 1097,
	428, 1097,
	430, 1097,
	431, 1097,
	432, 1097,
	437, 1097,
	438, 1097,
	439, 1097,
	440, 1097,
	441, 1097,
	442, 1097,
	-2, 0,
	-1, 120,
	1, 970,
	204, 970,
	297, 970,
	305, 970,
	445, 970,
	468, 970,
	-2, 0,
	-1, 122,
	1, 970,
	468, 970,
	-2, 0,
	-1, 123,
	1, 970,
	468, 970,
	-2, 0,
	-1, 124,
	1, 974,
	468, 974,
	-2, 0,
	-1, 149,
	123, 1068,
	139, 1068,
	152, 1068,
	197, 1068,
	227, 1068,
	262, 1068,
	272, 1068,
	411, 1068,
	-2, 1043,
	-1, 182,
	4, 1104,
	5, 1104,
	6, 1104,
	7, 1104,
	8, 1104,
	9, 1104,
	10, 1104,
	21, 1104,
	22, 1104,
	23, 1104,
	24, 1104,
	25, 1104,
	27, 1104,
	33, 1104,
	34, 1104,
	38, 1104,
	39, 1104,
	40, 1104,
	41, 1104,
	42, 1104,
	43, 1104,
	44, 1104,
	45, 1104,
	46, 1104,
	47, 1104,
	48, 1104,
	49, 1104,
	50, 1104,
	52, 1104,
	53, 1104,
	54, 1104,
	55, 1104,
	56, 1104,
	57, 1104,
	58, 1104,
	59, 1104,
	60, 1104,
	61, 1104,
	62, 1104,
	63, 1104,
	65, 1104,
	66, 1104,
	68, 1104,
	70, 1104,
	71, 1104,
	72, 1104,
	73, 1104,
	74, 1104,
	75, 1104,
	77, 1104,
	78, 1104,
	79, 1104,
	80, 1104,
	82, 1104,
	84, 1104,
	85, 1104,
	86, 1104,
	88, 1104,
	89, 1104,
	90, 1104,
	91, 1104,
	92, 1104,
	93, 1104,
	94, 1104,
	95, 1104,
	96, 1104,
	97, 1104,
	98, 1104,
	99, 1104,
	100, 1104,
	101, 1104,
	102, 1104,
	103, 1104,
	104, 1104,
	105, 1104,
	106, 1104,
	107, 1104,
	109, 1104,
	110, 1104,
	112, 1104,
	115, 1104,
	116, 1104,
	117, 1104,
	119, 1104,
	121, 1104,
	122, 1104,
	124, 1104,
	125, 1104,
	126, 1104,
	127, 1104,
	128, 1104,
	129, 1104,
	130, 1104,
	131, 1104,
	132, 1104,
	133, 1104,
	134, 1104,
	135, 1104,
	136, 1104,
	137, 1104,
	138, 1104,
	144, 1104,
	145, 1104,
	146, 1104,
	147, 1104,
	148, 1104,
	149, 1104,
	151, 1104,
	153, 1104,
	156, 1104,
	157, 1104,
	158, 1104,
	160, 1104,
	161, 1104,
	163, 1104,
	164, 1104,
	166, 1104,
	167, 1104,
	168, 1104,
	169, 1104,
	170, 1104,
	171, 1104,
	172, 1104,
	173, 1104,
	174, 1104,
	175, 1104,
	176, 1104,
	178, 1104,
	179, 1104,
	180, 1104,
	183, 1104,
	184, 1104,
	185, 1104,
	186, 1104,
	188, 1104,
	189, 1104,
	190, 1104,
	191, 1104,
	192, 1104,
	193, 1104,
	194, 1104,
	195, 1104,
	196, 1104,
	198, 1104,
	200, 1104,
	201, 1104,
	202, 1104,
	203, 1104,
	204, 1104,
	205, 1104,
	206, 1104,
	207, 1104,
	208, 1104,
	209, 1104,
	212, 1104,
	213, 1104,
	214, 1104,
	215, 1104,
	216, 1104,
	218, 1104,
	219, 1104,
	221, 1104,
	222, 1104,
	223, 1104,
	224, 1104,
	225, 1104,
	226, 1104,
	228, 1104,
	229, 1104,
	230, 1104,
	231, 1104,
	232, 1104,
	233, 1104,
	234, 1104,
	236, 1104,
	237, 1104,
	238, 1104,
	239, 1104,
	240, 1104,
	241, 1104,
	242, 1104,
	243, 1104,
	244, 1104,
	245, 1104,
	246, 1104,
	247, 1104,
	248, 1104,
	249, 1104,
	250, 1104,
	251, 1104,
	252, 1104,
	253, 1104,
	254, 1104,
	255, 1104,
	256, 1104,
	257, 1104,
	258, 1104,
	259, 1104,
	260, 1104,
	261, 1104,
	263, 1104,
	264, 1104,
	265, 1104,
	268, 1104,
	269, 1104,
	270, 1104,
	273, 1104,
	274, 1104,
	275, 1104,
	276, 1104,
	277, 1104,
	278, 1104,
	279, 1104,
	280, 1104,
	281, 1104,
	282, 1104,
	283, 1104,
	284, 1104,
	285, 1104,
	286, 1104,
	287, 1104,
	288, 1104,
	290, 1104,
	291, 1104,
	292, 1104,
	293, 1104,
	294, 1104,
	295, 1104,
	297, 1104,
	299, 1104,
	300, 1104,
	301, 1104,
	302, 1104,
	303, 1104,
	304, 1104,
	305, 1104,
	306, 1104,
	307, 1104,
	308, 1104,
	310, 1104,
	311, 1104,
	312, 1104,
	313, 1104,
	314, 1104,
	316, 1104,
	317, 1104,
	318, 1104,
	319, 1104,
	320, 1104,
	321, 1104,
	322, 1104,
	323, 1104,
	325, 1104,
	326, 1104,
	327, 1104,
	328, 1104,
	329, 1104,
	330, 1104,
	331, 1104,
	332, 1104,
	334, 1104,
	335, 1104,
	336, 1104,
	337, 1104,
	338, 1104,
	339, 1104,
	340, 1104,
	341, 1104,
	343, 1104,
	344, 1104,
	345, 1104,
	346, 1104,
	347, 1104,
	348, 1104,
	349, 1104,
	350, 1104,
	351, 1104,
	352, 1104,
	353, 1104,
	354, 1104,
	355, 1104,
	356, 1104,
	357, 1104,
	358, 1104,
	359, 1104,
	360, 1104,
	361, 1104,
	362, 1104,
	363, 1104,
	364, 1104,
	366, 1104,
	367, 1104,
	368, 1104,
	369, 1104,
	370, 1104,
	371, 1104,
	372, 1104,
	373, 1104,
	374, 1104,
	375, 1104,
	376, 1104,
	377, 1104,
	379, 1104,
	380, 1104,
	381, 1104,
	383, 1104,
	384, 1104,
	385, 1104,
	386, 1104,
	387, 1104,
	388, 1104,
	389, 1104,
	391, 1104,
	392, 1104,
	393, 1104,
	394, 1104,
	395, 1104,
	397, 1104,
	399, 1104,
	400, 1104,
	401, 1104,
	402, 1104,
	403, 1104,
	404, 1104,
	405, 1104,
	406, 1104,
	407, 1104,
	409, 1104,
	410, 1104,
	412, 1104,
	413, 1104,
	414, 1104,
	415, 1104,
	416, 1104,
	417, 1104,
	418, 1104,
	419, 1104,
	420, 1104,
	422, 1104,
	423, 1104,
	424, 1104,
	425, 1104,
	426, 1104,
	427, 1104,
	428, 1104,
	430, 1104,
	431, 1104,
	432, 1104,
	437, 1104,
	438, 1104,
	439, 1104,
	440, 1104,
	441, 1104,
	442, 1104,
	443, 1104,
	449, 1104,
	456, 1104,
	457, 1104,
	458, 1104,
	465, 1104,
	469, 1104,
	-2, 0,
	-1, 562,
	155, 1796,
	396, 1796,
	448, 1796,
	467, 1796,
	-2, 0,
	-1, 563,
	155, 1875,
	396, 1875,
	448, 1875,
	467, 1875,
	-2, 0,
	-1, 564,
	155, 1785,
	396, 1785,
	448, 1785,
	467, 1785,
	-2, 0,
	-1, 566,
	155, 1968,
	396, 1968,
	448, 1968,
	467, 1968,
	-2, 0,
	-1, 568,
	155, 1998,
	396, 1998,
	448, 1998,
	467, 1998,
	-2, 0,
	-1, 575,
	155, 1886,
	396, 1886,
	448, 1886,
	467, 1886,
	-2, 509,
	-1, 593,
	467, 1742,
	470, 1742,
	-2, 713,
	-1, 594,
	467, 1744,
	470, 1744,
	-2, 714,
	-1, 595,
	467, 1743,
	470, 1743,
	-2, 715,
	-1, 596,
	470, 1688,
	-2, 716,
	-1, 639,
	430, 899,
	-2, 745,
	-1, 746,
	301, 643,
	352, 643,
	-2, 0,
	-1, 747,
	301, 642,
	352, 642,
	-2, 590,
	-1, 751,
	1, 672,
	464, 672,
	466, 672,
	468, 672,
	-2, 0,
	-1, 752,
	1, 712,
	152, 712,
	464, 712,
	466, 712,
	468, 712,
	-2, 0,
	-1, 760,
	1, 646,
	464, 646,
	466, 646,
	468, 646,
	-2, 0,
	-1, 763,
	1, 672,
	464, 672,
	466, 672,
	468, 672,
	-2, 0,
	-1, 764,
	1, 674,
	464, 674,
	466, 674,
	468, 674,
	-2, 0,
	-1, 765,
	1, 677,
	464, 677,
	466, 677,
	468, 677,
	-2, 0,
	-1, 769,
	1, 691,
	464, 691,
	466, 691,
	468, 691,
	-2, 0,
	-1, 770,
	1, 693,
	464, 693,
	466, 693,
	468, 693,
	-2, 0,
	-1, 814,
	139, 1106,
	152, 1106,
	227, 1106,
	262, 1106,
	-2, 1047,
	-1, 827,
	139, 1105,
	152, 1105,
	227, 1105,
	262, 1105,
	-2, 1044,
	-1, 851,
	467, 1741,
	-2, 517,
	-1, 879,
	465, 1733,
	-2, 1724,
	-1, 885,
	5, 1245,
	-2, 1775,
	-1, 886,
	5, 1246,
	-2, 1780,
	-1, 887,
	5, 1247,
	-2, 1779,
	-1, 888,
	5, 1248,
	-2, 1995,
	-1, 889,
	5, 1249,
	-2, 1888,
	-1, 890,
	5, 1250,
	-2, 1960,
	-1, 891,
	5, 1251,
	-2, 1962,
	-1, 892,
	5, 1252,
	-2, 1975,
	-1, 893,
	5, 1253,
	-2, 1963,
	-1, 894,
	5, 1254,
	-2, 1964,
	-1, 895,
	5, 1255,
	-2, 1774,
	-1, 896,
	5, 1256,
	-2, 2011,
	-1, 897,
	5, 1257,
	-2, 1849,
	-1, 898,
	5, 1258,
	-2, 1898,
	-1, 899,
	5, 1259,
	-2, 1900,
	-1, 900,
	5, 1260,
	-2, 1853,
	-1, 901,
	5, 1261,
	465, 1751,
	-2, 1742,
	-1, 907,
	465, 1752,
	-2, 1743,
	-1, 909,
	5, 1265,
	-2, 2044,
	-1, 910,
	5, 1266,
	-2, 2045,
	-1, 911,
	5, 1267,
	-2, 1852,
	-1, 912,
	5, 1268,
	-2, 2057,
	-1, 913,
	5, 1269,
	-2, 1854,
	-1, 914,
	5, 1270,
	-2, 1855,
	-1, 915,
	5, 1271,
	-2, 1856,
	-1, 916,
	5, 1272,
	-2, 2026,
	-1, 917,
	5, 1273,
	-2, 2055,
	-1, 918,
	5, 1274,
	-2, 1832,
	-1, 919,
	5, 1275,
	-2, 1833,
	-1, 920,
	5, 1289,
	-2, 2038,
	-1, 922,
	5, 1264,
	-2, 2034,
	-1, 923,
	5, 1264,
	-2, 2033,
	-1, 924,
	5, 1264,
	-2, 2050,
	-1, 925,
	5, 1281,
	-2, 2028,
	-1, 926,
	5, 1282,
	-2, 1776,
	-1, 927,
	5, 1292,
	-2, 2027,
	-1, 928,
	5, 1294,
	-2, 2066,
	-1, 930,
	5, 1305,
	-2, 1806,
	-1, 931,
	5, 1316,
	-2, 2059,
	-1, 932,
	5, 1308,
	-2, 2060,
	-1, 933,
	5, 1316,
	-2, 2061,
	-1, 934,
	5, 1312,
	-2, 2062,
	-1, 935,
	5, 1233,
	-2, 1862,
	-1, 936,
	5, 1234,
	-2, 1863,
	-1, 937,
	467, 1739,
	-2, 1723,
	-1, 938,
	465, 2087,
	-2, 1740,
	-1, 960,
	5, 1300,
	-2, 1986,
	-1, 978,
	5, 1299,
	-2, 2067,
	-1, 988,
	5, 1301,
	431, 1301,
	-2, 2029,
	-1, 989,
	5, 1302,
	431, 1302,
	-2, 2030,
	-1, 1026,
	465, 1751,
	-2, 1742,
	-1, 1054,
	155, 1998,
	396, 1998,
	448, 1998,
	467, 1998,
	-2, 0,
	-1, 1057,
	1, 495,
	468, 495,
	-2, 982,
	-1, 1177,
	316, 1720,
	458, 1720,
	-2, 1719,
	-1, 1200,
	469, 1720,
	-2, 1721,
	-1, 1238,
	307, 744,
	430, 744,
	-2, 251,
	-1, 1258,
	286, 1093,
	-2, 887,
	-1, 1267,
	266, 1746,
	-2, 0,
	-1, 1333,
	1, 370,
	464, 370,
	466, 370,
	468, 370,
	-2, 1067,
	-1, 1336,
	4, 2065,
	11, 2065,
	12, 2065,
	14, 2065,
	15, 2065,
	16, 2065,
	17, 2065,
	18, 2065,
	19, 2065,
	21, 2065,
	22, 2065,
	23, 2065,
	24, 2065,
	25, 2065,
	27, 2065,
	30, 2065,
	31, 2065,
	33, 2065,
	35, 2065,
	38, 2065,
	39, 2065,
	40, 2065,
	41, 2065,
	42, 2065,
	43, 2065,
	44, 2065,
	45, 2065,
	46, 2065,
	47, 2065,
	48, 2065,
	49, 2065,
	50, 2065,
	52, 2065,
	53, 2065,
	54, 2065,
	55, 2065,
	56, 2065,
	57, 2065,
	60, 2065,
	61, 2065,
	62, 2065,
	63, 2065,
	65, 2065,
	66, 2065,
	67, 2065,
	70, 2065,
	71, 2065,
	72, 2065,
	73, 2065,
	74, 2065,
	75, 2065,
	76, 2065,
	77, 2065,
	78, 2065,
	79, 2065,
	80, 2065,
	82, 2065,
	83, 2065,
	84, 2065,
	85, 2065,
	86, 2065,
	88, 2065,
	89, 2065,
	90, 2065,
	98, 2065,
	99, 2065,
	100, 2065,
	101, 2065,
	102, 2065,
	103, 2065,
	104, 2065,
	105, 2065,
	107, 2065,
	109, 2065,
	110, 2065,
	112, 2065,
	115, 2065,
	116, 2065,
	117, 2065,
	119, 2065,
	121, 2065,
	122, 2065,
	124, 2065,
	125, 2065,
	126, 2065,
	127, 2065,
	128, 2065,
	129, 2065,
	130, 2065,
	131, 2065,
	132, 2065,
	133, 2065,
	134, 2065,
	135, 2065,
	136, 2065,
	140, 2065,
	141, 2065,
	142, 2065,
	143, 2065,
	144, 2065,
	145, 2065,
	146, 2065,
	147, 2065,
	148, 2065,
	149, 2065,
	150, 2065,
	151, 2065,
	153, 2065,
	156, 2065,
	157, 2065,
	158, 2065,
	160, 2065,
	161, 2065,
	163, 2065,
	164, 2065,
	166, 2065,
	167, 2065,
	168, 2065,
	169, 2065,
	170, 2065,
	171, 2065,
	172, 2065,
	173, 2065,
	174, 2065,
	175, 2065,
	176, 2065,
	177, 2065,
	178, 2065,
	179, 2065,
	180, 2065,
	181, 2065,
	182, 2065,
	184, 2065,
	185, 2065,
	186, 2065,
	188, 2065,
	189, 2065,
	190, 2065,
	191, 2065,
	192, 2065,
	193, 2065,
	194, 2065,
	195, 2065,
	196, 2065,
	198, 2065,
	200, 2065,
	201, 2065,
	202, 2065,
	203, 2065,
	204, 2065,
	205, 2065,
	206, 2065,
	207, 2065,
	208, 2065,
	209, 2065,
	210, 2065,
	211, 2065,
	212, 2065,
	213, 2065,
	214, 2065,
	215, 2065,
	216, 2065,
	218, 2065,
	219, 2065,
	221, 2065,
	222, 2065,
	223, 2065,
	224, 2065,
	225, 2065,
	226, 2065,
	228, 2065,
	229, 2065,
	232, 2065,
	233, 2065,
	234, 2065,
	235, 2065,
	236, 2065,
	237, 2065,
	238, 2065,
	239, 2065,
	240, 2065,
	241, 2065,
	242, 2065,
	243, 2065,
	244, 2065,
	245, 2065,
	246, 2065,
	247, 2065,
	248, 2065,
	249, 2065,
	251, 2065,
	254, 2065,
	255, 2065,
	257, 2065,
	258, 2065,
	259, 2065,
	260, 2065,
	261, 2065,
	263, 2065,
	264, 2065,
	265, 2065,
	268, 2065,
	269, 2065,
	270, 2065,
	271, 2065,
	273, 2065,
	274, 2065,
	275, 2065,
	277, 2065,
	279, 2065,
	280, 2065,
	281, 2065,
	282, 2065,
	283, 2065,
	284, 2065,
	285, 2065,
	286, 2065,
	287, 2065,
	288, 2065,
	290, 2065,
	291, 2065,
	292, 2065,
	293, 2065,
	294, 2065,
	295, 2065,
	297, 2065,
	299, 2065,
	300, 2065,
	301, 2065,
	302, 2065,
	303, 2065,
	304, 2065,
	305, 2065,
	306, 2065,
	307, 2065,
	308, 2065,
	310, 2065,
	311, 2065,
	312, 2065,
	313, 2065,
	314, 2065,
	315, 2065,
	316, 2065,
	317, 2065,
	318, 2065,
	319, 2065,
	320, 2065,
	321, 2065,
	322, 2065,
	323, 2065,
	325, 2065,
	326, 2065,
	327, 2065,
	328, 2065,
	329, 2065,
	330, 2065,
	331, 2065,
	332, 2065,
	333, 2065,
	334, 2065,
	335, 2065,
	336, 2065,
	337, 2065,
	338, 2065,
	339, 2065,
	340, 2065,
	341, 2065,
	343, 2065,
	344, 2065,
	345, 2065,
	346, 2065,
	347, 2065,
	348, 2065,
	349, 2065,
	350, 2065,
	351, 2065,
	352, 2065,
	354, 2065,
	355, 2065,
	356, 2065,
	357, 2065,
	358, 2065,
	359, 2065,
	360, 2065,
	361, 2065,
	362, 2065,
	363, 2065,
	364, 2065,
	366, 2065,
	367, 2065,
	368, 2065,
	369, 2065,
	370, 2065,
	371, 2065,
	372, 2065,
	373, 2065,
	374, 2065,
	375, 2065,
	376, 2065,
	377, 2065,
	379, 2065,
	380, 2065,
	381, 2065,
	383, 2065,
	384, 2065,
	385, 2065,
	386, 2065,
	387, 2065,
	388, 2065,
	389, 2065,
	391, 2065,
	392, 2065,
	393, 2065,
	394, 2065,
	395, 2065,
	397, 2065,
	399, 2065,
	400, 2065,
	401, 2065,
	402, 2065,
	403, 2065,
	405, 2065,
	406, 2065,
	407, 2065,
	409, 2065,
	410, 2065,
	413, 2065,
	414, 2065,
	415, 2065,
	416, 2065,
	417, 2065,
	418, 2065,
	420, 2065,
	422, 2065,
	423, 2065,
	424, 2065,
	425, 2065,
	426, 2065,
	427, 2065,
	428, 2065,
	430, 2065,
	431, 2065,
	432, 2065,
	437, 2065,
	438, 2065,
	439, 2065,
	440, 2065,
	441, 2065,
	442, 2065,
	443, 2065,
	444, 2065,
	446, 2065,
	447, 2065,
	448, 2065,
	449, 2065,
	450, 2065,
	451, 2065,
	453, 2065,
	454, 2065,
	455, 2065,
	456, 2065,
	457, 2065,
	458, 2065,
	459, 2065,
	460, 2065,
	461, 2065,
	463, 2065,
	466, 2065,
	467, 2065,
	469, 2065,
	470, 2065,
	-2, 0,
	-1, 1341,
	155, 1968,
	396, 1968,
	448, 1968,
	467, 1968,
	-2, 0,
	-1, 1373,
	301, 643,
	352, 643,
	-2, 0,
	-1, 1397,
	1, 638,
	464, 638,
	466, 638,
	468, 638,
	-2, 0,
	-1, 1398,
	1, 663,
	464, 663,
	466, 663,
	468, 663,
	-2, 0,
	-1, 1399,
	1, 645,
	464, 645,
	466, 645,
	468, 645,
	-2, 0,
	-1, 1401,
	1, 649,
	464, 649,
	466, 649,
	468, 649,
	-2, 0,
	-1, 1426,
	1, 2018,
	464, 2018,
	466, 2018,
	467, 2018,
	468, 2018,
	-2, 689,
	-1, 1427,
	1, 1965,
	464, 1965,
	466, 1965,
	467, 1965,
	468, 1965,
	-2, 690,
	-1, 1442,
	1, 977,
	468, 977,
	-2, 982,
	-1, 1446,
	139, 1105,
	152, 1105,
	227, 1105,
	262, 1105,
	-2, 1048,
	-1, 1540,
	123, 1069,
	139, 1069,
	152, 1069,
	197, 1069,
	227, 1069,
	262, 1069,
	272, 1069,
	411, 1069,
	-2, 1474,
	-1, 1597,
	466, 1622,
	-2, 0,
	-1, 1631,
	123, 1069,
	139, 1069,
	152, 1069,
	197, 1069,
	227, 1069,
	262, 1069,
	272, 1069,
	411, 1069,
	-2, 1183,
	-1, 1690,
	465, 1304,
	-2, 1292,
	-1, 1734,
	1, 497,
	468, 497,
	-2, 982,
	-1, 1938,
	1, 640,
	464, 640,
	466, 640,
	468, 640,
	-2, 0,
	-1, 1939,
	1, 665,
	464, 665,
	466, 665,
	468, 665,
	-2, 0,
	-1, 2037,
	14, 0,
	15, 0,
	16, 0,
	446, 0,
	447, 0,
	448, 0,
	-2, 1355,
	-1, 2038,
	14, 0,
	15, 0,
	16, 0,
	446, 0,
	447, 0,
	448, 0,
	-2, 1356,
	-1, 2039,
	83, 0,
	210, 0,
	211, 0,
	450, 0,
	451, 0,
	-2, 1357,
	-1, 2040,
	83, 0,
	210, 0,
	211, 0,
	450, 0,
	451, 0,
	-2, 1358,
	-1, 2041,
	83, 0,
	210, 0,
	211, 0,
	450, 0,
	451, 0,
	-2, 1359,
	-1, 2042,
	83, 0,
	210, 0,
	211, 0,
	450, 0,
	451, 0,
	-2, 1360,
	-1, 2043,
	83, 0,
	210, 0,
	211, 0,
	450, 0,
	451, 0,
	-2, 1361,
	-1, 2044,
	14, 0,
	15, 0,
	16, 0,
	446, 0,
	447, 0,
	448, 0,
	-2, 1362,
	-1, 2056,
	14, 0,
	15, 0,
	16, 0,
	446, 0,
	447, 0,
	448, 0,
	-2, 1374,
	-1, 2057,
	14, 0,
	15, 0,
	16, 0,
	446, 0,
	447, 0,
	448, 0,
	-2, 1375,
	-1, 2058,
	14, 0,
	15, 0,
	16, 0,
	446, 0,
	447, 0,
	448, 0,
	-2, 1376,
	-1, 2061,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	174, 0,
	177, 0,
	226, 0,
	359, 0,
	443, 0,
	449, 0,
	-2, 1381,
	-1, 2067,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	174, 0,
	177, 0,
	226, 0,
	359, 0,
	443, 0,
	449, 0,
	-2, 1385,
	-1, 2069,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	174, 0,
	177, 0,
	226, 0,
	359, 0,
	443, 0,
	449, 0,
	-2, 1393,
	-1, 2070,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	174, 0,
	177, 0,
	226, 0,
	359, 0,
	443, 0,
	449, 0,
	-2, 1394,
	-1, 2071,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	174, 0,
	177, 0,
	226, 0,
	359, 0,
	443, 0,
	449, 0,
	-2, 1395,
	-1, 2072,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	174, 0,
	177, 0,
	226, 0,
	359, 0,
	443, 0,
	449, 0,
	-2, 1396,
	-1, 2174,
	5, 1261,
	155, 1633,
	465, 1751,
	-2, 1742,
	-1, 2175,
	155, 1634,
	-2, 2022,
	-1, 2176,
	155, 1635,
	-2, 1885,
	-1, 2177,
	155, 1636,
	-2, 1807,
	-1, 2178,
	155, 1637,
	-2, 1843,
	-1, 2179,
	155, 1638,
	-2, 1883,
	-1, 2180,
	155, 1639,
	-2, 1959,
	-1, 2181,
	155, 1640,
	-2, 1458,
	-1, 2250,
	1, 1184,
	2, 1184,
	88, 1184,
	123, 1184,
	139, 1184,
	152, 1184,
	156, 1184,
	162, 1184,
	165, 1184,
	188, 1184,
	197, 1184,
	207, 1184,
	223, 1184,
	227, 1184,
	246, 1184,
	262, 1184,
	266, 1184,
	272, 1184,
	324, 1184,
	326, 1184,
	411, 1184,
	421, 1184,
	434, 1184,
	435, 1184,
	436, 1184,
	445, 1184,
	464, 1184,
	466, 1184,
	468, 1184,
	470, 1184,
	-2, 1183,
	-1, 2263,
	465, 1725,
	-2, 1737,
	-1, 2283,
	465, 1303,
	-2, 1293,
	-1, 2541,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	174, 0,
	177, 0,
	226, 0,
	359, 0,
	443, 0,
	449, 0,
	-2, 1383,
	-1, 2542,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	174, 0,
	177, 0,
	226, 0,
	359, 0,
	443, 0,
	449, 0,
	-2, 1387,
	-1, 2548,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	174, 0,
	177, 0,
	226, 0,
	359, 0,
	443, 0,
	449, 0,
	-2, 1389,
	-1, 2737,
	204, 982,
	297, 982,
	305, 982,
	445, 982,
	-2, 494,
	-1, 2832,
	286, 1093,
	-2, 887,
	-1, 2922,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	174, 0,
	177, 0,
	226, 0,
	359, 0,
	443, 0,
	449, 0,
	-2, 1391,
	-1, 2929,
	201, 0,
	203, 0,
	254, 0,
	-2, 1410,
	-1, 2992,
	14, 0,
	15, 0,
	16, 0,
	446, 0,
	447, 0,
	448, 0,
	-2, 1439,
	-1, 2993,
	14, 0,
	15, 0,
	16, 0,
	446, 0,
	447, 0,
	448, 0,
	-2, 1440,
	-1, 2994,
	14, 0,
	15, 0,
	16, 0,
	446, 0,
	447, 0,
	448, 0,
	-2, 1441,
	-1, 2998,
	14, 0,
	15, 0,
	16, 0,
	446, 0,
	447, 0,
	448, 0,
	-2, 1445,
	-1, 2999,
	14, 0,
	15, 0,
	16, 0,
	446, 0,
	447, 0,
	448, 0,
	-2, 1446,
	-1, 3000,
	14, 0,
	15, 0,
	16, 0,
	446, 0,
	447, 0,
	448, 0,
	-2, 1447,
	-1, 3044,
	465, 1726,
	-2, 1738,
	-1, 3134,
	467, 2169,
	-2, 1026,
	-1, 3185,
	201, 0,
	203, 0,
	254, 0,
	-2, 1411,
	-1, 3188,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	174, 0,
	177, 0,
	226, 0,
	359, 0,
	443, 0,
	449, 0,
	-2, 1414,
	-1, 3189,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	174, 0,
	177, 0,
	226, 0,
	359, 0,
	443, 0,
	449, 0,
	-2, 1416,
	-1, 3353,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	174, 0,
	177, 0,
	226, 0,
	359, 0,
	443, 0,
	449, 0,
	-2, 1415,
	-1, 3354,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	174, 0,
	177, 0,
	226, 0,
	359, 0,
	443, 0,
	449, 0,
	-2, 1417,
	-1, 3364,
	201, 0,
	-2, 1448,
	-1, 3478,
	201, 0,
	-2, 1449,
	-1, 3607,
	43, 0,
	174, 0,
	226, 0,
	359, 0,
	443, 0,
	449, 0,
	-2, 2025,
}

const sqlPrivate = 57344

const sqlLast = 83015

var sqlAct = [...]int{

	907, 3396, 3422, 3712, 3606, 3393, 3499, 3617, 3699, 3572,
	2314, 3575, 2668, 3618, 3289, 2819, 3619, 3657, 3584, 3429,
	3557, 3064, 2426, 2669, 1027, 2960, 1325, 3482, 3318, 2024,
	3342, 3167, 3605, 1181, 837, 3121, 847, 3382, 2240, 214,
	3438, 214, 214, 2754, 214, 214, 214, 214, 214, 2848,
	3246, 214, 3126, 852, 2841, 2084, 1665, 3302, 2815, 595,
	2843, 1455, 3323, 3106, 573, 2206, 828, 1823, 1782, 2914,
	1082, 3065, 3368, 2534, 2459, 2415, 2373, 214, 2398, 2401,
	2390, 595, 1174, 2461, 2711, 2469, 1019, 2674, 2691, 929,
	3219, 1637, 2683, 1870, 1912, 2654, 3166, 693, 2458, 1321,
	1381, 2672, 1606, 1867, 2427, 1805, 2450, 1860, 2452, 2316,
	3015, 2243, 1791, 2653, 2021, 906, 2569, 3483, 1568, 2126,
	2097, 2017, 879, 1666, 836, 142, 2526, 1193, 4, 1548,
	3423, 1811, 2468, 1190, 1818, 1822, 2374, 1861, 2349, 1769,
	1070, 903, 1442, 2399, 2117, 1767, 2242, 1607, 2224, 2203,
	2081, 2350, 1993, 1308, 1991, 2817, 1349, 1183, 1334, 1318,
	1256, 2420, 1852, 2462, 2245, 541, 1890, 596, 597, 2306,
	1010, 1626, 1059, 863, 1563, 2120, 1013, 214, 214, 1616,
	992, 2170, 2098, 1531, 2717, 1456, 149, 208, 2128, 1209,
	2232, 1992, 1457, 557, 2214, 1994, 32, 207, 591, 206,
	142, 1851, 86, 1348, 687, 527, 150, 567, 1623, 549,
	1876, 552, 1332, 668, 1206, 1282, 544, 639, 864, 1015,
	1009, 1781, 37, 36, 741, 1441, 34, 25, 23, 21,
	990, 1462, 758, 1264, 3029, 2565, 3030, 3745, 1892, 1892,
	1892, 2223, 1539, 3735, 3734, 3709, 600, 2223, 2223, 1828,
	2670, 3689, 832, 3687, 3643, 3260, 603, 3260, 3644, 3641,
	3639, 3636, 3633, 2223, 2223, 3637, 3634, 827, 600, 3628,
	3603, 3602, 1007, 1828, 1828, 1828, 3601, 3598, 603, 704,
	1904, 1904, 2223, 3597, 3570, 3551, 2857, 1904, 3260, 2278,
	832, 1470, 1471, 2858, 1503, 1504, 1505, 1513, 1514, 1515,
	1022, 3545, 3544, 3552, 3539, 2223, 2223, 1025, 3260, 3538,
	1506, 1501, 3532, 3260, 2735, 3526, 1828, 3524, 1473, 3260,
	3480, 3260, 3461, 1519, 2278, 2274, 1828, 3458, 1400, 815,
	3431, 3260, 3412, 3411, 3432, 3403, 1828, 1828, 3464, 1828,
	3402, 993, 993, 1039, 3260, 3019, 3374, 1472, 3355, 814,
	1828, 3340, 2278, 3331, 833, 1904, 1492, 2871, 3287, 1828,
	3278, 3259, 2223, 1489, 2223, 3260, 75, 3187, 3142, 1067,
	3136, 2278, 2887, 822, 2887, 3104, 3039, 3037, 3022, 3105,
	3040, 3038, 2223, 1470, 1471, 2944, 2941, 2216, 2215, 1828,
	2223, 1470, 1471, 2886, 3019, 2878, 2667, 2887, 2665, 2879,
	2223, 2664, 2223, 1501, 1067, 2223, 1904, 1044, 994, 2618,
	1473, 1501, 2597, 2223, 3279, 2580, 2598, 1040, 1473, 2223,
	1495, 1496, 1497, 1498, 2448, 2578, 1470, 1471, 1908, 1920,
	1478, 2579, 2447, 2376, 1828, 182, 1908, 1904, 2423, 1472,
	2291, 2626, 2627, 2879, 2223, 2277, 1501, 1472, 2272, 2278,
	2223, 2265, 2223, 1473, 1510, 1828, 2222, 1520, 2364, 1907,
	2223, 1500, 1502, 1908, 996, 2305, 997, 1786, 1740, 1891,
	2871, 2396, 2533, 2626, 2627, 184, 1827, 2303, 1602, 2626,
	2627, 1516, 1472, 1517, 1205, 3092, 2917, 1383, 2568, 2895,
	1487, 1488, 1624, 1821, 2859, 2259, 2258, 2257, 2256, 2255,
	998, 1470, 1471, 1893, 1893, 1893, 1508, 1513, 1514, 1515,
	995, 821, 820, 2860, 3235, 1493, 819, 818, 2504, 183,
	817, 1501, 1478, 1470, 1471, 813, 812, 811, 1473, 176,
	1478, 810, 214, 1519, 1518, 809, 808, 177, 2641, 807,
	2626, 2627, 806, 2644, 2645, 2646, 1760, 805, 804, 803,
	1473, 1507, 802, 1500, 1502, 801, 739, 1472, 151, 738,
	214, 1500, 1502, 737, 736, 1478, 1492, 214, 735, 734,
	733, 732, 731, 1489, 1227, 730, 182, 729, 728, 1472,
	2632, 727, 726, 214, 1085, 214, 214, 1186, 214, 1085,
	214, 1186, 118, 725, 724, 1499, 1500, 1502, 723, 214,
	214, 722, 721, 720, 719, 2641, 1069, 1493, 2857, 718,
	1074, 717, 2632, 1494, 716, 1493, 184, 715, 2632, 714,
	713, 702, 1083, 701, 214, 659, 658, 1194, 616, 1040,
	1495, 1496, 1497, 1498, 2626, 2627, 1063, 615, 214, 1511,
	1478, 1186, 1186, 214, 214, 614, 214, 606, 182, 1539,
	1493, 1900, 1891, 1986, 605, 2123, 604, 580, 214, 579,
	183, 578, 1478, 577, 1510, 2642, 214, 1520, 182, 561,
	176, 1500, 1502, 204, 182, 203, 202, 201, 177, 2632,
	214, 214, 214, 214, 214, 1186, 1186, 1221, 184, 1196,
	1186, 200, 199, 214, 1186, 214, 214, 2642, 198, 151,
	1487, 1488, 2215, 2642, 1186, 1494, 197, 196, 184, 195,
	214, 1057, 1329, 1494, 184, 194, 1508, 193, 192, 191,
	3198, 2124, 1040, 1509, 190, 1493, 1484, 1485, 1491, 1512,
	1490, 1486, 183, 1483, 1481, 1482, 1474, 1475, 1476, 1477,
	1479, 1480, 1226, 189, 188, 187, 1186, 1201, 1494, 186,
	3206, 185, 183, 1078, 3033, 1171, 1176, 2888, 183, 1402,
	1215, 57, 176, 2643, 2642, 2714, 1208, 1207, 176, 214,
	177, 151, 2591, 2632, 1052, 58, 177, 2574, 2380, 1269,
	2408, 2266, 1571, 214, 2249, 1177, 600, 1765, 1570, 1200,
	62, 151, 1627, 2125, 2122, 2643, 603, 2422, 214, 2161,
	2147, 2643, 2145, 1650, 1557, 1499, 1214, 1353, 1219, 1574,
	1225, 3624, 1915, 1211, 1469, 142, 142, 1322, 1076, 1337,
	1339, 68, 1029, 1494, 3604, 1328, 1481, 1482, 1474, 1475,
	1476, 1477, 1479, 1480, 1312, 1315, 1474, 1475, 1476, 1477,
	1479, 1480, 1265, 1265, 3519, 3473, 3392, 1335, 835, 1511,
	3467, 74, 3465, 1063, 3327, 1220, 1063, 3090, 2642, 3332,
	3239, 85, 2643, 3218, 1410, 1550, 75, 82, 1483, 1481,
	1482, 1474, 1475, 1476, 1477, 1479, 1480, 1266, 1285, 3217,
	1914, 1447, 1200, 2637, 2635, 2636, 2628, 2629, 2630, 2631,
	2633, 2634, 833, 2127, 3205, 3204, 1347, 3203, 3202, 3197,
	3195, 3194, 3103, 1571, 1352, 3053, 3052, 3110, 1542, 1570,
	76, 3051, 1547, 3043, 182, 2637, 2635, 2636, 2628, 2629,
	2630, 2631, 2633, 2634, 2628, 2629, 2630, 2631, 2633, 2634,
	1569, 1446, 3012, 1509, 1006, 3011, 3010, 2937, 2933, 1512,
	1490, 1486, 2709, 1483, 1481, 1482, 1474, 1475, 1476, 1477,
	1479, 1480, 2369, 1440, 184, 2661, 2643, 1401, 2626, 2627,
	2652, 1538, 2409, 2625, 2622, 2621, 2336, 1358, 1474, 1475,
	1476, 1477, 1479, 1480, 2619, 2638, 2639, 2640, 2882, 2604,
	1374, 2603, 2637, 2635, 2636, 2628, 2629, 2630, 2631, 2633,
	2634, 1445, 214, 2121, 1761, 2351, 2602, 1551, 183, 1549,
	1550, 2599, 2276, 2525, 1555, 2596, 2590, 2573, 176, 2566,
	2449, 2250, 2110, 1469, 1443, 1468, 177, 2287, 1604, 214,
	1452, 77, 1864, 815, 1451, 1833, 1831, 182, 3742, 214,
	1085, 214, 214, 214, 214, 3708, 3707, 151, 3642, 595,
	214, 214, 1028, 814, 595, 214, 2962, 3593, 1448, 3591,
	214, 3513, 1573, 3326, 148, 80, 1186, 81, 3510, 2626,
	2627, 3507, 1465, 1466, 3506, 3505, 3498, 184, 1653, 3492,
	3462, 1613, 3457, 182, 833, 3456, 182, 1085, 2636, 2628,
	2629, 2630, 2631, 2633, 2634, 2626, 2627, 182, 692, 1737,
	2087, 3408, 118, 3388, 3366, 3350, 3349, 2632, 1565, 1566,
	182, 1660, 1634, 1610, 1611, 1763, 2729, 2706, 3109, 3337,
	3336, 183, 3316, 184, 1731, 1766, 184, 1732, 3313, 3306,
	3234, 176, 1063, 3216, 2407, 3156, 3153, 184, 1022, 177,
	1022, 3081, 1692, 1658, 2093, 1025, 3080, 1025, 3068, 119,
	184, 142, 3067, 3025, 2928, 2889, 2872, 2835, 2804, 2780,
	151, 2757, 152, 2756, 2730, 1657, 993, 183, 2666, 2595,
	183, 2594, 2589, 2557, 1654, 1470, 1471, 176, 2389, 1575,
	176, 183, 1572, 1564, 1656, 177, 1561, 2285, 177, 2284,
	2261, 176, 2254, 2221, 183, 1501, 2143, 1635, 182, 177,
	1916, 1632, 1473, 1535, 176, 1649, 151, 1734, 2632, 151,
	1605, 1601, 177, 1600, 1186, 1186, 214, 1599, 1598, 1775,
	151, 1597, 1085, 1641, 1596, 1595, 1668, 833, 1652, 1625,
	1759, 1472, 1603, 151, 2632, 1594, 600, 1593, 184, 1662,
	1824, 600, 1629, 1200, 1729, 1591, 603, 1661, 1590, 1644,
	1643, 603, 1728, 1642, 1640, 1639, 1638, 1470, 1471, 1589,
	1829, 214, 1588, 1587, 1586, 214, 214, 1663, 1585, 1808,
	2757, 1584, 1810, 2160, 2146, 1815, 2144, 1583, 214, 1470,
	1471, 1582, 183, 1581, 1473, 1580, 1579, 214, 1578, 214,
	2189, 214, 176, 2642, 1577, 214, 1552, 1752, 1536, 3468,
	177, 3466, 1534, 1529, 1051, 1042, 1473, 1035, 3484, 214,
	3309, 3236, 3191, 1472, 1478, 3049, 3036, 3028, 3377, 3391,
	3238, 151, 2577, 2280, 841, 2252, 3048, 1804, 1790, 2626,
	2627, 1551, 2727, 1532, 1645, 1472, 1760, 1819, 3281, 1071,
	1073, 3705, 3698, 3508, 1735, 1500, 1502, 1760, 1855, 1186,
	2844, 1186, 214, 1186, 3434, 3433, 214, 3330, 1067, 1373,
	3280, 1186, 3031, 2874, 1186, 214, 2783, 214, 214, 2873,
	1627, 1825, 1438, 3439, 1064, 1586, 1586, 1186, 1186, 1186,
	1760, 214, 2601, 1208, 1207, 1873, 3113, 2600, 214, 1751,
	1750, 2643, 1072, 1760, 1757, 1067, 1478, 595, 214, 1493,
	214, 2539, 214, 600, 214, 1058, 214, 1005, 1571, 1786,
	2338, 1068, 1746, 603, 1570, 2630, 2631, 2633, 2634, 2123,
	214, 1067, 1179, 214, 2353, 214, 1202, 3079, 1814, 799,
	1826, 2821, 1382, 2820, 214, 1411, 1559, 1913, 3430, 3629,
	3616, 1383, 1806, 3095, 3083, 1934, 2893, 3369, 3713, 2670,
	581, 2964, 2583, 1918, 2118, 214, 2283, 1592, 1567, 1881,
	214, 2813, 1865, 1843, 1859, 1858, 1842, 1065, 800, 3625,
	1930, 1242, 3638, 3635, 1556, 1066, 1258, 1261, 2853, 3060,
	3500, 3568, 3122, 1085, 1362, 2124, 3489, 3074, 2456, 1895,
	2419, 1754, 1897, 3673, 1919, 1899, 2909, 1494, 3674, 1902,
	1924, 1879, 1875, 3270, 1883, 1884, 1335, 1285, 1335, 1878,
	2318, 1878, 2635, 2636, 2628, 2629, 2630, 2631, 2633, 2634,
	654, 2025, 3531, 780, 1990, 2739, 3626, 1230, 2003, 1343,
	1240, 905, 2292, 3739, 3421, 1792, 793, 791, 3414, 1202,
	2628, 2629, 2630, 2631, 2633, 2634, 1064, 789, 587, 3097,
	2001, 833, 786, 833, 2079, 1796, 3094, 2125, 2122, 1052,
	2741, 1909, 3093, 1910, 1921, 3057, 1923, 1972, 1085, 3056,
	1692, 1692, 2728, 2588, 795, 2092, 1970, 2309, 2077, 2587,
	1073, 1365, 2586, 1756, 600, 1747, 1999, 1408, 1409, 2307,
	2585, 2543, 1542, 2001, 603, 1952, 2371, 2363, 1793, 655,
	2321, 2360, 1241, 2341, 2022, 2023, 2130, 1064, 2273, 2068,
	1444, 2099, 2100, 214, 1755, 1067, 1985, 862, 1204, 1482,
	1474, 1475, 1476, 1477, 1479, 1480, 2139, 2099, 2115, 1999,
	2138, 589, 1072, 2026, 1360, 1085, 1275, 214, 1274, 1065,
	1273, 2894, 1272, 2194, 1841, 2416, 214, 1066, 1987, 1989,
	1073, 2002, 831, 1988, 1668, 1668, 1995, 2127, 214, 815,
	3348, 1085, 815, 815, 783, 1984, 1783, 2169, 1928, 2173,
	2173, 2187, 1407, 2099, 1250, 2782, 2207, 2209, 1797, 2013,
	2309, 2213, 2014, 2015, 2073, 3530, 1997, 2340, 1980, 2299,
	3398, 2114, 2307, 2074, 1296, 2000, 1779, 2075, 3693, 2263,
	1065, 2080, 1072, 2264, 1476, 1477, 1479, 1480, 1066, 2329,
	2522, 2237, 2083, 539, 3595, 2229, 1021, 1784, 1785, 2328,
	1236, 1355, 2091, 1880, 2095, 2262, 830, 2531, 2089, 1480,
	2900, 1634, 583, 3622, 2083, 2899, 1375, 534, 2000, 1798,
	1799, 214, 2320, 1022, 2112, 1780, 1450, 833, 1794, 1186,
	1025, 588, 2281, 2501, 1998, 2127, 1770, 2121, 833, 1022,
	1771, 1371, 833, 2136, 2357, 1050, 1025, 2118, 2137, 2271,
	3694, 2140, 1938, 2141, 2142, 2228, 1085, 993, 3070, 2634,
	1795, 214, 1737, 1942, 1761, 2351, 2182, 1067, 1645, 214,
	2198, 585, 2251, 2211, 3282, 1761, 2351, 1998, 1257, 142,
	214, 832, 1023, 2275, 3673, 2236, 1032, 2241, 2230, 1937,
	2247, 2248, 1437, 214, 2304, 2219, 2220, 1063, 1186, 1356,
	1632, 2234, 2235, 1939, 711, 1983, 657, 656, 1761, 2351,
	582, 214, 1085, 2530, 1255, 2850, 3266, 1030, 214, 214,
	3716, 1761, 1758, 1421, 3662, 2076, 833, 1770, 1067, 1573,
	1772, 1771, 3257, 3172, 2078, 2310, 3696, 1406, 2319, 3347,
	3623, 214, 2738, 1774, 214, 3728, 1383, 586, 1800, 1383,
	214, 650, 1770, 649, 3171, 607, 1771, 1892, 584, 2286,
	1945, 3254, 2290, 214, 2953, 1615, 2339, 1979, 2527, 2528,
	3702, 214, 1692, 214, 1238, 2358, 214, 1777, 1565, 1566,
	2851, 2430, 214, 1361, 3082, 214, 2289, 214, 1982, 214,
	1397, 214, 214, 2343, 214, 1186, 1186, 1186, 1776, 1186,
	1033, 2794, 2293, 3255, 214, 214, 2344, 214, 214, 2807,
	2372, 1186, 1801, 1786, 787, 787, 1786, 3621, 2470, 214,
	829, 1772, 2443, 2444, 2313, 788, 2352, 2354, 2355, 2356,
	787, 2322, 2325, 1619, 1774, 214, 214, 214, 2850, 2331,
	214, 1398, 214, 1946, 1971, 214, 1772, 214, 797, 214,
	2342, 2377, 796, 1969, 2554, 2065, 1668, 1295, 3501, 1774,
	3399, 2788, 3264, 2359, 2127, 1622, 2413, 2950, 2335, 2295,
	214, 214, 214, 214, 214, 214, 1803, 214, 2552, 3695,
	1257, 2297, 535, 1235, 1617, 1208, 2378, 2308, 1788, 1776,
	2439, 2740, 1177, 2387, 686, 3071, 1562, 1777, 3661, 2725,
	1620, 2368, 2455, 214, 2472, 600, 2397, 2475, 2476, 2361,
	1200, 214, 3549, 2298, 1776, 603, 2481, 2482, 2483, 2382,
	1202, 2384, 142, 1618, 784, 1418, 2445, 2441, 2296, 2776,
	2393, 2425, 775, 2545, 2486, 536, 2489, 2432, 2436, 2951,
	2437, 2090, 2438, 2685, 2493, 3682, 2495, 2474, 2497, 3250,
	2477, 2440, 2478, 3251, 826, 2082, 1335, 2446, 608, 609,
	1619, 3700, 2457, 2421, 2505, 1777, 2421, 2473, 3298, 2488,
	2512, 2770, 2514, 3257, 3168, 537, 3344, 538, 2494, 1449,
	2496, 1357, 2498, 712, 2549, 3265, 2063, 1981, 1777, 2066,
	1200, 1200, 1622, 3253, 1370, 1372, 3360, 2550, 1049, 1031,
	214, 2555, 3254, 1621, 3580, 3247, 3256, 2515, 2194, 2194,
	3729, 2231, 2546, 1777, 3512, 2769, 1528, 1941, 1419, 3245,
	2744, 1777, 1893, 2109, 2772, 3249, 2593, 1620, 776, 2491,
	2233, 2492, 2519, 2518, 3717, 3701, 1200, 1773, 2062, 2127,
	3660, 2246, 1944, 1936, 3255, 1768, 832, 2517, 2524, 2774,
	1809, 3547, 2499, 1817, 611, 610, 2532, 2567, 1911, 2571,
	2572, 3308, 2309, 3162, 2575, 3173, 1202, 3703, 3045, 1922,
	1200, 1045, 1200, 1816, 2323, 2520, 3248, 1385, 3343, 3620,
	3548, 3672, 1931, 1932, 1933, 3670, 3445, 3315, 1359, 2839,
	775, 1420, 2411, 1850, 1612, 1043, 3108, 1038, 2684, 2773,
	526, 1460, 3169, 1812, 612, 613, 2544, 2012, 1085, 3252,
	1787, 1748, 826, 2915, 3405, 3404, 3214, 3386, 2194, 2194,
	2194, 2718, 2677, 2678, 1784, 1785, 3299, 214, 1773, 3269,
	1621, 3488, 214, 3059, 2840, 214, 3268, 1745, 214, 214,
	1085, 2831, 2752, 2748, 214, 2551, 2676, 1459, 2412, 2400,
	2391, 2582, 1813, 1773, 2553, 1874, 1863, 1085, 1862, 1837,
	2699, 2663, 2949, 2007, 214, 3558, 2912, 1976, 1459, 3722,
	1741, 2064, 3127, 777, 3319, 3514, 2225, 2679, 2702, 214,
	833, 1454, 2388, 3345, 1459, 3428, 776, 1298, 3426, 2576,
	3250, 3387, 2762, 2759, 3251, 2716, 2758, 214, 214, 214,
	1929, 2537, 2521, 214, 1743, 3175, 214, 2745, 2746, 2687,
	3001, 708, 3027, 214, 214, 2736, 214, 214, 214, 2713,
	2689, 1744, 1022, 2760, 2270, 2682, 2764, 2681, 2742, 1025,
	214, 214, 214, 2345, 3253, 1458, 2708, 1022, 2712, 214,
	2658, 2659, 2660, 2227, 1025, 1399, 1281, 3256, 2226, 2715,
	1063, 214, 1186, 2671, 214, 2705, 1458, 2761, 1692, 937,
	2766, 2767, 1085, 3215, 2008, 2507, 1528, 1022, 2269, 2686,
	1460, 1085, 1458, 2688, 1025, 3176, 214, 2749, 2697, 214,
	214, 778, 3267, 214, 2700, 2701, 1186, 214, 700, 2324,
	2818, 1460, 2726, 824, 1692, 775, 1186, 1186, 210, 2698,
	529, 530, 214, 545, 529, 545, 555, 560, 214, 2716,
	576, 2787, 2703, 214, 2704, 214, 2830, 826, 210, 3721,
	779, 2846, 214, 2470, 3515, 2737, 1775, 2268, 2753, 2267,
	2785, 777, 2470, 2795, 1267, 2743, 697, 2395, 2805, 830,
	210, 1386, 1668, 2720, 2721, 2722, 1186, 1186, 2510, 3002,
	3252, 1268, 1775, 2723, 214, 214, 825, 3003, 214, 2808,
	3494, 1657, 3290, 2731, 2732, 2855, 2733, 2775, 2734, 2781,
	2883, 2693, 2719, 1872, 2346, 2347, 3394, 2375, 1668, 2826,
	2790, 1279, 2791, 710, 3679, 1819, 2792, 2799, 3424, 2800,
	2798, 776, 2793, 1819, 2806, 214, 3565, 1085, 214, 214,
	1085, 214, 2343, 3561, 2810, 3555, 3220, 3495, 3384, 3016,
	2134, 2847, 3681, 3640, 706, 707, 3509, 3365, 3213, 2777,
	2778, 2655, 2927, 2779, 1021, 1022, 1021, 2891, 214, 1435,
	1200, 2809, 1025, 1433, 2870, 1194, 529, 529, 1083, 778,
	3385, 2845, 2620, 1280, 210, 2852, 2694, 2556, 2392, 2509,
	1858, 2885, 2801, 2802, 2861, 3395, 2803, 1415, 2881, 2890,
	2370, 1413, 142, 142, 1396, 1085, 2868, 2869, 2506, 3562,
	2905, 2194, 2194, 3496, 1615, 1394, 1392, 1390, 779, 2854,
	1388, 1380, 1085, 2337, 214, 2896, 2288, 2897, 2692, 2898,
	2656, 698, 699, 2863, 2864, 2865, 1378, 2866, 2867, 1277,
	2906, 1651, 1648, 2943, 2930, 1436, 1350, 1968, 2696, 2908,
	1023, 2907, 1023, 1454, 2503, 833, 2502, 2480, 1996, 1978,
	2958, 1949, 1730, 2362, 2902, 1576, 1354, 2939, 2940, 1254,
	2133, 2903, 3615, 3286, 3277, 3554, 777, 1692, 3243, 3125,
	2910, 3118, 1619, 3077, 3075, 2913, 3058, 2508, 2838, 2829,
	2822, 2417, 2946, 2406, 2405, 2194, 2194, 2194, 2194, 2194,
	2194, 2194, 2194, 2194, 2194, 2194, 2194, 2194, 2194, 2194,
	2194, 2194, 2194, 2194, 1622, 2194, 2935, 2385, 1278, 1906,
	709, 1905, 1434, 1903, 2695, 1901, 1432, 785, 1898, 1896,
	1692, 1692, 1894, 1617, 214, 214, 2952, 2954, 2955, 2945,
	1200, 2961, 2965, 2842, 3658, 1085, 1692, 1692, 2967, 1620,
	1414, 1885, 2968, 3032, 1412, 2970, 1834, 1395, 3013, 1463,
	2442, 1668, 3450, 1832, 2022, 2971, 214, 2978, 1393, 1391,
	1389, 2980, 1618, 1387, 1379, 1820, 1202, 1692, 1807, 3005,
	2022, 2981, 823, 3044, 778, 1802, 1789, 1778, 2535, 1377,
	1659, 3674, 1276, 3586, 3339, 3334, 3333, 1967, 3006, 3023,
	3024, 2471, 1764, 1232, 2309, 2010, 3452, 2327, 2956, 3135,
	2309, 3009, 1002, 214, 1668, 1668, 2307, 2966, 3020, 3021,
	1940, 142, 2326, 779, 1786, 3014, 1966, 1022, 1022, 1965,
	1668, 1668, 1430, 1431, 1025, 1025, 1003, 1947, 3018, 3271,
	1186, 1470, 1471, 3503, 1376, 3034, 1464, 3475, 3221, 2348,
	790, 792, 1621, 214, 2330, 1470, 1471, 1467, 3675, 3668,
	214, 1668, 1738, 2536, 2365, 2332, 3098, 2367, 1473, 1085,
	214, 3553, 3523, 540, 1186, 2334, 3084, 3088, 3520, 2366,
	3117, 3035, 3107, 3089, 3091, 3042, 2424, 2333, 214, 2212,
	1733, 1664, 3697, 2724, 3062, 3720, 3522, 1472, 2430, 3137,
	3096, 1539, 214, 214, 1186, 1186, 1186, 3129, 214, 214,
	214, 1472, 3192, 214, 214, 2626, 2627, 214, 214, 551,
	1186, 3114, 2129, 1004, 1364, 214, 1085, 3047, 2470, 3132,
	1363, 1036, 2301, 3128, 2302, 3099, 2343, 2135, 1692, 1470,
	1471, 2190, 3116, 3131, 3046, 3123, 3160, 3115, 1085, 3050,
	2301, 2300, 2957, 1417, 1537, 3054, 1416, 3732, 3485, 1046,
	3418, 3076, 3378, 3078, 3376, 3305, 576, 3237, 3159, 3152,
	3119, 3141, 2753, 3120, 3102, 3101, 3100, 3073, 2862, 2836,
	2834, 3130, 210, 3133, 210, 210, 2485, 1191, 2484, 210,
	3139, 2434, 3138, 214, 2410, 2386, 2094, 1964, 210, 1210,
	1963, 3148, 1962, 3158, 1022, 3149, 3150, 3155, 3151, 3144,
	3143, 1025, 1961, 1888, 3157, 3186, 3154, 1887, 1886, 1866,
	3177, 1845, 1668, 1234, 3178, 1844, 1840, 1839, 1838, 1836,
	3190, 1835, 3165, 3170, 1429, 1428, 1307, 1253, 1306, 1305,
	1304, 1303, 210, 210, 1302, 1191, 1301, 1300, 1692, 1299,
	1297, 1292, 1291, 1290, 1289, 1288, 214, 210, 1249, 1858,
	1248, 1247, 1085, 1246, 1085, 1294, 1245, 1244, 1243, 1237,
	1231, 1229, 1228, 1048, 1047, 977, 884, 1739, 798, 210,
	210, 210, 210, 1191, 641, 782, 3397, 214, 214, 214,
	1423, 73, 576, 1239, 210, 210, 627, 3240, 3241, 214,
	67, 3072, 3231, 636, 3212, 3567, 214, 2768, 214, 697,
	1948, 214, 214, 214, 1384, 1950, 3272, 2707, 3161, 3262,
	2253, 3546, 3199, 1085, 214, 214, 2592, 3481, 1085, 3359,
	2132, 1558, 1668, 69, 872, 959, 214, 3222, 3229, 3297,
	214, 3223, 3224, 3296, 3244, 3227, 3291, 3225, 3228, 214,
	3061, 3273, 2460, 214, 3294, 3233, 1085, 2712, 3293, 1186,
	3232, 840, 1088, 3242, 1749, 1022, 878, 1762, 210, 1021,
	3261, 2282, 1025, 1022, 2172, 1672, 881, 1669, 1671, 883,
	1025, 882, 210, 1670, 1560, 1021, 1022, 214, 880, 1667,
	2394, 2428, 3321, 1025, 1284, 762, 1753, 560, 2088, 1085,
	2116, 2581, 1553, 3284, 3288, 3335, 853, 3285, 874, 2113,
	1041, 2690, 2849, 3041, 3325, 2006, 2523, 2796, 3320, 3292,
	644, 2623, 3307, 3324, 2119, 3310, 1034, 2195, 3312, 1085,
	2188, 2184, 3317, 2418, 3329, 1439, 3322, 1083, 1530, 2429,
	1075, 856, 2086, 1544, 2561, 3226, 2011, 2856, 2710, 2279,
	3583, 2827, 2016, 1849, 1001, 1023, 1000, 999, 3574, 3571,
	2816, 2832, 2833, 1742, 2294, 1522, 1085, 3357, 2823, 3346,
	868, 1023, 1199, 2675, 214, 2884, 214, 1251, 1085, 214,
	2194, 3502, 3351, 1521, 794, 3491, 1062, 214, 3263, 1061,
	3356, 1060, 2751, 3727, 3069, 181, 2529, 1461, 1453, 178,
	3274, 3275, 180, 3367, 3357, 179, 3301, 3381, 3086, 90,
	214, 2876, 2877, 35, 16, 117, 2025, 3371, 116, 3380,
	115, 114, 2194, 113, 1858, 112, 3372, 3373, 111, 214,
	110, 109, 108, 107, 3300, 106, 1692, 214, 105, 104,
	103, 102, 101, 100, 3311, 3417, 214, 2818, 3379, 99,
	98, 1186, 3375, 3436, 97, 96, 95, 214, 94, 93,
	92, 3401, 3400, 3328, 91, 3442, 3427, 3441, 3444, 572,
	569, 49, 48, 89, 3415, 88, 3338, 15, 214, 214,
	33, 13, 3419, 53, 3447, 3425, 54, 12, 3459, 3460,
	1692, 529, 2558, 2559, 28, 3435, 29, 79, 78, 27,
	214, 14, 26, 3449, 24, 10, 3440, 3448, 8, 7,
	3446, 30, 210, 1636, 210, 214, 3454, 11, 210, 147,
	1668, 3324, 3453, 146, 3407, 72, 2190, 2190, 1210, 145,
	1191, 210, 2194, 210, 71, 144, 143, 70, 210, 1210,
	545, 3497, 22, 210, 1210, 3471, 3472, 9, 139, 576,
	3437, 3112, 3487, 3479, 66, 141, 3474, 3455, 140, 63,
	3504, 3486, 138, 214, 1614, 3463, 137, 64, 3511, 3409,
	3410, 136, 135, 65, 1668, 134, 214, 1186, 3470, 20,
	5, 52, 6, 214, 3341, 2892, 1692, 1186, 1186, 83,
	84, 31, 61, 1186, 60, 3537, 59, 214, 19, 214,
	2194, 2194, 2649, 2650, 2651, 51, 18, 171, 3521, 3525,
	3528, 170, 169, 3535, 3536, 168, 163, 3517, 3518, 3540,
	3516, 162, 167, 214, 165, 3541, 3533, 164, 166, 214,
	3563, 3529, 214, 3534, 1085, 3440, 2190, 2190, 2190, 161,
	133, 173, 172, 214, 214, 175, 3451, 159, 155, 154,
	158, 160, 157, 156, 3585, 153, 174, 132, 3592, 131,
	56, 3590, 130, 3569, 3587, 129, 128, 3573, 3576, 3599,
	1668, 3550, 2025, 3578, 127, 3600, 126, 55, 1200, 17,
	2, 1, 0, 214, 0, 0, 3596, 0, 3594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3627,
	0, 0, 0, 3577, 0, 210, 3581, 3632, 0, 3614,
	3613, 3611, 3612, 0, 0, 0, 0, 839, 0, 0,
	3645, 3630, 3647, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 3655, 0, 0, 0, 2430, 3649, 3646, 0,
	0, 0, 3659, 3648, 3654, 3650, 214, 0, 3651, 0,
	210, 0, 0, 0, 210, 210, 0, 0, 0, 3665,
	3666, 0, 0, 3671, 0, 3669, 0, 1871, 0, 0,
	0, 0, 0, 214, 3678, 214, 210, 3677, 210, 3680,
	210, 3676, 3688, 3667, 529, 3585, 3542, 3691, 3543, 0,
	0, 3685, 3686, 3684, 3690, 0, 3573, 0, 1889, 3576,
	3692, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3704, 3706, 0, 0, 0, 3564, 3710,
	0, 3714, 3652, 3653, 3711, 3715, 3656, 0, 0, 3145,
	3146, 3147, 3718, 0, 0, 0, 0, 0, 0, 0,
	0, 576, 3724, 3731, 3730, 697, 0, 3588, 0, 0,
	3589, 0, 0, 0, 210, 0, 1191, 210, 0, 3733,
	0, 0, 0, 0, 0, 0, 3737, 3738, 1021, 3740,
	576, 3741, 0, 0, 3743, 0, 3736, 210, 3746, 0,
	0, 0, 0, 1021, 0, 0, 210, 210, 0, 210,
	0, 210, 0, 210, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 3725, 3726, 0, 0, 0, 0, 1973,
	0, 0, 1974, 1021, 1975, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3744, 0,
	0, 0, 0, 0, 560, 0, 0, 0, 0, 576,
	0, 0, 0, 0, 1023, 2923, 2924, 0, 0, 0,
	0, 0, 3683, 0, 0, 0, 0, 0, 0, 1023,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2190,
	2190, 0, 0, 0, 0, 0, 0, 0, 0, 1023,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2982,
	2983, 2984, 2985, 2986, 2987, 2988, 2989, 2990, 2991, 2992,
	2993, 2994, 2995, 2996, 2997, 2998, 2999, 3000, 0, 3004,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1021, 0, 2190, 2190, 2190, 2190, 2190, 2190, 2190,
	2190, 2190, 2190, 2190, 2190, 2190, 2190, 2190, 2190, 2190,
	2190, 2190, 0, 2190, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 688, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 529, 0, 0, 0,
	0, 0, 0, 210, 0, 529, 839, 57, 691, 690,
	839, 0, 0, 1470, 1471, 0, 0, 210, 0, 0,
	0, 58, 0, 0, 0, 0, 0, 1023, 0, 0,
	0, 0, 0, 1501, 0, 0, 62, 0, 1470, 1471,
	1473, 0, 0, 1212, 0, 1216, 0, 1222, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1501, 0,
	0, 0, 0, 0, 0, 1473, 0, 68, 0, 1472,
	0, 0, 0, 0, 0, 0, 0, 0, 1492, 0,
	0, 0, 0, 0, 0, 1489, 0, 0, 0, 0,
	0, 0, 0, 0, 1472, 0, 0, 74, 0, 0,
	545, 0, 0, 1492, 0, 0, 0, 85, 0, 0,
	0, 0, 75, 82, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3181, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 0, 0, 0, 0, 0, 0,
	2317, 1351, 1495, 1496, 1497, 1498, 0, 0, 210, 0,
	0, 0, 1478, 0, 0, 0, 76, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 1495, 1496, 1497,
	1498, 0, 210, 0, 0, 0, 0, 1478, 0, 0,
	0, 0, 0, 1500, 1502, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 1403, 210, 2379, 0,
	0, 851, 0, 1021, 1021, 0, 0, 0, 1500, 1502,
	0, 0, 1487, 1488, 0, 0, 0, 0, 0, 0,
	1210, 0, 0, 210, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 1493, 0, 0,
	0, 0, 1871, 0, 0, 0, 0, 0, 0, 0,
	2317, 0, 529, 0, 0, 2433, 0, 0, 0, 0,
	0, 210, 1493, 0, 210, 0, 210, 77, 210, 0,
	210, 210, 0, 1191, 0, 0, 0, 1523, 1524, 1525,
	1526, 1527, 0, 2453, 697, 0, 2317, 2317, 0, 1023,
	1023, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	148, 80, 0, 81, 0, 0, 1541, 0, 0, 0,
	0, 0, 1554, 0, 210, 1191, 210, 1499, 0, 1210,
	0, 1210, 182, 0, 1191, 0, 1191, 0, 1191, 0,
	0, 0, 0, 0, 692, 1494, 0, 0, 118, 0,
	0, 0, 1499, 0, 0, 0, 0, 0, 0, 210,
	210, 210, 210, 1191, 210, 0, 210, 0, 0, 0,
	1494, 0, 184, 0, 0, 0, 0, 1470, 1471, 0,
	1503, 1504, 1505, 1513, 1514, 1515, 0, 0, 0, 0,
	1021, 0, 210, 0, 0, 119, 1506, 1501, 0, 0,
	210, 0, 0, 0, 1473, 0, 0, 0, 152, 1519,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 2626,
	2627, 0, 2644, 2645, 2646, 0, 176, 0, 0, 0,
	0, 0, 0, 1472, 177, 0, 0, 0, 3183, 0,
	0, 0, 1492, 0, 1608, 1608, 1608, 0, 0, 1489,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 0,
	0, 0, 1490, 1486, 0, 1483, 1481, 1482, 1474, 1475,
	1476, 1477, 1479, 1480, 0, 0, 1023, 0, 0, 0,
	0, 0, 0, 0, 2641, 0, 0, 0, 0, 1210,
	1483, 1481, 1482, 1474, 1475, 1476, 1477, 1479, 1480, 0,
	0, 0, 0, 0, 3364, 0, 1495, 1496, 1497, 1498,
	0, 0, 0, 0, 0, 839, 1478, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2190, 0,
	1510, 0, 0, 1520, 0, 0, 3389, 1500, 1502, 0,
	0, 1021, 0, 0, 0, 0, 0, 0, 2632, 1021,
	0, 0, 0, 0, 0, 0, 0, 1516, 0, 1517,
	2626, 2627, 1021, 2644, 2645, 2646, 1487, 1488, 0, 0,
	2190, 0, 0, 0, 0, 0, 0, 0, 0, 3182,
	0, 0, 1508, 0, 0, 0, 210, 0, 0, 0,
	0, 1493, 0, 0, 0, 0, 0, 0, 0, 2647,
	0, 210, 0, 0, 0, 0, 529, 0, 0, 0,
	1518, 529, 0, 0, 529, 0, 0, 529, 529, 0,
	851, 0, 0, 529, 851, 2641, 0, 1023, 0, 0,
	0, 210, 1169, 2642, 0, 1023, 0, 1169, 0, 0,
	0, 0, 0, 1210, 0, 0, 3478, 0, 1023, 2626,
	2627, 0, 2644, 2645, 2646, 0, 0, 0, 1210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2932, 0,
	0, 1499, 0, 0, 0, 0, 2317, 2317, 210, 0,
	2190, 0, 2317, 0, 0, 2755, 0, 0, 0, 1494,
	0, 0, 2317, 2755, 0, 2317, 2755, 2755, 0, 2632,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	210, 210, 0, 0, 2641, 1511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 2643, 0, 1191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2647, 0, 0, 0, 0, 2812, 0, 0, 2814, 2317,
	0, 0, 210, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 2642, 0, 0, 1191, 2632, 210,
	0, 0, 2317, 0, 529, 0, 0, 0, 0, 1509,
	0, 2317, 1484, 1485, 1491, 1512, 1490, 1486, 0, 1483,
	1481, 1482, 1474, 1475, 1476, 1477, 1479, 1480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 1871, 0, 0, 1871, 0, 2647,
	0, 0, 0, 0, 2638, 2639, 2640, 0, 0, 0,
	0, 2637, 2635, 2636, 2628, 2629, 2630, 2631, 2633, 2634,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2642, 2901, 0, 0, 1191, 210, 0,
	210, 0, 2643, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2005, 0, 2009, 0, 0, 0, 0,
	0, 0, 2018, 0, 0, 0, 0, 210, 0, 2027,
	2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037,
	2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047,
	2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057,
	2058, 2059, 2060, 2061, 0, 2067, 0, 2069, 2070, 2071,
	2072, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2963, 0, 0, 0, 2096, 0, 0,
	0, 2643, 1470, 1471, 0, 0, 0, 0, 0, 0,
	1541, 0, 0, 0, 2111, 0, 0, 0, 0, 0,
	0, 0, 1501, 0, 0, 2638, 2639, 2640, 0, 1473,
	0, 0, 2637, 2635, 2636, 2628, 2629, 2630, 2631, 2633,
	2634, 0, 0, 0, 2149, 2152, 2155, 2158, 0, 2162,
	2163, 2164, 2165, 2166, 2167, 2168, 0, 0, 1472, 0,
	2186, 0, 2197, 2199, 2204, 0, 0, 1492, 0, 0,
	0, 0, 0, 0, 1489, 0, 0, 0, 0, 0,
	0, 210, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 529, 529, 0, 0, 0, 1169, 0,
	0, 0, 0, 2926, 2638, 2639, 2640, 0, 0, 0,
	0, 2637, 2635, 2636, 2628, 2629, 2630, 2631, 2633, 2634,
	0, 1495, 1496, 1497, 1498, 1210, 0, 0, 0, 0,
	0, 1478, 2626, 2627, 0, 2644, 2645, 2646, 0, 851,
	0, 0, 0, 0, 0, 1169, 0, 0, 0, 0,
	0, 2931, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1500, 1502, 0, 0, 0, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1487, 1488, 0, 0, 0, 0, 2641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 1493, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2317, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2453, 2453, 0, 0, 0, 0, 697, 697, 2317,
	0, 2632, 1871, 1871, 0, 0, 697, 2317, 0, 0,
	1169, 1470, 1471, 0, 210, 0, 2381, 0, 2383, 0,
	0, 0, 0, 0, 0, 0, 1499, 0, 0, 0,
	0, 1501, 0, 0, 0, 0, 0, 0, 1473, 0,
	0, 0, 0, 0, 1494, 0, 0, 0, 0, 0,
	0, 0, 2647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1472, 0, 0,
	0, 0, 0, 0, 0, 0, 1492, 0, 0, 0,
	0, 0, 3200, 1489, 0, 0, 2642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2921, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	1495, 1496, 1497, 1498, 0, 1210, 0, 210, 0, 0,
	1478, 2500, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 1490, 1486, 0, 1483, 1481, 1482, 1474, 1475, 1476,
	1477, 1479, 1480, 0, 0, 0, 2317, 2317, 2317, 0,
	0, 1500, 1502, 0, 2643, 0, 0, 0, 1210, 0,
	0, 0, 0, 0, 0, 2317, 0, 2755, 0, 0,
	1210, 1210, 210, 0, 0, 0, 0, 0, 0, 0,
	1487, 1488, 0, 210, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2317, 0, 0, 0, 3303,
	0, 0, 0, 0, 0, 1493, 0, 0, 210, 0,
	0, 0, 3314, 0, 0, 0, 0, 2541, 2542, 0,
	0, 0, 0, 2548, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 938, 0, 0, 0, 57, 0, 0,
	0, 1169, 2562, 2563, 0, 0, 1210, 0, 2111, 0,
	0, 58, 0, 0, 0, 0, 0, 2570, 0, 0,
	0, 0, 0, 0, 0, 0, 62, 2638, 2639, 2640,
	0, 0, 211, 2584, 2637, 2635, 2636, 2628, 2629, 2630,
	2631, 2633, 2634, 0, 0, 1499, 0, 0, 0, 0,
	0, 0, 211, 0, 0, 0, 0, 68, 2605, 0,
	0, 0, 0, 1494, 0, 0, 0, 0, 0, 0,
	0, 0, 1470, 1471, 211, 1503, 1504, 1505, 1513, 1514,
	1515, 0, 0, 0, 0, 0, 1169, 74, 0, 0,
	0, 1506, 1501, 2317, 0, 2755, 0, 85, 3383, 1473,
	0, 0, 75, 82, 1519, 0, 210, 2626, 2627, 0,
	2644, 2645, 2646, 0, 0, 2204, 2204, 2204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1472, 576,
	1608, 0, 0, 0, 0, 0, 0, 1492, 2680, 0,
	0, 0, 0, 0, 1489, 0, 76, 0, 3383, 0,
	0, 0, 0, 1169, 0, 0, 2317, 0, 0, 2626,
	2627, 0, 2644, 2645, 2646, 210, 0, 0, 0, 0,
	0, 0, 2641, 0, 0, 0, 1210, 0, 0, 1169,
	1490, 1486, 0, 1483, 1481, 1482, 1474, 1475, 1476, 1477,
	1479, 1480, 0, 0, 0, 0, 0, 210, 210, 0,
	0, 1495, 1496, 1497, 1498, 839, 0, 0, 0, 0,
	0, 1478, 0, 0, 0, 0, 0, 0, 839, 2963,
	0, 0, 0, 0, 2641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3383, 1510, 0, 0, 1520, 0,
	0, 0, 1500, 1502, 2771, 0, 2632, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	0, 0, 1516, 0, 1517, 0, 0, 0, 0, 0,
	0, 1487, 1488, 2648, 0, 0, 0, 0, 0, 0,
	0, 0, 3303, 0, 0, 0, 0, 1508, 1017, 0,
	148, 80, 0, 81, 1169, 210, 1493, 2647, 2632, 0,
	0, 0, 2755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 1518, 1210, 0, 1210, 0,
	0, 0, 0, 0, 692, 0, 0, 205, 118, 0,
	0, 2642, 1507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3559, 0, 0, 0, 0, 0, 1210, 2647,
	1169, 210, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 2317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 1499, 0, 0, 0,
	0, 0, 0, 2642, 0, 0, 0, 0, 152, 0,
	0, 0, 0, 0, 1494, 0, 183, 0, 0, 0,
	0, 0, 2963, 0, 0, 0, 176, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	1511, 0, 0, 0, 0, 0, 0, 0, 0, 2643,
	0, 0, 0, 0, 0, 151, 0, 0, 0, 0,
	2911, 0, 0, 0, 0, 2317, 0, 0, 2018, 0,
	0, 0, 0, 0, 2918, 2919, 0, 0, 2922, 0,
	0, 0, 2925, 0, 0, 3383, 0, 0, 0, 0,
	0, 2929, 0, 0, 0, 0, 0, 0, 0, 0,
	2936, 2643, 0, 2680, 0, 0, 0, 0, 0, 0,
	0, 0, 1210, 0, 2317, 0, 0, 0, 2947, 0,
	0, 0, 0, 0, 1509, 0, 0, 1484, 1485, 1491,
	1512, 1490, 1486, 0, 1483, 1481, 1482, 1474, 1475, 1476,
	1477, 1479, 1480, 0, 0, 2564, 0, 2972, 2973, 0,
	2974, 2975, 2976, 0, 0, 2977, 0, 0, 0, 2979,
	0, 0, 2638, 2639, 2640, 0, 0, 0, 0, 2637,
	2635, 2636, 2628, 2629, 2630, 2631, 2633, 2634, 57, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3007, 3008, 58, 0, 0, 0, 211, 1090, 211, 211,
	1090, 0, 1090, 211, 1090, 3017, 0, 62, 0, 0,
	0, 0, 211, 0, 2638, 2639, 2640, 0, 0, 0,
	3026, 2637, 2635, 2636, 2628, 2629, 2630, 2631, 2633, 2634,
	0, 0, 0, 0, 0, 0, 0, 0, 68, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1090, 1090, 211, 211, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 74, 0,
	0, 211, 0, 0, 0, 0, 3055, 0, 85, 0,
	0, 0, 0, 75, 82, 0, 0, 0, 0, 0,
	0, 3063, 3066, 211, 211, 211, 211, 0, 1090, 1090,
	0, 0, 0, 1090, 0, 0, 0, 1090, 211, 211,
	0, 0, 0, 0, 0, 0, 3085, 1090, 0, 1470,
	1471, 0, 0, 0, 0, 0, 0, 76, 0, 0,
	0, 904, 0, 0, 0, 0, 0, 0, 0, 1501,
	0, 0, 0, 0, 0, 0, 1473, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1090,
	0, 0, 0, 0, 0, 0, 1169, 0, 0, 0,
	209, 0, 0, 0, 0, 1472, 0, 0, 0, 0,
	0, 0, 211, 0, 1492, 1608, 0, 0, 0, 0,
	601, 1489, 0, 0, 3140, 0, 211, 0, 1169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 601, 0, 0, 1169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2920, 0, 0, 0, 0, 0, 0, 0, 77, 851,
	0, 0, 0, 0, 0, 0, 0, 0, 1495, 1496,
	1497, 1498, 851, 0, 0, 3179, 3180, 0, 1478, 0,
	0, 3184, 3185, 0, 0, 0, 3188, 3189, 0, 0,
	0, 148, 80, 3193, 81, 0, 0, 0, 0, 0,
	0, 0, 0, 3196, 0, 0, 0, 0, 0, 1500,
	1502, 1080, 0, 182, 0, 0, 0, 0, 1198, 3201,
	0, 678, 0, 0, 0, 692, 0, 0, 0, 118,
	0, 0, 0, 0, 0, 0, 1024, 0, 1487, 1488,
	1169, 0, 0, 0, 660, 0, 0, 0, 0, 1169,
	0, 0, 0, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 0, 661, 0,
	0, 0, 0, 0, 0, 0, 1286, 662, 0, 152,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 663, 0, 0, 0, 176, 1311, 1311,
	1311, 1198, 0, 0, 0, 177, 0, 0, 0, 683,
	0, 0, 3066, 1344, 1345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 0, 1340, 0, 0, 0,
	0, 0, 0, 1499, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 665, 0, 0, 0, 0, 0, 0,
	0, 1494, 0, 1090, 0, 211, 211, 211, 0, 0,
	0, 0, 211, 666, 0, 1169, 667, 211, 1169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1090,
	0, 0, 0, 0, 0, 0, 0, 1422, 0, 0,
	0, 0, 682, 0, 0, 0, 0, 0, 3066, 0,
	1090, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3352, 3353, 3354, 0,
	0, 0, 0, 1169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1169, 3362, 3363, 0, 0, 0, 873, 87, 0, 0,
	0, 0, 0, 0, 0, 3370, 0, 0, 1490, 1486,
	0, 1483, 1481, 1482, 1474, 1475, 1476, 1477, 1479, 1480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	669, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3066, 0, 686, 0, 670,
	0, 0, 0, 3406, 0, 0, 0, 0, 0, 0,
	0, 0, 3413, 0, 0, 839, 0, 1090, 1090, 211,
	0, 3420, 87, 0, 0, 1090, 685, 0, 0, 0,
	0, 0, 0, 671, 0, 0, 672, 0, 0, 0,
	0, 0, 680, 0, 0, 0, 0, 0, 3066, 673,
	0, 3066, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1169, 211, 0, 0, 0, 211, 211,
	0, 3066, 3066, 0, 0, 0, 0, 0, 0, 0,
	674, 681, 0, 0, 0, 0, 0, 0, 675, 816,
	211, 0, 211, 0, 211, 0, 0, 0, 834, 0,
	0, 677, 0, 0, 0, 0, 676, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 209, 209, 684, 0,
	0, 209, 0, 3490, 0, 0, 3493, 1646, 0, 679,
	601, 1011, 0, 0, 0, 0, 0, 0, 0, 0,
	1655, 0, 1198, 3066, 0, 0, 0, 0, 0, 0,
	0, 0, 1090, 0, 1090, 0, 1090, 0, 0, 0,
	0, 0, 0, 0, 1090, 0, 0, 1090, 211, 0,
	0, 211, 0, 0, 209, 209, 0, 0, 0, 0,
	1090, 1090, 1090, 0, 0, 0, 0, 1169, 0, 209,
	0, 211, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 211, 0, 211, 0, 211, 0, 211, 0, 211,
	0, 209, 209, 209, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 0, 0,
	0, 0, 0, 839, 1169, 1470, 1471, 0, 1503, 1504,
	1505, 1513, 1514, 1515, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 1501, 1169, 0, 0, 0,
	0, 0, 1473, 0, 0, 0, 0, 1519, 0, 0,
	0, 0, 3610, 3610, 3610, 0, 1090, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 1472, 0, 3631, 0, 0, 0, 0, 0, 0,
	1492, 0, 0, 0, 209, 0, 0, 1489, 0, 0,
	0, 0, 0, 0, 0, 0, 3066, 0, 3066, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3610, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1847,
	0, 0, 0, 1854, 0, 0, 0, 0, 0, 0,
	0, 1090, 0, 0, 1495, 1496, 1497, 1498, 0, 0,
	1169, 0, 1169, 0, 1478, 1286, 0, 1877, 0, 1877,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1510, 0,
	0, 1520, 0, 0, 0, 1500, 1502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3610, 3719, 0, 1516, 0, 1517, 1090, 0,
	3723, 1169, 0, 0, 1487, 1488, 1169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 211, 0, 1854, 1090, 0, 1926, 0, 0, 1493,
	0, 0, 0, 0, 1169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1943, 0, 1518, 0,
	0, 0, 215, 0, 0, 0, 1953, 0, 1955, 0,
	1957, 0, 1959, 0, 1960, 1507, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1977, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 0, 1024, 1169, 0, 1499,
	209, 594, 1090, 0, 0, 0, 87, 57, 87, 0,
	87, 0, 0, 209, 1630, 209, 0, 1494, 0, 0,
	601, 58, 0, 594, 0, 601, 0, 0, 0, 1090,
	0, 0, 0, 0, 1169, 0, 62, 0, 0, 0,
	0, 0, 211, 1511, 0, 0, 1169, 0, 0, 0,
	0, 0, 0, 211, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 68, 0, 0,
	0, 1090, 0, 0, 0, 0, 0, 0, 0, 851,
	0, 0, 0, 0, 211, 1090, 834, 87, 87, 0,
	0, 211, 0, 0, 0, 0, 87, 74, 0, 0,
	0, 0, 0, 0, 87, 0, 0, 85, 0, 0,
	0, 0, 75, 82, 0, 0, 0, 211, 0, 0,
	0, 0, 0, 211, 0, 0, 0, 1509, 0, 0,
	1484, 1485, 1491, 1512, 1490, 1486, 0, 1483, 1481, 1482,
	1474, 1475, 1476, 1477, 1479, 1480, 0, 0, 0, 0,
	3208, 0, 0, 0, 3207, 211, 76, 87, 211, 0,
	211, 0, 211, 0, 211, 211, 0, 0, 1090, 1090,
	1090, 0, 1090, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1090, 0, 0, 601, 0, 0,
	0, 0, 211, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2260, 0, 211, 0,
	211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 816, 0, 0, 209, 209, 0, 0,
	0, 0, 0, 211, 211, 211, 211, 0, 211, 0,
	211, 1533, 0, 0, 0, 0, 0, 0, 209, 0,
	209, 0, 209, 0, 0, 1470, 1471, 77, 1540, 0,
	0, 0, 1546, 0, 0, 0, 211, 0, 0, 0,
	0, 0, 0, 0, 211, 1501, 0, 0, 0, 0,
	0, 0, 1473, 0, 0, 0, 0, 0, 0, 0,
	148, 80, 1169, 81, 0, 0, 0, 851, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1472, 182, 0, 0, 0, 0, 0, 0, 0,
	1492, 0, 0, 0, 692, 0, 209, 1489, 118, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 184, 0, 0, 0, 0, 0, 601, 209,
	0, 209, 0, 209, 0, 209, 2547, 209, 0, 1198,
	0, 0, 0, 0, 0, 119, 0, 0, 0, 0,
	0, 0, 0, 0, 1495, 1496, 1497, 1498, 152, 0,
	0, 0, 0, 0, 1478, 209, 183, 0, 0, 1628,
	0, 1631, 1854, 87, 0, 0, 176, 0, 2404, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1500, 1502, 0, 0, 0,
	0, 0, 0, 0, 0, 1338, 0, 0, 0, 0,
	2435, 0, 0, 1311, 0, 1311, 0, 1311, 0, 1198,
	1198, 0, 0, 0, 1487, 1488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1090, 0, 0, 0, 0, 0, 2479, 0, 1493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2487, 0, 2490, 0, 0, 0, 0,
	0, 0, 0, 1090, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1086, 0, 0, 1187,
	1090, 1086, 908, 1187, 0, 0, 0, 0, 2511, 1198,
	2513, 1198, 0, 2516, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1499,
	0, 1311, 211, 0, 0, 0, 0, 0, 0, 2538,
	0, 0, 0, 1187, 1187, 0, 0, 1494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1024,
	0, 0, 0, 211, 211, 211, 0, 0, 0, 0,
	0, 0, 211, 0, 0, 1024, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 1090, 0, 1187, 1187, 209,
	0, 0, 1187, 0, 0, 1090, 1187, 0, 0, 0,
	0, 0, 0, 0, 1090, 0, 1187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 0, 1090,
	211, 0, 0, 0, 0, 0, 0, 0, 0, 1090,
	1090, 0, 0, 0, 0, 211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1490, 1486, 0, 1483, 1481, 1482,
	1474, 1475, 1476, 1477, 1479, 1480, 0, 0, 0, 1090,
	1090, 1470, 1471, 0, 0, 0, 0, 211, 0, 0,
	0, 0, 0, 0, 0, 834, 0, 834, 0, 0,
	0, 1501, 0, 0, 0, 0, 0, 0, 1473, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1090, 209, 211, 1090, 211, 0, 0, 1472, 0, 0,
	0, 0, 0, 0, 209, 0, 1492, 0, 0, 0,
	0, 0, 0, 1489, 0, 0, 0, 0, 0, 0,
	0, 211, 209, 0, 0, 0, 0, 0, 0, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2540, 0, 0, 209, 0, 0, 1090, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	1495, 1496, 1497, 1498, 0, 1090, 0, 0, 0, 816,
	1478, 0, 816, 816, 0, 0, 0, 2747, 0, 0,
	0, 0, 0, 209, 0, 0, 209, 0, 209, 0,
	209, 0, 209, 209, 0, 0, 0, 0, 0, 0,
	0, 1500, 1502, 0, 0, 0, 0, 0, 2784, 2786,
	2404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 2085, 0, 0,
	1487, 1488, 0, 0, 0, 0, 209, 0, 209, 0,
	0, 834, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1540, 0, 0, 1493, 1540, 0, 0, 0,
	0, 2824, 0, 0, 0, 2828, 0, 0, 0, 0,
	0, 209, 209, 209, 209, 0, 209, 0, 209, 0,
	2837, 0, 1086, 0, 0, 0, 0, 0, 1090, 0,
	0, 594, 0, 0, 0, 0, 594, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 1187, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1011, 0, 0, 0, 0, 1086,
	0, 0, 2880, 0, 0, 1499, 0, 0, 0, 0,
	1631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 2904, 0, 1198,
	0, 0, 0, 1090, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 0, 0,
	0, 0, 0, 211, 0, 0, 2916, 0, 0, 0,
	0, 0, 1090, 211, 0, 0, 0, 1090, 0, 0,
	0, 0, 0, 0, 0, 0, 1087, 0, 0, 1188,
	0, 1087, 0, 1188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1090, 1090, 1090,
	0, 0, 0, 0, 0, 0, 1187, 1187, 0, 0,
	0, 0, 0, 1090, 1086, 0, 0, 0, 211, 1090,
	1490, 1486, 0, 1483, 1481, 1482, 1474, 1475, 1476, 1477,
	1479, 1480, 0, 1188, 1188, 0, 0, 0, 87, 0,
	0, 1090, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1024, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 87, 0, 1024, 0, 0, 0, 1188, 1188, 0,
	0, 0, 1188, 0, 0, 0, 1188, 0, 0, 87,
	0, 87, 0, 0, 0, 0, 1188, 0, 0, 0,
	0, 0, 0, 1630, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 87, 0, 0, 87, 0, 1188, 0,
	0, 1187, 0, 1187, 0, 1187, 0, 0, 0, 0,
	209, 0, 0, 1187, 0, 1090, 1187, 1090, 0, 0,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 1187,
	1187, 1187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 209, 209, 0, 0, 0, 0, 0, 594,
	1630, 0, 0, 0, 0, 0, 0, 0, 0, 1470,
	1471, 0, 209, 0, 0, 0, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1090, 211, 211, 1501,
	0, 1090, 87, 0, 0, 0, 1473, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 209, 0,
	0, 3111, 211, 0, 0, 0, 0, 0, 0, 1090,
	0, 0, 1090, 209, 0, 1472, 0, 0, 3124, 0,
	0, 1024, 0, 0, 1492, 0, 0, 0, 0, 0,
	0, 1489, 0, 0, 0, 1086, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1090, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 3163, 0, 0, 0, 0, 0, 0,
	0, 0, 1090, 2085, 0, 0, 0, 0, 1495, 1496,
	1497, 1498, 0, 0, 0, 0, 0, 0, 1478, 0,
	0, 0, 0, 0, 1540, 0, 0, 0, 0, 0,
	209, 0, 209, 0, 0, 0, 0, 0, 0, 1090,
	1086, 0, 0, 0, 0, 0, 0, 0, 0, 1500,
	1502, 1090, 0, 0, 0, 0, 0, 0, 0, 209,
	211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1487, 1488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1087, 1493, 0, 0, 0, 1086, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 211,
	0, 0, 0, 0, 1090, 0, 0, 0, 1188, 0,
	0, 0, 0, 1086, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1087,
	0, 211, 211, 1011, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1011, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3276, 0, 1499, 0, 0, 0, 0, 0, 0,
	0, 0, 2404, 0, 0, 0, 0, 0, 0, 0,
	0, 1494, 0, 1024, 1024, 0, 1470, 1471, 0, 1503,
	1504, 1505, 1513, 1514, 1515, 0, 0, 2404, 0, 0,
	0, 1187, 0, 0, 0, 1506, 1501, 0, 0, 0,
	0, 0, 0, 1473, 0, 0, 0, 0, 1519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1086, 211,
	1090, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1090, 1090, 1472, 0, 0, 0, 1090, 0, 0, 87,
	87, 1492, 0, 87, 0, 0, 1188, 1188, 1489, 0,
	0, 0, 0, 0, 1087, 0, 0, 0, 0, 0,
	1187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 87, 1086, 211, 87, 1090, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 1490, 1486,
	0, 1483, 1481, 1482, 1474, 1475, 1476, 1477, 1479, 1480,
	0, 0, 0, 0, 0, 1495, 1496, 1497, 1498, 0,
	0, 0, 0, 0, 209, 1478, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 3390, 1011, 0, 0, 834,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 1510,
	0, 0, 1520, 0, 0, 0, 1500, 1502, 0, 0,
	1024, 0, 0, 0, 87, 87, 0, 1187, 1187, 1187,
	0, 1187, 0, 0, 0, 0, 1516, 0, 1517, 0,
	0, 0, 0, 1187, 0, 1487, 1488, 0, 0, 0,
	0, 1188, 0, 1188, 3443, 1188, 209, 0, 0, 0,
	0, 1508, 0, 1188, 0, 0, 1188, 0, 0, 0,
	1493, 0, 0, 0, 0, 0, 0, 0, 0, 1188,
	1188, 1188, 0, 0, 0, 0, 3469, 1198, 0, 1518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1024, 0, 0, 3527, 1087, 0, 0, 0, 1024,
	0, 0, 0, 0, 1511, 0, 0, 0, 0, 0,
	0, 0, 1630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3566, 0, 0, 87, 209, 0, 0, 0, 0, 0,
	0, 3582, 0, 0, 0, 209, 209, 0, 1011, 1011,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1087, 0, 0, 0, 0, 0, 0, 0, 1509, 0,
	209, 1484, 1485, 1491, 1512, 1490, 1486, 0, 1483, 1481,
	1482, 1474, 1475, 1476, 1477, 1479, 1480, 0, 0, 0,
	0, 2614, 0, 0, 0, 2615, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1470, 1471, 0,
	1503, 1504, 1505, 1513, 1514, 1515, 0, 1087, 0, 0,
	1086, 0, 0, 0, 0, 0, 1506, 1501, 0, 0,
	0, 0, 0, 0, 1473, 0, 0, 0, 0, 1519,
	0, 0, 0, 1087, 0, 0, 0, 0, 0, 0,
	0, 0, 1086, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1472, 0, 0, 0, 0, 0, 1086,
	0, 0, 1492, 0, 0, 0, 0, 0, 0, 1489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1011, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1188, 0, 0, 0, 0, 1495, 1496, 1497, 1498,
	0, 0, 0, 0, 0, 0, 1478, 0, 87, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 1087, 0,
	0, 0, 0, 0, 1187, 0, 0, 0, 0, 0,
	1510, 0, 0, 1520, 1086, 0, 0, 1500, 1502, 0,
	0, 0, 0, 1086, 0, 0, 0, 0, 0, 209,
	209, 0, 0, 0, 0, 0, 0, 1516, 1187, 1517,
	1188, 0, 0, 0, 0, 0, 1487, 1488, 1187, 1187,
	0, 0, 0, 0, 1087, 0, 0, 0, 0, 0,
	0, 0, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 1493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1518, 0, 0, 0, 0, 0, 0, 0, 1187, 1187,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 0,
	0, 0, 0, 0, 0, 0, 1011, 0, 0, 0,
	0, 0, 0, 0, 1011, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1188, 1188, 1188,
	0, 1188, 0, 0, 0, 0, 0, 0, 0, 1086,
	0, 1499, 1086, 1188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 1511, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 1470, 1471, 0, 1503, 1504,
	1505, 1513, 1514, 1515, 87, 0, 0, 1086, 0, 0,
	0, 0, 0, 0, 1506, 1501, 0, 0, 0, 0,
	0, 0, 1473, 87, 1086, 0, 0, 1519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1472, 0, 0, 0, 0, 0, 0, 0, 0,
	1492, 0, 0, 0, 0, 0, 0, 1489, 0, 1509,
	0, 0, 1484, 1485, 1491, 1512, 1490, 1486, 0, 1483,
	1481, 1482, 1474, 1475, 1476, 1477, 1479, 1480, 0, 0,
	0, 0, 2107, 0, 0, 0, 2108, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1495, 1496, 1497, 1498, 0, 0,
	0, 0, 0, 0, 1478, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1086, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1510, 0,
	0, 1520, 0, 0, 0, 1500, 1502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1516, 0, 1517, 0, 0,
	0, 0, 0, 0, 1487, 1488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 0, 0, 0, 0, 0, 0, 2085, 0, 1493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1518, 0,
	1087, 0, 1187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1507, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1086, 1087, 0, 0, 0, 1187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1087,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1499,
	0, 0, 0, 0, 0, 0, 1187, 1187, 1187, 0,
	0, 0, 0, 0, 0, 0, 0, 1494, 0, 0,
	0, 0, 1187, 0, 0, 0, 0, 0, 1086, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1511, 0, 0, 0, 0, 0, 0,
	1086, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1188, 0, 0, 0, 0, 0,
	617, 0, 0, 0, 1087, 0, 0, 0, 0, 0,
	0, 0, 0, 1087, 0, 0, 0, 87, 0, 0,
	87, 0, 0, 618, 0, 0, 0, 0, 1188, 0,
	0, 0, 0, 0, 0, 0, 0, 1509, 1188, 1188,
	1484, 1485, 1491, 1512, 1490, 1486, 0, 1483, 1481, 1482,
	1474, 1475, 1476, 1477, 1479, 1480, 0, 619, 638, 0,
	0, 0, 0, 0, 2934, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1086, 0, 1086, 0, 0, 620,
	0, 0, 621, 0, 0, 0, 0, 0, 1188, 1188,
	0, 0, 0, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 0, 622, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 1470, 1471, 0,
	1503, 1504, 1505, 1513, 1514, 1515, 0, 0, 0, 0,
	0, 0, 623, 0, 0, 1086, 1506, 1501, 0, 1087,
	1086, 0, 1087, 0, 1473, 0, 0, 0, 0, 1519,
	0, 0, 624, 0, 0, 625, 647, 0, 0, 0,
	652, 0, 0, 0, 0, 0, 0, 0, 1086, 0,
	0, 1187, 0, 1472, 0, 0, 0, 0, 0, 0,
	0, 0, 1492, 0, 0, 0, 0, 0, 0, 1489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1087, 0, 0,
	0, 1086, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1087, 0, 0, 646, 0, 0,
	0, 0, 0, 0, 0, 628, 0, 0, 0, 0,
	0, 1086, 0, 0, 0, 0, 1495, 1496, 1497, 1498,
	0, 0, 0, 0, 0, 0, 1478, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 626,
	0, 0, 0, 0, 0, 0, 0, 0, 1086, 629,
	1510, 0, 0, 1520, 0, 0, 0, 1500, 1502, 0,
	1086, 0, 0, 0, 0, 0, 0, 0, 630, 0,
	0, 0, 0, 0, 0, 0, 0, 1516, 0, 1517,
	0, 0, 0, 0, 0, 0, 1487, 1488, 0, 0,
	0, 0, 0, 0, 0, 651, 0, 0, 0, 0,
	0, 0, 1508, 0, 0, 631, 0, 0, 0, 0,
	0, 1493, 0, 0, 0, 0, 0, 1087, 632, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1518, 0, 0, 1187, 0, 0, 0, 637, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 633,
	0, 0, 650, 0, 649, 0, 0, 634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	635, 0, 0, 0, 0, 642, 0, 0, 0, 0,
	653, 0, 648, 0, 0, 0, 0, 640, 0, 0,
	0, 1499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1494,
	0, 0, 1188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1470, 1471, 0, 1503, 1504,
	1505, 1513, 1514, 1515, 0, 1511, 0, 0, 0, 0,
	0, 1087, 0, 0, 1506, 1501, 1188, 0, 0, 0,
	0, 0, 1473, 0, 0, 0, 0, 1519, 0, 1187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1187,
	1187, 0, 0, 0, 0, 1187, 1188, 1188, 1188, 0,
	0, 1472, 0, 0, 0, 0, 0, 0, 0, 0,
	1492, 0, 1188, 0, 0, 0, 0, 1489, 1087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1086, 0, 0, 1509,
	1087, 0, 1484, 1485, 1491, 1512, 1490, 1486, 0, 1483,
	1481, 1482, 1474, 1475, 1476, 1477, 1479, 1480, 0, 0,
	0, 0, 0, 0, 0, 0, 2617, 0, 0, 0,
	0, 0, 0, 0, 1495, 1496, 1497, 1498, 0, 0,
	0, 0, 0, 0, 1478, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 0, 57, 0, 0, 0, 1510, 0,
	0, 1520, 0, 0, 0, 1500, 1502, 0, 58, 120,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 62, 0, 1516, 0, 1517, 0, 0,
	0, 0, 0, 0, 1487, 1488, 0, 0, 39, 122,
	0, 0, 0, 0, 1087, 0, 1087, 0, 0, 0,
	1508, 0, 38, 0, 68, 0, 0, 0, 0, 1493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 41, 0, 0, 0, 1518, 42,
	0, 0, 0, 0, 74, 0, 0, 123, 0, 0,
	0, 0, 0, 40, 85, 1507, 0, 0, 0, 75,
	82, 0, 0, 0, 0, 1087, 0, 0, 0, 0,
	1087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 43, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1087, 1499,
	0, 1188, 0, 76, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1087, 0, 1511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1087, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1087, 0,
	0, 0, 0, 0, 77, 0, 0, 0, 0, 0,
	1087, 0, 44, 0, 0, 0, 0, 1509, 0, 0,
	1484, 1485, 1491, 1512, 1490, 1486, 0, 1483, 1481, 1482,
	1474, 1475, 1476, 1477, 1479, 1480, 47, 148, 80, 0,
	81, 0, 45, 0, 2616, 0, 124, 0, 0, 0,
	0, 0, 46, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 50, 0, 0, 0, 118, 0, 0, 0, 0,
	0, 0, 0, 1188, 0, 121, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 0, 3, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1188,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1188,
	1188, 0, 0, 0, 0, 1188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 1091, 224, 1092, 1093, 1094, 1087, 1095, 480, 1096,
	1097, 1098, 1099, 225, 227, 226, 228, 229, 481, 482,
	230, 483, 233, 231, 232, 484, 1100, 234, 235, 236,
	237, 238, 239, 1101, 1102, 240, 485, 486, 487, 1103,
	241, 488, 1104, 1089, 1105, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 1106, 252, 0, 253,
	254, 255, 1107, 961, 256, 257, 1108, 1109, 1111, 1110,
	1112, 1113, 1114, 258, 259, 260, 261, 262, 263, 489,
	490, 1115, 264, 1116, 266, 265, 1117, 267, 1118, 1119,
	268, 269, 270, 1120, 271, 1121, 272, 273, 1122, 274,
	491, 275, 276, 278, 280, 277, 281, 282, 283, 284,
	492, 493, 1123, 216, 1124, 0, 0, 0, 0, 285,
	286, 287, 494, 288, 289, 0, 290, 1125, 291, 1126,
	1127, 962, 292, 293, 1128, 294, 495, 1129, 496, 295,
	1130, 296, 297, 298, 299, 497, 498, 499, 351, 964,
	300, 301, 1131, 302, 303, 305, 0, 0, 217, 304,
	306, 313, 1132, 963, 307, 500, 309, 308, 310, 311,
	312, 501, 1133, 502, 1134, 314, 965, 503, 966, 315,
	316, 317, 967, 318, 319, 0, 0, 320, 321, 322,
	323, 324, 1135, 326, 325, 1136, 327, 504, 968, 328,
	329, 969, 1137, 330, 331, 1138, 1139, 332, 333, 334,
	0, 335, 336, 338, 340, 337, 339, 341, 343, 344,
	342, 970, 345, 346, 348, 971, 347, 1140, 218, 972,
	349, 1141, 505, 350, 506, 352, 353, 1142, 354, 355,
	356, 1143, 1144, 358, 359, 360, 1145, 1146, 361, 362,
	507, 973, 363, 974, 508, 364, 357, 365, 366, 367,
	368, 369, 370, 371, 1147, 372, 373, 509, 374, 510,
	375, 1148, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 511, 384, 385, 1149, 386, 387, 388, 389, 390,
	0, 392, 393, 394, 391, 395, 396, 397, 398, 1150,
	399, 975, 400, 401, 402, 403, 512, 404, 0, 405,
	409, 410, 411, 412, 413, 414, 415, 1151, 421, 422,
	416, 418, 419, 420, 417, 423, 424, 425, 1152, 426,
	406, 407, 427, 428, 976, 429, 430, 513, 431, 432,
	1153, 433, 434, 435, 436, 408, 437, 441, 442, 438,
	439, 440, 514, 1154, 444, 445, 443, 1155, 446, 447,
	448, 449, 450, 279, 451, 1156, 452, 515, 516, 517,
	518, 1157, 459, 1158, 453, 454, 519, 455, 520, 1159,
	456, 457, 458, 0, 460, 461, 1160, 1161, 462, 463,
	464, 465, 466, 468, 1162, 469, 1163, 467, 470, 471,
	472, 521, 522, 523, 1164, 474, 473, 524, 1165, 1166,
	1167, 1168, 475, 476, 525, 477, 478, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1084, 0, 0, 0, 0, 0, 0, 0, 2238, 0,
	0, 0, 0, 0, 0, 0, 2239, 219, 220, 221,
	222, 223, 1091, 224, 1092, 1093, 1094, 0, 1095, 480,
	1096, 1097, 1098, 1099, 225, 227, 226, 228, 229, 481,
	482, 230, 483, 233, 231, 232, 484, 1100, 234, 235,
	236, 237, 238, 239, 1101, 1102, 240, 485, 486, 487,
	1103, 241, 488, 1104, 1089, 1105, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 1106, 252, 0,
	253, 254, 255, 1107, 961, 256, 257, 1108, 1109, 1111,
	1110, 1112, 1113, 1114, 258, 259, 260, 261, 262, 263,
	489, 490, 1115, 264, 1116, 266, 265, 1117, 267, 1118,
	1119, 268, 269, 270, 1120, 271, 1121, 272, 273, 1122,
	274, 491, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 492, 493, 1123, 216, 1124, 0, 0, 0, 0,
	285, 286, 287, 494, 288, 289, 0, 290, 1125, 291,
	1126, 1127, 962, 292, 293, 1128, 294, 495, 1129, 496,
	295, 1130, 296, 297, 298, 299, 497, 498, 499, 351,
	964, 300, 301, 1131, 302, 303, 305, 0, 0, 217,
	304, 306, 313, 1132, 963, 307, 500, 309, 308, 310,
	311, 312, 501, 1133, 502, 1134, 314, 965, 503, 966,
	315, 316, 317, 967, 318, 319, 0, 0, 320, 321,
	322, 323, 324, 1135, 326, 325, 1136, 327, 504, 968,
	328, 329, 969, 1137, 330, 331, 1138, 1139, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	344, 342, 970, 345, 346, 348, 971, 347, 1140, 218,
	972, 349, 1141, 505, 350, 506, 352, 353, 1142, 354,
	355, 356, 1143, 1144, 358, 359, 360, 1145, 1146, 361,
	362, 507, 973, 363, 974, 508, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 1147, 372, 373, 509, 374,
	510, 375, 1148, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 511, 384, 385, 1149, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	1150, 399, 975, 400, 401, 402, 403, 512, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 1151, 421,
	422, 416, 418, 419, 420, 417, 423, 424, 425, 1152,
	426, 406, 407, 427, 428, 976, 429, 430, 513, 431,
	432, 1153, 433, 434, 435, 436, 408, 437, 441, 442,
	438, 439, 440, 514, 1154, 444, 445, 443, 1155, 446,
	447, 448, 449, 450, 279, 451, 1156, 452, 515, 516,
	517, 518, 1157, 459, 1158, 453, 454, 519, 455, 520,
	1159, 456, 457, 458, 0, 460, 461, 1160, 1161, 462,
	463, 464, 465, 466, 468, 1162, 469, 1163, 467, 470,
	471, 472, 521, 522, 523, 1164, 474, 473, 524, 1165,
	1166, 1167, 1168, 475, 476, 525, 477, 478, 479, 0,
	0, 0, 0, 1084, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3230,
	219, 220, 221, 222, 223, 1091, 224, 1092, 1093, 1094,
	0, 1095, 480, 1096, 1097, 1098, 1099, 225, 227, 226,
	228, 229, 481, 482, 230, 483, 233, 231, 232, 484,
	1100, 234, 235, 236, 237, 238, 239, 1101, 1102, 240,
	485, 486, 487, 1103, 241, 488, 1104, 1089, 1105, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	1106, 252, 0, 253, 254, 255, 1107, 961, 256, 257,
	1108, 1109, 1111, 1110, 1112, 1113, 1114, 258, 259, 260,
	261, 262, 263, 489, 490, 1115, 264, 1116, 266, 265,
	1117, 267, 1118, 1119, 268, 269, 270, 1120, 271, 1121,
	272, 273, 1122, 274, 491, 275, 276, 278, 280, 277,
	281, 282, 283, 284, 492, 493, 1123, 216, 1124, 0,
	0, 0, 0, 285, 286, 287, 494, 288, 289, 0,
	290, 1125, 291, 1126, 1127, 962, 292, 293, 1128, 294,
	495, 1129, 496, 295, 1130, 296, 297, 298, 299, 497,
	498, 499, 351, 964, 300, 301, 1131, 302, 303, 305,
	0, 0, 217, 304, 306, 313, 1132, 963, 307, 500,
	309, 308, 310, 311, 312, 501, 1133, 502, 1134, 314,
	965, 503, 966, 315, 316, 317, 967, 318, 319, 0,
	0, 320, 321, 322, 323, 324, 1135, 326, 325, 1136,
	327, 504, 968, 328, 329, 969, 1137, 330, 331, 1138,
	1139, 332, 333, 334, 0, 335, 336, 338, 340, 337,
	339, 341, 343, 344, 342, 970, 345, 346, 348, 971,
	347, 1140, 218, 972, 349, 1141, 505, 350, 506, 352,
	353, 1142, 354, 355, 356, 1143, 1144, 358, 359, 360,
	1145, 1146, 361, 362, 507, 973, 363, 974, 508, 364,
	357, 365, 366, 367, 368, 369, 370, 371, 1147, 372,
	373, 509, 374, 510, 375, 1148, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 511, 384, 385, 1149, 386,
	387, 388, 389, 390, 0, 392, 393, 394, 391, 395,
	396, 397, 398, 1150, 399, 975, 400, 401, 402, 403,
	512, 404, 0, 405, 409, 410, 411, 412, 413, 414,
	415, 1151, 421, 422, 416, 418, 419, 420, 417, 423,
	424, 425, 1152, 426, 406, 407, 427, 428, 976, 429,
	430, 513, 431, 432, 1153, 433, 434, 435, 436, 408,
	437, 441, 442, 438, 439, 440, 514, 1154, 444, 445,
	443, 1155, 446, 447, 448, 449, 450, 279, 451, 1156,
	452, 515, 516, 517, 518, 1157, 459, 1158, 453, 454,
	519, 455, 520, 1159, 456, 457, 458, 0, 460, 461,
	1160, 1161, 462, 463, 464, 465, 466, 468, 1162, 469,
	1163, 467, 470, 471, 472, 521, 522, 523, 1164, 474,
	473, 524, 1165, 1166, 1167, 1168, 475, 476, 525, 477,
	478, 479, 1084, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3358, 0, 219,
	220, 221, 222, 223, 1091, 224, 1092, 1093, 1094, 0,
	1095, 480, 1096, 1097, 1098, 1099, 225, 227, 226, 228,
	229, 481, 482, 230, 483, 233, 231, 232, 484, 1100,
	234, 235, 236, 237, 238, 239, 1101, 1102, 240, 485,
	486, 487, 1103, 241, 488, 1104, 1089, 1105, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 1106,
	252, 0, 253, 254, 255, 1107, 961, 256, 257, 1108,
	1109, 1111, 1110, 1112, 1113, 1114, 258, 259, 260, 261,
	262, 263, 489, 490, 1115, 264, 1116, 266, 265, 1117,
	267, 1118, 1119, 268, 269, 270, 1120, 271, 1121, 272,
	273, 1122, 274, 491, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 492, 493, 1123, 216, 1124, 0, 0,
	0, 0, 285, 286, 287, 494, 288, 289, 0, 290,
	1125, 291, 1126, 1127, 962, 292, 293, 1128, 294, 495,
	1129, 496, 295, 1130, 296, 297, 298, 299, 497, 498,
	499, 351, 964, 300, 301, 1131, 302, 303, 305, 0,
	0, 217, 304, 306, 313, 1132, 963, 307, 500, 309,
	308, 310, 311, 312, 501, 1133, 502, 1134, 314, 965,
	503, 966, 315, 316, 317, 967, 318, 319, 0, 0,
	320, 321, 322, 323, 324, 1135, 326, 325, 1136, 327,
	504, 968, 328, 329, 969, 1137, 330, 331, 1138, 1139,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 344, 342, 970, 345, 346, 348, 971, 347,
	1140, 218, 972, 349, 1141, 505, 350, 506, 352, 353,
	1142, 354, 355, 356, 1143, 1144, 358, 359, 360, 1145,
	1146, 361, 362, 507, 973, 363, 974, 508, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 1147, 372, 373,
	509, 374, 510, 375, 1148, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 511, 384, 385, 1149, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 1150, 399, 975, 400, 401, 402, 403, 512,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	1151, 421, 422, 416, 418, 419, 420, 417, 423, 424,
	425, 1152, 426, 406, 407, 427, 428, 976, 429, 430,
	513, 431, 432, 1153, 433, 434, 435, 436, 408, 437,
	441, 442, 438, 439, 440, 514, 1154, 444, 445, 443,
	1155, 446, 447, 448, 449, 450, 279, 451, 1156, 452,
	515, 516, 517, 518, 1157, 459, 1158, 453, 454, 519,
	455, 520, 1159, 456, 457, 458, 0, 460, 461, 1160,
	1161, 462, 463, 464, 465, 466, 468, 1162, 469, 1163,
	467, 470, 471, 472, 521, 522, 523, 1164, 474, 473,
	524, 1165, 1166, 1167, 1168, 475, 476, 525, 477, 478,
	479, 1084, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3283, 0, 219, 220,
	221, 222, 223, 1091, 224, 1092, 1093, 1094, 0, 1095,
	480, 1096, 1097, 1098, 1099, 225, 227, 226, 228, 229,
	481, 482, 230, 483, 233, 231, 232, 484, 1100, 234,
	235, 236, 237, 238, 239, 1101, 1102, 240, 485, 486,
	487, 1103, 241, 488, 1104, 1089, 1105, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 1106, 252,
	0, 253, 254, 255, 1107, 961, 256, 257, 1108, 1109,
	1111, 1110, 1112, 1113, 1114, 258, 259, 260, 261, 262,
	263, 489, 490, 1115, 264, 1116, 266, 265, 1117, 267,
	1118, 1119, 268, 269, 270, 1120, 271, 1121, 272, 273,
	1122, 274, 491, 275, 276, 278, 280, 277, 281, 282,
	283, 284, 492, 493, 1123, 216, 1124, 0, 0, 0,
	0, 285, 286, 287, 494, 288, 289, 0, 290, 1125,
	291, 1126, 1127, 962, 292, 293, 1128, 294, 495, 1129,
	496, 295, 1130, 296, 297, 298, 299, 497, 498, 499,
	351, 964, 300, 301, 1131, 302, 303, 305, 0, 0,
	217, 304, 306, 313, 1132, 963, 307, 500, 309, 308,
	310, 311, 312, 501, 1133, 502, 1134, 314, 965, 503,
	966, 315, 316, 317, 967, 318, 319, 0, 0, 320,
	321, 322, 323, 324, 1135, 326, 325, 1136, 327, 504,
	968, 328, 329, 969, 1137, 330, 331, 1138, 1139, 332,
	333, 334, 0, 335, 336, 338, 340, 337, 339, 341,
	343, 344, 342, 970, 345, 346, 348, 971, 347, 1140,
	218, 972, 349, 1141, 505, 350, 506, 352, 353, 1142,
	354, 355, 356, 1143, 1144, 358, 359, 360, 1145, 1146,
	361, 362, 507, 973, 363, 974, 508, 364, 357, 365,
	366, 367, 368, 369, 370, 371, 1147, 372, 373, 509,
	374, 510, 375, 1148, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 511, 384, 385, 1149, 386, 387, 388,
	389, 390, 0, 392, 393, 394, 391, 395, 396, 397,
	398, 1150, 399, 975, 400, 401, 402, 403, 512, 404,
	0, 405, 409, 410, 411, 412, 413, 414, 415, 1151,
	421, 422, 416, 418, 419, 420, 417, 423, 424, 425,
	1152, 426, 406, 407, 427, 428, 976, 429, 430, 513,
	431, 432, 1153, 433, 434, 435, 436, 408, 437, 441,
	442, 438, 439, 440, 514, 1154, 444, 445, 443, 1155,
	446, 447, 448, 449, 450, 279, 451, 1156, 452, 515,
	516, 517, 518, 1157, 459, 1158, 453, 454, 519, 455,
	520, 1159, 456, 457, 458, 0, 460, 461, 1160, 1161,
	462, 463, 464, 465, 466, 468, 1162, 469, 1163, 467,
	470, 471, 472, 521, 522, 523, 1164, 474, 473, 524,
	1165, 1166, 1167, 1168, 475, 476, 525, 477, 478, 479,
	1084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3164, 0, 219, 220, 221,
	222, 223, 1091, 224, 1092, 1093, 1094, 0, 1095, 480,
	1096, 1097, 1098, 1099, 225, 227, 226, 228, 229, 481,
	482, 230, 483, 233, 231, 232, 484, 1100, 234, 235,
	236, 237, 238, 239, 1101, 1102, 240, 485, 486, 487,
	1103, 241, 488, 1104, 1089, 1105, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 1106, 252, 0,
	253, 254, 255, 1107, 961, 256, 257, 1108, 1109, 1111,
	1110, 1112, 1113, 1114, 258, 259, 260, 261, 262, 263,
	489, 490, 1115, 264, 1116, 266, 265, 1117, 267, 1118,
	1119, 268, 269, 270, 1120, 271, 1121, 272, 273, 1122,
	274, 491, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 492, 493, 1123, 216, 1124, 0, 0, 0, 0,
	285, 286, 287, 494, 288, 289, 0, 290, 1125, 291,
	1126, 1127, 962, 292, 293, 1128, 294, 495, 1129, 496,
	295, 1130, 296, 297, 298, 299, 497, 498, 499, 351,
	964, 300, 301, 1131, 302, 303, 305, 0, 0, 217,
	304, 306, 313, 1132, 963, 307, 500, 309, 308, 310,
	311, 312, 501, 1133, 502, 1134, 314, 965, 503, 966,
	315, 316, 317, 967, 318, 319, 0, 0, 320, 321,
	322, 323, 324, 1135, 326, 325, 1136, 327, 504, 968,
	328, 329, 969, 1137, 330, 331, 1138, 1139, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	344, 342, 970, 345, 346, 348, 971, 347, 1140, 218,
	972, 349, 1141, 505, 350, 506, 352, 353, 1142, 354,
	355, 356, 1143, 1144, 358, 359, 360, 1145, 1146, 361,
	362, 507, 973, 363, 974, 508, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 1147, 372, 373, 509, 374,
	510, 375, 1148, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 511, 384, 385, 1149, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	1150, 399, 975, 400, 401, 402, 403, 512, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 1151, 421,
	422, 416, 418, 419, 420, 417, 423, 424, 425, 1152,
	426, 406, 407, 427, 428, 976, 429, 430, 513, 431,
	432, 1153, 433, 434, 435, 436, 408, 437, 441, 442,
	438, 439, 440, 514, 1154, 444, 445, 443, 1155, 446,
	447, 448, 449, 450, 279, 451, 1156, 452, 515, 516,
	517, 518, 1157, 459, 1158, 453, 454, 519, 455, 520,
	1159, 456, 457, 458, 0, 460, 461, 1160, 1161, 462,
	463, 464, 465, 466, 468, 1162, 469, 1163, 467, 470,
	471, 472, 521, 522, 523, 1164, 474, 473, 524, 1165,
	1166, 1167, 1168, 475, 476, 525, 477, 478, 479, 1084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2959, 0, 219, 220, 221, 222,
	223, 1091, 224, 1092, 1093, 1094, 0, 1095, 480, 1096,
	1097, 1098, 1099, 225, 227, 226, 228, 229, 481, 482,
	230, 483, 233, 231, 232, 484, 1100, 234, 235, 236,
	237, 238, 239, 1101, 1102, 240, 485, 486, 487, 1103,
	241, 488, 1104, 1089, 1105, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 1106, 252, 0, 253,
	254, 255, 1107, 961, 256, 257, 1108, 1109, 1111, 1110,
	1112, 1113, 1114, 258, 259, 260, 261, 262, 263, 489,
	490, 1115, 264, 1116, 266, 265, 1117, 267, 1118, 1119,
	268, 269, 270, 1120, 271, 1121, 272, 273, 1122, 274,
	491, 275, 276, 278, 280, 277, 281, 282, 283, 284,
	492, 493, 1123, 216, 1124, 0, 0, 0, 0, 285,
	286, 287, 494, 288, 289, 0, 290, 1125, 291, 1126,
	1127, 962, 292, 293, 1128, 294, 495, 1129, 496, 295,
	1130, 296, 297, 298, 299, 497, 498, 499, 351, 964,
	300, 301, 1131, 302, 303, 305, 0, 0, 217, 304,
	306, 313, 1132, 963, 307, 500, 309, 308, 310, 311,
	312, 501, 1133, 502, 1134, 314, 965, 503, 966, 315,
	316, 317, 967, 318, 319, 0, 0, 320, 321, 322,
	323, 324, 1135, 326, 325, 1136, 327, 504, 968, 328,
	329, 969, 1137, 330, 331, 1138, 1139, 332, 333, 334,
	0, 335, 336, 338, 340, 337, 339, 341, 343, 344,
	342, 970, 345, 346, 348, 971, 347, 1140, 218, 972,
	349, 1141, 505, 350, 506, 352, 353, 1142, 354, 355,
	356, 1143, 1144, 358, 359, 360, 1145, 1146, 361, 362,
	507, 973, 363, 974, 508, 364, 357, 365, 366, 367,
	368, 369, 370, 371, 1147, 372, 373, 509, 374, 510,
	375, 1148, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 511, 384, 385, 1149, 386, 387, 388, 389, 390,
	0, 392, 393, 394, 391, 395, 396, 397, 398, 1150,
	399, 975, 400, 401, 402, 403, 512, 404, 0, 405,
	409, 410, 411, 412, 413, 414, 415, 1151, 421, 422,
	416, 418, 419, 420, 417, 423, 424, 425, 1152, 426,
	406, 407, 427, 428, 976, 429, 430, 513, 431, 432,
	1153, 433, 434, 435, 436, 408, 437, 441, 442, 438,
	439, 440, 514, 1154, 444, 445, 443, 1155, 446, 447,
	448, 449, 450, 279, 451, 1156, 452, 515, 516, 517,
	518, 1157, 459, 1158, 453, 454, 519, 455, 520, 1159,
	456, 457, 458, 0, 460, 461, 1160, 1161, 462, 463,
	464, 465, 466, 468, 1162, 469, 1163, 467, 470, 471,
	472, 521, 522, 523, 1164, 474, 473, 524, 1165, 1166,
	1167, 1168, 475, 476, 525, 477, 478, 479, 1084, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2942, 0, 219, 220, 221, 222, 223,
	1091, 224, 1092, 1093, 1094, 0, 1095, 480, 1096, 1097,
	1098, 1099, 225, 227, 226, 228, 229, 481, 482, 230,
	483, 233, 231, 232, 484, 1100, 234, 235, 236, 237,
	238, 239, 1101, 1102, 240, 485, 486, 487, 1103, 241,
	488, 1104, 1089, 1105, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 1106, 252, 0, 253, 254,
	255, 1107, 961, 256, 257, 1108, 1109, 1111, 1110, 1112,
	1113, 1114, 258, 259, 260, 261, 262, 263, 489, 490,
	1115, 264, 1116, 266, 265, 1117, 267, 1118, 1119, 268,
	269, 270, 1120, 271, 1121, 272, 273, 1122, 274, 491,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 492,
	493, 1123, 216, 1124, 0, 0, 0, 0, 285, 286,
	287, 494, 288, 289, 0, 290, 1125, 291, 1126, 1127,
	962, 292, 293, 1128, 294, 495, 1129, 496, 295, 1130,
	296, 297, 298, 299, 497, 498, 499, 351, 964, 300,
	301, 1131, 302, 303, 305, 0, 0, 217, 304, 306,
	313, 1132, 963, 307, 500, 309, 308, 310, 311, 312,
	501, 1133, 502, 1134, 314, 965, 503, 966, 315, 316,
	317, 967, 318, 319, 0, 0, 320, 321, 322, 323,
	324, 1135, 326, 325, 1136, 327, 504, 968, 328, 329,
	969, 1137, 330, 331, 1138, 1139, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 344, 342,
	970, 345, 346, 348, 971, 347, 1140, 218, 972, 349,
	1141, 505, 350, 506, 352, 353, 1142, 354, 355, 356,
	1143, 1144, 358, 359, 360, 1145, 1146, 361, 362, 507,
	973, 363, 974, 508, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 1147, 372, 373, 509, 374, 510, 375,
	1148, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	511, 384, 385, 1149, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 1150, 399,
	975, 400, 401, 402, 403, 512, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 1151, 421, 422, 416,
	418, 419, 420, 417, 423, 424, 425, 1152, 426, 406,
	407, 427, 428, 976, 429, 430, 513, 431, 432, 1153,
	433, 434, 435, 436, 408, 437, 441, 442, 438, 439,
	440, 514, 1154, 444, 445, 443, 1155, 446, 447, 448,
	449, 450, 279, 451, 1156, 452, 515, 516, 517, 518,
	1157, 459, 1158, 453, 454, 519, 455, 520, 1159, 456,
	457, 458, 0, 460, 461, 1160, 1161, 462, 463, 464,
	465, 466, 468, 1162, 469, 1163, 467, 470, 471, 472,
	521, 522, 523, 1164, 474, 473, 524, 1165, 1166, 1167,
	1168, 475, 476, 525, 477, 478, 479, 1084, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2811, 0, 219, 220, 221, 222, 223, 1091,
	224, 1092, 1093, 1094, 0, 1095, 480, 1096, 1097, 1098,
	1099, 225, 227, 226, 228, 229, 481, 482, 230, 483,
	233, 231, 232, 484, 1100, 234, 235, 236, 237, 238,
	239, 1101, 1102, 240, 485, 486, 487, 1103, 241, 488,
	1104, 1089, 1105, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 1106, 252, 0, 253, 254, 255,
	1107, 961, 256, 257, 1108, 1109, 1111, 1110, 1112, 1113,
	1114, 258, 259, 260, 261, 262, 263, 489, 490, 1115,
	264, 1116, 266, 265, 1117, 267, 1118, 1119, 268, 269,
	270, 1120, 271, 1121, 272, 273, 1122, 274, 491, 275,
	276, 278, 280, 277, 281, 282, 283, 284, 492, 493,
	1123, 216, 1124, 0, 0, 0, 0, 285, 286, 287,
	494, 288, 289, 0, 290, 1125, 291, 1126, 1127, 962,
	292, 293, 1128, 294, 495, 1129, 496, 295, 1130, 296,
	297, 298, 299, 497, 498, 499, 351, 964, 300, 301,
	1131, 302, 303, 305, 0, 0, 217, 304, 306, 313,
	1132, 963, 307, 500, 309, 308, 310, 311, 312, 501,
	1133, 502, 1134, 314, 965, 503, 966, 315, 316, 317,
	967, 318, 319, 0, 0, 320, 321, 322, 323, 324,
	1135, 326, 325, 1136, 327, 504, 968, 328, 329, 969,
	1137, 330, 331, 1138, 1139, 332, 333, 334, 0, 335,
	336, 338, 340, 337, 339, 341, 343, 344, 342, 970,
	345, 346, 348, 971, 347, 1140, 218, 972, 349, 1141,
	505, 350, 506, 352, 353, 1142, 354, 355, 356, 1143,
	1144, 358, 359, 360, 1145, 1146, 361, 362, 507, 973,
	363, 974, 508, 364, 357, 365, 366, 367, 368, 369,
	370, 371, 1147, 372, 373, 509, 374, 510, 375, 1148,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 511,
	384, 385, 1149, 386, 387, 388, 389, 390, 0, 392,
	393, 394, 391, 395, 396, 397, 398, 1150, 399, 975,
	400, 401, 402, 403, 512, 404, 0, 405, 409, 410,
	411, 412, 413, 414, 415, 1151, 421, 422, 416, 418,
	419, 420, 417, 423, 424, 425, 1152, 426, 406, 407,
	427, 428, 976, 429, 430, 513, 431, 432, 1153, 433,
	434, 435, 436, 408, 437, 441, 442, 438, 439, 440,
	514, 1154, 444, 445, 443, 1155, 446, 447, 448, 449,
	450, 279, 451, 1156, 452, 515, 516, 517, 518, 1157,
	459, 1158, 453, 454, 519, 455, 520, 1159, 456, 457,
	458, 0, 460, 461, 1160, 1161, 462, 463, 464, 465,
	466, 468, 1162, 469, 1163, 467, 470, 471, 472, 521,
	522, 523, 1164, 474, 473, 524, 1165, 1166, 1167, 1168,
	475, 476, 525, 477, 478, 479, 1084, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2131, 0, 219, 220, 221, 222, 223, 1091, 224,
	1092, 1093, 1094, 0, 1095, 480, 1096, 1097, 1098, 1099,
	225, 227, 226, 228, 229, 481, 482, 230, 483, 233,
	231, 232, 484, 1100, 234, 235, 236, 237, 238, 239,
	1101, 1102, 240, 485, 486, 487, 1103, 241, 488, 1104,
	1089, 1105, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 1106, 252, 0, 253, 254, 255, 1107,
	961, 256, 257, 1108, 1109, 1111, 1110, 1112, 1113, 1114,
	258, 259, 260, 261, 262, 263, 489, 490, 1115, 264,
	1116, 266, 265, 1117, 267, 1118, 1119, 268, 269, 270,
	1120, 271, 1121, 272, 273, 1122, 274, 491, 275, 276,
	278, 280, 277, 281, 282, 283, 284, 492, 493, 1123,
	216, 1124, 0, 0, 0, 0, 285, 286, 287, 494,
	288, 289, 0, 290, 1125, 291, 1126, 1127, 962, 292,
	293, 1128, 294, 495, 1129, 496, 295, 1130, 296, 297,
	298, 299, 497, 498, 499, 351, 964, 300, 301, 1131,
	302, 303, 305, 0, 0, 217, 304, 306, 313, 1132,
	963, 307, 500, 309, 308, 310, 311, 312, 501, 1133,
	502, 1134, 314, 965, 503, 966, 315, 316, 317, 967,
	318, 319, 0, 0, 320, 321, 322, 323, 324, 1135,
	326, 325, 1136, 327, 504, 968, 328, 329, 969, 1137,
	330, 331, 1138, 1139, 332, 333, 334, 0, 335, 336,
	338, 340, 337, 339, 341, 343, 344, 342, 970, 345,
	346, 348, 971, 347, 1140, 218, 972, 349, 1141, 505,
	350, 506, 352, 353, 1142, 354, 355, 356, 1143, 1144,
	358, 359, 360, 1145, 1146, 361, 362, 507, 973, 363,
	974, 508, 364, 357, 365, 366, 367, 368, 369, 370,
	371, 1147, 372, 373, 509, 374, 510, 375, 1148, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 511, 384,
	385, 1149, 386, 387, 388, 389, 390, 0, 392, 393,
	394, 391, 395, 396, 397, 398, 1150, 399, 975, 400,
	401, 402, 403, 512, 404, 0, 405, 409, 410, 411,
	412, 413, 414, 415, 1151, 421, 422, 416, 418, 419,
	420, 417, 423, 424, 425, 1152, 426, 406, 407, 427,
	428, 976, 429, 430, 513, 431, 432, 1153, 433, 434,
	435, 436, 408, 437, 441, 442, 438, 439, 440, 514,
	1154, 444, 445, 443, 1155, 446, 447, 448, 449, 450,
	279, 451, 1156, 452, 515, 516, 517, 518, 1157, 459,
	1158, 453, 454, 519, 455, 520, 1159, 456, 457, 458,
	0, 460, 461, 1160, 1161, 462, 463, 464, 465, 466,
	468, 1162, 469, 1163, 467, 470, 471, 472, 521, 522,
	523, 1164, 474, 473, 524, 1165, 1166, 1167, 1168, 475,
	476, 525, 477, 478, 479, 1192, 0, 1084, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 219, 220, 221, 222, 223, 1091,
	224, 1092, 1093, 1094, 0, 1095, 480, 1096, 1097, 1098,
	1099, 225, 227, 226, 228, 229, 481, 482, 230, 483,
	233, 231, 232, 484, 1100, 234, 235, 236, 237, 238,
	239, 1101, 1102, 240, 485, 486, 487, 1103, 241, 488,
	1104, 1089, 1105, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 1106, 252, 0, 253, 254, 255,
	1107, 961, 256, 257, 1108, 1109, 1111, 1110, 1112, 1113,
	1114, 258, 259, 260, 261, 262, 263, 489, 490, 1115,
	264, 1116, 266, 265, 1117, 267, 1118, 1119, 268, 269,
	270, 1120, 271, 1121, 272, 273, 1122, 274, 491, 275,
	276, 278, 280, 277, 281, 282, 283, 284, 492, 493,
	1123, 216, 1124, 0, 0, 0, 0, 285, 286, 287,
	494, 288, 289, 0, 290, 1125, 291, 1126, 1127, 962,
	292, 293, 1128, 294, 495, 1129, 496, 295, 1130, 296,
	297, 298, 299, 497, 498, 499, 351, 964, 300, 301,
	1131, 302, 303, 305, 0, 0, 217, 304, 306, 313,
	1132, 963, 307, 500, 309, 308, 310, 311, 312, 501,
	1133, 502, 1134, 314, 965, 503, 966, 315, 316, 317,
	967, 318, 319, 0, 0, 320, 321, 322, 323, 324,
	1135, 326, 325, 1136, 327, 504, 968, 328, 329, 969,
	1137, 330, 331, 1138, 1139, 332, 333, 334, 0, 335,
	336, 338, 340, 337, 339, 341, 343, 344, 342, 970,
	345, 346, 348, 971, 347, 1140, 218, 972, 349, 1141,
	505, 350, 506, 352, 353, 1142, 354, 355, 356, 1143,
	1144, 358, 359, 360, 1145, 1146, 361, 362, 507, 973,
	363, 974, 508, 364, 357, 365, 366, 367, 368, 369,
	370, 371, 1147, 372, 373, 509, 374, 510, 375, 1148,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 511,
	384, 385, 1149, 386, 387, 388, 389, 390, 0, 392,
	393, 394, 391, 395, 396, 397, 398, 1150, 399, 975,
	400, 401, 402, 403, 512, 404, 0, 405, 409, 410,
	411, 412, 413, 414, 415, 1151, 421, 422, 416, 418,
	419, 420, 417, 423, 424, 425, 1152, 426, 406, 407,
	427, 428, 976, 429, 430, 513, 431, 432, 1153, 433,
	434, 435, 436, 408, 437, 441, 442, 438, 439, 440,
	514, 1154, 444, 445, 443, 1155, 446, 447, 448, 449,
	450, 279, 451, 1156, 452, 515, 516, 517, 518, 1157,
	459, 1158, 453, 454, 519, 455, 520, 1159, 456, 457,
	458, 0, 460, 461, 1160, 1161, 462, 463, 464, 465,
	466, 468, 1162, 469, 1163, 467, 470, 471, 472, 521,
	522, 523, 1164, 474, 473, 524, 1165, 1166, 1167, 1168,
	475, 476, 525, 477, 478, 479, 1081, 0, 1084, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	1091, 224, 1092, 1093, 1094, 0, 1095, 480, 1096, 1097,
	1098, 1099, 225, 227, 226, 228, 229, 481, 482, 230,
	483, 233, 231, 232, 484, 1100, 234, 235, 236, 237,
	238, 239, 1101, 1102, 240, 485, 486, 487, 1103, 241,
	488, 1104, 1089, 1105, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 1106, 252, 0, 253, 254,
	255, 1107, 961, 256, 257, 1108, 1109, 1111, 1110, 1112,
	1113, 1114, 258, 259, 260, 261, 262, 263, 489, 490,
	1115, 264, 1116, 266, 265, 1117, 267, 1118, 1119, 268,
	269, 270, 1120, 271, 1121, 272, 273, 1122, 274, 491,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 492,
	493, 1123, 216, 1124, 0, 0, 0, 0, 285, 286,
	287, 494, 288, 289, 0, 290, 1125, 291, 1126, 1127,
	962, 292, 293, 1128, 294, 495, 1129, 496, 295, 1130,
	296, 297, 298, 299, 497, 498, 499, 351, 964, 300,
	301, 1131, 302, 303, 305, 0, 0, 217, 304, 306,
	313, 1132, 963, 307, 500, 309, 308, 310, 311, 312,
	501, 1133, 502, 1134, 314, 965, 503, 966, 315, 316,
	317, 967, 318, 319, 0, 0, 320, 321, 322, 323,
	324, 1135, 326, 325, 1136, 327, 504, 968, 328, 329,
	969, 1137, 330, 331, 1138, 1139, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 344, 342,
	970, 345, 346, 348, 971, 347, 1140, 218, 972, 349,
	1141, 505, 350, 506, 352, 353, 1142, 354, 355, 356,
	1143, 1144, 358, 359, 360, 1145, 1146, 361, 362, 507,
	973, 363, 974, 508, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 1147, 372, 373, 509, 374, 510, 375,
	1148, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	511, 384, 385, 1149, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 1150, 399,
	975, 400, 401, 402, 403, 512, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 1151, 421, 422, 416,
	418, 419, 420, 417, 423, 424, 425, 1152, 426, 406,
	407, 427, 428, 976, 429, 430, 513, 431, 432, 1153,
	433, 434, 435, 436, 408, 437, 441, 442, 438, 439,
	440, 514, 1154, 444, 445, 443, 1155, 446, 447, 448,
	449, 450, 279, 451, 1156, 452, 515, 516, 517, 518,
	1157, 459, 1158, 453, 454, 519, 455, 520, 1159, 456,
	457, 458, 0, 460, 461, 1160, 1161, 462, 463, 464,
	465, 466, 468, 1162, 469, 1163, 467, 470, 471, 472,
	521, 522, 523, 1164, 474, 473, 524, 1165, 1166, 1167,
	1168, 475, 476, 525, 477, 478, 479, 1084, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 1091,
	224, 1092, 1093, 1094, 0, 1095, 480, 1096, 1097, 1098,
	1099, 225, 227, 226, 228, 229, 481, 482, 230, 483,
	233, 231, 232, 484, 1100, 234, 235, 236, 237, 238,
	239, 1101, 1102, 240, 485, 486, 487, 1103, 241, 488,
	1104, 1089, 1105, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 1106, 252, 0, 253, 254, 255,
	1107, 961, 256, 257, 1108, 1109, 1111, 1110, 1112, 1113,
	1114, 258, 259, 260, 261, 262, 263, 489, 490, 1115,
	264, 1116, 266, 265, 1117, 267, 1118, 1119, 268, 269,
	270, 1120, 271, 1121, 272, 273, 1122, 274, 491, 275,
	276, 278, 280, 277, 281, 282, 283, 284, 492, 493,
	1123, 216, 1124, 0, 0, 0, 0, 285, 286, 287,
	494, 288, 289, 0, 290, 1125, 291, 1126, 1127, 962,
	292, 293, 1128, 294, 495, 1129, 496, 295, 1130, 296,
	297, 298, 299, 497, 498, 499, 351, 964, 300, 301,
	1131, 302, 303, 305, 0, 0, 217, 304, 306, 313,
	1132, 963, 307, 500, 309, 308, 310, 311, 312, 501,
	1133, 502, 1134, 314, 965, 503, 966, 315, 316, 317,
	967, 318, 319, 0, 0, 320, 321, 322, 323, 324,
	1135, 326, 325, 1136, 327, 504, 968, 328, 329, 969,
	1137, 330, 331, 1138, 1139, 332, 333, 334, 0, 335,
	336, 338, 340, 337, 339, 341, 343, 344, 342, 970,
	345, 346, 348, 971, 347, 1140, 218, 972, 349, 1141,
	505, 350, 506, 352, 353, 1142, 354, 355, 356, 1143,
	1144, 358, 359, 360, 1145, 1146, 361, 362, 507, 973,
	363, 974, 508, 364, 357, 365, 366, 367, 368, 369,
	370, 371, 1147, 372, 373, 509, 374, 510, 375, 1148,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 511,
	384, 385, 1149, 386, 387, 388, 389, 390, 0, 392,
	393, 394, 391, 395, 396, 397, 398, 1150, 399, 975,
	400, 401, 402, 403, 512, 404, 0, 405, 409, 410,
	411, 412, 413, 414, 415, 1151, 421, 422, 416, 418,
	419, 420, 417, 423, 424, 425, 1152, 426, 406, 407,
	427, 428, 976, 429, 430, 513, 431, 432, 1153, 433,
	434, 435, 436, 408, 437, 441, 442, 438, 439, 440,
	514, 1154, 444, 445, 443, 1155, 446, 447, 448, 449,
	450, 279, 451, 1156, 452, 515, 516, 517, 518, 1157,
	459, 1158, 453, 454, 519, 455, 520, 1159, 456, 457,
	458, 0, 460, 461, 1160, 1161, 462, 463, 464, 465,
	466, 468, 1162, 469, 1163, 467, 470, 471, 472, 521,
	522, 523, 1164, 474, 473, 524, 1165, 1166, 1167, 1168,
	475, 476, 525, 477, 478, 479, 2106, 0, 901, 859,
	860, 861, 857, 858, 870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	2103, 224, 0, 0, 0, 0, 0, 952, 875, 0,
	0, 0, 225, 227, 226, 228, 229, 481, 916, 895,
	927, 233, 885, 926, 925, 0, 234, 887, 886, 237,
	238, 239, 877, 951, 240, 988, 989, 487, 0, 241,
	958, 0, 939, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 961, 256, 257, 942, 940, 941, 948, 944,
	943, 947, 258, 259, 260, 261, 930, 263, 923, 922,
	848, 264, 0, 266, 265, 0, 267, 2104, 0, 268,
	921, 270, 0, 271, 0, 272, 273, 0, 274, 854,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 979,
	980, 866, 216, 0, 0, 0, 0, 0, 285, 286,
	287, 920, 918, 919, 0, 290, 0, 291, 0, 0,
	962, 292, 293, 0, 294, 986, 0, 876, 295, 0,
	296, 297, 298, 299, 953, 954, 957, 351, 964, 300,
	301, 0, 302, 303, 897, 0, 0, 217, 304, 306,
	313, 0, 963, 307, 909, 900, 911, 913, 914, 915,
	910, 0, 902, 0, 314, 965, 955, 966, 315, 316,
	317, 967, 935, 936, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 987, 968, 328, 329,
	969, 0, 330, 331, 946, 945, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 889, 342,
	970, 345, 346, 348, 971, 347, 845, 218, 972, 349,
	867, 956, 350, 924, 352, 353, 0, 898, 355, 899,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	973, 363, 974, 981, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 982, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	917, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	975, 400, 401, 402, 403, 855, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 0, 421, 422, 890,
	891, 893, 894, 417, 423, 424, 425, 949, 426, 406,
	407, 427, 428, 976, 429, 430, 912, 892, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 960, 438, 439,
	440, 983, 0, 444, 445, 443, 0, 446, 447, 448,
	449, 450, 279, 888, 0, 452, 931, 932, 933, 934,
	0, 459, 0, 453, 454, 984, 455, 985, 865, 456,
	457, 458, 0, 460, 461, 0, 849, 462, 463, 464,
	465, 466, 468, 950, 469, 0, 896, 470, 471, 472,
	521, 928, 978, 2102, 474, 473, 524, 0, 0, 0,
	0, 475, 476, 525, 477, 478, 479, 846, 0, 0,
	0, 0, 0, 844, 0, 0, 0, 0, 0, 0,
	842, 843, 2105, 0, 0, 0, 0, 0, 0, 871,
	2101, 0, 835, 869, 901, 859, 860, 861, 857, 858,
	870, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 952, 875, 0, 0, 0, 225, 227,
	226, 228, 229, 481, 916, 895, 927, 233, 885, 926,
	925, 0, 234, 887, 886, 237, 238, 239, 877, 951,
	240, 988, 989, 487, 0, 241, 958, 0, 939, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 961, 256,
	257, 942, 940, 941, 948, 944, 943, 947, 258, 259,
	260, 261, 930, 263, 923, 922, 848, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 921, 270, 0, 271,
	0, 272, 273, 0, 274, 854, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 979, 980, 866, 216, 0,
	0, 0, 0, 0, 285, 286, 287, 920, 918, 919,
	0, 290, 0, 291, 0, 0, 962, 292, 293, 0,
	294, 986, 0, 876, 295, 0, 296, 297, 298, 299,
	953, 954, 957, 351, 964, 300, 301, 0, 302, 303,
	897, 0, 0, 217, 304, 306, 313, 0, 963, 307,
	909, 900, 911, 913, 914, 915, 910, 0, 902, 0,
	314, 965, 955, 966, 315, 316, 317, 967, 935, 936,
	0, 0, 320, 321, 322, 323, 324, 0, 326, 325,
	0, 327, 987, 968, 328, 329, 969, 0, 330, 331,
	946, 945, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 889, 342, 970, 345, 346, 348,
	971, 347, 845, 218, 972, 349, 867, 956, 350, 924,
	352, 353, 0, 898, 355, 899, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 507, 973, 363, 974, 981,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 982, 374, 510, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 917, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 975, 400, 401, 402,
	403, 855, 404, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 182, 421, 422, 890, 891, 893, 894, 417,
	423, 424, 425, 949, 426, 406, 407, 427, 428, 976,
	429, 430, 912, 892, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 960, 438, 439, 440, 983, 0, 444,
	445, 443, 184, 446, 447, 448, 449, 450, 279, 888,
	0, 452, 931, 932, 933, 934, 0, 459, 0, 453,
	454, 984, 455, 985, 865, 456, 457, 458, 0, 460,
	461, 0, 849, 462, 463, 464, 465, 466, 468, 950,
	469, 0, 896, 470, 471, 472, 1336, 928, 978, 0,
	474, 473, 524, 0, 0, 0, 176, 475, 476, 525,
	477, 478, 479, 846, 177, 0, 0, 0, 0, 844,
	0, 0, 0, 0, 0, 0, 842, 843, 901, 859,
	860, 861, 857, 858, 870, 1545, 1543, 0, 0, 869,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 952, 875, 0,
	0, 0, 225, 227, 226, 228, 229, 481, 916, 895,
	927, 233, 885, 926, 925, 0, 234, 887, 886, 237,
	238, 239, 877, 951, 240, 988, 989, 487, 0, 241,
	958, 0, 939, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 961, 256, 257, 942, 940, 941, 948, 944,
	943, 947, 258, 259, 260, 261, 930, 263, 923, 922,
	848, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	921, 270, 0, 271, 0, 272, 273, 0, 274, 854,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 979,
	980, 866, 216, 0, 0, 0, 0, 0, 285, 286,
	287, 920, 918, 919, 0, 290, 0, 291, 0, 0,
	962, 292, 293, 0, 294, 986, 0, 876, 295, 0,
	296, 297, 298, 299, 953, 954, 957, 351, 964, 300,
	301, 0, 302, 303, 897, 0, 0, 217, 304, 306,
	313, 0, 963, 307, 909, 900, 911, 913, 914, 915,
	910, 0, 902, 0, 314, 965, 955, 966, 315, 316,
	317, 967, 935, 936, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 987, 968, 328, 329,
	969, 0, 330, 331, 946, 945, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 889, 342,
	970, 345, 346, 348, 971, 347, 845, 218, 972, 349,
	867, 956, 350, 924, 352, 353, 0, 898, 355, 899,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	973, 363, 974, 981, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 982, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	917, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	975, 400, 401, 402, 403, 855, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 182, 421, 422, 890,
	891, 893, 894, 417, 423, 424, 425, 949, 426, 406,
	407, 427, 428, 976, 429, 430, 912, 892, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 960, 438, 439,
	440, 983, 0, 444, 445, 443, 184, 446, 447, 448,
	449, 450, 279, 888, 0, 452, 931, 932, 933, 934,
	0, 459, 0, 453, 454, 984, 455, 985, 865, 456,
	457, 458, 0, 460, 461, 0, 849, 462, 463, 464,
	465, 466, 468, 950, 469, 0, 896, 470, 471, 472,
	1336, 928, 978, 0, 474, 473, 524, 0, 0, 0,
	176, 475, 476, 525, 477, 478, 479, 846, 177, 0,
	0, 0, 0, 844, 0, 0, 0, 0, 0, 0,
	842, 843, 901, 859, 860, 861, 857, 858, 870, 1545,
	2560, 0, 0, 869, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 952, 875, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 916, 895, 927, 233, 885, 926, 925, 0,
	234, 887, 886, 237, 238, 239, 877, 951, 240, 988,
	989, 487, 0, 241, 958, 0, 939, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 961, 256, 257, 942,
	940, 941, 948, 944, 943, 947, 258, 259, 260, 261,
	930, 263, 923, 922, 848, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 921, 270, 0, 271, 0, 272,
	273, 0, 274, 854, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 979, 980, 866, 216, 0, 0, 0,
	0, 0, 285, 286, 287, 920, 918, 919, 0, 290,
	0, 291, 0, 0, 962, 292, 293, 0, 294, 986,
	0, 876, 295, 0, 296, 297, 298, 299, 953, 954,
	957, 351, 964, 300, 301, 0, 302, 303, 897, 0,
	0, 217, 304, 306, 313, 0, 963, 307, 909, 900,
	911, 913, 914, 915, 910, 0, 902, 0, 314, 965,
	955, 966, 315, 316, 317, 967, 935, 936, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	987, 968, 328, 329, 969, 0, 330, 331, 946, 945,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 889, 342, 970, 345, 346, 348, 971, 347,
	845, 218, 972, 349, 867, 956, 350, 924, 352, 353,
	0, 898, 355, 899, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 973, 363, 974, 981, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	982, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 917, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 975, 400, 401, 402, 403, 855,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	182, 421, 422, 890, 891, 893, 894, 417, 423, 424,
	425, 949, 426, 406, 407, 427, 428, 976, 429, 430,
	912, 892, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 960, 438, 439, 440, 983, 0, 444, 445, 443,
	184, 446, 447, 448, 449, 450, 279, 888, 0, 452,
	931, 932, 933, 934, 0, 459, 0, 453, 454, 984,
	455, 985, 865, 456, 457, 458, 0, 460, 461, 0,
	849, 462, 463, 464, 465, 466, 468, 950, 469, 0,
	896, 470, 471, 472, 1336, 928, 978, 0, 474, 473,
	524, 0, 0, 0, 176, 475, 476, 525, 477, 478,
	479, 846, 177, 0, 0, 0, 0, 844, 0, 0,
	0, 0, 0, 0, 842, 843, 901, 859, 860, 861,
	857, 858, 870, 1545, 1543, 0, 0, 869, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 952, 875, 0, 0, 0,
	225, 227, 226, 228, 229, 481, 916, 895, 927, 233,
	885, 926, 925, 2200, 234, 887, 886, 237, 238, 239,
	877, 951, 240, 988, 989, 487, 0, 241, 958, 0,
	939, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	961, 256, 257, 942, 940, 941, 948, 944, 943, 947,
	258, 259, 260, 261, 930, 263, 923, 922, 848, 264,
	0, 266, 265, 0, 267, 0, 0, 268, 921, 270,
	0, 271, 0, 272, 273, 0, 274, 854, 275, 276,
	278, 280, 277, 281, 282, 283, 284, 979, 980, 866,
	216, 0, 0, 0, 0, 0, 285, 286, 287, 920,
	918, 919, 0, 290, 0, 291, 0, 2205, 962, 292,
	293, 0, 294, 986, 0, 876, 295, 0, 296, 297,
	298, 299, 953, 954, 957, 351, 964, 300, 301, 0,
	302, 303, 897, 0, 0, 217, 304, 306, 313, 0,
	963, 307, 909, 900, 911, 913, 914, 915, 910, 0,
	902, 0, 314, 965, 955, 966, 315, 316, 317, 967,
	935, 936, 0, 0, 320, 321, 322, 323, 324, 0,
	326, 325, 2201, 327, 987, 968, 328, 329, 969, 0,
	330, 331, 946, 945, 332, 333, 334, 0, 335, 336,
	338, 340, 337, 339, 341, 343, 889, 342, 970, 345,
	346, 348, 971, 347, 845, 218, 972, 349, 867, 956,
	350, 924, 352, 353, 0, 898, 355, 899, 0, 0,
	358, 359, 360, 0, 0, 361, 362, 507, 973, 363,
	974, 981, 364, 357, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 982, 374, 510, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 917, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 392, 393,
	394, 391, 395, 396, 397, 398, 0, 399, 975, 400,
	401, 402, 403, 855, 404, 0, 405, 409, 410, 411,
	412, 413, 414, 415, 0, 421, 422, 890, 891, 893,
	894, 417, 423, 424, 425, 949, 426, 406, 407, 427,
	428, 976, 429, 430, 912, 892, 432, 0, 433, 434,
	435, 436, 408, 437, 441, 960, 438, 439, 440, 983,
	0, 444, 445, 443, 0, 446, 447, 448, 449, 450,
	279, 888, 0, 452, 931, 932, 933, 934, 0, 459,
	2202, 453, 454, 984, 455, 985, 865, 456, 457, 458,
	0, 460, 461, 0, 849, 462, 463, 464, 465, 466,
	468, 950, 469, 0, 896, 470, 471, 472, 521, 928,
	978, 0, 474, 473, 524, 0, 0, 0, 0, 475,
	476, 525, 477, 478, 479, 846, 0, 0, 0, 0,
	0, 844, 0, 0, 0, 0, 0, 0, 842, 843,
	0, 0, 0, 0, 0, 0, 0, 871, 0, 0,
	2159, 869, 901, 859, 860, 861, 857, 858, 870, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 952, 875, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 916, 895, 927, 233, 885, 926, 925, 0,
	234, 887, 886, 237, 238, 239, 877, 951, 240, 988,
	989, 487, 0, 241, 958, 0, 939, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 961, 256, 257, 942,
	940, 941, 948, 944, 943, 947, 258, 259, 260, 261,
	930, 263, 923, 922, 848, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 921, 270, 0, 271, 0, 272,
	273, 0, 274, 854, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 979, 980, 866, 216, 0, 0, 0,
	0, 0, 285, 286, 287, 920, 918, 919, 0, 290,
	0, 291, 0, 0, 962, 292, 293, 0, 294, 986,
	0, 876, 295, 0, 296, 297, 298, 299, 953, 954,
	957, 351, 964, 300, 301, 0, 302, 303, 897, 0,
	0, 217, 304, 306, 313, 0, 963, 307, 909, 900,
	911, 913, 914, 915, 910, 0, 902, 0, 314, 965,
	955, 966, 315, 316, 317, 967, 935, 936, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	987, 968, 328, 329, 969, 0, 330, 331, 946, 945,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 889, 342, 970, 345, 346, 348, 971, 347,
	845, 218, 972, 349, 867, 956, 350, 924, 352, 353,
	0, 898, 355, 899, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 973, 363, 974, 981, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	982, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 917, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 975, 400, 401, 402, 403, 855,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 890, 891, 893, 894, 417, 423, 424,
	425, 949, 426, 406, 407, 427, 428, 976, 429, 430,
	912, 892, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 960, 438, 439, 440, 983, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 888, 0, 452,
	931, 932, 933, 934, 0, 459, 0, 453, 454, 984,
	455, 985, 865, 456, 457, 458, 0, 460, 461, 0,
	849, 462, 463, 464, 465, 466, 468, 950, 469, 0,
	896, 470, 471, 472, 521, 928, 978, 0, 474, 473,
	524, 0, 0, 0, 0, 475, 476, 525, 477, 478,
	479, 846, 0, 0, 0, 0, 0, 844, 0, 0,
	0, 0, 0, 0, 842, 843, 0, 0, 0, 0,
	0, 0, 0, 871, 2157, 0, 2156, 869, 901, 859,
	860, 861, 857, 858, 870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 952, 875, 0,
	0, 0, 225, 227, 226, 228, 229, 481, 916, 895,
	927, 233, 885, 926, 925, 0, 234, 887, 886, 237,
	238, 239, 877, 951, 240, 988, 989, 487, 0, 241,
	958, 0, 939, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 961, 256, 257, 942, 940, 941, 948, 944,
	943, 947, 258, 259, 260, 261, 930, 263, 923, 922,
	848, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	921, 270, 0, 271, 0, 272, 273, 0, 274, 854,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 979,
	980, 866, 216, 0, 0, 0, 0, 0, 285, 286,
	287, 920, 918, 919, 0, 290, 0, 291, 0, 0,
	962, 292, 293, 0, 294, 986, 0, 876, 295, 0,
	296, 297, 298, 299, 953, 954, 957, 351, 964, 300,
	301, 0, 302, 303, 897, 0, 0, 217, 304, 306,
	313, 0, 963, 307, 909, 900, 911, 913, 914, 915,
	910, 0, 902, 0, 314, 965, 955, 966, 315, 316,
	317, 967, 935, 936, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 987, 968, 328, 329,
	969, 0, 330, 331, 946, 945, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 889, 342,
	970, 345, 346, 348, 971, 347, 845, 218, 972, 349,
	867, 956, 350, 924, 352, 353, 0, 898, 355, 899,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	973, 363, 974, 981, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 982, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	917, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	975, 400, 401, 402, 403, 855, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 0, 421, 422, 890,
	891, 893, 894, 417, 423, 424, 425, 949, 426, 406,
	407, 427, 428, 976, 429, 430, 912, 892, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 960, 438, 439,
	440, 983, 0, 444, 445, 443, 0, 446, 447, 448,
	449, 450, 279, 888, 0, 452, 931, 932, 933, 934,
	0, 459, 0, 453, 454, 984, 455, 985, 865, 456,
	457, 458, 0, 460, 461, 0, 849, 462, 463, 464,
	465, 466, 468, 950, 469, 0, 896, 470, 471, 472,
	521, 928, 978, 0, 474, 473, 524, 0, 0, 0,
	0, 475, 476, 525, 477, 478, 479, 846, 0, 0,
	0, 0, 0, 844, 0, 0, 0, 0, 0, 0,
	842, 843, 0, 0, 0, 0, 0, 0, 0, 871,
	2154, 0, 2153, 869, 901, 859, 860, 861, 857, 858,
	870, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 952, 875, 0, 0, 0, 225, 227,
	226, 228, 229, 481, 916, 895, 927, 233, 885, 926,
	925, 0, 234, 887, 886, 237, 238, 239, 877, 951,
	240, 988, 989, 487, 0, 241, 958, 0, 939, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 961, 256,
	257, 942, 940, 941, 948, 944, 943, 947, 258, 259,
	260, 261, 930, 263, 923, 922, 848, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 921, 270, 0, 271,
	0, 272, 273, 0, 274, 854, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 979, 980, 866, 216, 0,
	0, 0, 0, 0, 285, 286, 287, 920, 918, 919,
	0, 290, 0, 291, 0, 0, 962, 292, 293, 0,
	294, 986, 0, 876, 295, 0, 296, 297, 298, 299,
	953, 954, 957, 351, 964, 300, 301, 0, 302, 303,
	897, 0, 0, 217, 304, 306, 313, 0, 963, 307,
	909, 900, 911, 913, 914, 915, 910, 0, 902, 0,
	314, 965, 955, 966, 315, 316, 317, 967, 935, 936,
	0, 0, 320, 321, 322, 323, 324, 0, 326, 325,
	0, 327, 987, 968, 328, 329, 969, 0, 330, 331,
	946, 945, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 889, 342, 970, 345, 346, 348,
	971, 347, 845, 218, 972, 349, 867, 956, 350, 924,
	352, 353, 0, 898, 355, 899, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 507, 973, 363, 974, 981,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 982, 374, 510, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 917, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 975, 400, 401, 402,
	403, 855, 404, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 0, 421, 422, 890, 891, 893, 894, 417,
	423, 424, 425, 949, 426, 406, 407, 427, 428, 976,
	429, 430, 912, 892, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 960, 438, 439, 440, 983, 0, 444,
	445, 443, 0, 446, 447, 448, 449, 450, 279, 888,
	0, 452, 931, 932, 933, 934, 0, 459, 0, 453,
	454, 984, 455, 985, 865, 456, 457, 458, 0, 460,
	461, 0, 849, 462, 463, 464, 465, 466, 468, 950,
	469, 0, 896, 470, 471, 472, 521, 928, 978, 0,
	474, 473, 524, 0, 0, 0, 0, 475, 476, 525,
	477, 478, 479, 846, 0, 0, 0, 0, 0, 844,
	0, 0, 0, 0, 0, 0, 842, 843, 0, 0,
	0, 0, 0, 0, 0, 871, 2151, 0, 2150, 869,
	901, 859, 860, 861, 857, 858, 870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 952,
	875, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	916, 895, 927, 233, 885, 926, 925, 0, 234, 887,
	886, 237, 238, 239, 877, 951, 240, 988, 989, 487,
	0, 241, 958, 0, 939, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 961, 256, 257, 942, 940, 941,
	948, 944, 943, 947, 258, 259, 260, 261, 930, 263,
	923, 922, 848, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 921, 270, 0, 271, 0, 272, 273, 0,
	274, 854, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 979, 980, 866, 216, 0, 0, 0, 0, 0,
	285, 286, 287, 920, 918, 919, 0, 290, 0, 291,
	0, 0, 962, 292, 293, 0, 294, 986, 0, 876,
	295, 0, 296, 297, 298, 299, 953, 954, 957, 351,
	964, 300, 301, 0, 302, 303, 897, 0, 0, 217,
	304, 306, 313, 0, 963, 307, 909, 900, 911, 913,
	914, 915, 910, 0, 902, 0, 314, 965, 955, 966,
	315, 316, 317, 967, 935, 936, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 987, 968,
	328, 329, 969, 0, 330, 331, 946, 945, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	889, 342, 970, 345, 346, 348, 971, 347, 845, 218,
	972, 349, 867, 956, 350, 924, 352, 353, 0, 898,
	355, 899, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 973, 363, 974, 981, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 982, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 917, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 975, 400, 401, 402, 403, 855, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 890, 891, 893, 894, 417, 423, 424, 425, 949,
	426, 406, 407, 427, 428, 976, 429, 430, 912, 892,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 960,
	438, 439, 440, 983, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 888, 0, 452, 931, 932,
	933, 934, 0, 459, 0, 453, 454, 984, 455, 985,
	865, 456, 457, 458, 0, 460, 461, 0, 849, 462,
	463, 464, 465, 466, 468, 950, 469, 0, 896, 470,
	471, 472, 521, 928, 978, 0, 474, 473, 524, 0,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 846,
	0, 0, 0, 0, 0, 844, 0, 0, 0, 0,
	0, 0, 842, 843, 0, 0, 0, 0, 0, 0,
	0, 871, 2148, 0, 1405, 869, 901, 859, 860, 861,
	857, 858, 870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 952, 875, 0, 0, 0,
	225, 227, 226, 228, 229, 481, 916, 895, 927, 233,
	885, 926, 925, 0, 234, 887, 886, 237, 238, 239,
	877, 951, 240, 988, 989, 487, 0, 241, 958, 0,
	939, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	961, 256, 257, 942, 940, 941, 948, 944, 943, 947,
	258, 259, 260, 261, 930, 263, 923, 922, 848, 264,
	0, 266, 265, 0, 267, 0, 0, 268, 921, 270,
	0, 271, 0, 272, 273, 0, 274, 854, 275, 276,
	278, 280, 277, 281, 282, 283, 284, 979, 980, 866,
	216, 0, 0, 0, 0, 0, 285, 286, 287, 920,
	918, 919, 0, 290, 0, 291, 0, 0, 962, 292,
	293, 0, 294, 986, 0, 876, 295, 0, 296, 297,
	298, 299, 953, 954, 957, 351, 964, 300, 301, 0,
	302, 303, 897, 0, 0, 217, 304, 306, 313, 0,
	963, 307, 909, 900, 911, 913, 914, 915, 910, 0,
	902, 0, 314, 965, 955, 966, 315, 316, 317, 967,
	935, 936, 0, 0, 320, 321, 322, 323, 324, 0,
	326, 325, 0, 327, 987, 968, 328, 329, 969, 0,
	330, 331, 946, 945, 332, 333, 334, 0, 335, 336,
	338, 340, 337, 339, 341, 343, 889, 342, 970, 345,
	346, 348, 971, 347, 845, 218, 972, 349, 867, 956,
	350, 924, 352, 353, 0, 898, 355, 899, 0, 0,
	358, 359, 360, 0, 0, 361, 362, 507, 973, 363,
	974, 981, 364, 357, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 982, 374, 510, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 917, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 392, 393,
	394, 391, 395, 396, 397, 398, 0, 399, 975, 400,
	401, 402, 403, 855, 404, 0, 405, 409, 410, 411,
	412, 413, 414, 415, 0, 421, 422, 890, 891, 893,
	894, 417, 423, 424, 425, 949, 426, 406, 407, 427,
	428, 976, 429, 430, 912, 892, 432, 0, 433, 434,
	435, 436, 408, 437, 441, 960, 438, 439, 440, 983,
	0, 444, 445, 443, 0, 446, 447, 448, 449, 450,
	279, 888, 0, 452, 931, 932, 933, 934, 0, 459,
	0, 453, 454, 984, 455, 985, 865, 456, 457, 458,
	0, 460, 461, 0, 849, 462, 463, 464, 465, 466,
	468, 950, 469, 0, 896, 470, 471, 472, 521, 928,
	978, 0, 474, 473, 524, 1404, 0, 0, 0, 475,
	476, 525, 477, 478, 479, 846, 0, 0, 0, 0,
	0, 844, 0, 0, 0, 0, 0, 0, 842, 843,
	0, 0, 0, 0, 0, 0, 0, 871, 0, 0,
	838, 869, 901, 859, 860, 861, 857, 858, 870, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 952, 875, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 916, 895, 927, 233, 885, 926, 925, 0,
	234, 887, 886, 237, 238, 239, 877, 951, 240, 988,
	989, 487, 0, 241, 958, 0, 939, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 961, 256, 257, 942,
	940, 941, 948, 944, 943, 947, 258, 259, 260, 261,
	930, 263, 923, 922, 848, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 921, 270, 0, 271, 0, 272,
	273, 0, 274, 854, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 979, 980, 866, 216, 0, 0, 0,
	0, 0, 285, 286, 287, 920, 918, 919, 0, 290,
	0, 291, 0, 0, 962, 292, 293, 0, 294, 986,
	0, 876, 295, 0, 296, 297, 298, 299, 953, 954,
	957, 351, 964, 300, 301, 0, 302, 303, 897, 0,
	0, 217, 304, 306, 313, 0, 963, 307, 909, 900,
	911, 913, 914, 915, 910, 0, 902, 0, 314, 965,
	955, 966, 315, 316, 317, 967, 935, 936, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	987, 968, 328, 329, 969, 0, 330, 331, 946, 945,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 889, 342, 970, 345, 346, 348, 971, 347,
	845, 218, 972, 349, 867, 956, 350, 924, 352, 353,
	0, 898, 355, 899, 850, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 973, 363, 974, 981, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	982, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 917, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 975, 400, 401, 402, 403, 855,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 890, 891, 893, 894, 417, 423, 424,
	425, 949, 426, 406, 407, 427, 428, 976, 429, 430,
	912, 892, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 960, 438, 439, 440, 983, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 888, 0, 452,
	931, 932, 933, 934, 0, 459, 0, 453, 454, 984,
	455, 985, 865, 456, 457, 458, 0, 460, 461, 0,
	849, 462, 463, 464, 465, 466, 468, 950, 469, 0,
	896, 470, 471, 472, 521, 928, 978, 0, 474, 473,
	524, 0, 0, 0, 0, 475, 476, 525, 477, 478,
	479, 846, 0, 0, 0, 0, 0, 844, 0, 0,
	0, 0, 0, 0, 842, 843, 901, 859, 860, 861,
	857, 858, 870, 871, 0, 0, 0, 869, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 952, 875, 0, 0, 0,
	225, 227, 226, 228, 229, 481, 916, 895, 927, 233,
	885, 926, 925, 0, 234, 887, 886, 237, 238, 239,
	877, 951, 240, 988, 989, 487, 0, 241, 958, 0,
	939, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 3579, 255, 0,
	961, 256, 257, 942, 940, 941, 948, 944, 943, 947,
	258, 259, 260, 261, 930, 263, 923, 922, 848, 264,
	0, 266, 265, 0, 267, 0, 0, 268, 921, 270,
	0, 271, 0, 272, 273, 0, 274, 854, 275, 276,
	278, 280, 277, 281, 282, 283, 284, 979, 980, 866,
	216, 0, 0, 0, 0, 0, 285, 286, 287, 920,
	918, 919, 0, 290, 0, 291, 0, 0, 962, 292,
	293, 0, 294, 986, 0, 876, 295, 0, 296, 297,
	298, 299, 953, 954, 957, 351, 964, 300, 301, 0,
	302, 303, 897, 0, 0, 217, 304, 306, 313, 0,
	963, 307, 909, 900, 911, 913, 914, 915, 910, 0,
	902, 0, 314, 965, 955, 966, 315, 316, 317, 967,
	935, 936, 0, 0, 320, 321, 322, 323, 324, 0,
	326, 325, 0, 327, 987, 968, 328, 329, 969, 0,
	330, 331, 946, 945, 332, 333, 334, 0, 335, 336,
	338, 340, 337, 339, 341, 343, 889, 342, 970, 345,
	346, 348, 971, 347, 845, 218, 972, 349, 867, 956,
	350, 924, 352, 353, 0, 898, 355, 899, 850, 0,
	358, 359, 360, 0, 0, 361, 362, 507, 973, 363,
	974, 981, 364, 357, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 982, 374, 510, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 917, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 392, 393,
	394, 391, 395, 396, 397, 398, 0, 399, 975, 400,
	401, 402, 403, 855, 404, 0, 405, 409, 410, 411,
	412, 413, 414, 415, 0, 421, 422, 890, 891, 893,
	894, 417, 423, 424, 425, 949, 426, 406, 407, 427,
	428, 976, 429, 430, 912, 892, 432, 0, 433, 434,
	435, 436, 408, 437, 441, 960, 438, 439, 440, 983,
	0, 444, 445, 443, 0, 446, 447, 448, 449, 450,
	279, 888, 0, 452, 931, 932, 933, 934, 0, 459,
	0, 453, 454, 984, 455, 985, 865, 456, 457, 458,
	0, 460, 461, 0, 849, 462, 463, 464, 465, 466,
	468, 950, 469, 0, 896, 470, 471, 472, 521, 928,
	978, 0, 474, 473, 524, 0, 0, 0, 0, 475,
	476, 525, 477, 478, 479, 846, 0, 0, 0, 0,
	0, 844, 0, 0, 0, 0, 0, 0, 842, 843,
	901, 859, 860, 861, 857, 858, 870, 871, 0, 0,
	0, 869, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 952,
	875, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	916, 895, 927, 233, 885, 926, 925, 0, 234, 887,
	886, 237, 238, 239, 877, 951, 240, 988, 989, 487,
	0, 241, 958, 0, 939, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 3416, 255, 0, 961, 256, 257, 942, 940, 941,
	948, 944, 943, 947, 258, 259, 260, 261, 930, 263,
	923, 922, 848, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 921, 270, 0, 271, 0, 272, 273, 0,
	274, 854, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 979, 980, 866, 216, 0, 0, 0, 0, 0,
	285, 286, 287, 920, 918, 919, 0, 290, 0, 291,
	0, 0, 962, 292, 293, 0, 294, 986, 0, 876,
	295, 0, 296, 297, 298, 299, 953, 954, 957, 351,
	964, 300, 301, 0, 302, 303, 897, 0, 0, 217,
	304, 306, 313, 0, 963, 307, 909, 900, 911, 913,
	914, 915, 910, 0, 902, 0, 314, 965, 955, 966,
	315, 316, 317, 967, 935, 936, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 987, 968,
	328, 329, 969, 0, 330, 331, 946, 945, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	889, 342, 970, 345, 346, 348, 971, 347, 845, 218,
	972, 349, 867, 956, 350, 924, 352, 353, 0, 898,
	355, 899, 850, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 973, 363, 974, 981, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 982, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 917, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 975, 400, 401, 402, 403, 855, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 890, 891, 893, 894, 417, 423, 424, 425, 949,
	426, 406, 407, 427, 428, 976, 429, 430, 912, 892,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 960,
	438, 439, 440, 983, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 888, 0, 452, 931, 932,
	933, 934, 0, 459, 0, 453, 454, 984, 455, 985,
	865, 456, 457, 458, 0, 460, 461, 0, 849, 462,
	463, 464, 465, 466, 468, 950, 469, 0, 896, 470,
	471, 472, 521, 928, 978, 0, 474, 473, 524, 0,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 846,
	0, 0, 0, 0, 0, 844, 0, 0, 0, 0,
	0, 0, 842, 843, 901, 859, 860, 861, 857, 858,
	870, 871, 0, 0, 0, 869, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 952, 875, 0, 0, 0, 225, 227,
	226, 228, 229, 481, 916, 895, 927, 233, 885, 926,
	925, 0, 234, 887, 886, 237, 238, 239, 877, 951,
	240, 988, 989, 487, 0, 241, 958, 0, 939, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 961, 256,
	257, 942, 940, 941, 948, 944, 943, 947, 258, 259,
	260, 261, 930, 263, 923, 922, 848, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 921, 270, 0, 271,
	0, 272, 273, 0, 274, 854, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 979, 980, 866, 216, 0,
	0, 0, 0, 0, 285, 286, 287, 920, 918, 919,
	0, 290, 0, 291, 0, 0, 962, 292, 293, 0,
	294, 986, 0, 876, 295, 0, 296, 297, 298, 299,
	953, 954, 957, 351, 964, 300, 301, 0, 302, 303,
	897, 0, 0, 217, 304, 306, 313, 0, 963, 307,
	909, 900, 911, 913, 914, 915, 910, 0, 902, 0,
	314, 965, 955, 966, 315, 316, 317, 967, 935, 936,
	0, 0, 320, 321, 322, 323, 324, 0, 326, 325,
	0, 327, 987, 968, 328, 329, 969, 0, 330, 331,
	946, 945, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 889, 342, 970, 345, 346, 348,
	971, 347, 845, 3134, 972, 349, 867, 956, 350, 924,
	352, 353, 0, 898, 355, 899, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 507, 973, 363, 974, 981,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 982, 374, 510, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 917, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 975, 400, 401, 402,
	403, 855, 404, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 0, 421, 422, 890, 891, 893, 894, 417,
	423, 424, 425, 949, 426, 406, 407, 427, 428, 976,
	429, 430, 912, 892, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 960, 438, 439, 440, 983, 0, 444,
	445, 443, 0, 446, 447, 448, 449, 450, 279, 888,
	0, 452, 931, 932, 933, 934, 0, 459, 0, 453,
	454, 984, 455, 985, 865, 456, 457, 458, 0, 460,
	461, 0, 849, 462, 463, 464, 465, 466, 468, 950,
	469, 0, 896, 470, 471, 472, 521, 928, 978, 0,
	474, 473, 524, 0, 0, 0, 0, 475, 476, 525,
	477, 478, 479, 846, 0, 0, 0, 0, 0, 844,
	0, 0, 0, 0, 0, 0, 842, 843, 1609, 0,
	0, 0, 0, 0, 0, 871, 0, 0, 0, 869,
	901, 859, 860, 861, 857, 858, 870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 952,
	875, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	916, 895, 927, 233, 885, 926, 925, 0, 234, 887,
	886, 237, 238, 239, 877, 951, 240, 988, 989, 487,
	0, 241, 958, 0, 939, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 961, 256, 257, 942, 940, 941,
	948, 944, 943, 947, 258, 259, 260, 261, 930, 263,
	923, 922, 848, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 921, 270, 0, 271, 0, 272, 273, 0,
	274, 854, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 979, 980, 866, 216, 0, 0, 0, 0, 0,
	285, 286, 287, 920, 918, 919, 0, 290, 0, 291,
	0, 0, 962, 292, 293, 0, 294, 986, 0, 876,
	295, 0, 296, 297, 298, 299, 953, 954, 957, 351,
	964, 300, 301, 0, 302, 303, 897, 0, 0, 217,
	304, 306, 313, 0, 963, 307, 909, 900, 911, 913,
	914, 915, 910, 0, 902, 0, 314, 965, 955, 966,
	315, 316, 317, 967, 935, 936, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 987, 968,
	328, 329, 969, 0, 330, 331, 946, 945, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	889, 342, 970, 345, 346, 348, 971, 347, 845, 218,
	972, 349, 867, 956, 350, 924, 352, 353, 0, 898,
	355, 899, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 973, 363, 974, 981, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 982, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 917, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 975, 400, 401, 402, 403, 855, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 890, 891, 893, 894, 417, 423, 424, 425, 949,
	426, 406, 407, 427, 428, 976, 429, 430, 912, 892,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 960,
	438, 439, 440, 983, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 888, 0, 452, 931, 932,
	933, 934, 0, 459, 0, 453, 454, 984, 455, 985,
	865, 456, 457, 458, 0, 460, 461, 0, 849, 462,
	463, 464, 465, 466, 468, 950, 469, 0, 896, 470,
	471, 472, 521, 928, 978, 2938, 474, 473, 524, 0,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 846,
	0, 0, 0, 0, 0, 844, 0, 0, 0, 0,
	0, 0, 842, 843, 901, 859, 860, 861, 857, 858,
	870, 871, 0, 0, 0, 869, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 952, 875, 0, 0, 0, 225, 227,
	226, 228, 229, 481, 916, 895, 927, 233, 885, 926,
	925, 0, 234, 887, 886, 237, 238, 239, 877, 951,
	240, 988, 989, 487, 0, 241, 958, 0, 939, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 961, 256,
	257, 942, 940, 941, 948, 944, 943, 947, 258, 259,
	260, 261, 930, 263, 923, 922, 848, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 921, 270, 0, 271,
	0, 272, 273, 0, 274, 854, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 979, 980, 866, 216, 0,
	0, 0, 0, 0, 285, 286, 287, 920, 918, 919,
	0, 290, 0, 291, 0, 0, 962, 292, 293, 0,
	294, 986, 0, 876, 295, 0, 296, 297, 298, 299,
	953, 954, 957, 351, 964, 300, 301, 0, 302, 303,
	897, 0, 0, 2020, 304, 306, 313, 0, 963, 307,
	909, 900, 911, 913, 914, 915, 910, 0, 902, 0,
	314, 965, 955, 966, 315, 316, 317, 967, 935, 936,
	0, 0, 320, 321, 322, 323, 324, 0, 326, 325,
	0, 327, 987, 968, 328, 329, 969, 0, 330, 331,
	946, 945, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 889, 342, 970, 345, 346, 348,
	971, 347, 845, 218, 972, 349, 867, 956, 350, 924,
	352, 353, 0, 898, 355, 899, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 507, 973, 363, 974, 981,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 982, 374, 510, 375, 2019, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 917, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 975, 400, 401, 402,
	403, 855, 404, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 0, 421, 422, 890, 891, 893, 894, 417,
	423, 424, 425, 949, 426, 406, 407, 427, 428, 976,
	429, 430, 912, 892, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 960, 438, 439, 440, 983, 0, 444,
	445, 443, 0, 446, 447, 448, 449, 450, 279, 888,
	0, 452, 931, 932, 933, 934, 0, 459, 0, 453,
	454, 984, 455, 985, 865, 456, 457, 458, 0, 460,
	461, 0, 849, 462, 463, 464, 465, 466, 468, 950,
	469, 0, 896, 470, 471, 472, 521, 928, 978, 0,
	474, 473, 524, 0, 0, 0, 0, 475, 476, 525,
	477, 478, 479, 846, 0, 0, 0, 0, 0, 844,
	0, 0, 0, 0, 0, 0, 842, 843, 901, 859,
	860, 861, 857, 858, 870, 871, 0, 0, 0, 869,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 952, 875, 0,
	0, 0, 225, 227, 226, 228, 229, 481, 916, 895,
	927, 233, 885, 926, 925, 0, 234, 887, 886, 237,
	238, 239, 877, 951, 240, 988, 989, 487, 0, 241,
	958, 0, 939, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 961, 256, 257, 942, 940, 941, 948, 944,
	943, 947, 258, 259, 260, 261, 930, 263, 923, 922,
	848, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	921, 270, 0, 271, 0, 272, 273, 0, 274, 854,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 979,
	980, 866, 216, 0, 0, 0, 0, 0, 285, 286,
	287, 920, 918, 919, 0, 290, 0, 291, 0, 0,
	962, 292, 293, 0, 294, 986, 0, 876, 295, 0,
	296, 297, 298, 299, 953, 954, 957, 351, 964, 300,
	301, 0, 302, 303, 897, 0, 0, 217, 304, 306,
	313, 0, 963, 307, 909, 900, 911, 913, 914, 915,
	910, 0, 902, 0, 314, 965, 955, 966, 315, 316,
	317, 967, 935, 936, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 987, 968, 328, 329,
	969, 0, 330, 331, 946, 945, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 889, 342,
	970, 345, 346, 348, 971, 347, 845, 218, 972, 349,
	867, 956, 350, 924, 352, 353, 0, 898, 355, 899,
	850, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	973, 363, 974, 981, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 982, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	917, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	975, 400, 401, 402, 403, 855, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 0, 421, 422, 890,
	891, 893, 894, 417, 423, 424, 425, 949, 426, 406,
	407, 427, 428, 976, 429, 430, 912, 892, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 960, 438, 439,
	440, 983, 0, 444, 445, 443, 0, 446, 447, 448,
	449, 450, 279, 888, 0, 452, 931, 932, 933, 934,
	0, 459, 0, 453, 454, 984, 455, 985, 865, 456,
	457, 458, 0, 460, 461, 0, 849, 462, 463, 464,
	465, 466, 468, 950, 469, 0, 896, 470, 471, 472,
	521, 928, 978, 0, 474, 473, 524, 0, 0, 0,
	0, 475, 476, 525, 477, 478, 479, 846, 0, 0,
	0, 0, 0, 844, 0, 0, 0, 0, 0, 0,
	842, 843, 901, 859, 860, 861, 857, 858, 870, 871,
	0, 0, 0, 869, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 952, 875, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 916, 895, 927, 233, 885, 926, 925, 0,
	234, 887, 886, 237, 238, 239, 877, 951, 240, 988,
	989, 487, 0, 241, 958, 0, 939, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 961, 256, 257, 942,
	940, 941, 948, 944, 943, 947, 258, 259, 260, 261,
	930, 263, 923, 922, 848, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 921, 270, 0, 271, 0, 272,
	273, 0, 274, 854, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 979, 980, 866, 216, 0, 0, 0,
	0, 0, 285, 286, 287, 920, 918, 919, 0, 290,
	0, 291, 0, 0, 962, 292, 293, 0, 294, 986,
	0, 876, 295, 0, 296, 297, 298, 299, 953, 954,
	957, 351, 964, 300, 301, 0, 302, 303, 897, 0,
	0, 217, 304, 306, 313, 0, 963, 307, 909, 900,
	911, 913, 914, 915, 910, 0, 902, 0, 314, 965,
	955, 966, 315, 316, 317, 967, 935, 936, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	987, 968, 328, 329, 969, 0, 330, 331, 946, 945,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 889, 342, 970, 345, 346, 348, 971, 347,
	845, 218, 972, 349, 867, 956, 350, 924, 352, 353,
	0, 898, 355, 899, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 973, 363, 974, 981, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	982, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 917, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 975, 400, 401, 402, 403, 855,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 890, 891, 893, 894, 417, 423, 424,
	425, 949, 426, 406, 407, 427, 428, 976, 429, 430,
	912, 892, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 960, 438, 439, 440, 983, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 888, 0, 452,
	931, 932, 933, 934, 0, 459, 0, 453, 454, 984,
	455, 985, 865, 456, 457, 458, 0, 460, 461, 0,
	849, 462, 463, 464, 465, 466, 468, 950, 469, 0,
	896, 470, 471, 472, 521, 928, 978, 0, 474, 473,
	524, 0, 0, 0, 0, 475, 476, 525, 477, 478,
	479, 846, 0, 0, 0, 0, 0, 844, 0, 0,
	0, 0, 0, 0, 842, 843, 1609, 0, 0, 0,
	0, 0, 0, 871, 0, 0, 0, 869, 901, 859,
	860, 861, 857, 858, 870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 952, 875, 0,
	0, 0, 225, 227, 226, 228, 229, 481, 916, 895,
	927, 233, 885, 926, 925, 0, 234, 887, 886, 237,
	238, 239, 877, 951, 240, 988, 989, 487, 0, 241,
	958, 0, 939, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 961, 256, 257, 942, 940, 941, 948, 944,
	943, 947, 258, 259, 260, 261, 930, 263, 923, 922,
	848, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	921, 270, 0, 271, 0, 272, 273, 0, 274, 854,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 979,
	980, 866, 216, 0, 0, 0, 0, 0, 285, 286,
	287, 920, 918, 919, 0, 290, 0, 291, 0, 2205,
	962, 292, 293, 0, 294, 986, 0, 876, 295, 0,
	296, 297, 298, 299, 953, 954, 957, 351, 964, 300,
	301, 0, 302, 303, 897, 0, 0, 217, 304, 306,
	313, 0, 963, 307, 909, 900, 911, 913, 914, 915,
	910, 0, 902, 0, 314, 965, 955, 966, 315, 316,
	317, 967, 935, 936, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 987, 968, 328, 329,
	969, 0, 330, 331, 946, 945, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 889, 342,
	970, 345, 346, 348, 971, 347, 845, 218, 972, 349,
	867, 956, 350, 924, 352, 353, 0, 898, 355, 899,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	973, 363, 974, 981, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 982, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	917, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	975, 400, 401, 402, 403, 855, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 0, 421, 422, 890,
	891, 893, 894, 417, 423, 424, 425, 949, 426, 406,
	407, 427, 428, 976, 429, 430, 912, 892, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 960, 438, 439,
	440, 983, 0, 444, 445, 443, 0, 446, 447, 448,
	449, 450, 279, 888, 0, 452, 931, 932, 933, 934,
	0, 459, 0, 453, 454, 984, 455, 985, 865, 456,
	457, 458, 0, 460, 461, 0, 849, 462, 463, 464,
	465, 466, 468, 950, 469, 0, 896, 470, 471, 472,
	521, 928, 978, 0, 474, 473, 524, 0, 0, 0,
	0, 475, 476, 525, 477, 478, 479, 846, 0, 0,
	0, 0, 0, 844, 0, 0, 0, 0, 0, 0,
	842, 843, 901, 859, 860, 861, 857, 858, 870, 871,
	0, 0, 0, 869, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 952, 875, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 916, 895, 927, 233, 885, 926, 925, 0,
	234, 887, 886, 237, 238, 239, 877, 951, 240, 988,
	989, 487, 0, 241, 958, 0, 939, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 961, 256, 257, 942,
	940, 941, 948, 944, 943, 947, 258, 259, 260, 261,
	930, 263, 923, 922, 848, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 921, 270, 0, 271, 0, 272,
	273, 0, 274, 854, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 979, 980, 866, 216, 0, 0, 0,
	0, 0, 285, 286, 287, 920, 918, 919, 0, 290,
	0, 291, 0, 0, 962, 292, 293, 0, 294, 986,
	0, 876, 295, 0, 296, 297, 298, 299, 953, 954,
	957, 351, 964, 300, 301, 0, 302, 303, 897, 0,
	0, 217, 304, 306, 313, 0, 963, 307, 909, 900,
	911, 913, 914, 915, 910, 0, 902, 0, 314, 965,
	955, 966, 315, 316, 317, 967, 935, 936, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	987, 968, 328, 329, 969, 0, 330, 331, 946, 945,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 889, 342, 970, 345, 346, 348, 971, 347,
	845, 218, 972, 349, 867, 956, 350, 924, 352, 353,
	0, 898, 355, 899, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 973, 363, 974, 981, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	982, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 917, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 975, 400, 401, 402, 403, 855,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 890, 891, 893, 894, 417, 423, 424,
	425, 949, 426, 406, 407, 427, 428, 976, 429, 430,
	912, 892, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 960, 438, 439, 440, 983, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 888, 0, 452,
	931, 932, 933, 934, 0, 459, 0, 453, 454, 984,
	455, 985, 865, 456, 457, 458, 0, 460, 461, 0,
	849, 462, 463, 464, 465, 466, 468, 950, 469, 0,
	896, 470, 471, 472, 521, 928, 978, 0, 474, 473,
	524, 0, 0, 0, 0, 475, 476, 525, 477, 478,
	479, 846, 0, 0, 0, 0, 0, 844, 0, 0,
	0, 0, 0, 0, 842, 843, 0, 0, 0, 0,
	0, 0, 0, 871, 1543, 0, 2210, 869, 901, 859,
	860, 861, 857, 858, 870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 952, 875, 0,
	0, 0, 225, 227, 226, 228, 229, 481, 916, 895,
	927, 233, 885, 926, 925, 0, 234, 887, 886, 237,
	238, 239, 877, 951, 240, 988, 989, 487, 0, 241,
	958, 0, 939, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 961, 256, 257, 942, 940, 941, 948, 944,
	943, 947, 258, 259, 260, 261, 930, 263, 923, 922,
	848, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	921, 270, 0, 271, 0, 272, 273, 0, 274, 854,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 979,
	980, 866, 216, 0, 0, 0, 0, 0, 285, 286,
	287, 920, 918, 919, 0, 290, 0, 291, 0, 0,
	962, 292, 293, 0, 294, 986, 0, 876, 295, 0,
	296, 297, 298, 299, 953, 954, 957, 351, 964, 300,
	301, 0, 302, 303, 897, 0, 0, 217, 304, 306,
	313, 0, 963, 307, 909, 900, 911, 913, 914, 915,
	910, 0, 902, 0, 314, 965, 955, 966, 315, 316,
	317, 967, 935, 936, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 987, 968, 328, 329,
	969, 0, 330, 331, 946, 945, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 889, 342,
	970, 345, 346, 348, 971, 347, 845, 218, 972, 349,
	867, 956, 350, 924, 352, 353, 0, 898, 355, 899,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	973, 363, 974, 981, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 982, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	917, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	975, 400, 401, 402, 403, 855, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 0, 421, 422, 890,
	891, 893, 894, 417, 423, 424, 425, 949, 426, 406,
	407, 427, 428, 976, 429, 430, 912, 892, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 960, 438, 439,
	440, 983, 0, 444, 445, 443, 0, 446, 447, 448,
	449, 450, 279, 888, 0, 452, 931, 932, 933, 934,
	0, 459, 0, 453, 454, 984, 455, 985, 865, 456,
	457, 458, 0, 460, 461, 0, 849, 462, 463, 464,
	465, 466, 468, 950, 469, 0, 896, 470, 471, 472,
	521, 928, 978, 0, 474, 473, 524, 0, 0, 0,
	0, 475, 476, 525, 477, 478, 479, 846, 0, 0,
	0, 0, 0, 844, 0, 0, 0, 0, 0, 0,
	842, 843, 0, 0, 0, 0, 0, 0, 0, 871,
	0, 0, 2208, 869, 901, 859, 860, 861, 857, 858,
	870, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 952, 875, 0, 0, 0, 225, 227,
	226, 228, 229, 481, 916, 895, 927, 233, 885, 926,
	925, 0, 234, 887, 886, 237, 238, 239, 877, 951,
	240, 988, 989, 487, 0, 241, 958, 0, 939, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 961, 256,
	257, 942, 940, 941, 948, 944, 943, 947, 258, 259,
	260, 261, 930, 263, 923, 922, 848, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 921, 270, 0, 271,
	0, 272, 273, 0, 274, 854, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 979, 980, 866, 216, 0,
	0, 0, 0, 0, 285, 286, 287, 920, 918, 919,
	0, 290, 0, 291, 0, 0, 962, 292, 293, 0,
	294, 986, 0, 876, 295, 0, 296, 297, 298, 299,
	953, 954, 957, 351, 964, 300, 301, 0, 302, 303,
	897, 0, 0, 217, 304, 306, 313, 0, 963, 307,
	909, 900, 911, 913, 914, 915, 910, 0, 902, 0,
	314, 965, 955, 966, 315, 316, 317, 967, 935, 936,
	0, 0, 320, 321, 322, 323, 324, 0, 326, 325,
	0, 327, 987, 968, 328, 329, 969, 0, 330, 331,
	946, 945, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 889, 342, 970, 345, 346, 348,
	971, 347, 845, 218, 972, 349, 867, 956, 350, 924,
	352, 353, 0, 898, 355, 899, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 507, 973, 363, 974, 981,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 982, 374, 510, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 917, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 975, 400, 401, 402,
	403, 855, 404, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 0, 421, 422, 890, 891, 893, 894, 417,
	423, 424, 425, 949, 426, 406, 407, 427, 428, 976,
	429, 430, 912, 892, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 960, 438, 439, 440, 983, 0, 444,
	445, 443, 0, 446, 447, 448, 449, 450, 279, 888,
	0, 452, 931, 932, 933, 934, 0, 459, 0, 453,
	454, 984, 455, 985, 865, 456, 457, 458, 0, 460,
	461, 0, 849, 462, 463, 464, 465, 466, 468, 950,
	469, 0, 896, 470, 471, 472, 521, 928, 978, 0,
	474, 473, 524, 0, 0, 0, 0, 475, 476, 525,
	477, 478, 479, 846, 0, 0, 0, 0, 0, 844,
	0, 0, 0, 0, 0, 0, 842, 843, 0, 0,
	0, 0, 0, 0, 0, 871, 0, 0, 2196, 869,
	901, 859, 860, 861, 857, 858, 870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 952,
	875, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	916, 895, 927, 233, 885, 926, 925, 0, 234, 887,
	886, 237, 238, 239, 877, 951, 240, 988, 989, 487,
	0, 241, 958, 0, 939, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 961, 256, 257, 942, 940, 941,
	948, 944, 943, 947, 258, 259, 260, 261, 930, 263,
	923, 922, 848, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 921, 270, 0, 271, 0, 272, 273, 0,
	274, 854, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 979, 980, 866, 216, 0, 0, 0, 0, 0,
	285, 286, 287, 920, 918, 919, 0, 290, 0, 291,
	0, 0, 962, 292, 293, 0, 294, 986, 0, 876,
	295, 0, 296, 297, 298, 299, 953, 954, 957, 351,
	964, 300, 301, 0, 302, 303, 897, 0, 0, 217,
	304, 306, 313, 0, 963, 307, 909, 900, 911, 913,
	914, 915, 910, 0, 902, 0, 314, 965, 955, 966,
	315, 316, 317, 967, 935, 936, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 987, 968,
	328, 329, 969, 0, 330, 331, 946, 945, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	889, 342, 970, 345, 346, 348, 971, 347, 845, 218,
	972, 349, 867, 956, 350, 924, 352, 353, 0, 898,
	355, 899, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 973, 363, 974, 981, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 982, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 917, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 975, 400, 401, 402, 403, 855, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 890, 891, 893, 894, 417, 423, 424, 425, 949,
	426, 406, 407, 427, 428, 976, 429, 430, 912, 892,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 960,
	438, 439, 440, 983, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 888, 0, 452, 931, 932,
	933, 934, 0, 459, 0, 453, 454, 984, 455, 985,
	865, 456, 457, 458, 0, 460, 461, 0, 849, 462,
	463, 464, 465, 466, 468, 950, 469, 0, 896, 470,
	471, 472, 521, 928, 978, 0, 474, 473, 524, 0,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 846,
	0, 0, 0, 0, 0, 844, 0, 0, 0, 0,
	0, 0, 842, 843, 0, 0, 0, 0, 0, 0,
	0, 871, 0, 0, 2185, 869, 901, 859, 860, 861,
	857, 858, 870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 952, 875, 0, 0, 0,
	225, 227, 226, 228, 229, 481, 916, 895, 927, 233,
	885, 926, 925, 0, 234, 887, 886, 237, 238, 239,
	877, 951, 240, 988, 989, 487, 0, 241, 958, 0,
	939, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	961, 256, 257, 942, 940, 941, 948, 944, 943, 947,
	258, 259, 260, 261, 930, 263, 923, 922, 848, 264,
	0, 266, 265, 0, 267, 0, 0, 268, 921, 270,
	0, 271, 0, 272, 273, 0, 274, 854, 275, 276,
	278, 280, 277, 281, 282, 283, 284, 979, 980, 866,
	216, 0, 0, 0, 0, 0, 285, 286, 287, 920,
	918, 919, 0, 290, 0, 291, 0, 0, 962, 292,
	293, 0, 294, 986, 0, 876, 295, 0, 296, 297,
	298, 299, 953, 954, 957, 351, 964, 300, 301, 0,
	302, 303, 897, 0, 0, 217, 304, 306, 313, 0,
	963, 307, 909, 900, 911, 913, 914, 915, 910, 0,
	902, 0, 314, 965, 955, 966, 315, 316, 317, 967,
	935, 936, 0, 0, 320, 321, 322, 323, 324, 0,
	326, 325, 0, 327, 987, 968, 328, 329, 969, 0,
	330, 331, 946, 945, 332, 333, 334, 0, 335, 336,
	338, 340, 337, 339, 341, 343, 889, 342, 970, 345,
	346, 348, 971, 347, 845, 218, 972, 349, 867, 956,
	350, 924, 352, 353, 0, 898, 355, 899, 0, 0,
	358, 359, 360, 0, 0, 361, 362, 507, 973, 363,
	974, 981, 364, 357, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 982, 374, 510, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 917, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 392, 393,
	394, 391, 395, 396, 397, 398, 0, 399, 975, 400,
	401, 402, 403, 855, 404, 0, 405, 409, 410, 411,
	412, 413, 414, 415, 0, 421, 422, 890, 891, 893,
	894, 417, 423, 424, 425, 949, 426, 406, 407, 427,
	428, 976, 429, 430, 912, 892, 432, 0, 433, 434,
	435, 436, 408, 437, 441, 960, 438, 439, 440, 983,
	0, 444, 445, 443, 0, 446, 447, 448, 449, 450,
	279, 888, 0, 452, 931, 932, 933, 934, 0, 459,
	0, 453, 454, 984, 455, 985, 865, 456, 457, 458,
	0, 460, 461, 0, 849, 462, 463, 464, 465, 466,
	468, 950, 469, 0, 896, 470, 471, 472, 521, 928,
	978, 0, 474, 473, 524, 0, 0, 0, 0, 475,
	476, 525, 477, 478, 479, 846, 0, 0, 0, 0,
	0, 844, 0, 0, 0, 0, 0, 0, 842, 843,
	0, 0, 0, 0, 0, 0, 0, 871, 0, 0,
	2183, 869, 2174, 2181, 860, 861, 857, 858, 870, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 952, 875, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 916, 895, 927, 233, 885, 926, 925, 0,
	234, 887, 886, 237, 238, 239, 877, 951, 240, 988,
	989, 487, 0, 241, 958, 0, 939, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 961, 256, 257, 942,
	940, 941, 948, 944, 943, 947, 258, 259, 260, 261,
	930, 2177, 923, 922, 848, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 921, 270, 0, 271, 0, 272,
	273, 0, 274, 854, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 979, 980, 866, 216, 0, 0, 0,
	0, 0, 285, 286, 287, 920, 918, 919, 0, 290,
	0, 291, 0, 0, 962, 292, 293, 0, 294, 986,
	0, 876, 295, 0, 296, 297, 298, 2178, 953, 954,
	957, 351, 964, 300, 301, 0, 302, 303, 897, 0,
	0, 217, 304, 306, 313, 0, 963, 307, 909, 900,
	911, 913, 914, 915, 910, 0, 902, 0, 314, 965,
	955, 966, 315, 316, 317, 967, 935, 936, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	987, 968, 328, 329, 969, 0, 330, 331, 946, 945,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 2179,
	2176, 343, 889, 342, 970, 345, 346, 348, 971, 347,
	845, 218, 972, 349, 867, 956, 350, 924, 352, 353,
	0, 898, 355, 899, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 973, 363, 974, 981, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	982, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 917, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 975, 400, 401, 402, 403, 855,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 2180,
	0, 421, 422, 890, 891, 893, 894, 417, 423, 424,
	425, 949, 426, 406, 407, 427, 428, 976, 429, 430,
	912, 892, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 960, 438, 439, 440, 983, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 888, 0, 452,
	931, 932, 933, 934, 0, 459, 0, 453, 454, 984,
	455, 985, 865, 456, 457, 458, 0, 460, 461, 0,
	849, 462, 463, 464, 465, 466, 468, 950, 469, 0,
	896, 470, 471, 472, 521, 928, 978, 0, 474, 473,
	524, 0, 0, 0, 0, 475, 476, 525, 477, 2175,
	479, 846, 0, 0, 0, 0, 0, 844, 0, 0,
	0, 0, 0, 0, 842, 843, 0, 0, 0, 0,
	0, 0, 0, 871, 0, 0, 2171, 869, 2174, 2181,
	860, 861, 857, 858, 870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 952, 875, 0,
	0, 0, 225, 227, 226, 228, 229, 481, 916, 895,
	927, 233, 885, 926, 925, 0, 234, 887, 886, 237,
	238, 239, 877, 951, 240, 988, 989, 487, 0, 241,
	958, 0, 939, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 961, 256, 257, 942, 940, 941, 948, 944,
	943, 947, 258, 259, 260, 261, 930, 2177, 923, 922,
	848, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	921, 270, 0, 271, 0, 272, 273, 0, 274, 854,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 979,
	980, 866, 216, 0, 0, 0, 0, 0, 285, 286,
	287, 920, 918, 919, 0, 290, 0, 291, 0, 0,
	962, 292, 293, 0, 294, 986, 0, 876, 295, 0,
	296, 297, 298, 2178, 953, 954, 957, 351, 964, 300,
	301, 0, 302, 303, 897, 0, 0, 217, 304, 306,
	313, 0, 963, 307, 909, 900, 911, 913, 914, 915,
	910, 0, 902, 0, 314, 965, 955, 966, 315, 316,
	317, 967, 935, 936, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 987, 968, 328, 329,
	969, 0, 330, 331, 946, 945, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 2179, 2176, 343, 889, 342,
	970, 345, 346, 348, 971, 347, 845, 218, 972, 349,
	867, 956, 350, 924, 352, 353, 0, 898, 355, 899,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	973, 363, 974, 981, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 982, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	917, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	975, 400, 401, 402, 403, 855, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 2180, 0, 421, 422, 890,
	891, 893, 894, 417, 423, 424, 425, 949, 426, 406,
	407, 427, 428, 976, 429, 430, 912, 892, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 960, 438, 439,
	440, 983, 0, 444, 445, 443, 0, 446, 447, 448,
	449, 450, 279, 888, 0, 452, 931, 932, 933, 934,
	0, 459, 0, 453, 454, 984, 455, 985, 865, 456,
	457, 458, 0, 460, 461, 0, 849, 462, 463, 464,
	465, 466, 468, 950, 469, 0, 896, 470, 471, 472,
	521, 928, 978, 0, 474, 473, 524, 0, 0, 0,
	0, 475, 476, 525, 477, 2175, 479, 846, 0, 0,
	0, 0, 0, 844, 0, 0, 0, 0, 0, 0,
	842, 843, 901, 859, 860, 861, 857, 858, 870, 871,
	0, 0, 0, 869, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 952, 875, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 916, 895, 927, 233, 885, 926, 925, 0,
	234, 887, 886, 237, 238, 239, 877, 951, 240, 988,
	989, 487, 0, 241, 958, 0, 939, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 961, 256, 257, 942,
	940, 941, 948, 944, 943, 947, 258, 259, 260, 261,
	930, 263, 923, 922, 848, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 921, 270, 0, 271, 0, 272,
	273, 0, 274, 854, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 979, 980, 866, 216, 0, 0, 0,
	0, 0, 285, 286, 287, 920, 918, 919, 0, 290,
	0, 291, 0, 0, 962, 292, 293, 0, 294, 986,
	0, 876, 295, 0, 296, 297, 298, 299, 953, 954,
	957, 351, 964, 300, 301, 0, 302, 303, 897, 0,
	0, 217, 304, 306, 313, 0, 963, 307, 909, 900,
	911, 913, 914, 915, 910, 0, 902, 0, 314, 965,
	955, 966, 315, 316, 317, 967, 935, 936, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	987, 968, 328, 329, 969, 0, 330, 331, 946, 945,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 889, 342, 970, 345, 346, 348, 971, 347,
	845, 218, 972, 349, 867, 956, 350, 924, 352, 353,
	0, 898, 355, 899, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 973, 363, 974, 981, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	982, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 917, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 975, 400, 401, 402, 403, 855,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 890, 891, 893, 894, 417, 423, 424,
	425, 949, 426, 406, 407, 427, 428, 976, 429, 430,
	912, 892, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 960, 438, 439, 440, 983, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 888, 0, 452,
	931, 932, 933, 934, 0, 459, 0, 453, 454, 984,
	455, 985, 865, 456, 457, 458, 0, 460, 461, 0,
	849, 462, 463, 464, 465, 466, 468, 950, 469, 0,
	896, 470, 471, 472, 521, 928, 978, 0, 474, 473,
	524, 0, 0, 0, 0, 475, 476, 525, 477, 478,
	479, 846, 0, 0, 0, 0, 0, 844, 0, 0,
	0, 0, 0, 0, 842, 843, 0, 0, 0, 0,
	0, 1551, 0, 871, 0, 0, 0, 869, 901, 859,
	860, 861, 857, 858, 870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	2004, 224, 0, 0, 0, 0, 0, 952, 875, 0,
	0, 0, 225, 227, 226, 228, 229, 481, 916, 895,
	927, 233, 885, 926, 925, 0, 234, 887, 886, 237,
	238, 239, 877, 951, 240, 988, 989, 487, 0, 241,
	958, 0, 939, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 961, 256, 257, 942, 940, 941, 948, 944,
	943, 947, 258, 259, 260, 261, 930, 263, 923, 922,
	848, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	921, 270, 0, 271, 0, 272, 273, 0, 274, 854,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 979,
	980, 866, 216, 0, 0, 0, 0, 0, 285, 286,
	287, 920, 918, 919, 0, 290, 0, 291, 0, 0,
	962, 292, 293, 0, 294, 986, 0, 876, 295, 0,
	296, 297, 298, 299, 953, 954, 957, 351, 964, 300,
	301, 0, 302, 303, 897, 0, 0, 217, 304, 306,
	313, 0, 963, 307, 909, 900, 911, 913, 914, 915,
	910, 0, 902, 0, 314, 965, 955, 966, 315, 316,
	317, 967, 935, 936, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 987, 968, 328, 329,
	969, 0, 330, 331, 946, 945, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 889, 342,
	970, 345, 346, 348, 971, 347, 845, 218, 972, 349,
	867, 956, 350, 924, 352, 353, 0, 898, 355, 899,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	973, 363, 974, 981, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 982, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	917, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	975, 400, 401, 402, 403, 855, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 0, 421, 422, 890,
	891, 893, 894, 417, 423, 424, 425, 949, 426, 406,
	407, 427, 428, 976, 429, 430, 912, 892, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 960, 438, 439,
	440, 983, 0, 444, 445, 443, 0, 446, 447, 448,
	449, 450, 279, 888, 0, 452, 931, 932, 933, 934,
	0, 459, 0, 453, 454, 984, 455, 985, 865, 456,
	457, 458, 0, 460, 461, 0, 849, 462, 463, 464,
	465, 466, 468, 950, 469, 0, 896, 470, 471, 472,
	521, 928, 978, 0, 474, 473, 524, 0, 0, 0,
	0, 475, 476, 525, 477, 478, 479, 846, 0, 0,
	0, 0, 0, 844, 0, 0, 0, 0, 0, 0,
	842, 843, 0, 0, 0, 0, 0, 0, 0, 871,
	0, 0, 1224, 869, 901, 859, 860, 861, 857, 858,
	870, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 952, 875, 0, 0, 0, 225, 227,
	226, 228, 229, 481, 916, 895, 927, 233, 885, 926,
	925, 0, 234, 887, 886, 237, 238, 239, 877, 951,
	240, 988, 989, 487, 0, 241, 958, 0, 939, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 961, 256,
	257, 942, 940, 941, 948, 944, 943, 947, 258, 259,
	260, 261, 930, 263, 923, 922, 848, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 921, 270, 0, 271,
	0, 272, 273, 0, 274, 854, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 979, 980, 866, 216, 0,
	0, 0, 0, 0, 285, 286, 287, 920, 918, 919,
	0, 290, 0, 291, 0, 0, 962, 292, 293, 0,
	294, 986, 0, 876, 295, 0, 296, 297, 298, 299,
	1223, 954, 957, 351, 964, 300, 301, 0, 302, 303,
	897, 0, 0, 217, 304, 306, 313, 0, 963, 307,
	909, 900, 911, 913, 914, 915, 910, 0, 902, 0,
	314, 965, 955, 966, 315, 316, 317, 967, 935, 936,
	0, 0, 320, 321, 322, 323, 324, 0, 326, 325,
	0, 327, 987, 968, 328, 329, 969, 0, 330, 331,
	946, 945, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 889, 342, 970, 345, 346, 348,
	971, 347, 845, 218, 972, 349, 867, 956, 350, 924,
	352, 353, 0, 898, 355, 899, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 507, 973, 363, 974, 981,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 982, 374, 510, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 917, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 975, 400, 401, 402,
	403, 855, 404, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 0, 421, 422, 890, 891, 893, 894, 417,
	423, 424, 425, 949, 426, 406, 407, 427, 428, 976,
	429, 430, 912, 892, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 960, 438, 439, 440, 983, 0, 444,
	445, 443, 0, 446, 447, 448, 449, 450, 279, 888,
	0, 452, 931, 932, 933, 934, 0, 459, 0, 453,
	454, 984, 455, 985, 865, 456, 457, 458, 0, 460,
	461, 0, 849, 462, 463, 464, 465, 466, 468, 950,
	469, 0, 896, 470, 471, 472, 521, 928, 978, 0,
	474, 473, 524, 0, 0, 0, 0, 475, 476, 525,
	477, 478, 479, 846, 0, 0, 0, 0, 0, 844,
	0, 0, 0, 0, 0, 0, 842, 843, 0, 0,
	0, 0, 0, 0, 0, 871, 0, 0, 1218, 869,
	901, 859, 860, 861, 857, 858, 870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 952,
	875, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	916, 895, 927, 233, 885, 926, 925, 0, 234, 887,
	886, 237, 238, 239, 877, 951, 240, 988, 989, 487,
	0, 241, 958, 0, 939, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 961, 256, 257, 942, 940, 941,
	948, 944, 943, 947, 258, 259, 260, 261, 930, 263,
	923, 922, 848, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 921, 270, 0, 271, 0, 272, 273, 0,
	274, 854, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 979, 980, 866, 216, 0, 0, 0, 0, 0,
	285, 286, 287, 920, 918, 919, 0, 290, 0, 291,
	0, 0, 962, 292, 293, 0, 294, 986, 0, 876,
	295, 0, 296, 297, 298, 299, 1217, 954, 957, 351,
	964, 300, 301, 0, 302, 303, 897, 0, 0, 217,
	304, 306, 313, 0, 963, 307, 909, 900, 911, 913,
	914, 915, 910, 0, 902, 0, 314, 965, 955, 966,
	315, 316, 317, 967, 935, 936, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 987, 968,
	328, 329, 969, 0, 330, 331, 946, 945, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	889, 342, 970, 345, 346, 348, 971, 347, 845, 218,
	972, 349, 867, 956, 350, 924, 352, 353, 0, 898,
	355, 899, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 973, 363, 974, 981, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 982, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 917, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 975, 400, 401, 402, 403, 855, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 890, 891, 893, 894, 417, 423, 424, 425, 949,
	426, 406, 407, 427, 428, 976, 429, 430, 912, 892,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 960,
	438, 439, 440, 983, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 888, 0, 452, 931, 932,
	933, 934, 0, 459, 0, 453, 454, 984, 455, 985,
	865, 456, 457, 458, 0, 460, 461, 0, 849, 462,
	463, 464, 465, 466, 468, 950, 469, 0, 896, 470,
	471, 472, 521, 928, 978, 0, 474, 473, 524, 0,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 846,
	0, 0, 0, 0, 0, 844, 0, 0, 0, 0,
	0, 0, 842, 843, 0, 0, 0, 0, 0, 0,
	0, 871, 0, 0, 1213, 869, 901, 859, 860, 861,
	857, 858, 870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 952, 875, 0, 0, 0,
	225, 227, 226, 228, 229, 481, 916, 895, 927, 233,
	885, 926, 925, 0, 234, 887, 886, 237, 238, 239,
	877, 951, 240, 988, 989, 487, 0, 241, 958, 0,
	939, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	961, 256, 257, 942, 940, 941, 948, 944, 943, 947,
	258, 259, 260, 261, 930, 263, 923, 922, 848, 264,
	0, 266, 265, 0, 267, 0, 0, 268, 921, 270,
	0, 271, 0, 272, 273, 0, 274, 854, 275, 276,
	278, 280, 277, 281, 282, 283, 284, 979, 980, 866,
	216, 0, 0, 0, 0, 0, 285, 286, 287, 920,
	918, 919, 0, 290, 0, 291, 0, 0, 962, 292,
	293, 0, 294, 986, 0, 876, 295, 0, 296, 297,
	298, 299, 953, 954, 957, 351, 964, 300, 301, 0,
	302, 303, 897, 0, 0, 217, 304, 306, 313, 0,
	963, 307, 909, 900, 911, 913, 914, 915, 910, 0,
	902, 0, 314, 965, 955, 966, 315, 316, 317, 967,
	935, 936, 0, 0, 320, 321, 322, 323, 324, 0,
	326, 325, 0, 327, 987, 968, 328, 329, 969, 0,
	330, 331, 946, 945, 332, 333, 334, 0, 335, 336,
	338, 340, 337, 339, 341, 343, 889, 342, 970, 345,
	346, 348, 971, 347, 845, 218, 972, 349, 867, 956,
	350, 924, 352, 353, 0, 898, 355, 899, 0, 0,
	358, 359, 360, 0, 0, 361, 362, 507, 973, 363,
	974, 981, 364, 357, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 982, 374, 510, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 917, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 392, 393,
	394, 391, 395, 396, 397, 398, 0, 399, 975, 400,
	401, 402, 403, 855, 404, 0, 405, 409, 410, 411,
	412, 413, 414, 415, 0, 421, 422, 890, 891, 893,
	894, 417, 423, 424, 425, 949, 426, 406, 407, 427,
	428, 976, 429, 430, 912, 892, 432, 0, 433, 434,
	435, 436, 408, 437, 441, 960, 438, 439, 440, 983,
	0, 444, 445, 443, 0, 446, 447, 448, 449, 450,
	279, 888, 0, 452, 931, 932, 933, 934, 0, 459,
	0, 453, 454, 984, 455, 985, 865, 456, 457, 458,
	0, 460, 461, 0, 849, 462, 463, 464, 465, 466,
	468, 950, 469, 0, 896, 470, 471, 472, 521, 928,
	978, 0, 474, 473, 524, 0, 0, 0, 0, 475,
	476, 525, 477, 478, 479, 846, 0, 0, 0, 0,
	0, 844, 0, 0, 0, 0, 0, 0, 842, 843,
	901, 859, 860, 861, 857, 858, 870, 871, 0, 0,
	0, 869, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 952,
	875, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	916, 895, 927, 233, 885, 926, 925, 0, 234, 887,
	886, 237, 238, 239, 877, 951, 240, 988, 989, 487,
	0, 241, 958, 0, 939, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 961, 256, 257, 942, 940, 941,
	948, 944, 943, 947, 258, 259, 260, 261, 930, 263,
	923, 922, 848, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 921, 270, 0, 271, 0, 272, 273, 0,
	274, 854, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 979, 980, 866, 216, 0, 0, 0, 0, 0,
	285, 286, 287, 920, 918, 919, 0, 290, 0, 291,
	0, 0, 962, 292, 293, 0, 294, 986, 0, 876,
	295, 0, 296, 297, 298, 299, 953, 954, 957, 351,
	964, 300, 301, 0, 302, 303, 897, 0, 0, 217,
	304, 306, 313, 0, 963, 307, 909, 900, 911, 913,
	914, 915, 910, 0, 902, 0, 314, 965, 955, 966,
	315, 316, 317, 967, 935, 936, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 987, 968,
	328, 329, 969, 0, 330, 331, 946, 945, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	889, 342, 970, 345, 346, 348, 971, 347, 845, 218,
	972, 349, 867, 956, 350, 924, 352, 353, 0, 898,
	355, 899, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 973, 363, 974, 981, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 982, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 917, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 975, 400, 401, 402, 403, 855, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 890, 891, 893, 894, 417, 423, 424, 425, 949,
	426, 406, 407, 427, 428, 976, 429, 430, 912, 892,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 960,
	438, 439, 440, 983, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 888, 0, 452, 931, 932,
	933, 934, 0, 459, 0, 453, 454, 984, 455, 985,
	865, 456, 457, 458, 0, 460, 461, 0, 849, 462,
	463, 464, 465, 466, 468, 950, 469, 0, 896, 470,
	471, 472, 521, 928, 978, 0, 474, 473, 524, 0,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 846,
	0, 0, 0, 0, 0, 844, 0, 0, 0, 0,
	0, 0, 842, 843, 901, 859, 860, 861, 857, 858,
	870, 871, 0, 0, 0, 869, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 952, 875, 0, 0, 0, 225, 227,
	226, 228, 229, 481, 916, 895, 927, 233, 885, 926,
	925, 0, 234, 887, 886, 237, 238, 239, 877, 951,
	240, 988, 989, 487, 0, 241, 958, 0, 939, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 961, 256,
	3609, 942, 940, 941, 948, 944, 943, 947, 258, 259,
	260, 261, 930, 263, 923, 922, 848, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 921, 270, 0, 271,
	0, 272, 273, 0, 274, 854, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 979, 980, 866, 216, 0,
	0, 0, 0, 0, 285, 286, 287, 920, 918, 919,
	0, 290, 0, 291, 0, 0, 962, 292, 293, 0,
	294, 986, 0, 876, 295, 0, 296, 297, 298, 299,
	953, 954, 957, 351, 964, 300, 301, 0, 302, 303,
	897, 0, 0, 217, 304, 306, 313, 0, 963, 307,
	909, 900, 911, 913, 914, 915, 910, 0, 902, 0,
	314, 965, 955, 966, 315, 316, 317, 967, 935, 936,
	0, 0, 320, 321, 322, 323, 324, 0, 326, 325,
	0, 327, 987, 968, 328, 329, 969, 0, 330, 331,
	946, 945, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 889, 342, 970, 345, 346, 348,
	971, 347, 845, 218, 972, 349, 867, 956, 350, 924,
	352, 353, 0, 898, 355, 899, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 507, 973, 363, 974, 981,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 982, 374, 510, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 917, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 975, 400, 401, 402,
	403, 855, 404, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 0, 421, 422, 890, 891, 893, 894, 417,
	423, 424, 425, 949, 426, 406, 407, 427, 428, 976,
	429, 430, 912, 892, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 960, 438, 439, 440, 983, 0, 444,
	445, 443, 0, 446, 447, 448, 449, 450, 279, 888,
	0, 452, 931, 932, 933, 934, 0, 459, 0, 453,
	454, 984, 455, 985, 865, 456, 457, 458, 0, 3608,
	461, 0, 849, 462, 463, 464, 465, 466, 468, 950,
	469, 0, 896, 470, 471, 472, 521, 928, 978, 0,
	474, 473, 524, 0, 0, 0, 0, 475, 476, 525,
	477, 478, 479, 846, 0, 0, 0, 0, 0, 844,
	0, 0, 0, 0, 0, 0, 842, 843, 901, 859,
	860, 861, 857, 858, 870, 871, 0, 0, 0, 869,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 952, 875, 0,
	0, 0, 225, 227, 226, 228, 229, 3607, 916, 895,
	927, 233, 885, 926, 925, 0, 234, 887, 886, 237,
	238, 239, 877, 951, 240, 988, 989, 487, 0, 241,
	958, 0, 939, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 961, 256, 3609, 942, 940, 941, 948, 944,
	943, 947, 258, 259, 260, 261, 930, 263, 923, 922,
	848, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	921, 270, 0, 271, 0, 272, 273, 0, 274, 854,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 979,
	980, 866, 216, 0, 0, 0, 0, 0, 285, 286,
	287, 920, 918, 919, 0, 290, 0, 291, 0, 0,
	962, 292, 293, 0, 294, 986, 0, 876, 295, 0,
	296, 297, 298, 299, 953, 954, 957, 351, 964, 300,
	301, 0, 302, 303, 897, 0, 0, 217, 304, 306,
	313, 0, 963, 307, 909, 900, 911, 913, 914, 915,
	910, 0, 902, 0, 314, 965, 955, 966, 315, 316,
	317, 967, 935, 936, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 987, 968, 328, 329,
	969, 0, 330, 331, 946, 945, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 889, 342,
	970, 345, 346, 348, 971, 347, 845, 218, 972, 349,
	867, 956, 350, 924, 352, 353, 0, 898, 355, 899,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	973, 363, 974, 981, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 982, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	917, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	975, 400, 401, 402, 403, 855, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 0, 421, 422, 890,
	891, 893, 894, 417, 423, 424, 425, 949, 426, 406,
	407, 427, 428, 976, 429, 430, 912, 892, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 960, 438, 439,
	440, 983, 0, 444, 445, 443, 0, 446, 447, 448,
	449, 450, 279, 888, 0, 452, 931, 932, 933, 934,
	0, 459, 0, 453, 454, 984, 455, 985, 865, 456,
	457, 458, 0, 3608, 461, 0, 849, 462, 463, 464,
	465, 466, 468, 950, 469, 0, 896, 470, 471, 472,
	521, 928, 978, 0, 474, 473, 524, 0, 0, 0,
	0, 475, 476, 525, 477, 478, 479, 846, 0, 0,
	0, 0, 0, 844, 0, 0, 0, 0, 0, 0,
	842, 843, 901, 859, 860, 861, 857, 858, 870, 871,
	0, 0, 0, 869, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 952, 875, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 916, 895, 927, 233, 885, 926, 925, 0,
	234, 887, 886, 237, 238, 239, 877, 951, 240, 988,
	989, 487, 0, 241, 958, 0, 939, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 961, 256, 257, 942,
	940, 941, 948, 944, 943, 947, 258, 259, 260, 261,
	930, 263, 923, 922, 0, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 921, 270, 0, 271, 0, 272,
	273, 0, 274, 854, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 979, 980, 866, 216, 0, 0, 0,
	0, 0, 285, 286, 287, 920, 918, 919, 0, 290,
	0, 291, 0, 0, 962, 292, 293, 0, 294, 986,
	0, 876, 295, 0, 296, 297, 298, 299, 953, 954,
	957, 351, 964, 300, 301, 0, 302, 303, 897, 0,
	0, 217, 304, 306, 313, 0, 963, 307, 909, 900,
	911, 913, 914, 915, 910, 0, 902, 0, 314, 965,
	955, 966, 315, 316, 317, 967, 935, 936, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	987, 968, 328, 329, 969, 0, 330, 331, 946, 945,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 889, 342, 970, 345, 346, 348, 971, 347,
	0, 218, 972, 349, 867, 956, 350, 924, 352, 353,
	0, 898, 355, 899, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 973, 363, 974, 981, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	982, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 917, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 975, 400, 401, 402, 403, 855,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 890, 891, 893, 894, 417, 423, 424,
	425, 949, 426, 406, 407, 427, 428, 976, 429, 430,
	912, 892, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 960, 438, 439, 440, 983, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 888, 0, 452,
	931, 932, 933, 934, 0, 459, 0, 453, 454, 984,
	455, 985, 865, 456, 457, 458, 0, 460, 461, 0,
	0, 462, 463, 464, 465, 466, 468, 950, 469, 0,
	896, 470, 471, 472, 521, 928, 978, 0, 474, 473,
	524, 0, 0, 0, 0, 475, 476, 525, 477, 478,
	479, 0, 0, 0, 0, 0, 0, 2193, 0, 0,
	0, 0, 0, 0, 2191, 2192, 901, 859, 860, 861,
	857, 858, 870, 871, 0, 0, 0, 869, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 952, 875, 0, 0, 0,
	225, 227, 226, 228, 229, 481, 916, 895, 927, 233,
	885, 926, 925, 0, 234, 887, 886, 237, 238, 239,
	0, 951, 240, 988, 989, 487, 0, 241, 958, 0,
	939, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	961, 256, 257, 942, 940, 941, 948, 944, 943, 947,
	258, 259, 260, 261, 930, 263, 923, 922, 0, 264,
	0, 266, 265, 0, 267, 0, 0, 268, 921, 270,
	0, 271, 0, 272, 273, 0, 274, 491, 275, 276,
	278, 280, 277, 281, 282, 283, 284, 979, 980, 866,
	216, 0, 0, 0, 0, 0, 285, 286, 287, 920,
	918, 919, 0, 290, 0, 291, 0, 0, 962, 292,
	293, 0, 294, 986, 0, 876, 295, 0, 296, 297,
	298, 299, 953, 954, 957, 351, 964, 300, 301, 0,
	302, 303, 897, 0, 0, 217, 304, 306, 313, 0,
	963, 307, 909, 900, 911, 913, 914, 915, 910, 0,
	902, 0, 314, 965, 955, 966, 315, 316, 317, 967,
	935, 936, 0, 0, 320, 321, 322, 323, 324, 0,
	326, 325, 0, 327, 987, 968, 328, 329, 969, 0,
	330, 331, 946, 945, 332, 333, 334, 0, 335, 336,
	338, 340, 337, 339, 341, 343, 889, 342, 970, 345,
	346, 348, 971, 347, 0, 218, 972, 349, 867, 956,
	350, 924, 352, 353, 0, 898, 355, 899, 0, 0,
	358, 359, 360, 0, 0, 361, 362, 507, 973, 363,
	974, 981, 364, 357, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 982, 374, 510, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 917, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 392, 393,
	394, 391, 395, 396, 397, 398, 0, 399, 975, 400,
	401, 402, 403, 855, 404, 0, 405, 409, 410, 411,
	412, 413, 414, 415, 0, 421, 422, 890, 891, 893,
	894, 417, 423, 424, 425, 949, 426, 406, 407, 427,
	428, 976, 429, 430, 912, 892, 432, 0, 433, 434,
	435, 436, 408, 437, 441, 960, 438, 439, 440, 983,
	0, 444, 445, 443, 0, 446, 447, 448, 449, 450,
	279, 888, 0, 452, 931, 932, 933, 934, 0, 459,
	0, 453, 454, 984, 455, 985, 865, 456, 457, 458,
	0, 460, 461, 0, 0, 462, 463, 464, 465, 466,
	468, 950, 469, 0, 896, 470, 471, 472, 521, 928,
	978, 0, 474, 473, 524, 0, 0, 0, 0, 475,
	476, 525, 477, 478, 479, 901, 859, 860, 861, 857,
	858, 870, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 221, 222, 223, 871, 224, 0,
	0, 869, 0, 0, 952, 875, 0, 0, 0, 225,
	227, 226, 228, 229, 0, 916, 895, 927, 233, 885,
	926, 925, 0, 234, 887, 886, 237, 238, 239, 877,
	951, 240, 988, 989, 487, 0, 241, 958, 0, 939,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 961,
	256, 3609, 942, 940, 941, 948, 944, 943, 947, 258,
	259, 260, 261, 930, 263, 923, 922, 848, 264, 0,
	266, 265, 0, 267, 0, 0, 268, 921, 270, 0,
	271, 0, 272, 273, 0, 274, 854, 275, 276, 278,
	280, 277, 281, 282, 283, 284, 979, 980, 866, 216,
	0, 0, 0, 0, 0, 285, 286, 287, 920, 918,
	919, 0, 290, 0, 291, 0, 0, 962, 292, 293,
	0, 294, 986, 0, 876, 295, 0, 296, 297, 298,
	299, 953, 954, 957, 351, 0, 300, 301, 0, 302,
	303, 897, 0, 0, 217, 304, 306, 313, 0, 963,
	307, 909, 900, 911, 913, 914, 915, 910, 0, 902,
	0, 314, 0, 955, 0, 315, 316, 317, 967, 935,
	936, 0, 0, 320, 321, 322, 323, 324, 0, 326,
	325, 0, 327, 987, 968, 328, 329, 0, 0, 330,
	331, 946, 945, 332, 333, 334, 0, 335, 336, 338,
	340, 337, 339, 341, 343, 889, 342, 970, 345, 346,
	348, 971, 347, 845, 218, 0, 349, 867, 956, 350,
	924, 352, 353, 0, 898, 355, 899, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 507, 973, 363, 974,
	981, 364, 357, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 982, 374, 510, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 917, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 392, 393, 394,
	391, 395, 396, 397, 398, 0, 399, 975, 400, 401,
	402, 403, 855, 404, 0, 405, 409, 410, 411, 412,
	413, 414, 415, 0, 421, 422, 890, 891, 893, 894,
	417, 423, 424, 425, 949, 426, 406, 407, 427, 428,
	0, 429, 430, 912, 892, 432, 0, 433, 434, 435,
	436, 408, 437, 441, 960, 438, 439, 440, 983, 0,
	444, 445, 443, 0, 446, 447, 448, 449, 450, 279,
	888, 0, 452, 931, 932, 933, 934, 0, 459, 0,
	453, 454, 984, 455, 985, 865, 456, 457, 458, 0,
	3608, 461, 0, 849, 462, 463, 464, 465, 466, 468,
	950, 469, 0, 896, 470, 471, 472, 521, 928, 978,
	0, 474, 473, 524, 0, 0, 0, 0, 475, 476,
	525, 477, 478, 479, 0, 0, 0, 0, 0, 0,
	0, 0, 835, 0, 1026, 0, 0, 842, 843, 0,
	0, 0, 0, 0, 0, 0, 871, 0, 0, 0,
	869, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 952, 0, 0, 0, 0, 225, 227,
	226, 228, 229, 481, 482, 230, 483, 233, 231, 232,
	484, 0, 234, 235, 236, 237, 238, 239, 0, 951,
	240, 485, 486, 487, 0, 241, 958, 0, 939, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 961, 256,
	257, 942, 940, 941, 948, 944, 943, 947, 258, 259,
	260, 261, 262, 263, 489, 490, 0, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 274, 491, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 979, 980, 0, 216, 0,
	0, 0, 0, 0, 285, 286, 287, 494, 288, 289,
	0, 290, 0, 291, 0, 0, 962, 292, 293, 0,
	294, 986, 0, 496, 295, 0, 296, 297, 298, 299,
	953, 954, 957, 351, 964, 300, 301, 0, 302, 303,
	305, 0, 0, 217, 304, 306, 313, 0, 963, 307,
	500, 309, 308, 310, 311, 312, 501, 0, 502, 0,
	314, 965, 955, 966, 315, 316, 317, 967, 318, 319,
	0, 0, 320, 321, 322, 323, 324, 1012, 326, 325,
	0, 327, 987, 968, 328, 329, 969, 0, 330, 331,
	946, 945, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 344, 342, 970, 345, 346, 348,
	971, 347, 0, 218, 972, 349, 0, 956, 350, 506,
	352, 353, 0, 354, 355, 356, 0, 1018, 358, 359,
	360, 0, 0, 361, 362, 507, 973, 363, 974, 981,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 982, 374, 510, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 511, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 975, 400, 401, 402,
	403, 512, 1020, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 182, 421, 422, 416, 418, 419, 420, 417,
	423, 424, 425, 949, 426, 406, 407, 427, 428, 976,
	429, 430, 513, 431, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 442, 438, 439, 440, 983, 0, 444,
	445, 443, 184, 446, 447, 448, 449, 450, 279, 451,
	0, 452, 515, 516, 517, 518, 0, 459, 0, 453,
	454, 984, 455, 985, 0, 456, 457, 458, 0, 460,
	461, 0, 0, 462, 463, 464, 465, 466, 468, 950,
	469, 0, 467, 470, 471, 472, 1336, 522, 523, 0,
	474, 473, 524, 1026, 0, 0, 176, 475, 476, 525,
	477, 478, 479, 0, 177, 0, 0, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 952, 1016, 0, 1633, 0, 225, 227, 226,
	228, 229, 481, 482, 230, 483, 233, 231, 232, 484,
	0, 234, 235, 236, 237, 238, 239, 0, 951, 240,
	485, 486, 487, 0, 241, 958, 0, 939, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 961, 256, 257,
	942, 940, 941, 948, 944, 943, 947, 258, 259, 260,
	261, 262, 263, 489, 490, 0, 264, 0, 266, 265,
	0, 267, 0, 0, 268, 269, 270, 0, 271, 0,
	272, 273, 0, 274, 491, 275, 276, 278, 280, 277,
	281, 282, 283, 284, 979, 980, 0, 216, 0, 0,
	0, 0, 0, 285, 286, 287, 494, 288, 289, 0,
	290, 0, 291, 0, 0, 962, 292, 293, 0, 294,
	986, 0, 496, 295, 0, 296, 297, 298, 299, 953,
	954, 957, 351, 964, 300, 301, 0, 302, 303, 305,
	0, 0, 217, 304, 306, 313, 0, 963, 307, 500,
	309, 308, 310, 311, 312, 501, 0, 502, 0, 314,
	965, 955, 966, 315, 316, 317, 967, 318, 319, 0,
	0, 320, 321, 322, 323, 324, 1012, 326, 325, 0,
	327, 987, 968, 328, 329, 969, 0, 330, 331, 946,
	945, 332, 333, 334, 0, 335, 336, 338, 340, 337,
	339, 341, 343, 344, 342, 970, 345, 346, 348, 971,
	347, 0, 218, 972, 349, 0, 956, 350, 506, 352,
	353, 0, 354, 355, 356, 0, 1018, 358, 359, 360,
	0, 0, 361, 362, 507, 973, 363, 974, 981, 364,
	357, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 982, 374, 510, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 511, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 392, 393, 394, 391, 395,
	396, 397, 398, 0, 399, 975, 400, 401, 402, 403,
	512, 1020, 0, 405, 409, 410, 411, 412, 413, 414,
	415, 182, 421, 422, 416, 418, 419, 420, 417, 423,
	424, 425, 949, 426, 406, 407, 427, 428, 976, 429,
	430, 513, 431, 432, 0, 433, 434, 435, 436, 408,
	437, 441, 442, 438, 439, 440, 983, 0, 444, 445,
	443, 184, 446, 447, 448, 449, 450, 279, 451, 0,
	452, 515, 516, 517, 518, 0, 459, 0, 453, 454,
	984, 455, 985, 0, 456, 457, 458, 0, 460, 461,
	0, 0, 462, 463, 464, 465, 466, 468, 950, 469,
	0, 467, 470, 471, 472, 1336, 522, 523, 0, 474,
	473, 524, 2673, 0, 1026, 176, 475, 476, 525, 477,
	478, 479, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 1016, 952, 1633, 0, 0, 0, 225, 227,
	226, 228, 229, 481, 482, 230, 483, 233, 231, 232,
	484, 0, 234, 235, 236, 237, 238, 239, 0, 951,
	240, 485, 486, 487, 0, 241, 958, 0, 939, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 961, 256,
	257, 942, 940, 941, 948, 944, 943, 947, 258, 259,
	260, 261, 262, 263, 489, 490, 0, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 274, 491, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 979, 980, 0, 216, 0,
	0, 0, 0, 0, 285, 286, 287, 494, 288, 289,
	0, 290, 0, 291, 0, 0, 962, 292, 293, 0,
	294, 986, 0, 496, 295, 0, 296, 297, 298, 299,
	953, 954, 957, 351, 964, 300, 301, 0, 302, 303,
	305, 0, 0, 217, 304, 306, 313, 0, 963, 307,
	500, 309, 308, 310, 311, 312, 501, 0, 502, 0,
	314, 965, 955, 966, 315, 316, 317, 967, 318, 319,
	0, 0, 320, 321, 322, 323, 324, 1012, 326, 325,
	0, 327, 987, 968, 328, 329, 969, 0, 330, 331,
	946, 945, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 344, 342, 970, 345, 346, 348,
	971, 347, 0, 218, 972, 349, 0, 956, 350, 506,
	352, 353, 0, 354, 355, 356, 0, 1018, 358, 359,
	360, 0, 0, 361, 362, 507, 973, 363, 974, 981,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 982, 374, 510, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 511, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 975, 400, 401, 402,
	403, 512, 1020, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 0, 421, 422, 416, 418, 419, 420, 417,
	423, 424, 425, 949, 426, 406, 407, 427, 428, 976,
	429, 430, 513, 431, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 442, 438, 439, 440, 983, 0, 444,
	445, 443, 0, 446, 447, 448, 449, 450, 279, 451,
	0, 452, 515, 516, 517, 518, 0, 459, 0, 453,
	454, 984, 455, 985, 0, 456, 457, 458, 0, 460,
	461, 0, 0, 462, 463, 464, 465, 466, 468, 950,
	469, 0, 467, 470, 471, 472, 521, 522, 523, 0,
	474, 473, 524, 1008, 0, 1026, 0, 475, 476, 525,
	477, 478, 479, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 1016, 952, 1014, 0, 0, 0, 225,
	227, 226, 228, 229, 481, 482, 230, 483, 233, 231,
	232, 484, 0, 234, 235, 236, 237, 238, 239, 0,
	951, 240, 485, 486, 487, 0, 241, 958, 0, 939,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 961,
	256, 257, 942, 940, 941, 948, 944, 943, 947, 258,
	259, 260, 261, 262, 263, 489, 490, 0, 264, 0,
	266, 265, 0, 267, 0, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 274, 491, 275, 276, 278,
	280, 277, 281, 282, 283, 284, 979, 980, 0, 216,
	0, 0, 0, 0, 0, 285, 286, 287, 494, 288,
	289, 0, 290, 0, 291, 0, 0, 962, 292, 293,
	0, 294, 986, 0, 496, 295, 0, 296, 297, 298,
	299, 953, 954, 957, 351, 964, 300, 301, 0, 302,
	303, 305, 0, 0, 217, 304, 306, 313, 0, 963,
	307, 500, 309, 308, 310, 311, 312, 501, 0, 502,
	0, 314, 965, 955, 966, 315, 316, 317, 967, 318,
	319, 0, 0, 320, 321, 322, 323, 324, 1012, 326,
	325, 0, 327, 987, 968, 328, 329, 969, 0, 330,
	331, 946, 945, 332, 333, 334, 0, 335, 336, 338,
	340, 337, 339, 341, 343, 344, 342, 970, 345, 346,
	348, 971, 347, 0, 218, 972, 349, 0, 956, 350,
	506, 352, 353, 0, 354, 355, 356, 0, 1018, 358,
	359, 360, 0, 0, 361, 362, 507, 973, 363, 974,
	981, 364, 357, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 982, 374, 510, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 511, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 392, 393, 394,
	391, 395, 396, 397, 398, 0, 399, 975, 400, 401,
	402, 403, 512, 1020, 0, 405, 409, 410, 411, 412,
	413, 414, 415, 0, 421, 422, 416, 418, 419, 420,
	417, 423, 424, 425, 949, 426, 406, 407, 427, 428,
	976, 429, 430, 513, 431, 432, 0, 433, 434, 435,
	436, 408, 437, 441, 442, 438, 439, 440, 983, 0,
	444, 445, 443, 0, 446, 447, 448, 449, 450, 279,
	451, 0, 452, 515, 516, 517, 518, 0, 459, 0,
	453, 454, 984, 455, 985, 0, 456, 457, 458, 0,
	460, 461, 0, 0, 462, 463, 464, 465, 466, 468,
	950, 469, 0, 467, 470, 471, 472, 521, 522, 523,
	0, 474, 473, 524, 1026, 0, 0, 0, 475, 476,
	525, 477, 478, 479, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 952, 1016, 0, 1014, 0, 225, 227,
	226, 228, 229, 481, 482, 230, 483, 233, 231, 232,
	484, 0, 234, 235, 236, 237, 238, 239, 0, 951,
	240, 485, 486, 487, 0, 241, 958, 0, 939, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 961, 256,
	257, 942, 940, 941, 948, 944, 943, 947, 258, 259,
	260, 261, 262, 263, 489, 490, 0, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 274, 491, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 979, 980, 0, 216, 0,
	0, 0, 0, 0, 285, 286, 287, 494, 288, 289,
	0, 290, 0, 291, 0, 0, 962, 292, 293, 0,
	294, 986, 0, 496, 295, 0, 296, 297, 298, 299,
	953, 954, 957, 351, 964, 300, 301, 0, 302, 303,
	305, 0, 0, 217, 304, 306, 313, 0, 963, 307,
	500, 309, 308, 310, 311, 312, 501, 0, 502, 0,
	314, 965, 955, 966, 315, 316, 317, 967, 318, 319,
	0, 0, 320, 321, 322, 323, 324, 1012, 326, 325,
	0, 327, 987, 968, 328, 329, 969, 0, 330, 331,
	946, 945, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 344, 342, 970, 345, 346, 348,
	971, 347, 0, 218, 972, 349, 0, 956, 350, 506,
	352, 353, 0, 354, 355, 356, 0, 1018, 358, 359,
	360, 0, 0, 361, 362, 507, 973, 363, 974, 981,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 982, 374, 510, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 511, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 975, 400, 401, 402,
	403, 512, 1020, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 0, 421, 422, 416, 418, 419, 420, 417,
	423, 424, 425, 949, 426, 406, 407, 427, 428, 976,
	429, 430, 513, 431, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 442, 438, 439, 440, 983, 0, 444,
	445, 443, 0, 446, 447, 448, 449, 450, 279, 451,
	0, 452, 515, 516, 517, 518, 0, 459, 0, 453,
	454, 984, 455, 985, 0, 456, 457, 458, 0, 460,
	461, 0, 0, 462, 463, 464, 465, 466, 468, 950,
	469, 0, 467, 470, 471, 472, 521, 522, 523, 0,
	474, 473, 524, 1026, 0, 0, 0, 475, 476, 525,
	477, 478, 479, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 952, 1016, 0, 1014, 0, 225, 227, 226,
	228, 229, 481, 482, 230, 483, 233, 231, 232, 484,
	0, 234, 235, 236, 237, 238, 239, 0, 951, 240,
	485, 486, 487, 0, 241, 958, 0, 939, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 961, 256, 257,
	942, 940, 941, 948, 944, 943, 947, 258, 259, 260,
	261, 262, 263, 489, 490, 0, 264, 0, 266, 265,
	0, 267, 0, 0, 268, 269, 270, 0, 271, 0,
	272, 273, 0, 274, 491, 275, 276, 278, 280, 277,
	281, 282, 283, 284, 979, 980, 0, 216, 0, 0,
	0, 0, 0, 285, 286, 287, 494, 288, 289, 0,
	290, 0, 291, 0, 0, 962, 292, 293, 0, 294,
	986, 0, 496, 295, 0, 296, 297, 298, 299, 953,
	954, 957, 351, 964, 300, 301, 0, 302, 303, 305,
	0, 0, 217, 304, 306, 313, 0, 963, 307, 500,
	309, 308, 310, 311, 312, 501, 0, 502, 0, 314,
	965, 955, 966, 315, 316, 317, 967, 318, 319, 0,
	0, 320, 321, 322, 323, 324, 0, 326, 325, 0,
	327, 987, 968, 328, 329, 969, 0, 330, 331, 946,
	945, 332, 333, 334, 0, 335, 336, 338, 340, 337,
	339, 341, 343, 344, 342, 970, 345, 346, 348, 971,
	347, 0, 218, 972, 349, 0, 956, 350, 506, 352,
	353, 0, 354, 355, 356, 0, 0, 358, 359, 360,
	0, 0, 361, 362, 507, 973, 363, 974, 981, 364,
	357, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 982, 374, 510, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 511, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 392, 393, 394, 391, 395,
	396, 397, 398, 0, 399, 975, 400, 401, 402, 403,
	512, 1020, 0, 405, 409, 410, 411, 412, 413, 414,
	415, 0, 421, 422, 416, 418, 419, 420, 417, 423,
	424, 425, 949, 426, 406, 407, 427, 428, 976, 429,
	430, 513, 431, 432, 0, 433, 434, 435, 436, 408,
	437, 441, 442, 438, 439, 440, 983, 0, 444, 445,
	443, 0, 446, 447, 448, 449, 450, 279, 451, 0,
	452, 515, 516, 517, 518, 0, 459, 0, 453, 454,
	984, 455, 985, 0, 456, 457, 458, 0, 460, 461,
	0, 0, 462, 463, 464, 465, 466, 468, 950, 469,
	0, 467, 470, 471, 472, 521, 522, 523, 0, 474,
	473, 524, 835, 0, 1185, 0, 475, 476, 525, 477,
	478, 479, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 480, 1534, 0, 0, 0, 225, 227,
	226, 228, 229, 481, 482, 230, 483, 233, 231, 232,
	484, 0, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 485, 486, 487, 0, 241, 488, 0, 1089, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 961, 256,
	257, 0, 0, 0, 0, 0, 0, 0, 258, 259,
	260, 261, 262, 263, 489, 490, 0, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 274, 491, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 492, 493, 0, 216, 0,
	0, 0, 0, 0, 285, 286, 287, 494, 288, 289,
	0, 290, 0, 291, 0, 0, 962, 292, 293, 0,
	294, 495, 0, 496, 295, 0, 296, 297, 298, 299,
	497, 498, 499, 351, 964, 300, 301, 0, 302, 303,
	305, 0, 0, 0, 304, 306, 313, 0, 963, 307,
	500, 309, 308, 310, 311, 312, 501, 0, 502, 0,
	314, 965, 503, 966, 315, 316, 317, 967, 318, 319,
	0, 0, 320, 321, 322, 323, 324, 0, 326, 325,
	0, 327, 504, 968, 328, 329, 969, 0, 330, 331,
	0, 0, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 344, 342, 970, 345, 346, 348,
	971, 347, 0, 0, 972, 349, 0, 505, 350, 506,
	352, 353, 0, 354, 355, 356, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 507, 973, 363, 974, 508,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 509, 374, 510, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 511, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 975, 400, 401, 402,
	403, 512, 404, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 182, 421, 422, 416, 418, 419, 420, 417,
	423, 424, 425, 0, 426, 406, 407, 427, 428, 976,
	429, 430, 513, 431, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 442, 438, 439, 440, 514, 0, 444,
	445, 443, 184, 446, 447, 448, 449, 450, 279, 451,
	0, 452, 515, 516, 517, 518, 0, 459, 0, 453,
	454, 519, 455, 520, 0, 456, 457, 458, 0, 460,
	461, 0, 0, 462, 463, 464, 465, 466, 468, 0,
	469, 0, 467, 470, 471, 472, 1336, 522, 523, 0,
	474, 473, 524, 1333, 0, 1185, 176, 475, 476, 525,
	477, 478, 479, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 480, 151, 0, 0, 0, 225,
	227, 226, 228, 229, 481, 482, 230, 483, 233, 231,
	232, 484, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 485, 486, 487, 0, 241, 488, 0, 1089,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 961,
	256, 257, 0, 0, 0, 0, 0, 0, 0, 258,
	259, 260, 261, 262, 263, 489, 490, 0, 264, 0,
	266, 265, 0, 267, 0, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 274, 491, 275, 276, 278,
	280, 277, 281, 282, 283, 284, 492, 493, 0, 216,
	0, 0, 0, 0, 0, 285, 286, 287, 494, 288,
	289, 0, 290, 0, 291, 0, 0, 962, 292, 293,
	0, 294, 495, 0, 496, 295, 0, 296, 297, 298,
	299, 497, 498, 499, 351, 964, 300, 301, 0, 302,
	303, 305, 0, 0, 0, 304, 306, 313, 0, 963,
	307, 500, 309, 308, 310, 311, 312, 501, 0, 502,
	0, 314, 965, 503, 966, 315, 316, 317, 967, 318,
	319, 0, 0, 320, 321, 322, 323, 324, 0, 326,
	325, 0, 327, 504, 968, 328, 329, 969, 0, 330,
	331, 0, 0, 332, 333, 334, 0, 335, 336, 338,
	340, 337, 339, 341, 343, 344, 342, 970, 345, 346,
	348, 971, 347, 0, 0, 972, 349, 0, 505, 350,
	506, 352, 353, 0, 354, 355, 356, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 507, 973, 363, 974,
	508, 364, 357, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 509, 374, 510, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 511, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 392, 393, 394,
	391, 395, 396, 397, 398, 0, 399, 975, 400, 401,
	402, 403, 512, 404, 0, 405, 409, 410, 411, 412,
	413, 414, 415, 182, 421, 422, 416, 418, 419, 420,
	417, 423, 424, 425, 0, 426, 406, 407, 427, 428,
	976, 429, 430, 513, 431, 432, 0, 433, 434, 435,
	436, 408, 437, 441, 442, 438, 439, 440, 514, 0,
	444, 445, 443, 184, 446, 447, 448, 449, 450, 279,
	451, 0, 452, 515, 516, 517, 518, 0, 459, 0,
	453, 454, 519, 455, 520, 0, 456, 457, 458, 0,
	460, 461, 0, 0, 462, 463, 464, 465, 466, 468,
	0, 469, 0, 467, 470, 471, 472, 1336, 522, 523,
	0, 474, 473, 524, 0, 0, 0, 176, 475, 476,
	525, 477, 478, 479, 0, 177, 0, 0, 0, 0,
	1185, 1184, 0, 0, 0, 0, 1182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 480,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	482, 230, 483, 233, 231, 232, 484, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 485, 486, 487,
	0, 241, 488, 0, 1089, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 961, 256, 257, 0, 0, 0,
	0, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	489, 490, 0, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	274, 491, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 492, 493, 0, 216, 0, 0, 0, 0, 0,
	285, 286, 287, 494, 288, 289, 0, 290, 0, 291,
	0, 0, 962, 292, 293, 0, 294, 495, 0, 496,
	295, 0, 296, 297, 298, 299, 497, 498, 499, 351,
	964, 300, 301, 0, 302, 303, 305, 0, 0, 0,
	304, 306, 313, 0, 963, 307, 500, 309, 308, 310,
	311, 312, 501, 0, 502, 0, 314, 965, 503, 966,
	315, 316, 317, 967, 318, 319, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 504, 968,
	328, 329, 969, 0, 330, 331, 0, 0, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	344, 342, 970, 345, 346, 348, 971, 347, 0, 0,
	972, 349, 0, 505, 350, 506, 352, 353, 0, 354,
	355, 356, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 973, 363, 974, 508, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 509, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 511, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 975, 400, 401, 402, 403, 512, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 416, 418, 419, 420, 417, 423, 424, 425, 0,
	426, 406, 407, 427, 428, 976, 429, 430, 513, 431,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 442,
	438, 439, 440, 514, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 451, 0, 452, 515, 516,
	517, 518, 0, 459, 0, 453, 454, 519, 455, 520,
	0, 456, 457, 458, 0, 460, 461, 0, 0, 462,
	463, 464, 465, 466, 468, 0, 469, 0, 467, 470,
	471, 472, 521, 522, 523, 0, 474, 473, 524, 0,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 1185,
	1184, 0, 0, 0, 0, 1182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 2875, 224, 0, 0, 0, 0, 0, 480, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 481, 482,
	230, 483, 233, 231, 232, 484, 0, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 485, 486, 487, 0,
	241, 488, 0, 1089, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 961, 256, 257, 0, 0, 0, 0,
	0, 0, 0, 258, 259, 260, 261, 262, 263, 489,
	490, 0, 264, 0, 266, 265, 0, 267, 0, 0,
	268, 269, 270, 0, 271, 0, 272, 273, 0, 274,
	491, 275, 276, 278, 280, 277, 281, 282, 283, 284,
	492, 493, 0, 216, 0, 0, 0, 0, 0, 285,
	286, 287, 494, 288, 289, 0, 290, 0, 291, 0,
	0, 962, 292, 293, 0, 294, 495, 0, 496, 295,
	0, 296, 297, 298, 299, 497, 498, 499, 351, 964,
	300, 301, 0, 302, 303, 305, 0, 0, 0, 304,
	306, 313, 0, 963, 307, 500, 309, 308, 310, 311,
	312, 501, 0, 502, 0, 314, 965, 503, 966, 315,
	316, 317, 967, 318, 319, 0, 0, 320, 321, 322,
	323, 324, 0, 326, 325, 0, 327, 504, 968, 328,
	329, 969, 0, 330, 331, 0, 0, 332, 333, 334,
	0, 335, 336, 338, 340, 337, 339, 341, 343, 344,
	342, 970, 345, 346, 348, 971, 347, 0, 0, 972,
	349, 0, 505, 350, 506, 352, 353, 0, 354, 355,
	356, 0, 0, 358, 359, 360, 0, 0, 361, 362,
	507, 973, 363, 974, 508, 364, 357, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 509, 374, 510,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 511, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 392, 393, 394, 391, 395, 396, 397, 398, 0,
	399, 975, 400, 401, 402, 403, 512, 404, 0, 405,
	409, 410, 411, 412, 413, 414, 415, 0, 421, 422,
	416, 418, 419, 420, 417, 423, 424, 425, 0, 426,
	406, 407, 427, 428, 976, 429, 430, 513, 431, 432,
	0, 433, 434, 435, 436, 408, 437, 441, 442, 438,
	439, 440, 514, 0, 444, 445, 443, 0, 446, 447,
	448, 449, 450, 279, 451, 0, 452, 515, 516, 517,
	518, 0, 459, 0, 453, 454, 519, 455, 520, 0,
	456, 457, 458, 0, 460, 461, 0, 0, 462, 463,
	464, 465, 466, 468, 0, 469, 0, 467, 470, 471,
	472, 521, 522, 523, 0, 474, 473, 524, 0, 0,
	0, 0, 475, 476, 525, 477, 478, 479, 1185, 1184,
	0, 0, 0, 0, 1182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	1203, 224, 0, 0, 0, 0, 0, 480, 0, 0,
	0, 0, 225, 227, 226, 228, 229, 481, 482, 230,
	483, 233, 231, 232, 484, 0, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 485, 486, 487, 0, 241,
	488, 0, 1089, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 961, 256, 257, 0, 0, 0, 0, 0,
	0, 0, 258, 259, 260, 261, 262, 263, 489, 490,
	0, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 274, 491,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 492,
	493, 0, 216, 0, 0, 0, 0, 0, 285, 286,
	287, 494, 288, 289, 0, 290, 0, 291, 0, 0,
	962, 292, 293, 0, 294, 495, 0, 496, 295, 0,
	296, 297, 298, 299, 497, 498, 499, 351, 964, 300,
	301, 0, 302, 303, 305, 0, 0, 0, 304, 306,
	313, 0, 963, 307, 500, 309, 308, 310, 311, 312,
	501, 0, 502, 0, 314, 965, 503, 966, 315, 316,
	317, 967, 318, 319, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 504, 968, 328, 329,
	969, 0, 330, 331, 0, 0, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 344, 342,
	970, 345, 346, 348, 971, 347, 0, 0, 972, 349,
	0, 505, 350, 506, 352, 353, 0, 354, 355, 356,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	973, 363, 974, 508, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 509, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	511, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	975, 400, 401, 402, 403, 512, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 0, 421, 422, 416,
	418, 419, 420, 417, 423, 424, 425, 0, 426, 406,
	407, 427, 428, 976, 429, 430, 513, 431, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 442, 438, 439,
	440, 514, 0, 444, 445, 443, 0, 446, 447, 448,
	449, 450, 279, 451, 0, 452, 515, 516, 517, 518,
	0, 459, 0, 453, 454, 519, 455, 520, 0, 456,
	457, 458, 0, 460, 461, 0, 0, 462, 463, 464,
	465, 466, 468, 0, 469, 0, 467, 470, 471, 472,
	521, 522, 523, 0, 474, 473, 524, 1026, 0, 0,
	0, 475, 476, 525, 477, 478, 479, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 952, 0, 0, 1342,
	0, 225, 227, 226, 228, 229, 481, 482, 230, 483,
	233, 231, 232, 484, 0, 234, 235, 236, 237, 238,
	239, 0, 951, 240, 485, 486, 487, 0, 241, 958,
	0, 939, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 961, 256, 257, 942, 940, 941, 948, 944, 943,
	947, 258, 259, 260, 261, 262, 263, 489, 490, 0,
	264, 0, 266, 265, 0, 267, 0, 0, 268, 269,
	270, 0, 271, 0, 272, 273, 0, 274, 491, 275,
	276, 278, 280, 277, 281, 282, 283, 284, 979, 980,
	0, 216, 0, 0, 0, 0, 0, 285, 286, 287,
	494, 288, 289, 0, 290, 0, 291, 0, 0, 962,
	292, 293, 0, 294, 986, 0, 496, 295, 0, 296,
	297, 298, 299, 953, 954, 957, 351, 964, 300, 301,
	0, 302, 303, 305, 0, 0, 217, 304, 306, 313,
	0, 963, 307, 500, 309, 308, 310, 311, 312, 501,
	0, 502, 0, 314, 965, 955, 966, 315, 316, 317,
	967, 318, 319, 0, 0, 320, 321, 322, 323, 324,
	0, 326, 325, 0, 327, 987, 968, 328, 329, 969,
	0, 330, 331, 946, 945, 332, 333, 334, 0, 335,
	336, 338, 340, 337, 339, 341, 343, 344, 342, 970,
	345, 346, 348, 971, 347, 0, 218, 972, 349, 0,
	956, 350, 506, 352, 353, 0, 354, 355, 356, 0,
	0, 358, 359, 360, 0, 0, 361, 362, 507, 973,
	363, 974, 981, 364, 357, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 982, 374, 510, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 511,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 392,
	393, 394, 391, 395, 396, 397, 398, 0, 399, 975,
	400, 401, 402, 403, 512, 404, 0, 405, 409, 410,
	411, 412, 413, 414, 415, 0, 421, 422, 416, 418,
	419, 420, 417, 423, 424, 425, 949, 426, 406, 407,
	427, 428, 976, 429, 430, 513, 431, 432, 0, 433,
	434, 435, 436, 408, 437, 441, 442, 438, 439, 440,
	983, 0, 444, 445, 443, 0, 446, 447, 448, 449,
	450, 279, 451, 0, 452, 515, 516, 517, 518, 0,
	459, 0, 453, 454, 984, 455, 985, 0, 456, 457,
	458, 0, 460, 461, 0, 0, 462, 463, 464, 465,
	466, 468, 950, 469, 0, 467, 470, 471, 472, 521,
	522, 523, 0, 474, 473, 524, 835, 0, 213, 0,
	475, 476, 525, 477, 478, 479, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 480, 0, 0,
	0, 0, 225, 227, 226, 228, 229, 481, 482, 230,
	483, 233, 231, 232, 484, 0, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 485, 486, 487, 0, 241,
	488, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 0, 256, 257, 0, 0, 0, 0, 0,
	0, 0, 258, 259, 260, 261, 262, 263, 489, 490,
	0, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 274, 491,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 492,
	493, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	287, 494, 288, 289, 0, 290, 0, 291, 0, 0,
	0, 292, 293, 0, 294, 495, 0, 496, 295, 0,
	296, 297, 298, 299, 497, 498, 499, 351, 0, 300,
	301, 0, 302, 303, 305, 0, 0, 0, 304, 306,
	313, 0, 0, 307, 500, 309, 308, 310, 311, 312,
	501, 0, 502, 0, 314, 0, 503, 0, 315, 316,
	317, 0, 318, 319, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 504, 0, 328, 329,
	0, 0, 330, 331, 0, 0, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 344, 342,
	0, 345, 346, 348, 0, 347, 0, 0, 0, 349,
	0, 505, 350, 506, 352, 353, 0, 354, 355, 356,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	0, 363, 0, 508, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 509, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	511, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 512, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 182, 421, 422, 416,
	418, 419, 420, 417, 423, 424, 425, 0, 426, 406,
	407, 427, 428, 0, 429, 430, 513, 431, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 442, 438, 439,
	440, 514, 0, 444, 445, 443, 184, 446, 447, 448,
	449, 450, 279, 451, 0, 452, 515, 516, 517, 518,
	0, 459, 0, 453, 454, 519, 455, 520, 0, 456,
	457, 458, 0, 460, 461, 0, 0, 462, 463, 464,
	465, 466, 468, 0, 469, 0, 467, 470, 471, 472,
	1336, 522, 523, 0, 474, 473, 524, 213, 0, 0,
	176, 475, 476, 525, 477, 478, 479, 0, 177, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 480, 0, 0, 151,
	0, 225, 227, 226, 228, 229, 481, 482, 230, 483,
	233, 231, 232, 484, 0, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 485, 486, 487, 0, 241, 488,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 0, 256, 257, 0, 0, 0, 0, 0, 0,
	0, 258, 259, 260, 261, 262, 263, 489, 490, 0,
	264, 0, 266, 265, 0, 267, 0, 0, 268, 269,
	270, 0, 271, 0, 272, 273, 0, 274, 491, 275,
	276, 278, 280, 277, 281, 282, 283, 284, 492, 493,
	0, 216, 0, 0, 0, 0, 0, 285, 286, 287,
	494, 288, 289, 0, 290, 0, 291, 0, 0, 0,
	292, 293, 0, 294, 495, 0, 496, 295, 0, 296,
	297, 298, 299, 497, 498, 499, 351, 0, 300, 301,
	0, 302, 303, 305, 0, 0, 217, 304, 306, 313,
	0, 0, 307, 500, 309, 308, 310, 311, 312, 501,
	0, 502, 0, 314, 0, 503, 0, 315, 316, 317,
	0, 318, 319, 0, 0, 320, 321, 322, 323, 324,
	0, 326, 325, 0, 327, 504, 0, 328, 329, 0,
	0, 330, 331, 0, 0, 332, 333, 334, 0, 335,
	336, 338, 340, 337, 339, 341, 343, 344, 342, 0,
	345, 346, 348, 0, 347, 0, 218, 0, 349, 0,
	505, 350, 506, 352, 353, 0, 354, 355, 356, 0,
	0, 358, 359, 360, 0, 0, 361, 362, 507, 0,
	363, 0, 508, 364, 357, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 509, 374, 510, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 511,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 392,
	393, 394, 391, 395, 396, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 512, 404, 0, 405, 409, 410,
	411, 412, 413, 414, 415, 0, 421, 422, 416, 418,
	419, 420, 417, 423, 424, 425, 0, 426, 406, 407,
	427, 428, 0, 429, 430, 513, 431, 432, 0, 433,
	434, 435, 436, 408, 437, 441, 442, 438, 439, 440,
	514, 0, 444, 445, 443, 0, 446, 447, 448, 449,
	450, 279, 451, 0, 452, 515, 516, 517, 518, 0,
	459, 0, 453, 454, 519, 455, 520, 0, 456, 457,
	458, 0, 460, 461, 0, 0, 462, 463, 464, 465,
	466, 468, 0, 469, 0, 467, 470, 471, 472, 521,
	522, 523, 0, 474, 473, 524, 1283, 0, 213, 0,
	475, 476, 525, 477, 478, 479, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 480, 1647, 0,
	0, 0, 225, 227, 226, 228, 229, 481, 482, 230,
	483, 233, 231, 232, 484, 0, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 485, 486, 487, 0, 241,
	488, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 0, 256, 257, 0, 0, 0, 0, 0,
	0, 0, 258, 259, 260, 261, 262, 263, 489, 490,
	0, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 274, 491,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 492,
	493, 0, 216, 0, 0, 0, 0, 0, 285, 286,
	287, 494, 288, 289, 0, 290, 0, 291, 0, 0,
	0, 292, 293, 0, 294, 495, 0, 496, 295, 0,
	296, 297, 298, 299, 497, 498, 499, 351, 0, 300,
	301, 0, 302, 303, 305, 0, 0, 217, 304, 306,
	313, 0, 0, 307, 500, 309, 308, 310, 311, 312,
	501, 0, 502, 0, 314, 0, 503, 0, 315, 316,
	317, 0, 318, 319, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 504, 0, 328, 329,
	0, 0, 330, 331, 0, 0, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 344, 342,
	0, 345, 346, 348, 0, 347, 0, 218, 0, 349,
	0, 505, 350, 506, 352, 353, 0, 354, 355, 356,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	0, 363, 0, 508, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 509, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	511, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 512, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 0, 421, 422, 416,
	418, 419, 420, 417, 423, 424, 425, 0, 426, 406,
	407, 427, 428, 0, 429, 430, 513, 431, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 442, 438, 439,
	440, 514, 0, 444, 445, 443, 0, 446, 447, 448,
	449, 450, 279, 451, 0, 452, 515, 516, 517, 518,
	0, 459, 0, 453, 454, 519, 455, 520, 0, 456,
	457, 458, 0, 460, 461, 0, 0, 462, 463, 464,
	465, 466, 468, 0, 469, 0, 467, 470, 471, 472,
	521, 522, 523, 0, 474, 473, 524, 213, 0, 0,
	0, 475, 476, 525, 477, 478, 479, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 480, 1287, 0, 0,
	0, 225, 227, 226, 228, 229, 481, 482, 230, 483,
	233, 231, 232, 484, 0, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 485, 486, 487, 0, 241, 488,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 0, 256, 257, 0, 0, 0, 0, 0, 0,
	0, 258, 259, 260, 261, 262, 263, 489, 490, 0,
	264, 0, 266, 265, 0, 267, 0, 0, 268, 269,
	270, 0, 271, 0, 272, 273, 0, 274, 491, 275,
	276, 278, 280, 277, 281, 282, 283, 284, 492, 493,
	0, 216, 0, 0, 0, 0, 0, 285, 286, 287,
	494, 288, 289, 0, 290, 0, 291, 0, 0, 0,
	292, 293, 0, 294, 495, 0, 496, 295, 0, 296,
	297, 298, 299, 497, 498, 499, 351, 0, 300, 301,
	0, 302, 303, 305, 0, 0, 217, 304, 306, 313,
	0, 0, 307, 500, 309, 308, 310, 311, 312, 501,
	0, 502, 0, 314, 0, 503, 0, 315, 316, 317,
	0, 318, 319, 0, 0, 320, 321, 322, 323, 324,
	0, 326, 325, 0, 327, 504, 0, 328, 329, 0,
	0, 330, 331, 0, 0, 332, 333, 334, 0, 335,
	336, 338, 340, 337, 339, 341, 343, 344, 342, 0,
	345, 346, 348, 0, 347, 0, 218, 0, 349, 0,
	505, 350, 506, 352, 353, 0, 354, 355, 356, 0,
	0, 358, 359, 360, 0, 0, 361, 362, 507, 0,
	363, 0, 508, 364, 357, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 509, 374, 510, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 511,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 392,
	393, 394, 391, 395, 396, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 512, 404, 0, 405, 409, 410,
	411, 412, 413, 414, 415, 0, 421, 422, 416, 418,
	419, 420, 417, 423, 424, 425, 0, 426, 406, 407,
	427, 428, 0, 429, 430, 513, 431, 432, 0, 433,
	434, 435, 436, 408, 437, 441, 442, 438, 439, 440,
	514, 0, 444, 445, 443, 0, 446, 447, 448, 449,
	450, 279, 451, 0, 452, 515, 516, 517, 518, 0,
	459, 0, 453, 454, 519, 455, 520, 0, 456, 457,
	458, 0, 460, 461, 0, 0, 462, 463, 464, 465,
	466, 468, 0, 469, 0, 467, 470, 471, 472, 521,
	522, 523, 0, 474, 473, 524, 213, 0, 0, 0,
	475, 476, 525, 477, 478, 479, 0, 0, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 480, 2825, 0, 0, 0,
	225, 227, 226, 228, 229, 481, 482, 230, 483, 233,
	231, 232, 484, 0, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 485, 486, 487, 0, 241, 488, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	0, 256, 257, 0, 0, 0, 0, 0, 0, 0,
	258, 259, 260, 261, 262, 263, 489, 490, 0, 264,
	0, 266, 265, 0, 267, 0, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 274, 491, 275, 276,
	278, 280, 277, 281, 282, 283, 284, 492, 493, 0,
	216, 0, 0, 0, 0, 0, 285, 286, 287, 494,
	288, 289, 0, 290, 0, 291, 0, 0, 0, 292,
	293, 0, 294, 495, 0, 496, 295, 0, 296, 297,
	298, 299, 497, 498, 499, 351, 0, 300, 301, 0,
	302, 303, 305, 0, 0, 217, 304, 306, 313, 0,
	0, 307, 500, 309, 308, 310, 311, 312, 501, 0,
	502, 0, 314, 0, 503, 0, 315, 316, 317, 0,
	318, 319, 0, 0, 320, 321, 322, 323, 324, 0,
	326, 325, 0, 327, 504, 0, 328, 329, 0, 0,
	330, 331, 0, 0, 332, 333, 334, 0, 335, 336,
	338, 340, 337, 339, 341, 343, 344, 342, 0, 345,
	346, 348, 0, 347, 0, 218, 0, 349, 0, 505,
	350, 506, 352, 353, 0, 354, 355, 356, 0, 0,
	358, 359, 360, 0, 0, 361, 362, 507, 0, 363,
	0, 508, 364, 357, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 509, 374, 510, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 511, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 392, 393,
	394, 391, 395, 396, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 512, 404, 0, 405, 409, 410, 411,
	412, 413, 414, 415, 0, 421, 422, 416, 418, 419,
	420, 417, 423, 424, 425, 0, 426, 406, 407, 427,
	428, 0, 429, 430, 513, 431, 432, 0, 433, 434,
	435, 436, 408, 437, 441, 442, 438, 439, 440, 514,
	0, 444, 445, 443, 0, 446, 447, 448, 449, 450,
	279, 451, 0, 452, 515, 516, 517, 518, 0, 459,
	0, 453, 454, 519, 455, 520, 0, 456, 457, 458,
	0, 460, 461, 0, 0, 462, 463, 464, 465, 466,
	468, 0, 469, 0, 467, 470, 471, 472, 521, 522,
	523, 0, 474, 473, 524, 213, 0, 0, 0, 475,
	476, 525, 477, 478, 479, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 480, 1287, 0, 0, 0, 225,
	227, 226, 228, 229, 481, 482, 230, 483, 233, 231,
	232, 484, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 485, 486, 487, 0, 241, 488, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 0,
	256, 257, 0, 0, 0, 0, 0, 0, 0, 258,
	259, 260, 261, 262, 263, 489, 490, 0, 264, 0,
	266, 265, 0, 267, 0, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 274, 491, 275, 276, 278,
	280, 277, 281, 282, 283, 284, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 494, 288,
	289, 0, 290, 0, 291, 0, 0, 0, 292, 293,
	0, 294, 495, 0, 496, 295, 0, 296, 297, 298,
	299, 497, 498, 499, 351, 0, 300, 301, 0, 302,
	303, 305, 0, 0, 0, 304, 306, 313, 0, 0,
	307, 500, 309, 308, 310, 311, 312, 501, 0, 502,
	0, 314, 0, 503, 0, 315, 316, 317, 0, 318,
	319, 0, 0, 320, 321, 322, 323, 324, 0, 326,
	325, 0, 327, 504, 0, 328, 329, 0, 0, 330,
	331, 0, 0, 332, 333, 334, 0, 335, 336, 338,
	340, 337, 339, 341, 343, 344, 342, 0, 345, 346,
	348, 0, 347, 0, 0, 0, 349, 0, 505, 350,
	506, 352, 353, 0, 354, 355, 356, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 507, 0, 363, 0,
	508, 364, 357, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 509, 374, 510, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 511, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 392, 393, 394,
	391, 395, 396, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 512, 404, 0, 405, 409, 410, 411, 412,
	413, 414, 415, 0, 421, 422, 416, 418, 419, 420,
	417, 423, 424, 425, 0, 426, 406, 407, 427, 428,
	0, 429, 430, 513, 431, 432, 0, 433, 434, 435,
	436, 408, 437, 441, 442, 438, 439, 440, 514, 0,
	444, 445, 443, 0, 446, 447, 448, 449, 450, 279,
	451, 0, 452, 515, 516, 517, 518, 0, 459, 0,
	453, 454, 519, 455, 520, 0, 456, 457, 458, 0,
	460, 461, 0, 0, 462, 463, 464, 465, 466, 468,
	0, 469, 0, 467, 470, 471, 472, 521, 522, 523,
	0, 474, 473, 524, 213, 0, 0, 0, 475, 476,
	525, 477, 478, 479, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 480, 0, 0, 2431, 0, 225, 227,
	226, 228, 229, 481, 482, 230, 483, 233, 231, 232,
	484, 0, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 485, 486, 487, 0, 241, 488, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 0, 256,
	257, 0, 0, 0, 0, 0, 0, 0, 258, 259,
	260, 261, 262, 263, 489, 490, 0, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 274, 491, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 492, 493, 0, 0, 0,
	0, 0, 0, 0, 285, 286, 287, 494, 288, 289,
	0, 290, 0, 291, 0, 0, 0, 292, 293, 0,
	294, 495, 0, 496, 295, 0, 296, 297, 298, 299,
	497, 498, 499, 351, 0, 300, 301, 0, 302, 303,
	305, 0, 0, 0, 304, 306, 313, 0, 0, 307,
	500, 309, 308, 310, 311, 312, 501, 0, 502, 0,
	314, 0, 503, 0, 315, 316, 317, 0, 318, 319,
	0, 0, 320, 321, 322, 323, 324, 0, 326, 325,
	0, 327, 504, 0, 328, 329, 0, 0, 330, 331,
	0, 0, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 344, 342, 0, 345, 346, 348,
	0, 347, 0, 0, 0, 349, 0, 505, 350, 506,
	352, 353, 0, 354, 355, 356, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 507, 0, 363, 0, 508,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 509, 374, 510, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 511, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 512, 404, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 0, 421, 422, 416, 418, 419, 420, 417,
	423, 424, 425, 0, 426, 406, 407, 427, 428, 0,
	429, 430, 513, 431, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 442, 438, 439, 440, 514, 0, 444,
	445, 443, 0, 446, 447, 448, 449, 450, 279, 451,
	0, 452, 515, 516, 517, 518, 0, 459, 0, 453,
	454, 519, 455, 520, 0, 456, 457, 458, 0, 460,
	461, 0, 0, 462, 463, 464, 465, 466, 468, 0,
	469, 0, 467, 470, 471, 472, 521, 522, 523, 0,
	474, 473, 524, 213, 0, 0, 0, 475, 476, 525,
	477, 478, 479, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 480, 0, 0, 2962, 0, 225, 227, 226,
	228, 229, 481, 482, 230, 483, 233, 231, 232, 484,
	0, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	485, 486, 487, 0, 241, 488, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 0, 256, 257,
	0, 0, 0, 0, 0, 0, 0, 258, 259, 260,
	261, 262, 263, 489, 490, 0, 264, 0, 266, 265,
	0, 267, 0, 0, 268, 269, 270, 0, 271, 0,
	272, 273, 0, 274, 491, 275, 276, 278, 280, 277,
	281, 282, 283, 284, 492, 493, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 494, 288, 289, 0,
	290, 0, 291, 0, 0, 0, 292, 293, 0, 294,
	495, 0, 496, 295, 0, 296, 297, 298, 299, 497,
	498, 499, 351, 0, 300, 301, 0, 302, 303, 305,
	0, 0, 0, 304, 306, 313, 0, 0, 307, 500,
	309, 308, 310, 311, 312, 501, 0, 502, 0, 314,
	0, 503, 0, 315, 316, 317, 0, 318, 319, 0,
	0, 320, 321, 322, 323, 324, 0, 326, 325, 0,
	327, 504, 0, 328, 329, 0, 0, 330, 331, 0,
	0, 332, 333, 334, 0, 335, 336, 338, 340, 337,
	339, 341, 343, 344, 342, 0, 345, 346, 348, 0,
	347, 0, 0, 0, 349, 0, 505, 350, 506, 352,
	353, 0, 354, 355, 356, 0, 0, 358, 359, 360,
	0, 0, 361, 362, 507, 0, 363, 0, 508, 364,
	357, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 509, 374, 510, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 511, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 392, 393, 394, 391, 395,
	396, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	512, 404, 0, 405, 409, 410, 411, 412, 413, 414,
	415, 0, 421, 422, 416, 418, 419, 420, 417, 423,
	424, 425, 0, 426, 406, 407, 427, 428, 0, 429,
	430, 513, 431, 432, 0, 433, 434, 435, 436, 408,
	437, 441, 442, 438, 439, 440, 514, 0, 444, 445,
	443, 0, 446, 447, 448, 449, 450, 279, 451, 0,
	452, 515, 516, 517, 518, 0, 459, 0, 453, 454,
	519, 455, 520, 0, 456, 457, 458, 0, 460, 461,
	0, 0, 462, 463, 464, 465, 466, 468, 0, 469,
	0, 467, 470, 471, 472, 521, 522, 523, 0, 474,
	473, 524, 705, 0, 593, 0, 475, 476, 525, 477,
	478, 479, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 480, 1917, 0, 0, 0, 225, 227,
	226, 228, 229, 481, 482, 230, 483, 233, 231, 232,
	484, 0, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 485, 486, 487, 0, 241, 488, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 0, 256,
	257, 0, 0, 0, 0, 0, 0, 0, 258, 259,
	599, 261, 262, 263, 489, 490, 0, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 274, 491, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 492, 493, 0, 216, 0,
	0, 0, 0, 0, 285, 286, 287, 494, 288, 289,
	0, 290, 0, 291, 0, 703, 0, 292, 293, 0,
	294, 495, 0, 496, 295, 0, 296, 297, 298, 299,
	497, 498, 499, 351, 0, 300, 301, 0, 302, 303,
	305, 0, 0, 217, 304, 306, 313, 0, 0, 307,
	500, 309, 308, 310, 311, 312, 501, 0, 502, 0,
	314, 0, 503, 0, 315, 316, 317, 0, 318, 319,
	0, 0, 320, 321, 322, 323, 324, 0, 326, 325,
	0, 327, 504, 0, 328, 329, 0, 0, 330, 331,
	0, 0, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 344, 342, 0, 345, 346, 348,
	0, 347, 0, 218, 0, 349, 0, 505, 350, 506,
	352, 353, 0, 354, 355, 356, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 507, 0, 363, 0, 508,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 509, 374, 510, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 511, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 512, 404, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 0, 421, 422, 416, 418, 419, 420, 417,
	423, 424, 425, 0, 426, 406, 407, 427, 428, 0,
	429, 430, 513, 431, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 442, 438, 439, 440, 514, 0, 444,
	445, 443, 598, 446, 447, 448, 449, 450, 279, 451,
	0, 452, 515, 516, 517, 518, 0, 459, 0, 453,
	454, 519, 455, 520, 0, 456, 457, 458, 0, 460,
	461, 0, 0, 462, 463, 464, 465, 466, 468, 0,
	469, 0, 467, 470, 471, 472, 521, 522, 523, 0,
	474, 473, 524, 0, 592, 0, 593, 475, 476, 525,
	477, 478, 479, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 602, 224,
	0, 0, 0, 0, 0, 480, 0, 0, 0, 0,
	225, 227, 226, 228, 229, 481, 482, 230, 483, 233,
	231, 232, 484, 0, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 485, 486, 487, 0, 241, 488, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	0, 256, 257, 0, 0, 0, 0, 0, 0, 0,
	258, 259, 599, 261, 262, 263, 489, 490, 0, 264,
	0, 266, 265, 0, 267, 0, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 274, 491, 275, 276,
	278, 280, 277, 281, 282, 283, 284, 492, 493, 0,
	216, 0, 0, 0, 0, 0, 285, 286, 287, 494,
	288, 289, 0, 290, 0, 291, 0, 0, 0, 292,
	293, 0, 294, 495, 0, 496, 295, 0, 296, 297,
	298, 299, 497, 498, 499, 351, 0, 300, 301, 0,
	302, 303, 305, 0, 0, 217, 304, 306, 313, 0,
	0, 307, 500, 309, 308, 310, 311, 312, 501, 0,
	502, 0, 314, 0, 503, 0, 315, 316, 317, 0,
	318, 319, 0, 0, 320, 321, 322, 323, 324, 0,
	326, 325, 0, 327, 504, 0, 328, 329, 0, 0,
	330, 331, 0, 0, 332, 333, 334, 0, 335, 336,
	338, 340, 337, 339, 341, 343, 344, 342, 0, 345,
	346, 348, 0, 347, 0, 218, 0, 349, 0, 505,
	350, 506, 352, 353, 0, 354, 355, 356, 0, 0,
	358, 359, 360, 0, 0, 361, 362, 507, 0, 363,
	0, 508, 364, 357, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 509, 374, 510, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 511, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 392, 393,
	394, 391, 395, 396, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 512, 404, 0, 405, 409, 410, 411,
	412, 413, 414, 415, 0, 421, 422, 416, 418, 419,
	420, 417, 423, 424, 425, 0, 426, 406, 407, 427,
	428, 0, 429, 430, 513, 431, 432, 0, 433, 434,
	435, 436, 408, 437, 441, 442, 438, 439, 440, 514,
	0, 444, 445, 443, 598, 446, 447, 448, 449, 450,
	279, 451, 0, 452, 515, 516, 517, 518, 590, 459,
	0, 453, 454, 519, 455, 520, 0, 456, 457, 458,
	0, 460, 461, 0, 0, 462, 463, 464, 465, 466,
	468, 0, 469, 0, 467, 470, 471, 472, 521, 522,
	523, 0, 474, 473, 524, 0, 0, 0, 0, 475,
	476, 525, 477, 478, 479, 1185, 1184, 0, 0, 0,
	0, 1182, 0, 0, 0, 0, 0, 0, 0, 0,
	602, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 481, 482, 230, 483, 233, 231,
	232, 484, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 485, 486, 487, 0, 241, 488, 0, 1089,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 961,
	256, 257, 0, 0, 0, 0, 0, 0, 0, 258,
	259, 260, 261, 262, 263, 489, 490, 0, 264, 0,
	266, 265, 0, 267, 0, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 274, 491, 275, 276, 278,
	280, 277, 281, 282, 283, 284, 492, 493, 0, 216,
	0, 0, 0, 0, 0, 285, 286, 287, 494, 288,
	289, 0, 290, 0, 291, 0, 0, 962, 292, 293,
	0, 294, 495, 0, 496, 295, 0, 296, 297, 298,
	299, 497, 498, 499, 351, 964, 300, 301, 0, 302,
	303, 305, 0, 0, 0, 304, 306, 313, 0, 963,
	307, 500, 309, 308, 310, 311, 312, 501, 0, 502,
	0, 314, 965, 503, 966, 315, 316, 317, 967, 318,
	319, 0, 0, 320, 321, 322, 323, 324, 0, 326,
	325, 0, 327, 504, 968, 328, 329, 969, 0, 330,
	331, 0, 0, 332, 333, 334, 0, 335, 336, 338,
	340, 337, 339, 341, 343, 344, 342, 970, 345, 346,
	348, 971, 347, 0, 0, 972, 349, 2797, 505, 350,
	506, 352, 353, 0, 354, 355, 356, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 507, 973, 363, 974,
	508, 364, 357, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 509, 374, 510, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 511, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 392, 393, 394,
	391, 395, 396, 397, 398, 0, 399, 975, 400, 401,
	402, 403, 512, 404, 0, 405, 409, 410, 411, 412,
	413, 414, 415, 0, 421, 422, 416, 418, 419, 420,
	417, 423, 424, 425, 0, 426, 406, 407, 427, 428,
	976, 429, 430, 513, 431, 432, 0, 433, 434, 435,
	436, 408, 437, 441, 442, 438, 439, 440, 514, 0,
	444, 445, 443, 0, 446, 447, 448, 449, 450, 279,
	451, 0, 452, 515, 516, 517, 518, 0, 459, 0,
	453, 454, 519, 455, 520, 0, 456, 457, 458, 0,
	460, 461, 0, 0, 462, 463, 464, 465, 466, 468,
	0, 469, 0, 467, 470, 471, 472, 521, 522, 523,
	593, 474, 473, 524, 0, 0, 0, 0, 475, 476,
	525, 477, 478, 479, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 480,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	482, 230, 483, 233, 231, 232, 484, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 485, 486, 487,
	0, 241, 488, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 0, 256, 257, 0, 0, 0,
	0, 0, 0, 0, 258, 259, 599, 261, 262, 263,
	489, 490, 0, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	274, 491, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 492, 493, 0, 216, 0, 0, 0, 0, 0,
	285, 286, 287, 494, 288, 289, 0, 290, 0, 291,
	0, 0, 0, 292, 293, 0, 294, 495, 0, 496,
	295, 0, 296, 297, 298, 299, 497, 498, 499, 351,
	0, 300, 301, 0, 302, 303, 305, 0, 0, 217,
	304, 306, 313, 0, 0, 307, 500, 309, 308, 310,
	311, 312, 501, 0, 502, 0, 314, 0, 503, 0,
	315, 316, 317, 0, 318, 319, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 504, 0,
	328, 329, 0, 0, 330, 331, 0, 0, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	344, 342, 0, 345, 346, 348, 0, 347, 0, 218,
	0, 349, 0, 505, 350, 506, 352, 353, 0, 354,
	355, 356, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 0, 363, 0, 508, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 509, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 511, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 0, 1951, 401, 402, 403, 512, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 416, 418, 419, 420, 417, 423, 424, 425, 0,
	426, 406, 407, 427, 428, 0, 429, 430, 513, 431,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 442,
	438, 439, 440, 514, 0, 444, 445, 443, 598, 446,
	447, 448, 449, 450, 279, 451, 0, 452, 515, 516,
	517, 518, 0, 459, 0, 453, 454, 519, 455, 520,
	0, 456, 457, 458, 0, 460, 461, 0, 0, 462,
	463, 464, 465, 466, 468, 0, 469, 0, 467, 470,
	471, 472, 521, 522, 523, 0, 474, 473, 524, 593,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 602, 0, 0, 0, 480, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 481, 482,
	230, 483, 233, 231, 232, 484, 0, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 485, 486, 487, 0,
	241, 488, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 0, 256, 257, 0, 0, 0, 0,
	0, 0, 0, 258, 259, 599, 261, 262, 263, 489,
	490, 0, 264, 0, 266, 265, 0, 267, 0, 0,
	268, 269, 270, 0, 271, 0, 272, 273, 0, 274,
	491, 275, 276, 278, 280, 277, 281, 282, 283, 284,
	492, 493, 0, 216, 0, 0, 0, 0, 0, 285,
	286, 287, 494, 288, 289, 0, 290, 0, 291, 0,
	0, 0, 292, 293, 0, 294, 495, 0, 496, 295,
	0, 296, 297, 298, 299, 497, 498, 499, 351, 0,
	300, 301, 0, 302, 303, 305, 0, 0, 217, 304,
	306, 313, 0, 0, 307, 500, 309, 308, 310, 311,
	312, 501, 0, 502, 0, 314, 0, 503, 0, 315,
	316, 317, 0, 318, 319, 0, 0, 320, 321, 322,
	323, 324, 0, 326, 325, 0, 327, 504, 0, 328,
	329, 0, 0, 330, 331, 0, 0, 332, 333, 334,
	0, 335, 336, 338, 340, 337, 339, 341, 343, 344,
	342, 0, 345, 346, 348, 0, 347, 0, 218, 0,
	349, 0, 505, 350, 506, 352, 353, 0, 354, 355,
	356, 0, 0, 358, 359, 360, 0, 0, 361, 362,
	507, 0, 363, 0, 508, 364, 357, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 509, 374, 510,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 511, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 392, 393, 394, 391, 395, 396, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 512, 404, 0, 405,
	409, 410, 411, 412, 413, 414, 415, 0, 421, 422,
	416, 418, 419, 420, 417, 423, 424, 425, 0, 426,
	406, 407, 427, 428, 0, 429, 430, 513, 431, 432,
	0, 433, 434, 435, 436, 408, 437, 441, 442, 438,
	439, 440, 514, 0, 444, 445, 443, 598, 446, 447,
	448, 449, 450, 279, 451, 0, 452, 515, 516, 517,
	518, 0, 459, 0, 453, 454, 519, 455, 520, 0,
	456, 457, 458, 0, 460, 461, 0, 0, 462, 463,
	464, 465, 466, 468, 0, 469, 0, 467, 470, 471,
	472, 521, 522, 523, 0, 474, 473, 524, 0, 0,
	0, 0, 475, 476, 525, 477, 478, 479, 1369, 0,
	1185, 1184, 0, 0, 0, 0, 1182, 0, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 480,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	482, 230, 483, 233, 231, 232, 484, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 485, 486, 487,
	0, 241, 488, 0, 1089, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 961, 256, 257, 0, 0, 0,
	0, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	489, 490, 0, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	274, 491, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 492, 493, 0, 216, 0, 0, 0, 0, 0,
	1368, 286, 287, 494, 288, 289, 0, 290, 0, 291,
	0, 0, 962, 292, 293, 0, 294, 495, 0, 496,
	295, 0, 296, 297, 298, 299, 497, 498, 499, 351,
	964, 300, 301, 0, 302, 303, 305, 0, 0, 0,
	304, 306, 313, 0, 963, 307, 500, 309, 308, 310,
	311, 312, 501, 0, 502, 0, 314, 965, 503, 966,
	315, 316, 317, 967, 318, 319, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 504, 968,
	328, 329, 969, 0, 330, 331, 0, 0, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	344, 342, 970, 345, 346, 348, 971, 347, 0, 0,
	972, 349, 0, 505, 350, 506, 352, 353, 0, 354,
	355, 356, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 973, 363, 974, 508, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 509, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	1367, 383, 511, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 975, 400, 401, 402, 403, 512, 404, 0,
	405, 409, 410, 411, 1366, 413, 414, 415, 0, 421,
	422, 416, 418, 419, 420, 417, 423, 424, 425, 0,
	426, 406, 407, 427, 428, 976, 429, 430, 513, 431,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 442,
	438, 439, 440, 514, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 451, 0, 452, 515, 516,
	517, 518, 0, 459, 0, 453, 454, 519, 455, 520,
	0, 456, 457, 458, 0, 460, 461, 0, 0, 462,
	463, 464, 465, 466, 468, 0, 469, 0, 467, 470,
	471, 472, 521, 522, 523, 0, 474, 473, 524, 0,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 1331,
	0, 1185, 1184, 0, 0, 0, 0, 1182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	221, 222, 223, 0, 224, 0, 0, 0, 0, 0,
	480, 0, 0, 0, 0, 225, 227, 226, 228, 229,
	481, 482, 230, 483, 233, 231, 232, 484, 0, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 485, 486,
	487, 0, 241, 488, 0, 1089, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 961, 256, 257, 0, 0,
	0, 0, 0, 0, 0, 258, 259, 260, 261, 262,
	263, 489, 490, 0, 264, 0, 266, 265, 0, 267,
	0, 0, 268, 269, 270, 0, 271, 0, 272, 273,
	0, 274, 491, 275, 276, 278, 280, 277, 281, 282,
	283, 284, 492, 493, 0, 216, 0, 0, 0, 0,
	0, 285, 286, 287, 494, 288, 289, 0, 290, 0,
	291, 0, 0, 962, 292, 293, 0, 294, 495, 0,
	496, 295, 0, 296, 297, 298, 299, 1330, 498, 499,
	351, 964, 300, 301, 0, 302, 303, 305, 0, 0,
	0, 304, 306, 313, 0, 963, 307, 500, 309, 308,
	310, 311, 312, 501, 0, 502, 0, 314, 965, 503,
	966, 315, 316, 317, 967, 318, 319, 0, 0, 320,
	321, 322, 323, 324, 0, 326, 325, 0, 327, 504,
	968, 328, 329, 969, 0, 330, 331, 0, 0, 332,
	333, 334, 0, 335, 336, 338, 340, 337, 339, 341,
	343, 344, 342, 970, 345, 346, 348, 971, 347, 0,
	0, 972, 349, 0, 505, 350, 506, 352, 353, 0,
	354, 355, 356, 0, 0, 358, 359, 360, 0, 0,
	361, 362, 507, 973, 363, 974, 508, 364, 357, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 509,
	374, 510, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 511, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 392, 393, 394, 391, 395, 396, 397,
	398, 0, 399, 975, 400, 401, 402, 403, 512, 404,
	0, 405, 409, 410, 411, 412, 413, 414, 415, 0,
	421, 422, 416, 418, 419, 420, 417, 423, 424, 425,
	0, 426, 406, 407, 427, 428, 976, 429, 430, 513,
	431, 432, 0, 433, 434, 435, 436, 408, 437, 441,
	442, 438, 439, 440, 514, 0, 444, 445, 443, 0,
	446, 447, 448, 449, 450, 279, 451, 0, 452, 515,
	516, 517, 518, 0, 459, 0, 453, 454, 519, 455,
	520, 0, 456, 457, 458, 0, 460, 461, 0, 0,
	462, 463, 464, 465, 466, 468, 0, 469, 0, 467,
	470, 471, 472, 521, 522, 523, 0, 474, 473, 524,
	0, 0, 0, 0, 475, 476, 525, 477, 478, 479,
	1327, 0, 1185, 1184, 0, 0, 0, 0, 1182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 480, 0, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 482, 230, 483, 233, 231, 232, 484, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 485,
	486, 487, 0, 241, 488, 0, 1089, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 961, 256, 257, 0,
	0, 0, 0, 0, 0, 0, 258, 259, 260, 261,
	262, 263, 489, 490, 0, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 274, 491, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 492, 493, 0, 216, 0, 0, 0,
	0, 0, 285, 286, 287, 494, 288, 289, 0, 290,
	0, 291, 0, 0, 962, 292, 293, 0, 294, 495,
	0, 496, 295, 0, 296, 297, 298, 299, 1326, 498,
	499, 351, 964, 300, 301, 0, 302, 303, 305, 0,
	0, 0, 304, 306, 313, 0, 963, 307, 500, 309,
	308, 310, 311, 312, 501, 0, 502, 0, 314, 965,
	503, 966, 315, 316, 317, 967, 318, 319, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	504, 968, 328, 329, 969, 0, 330, 331, 0, 0,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 344, 342, 970, 345, 346, 348, 971, 347,
	0, 0, 972, 349, 0, 505, 350, 506, 352, 353,
	0, 354, 355, 356, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 973, 363, 974, 508, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	509, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 511, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 975, 400, 401, 402, 403, 512,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 416, 418, 419, 420, 417, 423, 424,
	425, 0, 426, 406, 407, 427, 428, 976, 429, 430,
	513, 431, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 442, 438, 439, 440, 514, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 451, 0, 452,
	515, 516, 517, 518, 0, 459, 0, 453, 454, 519,
	455, 520, 0, 456, 457, 458, 0, 460, 461, 0,
	0, 462, 463, 464, 465, 466, 468, 0, 469, 0,
	467, 470, 471, 472, 521, 522, 523, 0, 474, 473,
	524, 0, 0, 0, 0, 475, 476, 525, 477, 478,
	479, 1263, 0, 1185, 1184, 0, 0, 0, 0, 1182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 480, 0, 0, 0, 0, 225, 227, 226,
	228, 229, 481, 482, 230, 483, 233, 231, 232, 484,
	0, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	485, 486, 487, 0, 241, 488, 0, 1089, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 961, 256, 257,
	0, 0, 0, 0, 0, 0, 0, 258, 259, 260,
	261, 262, 263, 489, 490, 0, 264, 0, 266, 265,
	0, 267, 0, 0, 268, 269, 270, 0, 271, 0,
	272, 273, 0, 274, 491, 275, 276, 278, 280, 277,
	281, 282, 283, 284, 492, 493, 0, 216, 0, 0,
	0, 0, 0, 285, 286, 287, 494, 288, 289, 0,
	290, 0, 291, 0, 0, 962, 292, 293, 0, 294,
	495, 0, 496, 295, 0, 296, 297, 298, 299, 1262,
	498, 499, 351, 964, 300, 301, 0, 302, 303, 305,
	0, 0, 0, 304, 306, 313, 0, 963, 307, 500,
	309, 308, 310, 311, 312, 501, 0, 502, 0, 314,
	965, 503, 966, 315, 316, 317, 967, 318, 319, 0,
	0, 320, 321, 322, 323, 324, 0, 326, 325, 0,
	327, 504, 968, 328, 329, 969, 0, 330, 331, 0,
	0, 332, 333, 334, 0, 335, 336, 338, 340, 337,
	339, 341, 343, 344, 342, 970, 345, 346, 348, 971,
	347, 0, 0, 972, 349, 0, 505, 350, 506, 352,
	353, 0, 354, 355, 356, 0, 0, 358, 359, 360,
	0, 0, 361, 362, 507, 973, 363, 974, 508, 364,
	357, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 509, 374, 510, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 511, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 392, 393, 394, 391, 395,
	396, 397, 398, 0, 399, 975, 400, 401, 402, 403,
	512, 404, 0, 405, 409, 410, 411, 412, 413, 414,
	415, 0, 421, 422, 416, 418, 419, 420, 417, 423,
	424, 425, 0, 426, 406, 407, 427, 428, 976, 429,
	430, 513, 431, 432, 0, 433, 434, 435, 436, 408,
	437, 441, 442, 438, 439, 440, 514, 0, 444, 445,
	443, 0, 446, 447, 448, 449, 450, 279, 451, 0,
	452, 515, 516, 517, 518, 0, 459, 0, 453, 454,
	519, 455, 520, 0, 456, 457, 458, 0, 460, 461,
	0, 0, 462, 463, 464, 465, 466, 468, 0, 469,
	0, 467, 470, 471, 472, 521, 522, 523, 0, 474,
	473, 524, 0, 0, 0, 0, 475, 476, 525, 477,
	478, 479, 1260, 0, 1185, 1184, 0, 0, 0, 0,
	1182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 480, 0, 0, 0, 0, 225, 227,
	226, 228, 229, 481, 482, 230, 483, 233, 231, 232,
	484, 0, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 485, 486, 487, 0, 241, 488, 0, 1089, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 961, 256,
	257, 0, 0, 0, 0, 0, 0, 0, 258, 259,
	260, 261, 262, 263, 489, 490, 0, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 274, 491, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 492, 493, 0, 216, 0,
	0, 0, 0, 0, 285, 286, 287, 494, 288, 289,
	0, 290, 0, 291, 0, 0, 962, 292, 293, 0,
	294, 495, 0, 496, 295, 0, 296, 297, 298, 299,
	1259, 498, 499, 351, 964, 300, 301, 0, 302, 303,
	305, 0, 0, 0, 304, 306, 313, 0, 963, 307,
	500, 309, 308, 310, 311, 312, 501, 0, 502, 0,
	314, 965, 503, 966, 315, 316, 317, 967, 318, 319,
	0, 0, 320, 321, 322, 323, 324, 0, 326, 325,
	0, 327, 504, 968, 328, 329, 969, 0, 330, 331,
	0, 0, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 344, 342, 970, 345, 346, 348,
	971, 347, 0, 0, 972, 349, 0, 505, 350, 506,
	352, 353, 0, 354, 355, 356, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 507, 973, 363, 974, 508,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 509, 374, 510, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 511, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 975, 400, 401, 402,
	403, 512, 404, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 0, 421, 422, 416, 418, 419, 420, 417,
	423, 424, 425, 0, 426, 406, 407, 427, 428, 976,
	429, 430, 513, 431, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 442, 438, 439, 440, 514, 0, 444,
	445, 443, 0, 446, 447, 448, 449, 450, 279, 451,
	0, 452, 515, 516, 517, 518, 0, 459, 0, 453,
	454, 519, 455, 520, 0, 456, 457, 458, 0, 460,
	461, 0, 0, 462, 463, 464, 465, 466, 468, 0,
	469, 0, 467, 470, 471, 472, 521, 522, 523, 0,
	474, 473, 524, 0, 0, 0, 0, 475, 476, 525,
	477, 478, 479, 1178, 0, 1185, 1184, 0, 0, 0,
	0, 1182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 481, 482, 230, 483, 233, 231,
	232, 484, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 485, 486, 487, 0, 241, 488, 0, 1089,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 961,
	256, 257, 0, 0, 0, 0, 0, 0, 0, 258,
	259, 260, 261, 262, 263, 489, 490, 0, 264, 0,
	266, 265, 0, 267, 0, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 274, 491, 275, 276, 278,
	280, 277, 281, 282, 283, 284, 492, 493, 0, 216,
	0, 0, 0, 0, 0, 285, 286, 287, 494, 288,
	289, 0, 290, 0, 291, 0, 0, 962, 292, 293,
	0, 294, 495, 0, 496, 295, 0, 296, 297, 298,
	299, 1180, 498, 499, 351, 964, 300, 301, 0, 302,
	303, 305, 0, 0, 0, 304, 306, 313, 0, 963,
	307, 500, 309, 308, 310, 311, 312, 501, 0, 502,
	0, 314, 965, 503, 966, 315, 316, 317, 967, 318,
	319, 0, 0, 320, 321, 322, 323, 324, 0, 326,
	325, 0, 327, 504, 968, 328, 329, 969, 0, 330,
	331, 0, 0, 332, 333, 334, 0, 335, 336, 338,
	340, 337, 339, 341, 343, 344, 342, 970, 345, 346,
	348, 971, 347, 0, 0, 972, 349, 0, 505, 350,
	506, 352, 353, 0, 354, 355, 356, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 507, 973, 363, 974,
	508, 364, 357, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 509, 374, 510, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 511, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 392, 393, 394,
	391, 395, 396, 397, 398, 0, 399, 975, 400, 401,
	402, 403, 512, 404, 0, 405, 409, 410, 411, 412,
	413, 414, 415, 0, 421, 422, 416, 418, 419, 420,
	417, 423, 424, 425, 0, 426, 406, 407, 427, 428,
	976, 429, 430, 513, 431, 432, 0, 433, 434, 435,
	436, 408, 437, 441, 442, 438, 439, 440, 514, 0,
	444, 445, 443, 0, 446, 447, 448, 449, 450, 279,
	451, 0, 452, 515, 516, 517, 518, 0, 459, 0,
	453, 454, 519, 455, 520, 0, 456, 457, 458, 0,
	460, 461, 0, 0, 462, 463, 464, 465, 466, 468,
	0, 469, 0, 467, 470, 471, 472, 521, 522, 523,
	0, 474, 473, 524, 0, 0, 0, 0, 475, 476,
	525, 477, 478, 479, 1185, 1184, 0, 0, 0, 0,
	1182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 480, 0, 0, 0, 0, 225, 227,
	226, 228, 229, 481, 482, 230, 483, 233, 231, 232,
	484, 0, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 485, 486, 487, 0, 241, 488, 0, 1089, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 961, 256,
	257, 0, 0, 0, 0, 0, 0, 0, 258, 259,
	260, 261, 262, 263, 489, 490, 0, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 274, 491, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 492, 493, 0, 216, 0,
	0, 0, 0, 0, 285, 286, 287, 494, 288, 289,
	0, 290, 0, 291, 0, 0, 962, 292, 293, 0,
	294, 495, 0, 496, 295, 0, 296, 297, 298, 299,
	497, 498, 499, 351, 964, 300, 301, 0, 302, 303,
	305, 0, 0, 0, 304, 306, 313, 0, 963, 307,
	500, 309, 308, 310, 311, 312, 501, 0, 502, 0,
	314, 965, 503, 966, 315, 316, 317, 967, 318, 319,
	0, 0, 320, 321, 322, 323, 324, 0, 326, 325,
	0, 327, 504, 968, 328, 329, 969, 0, 330, 331,
	0, 0, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 344, 342, 970, 345, 346, 348,
	971, 347, 0, 0, 972, 349, 0, 505, 350, 506,
	352, 353, 0, 354, 355, 356, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 507, 973, 363, 974, 508,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 509, 374, 510, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 511, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 975, 400, 401, 402,
	403, 512, 404, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 0, 421, 422, 416, 418, 419, 420, 417,
	423, 424, 425, 0, 426, 406, 407, 427, 428, 976,
	429, 430, 513, 431, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 442, 438, 439, 440, 514, 0, 444,
	445, 443, 0, 446, 447, 448, 449, 450, 279, 451,
	0, 452, 515, 516, 517, 518, 0, 459, 0, 453,
	454, 519, 455, 520, 0, 456, 457, 458, 0, 460,
	461, 0, 0, 462, 463, 464, 465, 466, 468, 0,
	469, 0, 467, 470, 471, 472, 521, 522, 523, 213,
	474, 473, 524, 0, 0, 0, 0, 475, 476, 525,
	477, 478, 479, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 480, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 481, 482,
	230, 483, 233, 231, 232, 484, 0, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 485, 486, 487, 0,
	241, 488, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 0, 256, 257, 0, 0, 0, 0,
	0, 0, 0, 258, 259, 260, 261, 262, 263, 489,
	490, 0, 264, 0, 266, 265, 0, 267, 0, 0,
	268, 269, 270, 0, 271, 0, 272, 273, 0, 274,
	491, 275, 276, 278, 280, 277, 281, 282, 283, 284,
	492, 493, 0, 216, 0, 0, 0, 0, 0, 285,
	286, 287, 494, 288, 289, 0, 290, 0, 291, 0,
	0, 0, 292, 293, 0, 294, 495, 0, 496, 295,
	0, 296, 297, 298, 299, 497, 498, 499, 351, 0,
	300, 301, 0, 302, 303, 305, 0, 0, 217, 304,
	306, 313, 0, 0, 307, 500, 309, 308, 310, 311,
	312, 501, 0, 502, 0, 314, 0, 503, 0, 315,
	316, 317, 0, 318, 319, 0, 0, 320, 321, 322,
	323, 324, 0, 326, 325, 0, 327, 504, 0, 328,
	329, 0, 0, 330, 331, 0, 0, 332, 333, 334,
	0, 335, 336, 338, 340, 337, 339, 341, 343, 344,
	342, 0, 345, 346, 348, 0, 347, 0, 218, 0,
	349, 0, 505, 350, 506, 352, 353, 0, 354, 355,
	356, 0, 0, 358, 359, 360, 0, 0, 361, 362,
	507, 0, 363, 0, 508, 364, 357, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 509, 374, 510,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 511, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 392, 393, 394, 391, 395, 396, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 512, 404, 0, 405,
	409, 410, 411, 412, 413, 414, 415, 0, 421, 422,
	416, 418, 419, 420, 417, 423, 424, 425, 0, 426,
	406, 407, 427, 428, 0, 429, 430, 513, 431, 432,
	0, 433, 434, 435, 436, 408, 437, 441, 442, 438,
	439, 440, 514, 0, 444, 445, 443, 0, 446, 447,
	448, 449, 450, 279, 451, 0, 452, 515, 516, 517,
	518, 0, 459, 0, 453, 454, 519, 455, 520, 0,
	456, 457, 458, 0, 460, 461, 0, 0, 462, 463,
	464, 465, 466, 468, 0, 469, 0, 467, 470, 471,
	472, 521, 522, 523, 0, 474, 473, 524, 1185, 1184,
	0, 0, 475, 476, 525, 477, 478, 479, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 602, 0, 0, 0, 480, 0, 0,
	0, 0, 225, 227, 226, 228, 229, 481, 482, 230,
	483, 233, 231, 232, 484, 0, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 485, 486, 487, 0, 241,
	488, 0, 1089, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 961, 256, 257, 0, 0, 0, 0, 0,
	0, 0, 258, 259, 260, 261, 262, 263, 489, 490,
	1736, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 274, 491,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 492,
	493, 0, 216, 0, 0, 0, 0, 0, 285, 286,
	287, 494, 288, 289, 0, 290, 0, 291, 0, 0,
	962, 292, 293, 0, 294, 495, 0, 496, 295, 0,
	296, 297, 298, 299, 497, 498, 499, 351, 964, 300,
	301, 0, 302, 303, 305, 0, 0, 0, 304, 306,
	313, 0, 963, 307, 500, 309, 308, 310, 311, 312,
	501, 0, 502, 0, 314, 965, 503, 966, 315, 316,
	317, 967, 318, 319, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 504, 968, 328, 329,
	969, 0, 330, 331, 0, 0, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 344, 342,
	970, 345, 346, 348, 971, 347, 0, 0, 972, 349,
	0, 505, 350, 506, 352, 353, 0, 354, 355, 356,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	973, 363, 974, 508, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 509, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	511, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	975, 400, 401, 402, 403, 512, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 0, 421, 422, 416,
	418, 419, 420, 417, 423, 424, 425, 0, 426, 406,
	407, 427, 428, 976, 429, 430, 513, 431, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 442, 438, 439,
	440, 514, 0, 444, 445, 443, 0, 446, 447, 448,
	449, 450, 279, 451, 0, 452, 515, 516, 517, 518,
	0, 459, 0, 453, 454, 519, 455, 520, 0, 456,
	457, 458, 0, 460, 461, 0, 0, 462, 463, 464,
	465, 466, 468, 0, 469, 0, 467, 470, 471, 472,
	521, 522, 523, 0, 474, 473, 524, 1185, 1184, 0,
	0, 475, 476, 525, 477, 478, 479, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 480, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 481, 482, 230, 483,
	233, 231, 232, 484, 0, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 485, 486, 487, 0, 241, 488,
	0, 1089, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 961, 256, 257, 0, 0, 0, 0, 0, 0,
	0, 258, 259, 260, 261, 262, 263, 489, 490, 0,
	264, 0, 266, 265, 0, 267, 0, 0, 268, 269,
	270, 0, 271, 0, 272, 273, 0, 274, 491, 275,
	276, 278, 280, 277, 281, 282, 283, 284, 492, 493,
	0, 216, 0, 0, 0, 0, 0, 285, 286, 287,
	494, 288, 289, 0, 290, 0, 291, 0, 0, 962,
	292, 293, 0, 294, 495, 0, 496, 295, 0, 296,
	297, 298, 299, 497, 498, 499, 351, 964, 300, 301,
	0, 302, 303, 305, 0, 0, 0, 304, 306, 313,
	0, 963, 307, 500, 309, 308, 310, 311, 312, 501,
	0, 502, 0, 314, 965, 503, 966, 315, 316, 317,
	967, 318, 319, 0, 0, 320, 321, 322, 323, 324,
	0, 326, 325, 0, 327, 504, 968, 328, 329, 969,
	0, 330, 331, 0, 0, 332, 333, 334, 0, 335,
	336, 338, 340, 337, 339, 341, 343, 344, 342, 970,
	345, 346, 348, 971, 347, 0, 0, 972, 349, 0,
	505, 350, 506, 352, 353, 0, 354, 355, 356, 0,
	0, 358, 359, 360, 0, 0, 361, 362, 507, 973,
	363, 974, 508, 364, 357, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 509, 374, 510, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 511,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 392,
	393, 394, 391, 395, 396, 397, 398, 0, 399, 975,
	400, 401, 402, 403, 512, 404, 0, 405, 409, 410,
	411, 412, 413, 414, 415, 0, 421, 422, 416, 418,
	419, 420, 417, 423, 424, 425, 0, 426, 406, 407,
	427, 428, 976, 429, 430, 513, 431, 432, 0, 433,
	434, 435, 436, 408, 437, 441, 442, 438, 439, 440,
	514, 0, 444, 445, 443, 0, 446, 447, 448, 449,
	450, 279, 451, 0, 452, 515, 516, 517, 518, 0,
	459, 0, 453, 454, 519, 455, 520, 0, 456, 457,
	458, 0, 460, 461, 0, 0, 462, 463, 464, 465,
	466, 468, 0, 469, 0, 467, 470, 471, 472, 521,
	522, 523, 1185, 474, 473, 524, 0, 0, 0, 0,
	475, 476, 525, 477, 478, 479, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 480, 0, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 482, 230, 483, 233, 231, 232, 484, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 485,
	486, 487, 0, 241, 488, 0, 1089, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 961, 256, 257, 0,
	0, 0, 0, 0, 0, 0, 258, 259, 260, 261,
	262, 263, 489, 490, 0, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 274, 491, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 492, 493, 0, 216, 0, 0, 0,
	0, 0, 285, 286, 287, 494, 288, 289, 0, 290,
	0, 291, 0, 0, 962, 292, 293, 0, 294, 495,
	0, 496, 295, 0, 296, 297, 298, 299, 497, 498,
	499, 351, 964, 300, 301, 0, 302, 303, 305, 0,
	0, 0, 304, 306, 313, 0, 963, 307, 500, 309,
	308, 310, 311, 312, 501, 0, 502, 0, 314, 965,
	503, 966, 315, 316, 317, 967, 318, 319, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	504, 968, 328, 329, 969, 0, 330, 331, 0, 0,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 344, 342, 970, 345, 346, 348, 971, 347,
	0, 0, 972, 349, 0, 505, 350, 506, 352, 353,
	0, 354, 355, 356, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 973, 363, 974, 508, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	509, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 511, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 975, 400, 401, 402, 403, 512,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 416, 418, 419, 420, 417, 423, 424,
	425, 0, 426, 406, 407, 427, 428, 976, 429, 430,
	513, 431, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 442, 438, 439, 440, 514, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 451, 0, 452,
	515, 516, 517, 518, 0, 459, 0, 453, 454, 519,
	455, 520, 0, 456, 457, 458, 0, 460, 461, 0,
	0, 462, 463, 464, 465, 466, 468, 0, 469, 0,
	467, 470, 471, 472, 521, 522, 523, 213, 474, 473,
	524, 0, 0, 0, 0, 475, 476, 525, 477, 478,
	479, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 480, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 481, 482, 230, 483,
	233, 231, 232, 484, 0, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 485, 486, 487, 2318, 241, 488,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 2315, 252, 0, 253, 254, 255,
	0, 0, 256, 257, 0, 0, 0, 0, 0, 0,
	0, 258, 259, 260, 261, 262, 263, 489, 490, 0,
	264, 0, 266, 265, 0, 267, 0, 0, 268, 269,
	270, 0, 271, 0, 272, 273, 0, 274, 491, 275,
	276, 278, 280, 277, 281, 282, 283, 284, 492, 493,
	0, 2467, 0, 0, 0, 0, 0, 285, 286, 287,
	494, 288, 289, 0, 290, 0, 291, 2321, 0, 0,
	292, 293, 0, 294, 495, 0, 496, 295, 0, 296,
	297, 298, 299, 497, 498, 499, 351, 0, 300, 301,
	0, 302, 303, 305, 0, 0, 2464, 304, 306, 313,
	0, 0, 307, 500, 309, 308, 310, 311, 312, 501,
	0, 502, 0, 2466, 0, 503, 0, 315, 316, 317,
	0, 318, 319, 0, 0, 320, 321, 322, 323, 324,
	0, 326, 325, 0, 327, 504, 0, 328, 329, 2463,
	0, 330, 331, 0, 0, 332, 333, 334, 0, 335,
	336, 338, 340, 337, 339, 341, 343, 344, 342, 0,
	345, 346, 348, 0, 347, 0, 0, 0, 349, 0,
	505, 350, 506, 352, 353, 0, 354, 355, 356, 0,
	0, 358, 359, 360, 0, 0, 361, 362, 507, 0,
	363, 0, 508, 364, 357, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 509, 374, 510, 375, 2320,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 511,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 392,
	393, 394, 391, 395, 396, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 512, 404, 0, 405, 409, 410,
	411, 412, 413, 414, 415, 0, 421, 422, 416, 418,
	419, 420, 417, 423, 424, 425, 0, 426, 406, 407,
	427, 428, 0, 429, 430, 513, 431, 432, 0, 433,
	434, 435, 436, 408, 437, 441, 442, 438, 439, 440,
	514, 0, 444, 445, 443, 0, 446, 447, 448, 449,
	450, 279, 451, 0, 452, 515, 516, 517, 518, 0,
	459, 0, 453, 454, 519, 455, 520, 0, 456, 457,
	458, 0, 460, 461, 0, 2465, 462, 463, 464, 465,
	466, 468, 0, 469, 0, 467, 470, 471, 472, 521,
	522, 523, 213, 474, 473, 524, 0, 0, 0, 0,
	475, 476, 525, 477, 478, 479, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 480, 0, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 482, 230, 483, 233, 231, 232, 484, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 485,
	486, 487, 2318, 241, 488, 0, 0, 2312, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 2315,
	252, 0, 253, 254, 255, 0, 0, 256, 257, 0,
	0, 0, 0, 0, 0, 0, 258, 259, 260, 261,
	262, 263, 489, 490, 0, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 274, 491, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 492, 493, 0, 0, 0, 0, 0,
	0, 0, 285, 286, 287, 494, 288, 289, 0, 290,
	0, 291, 2321, 0, 0, 292, 293, 0, 294, 495,
	0, 496, 295, 0, 296, 297, 298, 299, 2311, 498,
	499, 351, 0, 300, 301, 0, 302, 303, 305, 0,
	0, 0, 304, 306, 313, 0, 0, 307, 500, 309,
	308, 310, 311, 312, 501, 0, 502, 0, 314, 0,
	503, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	504, 0, 328, 329, 0, 0, 330, 331, 0, 0,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 344, 342, 0, 345, 346, 348, 0, 347,
	0, 0, 0, 349, 0, 505, 350, 506, 352, 353,
	0, 354, 355, 356, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 0, 363, 0, 508, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	509, 374, 510, 375, 2320, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 511, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 512,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 416, 418, 419, 420, 417, 423, 424,
	425, 0, 426, 406, 407, 427, 428, 0, 429, 430,
	513, 431, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 442, 438, 439, 440, 514, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 451, 0, 452,
	515, 516, 517, 518, 0, 459, 0, 453, 454, 519,
	455, 520, 0, 456, 457, 458, 0, 460, 461, 0,
	2319, 462, 463, 464, 465, 466, 468, 0, 469, 0,
	467, 470, 471, 472, 521, 522, 523, 0, 474, 473,
	524, 1424, 0, 213, 0, 475, 476, 525, 477, 478,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 480, 0, 0, 0, 0, 225, 227, 226,
	228, 229, 481, 482, 230, 483, 233, 231, 232, 484,
	0, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	485, 486, 487, 0, 241, 488, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 0, 256, 257,
	0, 0, 0, 0, 0, 0, 0, 258, 259, 260,
	261, 262, 263, 489, 490, 0, 264, 0, 266, 265,
	0, 267, 0, 0, 268, 269, 270, 0, 271, 0,
	272, 273, 0, 274, 491, 275, 276, 278, 280, 277,
	281, 282, 283, 284, 492, 493, 0, 216, 0, 0,
	0, 0, 0, 285, 286, 287, 494, 288, 289, 0,
	290, 0, 291, 0, 0, 0, 292, 293, 0, 294,
	495, 0, 496, 295, 0, 296, 297, 298, 299, 497,
	498, 499, 351, 0, 300, 301, 0, 302, 303, 305,
	0, 0, 217, 304, 306, 313, 0, 0, 307, 500,
	309, 308, 310, 311, 312, 501, 0, 502, 0, 314,
	0, 503, 0, 315, 316, 317, 0, 318, 319, 0,
	0, 320, 321, 322, 323, 324, 0, 326, 325, 0,
	327, 504, 0, 328, 329, 0, 0, 330, 331, 0,
	0, 332, 333, 334, 0, 335, 336, 338, 340, 337,
	339, 341, 343, 344, 342, 0, 345, 346, 348, 0,
	347, 0, 218, 0, 349, 0, 505, 350, 506, 352,
	353, 0, 354, 355, 356, 0, 0, 358, 359, 360,
	0, 0, 361, 362, 507, 0, 363, 0, 508, 364,
	357, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 509, 374, 510, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 511, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 392, 393, 394, 391, 395,
	396, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	512, 404, 0, 405, 409, 410, 411, 412, 413, 414,
	415, 0, 1427, 422, 416, 418, 419, 420, 417, 423,
	424, 425, 0, 426, 406, 407, 427, 428, 0, 429,
	430, 513, 431, 432, 0, 433, 434, 435, 436, 408,
	437, 441, 442, 438, 439, 440, 514, 0, 444, 445,
	443, 1425, 446, 447, 448, 449, 450, 279, 451, 0,
	452, 515, 516, 517, 518, 0, 459, 0, 453, 454,
	519, 455, 520, 0, 456, 457, 458, 0, 460, 461,
	0, 0, 462, 463, 464, 465, 466, 468, 0, 469,
	0, 467, 470, 471, 472, 521, 522, 523, 0, 1426,
	473, 524, 1173, 0, 213, 0, 475, 476, 525, 477,
	478, 479, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 480, 0, 0, 0, 0, 225, 227,
	226, 228, 229, 481, 482, 230, 483, 233, 231, 232,
	484, 0, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 485, 486, 487, 0, 241, 488, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 0, 256,
	257, 0, 0, 0, 0, 0, 0, 0, 258, 259,
	260, 261, 262, 263, 489, 490, 0, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 274, 491, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 492, 493, 0, 216, 0,
	0, 0, 0, 0, 285, 286, 287, 494, 288, 289,
	0, 290, 0, 291, 0, 0, 0, 292, 293, 0,
	294, 495, 0, 496, 295, 0, 296, 297, 298, 299,
	1175, 498, 499, 351, 0, 300, 301, 0, 302, 303,
	305, 0, 0, 217, 304, 306, 313, 0, 0, 307,
	500, 309, 308, 310, 311, 312, 501, 0, 502, 0,
	314, 0, 503, 0, 315, 316, 317, 0, 318, 319,
	0, 0, 320, 321, 322, 323, 324, 0, 326, 325,
	0, 327, 504, 0, 328, 329, 0, 0, 330, 331,
	0, 0, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 344, 342, 0, 345, 346, 348,
	0, 347, 0, 218, 0, 349, 0, 505, 350, 506,
	352, 353, 0, 354, 355, 356, 0, 1018, 358, 359,
	360, 0, 0, 361, 362, 507, 0, 363, 0, 508,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 509, 374, 510, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 511, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 512, 404, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 0, 421, 422, 416, 418, 419, 420, 417,
	423, 424, 425, 0, 426, 406, 407, 427, 428, 0,
	429, 430, 513, 431, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 442, 438, 439, 440, 514, 0, 444,
	445, 443, 0, 446, 447, 448, 449, 450, 279, 451,
	0, 452, 515, 516, 517, 518, 0, 459, 0, 453,
	454, 519, 455, 520, 0, 456, 457, 458, 0, 460,
	461, 0, 0, 462, 463, 464, 465, 466, 468, 0,
	469, 0, 467, 470, 471, 472, 521, 522, 523, 0,
	474, 473, 524, 1170, 0, 213, 0, 475, 476, 525,
	477, 478, 479, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 481, 482, 230, 483, 233, 231,
	232, 484, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 485, 486, 487, 0, 241, 488, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 0,
	256, 257, 0, 0, 0, 0, 0, 0, 0, 258,
	259, 260, 261, 262, 263, 489, 490, 0, 264, 0,
	266, 265, 0, 267, 0, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 274, 491, 275, 276, 278,
	280, 277, 281, 282, 283, 284, 492, 493, 0, 216,
	0, 0, 0, 0, 0, 285, 286, 287, 494, 288,
	289, 0, 290, 0, 291, 0, 0, 0, 292, 293,
	0, 294, 495, 0, 496, 295, 0, 296, 297, 298,
	299, 1172, 498, 499, 351, 0, 300, 301, 0, 302,
	303, 305, 0, 0, 217, 304, 306, 313, 0, 0,
	307, 500, 309, 308, 310, 311, 312, 501, 0, 502,
	0, 314, 0, 503, 0, 315, 316, 317, 0, 318,
	319, 0, 0, 320, 321, 322, 323, 324, 0, 326,
	325, 0, 327, 504, 0, 328, 329, 0, 0, 330,
	331, 0, 0, 332, 333, 334, 0, 335, 336, 338,
	340, 337, 339, 341, 343, 344, 342, 0, 345, 346,
	348, 0, 347, 0, 218, 0, 349, 0, 505, 350,
	506, 352, 353, 0, 354, 355, 356, 0, 1018, 358,
	359, 360, 0, 0, 361, 362, 507, 0, 363, 0,
	508, 364, 357, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 509, 374, 510, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 511, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 392, 393, 394,
	391, 395, 396, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 512, 404, 0, 405, 409, 410, 411, 412,
	413, 414, 415, 0, 421, 422, 416, 418, 419, 420,
	417, 423, 424, 425, 0, 426, 406, 407, 427, 428,
	0, 429, 430, 513, 431, 432, 0, 433, 434, 435,
	436, 408, 437, 441, 442, 438, 439, 440, 514, 0,
	444, 445, 443, 0, 446, 447, 448, 449, 450, 279,
	451, 0, 452, 515, 516, 517, 518, 0, 459, 0,
	453, 454, 519, 455, 520, 0, 456, 457, 458, 0,
	460, 461, 0, 0, 462, 463, 464, 465, 466, 468,
	0, 469, 0, 467, 470, 471, 472, 521, 522, 523,
	0, 474, 473, 524, 1077, 0, 213, 0, 475, 476,
	525, 477, 478, 479, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 480, 0, 0, 0, 0,
	225, 227, 226, 228, 229, 481, 482, 230, 483, 233,
	231, 232, 484, 0, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 485, 486, 487, 0, 241, 488, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	0, 256, 257, 0, 0, 0, 0, 0, 0, 0,
	258, 259, 260, 261, 262, 263, 489, 490, 0, 264,
	0, 266, 265, 0, 267, 0, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 274, 491, 275, 276,
	278, 280, 277, 281, 282, 283, 284, 492, 493, 0,
	216, 0, 0, 0, 0, 0, 285, 286, 287, 494,
	288, 289, 0, 290, 0, 291, 0, 0, 0, 292,
	293, 0, 294, 495, 0, 496, 295, 0, 296, 297,
	298, 299, 1079, 498, 499, 351, 0, 300, 301, 0,
	302, 303, 305, 0, 0, 217, 304, 306, 313, 0,
	0, 307, 500, 309, 308, 310, 311, 312, 501, 0,
	502, 0, 314, 0, 503, 0, 315, 316, 317, 0,
	318, 319, 0, 0, 320, 321, 322, 323, 324, 0,
	326, 325, 0, 327, 504, 0, 328, 329, 0, 0,
	330, 331, 0, 0, 332, 333, 334, 0, 335, 336,
	338, 340, 337, 339, 341, 343, 344, 342, 0, 345,
	346, 348, 0, 347, 0, 218, 0, 349, 0, 505,
	350, 506, 352, 353, 0, 354, 355, 356, 0, 1018,
	358, 359, 360, 0, 0, 361, 362, 507, 0, 363,
	0, 508, 364, 357, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 509, 374, 510, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 511, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 392, 393,
	394, 391, 395, 396, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 512, 404, 0, 405, 409, 410, 411,
	412, 413, 414, 415, 0, 421, 422, 416, 418, 419,
	420, 417, 423, 424, 425, 0, 426, 406, 407, 427,
	428, 0, 429, 430, 513, 431, 432, 0, 433, 434,
	435, 436, 408, 437, 441, 442, 438, 439, 440, 514,
	0, 444, 445, 443, 0, 446, 447, 448, 449, 450,
	279, 451, 0, 452, 515, 516, 517, 518, 0, 459,
	0, 453, 454, 519, 455, 520, 0, 456, 457, 458,
	0, 460, 461, 0, 0, 462, 463, 464, 465, 466,
	468, 0, 469, 0, 467, 470, 471, 472, 521, 522,
	523, 0, 474, 473, 524, 554, 0, 213, 0, 475,
	476, 525, 477, 478, 479, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 553, 223, 543,
	224, 0, 0, 0, 0, 0, 480, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 481, 482, 230, 483,
	233, 231, 232, 484, 0, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 485, 486, 487, 0, 241, 488,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	546, 0, 256, 257, 0, 0, 0, 0, 0, 0,
	0, 258, 259, 260, 261, 262, 263, 489, 490, 0,
	264, 0, 266, 265, 0, 267, 0, 0, 268, 269,
	270, 0, 271, 0, 272, 273, 0, 274, 491, 275,
	276, 278, 280, 277, 281, 282, 283, 284, 492, 493,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	494, 288, 289, 0, 290, 0, 291, 0, 0, 0,
	292, 293, 547, 294, 495, 0, 496, 295, 0, 296,
	297, 298, 299, 497, 498, 499, 351, 0, 300, 301,
	0, 302, 303, 305, 0, 0, 0, 304, 306, 313,
	0, 0, 307, 500, 309, 308, 310, 311, 312, 501,
	0, 502, 0, 314, 0, 503, 0, 315, 316, 317,
	0, 318, 319, 0, 0, 320, 321, 322, 323, 324,
	0, 326, 325, 0, 327, 504, 0, 328, 329, 0,
	0, 330, 331, 0, 0, 332, 333, 334, 0, 335,
	336, 338, 340, 337, 339, 341, 343, 344, 342, 0,
	345, 346, 348, 0, 347, 0, 0, 0, 349, 0,
	505, 350, 506, 352, 353, 0, 354, 355, 356, 0,
	0, 358, 359, 360, 0, 0, 361, 362, 507, 0,
	363, 0, 508, 364, 357, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 509, 374, 510, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 511,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 392,
	393, 394, 391, 395, 396, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 512, 404, 0, 405, 409, 410,
	411, 412, 413, 414, 415, 548, 421, 422, 416, 418,
	419, 420, 417, 423, 424, 425, 0, 426, 406, 407,
	427, 428, 0, 429, 430, 513, 431, 432, 0, 433,
	434, 435, 436, 408, 437, 441, 442, 438, 439, 440,
	514, 0, 444, 445, 443, 0, 446, 447, 448, 449,
	450, 279, 451, 0, 452, 515, 516, 517, 518, 0,
	459, 0, 453, 454, 519, 455, 520, 0, 456, 457,
	458, 0, 460, 461, 0, 0, 462, 463, 464, 465,
	466, 468, 0, 469, 0, 467, 470, 471, 472, 521,
	522, 523, 0, 474, 473, 524, 542, 0, 213, 0,
	475, 476, 525, 477, 478, 479, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	543, 224, 0, 0, 0, 0, 0, 480, 0, 0,
	0, 0, 225, 227, 226, 228, 229, 481, 482, 230,
	483, 233, 231, 232, 484, 0, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 485, 486, 487, 0, 241,
	488, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 546, 0, 256, 257, 0, 0, 0, 0, 0,
	0, 0, 258, 259, 260, 261, 262, 263, 489, 490,
	0, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 274, 491,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 492,
	493, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	287, 494, 288, 289, 0, 290, 0, 291, 0, 0,
	0, 292, 293, 547, 294, 495, 0, 496, 295, 0,
	296, 297, 298, 299, 497, 498, 499, 351, 0, 300,
	301, 0, 302, 303, 305, 0, 0, 0, 304, 306,
	313, 0, 0, 307, 500, 309, 308, 310, 311, 312,
	501, 0, 502, 0, 314, 0, 503, 0, 315, 316,
	317, 0, 318, 319, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 504, 0, 328, 329,
	0, 0, 330, 331, 0, 0, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 344, 342,
	0, 345, 346, 348, 0, 347, 0, 0, 0, 349,
	0, 505, 350, 506, 352, 353, 0, 354, 355, 356,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	0, 363, 0, 508, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 509, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	511, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 512, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 548, 421, 422, 416,
	418, 419, 420, 417, 423, 424, 425, 0, 426, 406,
	407, 427, 428, 0, 429, 430, 513, 431, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 442, 438, 439,
	440, 514, 0, 444, 445, 443, 0, 446, 447, 448,
	449, 450, 279, 451, 0, 452, 515, 516, 517, 518,
	0, 459, 0, 453, 454, 519, 455, 520, 0, 456,
	457, 458, 0, 460, 461, 0, 0, 462, 463, 464,
	465, 466, 468, 0, 469, 0, 467, 470, 471, 472,
	521, 522, 523, 213, 474, 473, 524, 0, 0, 0,
	0, 475, 476, 525, 477, 478, 479, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 480, 0, 0, 0, 0, 225, 227, 226,
	228, 229, 481, 482, 230, 483, 233, 231, 232, 484,
	0, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	485, 486, 487, 0, 241, 488, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 0, 256, 257,
	0, 0, 0, 0, 0, 0, 0, 258, 259, 260,
	261, 262, 263, 489, 490, 0, 264, 0, 266, 265,
	0, 267, 0, 0, 268, 269, 270, 0, 271, 0,
	272, 273, 0, 274, 491, 275, 276, 278, 280, 277,
	281, 282, 283, 284, 492, 493, 0, 216, 0, 0,
	0, 0, 0, 285, 286, 287, 494, 288, 289, 0,
	290, 0, 291, 0, 0, 0, 292, 293, 0, 294,
	495, 0, 496, 295, 0, 296, 297, 298, 299, 497,
	498, 499, 351, 0, 300, 301, 0, 302, 303, 305,
	0, 0, 217, 304, 306, 313, 0, 0, 307, 500,
	309, 308, 310, 311, 312, 501, 0, 502, 0, 314,
	0, 503, 0, 315, 316, 317, 0, 318, 319, 0,
	0, 320, 321, 322, 323, 324, 0, 326, 325, 0,
	327, 504, 0, 328, 329, 0, 0, 330, 331, 0,
	0, 332, 333, 334, 0, 335, 336, 338, 340, 337,
	339, 341, 343, 344, 342, 0, 345, 346, 348, 2789,
	347, 0, 218, 0, 349, 0, 505, 350, 506, 352,
	353, 0, 354, 355, 356, 0, 0, 358, 359, 360,
	0, 0, 361, 362, 507, 0, 363, 0, 508, 364,
	357, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 509, 374, 510, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 511, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 392, 393, 394, 391, 395,
	396, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	512, 404, 0, 405, 409, 410, 411, 412, 413, 414,
	415, 0, 421, 422, 416, 418, 419, 420, 417, 423,
	424, 425, 0, 426, 406, 407, 427, 428, 0, 429,
	430, 513, 431, 432, 0, 433, 434, 435, 436, 408,
	437, 441, 442, 438, 439, 440, 514, 0, 444, 445,
	443, 0, 446, 447, 448, 449, 450, 279, 451, 0,
	452, 515, 516, 517, 518, 0, 459, 0, 453, 454,
	519, 455, 520, 0, 456, 457, 458, 0, 460, 461,
	0, 0, 462, 463, 464, 465, 466, 468, 0, 469,
	0, 467, 470, 471, 472, 521, 522, 523, 213, 474,
	473, 524, 0, 0, 0, 0, 475, 476, 525, 477,
	478, 479, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 480, 0, 0,
	0, 0, 225, 227, 226, 228, 229, 481, 482, 230,
	483, 233, 231, 232, 484, 0, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 485, 486, 487, 0, 241,
	488, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 0, 256, 257, 0, 0, 0, 0, 0,
	0, 0, 258, 259, 260, 261, 262, 263, 489, 490,
	0, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 274, 491,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 492,
	493, 0, 216, 0, 0, 0, 0, 0, 285, 286,
	287, 494, 288, 289, 0, 290, 0, 291, 0, 0,
	0, 292, 293, 0, 294, 495, 0, 496, 295, 0,
	296, 297, 298, 299, 497, 498, 499, 351, 0, 300,
	301, 0, 302, 303, 305, 0, 0, 217, 304, 306,
	313, 0, 0, 307, 500, 309, 308, 310, 311, 312,
	501, 0, 502, 0, 314, 0, 503, 0, 315, 316,
	317, 0, 318, 319, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 504, 0, 328, 329,
	0, 0, 330, 331, 0, 0, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 344, 342,
	0, 345, 346, 348, 0, 347, 0, 218, 0, 349,
	0, 505, 350, 506, 352, 353, 0, 354, 355, 356,
	0, 1018, 358, 359, 360, 0, 0, 361, 362, 507,
	0, 363, 0, 508, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 509, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	511, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 512, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 0, 421, 422, 416,
	418, 419, 420, 417, 423, 424, 425, 0, 426, 406,
	407, 427, 428, 0, 429, 430, 513, 431, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 442, 438, 439,
	440, 514, 0, 444, 445, 443, 0, 446, 447, 448,
	449, 450, 279, 451, 0, 452, 515, 516, 517, 518,
	0, 459, 0, 453, 454, 519, 455, 520, 0, 456,
	457, 458, 0, 460, 461, 0, 0, 462, 463, 464,
	465, 466, 468, 0, 469, 0, 467, 470, 471, 472,
	521, 522, 523, 0, 474, 473, 524, 2403, 0, 213,
	0, 475, 476, 525, 477, 478, 479, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 480, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 481, 482,
	230, 483, 233, 231, 232, 484, 0, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 485, 486, 487, 0,
	241, 488, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 0, 256, 257, 0, 0, 0, 0,
	0, 0, 0, 258, 259, 260, 261, 262, 263, 489,
	490, 0, 264, 0, 266, 265, 0, 267, 0, 0,
	268, 269, 270, 0, 271, 0, 272, 273, 0, 274,
	491, 275, 276, 278, 280, 277, 281, 282, 283, 284,
	492, 493, 0, 216, 0, 0, 0, 0, 0, 285,
	286, 287, 494, 288, 289, 0, 290, 0, 291, 0,
	0, 0, 292, 293, 0, 294, 495, 0, 496, 295,
	0, 296, 297, 298, 299, 2402, 498, 499, 351, 0,
	300, 301, 0, 302, 303, 305, 0, 0, 217, 304,
	306, 313, 0, 0, 307, 500, 309, 308, 310, 311,
	312, 501, 0, 502, 0, 314, 0, 503, 0, 315,
	316, 317, 0, 318, 319, 0, 0, 320, 321, 322,
	323, 324, 0, 326, 325, 0, 327, 504, 0, 328,
	329, 0, 0, 330, 331, 0, 0, 332, 333, 334,
	0, 335, 336, 338, 340, 337, 339, 341, 343, 344,
	342, 0, 345, 346, 348, 0, 347, 0, 218, 0,
	349, 0, 505, 350, 506, 352, 353, 0, 354, 355,
	356, 0, 0, 358, 359, 360, 0, 0, 361, 362,
	507, 0, 363, 0, 508, 364, 357, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 509, 374, 510,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 511, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 392, 393, 394, 391, 395, 396, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 512, 404, 0, 405,
	409, 410, 411, 412, 413, 414, 415, 0, 421, 422,
	416, 418, 419, 420, 417, 423, 424, 425, 0, 426,
	406, 407, 427, 428, 0, 429, 430, 513, 431, 432,
	0, 433, 434, 435, 436, 408, 437, 441, 442, 438,
	439, 440, 514, 0, 444, 445, 443, 0, 446, 447,
	448, 449, 450, 279, 451, 0, 452, 515, 516, 517,
	518, 0, 459, 0, 453, 454, 519, 455, 520, 0,
	456, 457, 458, 0, 460, 461, 0, 0, 462, 463,
	464, 465, 466, 468, 0, 469, 0, 467, 470, 471,
	472, 521, 522, 523, 0, 474, 473, 524, 1927, 0,
	213, 0, 475, 476, 525, 477, 478, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 480,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	482, 230, 483, 233, 231, 232, 484, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 485, 486, 487,
	0, 241, 488, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 0, 256, 257, 0, 0, 0,
	0, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	489, 490, 0, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	274, 491, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 492, 493, 0, 216, 0, 0, 0, 0, 0,
	285, 286, 287, 494, 288, 289, 0, 290, 0, 291,
	0, 0, 0, 292, 293, 0, 294, 495, 0, 496,
	295, 0, 296, 297, 298, 299, 497, 498, 499, 351,
	0, 300, 301, 0, 302, 303, 305, 0, 0, 217,
	304, 306, 313, 0, 0, 307, 500, 309, 308, 310,
	311, 312, 501, 0, 502, 0, 314, 0, 503, 0,
	315, 316, 317, 0, 318, 319, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 504, 0,
	328, 329, 0, 0, 330, 331, 0, 0, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	344, 342, 0, 345, 346, 348, 0, 347, 0, 218,
	0, 349, 0, 505, 350, 506, 352, 353, 0, 354,
	355, 356, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 0, 363, 0, 508, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 509, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 511, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 512, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 416, 418, 419, 420, 417, 423, 424, 425, 0,
	426, 406, 407, 427, 428, 0, 429, 430, 513, 431,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 442,
	438, 439, 440, 514, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 451, 0, 452, 515, 516,
	517, 518, 0, 459, 0, 453, 454, 519, 455, 520,
	0, 456, 457, 458, 0, 460, 461, 0, 0, 462,
	463, 464, 465, 466, 468, 0, 469, 0, 467, 470,
	471, 472, 521, 522, 523, 213, 474, 473, 524, 0,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 481, 482, 230, 483, 233, 231,
	232, 484, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 485, 486, 487, 0, 241, 488, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 0,
	256, 257, 0, 0, 0, 0, 0, 0, 0, 258,
	259, 260, 261, 262, 263, 489, 490, 0, 264, 0,
	266, 265, 0, 267, 0, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 274, 491, 275, 276, 278,
	280, 277, 281, 282, 283, 284, 492, 493, 0, 216,
	0, 0, 0, 0, 0, 285, 286, 287, 494, 288,
	289, 0, 290, 0, 291, 0, 0, 0, 292, 293,
	0, 294, 495, 0, 496, 295, 0, 296, 297, 298,
	299, 497, 498, 499, 351, 0, 300, 301, 0, 302,
	303, 305, 0, 0, 217, 304, 306, 313, 0, 0,
	307, 500, 309, 308, 310, 311, 312, 501, 0, 502,
	0, 314, 0, 503, 0, 315, 316, 317, 0, 318,
	319, 0, 0, 320, 321, 322, 323, 324, 0, 326,
	325, 0, 327, 504, 0, 328, 329, 0, 0, 330,
	331, 0, 0, 332, 333, 334, 0, 335, 336, 338,
	340, 337, 339, 341, 343, 344, 342, 0, 345, 346,
	348, 0, 347, 0, 218, 0, 349, 0, 505, 350,
	506, 352, 353, 0, 354, 355, 356, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 507, 0, 363, 0,
	508, 364, 357, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 509, 374, 510, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 511, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 392, 393, 394,
	391, 395, 396, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 512, 404, 0, 405, 409, 410, 411, 412,
	413, 414, 415, 0, 421, 422, 416, 418, 419, 420,
	417, 423, 424, 425, 0, 426, 406, 407, 427, 428,
	0, 429, 430, 513, 431, 432, 0, 433, 434, 435,
	436, 408, 437, 441, 442, 438, 439, 440, 514, 0,
	444, 445, 443, 1853, 446, 447, 448, 449, 450, 279,
	451, 0, 452, 515, 516, 517, 518, 0, 459, 0,
	453, 454, 519, 455, 520, 0, 456, 457, 458, 0,
	460, 461, 0, 0, 462, 463, 464, 465, 466, 468,
	0, 469, 0, 467, 470, 471, 472, 521, 522, 523,
	0, 474, 473, 524, 1857, 0, 213, 0, 475, 476,
	525, 477, 478, 479, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 220, 221, 222, 223, 0, 224,
	0, 0, 0, 0, 0, 480, 0, 0, 0, 0,
	225, 227, 226, 228, 229, 481, 482, 230, 483, 233,
	231, 232, 484, 0, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 485, 486, 487, 0, 241, 488, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	0, 256, 257, 0, 0, 0, 0, 0, 0, 0,
	258, 259, 260, 261, 262, 263, 489, 490, 0, 264,
	0, 266, 265, 0, 267, 0, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 274, 491, 275, 276,
	278, 280, 277, 281, 282, 283, 284, 492, 493, 0,
	216, 0, 0, 0, 0, 0, 285, 286, 287, 494,
	288, 289, 0, 290, 0, 291, 0, 0, 0, 292,
	293, 0, 294, 495, 0, 496, 295, 0, 296, 297,
	298, 299, 1856, 498, 499, 351, 0, 300, 301, 0,
	302, 303, 305, 0, 0, 217, 304, 306, 313, 0,
	0, 307, 500, 309, 308, 310, 311, 312, 501, 0,
	502, 0, 314, 0, 503, 0, 315, 316, 317, 0,
	318, 319, 0, 0, 320, 321, 322, 323, 324, 0,
	326, 325, 0, 327, 504, 0, 328, 329, 0, 0,
	330, 331, 0, 0, 332, 333, 334, 0, 335, 336,
	338, 340, 337, 339, 341, 343, 344, 342, 0, 345,
	346, 348, 0, 347, 0, 218, 0, 349, 0, 505,
	350, 506, 352, 353, 0, 354, 355, 356, 0, 0,
	358, 359, 360, 0, 0, 361, 362, 507, 0, 363,
	0, 508, 364, 357, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 509, 374, 510, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 511, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 392, 393,
	394, 391, 395, 396, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 512, 404, 0, 405, 409, 410, 411,
	412, 413, 414, 415, 0, 421, 422, 416, 418, 419,
	420, 417, 423, 424, 425, 0, 426, 406, 407, 427,
	428, 0, 429, 430, 513, 431, 432, 0, 433, 434,
	435, 436, 408, 437, 441, 442, 438, 439, 440, 514,
	0, 444, 445, 443, 0, 446, 447, 448, 449, 450,
	279, 451, 0, 452, 515, 516, 517, 518, 0, 459,
	0, 453, 454, 519, 455, 520, 0, 456, 457, 458,
	0, 460, 461, 0, 0, 462, 463, 464, 465, 466,
	468, 0, 469, 0, 467, 470, 471, 472, 521, 522,
	523, 0, 474, 473, 524, 1846, 0, 213, 0, 475,
	476, 525, 477, 478, 479, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 480, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 481, 482, 230, 483,
	233, 231, 232, 484, 0, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 485, 486, 487, 0, 241, 488,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 0, 256, 257, 0, 0, 0, 0, 0, 0,
	0, 258, 259, 260, 261, 262, 263, 489, 490, 0,
	264, 0, 266, 265, 0, 267, 0, 0, 268, 269,
	270, 0, 271, 0, 272, 273, 0, 274, 491, 275,
	276, 278, 280, 277, 281, 282, 283, 284, 492, 493,
	0, 216, 0, 0, 0, 0, 0, 285, 286, 287,
	494, 288, 289, 0, 290, 0, 291, 0, 0, 0,
	292, 293, 0, 294, 495, 0, 496, 295, 0, 296,
	297, 298, 299, 1848, 498, 499, 351, 0, 300, 301,
	0, 302, 303, 305, 0, 0, 217, 304, 306, 313,
	0, 0, 307, 500, 309, 308, 310, 311, 312, 501,
	0, 502, 0, 314, 0, 503, 0, 315, 316, 317,
	0, 318, 319, 0, 0, 320, 321, 322, 323, 324,
	0, 326, 325, 0, 327, 504, 0, 328, 329, 0,
	0, 330, 331, 0, 0, 332, 333, 334, 0, 335,
	336, 338, 340, 337, 339, 341, 343, 344, 342, 0,
	345, 346, 348, 0, 347, 0, 218, 0, 349, 0,
	505, 350, 506, 352, 353, 0, 354, 355, 356, 0,
	0, 358, 359, 360, 0, 0, 361, 362, 507, 0,
	363, 0, 508, 364, 357, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 509, 374, 510, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 511,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 392,
	393, 394, 391, 395, 396, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 512, 404, 0, 405, 409, 410,
	411, 412, 413, 414, 415, 0, 421, 422, 416, 418,
	419, 420, 417, 423, 424, 425, 0, 426, 406, 407,
	427, 428, 0, 429, 430, 513, 431, 432, 0, 433,
	434, 435, 436, 408, 437, 441, 442, 438, 439, 440,
	514, 0, 444, 445, 443, 0, 446, 447, 448, 449,
	450, 279, 451, 0, 452, 515, 516, 517, 518, 0,
	459, 0, 453, 454, 519, 455, 520, 0, 456, 457,
	458, 0, 460, 461, 0, 0, 462, 463, 464, 465,
	466, 468, 0, 469, 0, 467, 470, 471, 472, 521,
	522, 523, 0, 474, 473, 524, 1320, 0, 213, 0,
	475, 476, 525, 477, 478, 479, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 480, 0, 0,
	0, 0, 225, 227, 226, 228, 229, 481, 482, 230,
	483, 233, 231, 232, 484, 0, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 485, 486, 487, 0, 241,
	488, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 0, 256, 257, 0, 0, 0, 0, 0,
	0, 0, 258, 259, 260, 261, 262, 263, 489, 490,
	0, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 274, 491,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 492,
	493, 0, 216, 0, 0, 0, 0, 0, 285, 286,
	287, 494, 288, 289, 0, 290, 0, 291, 0, 0,
	0, 292, 293, 0, 294, 495, 0, 496, 295, 0,
	296, 297, 298, 299, 1319, 498, 499, 351, 0, 300,
	301, 0, 302, 303, 305, 0, 0, 217, 304, 306,
	313, 0, 0, 307, 500, 309, 308, 310, 311, 312,
	501, 0, 502, 0, 314, 0, 503, 0, 315, 316,
	317, 0, 318, 319, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 504, 0, 328, 329,
	0, 0, 330, 331, 0, 0, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 344, 342,
	0, 345, 346, 348, 0, 347, 0, 218, 0, 349,
	0, 505, 350, 506, 352, 353, 0, 354, 355, 356,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	0, 363, 0, 508, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 509, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	511, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 512, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 0, 421, 422, 416,
	418, 419, 420, 417, 423, 424, 425, 0, 426, 406,
	407, 427, 428, 0, 429, 430, 513, 431, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 442, 438, 439,
	440, 514, 0, 444, 445, 443, 0, 446, 447, 448,
	449, 450, 279, 451, 0, 452, 515, 516, 517, 518,
	0, 459, 0, 453, 454, 519, 455, 520, 0, 456,
	457, 458, 0, 460, 461, 0, 0, 462, 463, 464,
	465, 466, 468, 0, 469, 0, 467, 470, 471, 472,
	521, 522, 523, 0, 474, 473, 524, 1317, 0, 213,
	0, 475, 476, 525, 477, 478, 479, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 480, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 481, 482,
	230, 483, 233, 231, 232, 484, 0, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 485, 486, 487, 0,
	241, 488, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 0, 256, 257, 0, 0, 0, 0,
	0, 0, 0, 258, 259, 260, 261, 262, 263, 489,
	490, 0, 264, 0, 266, 265, 0, 267, 0, 0,
	268, 269, 270, 0, 271, 0, 272, 273, 0, 274,
	491, 275, 276, 278, 280, 277, 281, 282, 283, 284,
	492, 493, 0, 216, 0, 0, 0, 0, 0, 285,
	286, 287, 494, 288, 289, 0, 290, 0, 291, 0,
	0, 0, 292, 293, 0, 294, 495, 0, 496, 295,
	0, 296, 297, 298, 299, 1316, 498, 499, 351, 0,
	300, 301, 0, 302, 303, 305, 0, 0, 217, 304,
	306, 313, 0, 0, 307, 500, 309, 308, 310, 311,
	312, 501, 0, 502, 0, 314, 0, 503, 0, 315,
	316, 317, 0, 318, 319, 0, 0, 320, 321, 322,
	323, 324, 0, 326, 325, 0, 327, 504, 0, 328,
	329, 0, 0, 330, 331, 0, 0, 332, 333, 334,
	0, 335, 336, 338, 340, 337, 339, 341, 343, 344,
	342, 0, 345, 346, 348, 0, 347, 0, 218, 0,
	349, 0, 505, 350, 506, 352, 353, 0, 354, 355,
	356, 0, 0, 358, 359, 360, 0, 0, 361, 362,
	507, 0, 363, 0, 508, 364, 357, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 509, 374, 510,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 511, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 392, 393, 394, 391, 395, 396, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 512, 404, 0, 405,
	409, 410, 411, 412, 413, 414, 415, 0, 421, 422,
	416, 418, 419, 420, 417, 423, 424, 425, 0, 426,
	406, 407, 427, 428, 0, 429, 430, 513, 431, 432,
	0, 433, 434, 435, 436, 408, 437, 441, 442, 438,
	439, 440, 514, 0, 444, 445, 443, 0, 446, 447,
	448, 449, 450, 279, 451, 0, 452, 515, 516, 517,
	518, 0, 459, 0, 453, 454, 519, 455, 520, 0,
	456, 457, 458, 0, 460, 461, 0, 0, 462, 463,
	464, 465, 466, 468, 0, 469, 0, 467, 470, 471,
	472, 521, 522, 523, 0, 474, 473, 524, 1314, 0,
	213, 0, 475, 476, 525, 477, 478, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 480,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	482, 230, 483, 233, 231, 232, 484, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 485, 486, 487,
	0, 241, 488, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 0, 256, 257, 0, 0, 0,
	0, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	489, 490, 0, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	274, 491, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 492, 493, 0, 216, 0, 0, 0, 0, 0,
	285, 286, 287, 494, 288, 289, 0, 290, 0, 291,
	0, 0, 0, 292, 293, 0, 294, 495, 0, 496,
	295, 0, 296, 297, 298, 299, 1313, 498, 499, 351,
	0, 300, 301, 0, 302, 303, 305, 0, 0, 217,
	304, 306, 313, 0, 0, 307, 500, 309, 308, 310,
	311, 312, 501, 0, 502, 0, 314, 0, 503, 0,
	315, 316, 317, 0, 318, 319, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 504, 0,
	328, 329, 0, 0, 330, 331, 0, 0, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	344, 342, 0, 345, 346, 348, 0, 347, 0, 218,
	0, 349, 0, 505, 350, 506, 352, 353, 0, 354,
	355, 356, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 0, 363, 0, 508, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 509, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 511, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 512, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 416, 418, 419, 420, 417, 423, 424, 425, 0,
	426, 406, 407, 427, 428, 0, 429, 430, 513, 431,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 442,
	438, 439, 440, 514, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 451, 0, 452, 515, 516,
	517, 518, 0, 459, 0, 453, 454, 519, 455, 520,
	0, 456, 457, 458, 0, 460, 461, 0, 0, 462,
	463, 464, 465, 466, 468, 0, 469, 0, 467, 470,
	471, 472, 521, 522, 523, 0, 474, 473, 524, 1310,
	0, 213, 0, 475, 476, 525, 477, 478, 479, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	221, 222, 223, 0, 224, 0, 0, 0, 0, 0,
	480, 0, 0, 0, 0, 225, 227, 226, 228, 229,
	481, 482, 230, 483, 233, 231, 232, 484, 0, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 485, 486,
	487, 0, 241, 488, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 0, 256, 257, 0, 0,
	0, 0, 0, 0, 0, 258, 259, 260, 261, 262,
	263, 489, 490, 0, 264, 0, 266, 265, 0, 267,
	0, 0, 268, 269, 270, 0, 271, 0, 272, 273,
	0, 274, 491, 275, 276, 278, 280, 277, 281, 282,
	283, 284, 492, 493, 0, 216, 0, 0, 0, 0,
	0, 285, 286, 287, 494, 288, 289, 0, 290, 0,
	291, 0, 0, 0, 292, 293, 0, 294, 495, 0,
	496, 295, 0, 296, 297, 298, 299, 1309, 498, 499,
	351, 0, 300, 301, 0, 302, 303, 305, 0, 0,
	217, 304, 306, 313, 0, 0, 307, 500, 309, 308,
	310, 311, 312, 501, 0, 502, 0, 314, 0, 503,
	0, 315, 316, 317, 0, 318, 319, 0, 0, 320,
	321, 322, 323, 324, 0, 326, 325, 0, 327, 504,
	0, 328, 329, 0, 0, 330, 331, 0, 0, 332,
	333, 334, 0, 335, 336, 338, 340, 337, 339, 341,
	343, 344, 342, 0, 345, 346, 348, 0, 347, 0,
	218, 0, 349, 0, 505, 350, 506, 352, 353, 0,
	354, 355, 356, 0, 0, 358, 359, 360, 0, 0,
	361, 362, 507, 0, 363, 0, 508, 364, 357, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 509,
	374, 510, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 511, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 392, 393, 394, 391, 395, 396, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 512, 404,
	0, 405, 409, 410, 411, 412, 413, 414, 415, 0,
	421, 422, 416, 418, 419, 420, 417, 423, 424, 425,
	0, 426, 406, 407, 427, 428, 0, 429, 430, 513,
	431, 432, 0, 433, 434, 435, 436, 408, 437, 441,
	442, 438, 439, 440, 514, 0, 444, 445, 443, 0,
	446, 447, 448, 449, 450, 279, 451, 0, 452, 515,
	516, 517, 518, 0, 459, 0, 453, 454, 519, 455,
	520, 0, 456, 457, 458, 0, 460, 461, 0, 0,
	462, 463, 464, 465, 466, 468, 0, 469, 0, 467,
	470, 471, 472, 521, 522, 523, 0, 474, 473, 524,
	1195, 0, 213, 0, 475, 476, 525, 477, 478, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 480, 0, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 482, 230, 483, 233, 231, 232, 484, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 485,
	486, 487, 0, 241, 488, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 0, 256, 257, 0,
	0, 0, 0, 0, 0, 0, 258, 259, 260, 261,
	262, 263, 489, 490, 0, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 274, 491, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 492, 493, 0, 216, 0, 0, 0,
	0, 0, 285, 286, 287, 494, 288, 289, 0, 290,
	0, 291, 0, 0, 0, 292, 293, 0, 294, 495,
	0, 496, 295, 0, 296, 297, 298, 299, 1197, 498,
	499, 351, 0, 300, 301, 0, 302, 303, 305, 0,
	0, 217, 304, 306, 313, 0, 0, 307, 500, 309,
	308, 310, 311, 312, 501, 0, 502, 0, 314, 0,
	503, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	504, 0, 328, 329, 0, 0, 330, 331, 0, 0,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 344, 342, 0, 345, 346, 348, 0, 347,
	0, 218, 0, 349, 0, 505, 350, 506, 352, 353,
	0, 354, 355, 356, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 0, 363, 0, 508, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	509, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 511, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 512,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 416, 418, 419, 420, 417, 423, 424,
	425, 0, 426, 406, 407, 427, 428, 0, 429, 430,
	513, 431, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 442, 438, 439, 440, 514, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 451, 0, 452,
	515, 516, 517, 518, 0, 459, 0, 453, 454, 519,
	455, 520, 0, 456, 457, 458, 0, 460, 461, 0,
	0, 462, 463, 464, 465, 466, 468, 0, 469, 0,
	467, 470, 471, 472, 521, 522, 523, 213, 474, 473,
	524, 0, 0, 0, 0, 475, 476, 525, 477, 478,
	479, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 480, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 481, 482, 230, 483,
	233, 231, 232, 484, 0, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 485, 486, 487, 0, 241, 488,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 0, 256, 257, 0, 0, 0, 0, 0, 0,
	0, 258, 259, 260, 261, 262, 263, 489, 490, 0,
	264, 0, 266, 265, 0, 267, 0, 0, 268, 269,
	270, 0, 271, 0, 272, 273, 0, 274, 491, 275,
	276, 278, 280, 277, 281, 282, 283, 284, 492, 493,
	0, 216, 0, 0, 0, 0, 0, 285, 286, 287,
	494, 288, 289, 0, 290, 0, 291, 0, 0, 0,
	292, 293, 0, 294, 495, 0, 496, 295, 0, 296,
	297, 298, 299, 497, 498, 499, 351, 0, 300, 301,
	0, 302, 303, 305, 0, 0, 217, 304, 306, 313,
	0, 0, 307, 500, 309, 308, 310, 311, 312, 501,
	0, 502, 0, 314, 0, 503, 0, 315, 316, 317,
	0, 318, 319, 0, 0, 320, 321, 322, 323, 324,
	0, 326, 325, 0, 327, 504, 0, 328, 329, 0,
	0, 330, 331, 0, 0, 332, 333, 334, 0, 335,
	336, 338, 340, 337, 339, 341, 343, 344, 342, 0,
	345, 346, 348, 0, 347, 0, 218, 0, 349, 0,
	505, 350, 506, 352, 353, 0, 354, 355, 356, 0,
	0, 358, 359, 360, 0, 0, 361, 362, 507, 0,
	363, 0, 508, 364, 357, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 509, 374, 510, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 511,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 392,
	393, 394, 391, 395, 396, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 512, 404, 0, 405, 409, 410,
	411, 412, 413, 414, 415, 0, 421, 422, 416, 418,
	419, 420, 417, 423, 424, 425, 0, 426, 406, 407,
	427, 428, 0, 429, 430, 513, 431, 432, 0, 433,
	434, 435, 436, 408, 437, 441, 442, 438, 439, 440,
	514, 0, 444, 445, 443, 0, 446, 447, 448, 449,
	450, 279, 451, 0, 452, 515, 516, 517, 518, 0,
	459, 0, 453, 454, 519, 455, 520, 0, 456, 457,
	458, 0, 460, 461, 0, 0, 462, 463, 464, 465,
	466, 468, 0, 469, 0, 467, 470, 471, 472, 521,
	522, 523, 213, 474, 473, 524, 0, 0, 0, 0,
	475, 476, 525, 477, 478, 479, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 480, 0, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 482, 230, 483, 233, 231, 232, 484, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 485,
	486, 487, 0, 241, 488, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 546, 0, 256, 257, 0,
	0, 0, 0, 0, 0, 0, 258, 259, 260, 261,
	262, 263, 489, 490, 0, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 274, 491, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 492, 493, 0, 0, 0, 0, 0,
	0, 0, 285, 286, 287, 494, 288, 289, 0, 290,
	0, 291, 0, 0, 0, 292, 293, 547, 294, 495,
	0, 496, 295, 0, 296, 297, 298, 299, 497, 498,
	499, 351, 0, 300, 301, 0, 302, 303, 305, 0,
	0, 0, 304, 306, 313, 0, 0, 307, 500, 309,
	308, 310, 311, 312, 501, 0, 502, 0, 314, 0,
	503, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	504, 0, 328, 329, 0, 0, 330, 331, 0, 0,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 344, 342, 0, 345, 346, 348, 0, 347,
	0, 0, 0, 349, 0, 505, 350, 506, 352, 353,
	0, 354, 355, 356, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 0, 363, 0, 508, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	509, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 511, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 512,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	548, 421, 422, 416, 418, 419, 420, 417, 423, 424,
	425, 0, 426, 406, 407, 427, 428, 0, 429, 430,
	513, 431, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 442, 438, 439, 440, 514, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 451, 0, 452,
	515, 516, 517, 518, 0, 459, 0, 453, 454, 519,
	455, 520, 0, 456, 457, 458, 0, 460, 461, 0,
	0, 462, 463, 464, 465, 466, 468, 0, 469, 0,
	467, 470, 471, 472, 521, 522, 523, 213, 474, 473,
	524, 0, 0, 0, 0, 475, 476, 525, 477, 478,
	479, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 480, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 481, 482, 230, 483,
	233, 231, 232, 484, 0, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 485, 486, 487, 0, 241, 488,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 0, 256, 257, 0, 0, 0, 0, 0, 0,
	0, 258, 259, 1958, 261, 262, 263, 489, 490, 0,
	264, 0, 266, 265, 0, 267, 0, 0, 268, 269,
	270, 0, 271, 0, 272, 273, 0, 274, 491, 275,
	276, 278, 280, 277, 281, 282, 283, 284, 492, 493,
	0, 216, 0, 0, 0, 0, 0, 285, 286, 287,
	494, 288, 289, 0, 290, 0, 291, 0, 0, 0,
	292, 293, 0, 294, 495, 0, 496, 295, 0, 296,
	297, 298, 299, 497, 498, 499, 351, 0, 300, 301,
	0, 302, 303, 305, 0, 0, 217, 304, 306, 313,
	0, 0, 307, 500, 309, 308, 310, 311, 312, 501,
	0, 502, 0, 314, 0, 503, 0, 315, 316, 317,
	0, 318, 319, 0, 0, 320, 321, 322, 323, 324,
	0, 326, 325, 0, 327, 504, 0, 328, 329, 0,
	0, 330, 331, 0, 0, 332, 333, 334, 0, 335,
	336, 338, 340, 337, 339, 341, 343, 344, 342, 0,
	345, 346, 348, 0, 347, 0, 218, 0, 349, 0,
	505, 350, 506, 352, 353, 0, 354, 355, 356, 0,
	0, 358, 359, 360, 0, 0, 361, 362, 507, 0,
	363, 0, 508, 364, 357, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 509, 374, 510, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 511,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 392,
	393, 394, 391, 395, 396, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 512, 404, 0, 405, 409, 410,
	411, 412, 413, 414, 415, 0, 421, 422, 416, 418,
	419, 420, 417, 423, 424, 425, 0, 426, 406, 407,
	427, 428, 0, 429, 430, 513, 431, 432, 0, 433,
	434, 435, 436, 408, 437, 441, 442, 438, 439, 440,
	514, 0, 444, 445, 443, 0, 446, 447, 448, 449,
	450, 279, 451, 0, 452, 515, 516, 517, 518, 0,
	459, 0, 453, 454, 519, 455, 520, 0, 456, 457,
	458, 0, 460, 461, 0, 0, 462, 463, 464, 465,
	466, 468, 0, 469, 0, 467, 470, 471, 472, 521,
	522, 523, 213, 474, 473, 524, 0, 0, 0, 0,
	475, 476, 525, 477, 478, 479, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 480, 0, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 482, 230, 483, 233, 231, 232, 484, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 485,
	486, 487, 0, 241, 488, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 0, 256, 257, 0,
	0, 0, 0, 0, 0, 0, 258, 259, 1956, 261,
	262, 263, 489, 490, 0, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 274, 491, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 492, 493, 0, 216, 0, 0, 0,
	0, 0, 285, 286, 287, 494, 288, 289, 0, 290,
	0, 291, 0, 0, 0, 292, 293, 0, 294, 495,
	0, 496, 295, 0, 296, 297, 298, 299, 497, 498,
	499, 351, 0, 300, 301, 0, 302, 303, 305, 0,
	0, 217, 304, 306, 313, 0, 0, 307, 500, 309,
	308, 310, 311, 312, 501, 0, 502, 0, 314, 0,
	503, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	504, 0, 328, 329, 0, 0, 330, 331, 0, 0,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 344, 342, 0, 345, 346, 348, 0, 347,
	0, 218, 0, 349, 0, 505, 350, 506, 352, 353,
	0, 354, 355, 356, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 0, 363, 0, 508, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	509, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 511, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 512,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 416, 418, 419, 420, 417, 423, 424,
	425, 0, 426, 406, 407, 427, 428, 0, 429, 430,
	513, 431, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 442, 438, 439, 440, 514, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 451, 0, 452,
	515, 516, 517, 518, 0, 459, 0, 453, 454, 519,
	455, 520, 0, 456, 457, 458, 0, 460, 461, 0,
	0, 462, 463, 464, 465, 466, 468, 0, 469, 0,
	467, 470, 471, 472, 521, 522, 523, 213, 474, 473,
	524, 0, 0, 0, 0, 475, 476, 525, 477, 478,
	479, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 480, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 481, 482, 230, 483,
	233, 231, 232, 484, 0, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 485, 486, 487, 0, 241, 488,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 0, 256, 257, 0, 0, 0, 0, 0, 0,
	0, 258, 259, 1954, 261, 262, 263, 489, 490, 0,
	264, 0, 266, 265, 0, 267, 0, 0, 268, 269,
	270, 0, 271, 0, 272, 273, 0, 274, 491, 275,
	276, 278, 280, 277, 281, 282, 283, 284, 492, 493,
	0, 216, 0, 0, 0, 0, 0, 285, 286, 287,
	494, 288, 289, 0, 290, 0, 291, 0, 0, 0,
	292, 293, 0, 294, 495, 0, 496, 295, 0, 296,
	297, 298, 299, 497, 498, 499, 351, 0, 300, 301,
	0, 302, 303, 305, 0, 0, 217, 304, 306, 313,
	0, 0, 307, 500, 309, 308, 310, 311, 312, 501,
	0, 502, 0, 314, 0, 503, 0, 315, 316, 317,
	0, 318, 319, 0, 0, 320, 321, 322, 323, 324,
	0, 326, 325, 0, 327, 504, 0, 328, 329, 0,
	0, 330, 331, 0, 0, 332, 333, 334, 0, 335,
	336, 338, 340, 337, 339, 341, 343, 344, 342, 0,
	345, 346, 348, 0, 347, 0, 218, 0, 349, 0,
	505, 350, 506, 352, 353, 0, 354, 355, 356, 0,
	0, 358, 359, 360, 0, 0, 361, 362, 507, 0,
	363, 0, 508, 364, 357, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 509, 374, 510, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 511,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 392,
	393, 394, 391, 395, 396, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 512, 404, 0, 405, 409, 410,
	411, 412, 413, 414, 415, 0, 421, 422, 416, 418,
	419, 420, 417, 423, 424, 425, 0, 426, 406, 407,
	427, 428, 0, 429, 430, 513, 431, 432, 0, 433,
	434, 435, 436, 408, 437, 441, 442, 438, 439, 440,
	514, 0, 444, 445, 443, 0, 446, 447, 448, 449,
	450, 279, 451, 0, 452, 515, 516, 517, 518, 0,
	459, 0, 453, 454, 519, 455, 520, 0, 456, 457,
	458, 0, 460, 461, 0, 0, 462, 463, 464, 465,
	466, 468, 0, 469, 0, 467, 470, 471, 472, 521,
	522, 523, 0, 474, 473, 524, 696, 0, 213, 0,
	475, 476, 525, 477, 478, 479, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 480, 0, 0,
	0, 0, 225, 227, 226, 228, 229, 481, 482, 230,
	483, 233, 231, 232, 484, 0, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 485, 486, 487, 0, 241,
	488, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 0, 256, 257, 0, 0, 0, 0, 0,
	0, 0, 258, 259, 260, 261, 262, 263, 489, 490,
	0, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 274, 491,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 492,
	493, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	287, 494, 288, 289, 0, 290, 0, 291, 0, 0,
	0, 292, 293, 0, 294, 495, 0, 496, 295, 0,
	296, 297, 298, 299, 497, 498, 499, 351, 0, 300,
	301, 0, 302, 303, 305, 0, 0, 0, 304, 306,
	313, 0, 0, 307, 500, 309, 308, 310, 311, 312,
	501, 0, 502, 695, 314, 0, 503, 0, 315, 316,
	317, 0, 318, 319, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 504, 0, 328, 329,
	0, 0, 330, 331, 0, 0, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 344, 342,
	0, 345, 346, 348, 0, 347, 0, 0, 0, 349,
	0, 505, 350, 506, 352, 353, 0, 354, 355, 356,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	0, 363, 0, 508, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 509, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	511, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 512, 404, 0, 405, 409,
	410, 411, 412, 413, 414, 415, 0, 421, 422, 416,
	418, 419, 420, 417, 423, 424, 425, 0, 426, 406,
	407, 427, 428, 0, 429, 430, 513, 431, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 442, 438, 439,
	440, 514, 0, 444, 445, 443, 694, 446, 447, 448,
	449, 450, 279, 451, 0, 452, 515, 516, 517, 518,
	0, 459, 0, 453, 454, 519, 455, 520, 0, 456,
	457, 458, 0, 460, 461, 0, 0, 462, 463, 464,
	465, 466, 468, 0, 469, 0, 467, 470, 471, 472,
	521, 522, 523, 213, 474, 473, 524, 0, 0, 0,
	0, 475, 476, 525, 477, 478, 479, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 480, 0, 0, 0, 0, 225, 227, 226,
	228, 229, 481, 482, 230, 483, 233, 231, 232, 484,
	0, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	485, 486, 487, 0, 241, 488, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 0, 256, 257,
	0, 0, 0, 0, 0, 0, 0, 258, 259, 260,
	261, 262, 263, 489, 490, 0, 264, 0, 266, 265,
	0, 267, 0, 0, 268, 269, 270, 0, 271, 0,
	272, 273, 0, 274, 491, 275, 276, 278, 280, 277,
	281, 282, 283, 284, 492, 493, 0, 2467, 0, 0,
	0, 0, 0, 285, 286, 287, 494, 288, 289, 0,
	290, 0, 291, 0, 0, 0, 292, 293, 0, 294,
	495, 0, 496, 295, 0, 296, 297, 298, 299, 497,
	498, 499, 351, 0, 300, 301, 0, 302, 303, 305,
	0, 0, 0, 304, 306, 313, 0, 0, 307, 500,
	309, 308, 310, 311, 312, 501, 0, 502, 0, 314,
	0, 503, 0, 315, 316, 317, 0, 318, 319, 0,
	0, 320, 321, 322, 323, 324, 0, 326, 325, 0,
	327, 504, 0, 328, 329, 0, 0, 330, 331, 0,
	0, 332, 333, 334, 0, 335, 336, 338, 340, 337,
	339, 341, 343, 344, 342, 0, 345, 346, 348, 0,
	347, 0, 0, 0, 349, 0, 505, 350, 506, 352,
	353, 0, 354, 355, 356, 0, 0, 358, 359, 360,
	0, 0, 361, 362, 507, 0, 363, 0, 508, 364,
	357, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 509, 374, 510, 375, 3295, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 511, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 392, 393, 394, 391, 395,
	396, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	512, 404, 0, 405, 409, 410, 411, 412, 413, 414,
	415, 0, 421, 422, 416, 418, 419, 420, 417, 423,
	424, 425, 0, 426, 406, 407, 427, 428, 0, 429,
	430, 513, 431, 432, 0, 433, 434, 435, 436, 408,
	437, 441, 442, 438, 439, 440, 514, 0, 444, 445,
	443, 0, 446, 447, 448, 449, 450, 279, 451, 0,
	452, 515, 516, 517, 518, 0, 459, 0, 453, 454,
	519, 455, 520, 0, 456, 457, 458, 0, 460, 461,
	0, 0, 462, 463, 464, 465, 466, 468, 0, 469,
	0, 467, 470, 471, 472, 521, 522, 523, 0, 474,
	473, 524, 533, 0, 213, 0, 475, 476, 525, 477,
	478, 479, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 532, 224, 0, 0,
	0, 0, 0, 480, 0, 0, 0, 0, 225, 227,
	226, 228, 229, 481, 482, 230, 483, 233, 231, 232,
	484, 0, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 485, 486, 487, 0, 241, 488, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 0, 256,
	257, 0, 0, 0, 0, 0, 0, 0, 258, 259,
	260, 261, 262, 263, 489, 490, 0, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 274, 491, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 492, 493, 0, 0, 0,
	0, 0, 0, 0, 285, 286, 287, 494, 288, 289,
	0, 290, 0, 291, 0, 0, 0, 292, 293, 0,
	294, 495, 0, 496, 295, 0, 296, 297, 298, 299,
	497, 498, 499, 351, 0, 300, 301, 0, 302, 303,
	305, 0, 0, 0, 304, 306, 313, 0, 0, 307,
	500, 309, 308, 310, 311, 312, 501, 0, 502, 0,
	314, 0, 503, 0, 315, 316, 317, 0, 318, 319,
	0, 0, 320, 321, 322, 323, 324, 0, 326, 325,
	0, 327, 504, 0, 328, 329, 0, 0, 330, 331,
	0, 0, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 344, 342, 0, 345, 346, 348,
	0, 347, 0, 0, 0, 349, 0, 505, 350, 506,
	352, 353, 0, 354, 355, 356, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 507, 0, 363, 0, 508,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 509, 374, 510, 531, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 511, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 512, 404, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 0, 421, 422, 416, 418, 419, 420, 417,
	423, 424, 425, 0, 426, 406, 407, 427, 428, 0,
	429, 430, 513, 431, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 442, 438, 439, 440, 514, 0, 444,
	445, 443, 0, 446, 447, 448, 449, 450, 279, 451,
	0, 452, 515, 516, 517, 518, 0, 459, 0, 453,
	454, 519, 455, 520, 0, 456, 457, 458, 0, 460,
	461, 0, 0, 462, 463, 464, 465, 466, 468, 0,
	469, 0, 467, 470, 471, 472, 521, 522, 523, 0,
	474, 473, 524, 213, 3304, 0, 0, 475, 476, 525,
	477, 478, 479, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 480, 0, 0, 0, 0, 225, 227, 226,
	228, 229, 481, 482, 230, 483, 233, 231, 232, 484,
	0, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	485, 486, 487, 0, 241, 488, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 0, 256, 257,
	0, 0, 0, 0, 0, 0, 0, 258, 259, 260,
	261, 262, 263, 489, 490, 0, 264, 0, 266, 265,
	0, 267, 0, 0, 268, 269, 270, 0, 271, 0,
	272, 273, 0, 274, 491, 275, 276, 278, 280, 277,
	281, 282, 283, 284, 492, 493, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 494, 288, 289, 0,
	290, 0, 291, 0, 0, 0, 292, 293, 0, 294,
	495, 0, 496, 295, 0, 296, 297, 298, 299, 497,
	498, 499, 351, 0, 300, 301, 0, 302, 303, 305,
	0, 0, 0, 304, 306, 313, 0, 0, 307, 500,
	309, 308, 310, 311, 312, 501, 0, 502, 0, 314,
	0, 503, 0, 315, 316, 317, 0, 318, 319, 0,
	0, 320, 321, 322, 323, 324, 0, 326, 325, 0,
	327, 504, 0, 328, 329, 0, 0, 330, 331, 0,
	0, 332, 333, 334, 0, 335, 336, 338, 340, 337,
	339, 341, 343, 344, 342, 0, 345, 346, 348, 0,
	347, 0, 0, 0, 349, 0, 505, 350, 506, 352,
	353, 0, 354, 355, 356, 0, 0, 358, 359, 360,
	0, 0, 361, 362, 507, 0, 363, 0, 508, 364,
	357, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 509, 374, 510, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 511, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 392, 393, 394, 391, 395,
	396, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	512, 404, 0, 405, 409, 410, 411, 412, 413, 414,
	415, 0, 421, 422, 416, 418, 419, 420, 417, 423,
	424, 425, 0, 426, 406, 407, 427, 428, 0, 429,
	430, 513, 431, 432, 0, 433, 434, 435, 436, 408,
	437, 441, 442, 438, 439, 440, 514, 0, 444, 445,
	443, 0, 446, 447, 448, 449, 450, 279, 451, 0,
	452, 515, 516, 517, 518, 0, 459, 0, 453, 454,
	519, 455, 520, 0, 456, 457, 458, 0, 460, 461,
	0, 0, 462, 463, 464, 465, 466, 468, 0, 469,
	0, 467, 470, 471, 472, 521, 522, 523, 0, 474,
	473, 524, 213, 2454, 0, 0, 475, 476, 525, 477,
	478, 479, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 480, 0, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 482, 230, 483, 233, 231, 232, 484, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 485,
	486, 487, 0, 241, 488, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 0, 256, 257, 0,
	0, 0, 0, 0, 0, 0, 258, 259, 260, 261,
	262, 263, 489, 490, 0, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 274, 491, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 492, 493, 0, 0, 0, 0, 0,
	0, 0, 285, 286, 287, 494, 288, 289, 0, 290,
	0, 291, 0, 0, 0, 292, 293, 0, 294, 495,
	0, 496, 295, 0, 296, 297, 298, 299, 497, 498,
	499, 351, 0, 300, 301, 0, 302, 303, 305, 0,
	0, 0, 304, 306, 313, 0, 0, 307, 500, 309,
	308, 310, 311, 312, 501, 0, 502, 0, 314, 0,
	503, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	504, 0, 328, 329, 0, 0, 330, 331, 0, 0,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 344, 342, 0, 345, 346, 348, 0, 347,
	0, 0, 0, 349, 0, 505, 350, 506, 352, 353,
	0, 354, 355, 356, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 0, 363, 0, 508, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	509, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 511, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 512,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 416, 418, 419, 420, 417, 423, 424,
	425, 0, 426, 406, 407, 427, 428, 0, 429, 430,
	513, 431, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 442, 438, 439, 440, 514, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 451, 0, 452,
	515, 516, 517, 518, 0, 459, 0, 453, 454, 519,
	455, 520, 0, 456, 457, 458, 0, 460, 461, 0,
	0, 462, 463, 464, 465, 466, 468, 0, 469, 0,
	467, 470, 471, 472, 521, 522, 523, 213, 474, 473,
	524, 0, 0, 0, 0, 475, 476, 525, 477, 478,
	479, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 480, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 481, 482, 230, 483,
	233, 231, 232, 484, 0, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 485, 486, 487, 0, 241, 488,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 0, 256, 257, 0, 0, 0, 0, 0, 0,
	0, 258, 259, 260, 261, 262, 263, 489, 490, 3087,
	264, 0, 266, 265, 0, 267, 0, 0, 268, 269,
	270, 0, 271, 0, 272, 273, 0, 274, 491, 275,
	276, 278, 280, 277, 281, 282, 283, 284, 492, 493,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	494, 288, 289, 0, 290, 0, 291, 0, 0, 0,
	292, 293, 0, 294, 495, 0, 496, 295, 0, 296,
	297, 298, 299, 497, 498, 499, 351, 0, 300, 301,
	0, 302, 303, 305, 0, 0, 0, 304, 306, 313,
	0, 0, 307, 500, 309, 308, 310, 311, 312, 501,
	0, 502, 0, 314, 0, 503, 0, 315, 316, 317,
	0, 318, 319, 0, 0, 320, 321, 322, 323, 324,
	0, 326, 325, 0, 327, 504, 0, 328, 329, 0,
	0, 330, 331, 0, 0, 332, 333, 334, 0, 335,
	336, 338, 340, 337, 339, 341, 343, 344, 342, 0,
	345, 346, 348, 0, 347, 0, 0, 0, 349, 0,
	505, 350, 506, 352, 353, 0, 354, 355, 356, 0,
	0, 358, 359, 360, 0, 0, 361, 362, 507, 0,
	363, 0, 508, 364, 357, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 509, 374, 510, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 511,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 392,
	393, 394, 391, 395, 396, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 512, 404, 0, 405, 409, 410,
	411, 412, 413, 414, 415, 0, 421, 422, 416, 418,
	419, 420, 417, 423, 424, 425, 0, 426, 406, 407,
	427, 428, 0, 429, 430, 513, 431, 432, 0, 433,
	434, 435, 436, 408, 437, 441, 442, 438, 439, 440,
	514, 0, 444, 445, 443, 0, 446, 447, 448, 449,
	450, 279, 451, 0, 452, 515, 516, 517, 518, 0,
	459, 0, 453, 454, 519, 455, 520, 0, 456, 457,
	458, 0, 460, 461, 0, 0, 462, 463, 464, 465,
	466, 468, 0, 469, 0, 467, 470, 471, 472, 521,
	522, 523, 213, 474, 473, 524, 0, 0, 0, 0,
	475, 476, 525, 477, 478, 479, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 480, 0, 2244, 0, 0, 225, 227, 226, 228,
	229, 481, 482, 230, 483, 233, 231, 232, 484, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 485,
	486, 487, 0, 241, 488, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 0, 256, 257, 0,
	0, 0, 0, 0, 0, 0, 258, 259, 260, 261,
	262, 263, 489, 490, 0, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 274, 491, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 492, 493, 0, 0, 0, 0, 0,
	0, 0, 285, 286, 287, 494, 288, 289, 0, 290,
	0, 291, 0, 0, 0, 292, 293, 0, 294, 495,
	0, 496, 295, 0, 296, 297, 298, 299, 497, 498,
	499, 351, 0, 300, 301, 0, 302, 303, 305, 0,
	0, 0, 304, 306, 313, 0, 0, 307, 500, 309,
	308, 310, 311, 312, 501, 0, 502, 0, 314, 0,
	503, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	504, 0, 328, 329, 0, 0, 330, 331, 0, 0,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 344, 342, 0, 345, 346, 348, 0, 347,
	0, 0, 0, 349, 0, 505, 350, 506, 352, 353,
	0, 354, 355, 356, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 0, 363, 0, 508, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	509, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 511, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 512,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 416, 418, 419, 420, 417, 423, 424,
	425, 0, 426, 406, 407, 427, 428, 0, 429, 430,
	513, 431, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 442, 438, 439, 440, 514, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 451, 0, 452,
	515, 516, 517, 518, 0, 459, 0, 453, 454, 519,
	455, 520, 0, 456, 457, 458, 0, 460, 461, 0,
	0, 462, 463, 464, 465, 466, 468, 0, 469, 0,
	467, 470, 471, 472, 521, 522, 523, 0, 474, 473,
	524, 213, 2454, 0, 0, 475, 476, 525, 477, 478,
	479, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	221, 222, 223, 0, 224, 0, 0, 0, 0, 0,
	480, 0, 0, 0, 0, 225, 227, 226, 228, 229,
	481, 482, 230, 483, 233, 231, 232, 484, 0, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 485, 486,
	487, 0, 241, 488, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 0, 256, 257, 0, 0,
	0, 0, 0, 0, 0, 258, 259, 260, 261, 262,
	263, 489, 490, 0, 264, 0, 266, 265, 0, 267,
	0, 0, 268, 269, 270, 0, 271, 0, 272, 273,
	0, 274, 491, 275, 276, 278, 280, 277, 281, 282,
	283, 284, 492, 493, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 494, 288, 289, 0, 290, 0,
	291, 0, 0, 0, 292, 293, 0, 294, 495, 0,
	496, 295, 0, 296, 297, 298, 299, 497, 498, 499,
	351, 0, 300, 301, 0, 302, 303, 305, 0, 0,
	0, 304, 306, 313, 0, 0, 307, 500, 309, 308,
	310, 311, 312, 501, 0, 502, 0, 314, 0, 503,
	0, 315, 316, 317, 0, 318, 319, 0, 0, 320,
	321, 322, 323, 324, 0, 326, 325, 0, 327, 504,
	0, 328, 329, 0, 0, 330, 331, 0, 0, 332,
	333, 334, 0, 335, 336, 338, 340, 337, 339, 341,
	343, 344, 342, 0, 345, 346, 348, 0, 347, 0,
	0, 0, 349, 0, 505, 350, 506, 352, 353, 0,
	354, 355, 356, 0, 0, 358, 359, 2451, 0, 0,
	361, 362, 507, 0, 363, 0, 508, 364, 357, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 509,
	374, 510, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 511, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 392, 393, 394, 391, 395, 396, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 512, 404,
	0, 405, 409, 410, 411, 412, 413, 414, 415, 0,
	421, 422, 416, 418, 419, 420, 417, 423, 424, 425,
	0, 426, 406, 407, 427, 428, 0, 429, 430, 513,
	431, 432, 0, 433, 434, 435, 436, 408, 437, 441,
	442, 438, 439, 440, 514, 0, 444, 445, 443, 0,
	446, 447, 448, 449, 450, 279, 451, 0, 452, 515,
	516, 517, 518, 0, 459, 0, 453, 454, 519, 455,
	520, 0, 456, 457, 458, 0, 460, 461, 0, 0,
	462, 463, 464, 465, 466, 468, 0, 469, 0, 467,
	470, 471, 472, 521, 522, 523, 213, 474, 473, 524,
	0, 0, 0, 0, 475, 476, 525, 477, 478, 479,
	0, 0, 0, 219, 220, 221, 222, 223, 1935, 224,
	0, 0, 0, 0, 0, 480, 0, 0, 0, 0,
	225, 227, 226, 228, 229, 481, 482, 230, 483, 233,
	231, 232, 484, 0, 234, 235, 236, 237, 238, 239,
	0, 0, 240, 485, 486, 487, 0, 241, 488, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 0, 249,
	250, 251, 248, 0, 252, 0, 253, 254, 255, 0,
	0, 256, 257, 0, 0, 0, 0, 0, 0, 0,
	258, 259, 260, 261, 262, 263, 489, 490, 0, 264,
	0, 266, 265, 0, 267, 0, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 274, 491, 275, 276,
	278, 280, 277, 281, 282, 283, 284, 492, 493, 0,
	0, 0, 0, 0, 0, 0, 285, 286, 287, 494,
	288, 289, 0, 290, 0, 291, 0, 0, 0, 292,
	293, 0, 294, 495, 0, 496, 295, 0, 296, 297,
	298, 299, 497, 498, 499, 351, 0, 300, 301, 0,
	302, 303, 305, 0, 0, 0, 304, 306, 313, 0,
	0, 307, 500, 309, 308, 310, 311, 312, 501, 0,
	502, 0, 314, 0, 503, 0, 315, 316, 317, 0,
	318, 319, 0, 0, 320, 321, 322, 323, 324, 0,
	326, 325, 0, 327, 504, 0, 328, 329, 0, 0,
	330, 331, 0, 0, 332, 333, 334, 0, 335, 336,
	338, 340, 337, 339, 341, 343, 344, 342, 0, 345,
	346, 348, 0, 347, 0, 0, 0, 349, 0, 505,
	350, 506, 352, 353, 0, 354, 355, 356, 0, 0,
	358, 359, 360, 0, 0, 361, 362, 507, 0, 363,
	0, 508, 364, 357, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 509, 374, 510, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 511, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 392, 393,
	394, 391, 395, 396, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 512, 404, 0, 405, 409, 410, 411,
	412, 413, 414, 415, 0, 421, 422, 416, 418, 419,
	420, 417, 423, 424, 425, 0, 426, 406, 407, 427,
	428, 0, 429, 430, 513, 431, 432, 0, 433, 434,
	435, 436, 408, 437, 441, 442, 438, 439, 440, 514,
	0, 444, 445, 443, 0, 446, 447, 448, 449, 450,
	279, 451, 0, 452, 515, 516, 517, 518, 0, 459,
	0, 453, 454, 519, 455, 520, 0, 456, 457, 458,
	0, 460, 461, 0, 0, 462, 463, 464, 465, 466,
	468, 0, 469, 0, 467, 470, 471, 472, 521, 522,
	523, 0, 474, 473, 524, 1925, 0, 213, 0, 475,
	476, 525, 477, 478, 479, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 221, 222, 223, 0,
	224, 0, 0, 0, 0, 0, 480, 0, 0, 0,
	0, 225, 227, 226, 228, 229, 481, 482, 230, 483,
	233, 231, 232, 484, 0, 234, 235, 236, 237, 238,
	239, 0, 0, 240, 485, 486, 487, 0, 241, 488,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 0,
	249, 250, 251, 248, 0, 252, 0, 253, 254, 255,
	0, 0, 256, 257, 0, 0, 0, 0, 0, 0,
	0, 258, 259, 260, 261, 262, 263, 489, 490, 0,
	264, 0, 266, 265, 0, 267, 0, 0, 268, 269,
	270, 0, 271, 0, 272, 273, 0, 274, 491, 275,
	276, 278, 280, 277, 281, 282, 283, 284, 492, 493,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	494, 288, 289, 0, 290, 0, 291, 0, 0, 0,
	292, 293, 0, 294, 495, 0, 496, 295, 0, 296,
	297, 298, 299, 497, 498, 499, 351, 0, 300, 301,
	0, 302, 303, 305, 0, 0, 0, 304, 306, 313,
	0, 0, 307, 500, 309, 308, 310, 311, 312, 501,
	0, 502, 0, 314, 0, 503, 0, 315, 316, 317,
	0, 318, 319, 0, 0, 320, 321, 322, 323, 324,
	0, 326, 325, 0, 327, 504, 0, 328, 329, 0,
	0, 330, 331, 0, 0, 332, 333, 334, 0, 335,
	336, 338, 340, 337, 339, 341, 343, 344, 342, 0,
	345, 346, 348, 0, 347, 0, 0, 0, 349, 0,
	505, 350, 506, 352, 353, 0, 354, 355, 356, 0,
	0, 358, 359, 360, 0, 0, 361, 362, 507, 0,
	363, 0, 508, 364, 357, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 509, 374, 510, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 511,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 392,
	393, 394, 391, 395, 396, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 512, 404, 0, 405, 409, 410,
	411, 412, 413, 414, 415, 0, 421, 422, 416, 418,
	419, 420, 417, 423, 424, 425, 0, 426, 406, 407,
	427, 428, 0, 429, 430, 513, 431, 432, 0, 433,
	434, 435, 436, 408, 437, 441, 442, 438, 439, 440,
	514, 0, 444, 445, 443, 0, 446, 447, 448, 449,
	450, 279, 451, 0, 452, 515, 516, 517, 518, 0,
	459, 0, 453, 454, 519, 455, 520, 0, 456, 457,
	458, 0, 460, 461, 0, 0, 462, 463, 464, 465,
	466, 468, 0, 469, 0, 467, 470, 471, 472, 521,
	522, 523, 0, 474, 473, 524, 574, 0, 213, 0,
	475, 476, 525, 477, 478, 479, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 220, 221, 222, 223,
	0, 224, 0, 0, 0, 0, 0, 480, 0, 0,
	0, 0, 225, 1055, 226, 228, 229, 481, 482, 230,
	483, 233, 231, 232, 484, 0, 234, 235, 236, 237,
	238, 239, 0, 0, 240, 485, 486, 1053, 0, 241,
	488, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	0, 249, 250, 251, 248, 0, 252, 0, 253, 254,
	255, 0, 0, 256, 257, 0, 0, 0, 0, 0,
	0, 0, 258, 259, 260, 261, 262, 263, 489, 490,
	0, 264, 0, 266, 265, 0, 267, 0, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 274, 491,
	275, 276, 278, 280, 277, 281, 282, 283, 284, 492,
	493, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	287, 494, 288, 289, 0, 290, 0, 291, 0, 0,
	0, 292, 293, 0, 294, 495, 0, 496, 295, 0,
	296, 297, 298, 299, 497, 498, 499, 351, 0, 300,
	301, 0, 302, 303, 305, 0, 0, 0, 304, 306,
	313, 0, 0, 307, 500, 309, 308, 310, 311, 312,
	501, 0, 502, 0, 314, 0, 503, 0, 315, 316,
	317, 0, 318, 319, 0, 0, 320, 321, 322, 323,
	324, 0, 326, 325, 0, 327, 504, 0, 328, 329,
	0, 0, 330, 331, 0, 0, 332, 333, 334, 0,
	335, 336, 338, 340, 337, 339, 341, 343, 344, 575,
	0, 345, 346, 348, 0, 347, 0, 0, 0, 349,
	0, 505, 350, 506, 352, 353, 0, 354, 355, 356,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 507,
	0, 363, 0, 508, 364, 357, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 509, 374, 510, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	511, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	392, 393, 394, 391, 395, 396, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 512, 404, 0, 405, 409,
	410, 571, 412, 413, 414, 415, 0, 421, 422, 416,
	418, 419, 420, 417, 423, 1056, 425, 0, 426, 406,
	407, 427, 428, 0, 429, 430, 513, 431, 432, 0,
	433, 434, 435, 436, 408, 437, 441, 442, 438, 439,
	440, 514, 0, 444, 445, 443, 0, 446, 447, 448,
	449, 450, 279, 451, 0, 452, 570, 516, 517, 518,
	0, 459, 0, 453, 454, 519, 455, 520, 0, 456,
	457, 458, 0, 460, 461, 0, 0, 462, 463, 464,
	465, 466, 468, 0, 469, 0, 467, 470, 471, 472,
	521, 522, 523, 0, 474, 473, 524, 1869, 0, 213,
	0, 475, 476, 525, 477, 478, 479, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 221, 222,
	223, 0, 224, 0, 0, 0, 0, 0, 480, 0,
	0, 0, 0, 225, 227, 226, 228, 229, 481, 482,
	230, 483, 233, 231, 232, 484, 0, 234, 235, 236,
	237, 238, 239, 0, 0, 240, 485, 486, 487, 0,
	241, 488, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 0, 249, 250, 251, 248, 0, 252, 0, 253,
	254, 255, 0, 0, 256, 257, 0, 0, 0, 0,
	0, 0, 0, 258, 259, 260, 261, 262, 263, 489,
	490, 0, 264, 0, 266, 265, 0, 267, 0, 0,
	268, 269, 270, 0, 271, 0, 272, 273, 0, 274,
	491, 275, 276, 278, 280, 277, 281, 282, 283, 284,
	492, 493, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 494, 288, 289, 0, 290, 0, 291, 0,
	0, 0, 292, 293, 0, 294, 495, 0, 496, 295,
	0, 296, 297, 298, 299, 1868, 498, 499, 351, 0,
	300, 301, 0, 302, 303, 305, 0, 0, 0, 304,
	306, 313, 0, 0, 307, 500, 309, 308, 310, 311,
	312, 501, 0, 502, 0, 314, 0, 503, 0, 315,
	316, 317, 0, 318, 319, 0, 0, 320, 321, 322,
	323, 324, 0, 326, 325, 0, 327, 504, 0, 328,
	329, 0, 0, 330, 331, 0, 0, 332, 333, 334,
	0, 335, 336, 338, 340, 337, 339, 341, 343, 344,
	342, 0, 345, 346, 348, 0, 347, 0, 0, 0,
	349, 0, 505, 350, 506, 352, 353, 0, 354, 355,
	356, 0, 0, 358, 359, 360, 0, 0, 361, 362,
	507, 0, 363, 0, 508, 364, 357, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 509, 374, 510,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 511, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 392, 393, 394, 391, 395, 396, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 512, 404, 0, 405,
	409, 410, 411, 412, 413, 414, 415, 0, 421, 422,
	416, 418, 419, 420, 417, 423, 424, 425, 0, 426,
	406, 407, 427, 428, 0, 429, 430, 513, 431, 432,
	0, 433, 434, 435, 436, 408, 437, 441, 442, 438,
	439, 440, 514, 0, 444, 445, 443, 0, 446, 447,
	448, 449, 450, 279, 451, 0, 452, 515, 516, 517,
	518, 0, 459, 0, 453, 454, 519, 455, 520, 0,
	456, 457, 458, 0, 460, 461, 0, 0, 462, 463,
	464, 465, 466, 468, 0, 469, 0, 467, 470, 471,
	472, 521, 522, 523, 0, 474, 473, 524, 574, 0,
	213, 0, 475, 476, 525, 477, 478, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 480,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	482, 230, 483, 233, 231, 232, 484, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 485, 486, 487,
	0, 564, 488, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 0, 256, 257, 0, 0, 0,
	0, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	489, 490, 0, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	274, 491, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 492, 493, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 494, 288, 289, 0, 290, 0, 291,
	0, 0, 0, 292, 293, 0, 294, 495, 0, 496,
	295, 0, 296, 297, 298, 299, 497, 498, 499, 351,
	0, 300, 301, 0, 302, 303, 305, 0, 0, 0,
	304, 306, 313, 0, 0, 307, 500, 309, 308, 310,
	311, 312, 501, 0, 502, 0, 314, 0, 503, 0,
	315, 316, 317, 0, 318, 319, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 504, 0,
	328, 329, 0, 0, 330, 331, 0, 0, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	344, 575, 0, 345, 346, 348, 0, 347, 0, 0,
	0, 349, 0, 505, 350, 506, 352, 353, 0, 354,
	355, 356, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 0, 363, 0, 508, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 509, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 511, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 512, 404, 0,
	405, 409, 410, 571, 412, 413, 414, 415, 0, 421,
	422, 416, 418, 419, 420, 417, 423, 1341, 425, 0,
	426, 406, 407, 427, 428, 0, 429, 430, 513, 431,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 442,
	438, 439, 440, 514, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 451, 0, 452, 570, 516,
	517, 518, 0, 459, 0, 453, 454, 519, 455, 520,
	0, 456, 457, 458, 0, 460, 461, 0, 0, 462,
	463, 464, 465, 466, 468, 0, 469, 0, 467, 470,
	471, 472, 521, 522, 523, 0, 474, 473, 524, 1324,
	0, 213, 0, 475, 476, 525, 477, 478, 479, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	221, 222, 223, 0, 224, 0, 0, 0, 0, 0,
	480, 0, 0, 0, 0, 225, 227, 226, 228, 229,
	481, 482, 230, 483, 233, 231, 232, 484, 0, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 485, 486,
	487, 0, 241, 488, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 252,
	0, 253, 254, 255, 0, 0, 256, 257, 0, 0,
	0, 0, 0, 0, 0, 258, 259, 260, 261, 262,
	263, 489, 490, 0, 264, 0, 266, 265, 0, 267,
	0, 0, 268, 269, 270, 0, 271, 0, 272, 273,
	0, 274, 491, 275, 276, 278, 280, 277, 281, 282,
	283, 284, 492, 493, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 494, 288, 289, 0, 290, 0,
	291, 0, 0, 0, 292, 293, 0, 294, 495, 0,
	496, 295, 0, 296, 297, 298, 299, 1323, 498, 499,
	351, 0, 300, 301, 0, 302, 303, 305, 0, 0,
	0, 304, 306, 313, 0, 0, 307, 500, 309, 308,
	310, 311, 312, 501, 0, 502, 0, 314, 0, 503,
	0, 315, 316, 317, 0, 318, 319, 0, 0, 320,
	321, 322, 323, 324, 0, 326, 325, 0, 327, 504,
	0, 328, 329, 0, 0, 330, 331, 0, 0, 332,
	333, 334, 0, 335, 336, 338, 340, 337, 339, 341,
	343, 344, 342, 0, 345, 346, 348, 0, 347, 0,
	0, 0, 349, 0, 505, 350, 506, 352, 353, 0,
	354, 355, 356, 0, 0, 358, 359, 360, 0, 0,
	361, 362, 507, 0, 363, 0, 508, 364, 357, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 509,
	374, 510, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 511, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 392, 393, 394, 391, 395, 396, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 512, 404,
	0, 405, 409, 410, 411, 412, 413, 414, 415, 0,
	421, 422, 416, 418, 419, 420, 417, 423, 424, 425,
	0, 426, 406, 407, 427, 428, 0, 429, 430, 513,
	431, 432, 0, 433, 434, 435, 436, 408, 437, 441,
	442, 438, 439, 440, 514, 0, 444, 445, 443, 0,
	446, 447, 448, 449, 450, 279, 451, 0, 452, 515,
	516, 517, 518, 0, 459, 0, 453, 454, 519, 455,
	520, 0, 456, 457, 458, 0, 460, 461, 0, 0,
	462, 463, 464, 465, 466, 468, 0, 469, 0, 467,
	470, 471, 472, 521, 522, 523, 0, 474, 473, 524,
	1271, 0, 213, 0, 475, 476, 525, 477, 478, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 480, 0, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 482, 230, 483, 233, 231, 232, 484, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 485,
	486, 487, 0, 241, 488, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 0, 256, 257, 0,
	0, 0, 0, 0, 0, 0, 258, 259, 260, 261,
	262, 263, 489, 490, 0, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 274, 491, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 492, 493, 0, 0, 0, 0, 0,
	0, 0, 285, 286, 287, 494, 288, 289, 0, 290,
	0, 291, 0, 0, 0, 292, 293, 0, 294, 495,
	0, 496, 295, 0, 296, 297, 298, 299, 1270, 498,
	499, 351, 0, 300, 301, 0, 302, 303, 305, 0,
	0, 0, 304, 306, 313, 0, 0, 307, 500, 309,
	308, 310, 311, 312, 501, 0, 502, 0, 314, 0,
	503, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	504, 0, 328, 329, 0, 0, 330, 331, 0, 0,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 344, 342, 0, 345, 346, 348, 0, 347,
	0, 0, 0, 349, 0, 505, 350, 506, 352, 353,
	0, 354, 355, 356, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 0, 363, 0, 508, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	509, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 511, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 512,
	404, 0, 405, 409, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 416, 418, 419, 420, 417, 423, 424,
	425, 0, 426, 406, 407, 427, 428, 0, 429, 430,
	513, 431, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 442, 438, 439, 440, 514, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 451, 0, 452,
	515, 516, 517, 518, 0, 459, 0, 453, 454, 519,
	455, 520, 0, 456, 457, 458, 0, 460, 461, 0,
	0, 462, 463, 464, 465, 466, 468, 0, 469, 0,
	467, 470, 471, 472, 521, 522, 523, 0, 474, 473,
	524, 1252, 0, 213, 0, 475, 476, 525, 477, 478,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 480, 0, 0, 0, 0, 225, 227, 226,
	228, 229, 481, 482, 230, 483, 233, 231, 232, 484,
	0, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	485, 486, 487, 0, 241, 488, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 0, 256, 257,
	0, 0, 0, 0, 0, 0, 0, 258, 259, 260,
	261, 262, 263, 489, 490, 0, 264, 0, 266, 265,
	0, 267, 0, 0, 268, 269, 270, 0, 271, 0,
	272, 273, 0, 274, 491, 275, 276, 278, 280, 277,
	281, 282, 283, 284, 492, 493, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 494, 288, 289, 0,
	290, 0, 291, 0, 0, 0, 292, 293, 0, 294,
	495, 0, 496, 295, 0, 296, 297, 298, 299, 497,
	498, 499, 351, 0, 300, 301, 0, 302, 303, 305,
	0, 0, 0, 304, 306, 313, 0, 0, 307, 500,
	309, 308, 310, 311, 312, 501, 0, 502, 0, 314,
	0, 503, 0, 315, 316, 317, 0, 318, 319, 0,
	0, 320, 321, 322, 323, 324, 0, 326, 325, 0,
	327, 504, 0, 328, 329, 0, 0, 330, 331, 0,
	0, 332, 333, 334, 0, 335, 336, 338, 340, 337,
	339, 341, 343, 344, 342, 0, 345, 346, 348, 0,
	347, 0, 0, 0, 349, 0, 505, 350, 506, 352,
	353, 0, 354, 355, 356, 0, 0, 358, 359, 360,
	0, 0, 361, 362, 507, 0, 363, 0, 508, 364,
	357, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 509, 374, 510, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 511, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 392, 393, 394, 391, 395,
	396, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	512, 404, 0, 405, 409, 410, 411, 412, 413, 414,
	415, 0, 421, 422, 416, 418, 419, 420, 417, 423,
	424, 425, 0, 426, 406, 407, 427, 428, 0, 429,
	430, 513, 431, 432, 0, 433, 434, 435, 436, 408,
	437, 441, 442, 438, 439, 440, 514, 0, 444, 445,
	443, 0, 446, 447, 448, 449, 450, 279, 451, 0,
	452, 515, 516, 517, 518, 0, 459, 0, 453, 454,
	519, 455, 520, 0, 456, 457, 458, 0, 460, 461,
	0, 0, 462, 463, 464, 465, 466, 468, 0, 469,
	0, 467, 470, 471, 472, 521, 522, 523, 0, 474,
	473, 524, 1189, 0, 213, 0, 475, 476, 525, 477,
	478, 479, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 480, 0, 0, 0, 0, 225, 227,
	226, 228, 229, 481, 482, 230, 483, 233, 231, 232,
	484, 0, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 485, 486, 487, 0, 241, 488, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 0, 256,
	257, 0, 0, 0, 0, 0, 0, 0, 258, 259,
	260, 261, 262, 263, 489, 490, 0, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 274, 491, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 492, 493, 0, 0, 0,
	0, 0, 0, 0, 285, 286, 287, 494, 288, 289,
	0, 290, 0, 291, 0, 0, 0, 292, 293, 0,
	294, 495, 0, 496, 295, 0, 296, 297, 298, 299,
	497, 498, 499, 351, 0, 300, 301, 0, 302, 303,
	305, 0, 0, 0, 304, 306, 313, 0, 0, 307,
	500, 309, 308, 310, 311, 312, 501, 0, 502, 0,
	314, 0, 503, 0, 315, 316, 317, 0, 318, 319,
	0, 0, 320, 321, 322, 323, 324, 0, 326, 325,
	0, 327, 504, 0, 328, 329, 0, 0, 330, 331,
	0, 0, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 344, 342, 0, 345, 346, 348,
	0, 347, 0, 0, 0, 349, 0, 505, 350, 506,
	352, 353, 0, 354, 355, 356, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 507, 0, 363, 0, 508,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 509, 374, 510, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 511, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 512, 404, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 0, 421, 422, 416, 418, 419, 420, 417,
	423, 424, 425, 0, 426, 406, 407, 427, 428, 0,
	429, 430, 513, 431, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 442, 438, 439, 440, 514, 0, 444,
	445, 443, 0, 446, 447, 448, 449, 450, 279, 451,
	0, 452, 515, 516, 517, 518, 0, 459, 0, 453,
	454, 519, 455, 520, 0, 456, 457, 458, 0, 460,
	461, 0, 0, 462, 463, 464, 465, 466, 468, 0,
	469, 0, 467, 470, 471, 472, 521, 522, 523, 0,
	474, 473, 524, 574, 0, 213, 0, 475, 476, 525,
	477, 478, 479, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 225,
	1055, 226, 228, 229, 481, 482, 230, 483, 233, 231,
	232, 484, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 485, 486, 1053, 0, 241, 488, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 0,
	256, 257, 0, 0, 0, 0, 0, 0, 0, 258,
	259, 260, 261, 262, 263, 489, 490, 0, 264, 0,
	266, 265, 0, 267, 0, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 274, 491, 275, 276, 278,
	280, 277, 281, 282, 283, 284, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 494, 288,
	289, 0, 290, 0, 291, 0, 0, 0, 292, 293,
	0, 294, 495, 0, 496, 295, 0, 296, 297, 298,
	299, 497, 498, 499, 351, 0, 300, 301, 0, 302,
	303, 305, 0, 0, 0, 304, 306, 313, 0, 0,
	307, 500, 309, 308, 310, 311, 312, 501, 0, 502,
	0, 314, 0, 503, 0, 315, 316, 317, 0, 318,
	319, 0, 0, 320, 321, 322, 323, 324, 0, 326,
	325, 0, 327, 504, 0, 328, 329, 0, 0, 330,
	331, 0, 0, 332, 333, 334, 0, 335, 336, 338,
	340, 337, 339, 341, 343, 344, 575, 0, 345, 346,
	348, 0, 347, 0, 0, 0, 349, 0, 505, 350,
	506, 352, 353, 0, 354, 355, 356, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 507, 0, 363, 0,
	508, 364, 357, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 509, 374, 510, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 511, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 392, 393, 394,
	391, 395, 396, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 512, 404, 0, 405, 409, 410, 571, 412,
	413, 414, 415, 0, 421, 422, 416, 418, 419, 420,
	417, 423, 1056, 425, 0, 426, 406, 407, 427, 428,
	0, 429, 430, 513, 431, 432, 0, 433, 434, 435,
	436, 408, 437, 441, 442, 438, 439, 440, 514, 0,
	444, 445, 443, 0, 446, 447, 448, 449, 450, 279,
	451, 0, 452, 570, 516, 517, 518, 0, 459, 0,
	453, 1054, 519, 455, 520, 0, 456, 457, 458, 0,
	460, 461, 0, 0, 462, 463, 464, 465, 466, 468,
	0, 469, 0, 467, 470, 471, 472, 521, 522, 523,
	213, 474, 473, 524, 0, 0, 0, 0, 475, 476,
	525, 477, 478, 479, 0, 0, 0, 219, 220, 221,
	222, 223, 1037, 224, 0, 0, 0, 0, 0, 480,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	482, 230, 483, 233, 231, 232, 484, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 485, 486, 487,
	0, 241, 488, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 0, 256, 257, 0, 0, 0,
	0, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	489, 490, 0, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	274, 491, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 492, 493, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 494, 288, 289, 0, 290, 0, 291,
	0, 0, 0, 292, 293, 0, 294, 495, 0, 496,
	295, 0, 296, 297, 298, 299, 497, 498, 499, 351,
	0, 300, 301, 0, 302, 303, 305, 0, 0, 0,
	304, 306, 313, 0, 0, 307, 500, 309, 308, 310,
	311, 312, 501, 0, 502, 0, 314, 0, 503, 0,
	315, 316, 317, 0, 318, 319, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 504, 0,
	328, 329, 0, 0, 330, 331, 0, 0, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	344, 342, 0, 345, 346, 348, 0, 347, 0, 0,
	0, 349, 0, 505, 350, 506, 352, 353, 0, 354,
	355, 356, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 0, 363, 0, 508, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 509, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 511, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 512, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 416, 418, 419, 420, 417, 423, 424, 425, 0,
	426, 406, 407, 427, 428, 0, 429, 430, 513, 431,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 442,
	438, 439, 440, 514, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 451, 0, 452, 515, 516,
	517, 518, 0, 459, 0, 453, 454, 519, 455, 520,
	0, 456, 457, 458, 0, 460, 461, 0, 0, 462,
	463, 464, 465, 466, 468, 0, 469, 0, 467, 470,
	471, 472, 521, 522, 523, 0, 474, 473, 524, 574,
	0, 213, 0, 475, 476, 525, 477, 478, 479, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	221, 222, 223, 0, 224, 0, 0, 0, 0, 0,
	480, 0, 0, 0, 0, 225, 227, 226, 228, 229,
	481, 482, 230, 483, 233, 231, 232, 484, 0, 234,
	235, 236, 237, 238, 239, 0, 0, 240, 485, 486,
	487, 0, 564, 488, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 0, 249, 250, 251, 248, 0, 562,
	0, 253, 254, 255, 0, 0, 256, 257, 0, 0,
	0, 0, 0, 0, 0, 258, 259, 260, 261, 262,
	263, 489, 490, 0, 264, 0, 266, 265, 0, 267,
	0, 0, 268, 269, 270, 0, 271, 0, 272, 273,
	0, 274, 491, 275, 276, 278, 280, 277, 281, 282,
	283, 284, 492, 493, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 494, 288, 289, 0, 290, 0,
	291, 0, 0, 0, 292, 293, 0, 294, 495, 0,
	496, 295, 0, 296, 297, 298, 299, 497, 498, 499,
	351, 0, 300, 301, 0, 302, 303, 305, 0, 0,
	0, 304, 306, 313, 0, 0, 307, 500, 309, 308,
	310, 311, 312, 501, 0, 502, 0, 314, 0, 503,
	0, 315, 316, 317, 0, 318, 319, 0, 0, 320,
	321, 322, 323, 324, 0, 326, 325, 0, 327, 504,
	0, 328, 329, 0, 0, 330, 563, 0, 0, 332,
	333, 334, 0, 335, 336, 338, 340, 337, 339, 341,
	343, 344, 575, 0, 345, 346, 348, 0, 347, 0,
	0, 0, 349, 0, 505, 350, 506, 352, 353, 0,
	354, 355, 356, 0, 0, 358, 359, 360, 0, 0,
	361, 362, 507, 0, 363, 0, 508, 364, 357, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 509,
	374, 510, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 511, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 392, 393, 394, 391, 395, 396, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 565, 404,
	0, 405, 409, 410, 571, 412, 413, 414, 415, 0,
	421, 422, 416, 418, 419, 420, 417, 423, 566, 425,
	0, 426, 406, 407, 427, 428, 0, 429, 430, 513,
	431, 432, 0, 433, 434, 435, 436, 408, 437, 441,
	442, 438, 439, 440, 514, 0, 444, 445, 443, 0,
	446, 447, 448, 449, 450, 279, 451, 0, 452, 570,
	516, 517, 518, 0, 459, 0, 453, 568, 519, 455,
	520, 0, 456, 457, 458, 0, 460, 461, 0, 0,
	462, 463, 464, 465, 466, 468, 0, 469, 0, 467,
	470, 471, 472, 521, 522, 523, 0, 474, 473, 524,
	558, 0, 213, 0, 475, 476, 525, 477, 478, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 221, 222, 223, 0, 224, 0, 0, 0, 0,
	0, 480, 0, 0, 0, 0, 225, 227, 226, 228,
	229, 481, 482, 230, 483, 233, 231, 232, 484, 0,
	234, 235, 236, 237, 238, 239, 0, 0, 240, 485,
	486, 487, 0, 241, 488, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 0, 249, 250, 251, 248, 0,
	252, 0, 253, 254, 255, 0, 0, 256, 257, 0,
	0, 0, 0, 0, 0, 0, 258, 259, 260, 261,
	262, 263, 489, 490, 0, 264, 0, 266, 265, 0,
	267, 0, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 274, 491, 275, 276, 278, 280, 277, 281,
	282, 283, 284, 492, 493, 0, 0, 0, 0, 0,
	0, 0, 285, 286, 287, 494, 288, 289, 0, 290,
	0, 291, 0, 0, 0, 292, 293, 0, 294, 495,
	0, 496, 295, 0, 296, 297, 298, 299, 497, 498,
	499, 351, 0, 300, 301, 0, 302, 303, 305, 0,
	0, 0, 304, 306, 313, 0, 0, 307, 500, 309,
	308, 310, 311, 312, 501, 0, 502, 0, 314, 0,
	503, 0, 315, 316, 317, 0, 318, 319, 0, 0,
	320, 321, 322, 323, 324, 0, 326, 325, 0, 327,
	504, 0, 328, 329, 0, 0, 330, 331, 0, 0,
	332, 333, 334, 0, 335, 336, 338, 340, 337, 339,
	341, 343, 344, 342, 0, 345, 346, 348, 0, 347,
	0, 0, 0, 349, 0, 505, 350, 506, 352, 353,
	0, 354, 355, 356, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 507, 0, 363, 0, 508, 364, 357,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	509, 374, 510, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 511, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 392, 393, 394, 391, 395, 396,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 512,
	404, 0, 405, 559, 410, 411, 412, 413, 414, 415,
	0, 421, 422, 416, 418, 419, 420, 417, 423, 424,
	425, 0, 426, 406, 407, 427, 428, 0, 429, 430,
	513, 431, 432, 0, 433, 434, 435, 436, 408, 437,
	441, 442, 438, 439, 440, 514, 0, 444, 445, 443,
	0, 446, 447, 448, 449, 450, 279, 451, 0, 452,
	515, 516, 517, 518, 0, 459, 0, 453, 454, 519,
	455, 520, 0, 456, 457, 458, 0, 460, 461, 0,
	0, 462, 463, 464, 465, 466, 468, 0, 469, 0,
	467, 470, 471, 472, 521, 522, 523, 0, 474, 473,
	524, 556, 0, 213, 0, 475, 476, 525, 477, 478,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 221, 222, 223, 0, 224, 0, 0, 0,
	0, 0, 480, 0, 0, 0, 0, 225, 227, 226,
	228, 229, 481, 482, 230, 483, 233, 231, 232, 484,
	0, 234, 235, 236, 237, 238, 239, 0, 0, 240,
	485, 486, 487, 0, 241, 488, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 0, 249, 250, 251, 248,
	0, 252, 0, 253, 254, 255, 0, 0, 256, 257,
	0, 0, 0, 0, 0, 0, 0, 258, 259, 260,
	261, 262, 263, 489, 490, 0, 264, 0, 266, 265,
	0, 267, 0, 0, 268, 269, 270, 0, 271, 0,
	272, 273, 0, 274, 491, 275, 276, 278, 280, 277,
	281, 282, 283, 284, 492, 493, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 494, 288, 289, 0,
	290, 0, 291, 0, 0, 0, 292, 293, 0, 294,
	495, 0, 496, 295, 0, 296, 297, 298, 299, 497,
	498, 499, 351, 0, 300, 301, 0, 302, 303, 305,
	0, 0, 0, 304, 306, 313, 0, 0, 307, 500,
	309, 308, 310, 311, 312, 501, 0, 502, 0, 314,
	0, 503, 0, 315, 316, 317, 0, 318, 319, 0,
	0, 320, 321, 322, 323, 324, 0, 326, 325, 0,
	327, 504, 0, 328, 329, 0, 0, 330, 331, 0,
	0, 332, 333, 334, 0, 335, 336, 338, 340, 337,
	339, 341, 343, 344, 342, 0, 345, 346, 348, 0,
	347, 0, 0, 0, 349, 0, 505, 350, 506, 352,
	353, 0, 354, 355, 356, 0, 0, 358, 359, 360,
	0, 0, 361, 362, 507, 0, 363, 0, 508, 364,
	357, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 509, 374, 510, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 511, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 392, 393, 394, 391, 395,
	396, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	512, 404, 0, 405, 409, 410, 411, 412, 413, 414,
	415, 0, 421, 422, 416, 418, 419, 420, 417, 423,
	424, 425, 0, 426, 406, 407, 427, 428, 0, 429,
	430, 513, 431, 432, 0, 433, 434, 435, 436, 408,
	437, 441, 442, 438, 439, 440, 514, 0, 444, 445,
	443, 0, 446, 447, 448, 449, 450, 279, 451, 0,
	452, 515, 516, 517, 518, 0, 459, 0, 453, 454,
	519, 455, 520, 0, 456, 457, 458, 0, 460, 461,
	0, 0, 462, 463, 464, 465, 466, 468, 0, 469,
	0, 467, 470, 471, 472, 521, 522, 523, 0, 474,
	473, 524, 550, 0, 213, 0, 475, 476, 525, 477,
	478, 479, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 220, 221, 222, 223, 0, 224, 0, 0,
	0, 0, 0, 480, 0, 0, 0, 0, 225, 227,
	226, 228, 229, 481, 482, 230, 483, 233, 231, 232,
	484, 0, 234, 235, 236, 237, 238, 239, 0, 0,
	240, 485, 486, 487, 0, 241, 488, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 0, 249, 250, 251,
	248, 0, 252, 0, 253, 254, 255, 0, 0, 256,
	257, 0, 0, 0, 0, 0, 0, 0, 258, 259,
	260, 261, 262, 263, 489, 490, 0, 264, 0, 266,
	265, 0, 267, 0, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 274, 491, 275, 276, 278, 280,
	277, 281, 282, 283, 284, 492, 493, 0, 0, 0,
	0, 0, 0, 0, 285, 286, 287, 494, 288, 289,
	0, 290, 0, 291, 0, 0, 0, 292, 293, 0,
	294, 495, 0, 496, 295, 0, 296, 297, 298, 299,
	497, 498, 499, 351, 0, 300, 301, 0, 302, 303,
	305, 0, 0, 0, 304, 306, 313, 0, 0, 307,
	500, 309, 308, 310, 311, 312, 501, 0, 502, 0,
	314, 0, 503, 0, 315, 316, 317, 0, 318, 319,
	0, 0, 320, 321, 322, 323, 324, 0, 326, 325,
	0, 327, 504, 0, 328, 329, 0, 0, 330, 331,
	0, 0, 332, 333, 334, 0, 335, 336, 338, 340,
	337, 339, 341, 343, 344, 342, 0, 345, 346, 348,
	0, 347, 0, 0, 0, 349, 0, 505, 350, 506,
	352, 353, 0, 354, 355, 356, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 507, 0, 363, 0, 508,
	364, 357, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 509, 374, 510, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 511, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 392, 393, 394, 391,
	395, 396, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 512, 404, 0, 405, 409, 410, 411, 412, 413,
	414, 415, 0, 421, 422, 416, 418, 419, 420, 417,
	423, 424, 425, 0, 426, 406, 407, 427, 428, 0,
	429, 430, 513, 431, 432, 0, 433, 434, 435, 436,
	408, 437, 441, 442, 438, 439, 440, 514, 0, 444,
	445, 443, 0, 446, 447, 448, 449, 450, 279, 451,
	0, 452, 515, 516, 517, 518, 0, 459, 0, 453,
	454, 519, 455, 520, 0, 456, 457, 458, 0, 460,
	461, 0, 0, 462, 463, 464, 465, 466, 468, 0,
	469, 0, 467, 470, 471, 472, 521, 522, 523, 0,
	474, 473, 524, 528, 0, 213, 0, 475, 476, 525,
	477, 478, 479, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 481, 482, 230, 483, 233, 231,
	232, 484, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 485, 486, 487, 0, 241, 488, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 0,
	256, 257, 0, 0, 0, 0, 0, 0, 0, 258,
	259, 260, 261, 262, 263, 489, 490, 0, 264, 0,
	266, 265, 0, 267, 0, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 274, 491, 275, 276, 278,
	280, 277, 281, 282, 283, 284, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 494, 288,
	289, 0, 290, 0, 291, 0, 0, 0, 292, 293,
	0, 294, 495, 0, 496, 295, 0, 296, 297, 298,
	299, 497, 498, 499, 351, 0, 300, 301, 0, 302,
	303, 305, 0, 0, 0, 304, 306, 313, 0, 0,
	307, 500, 309, 308, 310, 311, 312, 501, 0, 502,
	0, 314, 0, 503, 0, 315, 316, 317, 0, 318,
	319, 0, 0, 320, 321, 322, 323, 324, 0, 326,
	325, 0, 327, 504, 0, 328, 329, 0, 0, 330,
	331, 0, 0, 332, 333, 334, 0, 335, 336, 338,
	340, 337, 339, 341, 343, 344, 342, 0, 345, 346,
	348, 0, 347, 0, 0, 0, 349, 0, 505, 350,
	506, 352, 353, 0, 354, 355, 356, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 507, 0, 363, 0,
	508, 364, 357, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 509, 374, 510, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 511, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 392, 393, 394,
	391, 395, 396, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 512, 404, 0, 405, 409, 410, 411, 412,
	413, 414, 415, 0, 421, 422, 416, 418, 419, 420,
	417, 423, 424, 425, 0, 426, 406, 407, 427, 428,
	0, 429, 430, 513, 431, 432, 0, 433, 434, 435,
	436, 408, 437, 441, 442, 438, 439, 440, 514, 0,
	444, 445, 443, 0, 446, 447, 448, 449, 450, 279,
	451, 0, 452, 515, 516, 517, 518, 0, 459, 0,
	453, 454, 519, 455, 520, 0, 456, 457, 458, 0,
	460, 461, 0, 0, 462, 463, 464, 465, 466, 468,
	0, 469, 0, 467, 470, 471, 472, 521, 522, 523,
	213, 474, 473, 524, 0, 0, 0, 0, 475, 476,
	525, 477, 478, 479, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 480,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	482, 230, 483, 233, 231, 232, 484, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 485, 486, 487,
	0, 241, 488, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 0, 256, 257, 0, 0, 0,
	0, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	489, 490, 0, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	274, 491, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 492, 493, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 494, 288, 289, 0, 290, 0, 291,
	0, 0, 0, 292, 293, 0, 294, 495, 0, 496,
	295, 0, 296, 297, 298, 299, 497, 498, 499, 351,
	0, 300, 301, 0, 302, 303, 305, 0, 0, 0,
	304, 306, 313, 0, 0, 307, 500, 309, 308, 310,
	311, 312, 501, 0, 502, 0, 314, 0, 503, 0,
	315, 316, 317, 0, 318, 319, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 504, 0,
	328, 329, 0, 0, 330, 331, 0, 0, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	344, 342, 0, 345, 346, 348, 0, 347, 0, 0,
	0, 349, 0, 505, 350, 506, 352, 353, 0, 354,
	355, 356, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 0, 363, 0, 508, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 509, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 511, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 512, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 416, 418, 419, 420, 417, 423, 424, 425, 0,
	426, 406, 407, 427, 428, 0, 429, 430, 513, 431,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 442,
	438, 439, 440, 514, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 451, 0, 452, 515, 516,
	517, 518, 0, 459, 0, 453, 454, 519, 455, 520,
	0, 456, 457, 458, 0, 460, 461, 0, 0, 462,
	463, 464, 465, 466, 468, 0, 469, 0, 467, 470,
	471, 472, 521, 522, 523, 213, 474, 473, 524, 0,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 481, 482, 230, 483, 233, 231,
	232, 484, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 485, 486, 487, 0, 241, 488, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 0,
	256, 257, 0, 0, 0, 0, 0, 0, 0, 258,
	259, 260, 261, 262, 263, 489, 490, 0, 264, 0,
	266, 265, 0, 267, 0, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 274, 491, 275, 276, 278,
	280, 277, 281, 282, 283, 284, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 494, 288,
	289, 0, 290, 0, 291, 0, 0, 0, 292, 293,
	0, 294, 495, 0, 496, 295, 0, 296, 297, 298,
	299, 2765, 498, 499, 351, 0, 300, 301, 0, 302,
	303, 305, 0, 0, 0, 304, 306, 313, 0, 0,
	307, 500, 309, 308, 310, 311, 312, 501, 0, 502,
	0, 314, 0, 503, 0, 315, 316, 317, 0, 318,
	319, 0, 0, 320, 321, 322, 323, 324, 0, 326,
	325, 0, 327, 504, 0, 328, 329, 0, 0, 330,
	331, 0, 0, 332, 333, 334, 0, 335, 336, 338,
	340, 337, 339, 341, 343, 344, 342, 0, 345, 346,
	348, 0, 347, 0, 0, 0, 349, 0, 505, 350,
	506, 352, 353, 0, 354, 355, 356, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 507, 0, 363, 0,
	508, 364, 357, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 509, 374, 510, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 511, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 392, 393, 394,
	391, 395, 396, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 512, 404, 0, 405, 409, 410, 411, 412,
	413, 414, 415, 0, 421, 422, 416, 418, 419, 420,
	417, 423, 424, 425, 0, 426, 406, 407, 427, 428,
	0, 429, 430, 513, 431, 432, 0, 433, 434, 435,
	436, 408, 437, 441, 442, 438, 439, 440, 514, 0,
	444, 445, 443, 0, 446, 447, 448, 449, 450, 279,
	451, 0, 452, 515, 516, 517, 518, 0, 459, 0,
	453, 454, 519, 455, 520, 0, 456, 457, 458, 0,
	460, 461, 0, 0, 462, 463, 464, 465, 466, 468,
	0, 469, 0, 467, 470, 471, 472, 521, 522, 523,
	213, 474, 473, 524, 0, 0, 0, 0, 475, 476,
	525, 477, 478, 479, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 480,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	482, 230, 483, 233, 231, 232, 484, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 485, 486, 487,
	0, 241, 488, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 0, 256, 257, 0, 0, 0,
	0, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	489, 490, 0, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	274, 491, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 492, 493, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 494, 288, 289, 0, 290, 0, 291,
	0, 0, 0, 292, 293, 0, 294, 495, 0, 496,
	295, 0, 296, 297, 298, 299, 2763, 498, 499, 351,
	0, 300, 301, 0, 302, 303, 305, 0, 0, 0,
	304, 306, 313, 0, 0, 307, 500, 309, 308, 310,
	311, 312, 501, 0, 502, 0, 314, 0, 503, 0,
	315, 316, 317, 0, 318, 319, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 504, 0,
	328, 329, 0, 0, 330, 331, 0, 0, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	344, 342, 0, 345, 346, 348, 0, 347, 0, 0,
	0, 349, 0, 505, 350, 506, 352, 353, 0, 354,
	355, 356, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 0, 363, 0, 508, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 509, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 511, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 512, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 416, 418, 419, 420, 417, 423, 424, 425, 0,
	426, 406, 407, 427, 428, 0, 429, 430, 513, 431,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 442,
	438, 439, 440, 514, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 451, 0, 452, 515, 516,
	517, 518, 0, 459, 0, 453, 454, 519, 455, 520,
	0, 456, 457, 458, 0, 460, 461, 0, 0, 462,
	463, 464, 465, 466, 468, 0, 469, 0, 467, 470,
	471, 472, 521, 522, 523, 213, 474, 473, 524, 0,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 481, 482, 230, 483, 233, 231,
	232, 484, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 485, 486, 487, 0, 241, 488, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 0,
	256, 257, 0, 0, 0, 0, 0, 0, 0, 258,
	259, 260, 261, 262, 263, 489, 490, 0, 264, 0,
	266, 265, 0, 267, 0, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 274, 491, 275, 276, 278,
	280, 277, 281, 282, 283, 284, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 494, 288,
	289, 0, 290, 0, 291, 0, 0, 0, 292, 293,
	0, 294, 495, 0, 496, 295, 0, 296, 297, 298,
	299, 2750, 498, 499, 351, 0, 300, 301, 0, 302,
	303, 305, 0, 0, 0, 304, 306, 313, 0, 0,
	307, 500, 309, 308, 310, 311, 312, 501, 0, 502,
	0, 314, 0, 503, 0, 315, 316, 317, 0, 318,
	319, 0, 0, 320, 321, 322, 323, 324, 0, 326,
	325, 0, 327, 504, 0, 328, 329, 0, 0, 330,
	331, 0, 0, 332, 333, 334, 0, 335, 336, 338,
	340, 337, 339, 341, 343, 344, 342, 0, 345, 346,
	348, 0, 347, 0, 0, 0, 349, 0, 505, 350,
	506, 352, 353, 0, 354, 355, 356, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 507, 0, 363, 0,
	508, 364, 357, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 509, 374, 510, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 511, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 392, 393, 394,
	391, 395, 396, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 512, 404, 0, 405, 409, 410, 411, 412,
	413, 414, 415, 0, 421, 422, 416, 418, 419, 420,
	417, 423, 424, 425, 0, 426, 406, 407, 427, 428,
	0, 429, 430, 513, 431, 432, 0, 433, 434, 435,
	436, 408, 437, 441, 442, 438, 439, 440, 514, 0,
	444, 445, 443, 0, 446, 447, 448, 449, 450, 279,
	451, 0, 452, 515, 516, 517, 518, 0, 459, 0,
	453, 454, 519, 455, 520, 0, 456, 457, 458, 0,
	460, 461, 0, 0, 462, 463, 464, 465, 466, 468,
	0, 469, 0, 467, 470, 471, 472, 521, 522, 523,
	213, 474, 473, 524, 0, 0, 0, 0, 475, 476,
	525, 477, 478, 479, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 480,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	482, 230, 483, 233, 231, 232, 484, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 485, 486, 487,
	0, 241, 488, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 0, 256, 257, 0, 0, 0,
	0, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	489, 490, 0, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	274, 491, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 492, 493, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 494, 288, 289, 0, 290, 0, 291,
	0, 0, 0, 292, 293, 0, 294, 495, 0, 496,
	295, 0, 296, 297, 298, 299, 2414, 498, 499, 351,
	0, 300, 301, 0, 302, 303, 305, 0, 0, 0,
	304, 306, 313, 0, 0, 307, 500, 309, 308, 310,
	311, 312, 501, 0, 502, 0, 314, 0, 503, 0,
	315, 316, 317, 0, 318, 319, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 504, 0,
	328, 329, 0, 0, 330, 331, 0, 0, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	344, 342, 0, 345, 346, 348, 0, 347, 0, 0,
	0, 349, 0, 505, 350, 506, 352, 353, 0, 354,
	355, 356, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 0, 363, 0, 508, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 509, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 511, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 512, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 416, 418, 419, 420, 417, 423, 424, 425, 0,
	426, 406, 407, 427, 428, 0, 429, 430, 513, 431,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 442,
	438, 439, 440, 514, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 451, 0, 452, 515, 516,
	517, 518, 0, 459, 0, 453, 454, 519, 455, 520,
	0, 456, 457, 458, 0, 460, 461, 0, 0, 462,
	463, 464, 465, 466, 468, 0, 469, 0, 467, 470,
	471, 472, 521, 522, 523, 213, 474, 473, 524, 0,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 481, 482, 230, 483, 233, 231,
	232, 484, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 485, 486, 487, 0, 241, 488, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 0,
	256, 257, 0, 0, 0, 0, 0, 0, 0, 258,
	259, 260, 261, 262, 263, 489, 490, 0, 264, 0,
	266, 265, 0, 267, 0, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 274, 491, 275, 276, 278,
	280, 277, 281, 282, 283, 284, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 494, 288,
	289, 0, 290, 0, 291, 0, 0, 0, 292, 293,
	0, 294, 495, 0, 496, 295, 0, 296, 297, 298,
	299, 497, 498, 499, 351, 0, 300, 301, 0, 302,
	303, 305, 0, 0, 0, 304, 306, 313, 0, 0,
	307, 500, 309, 308, 310, 311, 312, 501, 0, 502,
	0, 314, 0, 503, 0, 315, 316, 317, 0, 318,
	319, 0, 0, 320, 321, 322, 323, 324, 0, 326,
	325, 0, 327, 504, 0, 328, 329, 0, 0, 330,
	331, 0, 0, 332, 333, 334, 0, 335, 336, 338,
	340, 337, 339, 341, 343, 344, 342, 0, 345, 346,
	348, 0, 347, 0, 0, 0, 349, 0, 505, 350,
	506, 352, 353, 0, 354, 355, 356, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 507, 0, 363, 0,
	508, 364, 357, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 509, 374, 510, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 511, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 392, 393, 394,
	391, 395, 396, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 512, 404, 0, 405, 559, 410, 411, 412,
	413, 414, 415, 0, 421, 422, 416, 418, 419, 420,
	417, 423, 424, 425, 0, 426, 406, 407, 427, 428,
	0, 429, 430, 513, 431, 432, 0, 433, 434, 435,
	436, 408, 437, 441, 442, 438, 439, 440, 514, 0,
	444, 445, 443, 0, 446, 447, 448, 449, 450, 279,
	451, 0, 452, 515, 516, 517, 518, 0, 459, 0,
	453, 454, 519, 455, 520, 0, 456, 457, 458, 0,
	460, 461, 0, 0, 462, 463, 464, 465, 466, 468,
	0, 469, 0, 467, 470, 471, 472, 521, 522, 523,
	213, 474, 473, 524, 0, 0, 0, 0, 475, 476,
	525, 477, 478, 479, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 480,
	0, 1882, 0, 0, 225, 227, 226, 228, 229, 481,
	482, 230, 483, 233, 231, 232, 484, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 485, 486, 487,
	0, 241, 488, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 0, 256, 257, 0, 0, 0,
	0, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	489, 490, 0, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	274, 491, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 492, 493, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 494, 288, 289, 0, 290, 0, 291,
	0, 0, 0, 292, 293, 0, 294, 495, 0, 496,
	295, 0, 296, 297, 298, 299, 497, 498, 499, 351,
	0, 300, 301, 0, 302, 303, 305, 0, 0, 0,
	304, 306, 313, 0, 0, 307, 500, 309, 308, 310,
	311, 312, 501, 0, 502, 0, 314, 0, 503, 0,
	315, 316, 317, 0, 318, 319, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 504, 0,
	328, 329, 0, 0, 330, 331, 0, 0, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	344, 342, 0, 345, 346, 348, 0, 347, 0, 0,
	0, 349, 0, 505, 350, 506, 352, 353, 0, 354,
	355, 356, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 0, 363, 0, 508, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 509, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 511, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 512, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 416, 418, 419, 420, 417, 423, 424, 425, 0,
	0, 406, 407, 427, 428, 0, 429, 430, 513, 431,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 442,
	438, 439, 440, 514, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 451, 0, 452, 515, 516,
	517, 518, 0, 459, 0, 453, 454, 519, 455, 520,
	0, 456, 457, 458, 0, 460, 461, 0, 0, 462,
	463, 464, 465, 466, 468, 0, 469, 0, 467, 470,
	471, 472, 521, 522, 523, 213, 474, 473, 524, 0,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 481, 482, 230, 483, 233, 231,
	232, 484, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 485, 486, 487, 0, 241, 488, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 0,
	256, 257, 0, 0, 0, 0, 0, 0, 0, 258,
	259, 260, 261, 262, 263, 489, 490, 0, 264, 0,
	266, 265, 0, 267, 0, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 274, 491, 275, 276, 278,
	280, 277, 281, 282, 283, 284, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 494, 288,
	289, 0, 290, 0, 291, 0, 0, 0, 292, 293,
	0, 294, 495, 0, 496, 295, 0, 296, 297, 298,
	299, 1293, 498, 499, 351, 0, 300, 301, 0, 302,
	303, 305, 0, 0, 0, 304, 306, 313, 0, 0,
	307, 500, 309, 308, 310, 311, 312, 501, 0, 502,
	0, 314, 0, 503, 0, 315, 316, 317, 0, 318,
	319, 0, 0, 320, 321, 322, 323, 324, 0, 326,
	325, 0, 327, 504, 0, 328, 329, 0, 0, 330,
	331, 0, 0, 332, 333, 334, 0, 335, 336, 338,
	340, 337, 339, 341, 343, 344, 342, 0, 345, 346,
	348, 0, 347, 0, 0, 0, 349, 0, 505, 350,
	506, 352, 353, 0, 354, 355, 356, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 507, 0, 363, 0,
	508, 364, 357, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 509, 374, 510, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 511, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 392, 393, 394,
	391, 395, 396, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 512, 404, 0, 405, 409, 410, 411, 412,
	413, 414, 415, 0, 421, 422, 416, 418, 419, 420,
	417, 423, 424, 425, 0, 426, 406, 407, 427, 428,
	0, 429, 430, 513, 431, 432, 0, 433, 434, 435,
	436, 408, 437, 441, 442, 438, 439, 440, 514, 0,
	444, 445, 443, 0, 446, 447, 448, 449, 450, 279,
	451, 0, 452, 515, 516, 517, 518, 0, 459, 0,
	453, 454, 519, 455, 520, 0, 456, 457, 458, 0,
	460, 461, 0, 0, 462, 463, 464, 465, 466, 468,
	0, 469, 0, 467, 470, 471, 472, 521, 522, 523,
	213, 474, 473, 524, 0, 0, 0, 0, 475, 476,
	525, 477, 478, 479, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 480,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	482, 230, 483, 233, 231, 232, 484, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 485, 486, 487,
	0, 241, 488, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 0, 256, 257, 0, 0, 0,
	0, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	489, 490, 0, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	274, 491, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 492, 493, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 494, 288, 289, 0, 290, 0, 291,
	0, 0, 0, 292, 293, 0, 294, 495, 0, 496,
	295, 0, 296, 297, 298, 299, 1233, 498, 499, 351,
	0, 300, 301, 0, 302, 303, 305, 0, 0, 0,
	304, 306, 313, 0, 0, 307, 500, 309, 308, 310,
	311, 312, 501, 0, 502, 0, 314, 0, 503, 0,
	315, 316, 317, 0, 318, 319, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 504, 0,
	328, 329, 0, 0, 330, 331, 0, 0, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	344, 342, 0, 345, 346, 348, 0, 347, 0, 0,
	0, 349, 0, 505, 350, 506, 352, 353, 0, 354,
	355, 356, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 0, 363, 0, 508, 364, 357, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 509, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 511, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 512, 404, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 416, 418, 419, 420, 417, 423, 424, 425, 0,
	426, 406, 407, 427, 428, 0, 429, 430, 513, 431,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 442,
	438, 439, 440, 514, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 451, 0, 452, 515, 516,
	517, 518, 0, 459, 0, 453, 454, 519, 455, 520,
	0, 456, 457, 458, 0, 460, 461, 0, 0, 462,
	463, 464, 465, 466, 468, 0, 469, 0, 467, 470,
	471, 472, 521, 522, 523, 213, 474, 473, 524, 0,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 0,
	0, 0, 219, 220, 221, 222, 223, 0, 224, 0,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 225,
	227, 226, 228, 229, 481, 482, 230, 483, 233, 231,
	232, 484, 0, 234, 235, 236, 237, 238, 239, 0,
	0, 240, 485, 486, 487, 0, 241, 488, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 0, 249, 250,
	251, 248, 0, 252, 0, 253, 254, 255, 0, 0,
	256, 257, 0, 0, 0, 0, 0, 0, 0, 258,
	259, 260, 261, 262, 263, 489, 490, 0, 264, 0,
	266, 265, 0, 267, 0, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 274, 491, 275, 276, 278,
	280, 277, 281, 282, 283, 284, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 494, 288,
	289, 0, 290, 0, 291, 0, 0, 0, 292, 293,
	0, 294, 495, 0, 496, 295, 0, 296, 297, 298,
	299, 497, 498, 499, 351, 0, 300, 301, 0, 302,
	303, 305, 0, 0, 0, 304, 306, 313, 0, 0,
	307, 500, 309, 308, 310, 311, 312, 501, 0, 502,
	0, 314, 0, 503, 0, 315, 316, 317, 0, 318,
	319, 0, 0, 320, 321, 322, 323, 324, 0, 326,
	325, 0, 327, 504, 0, 328, 329, 0, 0, 330,
	331, 0, 0, 332, 333, 334, 0, 335, 336, 338,
	340, 337, 339, 341, 343, 344, 342, 0, 345, 346,
	348, 0, 347, 0, 0, 0, 349, 0, 505, 350,
	506, 352, 353, 0, 354, 355, 356, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 507, 0, 363, 0,
	508, 364, 357, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 509, 374, 510, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 511, 991, 385,
	0, 386, 387, 388, 389, 390, 0, 392, 393, 394,
	391, 395, 396, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 512, 404, 0, 405, 409, 410, 411, 412,
	413, 414, 415, 0, 421, 422, 416, 418, 419, 420,
	417, 423, 424, 425, 0, 426, 406, 407, 427, 428,
	0, 429, 430, 513, 431, 432, 0, 433, 434, 435,
	436, 408, 437, 441, 442, 438, 439, 440, 514, 0,
	444, 445, 443, 0, 446, 447, 448, 449, 450, 279,
	451, 0, 452, 515, 516, 517, 518, 0, 459, 0,
	453, 454, 519, 455, 520, 0, 456, 457, 458, 0,
	460, 461, 0, 0, 462, 463, 464, 465, 466, 468,
	0, 469, 0, 467, 470, 471, 472, 521, 522, 523,
	213, 474, 473, 524, 0, 0, 0, 0, 475, 476,
	525, 477, 478, 479, 0, 0, 0, 219, 220, 221,
	222, 223, 0, 224, 0, 0, 0, 0, 0, 480,
	0, 0, 0, 0, 225, 227, 226, 228, 229, 481,
	482, 230, 483, 233, 231, 232, 484, 0, 234, 235,
	236, 237, 238, 239, 0, 0, 240, 485, 486, 487,
	0, 241, 488, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 0, 249, 250, 251, 248, 0, 252, 0,
	253, 254, 255, 0, 0, 256, 257, 0, 0, 0,
	0, 0, 0, 0, 258, 259, 260, 261, 262, 263,
	489, 490, 0, 264, 0, 266, 265, 0, 267, 0,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	274, 491, 275, 276, 278, 280, 277, 281, 282, 283,
	284, 492, 493, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 494, 288, 289, 0, 290, 0, 291,
	0, 0, 0, 292, 293, 0, 294, 495, 0, 496,
	0, 0, 296, 297, 298, 299, 497, 498, 499, 351,
	0, 300, 301, 0, 302, 303, 305, 0, 0, 0,
	304, 306, 313, 0, 0, 307, 500, 309, 308, 310,
	311, 312, 501, 0, 502, 0, 314, 0, 503, 0,
	315, 316, 317, 0, 318, 319, 0, 0, 320, 321,
	322, 323, 324, 0, 326, 325, 0, 327, 504, 0,
	328, 329, 0, 0, 330, 331, 0, 0, 332, 333,
	334, 0, 335, 336, 338, 340, 337, 339, 341, 343,
	344, 342, 0, 345, 346, 348, 0, 347, 0, 0,
	0, 349, 0, 505, 350, 506, 352, 353, 0, 354,
	355, 356, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 507, 0, 363, 0, 508, 364, 357, 365, 366,
	0, 368, 369, 370, 371, 0, 372, 373, 509, 374,
	510, 375, 0, 376, 0, 377, 378, 379, 380, 0,
	382, 383, 511, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 392, 393, 394, 391, 395, 396, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 512, 0, 0,
	405, 409, 410, 411, 412, 413, 414, 415, 0, 421,
	422, 416, 418, 419, 420, 417, 423, 424, 425, 0,
	426, 406, 407, 427, 428, 0, 429, 430, 513, 431,
	432, 0, 433, 434, 435, 436, 408, 437, 441, 442,
	438, 439, 440, 514, 0, 444, 445, 443, 0, 446,
	447, 448, 449, 450, 279, 451, 0, 452, 515, 516,
	517, 518, 0, 459, 0, 453, 454, 519, 455, 520,
	0, 456, 457, 458, 0, 460, 461, 0, 0, 462,
	463, 464, 465, 466, 468, 0, 469, 0, 467, 470,
	471, 472, 521, 522, 523, 0, 474, 473, 524, 0,
	0, 0, 0, 475, 476, 525, 477, 478, 479, 1470,
	1471, 0, 1503, 1504, 1505, 1513, 1514, 1515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1506, 1501,
	0, 0, 0, 0, 0, 0, 1473, 0, 0, 0,
	0, 1519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1470, 1471, 0, 1503,
	1504, 1505, 1513, 1514, 1515, 1472, 0, 0, 0, 0,
	0, 0, 0, 0, 1492, 1506, 1501, 0, 0, 0,
	0, 1489, 0, 1473, 0, 0, 0, 0, 1519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1472, 0, 0, 0, 0, 0, 0, 0,
	0, 1492, 0, 0, 0, 0, 0, 0, 1489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1495, 1496,
	1497, 1498, 0, 0, 0, 0, 0, 0, 1478, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1510, 0, 0, 1520, 0, 0, 0, 1500,
	1502, 0, 0, 0, 0, 1495, 1496, 1497, 1498, 0,
	0, 0, 0, 0, 0, 1478, 0, 0, 0, 1516,
	0, 1517, 0, 0, 0, 0, 0, 0, 1487, 1488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1510,
	0, 0, 1520, 0, 1508, 0, 1500, 1502, 0, 0,
	0, 0, 0, 1493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1516, 0, 1517, 0,
	0, 0, 1518, 0, 0, 1487, 1488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1507,
	0, 1508, 0, 0, 0, 0, 0, 0, 0, 0,
	1493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1499, 0, 0, 1507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1470, 1471, 0,
	1503, 1504, 1505, 1513, 1514, 1515, 0, 1511, 0, 0,
	1499, 0, 0, 0, 0, 0, 1506, 1501, 0, 0,
	0, 0, 0, 0, 1473, 0, 0, 0, 1494, 1519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1472, 1511, 0, 0, 0, 0, 0,
	0, 0, 1492, 0, 0, 0, 0, 0, 0, 1489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1509, 0, 0, 1484, 1485, 1491, 1512, 1490, 1486,
	0, 1483, 1481, 1482, 1474, 1475, 1476, 1477, 1479, 1480,
	0, 0, 0, 0, 0, 0, 0, 0, 2613, 0,
	0, 0, 0, 0, 0, 0, 1495, 1496, 1497, 1498,
	0, 0, 0, 0, 0, 0, 1478, 0, 1509, 0,
	0, 1484, 1485, 1491, 1512, 1490, 1486, 0, 1483, 1481,
	1482, 1474, 1475, 1476, 1477, 1479, 1480, 0, 0, 0,
	1510, 0, 0, 1520, 0, 2612, 0, 1500, 1502, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1516, 0, 1517,
	0, 0, 0, 0, 0, 0, 1487, 1488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 1493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 0,
	1470, 1471, 0, 1503, 1504, 1505, 1513, 1514, 1515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1506,
	1501, 0, 0, 0, 0, 0, 0, 1473, 0, 0,
	0, 0, 1519, 0, 0, 0, 0, 0, 0, 0,
	0, 1499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1472, 0, 0, 1494,
	0, 0, 0, 0, 0, 1492, 0, 0, 0, 0,
	0, 0, 1489, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1495,
	1496, 1497, 1498, 0, 0, 0, 0, 0, 0, 1478,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1510, 0, 0, 1520, 0, 0, 1509,
	1500, 1502, 1484, 1485, 1491, 1512, 1490, 1486, 0, 1483,
	1481, 1482, 1474, 1475, 1476, 1477, 1479, 1480, 0, 0,
	1516, 0, 1517, 0, 0, 0, 2611, 0, 0, 1487,
	1488, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 0, 0, 0, 0,
	0, 0, 0, 0, 1493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 0, 0, 1470, 1471, 0, 1503, 1504, 1505, 1513,
	1514, 1515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1506, 1501, 0, 0, 0, 0, 0, 0,
	1473, 0, 0, 0, 0, 1519, 0, 0, 0, 0,
	0, 0, 0, 0, 1499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1472,
	0, 0, 1494, 0, 0, 0, 0, 0, 1492, 0,
	0, 0, 0, 0, 0, 1489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1495, 1496, 1497, 1498, 0, 0, 0, 0,
	0, 0, 1478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1510, 0, 0, 1520,
	0, 0, 1509, 1500, 1502, 1484, 1485, 1491, 1512, 1490,
	1486, 0, 1483, 1481, 1482, 1474, 1475, 1476, 1477, 1479,
	1480, 0, 0, 1516, 0, 1517, 0, 0, 0, 2108,
	0, 0, 1487, 1488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1508, 0,
	0, 0, 0, 0, 0, 0, 0, 1493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1518, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1470, 1471, 0, 1503, 1504, 1505, 1513, 1514, 1515,
	0, 0, 0, 0, 0, 0, 0, 1499, 0, 0,
	1506, 1501, 0, 0, 0, 0, 0, 0, 1473, 0,
	0, 0, 0, 1519, 0, 1494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1470, 1471,
	0, 1503, 1504, 1505, 1513, 1514, 1515, 1472, 0, 0,
	0, 1511, 0, 0, 0, 0, 1492, 1506, 1501, 0,
	0, 0, 0, 1489, 0, 1473, 0, 0, 0, 0,
	1519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1472, 0, 0, 0, 0, 0,
	0, 0, 0, 1492, 0, 0, 0, 0, 0, 0,
	1489, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1495, 1496, 1497, 1498, 0, 0, 0, 0, 0, 0,
	1478, 0, 0, 0, 0, 1509, 0, 0, 1484, 1485,
	1491, 1512, 1490, 1486, 0, 1483, 1481, 1482, 1474, 1475,
	1476, 1477, 1479, 1480, 1510, 0, 0, 1520, 3560, 0,
	0, 1500, 1502, 0, 0, 0, 0, 1495, 1496, 1497,
	1498, 0, 0, 0, 0, 0, 0, 1478, 0, 0,
	0, 1516, 0, 1517, 0, 0, 0, 0, 0, 0,
	1487, 1488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1510, 0, 0, 1520, 0, 1508, 0, 1500, 1502,
	0, 0, 0, 0, 0, 1493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1516, 0,
	1517, 0, 0, 0, 1518, 0, 0, 1487, 1488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1507, 0, 1508, 0, 0, 0, 0, 0, 0,
	0, 0, 1493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1499, 0, 0, 1507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1470, 1471, 0, 1503,
	1504, 1505, 1513, 1514, 1515, 0, 0, 0, 0, 1511,
	0, 0, 1499, 0, 0, 1506, 1501, 0, 0, 0,
	0, 0, 0, 1473, 0, 0, 0, 0, 1519, 0,
	1494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1472, 0, 0, 0, 1511, 0, 0, 0,
	0, 1492, 0, 0, 0, 0, 0, 0, 1489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1509, 0, 0, 1484, 1485, 1491, 1512,
	1490, 1486, 0, 1483, 1481, 1482, 1474, 1475, 1476, 1477,
	1479, 1480, 0, 0, 0, 0, 3556, 0, 0, 0,
	0, 0, 0, 0, 0, 1495, 1496, 1497, 1498, 0,
	0, 0, 0, 0, 0, 1478, 0, 0, 0, 0,
	1509, 0, 0, 1484, 1485, 1491, 1512, 1490, 1486, 0,
	1483, 1481, 1482, 1474, 1475, 1476, 1477, 1479, 1480, 1510,
	0, 0, 1520, 3477, 0, 0, 1500, 1502, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1516, 0, 1517, 0,
	0, 0, 0, 0, 0, 1487, 1488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1508, 0, 0, 0, 0, 0, 0, 0, 0,
	1493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1470, 1471, 0, 1503, 1504, 1505,
	1513, 1514, 1515, 0, 0, 0, 0, 0, 0, 0,
	1499, 0, 0, 1506, 1501, 0, 0, 0, 0, 0,
	0, 1473, 0, 0, 0, 0, 1519, 0, 1494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1470, 1471, 0, 1503, 1504, 1505, 1513, 1514, 1515,
	1472, 0, 0, 0, 1511, 0, 0, 0, 0, 1492,
	1506, 1501, 0, 0, 0, 0, 1489, 0, 1473, 0,
	0, 0, 0, 1519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1472, 0, 0,
	0, 0, 0, 0, 0, 0, 1492, 0, 0, 0,
	0, 0, 0, 1489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1495, 1496, 1497, 1498, 0, 0, 0,
	0, 0, 0, 1478, 0, 0, 0, 0, 1509, 0,
	0, 1484, 1485, 1491, 1512, 1490, 1486, 0, 1483, 1481,
	1482, 1474, 1475, 1476, 1477, 1479, 1480, 1510, 0, 0,
	1520, 3476, 0, 0, 1500, 1502, 0, 0, 0, 0,
	1495, 1496, 1497, 1498, 0, 0, 0, 0, 0, 0,
	1478, 0, 0, 0, 1516, 0, 1517, 0, 0, 0,
	0, 0, 0, 1487, 1488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1510, 0, 0, 1520, 0, 1508,
	0, 1500, 1502, 0, 0, 0, 0, 0, 1493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1516, 0, 1517, 0, 0, 0, 1518, 0, 0,
	1487, 1488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1507, 0, 1508, 0, 0, 0,
	0, 0, 0, 0, 0, 1493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1499, 0,
	0, 1507, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1470,
	1471, 0, 1503, 1504, 1505, 1513, 1514, 1515, 0, 0,
	0, 0, 1511, 0, 0, 1499, 0, 0, 1506, 1501,
	0, 0, 0, 0, 0, 0, 1473, 0, 0, 0,
	0, 1519, 0, 1494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1472, 0, 0, 0, 1511,
	0, 0, 0, 0, 1492, 0, 0, 0, 0, 0,
	0, 1489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1509, 0, 0, 1484,
	1485, 1491, 1512, 1490, 1486, 0, 1483, 1481, 1482, 1474,
	1475, 1476, 1477, 1479, 1480, 0, 0, 0, 0, 3361,
	0, 0, 0, 0, 0, 0, 0, 0, 1495, 1496,
	1497, 1498, 0, 0, 0, 0, 0, 0, 1478, 0,
	0, 0, 0, 1509, 0, 0, 1484, 1485, 1491, 1512,
	1490, 1486, 0, 1483, 1481, 1482, 1474, 1475, 1476, 1477,
	1479, 1480, 1510, 0, 0, 1520, 3258, 0, 0, 1500,
	1502, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1516,
	0, 1517, 0, 0, 0, 0, 0, 0, 1487, 1488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1508, 0, 0, 0, 0, 0,
	0, 0, 0, 1493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1518, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1507,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1470, 1471, 0,
	1503, 1504, 1505, 1513, 1514, 1515, 0, 0, 0, 0,
	0, 0, 0, 1499, 0, 0, 1506, 1501, 0, 0,
	0, 0, 0, 0, 1473, 0, 0, 0, 0, 1519,
	0, 1494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1470, 1471, 0, 1503, 1504, 1505,
	1513, 1514, 1515, 1472, 0, 0, 0, 1511, 0, 0,
	0, 0, 1492, 1506, 1501, 0, 0, 0, 0, 1489,
	0, 1473, 0, 0, 0, 0, 1519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1472, 0, 0, 0, 0, 0, 0, 0, 0, 1492,
	0, 0, 0, 0, 0, 0, 1489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1495, 1496, 1497, 1498,
	0, 0, 0, 0, 0, 0, 1478, 0, 0, 0,
	0, 1509, 0, 0, 1484, 1485, 1491, 1512, 1490, 1486,
	0, 1483, 1481, 1482, 1474, 1475, 1476, 1477, 1479, 1480,
	1510, 0, 0, 1520, 3211, 0, 0, 1500, 1502, 0,
	0, 0, 0, 1495, 1496, 1497, 1498, 0, 0, 0,
	0, 0, 0, 1478, 0, 0, 0, 1516, 0, 1517,
	0, 0, 0, 0, 0, 0, 1487, 1488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1510, 0, 0,
	1520, 0, 1508, 0, 1500, 1502, 0, 0, 0, 0,
	0, 1493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1516, 0, 1517, 0, 0, 0,
	1518, 0, 0, 1487, 1488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 1508,
	0, 0, 0, 0, 0, 0, 0, 0, 1493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1518, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1499, 0, 0, 1507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1470, 1471, 0, 1503, 1504, 1505, 1513, 1514,
	1515, 0, 0, 0, 0, 1511, 0, 0, 1499, 0,
	0, 1506, 1501, 0, 0, 0, 0, 0, 0, 1473,
	0, 0, 0, 0, 1519, 0, 1494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1472, 0,
	0, 0, 1511, 0, 0, 0, 0, 1492, 0, 0,
	0, 0, 0, 0, 1489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1509,
	0, 0, 1484, 1485, 1491, 1512, 1490, 1486, 0, 1483,
	1481, 1482, 1474, 1475, 1476, 1477, 1479, 1480, 0, 0,
	0, 0, 3210, 0, 0, 0, 0, 0, 0, 0,
	0, 1495, 1496, 1497, 1498, 0, 0, 0, 0, 0,
	0, 1478, 0, 0, 0, 0, 1509, 0, 0, 1484,
	1485, 1491, 1512, 1490, 1486, 0, 1483, 1481, 1482, 1474,
	1475, 1476, 1477, 1479, 1480, 1510, 0, 0, 1520, 3209,
	0, 0, 1500, 1502, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1516, 0, 1517, 0, 0, 0, 0, 0,
	0, 1487, 1488, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 0, 0,
	0, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1470, 1471, 0, 1503, 1504, 1505, 1513, 1514, 1515, 0,
	0, 0, 0, 0, 0, 0, 1499, 0, 0, 1506,
	1501, 0, 0, 0, 0, 0, 0, 1473, 0, 0,
	0, 0, 1519, 0, 1494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1470, 1471, 0,
	1503, 1504, 1505, 1513, 1514, 1515, 1472, 0, 0, 0,
	1511, 0, 0, 0, 0, 1492, 1506, 1501, 0, 0,
	0, 0, 1489, 0, 1473, 0, 0, 0, 0, 1519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1472, 0, 0, 0, 0, 0, 0,
	0, 0, 1492, 0, 0, 0, 0, 0, 0, 1489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1495,
	1496, 1497, 1498, 0, 0, 0, 0, 0, 0, 1478,
	0, 0, 0, 0, 1509, 0, 0, 1484, 1485, 1491,
	1512, 1490, 1486, 0, 1483, 1481, 1482, 1474, 1475, 1476,
	1477, 1479, 1480, 1510, 0, 0, 1520, 3174, 0, 0,
	1500, 1502, 0, 0, 0, 0, 1495, 1496, 1497, 1498,
	0, 0, 0, 0, 0, 0, 1478, 0, 0, 0,
	1516, 0, 1517, 0, 0, 0, 0, 0, 0, 1487,
	1488, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1510, 0, 0, 1520, 0, 1508, 0, 1500, 1502, 0,
	0, 0, 0, 0, 1493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1516, 0, 1517,
	0, 0, 0, 1518, 0, 0, 1487, 1488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 0, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 1493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1499, 0, 0, 1507, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1470, 1471, 0, 1503, 1504,
	1505, 1513, 1514, 1515, 0, 0, 0, 0, 1511, 0,
	0, 1499, 0, 0, 1506, 1501, 0, 0, 0, 0,
	0, 0, 1473, 0, 0, 0, 0, 1519, 0, 1494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1472, 0, 0, 0, 1511, 0, 0, 0, 0,
	1492, 0, 0, 0, 0, 0, 0, 1489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1509, 0, 0, 1484, 1485, 1491, 1512, 1490,
	1486, 0, 1483, 1481, 1482, 1474, 1475, 1476, 1477, 1479,
	1480, 0, 0, 0, 0, 2969, 0, 0, 0, 0,
	0, 0, 0, 0, 1495, 1496, 1497, 1498, 0, 0,
	0, 0, 0, 0, 1478, 0, 0, 0, 0, 1509,
	0, 0, 1484, 1485, 1491, 1512, 1490, 1486, 0, 1483,
	1481, 1482, 1474, 1475, 1476, 1477, 1479, 1480, 1510, 0,
	0, 1520, 2609, 0, 0, 1500, 1502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1516, 0, 1517, 0, 0,
	0, 0, 0, 0, 1487, 1488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 0, 0, 0, 0, 0, 0, 0, 0, 1493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1507, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1470, 1471, 0, 1503, 1504, 1505, 1513,
	1514, 1515, 0, 0, 0, 0, 0, 0, 0, 1499,
	0, 0, 1506, 1501, 0, 0, 0, 0, 0, 0,
	1473, 0, 0, 0, 0, 1519, 0, 1494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1470, 1471, 0, 1503, 1504, 1505, 1513, 1514, 1515, 1472,
	0, 0, 0, 1511, 0, 0, 0, 0, 1492, 1506,
	1501, 0, 0, 0, 0, 1489, 0, 1473, 0, 0,
	0, 0, 1519, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1472, 0, 0, 0,
	0, 0, 0, 0, 0, 1492, 0, 0, 0, 0,
	0, 0, 1489, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1495, 1496, 1497, 1498, 0, 0, 0, 0,
	0, 0, 1478, 0, 0, 0, 0, 1509, 0, 0,
	1484, 1485, 1491, 1512, 1490, 1486, 0, 1483, 1481, 1482,
	1474, 1475, 1476, 1477, 1479, 1480, 1510, 0, 0, 1520,
	2608, 0, 0, 1500, 1502, 0, 0, 0, 0, 1495,
	1496, 1497, 1498, 0, 0, 0, 0, 0, 0, 1478,
	0, 0, 0, 1516, 0, 1517, 0, 0, 0, 0,
	0, 0, 1487, 1488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1510, 0, 0, 1520, 0, 1508, 0,
	1500, 1502, 0, 0, 0, 0, 0, 1493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1516, 0, 1517, 0, 0, 0, 1518, 0, 0, 1487,
	1488, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 0, 1508, 0, 0, 0, 0,
	0, 0, 0, 0, 1493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1499, 0, 0,
	1507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1470, 1471,
	0, 1503, 1504, 1505, 1513, 1514, 1515, 0, 0, 0,
	0, 1511, 0, 0, 1499, 0, 0, 1506, 1501, 0,
	0, 0, 0, 0, 0, 1473, 0, 0, 0, 0,
	1519, 0, 1494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1472, 0, 0, 0, 1511, 0,
	0, 0, 0, 1492, 0, 0, 0, 0, 0, 0,
	1489, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1509, 0, 0, 1484, 1485,
	1491, 1512, 1490, 1486, 0, 1483, 1481, 1482, 1474, 1475,
	1476, 1477, 1479, 1480, 0, 0, 0, 0, 2607, 0,
	0, 0, 0, 0, 0, 0, 0, 1495, 1496, 1497,
	1498, 0, 0, 0, 0, 0, 0, 1478, 3664, 0,
	0, 0, 1509, 0, 0, 1484, 1485, 1491, 1512, 1490,
	1486, 0, 1483, 1481, 1482, 1474, 1475, 1476, 1477, 1479,
	1480, 1510, 0, 0, 1520, 2606, 0, 0, 1500, 1502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1516, 0,
	1517, 0, 0, 0, 0, 0, 0, 1487, 1488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1508, 0, 0, 0, 0, 0, 0,
	0, 0, 1493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3663, 0, 0, 0, 0, 0, 1470, 1471, 0, 1503,
	1504, 1505, 1513, 1514, 1515, 0, 0, 0, 0, 0,
	0, 0, 1499, 0, 0, 1506, 1501, 0, 0, 0,
	0, 2535, 0, 1473, 0, 0, 0, 0, 1519, 0,
	1494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1470, 1471, 0, 1503, 1504, 1505, 1513,
	1514, 1515, 1472, 0, 0, 0, 1511, 0, 0, 0,
	0, 1492, 1506, 1501, 0, 0, 0, 0, 1489, 0,
	1473, 0, 0, 0, 0, 1519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2536, 0, 0, 1472,
	0, 0, 0, 0, 0, 0, 0, 0, 1492, 0,
	0, 0, 0, 0, 0, 1489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1495, 1496, 1497, 1498, 0,
	0, 0, 0, 0, 0, 1478, 0, 0, 0, 0,
	1509, 0, 0, 1484, 1485, 1491, 1512, 1490, 1486, 0,
	1483, 1481, 1482, 1474, 1475, 1476, 1477, 1479, 1480, 1510,
	0, 0, 1520, 0, 0, 0, 1500, 1502, 0, 0,
	0, 0, 1495, 1496, 1497, 1498, 0, 0, 0, 0,
	0, 0, 1478, 0, 2656, 0, 1516, 2655, 1517, 0,
	0, 0, 0, 0, 0, 1487, 1488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1510, 0, 0, 1520,
	0, 1508, 0, 1500, 1502, 0, 0, 0, 0, 0,
	1493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1516, 0, 1517, 0, 0, 0, 1518,
	0, 0, 1487, 1488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1507, 0, 1508, 0,
	0, 0, 0, 0, 0, 0, 0, 1493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1518, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1499, 0, 0, 1507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1494, 0,
	0, 0, 0, 0, 2218, 0, 0, 0, 0, 0,
	0, 1470, 1471, 0, 1503, 1504, 1505, 1513, 1514, 1515,
	0, 0, 0, 0, 1511, 0, 0, 1499, 0, 0,
	1506, 1501, 0, 0, 0, 2217, 0, 0, 1473, 0,
	0, 0, 0, 1519, 0, 1494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1472, 0, 0,
	0, 1511, 0, 0, 0, 0, 1492, 0, 0, 0,
	0, 0, 0, 1489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1509, 0,
	0, 1484, 1485, 1491, 1512, 1490, 1486, 0, 1483, 1481,
	1482, 1474, 1475, 1476, 1477, 1479, 1480, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1495, 1496, 1497, 1498, 0, 0, 0, 0, 0, 0,
	1478, 0, 0, 0, 0, 1509, 0, 0, 1484, 1485,
	1491, 1512, 1490, 1486, 0, 1483, 1481, 1482, 1474, 1475,
	1476, 1477, 1479, 1480, 1510, 0, 0, 1520, 0, 0,
	0, 1500, 1502, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1516, 0, 1517, 0, 0, 0, 0, 0, 0,
	1487, 1488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1508, 0, 0, 0,
	0, 0, 0, 0, 0, 1493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1507, 0, 0, 1470, 1471, 0, 1503, 1504, 1505,
	1513, 1514, 1515, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1506, 1501, 0, 0, 0, 0, 0,
	0, 1473, 0, 0, 0, 0, 1519, 0, 0, 0,
	0, 0, 0, 0, 0, 1499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1472, 0, 0, 1494, 0, 0, 0, 0, 0, 1492,
	0, 0, 0, 0, 0, 0, 1489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1495, 1496, 1497, 1498, 0, 0, 0,
	0, 0, 0, 1478, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1510, 0, 0,
	1520, 0, 0, 1509, 1500, 1502, 1484, 1485, 1491, 1512,
	1490, 1486, 0, 1483, 1481, 1482, 1474, 1475, 1476, 1477,
	1479, 1480, 0, 0, 1516, 0, 1517, 0, 0, 0,
	0, 0, 0, 1487, 1488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1508,
	0, 0, 0, 0, 0, 0, 0, 0, 1493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1518, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1507, 832, 0, 1470, 1471, 0,
	1503, 1504, 1505, 1513, 1514, 1515, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1506, 1501, 0, 0,
	0, 0, 0, 0, 1473, 0, 0, 0, 0, 1519,
	0, 0, 0, 0, 0, 0, 0, 0, 1499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1472, 0, 0, 1494, 0, 0, 0,
	0, 0, 1492, 0, 0, 0, 0, 0, 0, 1489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1495, 1496, 1497, 1498,
	0, 0, 0, 0, 0, 0, 1478, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1510, 0, 0, 1520, 0, 0, 1509, 1500, 1502, 1484,
	1485, 1491, 1512, 1490, 1486, 0, 1483, 1481, 1482, 1474,
	1475, 1476, 1477, 1479, 1480, 0, 0, 1516, 0, 1517,
	0, 0, 0, 0, 0, 0, 1487, 1488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 1493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 0,
	1470, 1471, 0, 1503, 1504, 1505, 1513, 1514, 1515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1506,
	1501, 0, 0, 0, 0, 0, 0, 1473, 0, 0,
	0, 0, 1519, 0, 0, 0, 0, 0, 0, 0,
	0, 1499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1472, 0, 0, 1494,
	0, 0, 0, 0, 0, 1492, 0, 0, 0, 0,
	0, 0, 1489, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2948, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1495,
	1496, 1497, 1498, 0, 0, 0, 0, 0, 0, 1478,
	0, 0, 0, 0, 2662, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1510, 0, 0, 1520, 0, 0, 1509,
	1500, 1502, 1484, 1485, 1491, 1512, 1490, 1486, 0, 1483,
	1481, 1482, 1474, 1475, 1476, 1477, 1479, 1480, 0, 0,
	1516, 0, 1517, 0, 0, 0, 0, 0, 0, 1487,
	1488, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 0, 0, 0, 0,
	0, 0, 0, 0, 1493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 0, 0, 1470, 1471, 0, 1503, 1504, 1505, 1513,
	1514, 1515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1506, 1501, 0, 0, 0, 2657, 0, 0,
	1473, 0, 0, 0, 0, 1519, 0, 0, 0, 0,
	0, 0, 0, 0, 1499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1472,
	0, 0, 1494, 0, 0, 0, 0, 0, 1492, 0,
	0, 0, 0, 0, 0, 1489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1495, 1496, 1497, 1498, 0, 0, 0, 0,
	0, 0, 1478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1510, 0, 0, 1520,
	0, 0, 1509, 1500, 1502, 1484, 1485, 1491, 1512, 1490,
	1486, 0, 1483, 1481, 1482, 1474, 1475, 1476, 1477, 1479,
	1480, 0, 0, 1516, 0, 1517, 0, 0, 0, 0,
	0, 0, 1487, 1488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1508, 0,
	0, 0, 0, 0, 0, 0, 0, 1493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1518, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 0, 0, 1470, 1471, 0, 1503,
	1504, 1505, 1513, 1514, 1515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1506, 1501, 0, 0, 0,
	0, 0, 0, 1473, 0, 0, 0, 0, 1519, 0,
	0, 0, 0, 0, 0, 0, 0, 1499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1472, 0, 0, 1494, 0, 0, 0, 0,
	0, 1492, 0, 0, 0, 0, 0, 0, 1489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1495, 1496, 1497, 1498, 0,
	0, 0, 0, 0, 0, 1478, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1510,
	0, 0, 1520, 0, 0, 1509, 1500, 1502, 1484, 1485,
	1491, 1512, 1490, 1486, 0, 1483, 1481, 1482, 1474, 1475,
	1476, 1477, 1479, 1480, 0, 0, 1516, 0, 1517, 0,
	0, 0, 0, 0, 0, 1487, 1488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1508, 0, 0, 0, 0, 0, 0, 0, 0,
	1493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1507, 0, 0, 1470,
	1471, 0, 1503, 1504, 1505, 1513, 1514, 1515, 0, 0,
	0, 0, 0, 0, 2624, 0, 0, 0, 1506, 1501,
	0, 0, 0, 2610, 0, 0, 1473, 0, 0, 0,
	0, 1519, 0, 0, 0, 0, 0, 0, 0, 0,
	1499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1472, 0, 0, 1494, 0,
	0, 0, 0, 0, 1492, 0, 0, 0, 0, 0,
	0, 1489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1495, 1496,
	1497, 1498, 0, 0, 0, 0, 0, 0, 1478, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1510, 0, 0, 1520, 0, 0, 1509, 1500,
	1502, 1484, 1485, 1491, 1512, 1490, 1486, 0, 1483, 1481,
	1482, 1474, 1475, 1476, 1477, 1479, 1480, 0, 0, 1516,
	0, 1517, 0, 0, 0, 0, 0, 0, 1487, 1488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1508, 0, 0, 0, 0, 0,
	0, 0, 0, 1493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1518, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1507,
	0, 0, 1470, 1471, 0, 1503, 1504, 1505, 1513, 1514,
	1515, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1506, 1501, 0, 0, 0, 0, 0, 0, 1473,
	0, 0, 0, 0, 1519, 0, 0, 0, 0, 0,
	0, 0, 0, 1499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1472, 0,
	0, 1494, 0, 0, 0, 0, 0, 1492, 0, 0,
	0, 0, 0, 0, 1489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1495, 1496, 1497, 1498, 0, 0, 0, 0, 0,
	0, 1478, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1510, 0, 0, 1520, 0,
	0, 1509, 1500, 1502, 1484, 1485, 1491, 1512, 1490, 1486,
	0, 1483, 1481, 1482, 1474, 1475, 1476, 1477, 1479, 1480,
	0, 0, 1516, 0, 1517, 0, 0, 0, 0, 0,
	0, 1487, 1488, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 0, 0,
	0, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1507, 0, 0, 1470, 1471, 0, 1503, 1504,
	1505, 1513, 1514, 1515, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1501, 0, 0, 0, 0,
	0, 0, 1473, 0, 0, 0, 0, 1519, 0, 0,
	0, 0, 0, 0, 0, 0, 1499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1472, 0, 0, 1494, 0, 0, 0, 0, 0,
	1492, 0, 0, 0, 0, 0, 0, 1489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1495, 1496, 1497, 1498, 0, 0,
	0, 0, 0, 0, 1478, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1510, 0,
	0, 1520, 0, 0, 1509, 1500, 1502, 1484, 1485, 1491,
	1512, 1490, 1486, 0, 1483, 1481, 1482, 1474, 1475, 1476,
	1477, 1479, 1480, 0, 0, 1516, 0, 1517, 0, 0,
	0, 0, 0, 0, 1487, 1488, 1470, 1471, 0, 1503,
	1504, 1505, 1513, 1514, 1515, 0, 0, 0, 0, 0,
	1508, 0, 0, 0, 0, 0, 1501, 0, 0, 1493,
	0, 0, 0, 1473, 0, 0, 0, 0, 1519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1472, 0, 0, 0, 0, 0, 0, 0,
	0, 1492, 0, 0, 0, 0, 0, 0, 1489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1499,
	0, 0, 0, 0, 0, 0, 0, 1689, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1494, 0, 0,
	0, 0, 0, 0, 0, 1495, 1496, 1497, 1498, 0,
	0, 0, 0, 0, 0, 1478, 0, 0, 0, 0,
	0, 0, 0, 1511, 0, 0, 0, 1706, 1683, 1690,
	0, 1673, 1716, 1715, 0, 0, 1675, 1674, 0, 1510,
	0, 0, 1520, 0, 1726, 1727, 1500, 1502, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1487, 1488, 0, 0, 0,
	0, 0, 0, 0, 0, 1717, 0, 1713, 1712, 0,
	0, 1508, 0, 0, 0, 0, 0, 0, 0, 1711,
	1493, 0, 0, 0, 0, 0, 0, 1509, 0, 0,
	1484, 1485, 1491, 1512, 1490, 1486, 0, 1483, 1481, 1482,
	1474, 1475, 1476, 1477, 1479, 1480, 0, 0, 0, 0,
	1710, 1708, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1699, 1688, 1701, 1703, 1704, 1705, 1700,
	1499, 1693, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1722, 1723, 0, 0, 0, 0, 0, 1494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1511, 0, 0, 1677, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1714, 0, 0, 0, 1686, 0, 1687, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 740, 0, 775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 747, 1707,
	0, 0, 0, 1696, 1694, 1695, 1698, 1697, 0, 0,
	0, 0, 759, 745, 0, 0, 0, 0, 1509, 0,
	0, 1484, 1485, 1491, 1512, 1490, 1486, 0, 1483, 1481,
	1482, 1474, 1475, 1476, 1477, 1479, 1480, 746, 1678, 1679,
	1681, 1682, 749, 0, 0, 0, 781, 0, 0, 0,
	0, 0, 0, 756, 757, 1702, 1680, 0, 0, 768,
	0, 0, 0, 0, 0, 0, 1725, 0, 0, 0,
	0, 0, 776, 751, 0, 0, 0, 0, 0, 0,
	0, 0, 1676, 0, 0, 1718, 1719, 1720, 1721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	774, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1684, 0, 0, 0, 0,
	1691, 1724, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 752, 0, 0, 0, 0, 0, 0, 0,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 753, 754, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 761, 760, 0,
	0, 0, 0, 0, 0, 755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 780, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 777, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 748, 0, 0, 0, 772, 773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	770, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	764, 0, 0, 0, 0, 0, 765, 0, 0, 0,
	0, 0, 0, 742, 0, 778, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 766, 0, 0, 0, 763, 0, 0, 0, 0,
	0, 0, 0, 0, 779, 0, 0, 0, 0, 0,
	0, 0, 767, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 771,
}
var sqlPact = [...]int{

	10737, -1000, -1000, -1000, -1000, -1000, -1000, 283, 281, 277,
	276, 275, 256, 251, 250, -1000, -1000, -1000, 249, -1000,
	-1000, 247, -1000, 241, 239, 238, 230, -1000, 224, 223,
	209, -1000, -1000, -1000, -1000, 208, 207, 205, 58153, 1944,
	70161, 61140, 1701, 52574, 69730, 52143, 69299, 68868, 201, -1000,
	68437, 195, 193, 191, -1000, -1000, 189, 1438, 43052, 188,
	186, 179, 1863, 177, 169, -1000, 160, -1000, 10148, 1400,
	-1000, 158, 157, -1000, 6399, 3980, 60284, 2396, 155, 153,
	42620, 2319, 2491, -1000, -1000, 1754, -1000, -1000, 152, 151,
	149, 146, 143, 141, 136, 135, 134, -1000, 133, 130,
	126, 125, 114, 113, 110, -1000, 109, 107, 104, 103,
	102, 101, 100, 96, 95, 91, 88, -1000, 82572, 1652,
	1540, 1535, 1525, 1524, 1562, 1019, 87, 84, 81, 80,
	79, 74, 71, -1000, -1000, 68, 67, 63, 59, -1000,
	58, 57, 306, 52, 49, 48, 44, 43, 2401, -1000,
	1519, 846, 21608, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 74411, 70586, 42, -4,
	32, -1000, 2780, 932, 35281, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 577, -1000, -1000, -1000, 355,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1727, 832, -1000, -1000,
	-1000, 68006, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1941, -53, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 830,
	-1000, 1939, 252, 1912, -1000, -1000, -1000, -1000, -1000, 70586,
	-1000, -1000, 3042, 3041, 1753, 829, 67581, -1000, 1393, -1000,
	959, 24344, -1000, 1174, -1000, 24344, 351, -1000, -1000, -1000,
	-1000, -1000, 51712, 16104, 51281, 50850, 46991, 67150, 15663, 57728,
	37885, 1212, -1000, -1000, -1000, -1000, -1000, 14, 47855, 70586,
	-1000, 346, -1000, -1000, -1000, -1000, -1000, -1000, 30832, 758,
	30366, 685, 29900, 572, -1000, -1000, -1000, -1000, 3040, 3039,
	1115, 3038, 2689, 73986, 1611, 3037, 1566, 1186, 1031, 3036,
	3035, 3034, 3031, 3029, 3028, 3026, 1282, 66719, 2487, 1481,
	46550, 46109, 58153, 58153, 2261, 66288, 1246, 1242, -1000, -1000,
	-1000, -1000, -1000, -1000, 2607, 2489, 2354, 40044, -1000, -1000,
	3023, 3022, 3021, 3020, 3019, 73561, 1585, 3018, 2082, 3017,
	3015, 3014, 3012, 3009, 3008, 3007, 3006, 3004, -1000, 57297,
	56866, 56435, 56004, 65857, 45668, 45227, -1000, -1000, -1000, 37001,
	7230, 6051, 65426, 38324, 58153, 58153, -1000, -1000, 31286, 93,
	-1000, -1000, -1000, 37885, 2461, -1000, 31286, 93, -1000, 70586,
	-1000, 2484, 1709, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2196, 1472, 2892, 44786, 1749, 1284, 2749, 2604,
	2589, 1420, 2185, 2588, 2585, 2584, 2583, 2572, 1599, 2149,
	326, 21142, 1448, 1423, 2569, 2565, 2921, 1831, 50419, 3003,
	3002, 2725, 2541, 2537, 2460, -1000, -1000, -1000, -1000, 1360,
	-1000, -1000, 53424, -1000, -1000, 1160, -1000, -1000, 1160, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1204, 72711, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1519, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2038, -1000, 1734, -1000, -1000, 2139, 2703,
	2703, 2703, 2775, 549, 547, -1000, 306, -1000, -1000, 81711,
	-1000, -1000, 31286, 31286, 31286, 31286, 31286, 1848, -1000, 828,
	-1000, -1000, 860, -1000, 827, 728, -1000, -1000, -1000, -1000,
	-1000, -1000, 823, 2919, -1000, -1000, -1000, -1000, -1000, 2863,
	-1000, 18358, -1000, -1000, -1000, 534, 821, 31286, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 999, -1000, 337, 989, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	711, 1712, 708, 708, 708, -1000, -1000, 1017, -1000, -1000,
	-1000, 465, 707, 344, 704, -1000, -1000, -1000, -1000, 2483,
	819, 813, -1000, 811, 810, 808, 806, 802, -1000, -1000,
	-1000, 796, 793, 789, 788, 787, 784, 773, 770, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1016, -1000, 762,
	760, 750, 749, 746, 743, 742, 738, 736, -1000, -1000,
	8, 70586, -1000, 577, 8, -1000, -1000, 735, -1000, 24798,
	24798, 24798, -1000, -1000, 1938, 31286, -1000, 2496, -1000, 23,
	23, 916, 36139, -1000, 34419, 916, 234, 866, 39613, -1000,
	2457, -1000, -1000, 730, 336, -1000, -1000, 2456, 70586, 16543,
	70586, 58153, 58153, 58153, 2648, 31286, -1000, -1000, 44345, 70586,
	58578, 2826, 82293, 44345, 70586, 2480, -1000, -1000, -1000, 70586,
	-1000, 31286, -1000, 2825, 1332, 48284, 2793, -2, -1000, -1000,
	-1000, -1000, -1000, -1000, 2055, 2080, 1135, 1961, 1375, -1000,
	24344, 2682, -1000, -1000, -1000, 320, 16543, -1000, 1839, 2632,
	1320, -1000, 1960, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1682, 2631, -1000, 1490, 2630, 1670, -1000, -1000, 996,
	2623, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1844, -1000, -1000, 2715, -1000, -1000, 1847, 2620, 24, -1000,
	-1000, 903, -1000, 47430, 37885, 47855, 6, -1000, -1000, -36,
	-1000, 15222, 81711, -1000, -1000, -1000, 81711, 901, -1000, -1000,
	2608, -1000, 81711, 900, -1000, -1000, 2601, -1000, -1000, -1000,
	2999, -1000, 2997, 2017, 2996, 2995, 2994, -1000, 1477, 1706,
	2993, -1000, 2989, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	55573, 1937, -1000, -1000, 54711, 55142, 1024, -1000, 996, 2016,
	-1000, -1000, 2014, -1000, 987, -1000, 2987, 64995, 2300, 996,
	2013, -1000, -1000, -1000, -1000, -1000, 40902, -1000, 40902, -1000,
	40902, -1000, 1359, -1000, 73136, 23, 23, 2863, -1000, -1000,
	-1000, -1000, -1000, 2596, 2986, 2985, 2981, -1000, 70586, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 182, 2577,
	-1000, -1000, 182, 2574, -1000, 182, 2573, -1000, 181, 2570,
	-1000, -1000, 1810, 2568, -1000, -64, 2566, -1000, -1000, -64,
	2564, -1000, -7, -1000, -1000, -1000, 932, -1000, 36570, -1000,
	36570, 64564, 47430, 991, 725, 42189, 81711, -1000, -41, -1000,
	37885, 81711, -1000, 47430, 54711, -1000, 64133, 54286, -1000, -1000,
	1276, 2102, -1000, -1000, -1000, 991, 47430, 47430, 47430, -1000,
	63702, -1000, -1000, 1797, 1461, 2712, 1771, 58153, -1000, 1770,
	-1000, -1000, -1000, 2736, 2479, -1000, 43916, 59853, -1000, 59428,
	-1000, 59003, -1000, 58153, -1000, 58153, -1000, 2980, 2970, 2968,
	-1000, 2965, 2724, 81711, 2721, -1000, 2615, 1564, 1555, 70586,
	-1000, -1000, 70586, -1000, 70586, -1000, -1000, -1000, 2052, -1000,
	-1000, -1000, -1000, 58153, -1000, -1000, -1000, -1000, -1000, -1000,
	2477, -1000, 1495, -1000, 1715, -1000, 1273, -1000, -1000, 183,
	-1000, -1000, -2, -1000, 72711, -1000, -1000, 2139, -1000, 70586,
	-1000, 2118, 2471, 2476, 1371, 1949, 2155, -1000, 29434, 2127,
	31286, 1957, 306, -1000, -1000, 306, 306, 23890, -1000, -1000,
	82293, 82293, 16543, 1231, 31286, 31286, 31286, 31286, 31286, 31286,
	31286, 31286, 31286, 31286, 31286, 31286, 31286, 31286, 31286, 31286,
	31286, 31286, 31286, 31286, 31286, 31286, 31286, 31286, 31286, 31286,
	31286, 31286, 31286, 31286, 31286, 31286, 31286, 31286, 31286, 1922,
	31286, 1203, 31286, 31286, 31286, 31286, 1431, -1000, -1000, 1687,
	625, 1686, -1000, 2898, 2898, 2898, 81974, 81974, 669, 2964,
	860, -1000, 31286, -1000, 93, 31286, 16984, -1000, -1000, -1000,
	547, 9386, 2098, -1000, 546, 17450, -1000, -1000, -1000, 18358,
	728, 28968, 31286, 1011, 81711, 1306, 2884, 14783, 2495, 2358,
	-1000, 2899, -1000, -1000, 2884, -1000, -1000, -1000, -1000, 2884,
	1228, 1224, 2884, -1000, 2884, 2884, 721, 800, 798, 20676,
	20210, 19744, 19278, 797, 31286, 31286, 31286, 31286, 31286, 31286,
	31286, 31286, -1000, 28514, 28048, 27582, 32648, 27116, 31286, 18812,
	26650, 26184, 70586, 8, 2824, 31286, 232, -1000, 79870, -1000,
	232, 232, 718, -10, 81711, 2120, 2120, 35710, 1914, 1864,
	1864, 1864, -1000, 916, 11255, 916, 62848, 1878, 916, 916,
	317, 348, 545, 33990, 2496, 62848, 851, 717, 31, 30,
	29, -1000, -1000, 28, 27, -1000, -1000, 58153, 715, 16984,
	16543, 1322, -15, 314, 2238, 2236, 2177, -1000, 2133, 1427,
	-18, 1202, -111, -1000, 734, -21, -1000, 1279, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1015, 714, 712, 552, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	711, 1712, 708, 708, 708, -1000, -1000, -1000, 465, 707,
	344, 704, -1000, -1000, -1000, -1000, -1000, -1000, 2441, -36,
	58578, 934, -26, 1122, -2, -1000, -1000, -1000, 48284, 1160,
	-1000, 1674, -1000, -1000, -1000, -1000, -1000, -1000, 1299, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 999, -1000, 2912, -1000,
	-1000, 2896, 7, -1000, -1000, 16543, -1000, -5, 1601, -1000,
	49988, 2103, 2711, 2696, 1355, -1000, 1330, 2772, 53424, 2797,
	2819, 745, -1000, 2438, -1000, -1000, 958, 1494, 1197, 53424,
	1490, -1000, 82293, -1000, 2245, 2767, 1329, 1362, 1329, 1329,
	1318, -1000, 53424, 1195, -1000, 1733, -1000, 47430, -1000, 1191,
	-1000, -12, 2796, 2811, 731, -1000, 2415, 1190, -1000, -1000,
	58153, 16543, 2308, -1000, -33, 903, 6, 47855, 70586, 311,
	-1000, 31286, 93, 31286, 93, -1000, -1000, 2562, -1000, -1000,
	-1000, 2963, 1683, 2077, -1000, -1000, -1000, 703, 2008, 2403,
	70586, 2248, 1, 58153, -1000, 1490, 2007, -1000, -1000, 53855,
	-1000, -1000, 2539, 2538, 659, 2962, -1000, 1936, 2006, -1000,
	-1000, -1000, 72286, 1250, 2536, 1059, 332, 2821, -1000, 332,
	41331, -1000, 70586, -1000, -1000, 70586, -1000, -1000, -1000, 2959,
	-1000, 58153, -1000, -1000, 58153, -1000, 58153, -1000, 58153, -1000,
	58153, 58153, -1000, 70586, 47430, 47430, 47430, 5490, 49138, -34,
	-42, 544, -1000, 63277, 70586, 1057, 49563, 70586, 2672, 991,
	37885, -41, 991, 991, 903, -1000, 903, -1000, 58153, 2475,
	-1000, 991, 991, 991, -1000, -1000, -1000, -1000, 2956, 2954,
	-1000, -1000, -1000, 995, 58153, 70586, 58153, -1000, -1000, 70586,
	-1000, 70586, -1000, 995, 70586, 995, 70586, 995, 70586, -1000,
	-1000, -1000, -1000, -1000, -1000, 93, 31286, 1392, -1000, 2474,
	-1000, 2472, -1000, 51, -1000, -1000, -1000, -1000, 2275, 58153,
	58153, 58153, 58153, 70586, 58153, -1000, 53424, -1000, 2118, 2471,
	-1000, -1000, -1000, -1000, -1000, -1000, 1328, 1918, -1000, 2100,
	-1000, 1343, -1000, -1000, -1000, 81711, 538, -1000, -1000, 81711,
	1547, 1462, 58153, 2252, -1000, 2252, 2, -1000, 79535, 2099,
	58153, -1000, -1000, -1000, -1000, -1000, 949, 1236, 1236, 1258,
	1258, 1258, 1258, 2800, 1154, 380, 372, 490, 490, 4027,
	4027, 4027, 4027, 4027, 490, 415, 512, 512, 415, 415,
	415, 415, 415, 512, 512, 512, 490, 490, 490, 81974,
	4356, 7960, 31286, 31286, 1185, 1665, 625, 7504, 31286, 8578,
	8578, 8578, 8578, -1000, 1851, -1000, -1000, -1000, -1000, 2402,
	698, 32648, 32648, -1000, -1000, -1000, -1000, 17904, 31286, -1000,
	-1000, -1000, -1000, 25718, -1000, -1000, 5581, -238, 543, -188,
	18, -1000, 31286, 31286, 31286, 541, -1000, 310, 31286, 70586,
	-1000, 75869, 848, -39, -1000, -51, 1324, -1000, 31286, -1000,
	-1000, 1184, -1000, 1176, 1173, 1167, -1000, 697, 540, -1000,
	305, -1000, 1859, 696, 694, 539, -54, 535, 935, 930,
	530, 515, 513, 31286, -1000, -1000, -1000, -1000, -1000, 78959,
	-1000, -1000, 78912, -1000, -1000, 78624, -1000, -1000, 78336, -1000,
	-1000, -1000, 81448, 75606, 75315, 75268, 8905, 10594, 10256, -57,
	508, -1000, 2397, -188, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 499, -1000, 498, -1000, 81185, -188, 497, 5616,
	-1000, 32648, 32648, 32648, -1000, 494, -1000, 79582, -1000, 80922,
	25264, 25264, 25264, 489, 80659, 31286, -188, -65, -1000, -68,
	-1000, -1000, 693, -70, 1005, 24798, 34850, 16543, -1000, 1005,
	1005, 31286, -1000, 31286, 2130, -1000, -1000, -1000, 2128, 1787,
	2120, 35710, -1000, -1000, -1000, -1000, 62848, -1000, 2863, 2445,
	-1000, 62848, -1000, -1000, 70586, 577, -1000, 62848, 62848, 16543,
	916, -1000, 916, 62848, 641, -1000, -1000, -1000, -1000, -1000,
	476, 38753, 18, 298, 991, -1000, 16543, 2226, 2226, 2226,
	2226, -1000, -1000, 70586, 2839, -1000, 1719, -1000, 82293, -1000,
	859, 1098, 689, -1000, 2884, 2884, -1000, 2884, 70586, 159,
	24344, -1000, 1160, -1000, -1000, 1442, -1000, 1696, -1000, 1158,
	-1000, -1000, -1000, 24344, -1000, 1814, 70586, 70586, 58153, -1000,
	-1000, 2001, 71861, 2000, 82293, 70586, -1000, -1000, 688, 686,
	2094, 2091, 70586, 70586, 2090, 71436, 71011, 70586, 1820, 31286,
	1906, 1723, 93, 93, -1000, -1000, 93, 684, 1244, 58153,
	58153, 58153, 1655, -1000, -1000, -1000, -1000, -1000, 52999, -1000,
	-1000, 2894, -1000, 1329, -1000, -1000, -1000, 1329, 1490, 1595,
	58153, 43491, 996, 70586, 1791, 93, 93, -1000, -1000, 93,
	683, 16543, 1603, -1000, 991, 2386, -1000, 2308, -1000, -1000,
	14344, 81711, -1000, 81711, -1000, 70586, -1000, 1021, 70586, 49563,
	985, 2535, 40473, -36, 991, 47430, 58153, 1, -1000, 1490,
	2534, 577, 1999, -1000, -1000, 47430, 47430, 2948, 682, 2947,
	-1000, 58153, 2533, 1933, 1992, 2594, 892, 70586, 1005, 35710,
	1624, -1000, 39184, 1042, 70586, 1501, 138, -1000, -1000, -1000,
	46, 70586, -1000, 2946, -1000, -1000, 182, 182, 182, -1000,
	181, 1810, -1000, -64, -64, -1000, -1000, 5490, 5490, 991,
	0, 681, -1000, 911, 905, 37446, 47430, -71, -1000, -1000,
	-1000, -1000, -1000, 58153, 70586, 795, 2297, 70586, -73, -1000,
	290, 680, -1000, -1000, 991, 2382, -1000, -1000, 1000, -1000,
	1249, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	20, -36, -36, -1000, 995, -1000, 995, -1000, 995, -1000,
	81711, -1000, 1374, 1369, 70586, -1000, 16543, 70586, 58153, 16543,
	58153, 2469, 2467, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1070, -1000, 1547, -1000, 31286, -1000, -1000, -1000, -1000,
	2044, -1000, -1, 23890, 1965, -1000, -1000, 58153, 17, 31286,
	31286, 6208, 5250, 31286, 32648, 32648, -1000, 31286, 4961, -1000,
	-1000, -1000, -1000, -1000, 2377, 679, 31286, 82293, 5101, 4638,
	-1000, 472, 9744, 415, -1000, 31286, -1000, 471, 23436, -1000,
	80133, -20, -80, -1000, 13905, -188, -81, -1000, -1000, 858,
	-1000, 2542, -1000, 31286, 80396, 2030, 1808, 1633, 1404, 2884,
	2917, 13466, -1000, 41760, 1007, 1884, -1000, -1000, 2884, 960,
	-1000, -1000, -1000, 960, -1000, 78289, -1000, -1000, -1000, -1000,
	82293, 82293, 31286, 31286, -1000, 31286, 31286, 31286, -1000, -1000,
	31286, -1000, -1000, 2376, 31286, -1000, 82293, 82293, 32648, 32648,
	32648, 32648, 32648, 32648, 32648, 32648, 32648, 32648, 32648, 32648,
	32648, 32648, 32648, 32648, 32648, 32648, 32648, 2207, 32648, 2874,
	2874, 2874, -1000, 2448, 2376, 31286, 31286, 82293, 470, 469,
	466, -1000, 31286, -188, -1000, -1000, 5490, -1000, 2357, -1000,
	31286, -1000, -76, -1000, 2496, -1000, -1000, 2357, 2357, -88,
	81711, 35710, 35710, -1000, 678, 31286, 2115, -1000, -1000, 843,
	-236, -1000, 904, -1000, -1000, -1000, -1000, -1000, 577, -1000,
	-1000, -1000, 287, 62848, 62848, 842, -1000, -89, -1000, -1000,
	-90, -1000, 2820, 447, 16543, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -36, 1909, 2909, -1000, 2889, 853, 841,
	2884, 445, 440, 439, -36, 70586, -1000, -2, -1000, -1000,
	-1000, 31286, -1000, -1000, 2705, 1163, 1159, -1000, 2531, -1000,
	1991, -1000, 1046, -1000, 1436, -1000, 31286, 31286, 677, 673,
	1651, 2945, 1056, 2529, 1810, 2528, 1810, -1000, -1000, 977,
	-1000, 81711, 671, 666, -1000, -5, 1498, 998, -1000, -1000,
	31286, 31286, 62423, -1000, 388, 2715, 16, -1000, 1156, -1000,
	-1000, -1000, -1000, 1490, 1150, -1000, -1000, -1000, -1000, -1000,
	-1000, 997, -1000, -1000, 31286, -1000, -12, 1143, -1000, 47430,
	991, -1000, 2944, 2943, 2942, 436, -91, -27, 82293, 2817,
	1942, 643, 58153, 940, -1000, 2863, -1000, -1000, -1000, 58153,
	2815, 2526, 996, -1000, -1000, 2941, -1000, 1051, 16543, 58153,
	2524, 2063, 892, 48713, -1000, 996, 1884, -125, -1000, 1501,
	22970, 2699, -96, -1000, -1000, -1000, 1005, 41331, 35710, 31286,
	2939, -98, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 61998, 61998, 47430, 47430, 47430, 991, 70586, 70586, 49563,
	2937, 661, 70586, 70586, 660, -1000, 70586, 70586, 2936, 47430,
	-1000, 93, -1000, 1903, 58153, 13027, -1000, -1000, -1000, -1000,
	-1000, 995, -1000, -1000, 1800, 1952, 1800, 1533, 1512, -1000,
	1908, 78001, -1000, -1000, -1000, 2169, 2722, 16543, 2814, 8578,
	31286, 31286, 4002, 4549, 4398, 8578, 31286, 31286, 82293, 82175,
	-99, 31286, 31286, -1000, 31286, 838, 81711, 2877, 31286, 435,
	434, -1000, -1000, -1000, -1000, -1000, -1000, 81711, 31286, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 433, -1000, 253, -1000,
	-1000, -1000, 74836, -1000, 31286, 432, 431, -1000, -1000, -1000,
	429, 428, 280, 6934, 77713, 77666, 77378, 81711, 2448, 81711,
	-1000, -1000, 947, 947, 1308, 1308, 1308, 1308, 2874, 623,
	468, 1048, 462, 462, 462, 430, 1074, 1074, 462, 462,
	462, 2373, 2113, 658, 5668, -1000, -1000, 81711, 81711, 413,
	-1000, -1000, -1000, -188, 397, 2351, 2766, 81711, -1000, 35710,
	2351, 2351, -1000, -1000, 1787, 70586, 81711, 35710, -1000, 2445,
	-1000, 11706, -1000, 16543, -1000, -1000, -1000, -1000, 2863, -1000,
	38753, -1000, 655, -1000, 47, -1000, -1000, 837, 2935, 847,
	394, -1000, -1000, -1000, -36, 81711, 70586, 70586, 70586, 2523,
	-1000, 2048, -1000, 77090, -105, -1000, 79535, 31286, 70586, -1000,
	1720, 2140, 1086, -1000, 2739, 70586, -1000, 70586, -1000, -1000,
	70586, 70586, 58153, 2513, -106, 81711, -56, -1000, 902, -1000,
	1326, -1000, 12588, 58153, 58153, 2512, -108, 16543, -64, -1000,
	-1000, -1000, -1000, 2286, -1000, 60709, 1940, 93, -1000, 61569,
	2933, 654, -1000, 1901, -1000, 836, 1490, 93, 58153, -1000,
	-1000, 653, 70586, 1931, 647, 16543, 2066, 892, 48713, -1000,
	1250, 2155, -1000, -82, -1000, 588, 93, 1884, -1000, -125,
	81711, -1000, 899, -1000, -113, -1000, -1000, 393, -1000, 2667,
	2666, -1000, -1000, 31286, 645, 644, 70586, 2665, -1000, -1000,
	-115, -1000, 2005, -1000, -1000, -1000, -1000, -1000, 16543, 1467,
	-1000, 631, 630, -1000, -1000, -1000, -1000, -1000, 2722, 8578,
	8578, 31286, 31286, 31286, 8578, 82175, -118, -1000, 8578, 8578,
	-188, -1000, -1000, 80133, -1000, -1000, 81711, -1000, 12149, 1822,
	-1000, 77043, -1000, -1000, -1000, -1000, 31286, 31286, -1000, -1000,
	-1000, -1000, -1000, 32648, 2372, 629, 82293, -1000, -1000, 1002,
	31286, 31286, 2496, 1002, 1002, -1000, -120, -1000, -1000, -1000,
	2863, 47, -1000, -1000, 2932, 16543, 845, -1000, 2930, -1000,
	-1000, -1000, -1000, 70586, -1000, 70586, -1000, 16543, 70586, 2380,
	1971, -1000, -1000, 2089, 628, 32648, 58153, 844, 2378, 1594,
	31286, 1965, -126, -131, 1969, -1000, -1000, 1968, 31286, -1000,
	82293, 626, 1810, 1810, -133, -134, -1000, 31286, 1132, 70586,
	22516, -1000, 2928, 2715, -1000, -1000, 31286, 1128, -1000, 1791,
	2321, -1000, -1000, -1000, -1000, 2086, -1000, -1000, 70586, 2083,
	992, -136, -1000, 897, 896, -1000, 49563, 985, 966, -1000,
	-1000, -1000, 577, 31286, -1000, 58153, 31286, 1930, -1000, 892,
	48713, -1000, 2594, 1501, -1000, 2618, 70586, 2695, -1000, 2155,
	625, -1000, 991, 610, 607, -139, 31286, 31286, -144, 605,
	991, -132, -1000, 826, 824, -1000, -1000, 58153, 58153, 31286,
	31286, -1000, 8578, 8578, 8578, -1000, 379, -1000, -1000, 1884,
	2765, -1000, 76755, 76467, 529, 32648, 82293, -146, -1000, 70586,
	81711, -188, -1000, -1000, -1000, 834, -1000, 2926, -1000, -1000,
	1807, -1000, -1000, -1000, 70586, 1989, -1000, 1055, 31286, 5668,
	604, 31286, -1000, -1000, 2283, 2408, 2286, 601, -1000, -1000,
	-1000, -1000, 1049, 1659, -1000, -1000, 81711, 2746, 31286, -1000,
	-1000, 600, 599, 81711, 596, 885, 2371, -1000, -1000, -1000,
	81711, 593, 985, -1000, 1842, 1940, 586, -1000, -1000, -1000,
	2186, -1000, 61569, 33102, 33102, 378, 2813, 966, -1000, 2857,
	-1000, 2807, -149, 1051, -151, 58153, 48713, -1000, 2063, -1000,
	1259, -154, 70586, 1501, -1000, -1000, 47430, 47430, 1049, -157,
	-162, -1000, 47430, -1000, 2005, -1000, 70586, -1000, 70586, -1000,
	-1000, -164, -165, -1000, 1858, 31286, -1000, -1000, 529, -181,
	-1000, -167, -1000, 2806, -1000, -1000, -1000, -1000, 2520, 2349,
	76420, 2039, 70586, 76132, 2404, -1000, -1000, 1791, 70586, -1000,
	2340, 58153, 1050, 16543, -182, 1800, 1800, 31286, 22062, 1832,
	31286, -1000, 58153, 70586, -1000, 2664, -1000, -1000, -1000, 2286,
	93, -1000, -1000, 93, 1049, 584, 1594, 582, -1000, 2066,
	1350, -1000, 1005, -1000, -1000, -183, -189, 1594, 1049, -1000,
	-190, -1000, -195, -196, -1000, -1000, 358, 32194, 32194, 32194,
	-188, -1000, 70586, 581, 2504, 994, -1000, 1923, 1567, 345,
	1084, -1000, -1000, 2378, -197, 993, 577, -1000, 31286, -1000,
	1049, -204, -1000, 1037, -205, -1000, 1036, -206, -1000, 2368,
	-1000, -207, 573, -212, -1000, -1000, -1000, 1791, 992, -1000,
	1594, 31286, 2286, 31286, -1000, 41331, -1000, 991, 991, 2286,
	1594, 991, -1000, -1000, -1000, 2590, -1000, 33541, 1857, 1503,
	79247, 2590, 2590, -1000, -1000, 70586, 2782, -1000, 1929, 1925,
	1378, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2781,
	2039, 81711, 2286, -1000, 1800, 2317, -1000, 1800, 2367, -1000,
	1773, -1000, 70586, -1000, 70586, 985, -1000, 2286, -213, 1791,
	-215, -184, -1000, -1000, 1791, 2286, -1000, -1000, 1598, 2832,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 884, -1000,
	2651, -1000, 1067, 1823, 1823, 883, 1923, -1000, -1000, 571,
	-1000, 570, -1000, -221, -1000, -1000, 1791, 1049, 1004, 1594,
	-1000, -1000, 1791, 1499, -1000, -1000, 1870, 31740, 31286, -1000,
	2843, -1000, -1000, 2173, -1000, 31286, 2378, 31286, 31286, 1798,
	1004, 1594, -1000, 2925, 2286, -1000, -1000, -1000, -1000, 81711,
	-1000, -1000, -1000, 81711, -1000, -222, -223, -1000, -1000, -1000,
	-1000, 2286, -1000, 1791, 1791, 1127, 1791, 1004, -1000, 563,
	1004, -1000, 31286, -1000, -229, 1791, -1000,
}
var sqlPgo = [...]int{

	0, 3551, 3550, 3549, 3547, 3546, 3544, 3536, 3535, 3532,
	3530, 3529, 3527, 3526, 3525, 3523, 3522, 3521, 3520, 3519,
	3518, 3517, 3515, 3512, 3511, 3510, 3509, 3498, 3497, 3494,
	3492, 3491, 3486, 3485, 3482, 3481, 3477, 3476, 3475, 3468,
	3466, 3464, 3462, 3461, 3460, 3459, 3455, 3454, 30, 3452,
	3451, 3450, 3449, 3445, 3443, 3442, 3441, 3437, 3436, 3432,
	3429, 3428, 3425, 3424, 3421, 3420, 40, 3418, 229, 3417,
	3412, 3407, 3406, 3405, 3404, 3399, 3395, 3393, 3389, 228,
	3387, 128, 3383, 3381, 3379, 3378, 3375, 227, 3374, 3372,
	3371, 3369, 3368, 3367, 3366, 3364, 156, 203, 3357, 196,
	3356, 3353, 3351, 3350, 3347, 3345, 3343, 3342, 3341, 3340,
	207, 3339, 226, 3334, 3330, 3329, 3328, 3326, 3325, 3324,
	3320, 3319, 3313, 3312, 3311, 3310, 3309, 3308, 3305, 3303,
	3302, 3301, 3300, 3298, 3295, 3293, 3291, 3290, 3288, 3285,
	224, 184, 3284, 3283, 223, 222, 3279, 136, 108, 106,
	94, 3278, 97, 57, 3276, 15, 202, 206, 6646, 186,
	3275, 3272, 3269, 195, 152, 3268, 192, 3267, 3266, 3265,
	3264, 73, 69, 139, 145, 134, 131, 166, 3263, 3262,
	75, 54, 52, 28, 107, 137, 3261, 3259, 3256, 2369,
	93, 3255, 3254, 216, 193, 3253, 1607, 3251, 133, 76,
	103, 10, 85, 3247, 117, 37, 3245, 164, 43, 3243,
	127, 70, 29, 6231, 5808, 3242, 82, 233, 79, 199,
	197, 187, 168, 167, 141, 122, 3240, 210, 3238, 99,
	159, 3235, 3234, 3233, 58, 155, 80, 3230, 14, 2,
	130, 31, 96, 9, 3229, 11, 3228, 3227, 3226, 3224,
	24, 132, 3223, 116, 66, 3222, 21, 3220, 189, 165,
	3219, 194, 101, 3218, 3217, 214, 162, 153, 3216, 65,
	182, 3214, 3213, 3212, 3211, 3210, 102, 22, 104, 3209,
	3208, 110, 191, 154, 3205, 49, 3203, 143, 78, 112,
	231, 100, 190, 92, 179, 148, 181, 3201, 3200, 3197,
	149, 3196, 3194, 175, 119, 3191, 3190, 232, 35, 61,
	185, 62, 3186, 126, 3185, 161, 3184, 3183, 3182, 225,
	142, 172, 6, 1, 74, 98, 23, 12, 183, 120,
	208, 88, 3181, 3434, 1280, 1314, 53, 113, 95, 55,
	90, 129, 218, 56, 3180, 3179, 36, 3178, 3176, 3172,
	3171, 144, 3170, 3168, 3166, 111, 146, 171, 3165, 121,
	71, 18, 87, 220, 219, 84, 176, 170, 215, 3164,
	147, 3161, 67, 135, 3160, 158, 212, 123, 3159, 173,
	118, 3158, 174, 3154, 3153, 3151, 3149, 3148, 3147, 3146,
	89, 3145, 114, 3144, 3141, 151, 188, 138, 91, 34,
	3137, 64, 38, 3136, 157, 33, 3134, 825, 26, 0,
	7782, 5513, 7192, 3132, 4048, 3131, 163, 109, 3128, 3124,
	3122, 83, 3120, 63, 3114, 3113, 50, 3109, 20, 7,
	8, 16, 13, 1521, 115, 3105, 3104, 86, 105, 124,
	3103, 230, 180, 3101, 3100, 3099, 72, 3097, 27, 3096,
	25, 3092, 3091, 32, 4, 17, 3090, 3087, 198, 3085,
	201, 3084, 3080, 2843, 3077, 221, 68, 3075, 217, 3073,
	140, 169, 3071, 3070, 3066, 3063, 213, 3061, 3060, 19,
	5, 3056, 3055, 3054, 160, 3, 2697, 3048, 3047, 60,
	3046, 3045, 150,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 3, 3, 3, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 12, 12, 7, 7, 8, 8, 8, 36,
	36, 10, 10, 9, 9, 9, 11, 11, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 14, 14, 26,
	26, 15, 15, 28, 28, 16, 16, 29, 29, 465,
	465, 19, 31, 20, 32, 13, 466, 466, 466, 466,
	24, 21, 33, 22, 22, 22, 22, 22, 151, 151,
	151, 151, 18, 18, 27, 27, 174, 174, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	464, 464, 176, 176, 175, 170, 170, 467, 467, 177,
	177, 177, 179, 179, 37, 37, 37, 95, 95, 95,
	96, 96, 97, 97, 152, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 83, 83, 407, 407, 408, 408,
	147, 147, 148, 148, 148, 148, 149, 149, 150, 150,
	150, 51, 39, 39, 39, 39, 39, 39, 39, 40,
	40, 40, 40, 41, 41, 41, 41, 41, 41, 42,
	42, 42, 42, 42, 42, 49, 49, 49, 49, 141,
	141, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 474, 474, 475, 475, 476, 476, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 63, 63, 252, 252, 228, 228, 64, 64,
	64, 65, 65, 66, 66, 53, 53, 460, 460, 266,
	266, 374, 374, 68, 68, 286, 286, 69, 69, 69,
	69, 69, 69, 70, 70, 70, 70, 70, 70, 70,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	77, 77, 77, 78, 78, 78, 75, 75, 75, 73,
	73, 73, 72, 72, 72, 76, 76, 76, 74, 74,
	74, 267, 267, 79, 79, 79, 79, 79, 79, 79,
	79, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 376, 376, 80, 80,
	80, 344, 344, 84, 84, 84, 301, 301, 85, 85,
	85, 85, 85, 86, 86, 86, 86, 98, 98, 98,
	98, 463, 463, 259, 259, 193, 193, 193, 193, 91,
	91, 91, 91, 92, 92, 92, 93, 93, 146, 146,
	104, 104, 104, 104, 104, 103, 103, 103, 103, 103,
	103, 43, 43, 43, 44, 44, 45, 45, 46, 46,
	47, 47, 48, 48, 48, 48, 48, 106, 106, 470,
	470, 108, 105, 105, 105, 107, 107, 107, 107, 109,
	110, 110, 110, 110, 110, 110, 110, 110, 111, 111,
	401, 401, 275, 275, 399, 399, 415, 415, 400, 400,
	232, 232, 232, 232, 232, 233, 233, 233, 406, 406,
	406, 406, 406, 406, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 131, 131, 131, 140,
	140, 140, 140, 140, 140, 140, 133, 133, 133, 121,
	121, 113, 113, 113, 113, 113, 117, 117, 117, 117,
	117, 117, 117, 117, 114, 114, 123, 123, 123, 123,
	123, 118, 118, 120, 120, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 115, 115, 115, 115, 125, 125,
	125, 125, 307, 307, 307, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 136, 136, 136, 136, 136,
	136, 358, 358, 132, 132, 132, 132, 135, 135, 135,
	135, 291, 291, 129, 129, 129, 130, 130, 130, 134,
	134, 137, 137, 137, 137, 116, 116, 116, 478, 478,
	478, 138, 138, 128, 128, 139, 139, 139, 139, 139,
	139, 139, 139, 127, 127, 127, 126, 126, 126, 126,
	119, 461, 461, 458, 458, 458, 458, 458, 458, 458,
	459, 459, 462, 462, 89, 89, 89, 58, 58, 155,
	155, 155, 155, 153, 153, 154, 154, 59, 59, 479,
	479, 479, 468, 468, 468, 469, 469, 469, 469, 469,
	469, 234, 234, 235, 235, 325, 325, 325, 325, 325,
	238, 238, 178, 178, 178, 241, 242, 242, 239, 239,
	240, 240, 240, 244, 244, 243, 246, 246, 245, 324,
	422, 422, 424, 424, 424, 424, 424, 424, 424, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	420, 420, 420, 421, 416, 416, 417, 417, 417, 417,
	236, 236, 237, 237, 237, 237, 418, 419, 257, 257,
	361, 423, 423, 425, 425, 427, 480, 480, 480, 480,
	480, 480, 481, 481, 323, 323, 322, 322, 250, 250,
	428, 428, 428, 428, 429, 429, 429, 429, 429, 432,
	431, 430, 430, 430, 430, 430, 354, 354, 354, 62,
	62, 62, 288, 288, 287, 287, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 143, 143, 60, 60, 60, 184, 184, 185, 185,
	57, 57, 57, 483, 483, 61, 61, 61, 61, 484,
	484, 67, 67, 67, 67, 67, 67, 56, 56, 56,
	56, 56, 485, 485, 308, 308, 306, 306, 256, 256,
	360, 197, 197, 171, 171, 171, 23, 25, 25, 17,
	17, 34, 34, 35, 35, 30, 30, 471, 471, 472,
	472, 90, 90, 94, 94, 94, 102, 102, 142, 142,
	142, 142, 142, 142, 142, 38, 38, 38, 38, 50,
	50, 50, 50, 100, 487, 487, 487, 101, 101, 486,
	486, 192, 192, 192, 192, 194, 194, 319, 319, 320,
	320, 488, 488, 321, 321, 321, 321, 187, 186, 188,
	188, 55, 55, 55, 180, 180, 181, 181, 182, 182,
	183, 183, 489, 489, 87, 87, 87, 145, 145, 227,
	227, 227, 315, 315, 315, 251, 251, 202, 202, 318,
	318, 316, 316, 316, 316, 285, 285, 285, 144, 144,
	264, 264, 277, 277, 278, 278, 371, 371, 279, 99,
	99, 158, 158, 156, 156, 156, 156, 156, 156, 156,
	156, 163, 163, 164, 164, 165, 165, 166, 167, 167,
	167, 167, 268, 268, 168, 168, 168, 157, 157, 157,
	159, 159, 159, 159, 159, 159, 159, 162, 162, 162,
	162, 169, 169, 169, 161, 161, 439, 439, 439, 441,
	441, 442, 438, 438, 440, 440, 482, 482, 290, 290,
	290, 248, 249, 247, 247, 254, 254, 253, 255, 255,
	359, 359, 359, 172, 172, 172, 282, 282, 282, 282,
	283, 283, 311, 311, 309, 309, 309, 310, 310, 312,
	312, 312, 313, 313, 314, 314, 281, 281, 340, 340,
	160, 160, 160, 261, 261, 261, 262, 262, 331, 331,
	331, 331, 331, 331, 332, 332, 330, 330, 330, 330,
	362, 362, 362, 362, 362, 362, 362, 362, 362, 363,
	364, 364, 263, 263, 365, 317, 317, 456, 456, 456,
	457, 457, 357, 357, 366, 366, 366, 366, 366, 366,
	355, 355, 356, 356, 372, 373, 373, 294, 294, 294,
	294, 292, 292, 295, 295, 295, 295, 293, 293, 367,
	367, 367, 367, 284, 284, 368, 368, 368, 368, 369,
	326, 327, 327, 377, 377, 377, 377, 392, 260, 260,
	260, 260, 260, 490, 490, 378, 378, 378, 378, 378,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 382, 382, 382, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 391, 391, 391, 391, 391, 383, 383,
	388, 388, 389, 389, 389, 384, 385, 390, 390, 390,
	390, 491, 491, 394, 394, 386, 386, 386, 386, 386,
	386, 386, 386, 386, 380, 380, 380, 387, 387, 387,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 302, 302, 304, 304, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 335, 335, 335, 335, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	433, 433, 433, 433, 433, 433, 433, 433, 436, 436,
	437, 437, 434, 434, 434, 434, 434, 434, 434, 434,
	434, 434, 434, 434, 434, 434, 434, 434, 434, 434,
	434, 434, 434, 434, 434, 435, 435, 435, 435, 435,
	435, 435, 435, 435, 435, 435, 435, 435, 435, 435,
	435, 435, 435, 435, 435, 435, 435, 435, 435, 435,
	435, 435, 435, 435, 435, 435, 435, 435, 435, 435,
	435, 443, 443, 444, 444, 446, 446, 447, 447, 448,
	449, 449, 449, 450, 451, 451, 445, 445, 452, 452,
	452, 452, 453, 453, 454, 454, 454, 454, 454, 455,
	455, 455, 455, 455, 346, 346, 347, 347, 353, 353,
	353, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 195, 195, 195,
	195, 195, 273, 273, 271, 271, 271, 274, 274, 272,
	272, 270, 270, 269, 269, 343, 343, 341, 341, 345,
	345, 296, 296, 393, 393, 393, 393, 393, 393, 393,
	393, 297, 297, 297, 305, 298, 298, 299, 299, 299,
	299, 299, 337, 338, 300, 300, 300, 339, 339, 348,
	352, 352, 351, 350, 350, 349, 349, 328, 328, 329,
	329, 280, 280, 492, 492, 276, 276, 370, 370, 370,
	370, 230, 230, 265, 265, 229, 229, 222, 222, 223,
	223, 223, 223, 258, 258, 395, 395, 395, 396, 397,
	398, 342, 342, 212, 211, 199, 200, 210, 209, 208,
	198, 201, 205, 206, 207, 203, 204, 218, 217, 216,
	214, 215, 375, 224, 224, 225, 225, 225, 226, 226,
	226, 226, 196, 196, 219, 219, 220, 221, 221, 213,
	213, 213, 189, 189, 189, 190, 190, 191, 191, 405,
	405, 403, 403, 403, 404, 404, 404, 404, 402, 402,
	402, 402, 402, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 411, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 414, 414,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 0, 1, 1, 2, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 3, 1, 1, 3, 4,
	6, 1, 3, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 5, 5, 6, 6, 4, 4, 4, 4, 3,
	4, 4, 4, 7, 7, 9, 8, 9, 5, 3,
	5, 7, 4, 12, 4, 12, 1, 3, 5, 5,
	2, 5, 3, 6, 4, 6, 5, 6, 6, 4,
	8, 3, 4, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 2, 0, 1,
	1, 0, 2, 0, 6, 7, 2, 5, 6, 2,
	1, 3, 1, 3, 1, 6, 4, 9, 7, 12,
	12, 12, 9, 2, 7, 2, 1, 1, 1, 3,
	3, 0, 3, 1, 3, 1, 1, 3, 2, 5,
	0, 6, 1, 2, 1, 2, 1, 2, 2, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 1,
	1, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	3, 3, 4, 3, 4, 7, 4, 4, 4, 3,
	5, 7, 4, 3, 3, 4, 3, 3, 3, 3,
	3, 2, 0, 1, 0, 1, 0, 3, 3, 3,
	3, 3, 6, 4, 4, 4, 3, 5, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 1, 2,
	1, 2, 7, 3, 2, 0, 1, 3, 3, 1,
	0, 1, 2, 2, 1, 6, 5, 1, 2, 1,
	3, 2, 0, 9, 3, 2, 0, 2, 2, 2,
	2, 2, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 6, 3, 4, 6, 3, 4, 6, 3, 4,
	6, 3, 4, 6, 3, 3, 5, 3, 3, 5,
	3, 1, 3, 2, 2, 5, 3, 3, 6, 6,
	3, 1, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 6, 4, 7, 2, 6, 4, 7,
	2, 1, 1, 1, 3, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 2, 4, 3, 2, 2,
	1, 2, 1, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 1,
	1, 5, 3, 2, 6, 3, 3, 4, 4, 3,
	1, 3, 2, 3, 3, 1, 3, 1, 2, 1,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	2, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 2, 3, 3, 1,
	1, 1, 1, 1, 2, 2, 5, 7, 3, 3,
	3, 4, 5, 5, 5, 3, 4, 4, 3, 4,
	4, 3, 4, 4, 5, 3, 5, 5, 5, 7,
	3, 3, 3, 4, 3, 5, 3, 6, 5, 6,
	3, 5, 6, 3, 4, 3, 4, 3, 3, 4,
	4, 5, 0, 1, 1, 3, 2, 4, 3, 3,
	5, 4, 3, 5, 3, 5, 4, 6, 4, 6,
	4, 1, 0, 3, 4, 4, 5, 7, 5, 3,
	3, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 4, 3, 3, 3, 3, 4, 3, 1, 1,
	1, 2, 3, 2, 3, 6, 6, 7, 9, 7,
	9, 3, 4, 10, 10, 3, 5, 5, 5, 3,
	5, 2, 0, 1, 1, 1, 1, 3, 2, 2,
	2, 1, 2, 0, 3, 3, 2, 10, 13, 0,
	2, 4, 3, 3, 3, 1, 3, 9, 12, 0,
	2, 3, 1, 1, 0, 1, 2, 2, 2, 2,
	1, 1, 0, 1, 3, 1, 1, 1, 1, 3,
	8, 0, 1, 1, 0, 2, 1, 0, 1, 0,
	9, 9, 3, 1, 3, 7, 1, 3, 11, 3,
	2, 0, 3, 1, 2, 2, 3, 2, 6, 2,
	1, 1, 2, 8, 4, 2, 5, 5, 5, 2,
	9, 10, 6, 5, 3, 1, 5, 8, 6, 11,
	3, 0, 2, 4, 3, 3, 1, 5, 1, 3,
	1, 2, 0, 1, 2, 2, 0, 1, 3, 3,
	2, 2, 1, 1, 4, 0, 6, 0, 3, 0,
	2, 2, 2, 0, 1, 1, 2, 2, 0, 3,
	3, 2, 1, 1, 2, 2, 1, 2, 1, 5,
	8, 4, 1, 0, 1, 2, 2, 1, 2, 3,
	3, 2, 2, 3, 2, 2, 2, 2, 2, 3,
	1, 4, 2, 4, 7, 3, 1, 0, 3, 3,
	3, 6, 3, 1, 1, 8, 11, 7, 5, 0,
	1, 6, 7, 6, 5, 3, 4, 15, 18, 14,
	17, 4, 0, 2, 2, 0, 1, 0, 1, 3,
	3, 2, 0, 1, 1, 0, 6, 4, 6, 6,
	8, 6, 8, 6, 8, 6, 8, 1, 0, 2,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 0, 2, 2, 1,
	0, 1, 3, 2, 0, 2, 1, 1, 0, 1,
	3, 1, 0, 1, 1, 1, 1, 2, 3, 2,
	2, 8, 11, 3, 3, 0, 3, 0, 3, 0,
	3, 0, 1, 0, 6, 7, 3, 6, 3, 1,
	3, 1, 1, 4, 2, 1, 3, 1, 3, 8,
	5, 3, 4, 3, 0, 2, 2, 0, 10, 3,
	2, 0, 1, 3, 1, 1, 3, 3, 5, 1,
	1, 3, 3, 1, 2, 4, 4, 2, 3, 5,
	5, 1, 3, 1, 0, 1, 2, 3, 2, 4,
	2, 3, 0, 2, 0, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 8, 8, 8,
	2, 4, 4, 4, 2, 2, 2, 2, 3, 1,
	3, 6, 1, 0, 1, 0, 1, 0, 1, 1,
	0, 1, 5, 1, 0, 1, 0, 3, 1, 3,
	3, 4, 5, 2, 2, 0, 2, 2, 1, 1,
	1, 0, 1, 0, 2, 2, 5, 2, 3, 1,
	3, 0, 1, 1, 1, 1, 3, 0, 2, 0,
	4, 2, 5, 3, 2, 0, 1, 3, 3, 5,
	1, 1, 1, 1, 1, 3, 2, 4, 4, 0,
	4, 4, 3, 4, 1, 5, 3, 4, 5, 5,
	1, 5, 1, 3, 2, 0, 3, 0, 2, 3,
	1, 3, 2, 0, 3, 5, 6, 4, 6, 4,
	3, 2, 1, 0, 5, 1, 0, 2, 2, 2,
	1, 1, 0, 1, 1, 1, 0, 4, 2, 1,
	2, 2, 4, 1, 3, 1, 2, 3, 2, 2,
	2, 1, 0, 2, 5, 7, 2, 1, 2, 4,
	3, 5, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	5, 4, 1, 2, 1, 4, 1, 1, 2, 1,
	1, 1, 1, 1, 0, 1, 2, 5, 1, 4,
	2, 5, 1, 4, 3, 3, 0, 1, 2, 4,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 1, 0, 1, 4, 1, 3, 3,
	3, 5, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 3, 5, 4, 6, 3, 5, 4, 6, 4,
	6, 5, 7, 3, 3, 3, 3, 3, 4, 3,
	2, 4, 2, 3, 3, 4, 3, 4, 3, 4,
	5, 6, 6, 7, 6, 7, 6, 7, 3, 4,
	4, 1, 3, 1, 3, 3, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 5, 6,
	6, 7, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 6, 2, 1, 1, 1, 1, 1, 2, 1,
	5, 5, 3, 1, 1, 1, 2, 2, 2, 4,
	3, 5, 6, 8, 6, 5, 4, 3, 4, 1,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 6, 6, 8, 8, 6, 4,
	6, 6, 6, 4, 1, 3, 3, 3, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 3, 4, 3, 4, 3, 4, 3, 4,
	4, 3, 6, 5, 5, 5, 4, 4, 3, 4,
	3, 5, 0, 5, 0, 2, 0, 1, 3, 3,
	2, 2, 0, 6, 1, 0, 3, 0, 3, 3,
	3, 0, 1, 4, 2, 2, 2, 2, 2, 3,
	2, 2, 3, 0, 4, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 2, 3, 1, 2, 3, 2, 3, 2,
	3, 1, 0, 1, 3, 1, 3, 3, 3, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 3, 1, 2, 3, 0, 3, 3, 2,
	2, 1, 2, 2, 3, 2, 1, 1, 1, 5,
	1, 2, 4, 2, 0, 1, 0, 3, 5, 1,
	0, 1, 2, 1, 0, 1, 3, 3, 2, 1,
	1, 1, 3, 1, 3, 3, 1, 1, 1, 1,
	5, 3, 1, 1, 3, 1, 2, 2, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 7, 1, 7,
	5, 3, 1, 1, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 0, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 468, -81, -51, -49, -84, -85, -69,
	-86, -80, -98, -102, -90, -104, -142, -3, -37, -39,
	-52, -68, -70, -79, -88, -87, -89, -91, -95, -94,
	-83, -43, -99, -103, -112, -143, -144, -145, 85, 71,
	126, 107, 112, 159, 295, 325, 335, 319, -107, -108,
	354, -38, -50, -101, -100, -4, -10, 27, 41, -40,
	-41, -42, 56, -60, -57, -54, -63, -473, 87, -440,
	-71, -74, -76, -477, 117, 132, 176, 287, -92, -93,
	321, 323, 133, -45, -44, 127, -156, -158, -105, -106,
	-146, -113, -114, -115, -116, -117, -118, -119, -120, -121,
	-122, -123, -124, -125, -126, -127, -128, -129, -130, -131,
	-132, -133, -134, -135, -136, -137, -138, -139, 358, 405,
	42, 368, 72, 120, 329, 21, -5, -6, -7, -8,
	-9, -11, -12, -25, -53, -55, -56, -58, -59, -67,
	-61, -62, -439, -72, -73, -75, -77, -78, 320, -159,
	-157, 465, 418, -14, -19, -20, -15, -16, -18, -21,
	-17, -26, -31, -32, -28, -29, -27, -30, -33, -34,
	-35, -36, -23, -24, -13, -22, 436, 444, -162, -160,
	-161, -169, 342, 426, 382, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, -214, -219, -220, -221, -213,
	-189, -411, -414, 4, -409, -412, 138, 183, 253, 21,
	22, 23, 24, 25, 27, 38, 40, 39, 41, 42,
	45, 48, 49, 47, 52, 53, 54, 55, 56, 57,
	60, 65, 70, 71, 72, 73, 74, 75, 80, 77,
	78, 79, 82, 84, 85, 86, 89, 90, 98, 99,
	100, 101, 102, 103, 107, 110, 109, 112, 115, 116,
	117, 119, 121, 122, 124, 126, 127, 130, 128, 388,
	129, 131, 132, 133, 134, 144, 145, 146, 148, 149,
	151, 153, 157, 158, 160, 164, 166, 167, 168, 169,
	175, 176, 178, 179, 184, 180, 185, 189, 192, 191,
	193, 194, 195, 186, 200, 204, 205, 206, 208, 209,
	212, 213, 214, 215, 216, 219, 218, 221, 224, 225,
	228, 229, 232, 233, 234, 236, 237, 240, 238, 241,
	239, 242, 245, 243, 244, 247, 248, 251, 249, 255,
	258, 173, 260, 261, 263, 264, 265, 281, 268, 269,
	270, 273, 274, 277, 280, 282, 283, 284, 285, 286,
	287, 288, 290, 291, 293, 295, 297, 299, 300, 301,
	302, 303, 304, 305, 307, 308, 310, 311, 312, 313,
	314, 319, 316, 317, 318, 320, 321, 322, 323, 325,
	327, 328, 329, 330, 332, 334, 355, 356, 370, 335,
	336, 337, 338, 339, 340, 341, 345, 349, 346, 347,
	348, 343, 344, 350, 351, 352, 354, 357, 358, 360,
	361, 363, 364, 366, 367, 368, 369, 371, 374, 375,
	376, 372, 373, 381, 379, 380, 383, 384, 385, 386,
	387, 389, 391, 399, 400, 402, 405, 406, 407, 397,
	409, 410, 413, 414, 415, 416, 417, 422, 418, 420,
	423, 424, 425, 431, 430, 437, 438, 440, 441, 442,
	33, 43, 44, 46, 50, 61, 62, 63, 66, 104,
	105, 125, 135, 136, 147, 161, 163, 170, 171, 172,
	190, 196, 198, 202, 222, 257, 259, 275, 279, 292,
	294, 306, 331, 362, 377, 392, 393, 394, 395, 401,
	403, 426, 427, 428, 432, 439, 266, -207, 2, -189,
	-189, 295, 26, 2, 26, 291, 344, 384, 386, 2,
	-463, -259, 2, 26, -193, -189, 87, 159, 342, -207,
	2, -463, -259, 24, 2, -189, 2, -194, 2, 335,
	-189, 468, 82, 229, 65, 331, 351, -110, 400, -109,
	392, 337, -111, -401, 2, 245, -189, 468, 468, 468,
	468, 2, 382, 284, 430, 343, 419, 100, 303, 183,
	396, -458, 2, 4, -412, -409, -223, -222, 382, 100,
	-221, -213, 458, -220, 468, 468, 468, 2, 205, 206,
	302, 301, 351, 352, 468, 468, 468, 2, 25, 59,
	81, 84, 106, 134, 154, 157, 271, -474, 237, 281,
	300, 337, 350, 381, 389, 402, -469, 369, 60, -468,
	419, -483, 407, 115, -306, 100, 229, 158, 414, 386,
	384, 327, 162, 412, 110, 189, 417, 416, 468, 468,
	25, 59, 68, 84, 115, 134, 154, 157, -476, 281,
	300, 334, 337, 350, 381, 389, 407, 402, 2, 430,
	343, 382, 183, 100, 419, 327, 298, -81, 2, 465,
	29, 28, 354, -152, 382, 199, 2, -189, 205, 206,
	2, 468, 468, 155, -458, 2, 205, 206, 2, 199,
	2, 60, 339, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	2, -140, 351, 369, 168, 41, 65, 26, 299, 70,
	285, 101, 160, 183, 184, 213, 81, 82, -307, 40,
	206, 205, -358, 383, 338, 344, 379, 400, 87, 420,
	328, 442, 303, 304, 128, 4, 100, 245, 353, 392,
	229, 74, -482, 2, 382, -486, 2, 400, 400, 2,
	-486, 2, -486, 2, -192, 2, 400, 396, -487, 400,
	439, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, -157, -159, -158, 468, 468, 468,
	468, 468, -140, 351, 2, 65, 26, -253, -254, 411,
	197, 123, 272, -156, -158, 2, -439, -399, 2, -333,
	-415, -335, 456, 457, 449, 252, 443, -346, 106, 412,
	266, -414, -336, -348, 125, 331, -274, 8, 9, 5,
	6, 7, -196, -379, -342, 404, 137, 256, -226, 469,
	10, 465, -436, -158, -347, 34, 163, 58, -403, -225,
	-381, -389, -385, -386, -490, 48, 54, 53, 389, 244,
	345, 346, 363, 347, 348, 45, 422, 180, 263, 265,
	191, 4, 198, -224, -213, -433, -434, -409, -410, 190,
	196, 192, 362, 193, 194, 195, 44, 306, 148, 149,
	147, 116, 105, 104, 259, 50, 49, 46, 427, -390,
	102, 392, 393, 394, 395, 208, 209, -189, -411, 68,
	92, 93, 91, 96, 95, 231, 230, 97, 94, 353,
	419, 59, 33, 170, 171, 202, 257, 172, 66, -435,
	373, 88, 156, 188, 174, 201, 203, 207, 223, 226,
	246, 250, 254, 276, 278, 326, 359, -491, 428, 135,
	136, 279, 292, 377, 401, 403, 161, 222, 61, 62,
	-441, 307, -442, -207, -441, 468, 468, 470, 468, -247,
	-248, -249, 2, 26, 113, 465, 2, -362, 2, -363,
	-367, -158, 217, -366, 465, -364, 463, -214, 267, -437,
	332, -433, -434, -196, -213, -225, 4, -250, 465, 467,
	100, 382, 69, 183, -301, 465, -189, 26, 266, 396,
	470, -344, 465, 266, 155, 269, -189, 2, 2, 355,
	2, 465, -110, 63, 400, 39, 351, -320, 2, -321,
	-186, -187, -188, -372, 204, 297, 305, 445, 442, -399,
	-470, 155, 448, 396, -399, -275, 467, 2, -367, 170,
	-214, 2, -211, -402, 4, -409, -412, -410, -413, 68,
	-411, 26, 28, 29, 30, 32, 34, 35, 36, 37,
	51, 58, 59, 64, 67, 69, 81, 87, 91, 92,
	94, 93, 95, 96, 97, 106, 108, 111, 113, 114,
	118, 120, 123, 137, 139, 152, 154, 155, 159, 162,
	165, 177, 187, 197, 199, 217, 220, 227, 230, 231,
	252, 256, 262, 266, 267, 271, 272, 289, 296, 309,
	324, 342, 353, 365, 378, 382, 390, 396, 398, 404,
	411, 412, 419, 421, 429, 433, 434, 435, 436, -414,
	2, -367, 170, 2, -216, 170, -367, -219, 2, -407,
	170, -405, 10, -404, 5, 4, -409, -412, -410, 2,
	-198, -189, 2, -210, -402, 2, -229, 170, -214, -215,
	-219, -96, -407, 465, 396, 470, -265, -222, -223, -258,
	-189, 467, -333, 2, -99, 2, -333, 170, 2, -99,
	170, 2, -333, 170, 2, -99, 170, 2, 2, 2,
	402, 2, 84, 170, -189, 382, 99, 2, 318, -475,
	334, 406, 430, 2, 2, 2, 2, 2, 2, 2,
	382, -203, 2, -189, 152, 343, -484, 307, -407, 170,
	2, -407, 170, 2, -217, -219, -217, 183, 200, -198,
	170, 2, 386, 384, 386, 384, 155, 2, 199, 2,
	199, 2, -368, 2, -369, -363, -214, 463, 2, 2,
	2, 2, 2, 170, -189, 382, 99, 2, 215, 2,
	2, 2, 2, 2, 2, 2, 2, 2, -267, 170,
	2, -214, -267, 170, 2, -267, 170, 2, -230, 170,
	2, -229, -198, 170, 2, -408, 170, 2, -407, -408,
	170, 2, -376, 2, -375, -404, 426, -81, 465, -81,
	465, 351, 465, -407, -214, -214, -333, -99, -97, -96,
	155, -333, -99, -152, 152, 2, 100, 382, -140, 2,
	152, 421, 2, 8, 2, -407, 338, 304, 144, 2,
	355, 2, 356, 65, -307, 442, 65, 155, 2, 155,
	2, -291, 2, 436, -461, 2, 266, 155, 2, 155,
	2, 155, 2, 155, 2, 155, 2, 301, 352, 206,
	2, -99, 433, -333, 433, 2, 399, 214, 129, 155,
	-291, 2, 155, 2, 155, 2, 5, 2, 204, 297,
	370, 2, -214, -478, 2, 382, 430, 343, 2, 2,
	77, 78, 155, 2, 155, 2, 155, 442, 2, -284,
	-367, -319, -320, -319, 396, -194, -253, -254, -140, 355,
	2, -163, -282, -165, 152, -309, -310, -166, 227, 139,
	262, -167, -290, 26, 113, -290, -290, 52, 466, 466,
	11, 12, 67, 38, 456, 457, 458, 459, 150, 460,
	461, 454, 455, 453, 446, 447, 451, 210, 211, 83,
	450, 448, 76, 235, 333, 140, 141, 142, 143, 315,
	181, 31, 182, 14, 15, 16, 30, 271, 226, 443,
	174, 359, 449, 17, 18, 19, 201, 203, 254, 43,
	177, -195, -231, -333, -333, -333, -333, -333, 278, 465,
	-280, -328, 463, -158, 465, 465, 465, 5, -398, 8,
	-158, -333, -346, 466, -272, 465, -158, -346, -341, 465,
	331, 463, 465, -349, -333, 5, 465, 467, -443, 437,
	-383, 465, 294, -382, 465, -382, -382, 431, -380, 465,
	444, 438, 465, -380, 465, 465, 152, 465, 465, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 431, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 470, -441, -250, 465, -276, -370, -333, 458,
	-276, -276, 266, -269, -333, 88, -294, 207, 246, 156,
	223, 326, 188, -330, 469, -330, -357, 444, -158, -364,
	-213, -158, -366, 465, -362, -357, -82, -398, -68, -79,
	-87, -99, -112, -144, -145, 458, -214, 465, 155, 465,
	467, 155, -258, -402, -198, -214, -224, -225, -229, 112,
	-269, -458, -258, -193, 35, -343, -377, -378, -379, -388,
	-384, -387, -391, 48, 54, 53, 389, 244, 345, 346,
	363, 347, 348, 45, 422, 180, 263, 265, 191, 4,
	46, 427, -390, 198, 311, 312, 310, 314, 313, 190,
	196, 192, 362, 193, 194, 195, 44, 306, 148, 149,
	147, 116, 105, 104, 259, 50, 49, 102, 392, 393,
	394, 395, 208, 209, 428, 373, 61, 62, -458, -258,
	152, -401, -269, 35, -320, 2, 106, -405, 39, -488,
	470, 225, -233, 234, 251, 167, 267, 440, 260, -406,
	5, 4, -342, -354, 106, 229, 198, 9, 457, -395,
	8, 456, -400, -399, 90, 467, -402, -174, 316, -173,
	23, 27, 117, 424, 130, -240, 185, 284, 125, 366,
	415, -465, -466, 336, 387, 388, 79, 260, 316, 125,
	-287, -289, 35, 98, 248, 280, 55, 178, 239, 240,
	368, 432, 125, 316, -185, -438, 436, 125, -466, 316,
	-466, -176, 366, 415, -465, -466, 336, 316, -175, -240,
	125, 469, -373, -372, -408, -96, -265, 470, 470, -402,
	458, 125, 125, 125, 125, 2, 2, 252, 2, 2,
	2, 157, -468, -476, 2, 2, 2, -214, 170, -252,
	266, -460, -266, 382, -214, -216, 170, 2, -219, 430,
	-184, -185, 252, 252, 35, 465, 2, -200, 170, 2,
	-190, -189, 183, -438, 252, -368, -227, -214, -363, -227,
	354, -207, 35, -330, -330, 125, 2, 2, 2, -189,
	-177, 470, 57, 322, 125, -177, 125, -177, 125, -177,
	470, 125, -177, 125, 470, 125, 125, 466, 470, -376,
	-376, -407, -150, 436, 155, 87, 465, 465, -152, -373,
	470, -97, -407, -460, -198, 2, -214, 2, 382, 208,
	-150, -407, -407, -407, -401, 26, 356, 2, 301, 352,
	78, 356, 2, -214, 382, 100, 183, 71, -462, 152,
	-459, 327, -458, -214, 100, -214, 100, -214, 100, -214,
	-214, 2, 2, 2, 2, 75, 75, 152, 2, 399,
	2, 399, 2, -189, -189, -189, 225, -214, 152, 382,
	183, 382, 183, 100, 382, -177, 470, -194, -163, -282,
	-401, -283, -282, -164, -163, -166, 152, 305, 416, 248,
	357, 212, -310, -309, 26, -333, -314, 146, 247, -333,
	-335, -268, 260, -157, -157, -157, -255, -359, -333, 296,
	183, -392, -377, -377, -212, -402, 392, -333, -333, -333,
	-333, -333, -333, -333, -333, -333, -333, -333, -333, -333,
	-333, -333, -333, -333, -333, -333, -333, -333, -333, -333,
	-333, -333, -333, -333, -333, -333, -333, -333, -333, -333,
	-333, -333, 226, 174, 359, 43, 177, -333, 396, -333,
	-333, -333, -333, 243, 252, 256, 404, 137, 413, 113,
	260, -492, 378, 37, -339, -158, -273, 465, -353, 32,
	365, 26, -346, 465, 2, -328, -333, -329, -270, -269,
	-269, 466, 429, 26, 113, 458, 2, 466, 470, 35,
	466, -333, -270, -345, -341, -269, -352, -351, 433, -302,
	-303, 441, 242, 103, 169, 241, -304, 341, -396, 8,
	-402, 458, -444, 145, 162, 8, -396, -396, 392, 392,
	-396, -396, -396, 465, 466, 2, 466, 2, 466, -333,
	2, 466, -333, 2, 466, -333, 2, 466, -333, 2,
	466, 2, -333, -333, -333, -333, -333, -333, -333, -269,
	-296, 2, -393, -269, 4, 441, 242, 103, 169, 241,
	341, 5, -296, 2, -297, 2, -333, -269, -298, -334,
	-335, 456, 457, 449, -346, -299, 2, -333, -270, -333,
	51, 220, 398, -300, -333, 155, -269, -269, 2, -269,
	2, -442, 35, -269, -261, 470, 155, 35, 4, -261,
	-261, 465, 466, 470, -295, 166, 238, 233, -295, -362,
	-294, 207, -292, 276, -292, -292, -357, -199, 463, 471,
	-402, -357, -356, -355, 35, -207, 273, -357, -357, 467,
	466, -356, 464, -456, 465, 468, 468, 468, 468, 468,
	-214, 465, -269, -402, 371, 466, 467, 201, 201, 201,
	201, 332, 466, 396, 436, -81, 268, 466, 470, -260,
	34, 463, -394, 431, 465, 465, -303, 465, 155, -259,
	-470, 466, 400, -321, -232, 305, 364, 317, 349, 380,
	9, 8, 8, 470, -402, 470, -471, 81, 396, 69,
	-324, 170, 69, -416, -201, 81, -417, -189, 64, 412,
	296, 154, -471, 81, 296, -471, 81, 81, 354, 369,
	52, -367, 38, 38, 26, -99, 221, 155, 442, 382,
	183, 396, -367, -289, -377, 98, 239, 240, 52, -397,
	-395, 457, -397, 52, -397, -397, -397, 436, -216, -367,
	396, 286, -407, 396, 470, 38, 38, 26, -99, 221,
	155, 396, -229, -199, -147, 179, 466, -373, -222, -189,
	467, -333, -99, -333, -99, 125, 2, -484, 215, 465,
	-236, 252, 155, -258, -374, 199, 470, -266, -288, -287,
	252, -218, 170, 2, -214, 125, 125, 465, 121, 303,
	2, 266, 252, -200, 170, -180, 385, 125, -286, 421,
	-315, -99, 465, 106, 35, -315, -277, -278, -371, -279,
	-201, 465, -207, -189, 2, -214, -267, -267, -267, -229,
	-230, -198, -407, -408, -408, -81, -375, 466, 466, 466,
	-149, 270, -148, -189, 5, -152, 421, -235, -325, -324,
	-420, -421, -416, 226, 183, 412, 200, 138, -251, -202,
	-201, 99, -150, -96, -373, -150, -150, -373, -373, -214,
	152, -150, -150, -150, 2, 2, -291, -214, -198, -229,
	-214, -258, -258, -291, -198, -291, -198, -291, -198, -99,
	-333, 351, 152, 152, 467, -291, 303, 100, 382, 284,
	183, -214, -229, -214, -229, -198, -214, -367, -283, -164,
	267, 212, 357, -312, -395, 465, -313, 331, 332, -168,
	361, 255, -267, 470, -171, 36, 111, 212, -214, 442,
	122, -333, -333, 396, -492, 378, -339, 122, -333, 243,
	256, 404, 137, 413, 113, 260, 155, 465, -334, -334,
	466, -271, -333, -333, 464, 473, 466, -254, 470, -253,
	-333, -269, -269, 466, 467, -269, -258, 464, 464, 470,
	466, -350, -351, 118, -333, 396, 396, 396, 396, 465,
	466, 467, -449, 277, 465, 465, 466, 466, 470, 466,
	442, 442, 466, 466, 466, -333, 466, 466, 466, 466,
	35, 470, 470, 470, 466, 470, 470, 470, 466, 466,
	155, 466, 466, -305, 289, 466, 11, 12, 456, 457,
	458, 459, 150, 460, 461, 454, 455, 453, 446, 447,
	448, 76, 235, 333, 14, 15, 16, 201, 177, -334,
	-334, -334, 466, -337, -338, 155, 152, 35, -300, -300,
	-300, 466, 155, -269, 466, 466, 465, 466, -327, -326,
	434, -370, -262, 2, -362, -209, -402, -327, -327, -269,
	-333, 207, 207, -293, 421, 266, -295, -362, -356, -398,
	-332, -331, 153, 36, 111, 249, 173, -356, -207, -250,
	-356, -356, -402, -357, -357, -355, 466, -457, -398, 466,
	-263, -365, -437, -254, 467, -150, -402, -141, 5, 256,
	-141, -141, -141, -258, 24, 290, -377, 463, 464, 8,
	465, -396, -396, -396, -258, 155, -399, -320, 410, 73,
	305, 392, -399, -173, 316, -201, -201, -214, 252, -324,
	170, -179, 252, -377, -208, -189, 465, 465, 212, 212,
	-201, -208, 212, 170, -201, 170, -208, -208, -464, 305,
	261, -333, 228, 303, 253, -174, 316, -99, -99, -99,
	465, -470, 421, 112, -214, -229, -214, -218, 316, 250,
	-224, -397, -397, -287, 316, -216, -407, 256, -185, -198,
	-175, -99, -99, -99, 465, -199, -176, 316, -150, 155,
	-147, 458, -189, 430, -189, -234, -237, -235, -201, -155,
	438, 436, 125, -228, -214, 463, -150, -407, -214, 125,
	-250, 252, -407, -407, 2, 465, 2, -214, 125, 266,
	252, -181, 119, -489, 448, -198, -327, -262, -285, -318,
	324, 266, -251, 426, -207, -285, -264, 470, 155, 448,
	467, -251, 2, -177, -177, -177, -177, -177, -81, -81,
	-150, 470, 465, 448, 448, 465, -407, -407, 466, 470,
	-214, -200, 183, 183, -206, -190, 466, 470, 467, 465,
	-150, 155, -46, 436, 382, 469, -291, -291, -291, 351,
	351, -189, -210, -198, -214, -211, -229, 152, 152, 416,
	-313, -333, 232, -359, -172, 258, -214, 469, -333, -333,
	122, 122, -333, -334, -334, -333, 122, 155, 465, -333,
	-343, 30, 30, 466, 470, -329, -333, 466, 429, -254,
	-254, 466, 458, -402, 466, -341, 120, -333, 390, 242,
	169, 241, -304, 241, -304, -304, -396, 5, -402, 458,
	-450, -204, 465, -189, 434, -253, -396, -380, -380, 466,
	-392, -377, -333, -333, -333, -333, -333, -333, -337, -333,
	-392, -377, -334, -334, -334, -334, -334, -334, -334, -334,
	-334, -334, -334, -334, -334, -334, -334, -334, -334, -334,
	-334, 113, 252, 260, -334, -338, -337, -333, -333, -377,
	466, 466, 466, -269, -81, -281, 162, -333, -373, 470,
	-281, -281, 466, -362, -362, 465, -333, 207, 464, 470,
	472, 448, -250, 467, -355, -356, 464, 466, 470, 466,
	470, -317, 35, 466, -402, 269, 5, 8, 463, 464,
	-396, 466, 466, 466, -258, -333, 396, 396, 125, 252,
	423, -422, -417, -333, -256, -360, -333, 465, 465, -170,
	117, 354, -472, 2, 421, 125, -177, 125, -177, 440,
	465, 465, 396, 436, -269, -333, -151, 106, -401, -466,
	469, -466, 469, 396, 396, 436, -269, 396, -408, -150,
	2, 2, 2, 466, 466, 470, -423, 35, 264, 465,
	264, -214, -64, 436, -372, -398, -216, 35, 125, -184,
	2, -308, 421, -199, -214, 125, -182, 219, -489, -405,
	-438, -254, -285, -276, 253, 80, 466, -327, -278, -262,
	-333, 2, 466, -148, -149, -407, -407, -407, -150, -152,
	-152, -325, 2, 465, -200, -190, 465, -152, -202, 2,
	-408, -99, 270, -214, 458, -291, -242, -241, 284, 260,
	-242, 331, 331, 267, 466, 146, 216, -171, -199, -333,
	-333, 122, 30, 30, -333, -333, -343, 466, -333, -333,
	-269, 464, 5, -333, 466, 466, -333, 466, 467, -451,
	-189, -333, 466, 466, 466, 466, 470, 470, 466, 466,
	466, 466, -338, 155, 113, 260, 465, 466, 466, -340,
	165, 52, -362, -340, -340, -293, -258, -362, -331, -199,
	463, -402, -398, -365, 465, 467, 464, 2, 463, 466,
	-201, -201, -324, 125, -424, 81, -426, 67, 138, 87,
	252, 256, 412, 296, 64, 106, 309, 35, 466, 466,
	470, -171, -256, -258, 252, 375, 106, 252, 106, 99,
	407, 70, -201, -208, -258, -258, -214, 131, 466, 470,
	448, 2, 458, 458, -218, -216, 131, 466, -199, -238,
	186, -201, -421, -418, -419, 296, -425, -427, 138, 296,
	-99, -154, -153, -189, 5, 2, 465, -236, 270, 464,
	-288, -99, -218, 465, -189, 266, 465, -199, -183, 218,
	-489, -405, -180, -311, -309, -316, 465, 266, -99, -254,
	448, 466, 466, 99, 99, -256, 465, 465, -258, 99,
	466, -47, -48, 183, 81, 288, -211, 382, 183, 465,
	465, -171, -333, -333, -333, 466, -254, -402, 458, -445,
	284, 466, -333, -333, -334, 155, 465, -343, -446, 435,
	-333, -269, -446, -446, 466, -398, 2, 463, 2, -324,
	-208, -212, -205, -189, 138, 170, 256, 212, 465, -334,
	-214, 465, 2, -480, 108, 187, -323, -481, 86, 376,
	-360, -172, 466, 466, 256, 256, -333, -377, 465, -177,
	-177, 466, 466, -333, 396, -401, 85, -399, 2, -466,
	-333, 396, -239, -240, 177, -423, 212, -205, 212, -479,
	436, 466, 470, 448, 448, -234, -155, -65, -66, 397,
	-372, -250, -256, -214, -256, 266, -489, -405, -181, -285,
	114, -258, 81, -311, -339, -150, 465, 465, 466, -256,
	-256, 466, 465, -150, 470, 26, 465, 26, 465, -214,
	-229, -269, -269, 466, -254, 52, 466, 466, -334, -343,
	466, -447, -448, -204, 464, 2, -426, -205, 252, 421,
	-333, -191, 465, -333, 187, 109, 175, -238, 465, -322,
	421, 309, -197, 67, -256, 465, 465, 465, 448, 155,
	465, -155, 282, 465, 99, 248, -153, -336, -336, 466,
	35, -66, 9, 35, 466, -308, 466, -214, -405, -182,
	416, 253, 466, -208, -285, -408, -408, -322, 466, 466,
	-408, -48, -258, -258, 466, 466, -452, 303, 332, 164,
	-269, 466, 470, 35, 125, 166, 466, -428, 236, -189,
	466, 109, 175, -239, -258, 166, -214, -467, 421, -212,
	466, -244, -243, -241, -246, -245, -241, -269, -399, 85,
	282, -269, -214, -257, -361, -201, 99, -238, -99, -99,
	-322, 465, -323, 465, -183, 354, -326, 466, 466, -323,
	-322, 466, 466, 466, 466, -453, -454, 43, 409, 90,
	-333, -453, -453, -448, -450, 138, 436, -429, -432, -431,
	266, 360, 156, 283, 466, 375, 432, -480, 466, 436,
	-250, -333, -322, 466, 470, 426, 466, 470, 426, 466,
	155, 466, 465, 466, 470, -239, -479, -323, -256, -238,
	-256, -277, -150, -150, -238, -323, -150, -455, 124, -454,
	293, 151, 331, 293, 151, -455, -455, -205, 47, -431,
	266, -432, 266, 416, 110, 47, -428, -238, -243, 177,
	-245, 155, 282, -258, -361, -155, -238, 466, -239, 466,
	-327, -239, -238, 90, 162, 391, 248, 30, 448, -430,
	248, 322, 57, 354, -430, 448, -429, 465, 465, 466,
	-239, -322, -485, 434, -323, -239, 331, 274, -454, -333,
	22, 256, 106, -333, -480, -269, -269, -178, 57, 322,
	-485, -323, 2, -238, 466, 466, -238, -239, -239, 396,
	-239, -485, 465, -485, -269, 466, -239,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 5, 6, 8, 10,
	12, 14, 16, 18, 20, 22, 23, 371, 372, 374,
	375, 376, 378, 379, 381, 383, 385, 387, 388, 390,
	392, 394, 395, 396, 397, 398, 400, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 460, 462,
	0, 948, 950, 952, 954, 25, 26, 0, 0, 192,
	194, 196, 0, 221, 223, 225, 226, 228, -2, 0,
	323, 324, 326, 328, -2, -2, 0, 0, 449, 451,
	0, 0, 0, 471, 472, 0, 1039, -2, 465, 467,
	469, 534, 536, 538, 540, 542, 544, 546, 547, 549,
	551, 553, 555, 557, 559, 561, 562, 564, 566, 568,
	570, 572, 574, 576, 578, 580, 582, 584, -2, -2,
	-2, 0, -2, -2, -2, 966, 29, 31, 33, 35,
	37, 39, 41, 61, 277, 278, 280, 282, 284, 287,
	288, 290, 1094, 330, 332, 334, 336, 338, 0, -2,
	1106, 0, 0, 43, 44, 45, 46, 47, 48, 49,
	50, 68, 69, 70, 71, 72, 73, 74, 75, 54,
	56, 57, 63, 64, 66, 52, 0, 0, 1070, 1072,
	1074, 1076, -2, 0, 0, 7, 9, 11, 13, 15,
	17, 19, 21, 373, 377, 380, 382, 384, 386, 389,
	391, 393, 399, 401, 403, 839, 1720, 1734, 1735, 1736,
	1739, 1740, 1741, 1742, 1743, 1744, 2088, 2168, 2169, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803,
	1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813,
	1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823,
	1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833,
	1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843,
	1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853,
	1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863,
	1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873,
	1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893,
	1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903,
	1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913,
	1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923,
	1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933,
	1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
	1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953,
	1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963,
	1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973,
	1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983,
	1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993,
	1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,
	2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013,
	2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023,
	2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033,
	2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043,
	2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053,
	2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063,
	2064, 2065, 2066, 2067, 2068, 2069, 0, 427, 425, 1714,
	428, 1919, 430, 432, 317, 318, 319, 320, 321, 322,
	0, 442, 436, 441, 443, 445, 446, 447, 448, 422,
	420, 0, 442, 1766, 440, 946, 947, 941, 942, 1953,
	976, 461, -2, -2, -2, 2056, -2, 493, -2, 500,
	2059, 1955, 505, 0, 507, -2, 510, 949, 951, 953,
	27, 28, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 156, -2, -2, -2, -2, 0, 0, 1804,
	1689, 1736, 1692, 1687, 193, 195, 197, 198, 0, 0,
	0, 0, 0, 0, 222, 224, 227, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 750, 742,
	743, 893, 894, 916, 0, 0, 0, 0, 325, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 0, 255, 363, 364, 0,
	1095, 1095, 0, 0, 0, 0, 173, 164, 0, 0,
	726, 450, 452, 0, 0, 159, 0, 0, 945, 0,
	175, 0, 0, 466, 468, 470, 535, 537, 539, 541,
	543, 545, 548, 550, 552, 554, 556, 558, 560, 563,
	565, 567, 569, 571, 573, 575, 577, 579, 581, 583,
	585, 586, 0, 0, 0, 0, -2, -2, 0, 0,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 0, -2, -2, -2, 0, 0, 0, -2,
	-2, 0, 0, 0, 0, 589, 591, 592, 593, 0,
	644, 661, 0, 882, 1096, 978, 956, 969, 978, 958,
	959, 960, 961, 962, 967, 968, 971, 0, 963, 964,
	965, 30, 32, 34, 36, 38, 40, 42, 279, 281,
	283, 285, 289, 291, -2, 1068, 1069, 331, 333, 335,
	337, 339, 453, 0, 455, 0, 590, -2, 0, 1100,
	1100, 1100, 0, 0, 1069, 1067, 0, 458, 459, 514,
	515, 1337, 0, 0, 0, 0, 0, 1586, 1421, 0,
	516, -2, 1452, 1454, 2035, 2056, 1585, 1456, 1457, 1458,
	1459, 1460, 0, 0, 1463, 1464, 1465, 1466, 1467, 0,
	1469, 0, 1473, 1474, 1475, 0, 2040, 1666, 1732, -2,
	1240, 1241, 1242, 1243, 1244, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 2046, 1728, 0, 1552, 1489, -2, 1753, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1813, -2, -2, -2, -2, -2, -2, -2, 1296,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 2070,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 0, 2024, 2041, 2042, 2047, 2049, 2043, 2032, 1514,
	-2, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079,
	2080, 2081, 2082, 2083, 2084, 2085, 2086, 1297, -2, 2036,
	2037, 2052, 2053, 2058, 2063, 2064, 2039, 2048, -2, -2,
	1086, 1928, 1089, 839, 1087, 1071, 1073, 0, 1075, 0,
	0, 0, 1080, 1103, 1101, 0, 1141, 1084, 1085, 1159,
	1159, 1183, 0, 1164, 0, 1183, 1095, 1209, 0, 1170,
	1948, 1490, 1491, 0, 1736, 1733, -2, 0, 0, 0,
	0, 0, 0, 0, 423, 0, 429, 431, 0, 0,
	0, 0, 0, 0, 0, 0, 975, 463, 464, 0,
	488, 0, 492, 2031, -2, 1771, 1968, -2, 496, 979,
	983, 984, 985, 986, 0, 0, 0, 0, 0, 502,
	0, 0, 489, 490, 508, 511, 0, 51, 0, 2041,
	1209, 53, 0, 1704, 1758, 1759, 1760, 1761, 1762, 2070,
	2087, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097,
	2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107,
	2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117,
	2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127,
	2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137,
	2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147,
	2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157,
	2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167,
	55, 0, 2041, 58, 0, 2041, 0, -2, 62, 1093,
	2041, 176, 177, 1749, 1750, 1754, 1755, 1756, 1757, 65,
	0, 1710, 67, 0, 1707, 76, 0, 2041, 0, 1686,
	-2, 1196, 160, 0, 0, 0, 718, 1683, 1688, 719,
	1693, 0, 199, 200, 201, 202, 203, 2041, 205, 206,
	0, 208, 209, 2041, 211, 212, 0, 214, 230, 231,
	0, 233, 0, 2041, 0, 0, 0, 239, -2, 256,
	0, 253, 0, 243, 244, 246, 247, 248, 249, 250,
	0, 295, 293, 1715, 0, 0, 0, 900, -2, 2041,
	885, 890, 2041, 892, 905, 1718, 0, -2, 0, 1093,
	2041, 993, 746, 747, 748, 749, 0, 314, 0, 1006,
	0, 1008, 0, 1029, 1215, 1159, 1159, 0, 257, 258,
	259, 260, 261, 2041, 0, 0, 0, 266, 0, 268,
	269, 270, 271, 272, 273, 274, 275, 276, 151, 2041,
	342, 361, 151, 2041, 345, 151, 2041, 348, 151, 2041,
	351, 1681, 151, 2041, 354, 355, 2041, 357, 178, 358,
	2041, 360, 0, -2, 416, 1722, -2, 366, 0, 367,
	0, -2, 0, 190, 0, 0, 724, 725, 1196, 162,
	0, 943, 944, 0, 0, 473, 0, 0, 587, 588,
	0, 0, 598, 599, 600, 190, 1956, 1926, 1829, 605,
	0, 608, 611, -2, 0, 0, 0, 0, 615, 0,
	620, 621, 622, 0, 723, 624, 0, 0, 626, 0,
	630, 0, 633, 0, 635, 0, 637, -2, -2, -2,
	648, -2, 0, 652, 0, 654, 0, 0, 0, 0,
	669, 670, 0, 675, 0, 678, 679, 680, 0, 682,
	683, 684, 685, 0, 687, 688, -2, -2, 692, 694,
	0, 701, 0, 705, 0, 709, 0, 594, 595, 151,
	1213, 955, -2, 957, 0, 973, -2, 0, 454, 0,
	457, 1121, 1054, 1051, 0, 1118, 1119, 1055, 0, 0,
	0, 1062, 0, 1098, 1099, 0, 0, 0, 1041, 1042,
	0, 0, 0, 0, 1591, 1592, 1593, 1594, 1595, 1596,
	1599, 1600, 1597, 1598, 1601, 1602, 0, 0, 0, 0,
	0, 1603, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1604, 1605, 1606, 0, 0, 1608, 0,
	1610, 0, 0, 0, 0, 0, 0, 1400, 1402, 1674,
	0, 0, 1607, 1342, 1343, 1344, 1379, 1380, 0, 0,
	1453, 1671, 1670, 1455, 0, 1622, 0, 1462, 1468, 1700,
	-2, 0, 1586, 1617, 0, 0, 1476, 1477, 1478, 0,
	0, 1622, 0, 0, 1665, 1334, 0, 0, 1554, 0,
	1276, 0, 1277, 1278, 0, 1279, 1280, 1293, 1306, 0,
	0, 0, 0, 1310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1298, 0, 0, 0, 1646, -2, 0, 0,
	0, 0, 0, 1088, 0, 0, 1145, 1675, 1679, 1680,
	1145, 1145, 0, 0, 1623, 1206, 1206, 0, 0, 1202,
	1202, 1202, 1200, 1183, 0, 1183, 1193, 0, 1183, 1183,
	0, -2, 1164, 0, 0, 1193, 0, 1177, 404, 406,
	408, 410, 411, 412, 414, 1210, 1211, 0, 0, 0,
	0, 0, 0, 1737, 0, 0, 0, 1724, 0, 0,
	0, 0, 434, 444, 1095, 0, 1625, 1232, 1235, 1236,
	1237, 1238, 1239, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	-2, 1294, 1296, 1317, 1283, 1284, 1285, 1286, 1287, 1265,
	1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275,
	1289, 0, 1264, 1264, 1264, 1281, 1282, 1305, 1316, 1308,
	1316, 1312, 1233, 1234, 1299, 1300, 1301, 1302, 0, 438,
	0, 0, 0, 0, -2, 498, 503, 504, 0, 0,
	981, 0, 987, 525, 526, 527, 989, 990, 0, 501,
	528, 529, 530, 531, 532, 533, 0, 856, 0, 858,
	1695, 0, 499, 518, 506, 0, 512, 77, 938, 116,
	0, 938, 938, 0, 0, 138, 0, 0, 0, 0,
	0, 0, 101, 112, 89, 90, 0, 0, 0, 0,
	59, 864, 0, 867, 0, 0, 0, 0, 0, 0,
	0, 880, 0, 0, 927, 0, 1092, 0, 100, 0,
	95, 79, 0, 0, 0, 102, 114, 0, 142, 144,
	0, 0, 181, 1195, 0, 1196, 717, 0, 0, 1737,
	1691, 0, 0, 0, 0, 232, 234, 0, 236, 237,
	238, 0, 899, 0, 245, 242, 286, 811, 2041, 0,
	0, 312, 307, 0, 309, 863, 2041, 861, 1719, 0,
	883, 886, 0, 0, 0, 0, 906, 0, 2041, 911,
	1706, 1745, 1746, 995, 0, 316, 0, 1009, 1011, 0,
	0, 1216, 0, 1218, 1219, 0, 263, 264, 265, 0,
	340, 0, 149, 150, 0, 343, 0, 346, 0, 349,
	0, 0, 352, 0, 0, 0, 0, 1095, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 0, 190,
	0, 1196, 190, 190, 1196, 475, 1196, 477, 0, 0,
	601, 190, 190, 190, 606, 607, 609, 610, -2, -2,
	702, 612, 613, 672, 0, 0, 0, 671, 623, 0,
	711, 1944, 721, 672, 1804, 672, 1804, 672, 1804, 634,
	636, 639, 664, 647, 651, 0, 0, 0, 656, 0,
	658, 0, 660, 672, 673, 676, 681, 686, 0, 0,
	0, 0, 0, 0, 0, 881, 0, 972, 1121, 1054,
	456, 1045, 1120, 1046, 1053, 1056, 0, 0, 1058, 0,
	1060, 0, 1116, 1117, 1124, 1125, 1131, 1134, 1135, 1127,
	1337, 1064, 0, 1081, 1082, 1083, 1107, 1108, 925, 0,
	2168, 1338, 1227, 1339, 1340, 1703, 0, 1345, 1346, 1347,
	1348, 1349, 1350, 1351, 1352, 1353, 1354, -2, -2, -2,
	-2, -2, -2, -2, -2, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, 1372, 1373, -2, -2, -2, 1377,
	1378, -2, 1609, 1611, 0, 1674, 0, -2, 0, -2,
	-2, -2, -2, 1397, 0, 1399, 1404, 1406, 1408, 0,
	0, 0, 0, 1673, 1418, 1657, 1658, 0, 0, 1588,
	1589, 1590, 1403, 0, 1422, 1672, 1669, 0, 0, 1621,
	1106, 1480, 0, 0, 0, 0, 1487, 1472, 1619, 0,
	1618, 0, 0, 0, 1629, 0, 1664, 1660, 0, 1701,
	1333, 1320, 1321, 1322, 1323, 1324, 1325, 1335, 0, 1698,
	1725, 1731, 1562, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1515, 1516, 1517, 1518, 1519, 0,
	1521, 1522, 0, 1524, 1525, 0, 1527, 1528, 0, 1530,
	1531, 1532, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1534, 0, 1632, -2, -2, -2, -2, -2, -2,
	-2, -2, 0, 1536, 0, 1538, 1623, 1643, 0, 0,
	1423, 0, 0, 0, 1586, 0, 1541, 1623, 1651, 0,
	0, 0, 0, 0, 1623, 0, 1656, 0, 1548, 0,
	1550, 1090, 0, 0, 1222, 0, 0, 0, 1678, 1222,
	1222, 0, 1140, 0, 0, 1203, 1204, 1205, 0, 0,
	1206, 0, 1197, 1201, 1198, 1199, 1193, 1156, 0, 0,
	1705, 1193, 1162, 1192, 0, 839, 1182, 1193, 1193, 0,
	-2, 1166, 1183, 0, 0, 405, 407, 409, 413, 415,
	0, 0, 1106, -2, 190, 838, 0, 0, 0, 0,
	0, 424, 426, 0, 0, 418, 0, 421, 0, 1223,
	1226, 0, 0, -2, 0, 0, 1318, 0, 0, 0,
	0, 491, 0, 980, 988, 0, 522, 0, 524, 0,
	857, 1697, 1696, 0, 513, 0, 0, 0, 0, 937,
	120, 2041, 0, 153, 0, 0, 805, 1711, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 86, 91, 0, 0, 0, 0,
	0, 0, 0, 865, 866, 868, 875, 877, 0, 871,
	1699, 0, 872, 0, 874, 876, 878, 0, 0, 0,
	0, 0, 1093, 0, 0, 0, 0, 88, 92, 0,
	0, 0, 0, 1685, 190, 0, 161, 181, 1684, 1694,
	0, 204, 207, 210, 213, 0, 240, 0, 0, 752,
	729, 0, 0, 294, 190, 0, 0, 308, 859, 862,
	0, 839, 2041, 898, 1717, 0, 0, 0, 0, 0,
	904, 0, 0, 0, 2041, 997, 1003, 0, 1222, 0,
	1027, 1012, 0, 0, 0, 1027, 1031, 1032, 1034, 1035,
	0, 0, 1217, 0, 267, 362, 151, 151, 151, 1682,
	151, 151, 179, 356, 359, 365, 417, 1095, 1095, 190,
	188, 1904, 186, 183, 185, 0, 0, 0, 753, 755,
	756, 757, 758, 0, 1746, 0, 1858, 1746, 0, 1015,
	1017, 0, 157, 163, 190, 0, 306, 474, 479, 596,
	0, 602, 603, 604, 641, 666, 614, 616, 617, 618,
	0, 722, 720, 625, 672, 628, 672, 631, 672, 650,
	653, 655, 0, 0, 0, 668, 0, 0, 0, 0,
	0, 0, 0, 706, 707, 708, 710, 1214, 1049, 1050,
	1052, 0, 1061, 0, 1129, 0, 1128, 1132, 1133, 1057,
	0, 1066, 1063, 0, 1115, 923, 924, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 1419, 0, -2, 1398,
	1401, 1405, 1407, 1409, 0, 0, 0, 0, 0, 0,
	1612, 0, 1614, 1420, 1667, 1670, 1584, 0, 0, 1105,
	1106, 1106, 0, 1486, 0, 1620, 0, 1627, 1628, 0,
	1479, 0, 1661, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1488, 0, 0, 0, 1288, 1262, 0, 1316,
	1314, 1315, 1309, 1316, 1313, 0, 1520, 1523, 1526, 1529,
	0, 0, 0, 0, 1509, 0, 0, 0, 1513, 1533,
	0, 1535, 1537, 0, 0, 1539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1426,
	1427, 1428, 1540, 1649, 1650, 0, 0, 0, 0, 0,
	0, 1546, 0, 1655, 1547, 1549, 1095, 1142, 1137, 1221,
	0, 1676, 1196, 1144, 1146, 1677, 1708, 1137, 1137, 0,
	1624, 0, 0, 1187, 0, 0, 0, 1189, 1160, 0,
	0, 1154, 0, 1150, 1151, 1152, 1153, 1161, 839, 1191,
	1163, 1167, 1725, 0, 1193, 0, 1178, 0, 1180, 1212,
	0, 1172, 1175, 0, 0, 191, 1738, 215, 219, 220,
	216, 217, 218, 433, 0, 0, 1626, 0, 1228, 0,
	0, 0, 0, 0, 437, 0, 487, -2, 520, 521,
	523, 0, 519, 117, 938, 0, 0, 929, 0, 122,
	2041, 131, 0, 781, 0, 1709, 0, 0, 0, 0,
	940, 0, 0, 2041, 151, 2041, 151, 134, 137, 0,
	141, 139, 0, 0, 772, 78, 938, 81, 85, 93,
	0, 0, 0, 99, 0, 0, 0, 931, 0, 869,
	870, 873, 879, 60, 0, 933, 888, 889, 928, 926,
	143, 83, 87, 94, 0, 935, 80, 0, 154, 0,
	190, 1690, 0, 0, 0, 0, 0, 751, 822, 0,
	0, 0, 0, 300, 296, 0, 305, 311, 310, 0,
	0, 0, -2, 891, 901, 0, 903, 915, 0, 0,
	0, 999, 1003, 0, 1002, 1093, 1106, 315, 1004, 1027,
	0, 0, 0, 1014, 1010, 1007, 1222, 0, 0, 0,
	0, 0, 262, 341, 344, 347, 350, 353, 368, 369,
	165, 0, 0, 0, 0, 0, 190, 0, 0, 0,
	0, 0, 1746, 1746, 0, 1713, 0, 0, 0, 0,
	158, 0, 476, 0, 0, 0, 627, 629, 632, 657,
	659, 672, 695, 696, 767, 0, 767, 0, 0, 1059,
	0, 0, 1065, 1109, 1110, 0, 925, 0, 1341, 1382,
	0, 0, -2, 0, 0, 1386, 0, 0, 0, -2,
	0, 0, 0, 1613, 1615, 0, 1669, 1481, 0, 0,
	0, 1485, 1470, 1471, 1587, 1630, 1659, 1663, 0, 1326,
	1327, 1328, 1329, 1330, 1331, 1332, 0, 1702, 1726, 1730,
	1560, 1561, 1565, 1716, 0, 0, 0, 1307, 1311, 1492,
	0, 0, 0, 0, 0, 0, 0, 1631, 1642, 1644,
	1424, 1425, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436,
	1437, 1438, -2, -2, -2, 1442, 1443, 1444, -2, -2,
	-2, 0, 0, 0, 1645, 1647, 1648, 1652, 1653, 0,
	1543, 1544, 1545, 1654, 0, 1139, 0, 1220, 1143, 0,
	1139, 1139, 1102, 1185, 0, 0, 1208, 0, 1157, 0,
	1158, 0, 1190, 0, 1165, 1168, 1169, 1179, 0, 1171,
	0, 1174, 0, 1481, -2, 435, 419, 0, 0, 1230,
	0, 1291, 1295, 1319, 439, 1194, 0, 0, 0, 0,
	152, 779, 804, 0, 0, 918, 925, 0, 0, 124,
	0, 0, 0, 132, 0, 0, 129, 0, 136, 140,
	0, 0, 0, 0, 0, 96, 97, 98, 0, 103,
	0, 104, 0, 0, 0, 0, 0, 0, 180, 155,
	235, 897, 241, 761, 810, 0, 812, 0, 730, 0,
	0, 811, 292, 0, 299, 0, 863, 0, 0, 884,
	902, 0, 0, 0, 0, 0, 1001, 1003, 0, 994,
	995, 1123, 1005, 1025, -2, 1024, 0, 1106, 1033, 1030,
	1036, 1037, 0, 187, 0, 182, 184, 0, 168, 0,
	0, 754, 759, 0, 0, 0, 0, 0, 1016, 1018,
	0, 174, 0, 597, 619, 667, 697, 766, 0, 0,
	699, 0, 0, 1126, 1130, 1113, 1114, 1111, 925, 1384,
	1388, 0, 0, 0, 1390, -2, 0, 1412, -2, -2,
	1616, 1668, 1461, 1106, 1482, 1484, 1662, 1336, 0, 1567,
	1564, 0, 1551, 1263, 1504, 1505, 0, 0, 1508, 1510,
	1511, 1512, 1641, 0, 0, 0, 0, 1542, 1091, 1556,
	0, 0, 1147, 1556, 1556, 1186, 0, 1188, 1155, 1148,
	0, 1726, 1181, 1173, 0, 0, 1224, 1229, 0, 1290,
	118, 119, 121, 0, 780, 0, 783, 0, 0, 0,
	0, 790, 791, 0, 0, 0, 0, 0, 826, 835,
	0, 1115, 0, 0, 0, 126, 146, 0, 0, 939,
	0, 0, 151, 151, 0, 0, 930, 0, 0, 0,
	0, 106, 0, 0, 932, 934, 0, 0, 936, 769,
	0, 822, 814, 815, 816, 0, 821, 823, 0, 0,
	739, 0, 735, 0, 0, 732, 752, 729, 0, 297,
	860, 895, 839, 0, 914, 0, 0, 0, 991, 1003,
	0, 996, 997, 1027, 1122, 0, 0, 0, 1013, 1123,
	0, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	190, 478, 480, 0, 0, 486, 765, 0, 0, 0,
	0, 1112, 1392, -2, -2, 1413, 0, 1727, 1729, 1106,
	0, 1553, 0, 0, -2, 0, 0, 0, 1077, 0,
	1138, 1136, 1078, 1079, 1207, 0, 1176, 0, 1231, 123,
	0, 784, 785, 1712, 787, 0, 789, 792, 0, 795,
	1748, 0, 799, 806, 827, 0, 761, 0, 832, 833,
	919, 920, 837, 0, 125, 127, 145, 922, 0, 128,
	135, 0, 0, 82, 0, 0, 1798, 109, 107, 105,
	84, 0, 729, 768, 0, 813, 0, 824, 825, 737,
	0, 731, 0, 0, 0, 0, 0, 298, 301, 0,
	304, 0, 0, 915, 0, 0, 0, 998, 999, 313,
	0, 0, 0, 1027, 1038, 167, 0, 0, 837, 0,
	0, 803, 0, 172, 0, 482, 0, 484, 0, 698,
	700, 0, 0, 1483, 1571, 0, 1506, 1507, -2, 0,
	1450, 1555, 1557, 0, 1149, 1225, 782, 786, 0, 0,
	0, 843, 0, 0, 0, 830, 831, 769, 0, 808,
	0, 0, 148, 0, 0, 0, 0, 0, 0, 0,
	0, 727, 0, 0, 740, 0, 736, 733, 734, 761,
	0, 302, 303, 0, 837, 0, 835, 0, 1000, 1001,
	0, 1020, 1021, 1023, 1028, 0, 0, 835, 837, 802,
	0, 481, 0, 0, 703, 704, 0, 0, 0, 0,
	1566, 1451, 0, 0, 0, 0, 794, 848, 0, 0,
	0, 828, 829, 826, 0, 0, 839, 130, 0, 921,
	837, 0, 773, 0, 0, 776, 0, 0, 110, 1798,
	108, 0, 0, 0, 818, 820, 741, 769, 739, 896,
	835, 0, 761, 0, 992, 0, 1022, 190, 190, 761,
	835, 190, 483, 485, 1563, 1583, 1572, -2, 2004, 1801,
	0, 1583, 1583, 1558, 1559, 0, 0, 796, 844, 845,
	0, 840, 841, 842, 1747, 797, 798, 807, 834, 0,
	843, 147, 761, 770, 0, 0, 771, 0, 0, 113,
	0, 115, 0, 817, 0, 729, 738, 761, 0, 769,
	0, 1222, 169, 170, 769, 761, 171, 1568, 0, 0,
	1574, 1575, 1576, 1577, 1578, 1569, 1570, 788, 0, 846,
	0, 847, 0, 0, 0, 0, 848, 133, 774, 0,
	777, 0, 111, 0, 819, 728, 769, 837, 912, 835,
	1019, 800, 769, 0, 1580, 1581, 0, 0, 0, 849,
	0, 852, 853, 0, 850, 0, 826, 0, 0, 764,
	912, 835, 909, 0, 761, 801, 1579, 1582, 1573, 793,
	851, 854, 855, 836, 809, 0, 0, 760, 762, 763,
	907, 761, 913, 769, 769, 0, 769, 912, 775, 0,
	912, 910, 0, 908, 0, 769, 778,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 454, 3, 460, 455, 3,
	465, 466, 458, 456, 470, 457, 467, 459, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 473, 3,
	446, 448, 447, 451, 469, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 463, 3, 464, 461, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 471, 453, 472, 449,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 450, 57789, 452,
	57790, 462, 57791, 468, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1115
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1120
		{
			return helpWith(sqllex, "")
		}
	case 7:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1124
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1125
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1126
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1127
		{
			return helpWith(sqllex, "GRANT")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1128
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1129
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1130
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1131
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1135
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1144
		{
			return helpWith(sqllex, "ALTER USER")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1145
		{
			return helpWith(sqllex, "ALTER")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1148
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1149
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1150
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1151
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1152
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1153
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1154
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1208
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1234
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1245
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1260
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 59:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1264
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 60:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1268
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 62:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1279
		{
			return helpWith(sqllex, "ALTER USER")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1291
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1310
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1342
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1346
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 78:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1350
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1356
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 80:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1360
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 81:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1366
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1375
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1386
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1390
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1396
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 86:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1404
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 87:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1414
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1418
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1428
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1439
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1446
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1458
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1465
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1473
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1478
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1482
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1487
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1493
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1501
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1512
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 103:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1522
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 104:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1532
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 105:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1541
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 106:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1552
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 107:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1558
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1566
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1570
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1574
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 111:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1578
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1584
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1589
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1600
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1604
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1610
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1614
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1621
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1626
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1631
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1636
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1641
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1646
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1651
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1656
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1661
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1666
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1671
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1680
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1692
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.colType(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1702
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1709
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 133:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1713
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1721
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1728
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1737
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1746
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1751
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1758
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1766
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1767
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1771
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1775
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1781
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1789
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1793
		{
			sqlVAL.union.val = nil
		}
	case 147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1799
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1803
		{
			sqlVAL.union.val = nil
		}
	case 149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1810
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1814
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1818
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1824
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1828
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1854
		{
			sqlVAL.union.val = &tree.Backup{DescriptorCoverage: tree.AllDescriptors, To: sqlDollar[3].union.partitionedBackup(), IncrementalFrom: sqlDollar[5].union.exprs(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1858
		{
			sqlVAL.union.val = &tree.Backup{Targets: sqlDollar[2].union.targetList(), To: sqlDollar[4].union.partitionedBackup(), IncrementalFrom: sqlDollar[6].union.exprs(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[7].union.kvOptions()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1861
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1884
		{
			sqlVAL.union.val = &tree.Restore{DescriptorCoverage: tree.AllDescriptors, From: sqlDollar[3].union.partitionedBackups(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1888
		{
			sqlVAL.union.val = &tree.Restore{Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.partitionedBackups(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1891
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1895
		{
			sqlVAL.union.val = tree.PartitionedBackup{sqlDollar[1].union.expr()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1899
		{
			sqlVAL.union.val = tree.PartitionedBackup(sqlDollar[2].union.exprs())
		}
	case 162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1905
		{
			sqlVAL.union.val = []tree.PartitionedBackup{sqlDollar[1].union.partitionedBackup()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1909
		{
			sqlVAL.union.val = append(sqlDollar[1].union.partitionedBackups(), sqlDollar[3].union.partitionedBackup())
		}
	case 164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1915
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1952
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1957
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1961
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1967
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1972
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1977
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1982
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1987
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1991
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2007
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2010
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2014
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2018
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2026
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2030
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2036
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2040
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2046
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2050
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2054
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2058
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2064
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2068
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2078
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2082
		{
			sqlVAL.union.val = nil
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2088
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2102
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2103
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2104
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2105
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2115
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2123
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2125
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2128
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2138
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2147
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2155
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2157
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2161
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2164
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2174
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2183
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2191
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2193
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2197
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2200
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 215:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2204
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2208
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2212
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2225
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2231
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2236
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2248
		{
			return helpWith(sqllex, "CREATE USER")
		}
	case 224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2249
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2251
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2252
		{
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2253
		{
			return helpWith(sqllex, "CREATE")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2256
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2257
		{
			return unimplemented(sqllex, "create cast")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2258
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2259
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2260
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2261
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2262
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2263
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2264
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2265
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2266
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2267
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2268
		{
			return unimplementedWithIssue(sqllex, 41649)
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2269
		{
			return unimplemented(sqllex, "create operator")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2270
		{
			return unimplemented(sqllex, "create publication")
		}
	case 245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2271
		{
			return unimplemented(sqllex, "create rule")
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2272
		{
			return unimplementedWithIssueDetail(sqllex, 26443, "create")
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2273
		{
			return unimplemented(sqllex, "create server")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2274
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2275
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2276
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2279
		{
		}
	case 252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2280
		{
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2283
		{
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2284
		{
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2287
		{
		}
	case 256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2288
		{
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2291
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2292
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2293
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2294
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2295
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2296
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2297
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2298
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2299
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2300
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2301
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2302
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2303
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2304
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2305
		{
			return unimplementedWithIssueDetail(sqllex, 26443, "drop")
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2306
		{
			return unimplemented(sqllex, "drop server")
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2307
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2308
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2309
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "drop type")
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2310
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2314
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2315
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2316
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2317
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2319
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2320
		{
		}
	case 289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2321
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2322
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2332
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2340
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2344
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2348
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2354
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2358
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2367
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2374
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2380
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2386
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2390
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2401
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2413
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2421
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2429
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2439
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2443
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2449
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2453
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2460
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2464
		{

			sqlVAL.union.val = nil
		}
	case 313:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2478
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2488
		{
			return helpWith(sqllex, "DELETE")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2491
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2492
		{
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2500
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2503
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2504
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2505
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2506
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2507
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2516
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2517
		{
			return helpWith(sqllex, "DROP USER")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2518
		{
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2519
		{
			return helpWith(sqllex, "DROP")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2522
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2523
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2524
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2525
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2526
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2534
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2538
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2541
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2549
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2553
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2556
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2564
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2568
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2571
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2579
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[3].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[5].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2594
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2602
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2610
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2617
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2625
		{
			sqlVAL.union.val = &tree.DropUser{Names: sqlDollar[3].union.exprs(), IfExists: false}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2629
		{
			sqlVAL.union.val = &tree.DropUser{Names: sqlDollar[5].union.exprs(), IfExists: true}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2632
		{
			return helpWith(sqllex, "DROP USER")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2640
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2644
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2647
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2651
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2656
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2679
		{
			sqlVAL.union.val = &tree.Explain{Statement: sqlDollar[2].union.stmt()}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2682
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2684
		{
			sqlVAL.union.val = &tree.Explain{Options: sqlDollar[3].union.strs(), Statement: sqlDollar[5].union.stmt()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2688
		{
			sqlVAL.union.val = &tree.Explain{Options: []string{"DISTSQL", "ANALYZE"}, Statement: sqlDollar[3].union.stmt()}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = &tree.Explain{Options: []string{"DISTSQL", "ANALYZE"}, Statement: sqlDollar[3].union.stmt()}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2696
		{
			sqlVAL.union.val = &tree.Explain{Options: append(sqlDollar[4].union.strs(), "ANALYZE"), Statement: sqlDollar[6].union.stmt()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2700
		{
			sqlVAL.union.val = &tree.Explain{Options: append(sqlDollar[4].union.strs(), "ANALYZE"), Statement: sqlDollar[6].union.stmt()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2707
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2711
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2714
		{
			return helpWith(sqllex, "DELETE")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2716
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2717
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2718
		{
			return helpWith(sqllex, "INSERT")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2719
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2721
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2722
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2723
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2726
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2731
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2732
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2733
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2738
		{
			return helpWith(sqllex, "DELETE")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2739
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2740
		{
			return helpWith(sqllex, "INSERT")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2742
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2746
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2747
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2751
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2755
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 418:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2765
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2773
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2781
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2785
		{
			sqlVAL.union.val = sqlDollar[2].union.colTypes()
		}
	case 422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2789
		{
			sqlVAL.union.val = []*types.T(nil)
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2799
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2806
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2814
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2818
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 427:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2822
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2832
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2836
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2840
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2844
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2847
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2867
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2871
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2875
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2878
		{
			return helpWith(sqllex, "GRANT")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2898
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2902
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2906
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2909
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2914
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2918
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2928
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2932
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2946
		{
			return helpWith(sqllex, "RESET")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2947
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2955
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2959
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2962
		{
			return helpWith(sqllex, "RESET")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2970
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2973
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2984
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2987
		{
			return helpWith(sqllex, "USE")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2991
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2992
		{
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2993
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2994
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2998
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2999
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3000
		{
			return helpWith(sqllex, "USE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3016
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3031
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3034
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3052
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3060
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3064
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3068
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3074
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3078
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3084
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3088
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3092
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3096
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3100
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3111
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3114
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3124
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3144
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 494:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3149
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3166
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3169
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3171
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3174
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3178
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3197
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3204
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3209
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3214
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3219
		{
			return unimplemented(sqllex, "set from current")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3220
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3228
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3233
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3240
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3244
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3250
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3254
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3261
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3286
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3292
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3296
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3300
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3304
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3308
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3314
		{
			sqlVAL.union.val = tree.Low
		}
	case 526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3318
		{
			sqlVAL.union.val = tree.Normal
		}
	case 527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3322
		{
			sqlVAL.union.val = tree.High
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3333
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3337
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3341
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3346
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3350
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3363
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3364
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3365
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3366
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3367
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3368
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3370
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3371
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3372
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3373
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3374
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3375
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3376
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3378
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3379
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3380
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3381
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3382
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3383
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3384
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3385
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3386
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3387
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3388
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3390
		{
			return helpWith(sqllex, "SHOW")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3397
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3398
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3399
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3410
		{
			sqlVAL.str = "client_encoding"
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3413
		{
			sqlVAL.str = "timezone"
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3414
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3428
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3432
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3436
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3447
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3455
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3463
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3471
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3480
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3489
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3497
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3507
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3511
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3514
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3516
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3519
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3521
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3525
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3528
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3536
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3539
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3547
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3551
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3555
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3559
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3562
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3570
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3573
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3586
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3594
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3602
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3605
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3607
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3611
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3615
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3618
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3620
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3624
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3627
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3638
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3640
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3643
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3651
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3654
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3659
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3663
		{
			sqlVAL.union.val = true
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3665
		{
			sqlVAL.union.val = true
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3667
		{
			sqlVAL.union.val = false
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3677
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3681
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3684
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3685
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3687
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3691
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3694
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3696
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3704
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3712
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3721
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3724
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3726
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3729
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3731
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3735
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3738
		{
			sqlVAL.union.val = true
		}
	case 662:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3739
		{
			sqlVAL.union.val = false
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3747
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3750
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3752
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3755
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3763
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3773
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3783
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3786
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3789
		{
			sqlVAL.union.val = true
		}
	case 672:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3790
		{
			sqlVAL.union.val = false
		}
	case 673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3797
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3801
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3804
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3811
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3815
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3818
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3825
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3829
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3837
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3842
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3847
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3851
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3859
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3863
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3867
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3880
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3883
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3891
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3894
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3898
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3902
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3906
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3914
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3922
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3929
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3936
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3940
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:3951
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:3959
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3965
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3974
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3979
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3983
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3986
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3990
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3997
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 712:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4002
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4122
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4126
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4130
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4169
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4173
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4178
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4182
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4191
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4198
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 723:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4202
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4214
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4223
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4226
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4262
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4276
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[13].union.storageParams(),
			}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.union.val = nil
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4296
		{

			sqlVAL.union.val = nil
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4302
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4307
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4313
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4317
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4323
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4327
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 737:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4333
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:4345
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
			}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4358
		{
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4359
		{
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4360
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4378
		{
			sqlVAL.union.val = true
		}
	case 743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4379
		{
			sqlVAL.union.val = true
		}
	case 744:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4380
		{
			sqlVAL.union.val = false
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4384
		{
			sqlVAL.union.val = true
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4385
		{
			sqlVAL.union.val = true
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4386
		{
			sqlVAL.union.val = true
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = true
		}
	case 750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4388
		{
			return unimplemented(sqllex, "create unlogged")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4393
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4399
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4403
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4409
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4415
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4418
		{
			return unimplementedWithIssue(sqllex, 30840)
		}
	case 760:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4422
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4431
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4438
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4443
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 764:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4448
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4454
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 767:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4461
		{
			sqlVAL.str = ""
		}
	case 769:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4468
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 770:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4474
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4481
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4488
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4494
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4498
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 775:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4504
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4514
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4518
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 778:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4524
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4538
		{
			typ := sqlDollar[2].union.colType()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, isSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 781:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4553
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4559
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4563
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4567
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4571
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4579
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4583
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4601
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4609
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4613
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4617
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4624
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4628
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4632
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4642
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4646
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4650
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 800:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4657
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Sharded:     sqlDollar[6].union.shardedIndexDef(),
				Storing:     sqlDollar[7].union.nameList(),
				Interleave:  sqlDollar[8].union.interleave(),
				PartitionBy: sqlDollar[9].union.partitionBy(),
			}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4668
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Sharded:     sqlDollar[7].union.shardedIndexDef(),
					Storing:     sqlDollar[8].union.nameList(),
					Interleave:  sqlDollar[9].union.interleave(),
					PartitionBy: sqlDollar[10].union.partitionBy(),
				},
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4681
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:     tree.Name(sqlDollar[3].str),
				Columns:  sqlDollar[5].union.idxElems(),
				Inverted: true,
			}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4691
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4703
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4708
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4714
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4720
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
				},
			}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4731
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
					Sharded: sqlDollar[6].union.shardedIndexDef(),
				},
				PrimaryKey: true,
			}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4742
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4756
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 811:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4760
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4766
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4776
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4787
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4791
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4798
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4804
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4815
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4819
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4825
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4831
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 822:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4835
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4841
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4845
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4851
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4856
		{
		}
	case 827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4857
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4858
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4859
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4860
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4861
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4878
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 835:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4882
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 836:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4894
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4900
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 839:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4904
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4924
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4928
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4932
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4936
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4945
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4949
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4953
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4957
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4961
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4967
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4981
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4985
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4989
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4993
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4997
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5003
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5007
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5013
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5032
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:      name,
				Temporary: sqlDollar[2].union.persistenceType(),
				Options:   sqlDollar[5].union.seqOpts(),
			}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5041
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5049
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5053
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5056
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5057
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5060
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.colType().SQLString())
		}
	case 867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5061
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5063
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5064
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5065
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5075
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5078
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5080
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5082
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5084
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5085
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5087
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5088
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5090
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5092
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5100
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5103
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = &tree.CreateUser{Name: sqlDollar[3].union.expr(), Password: sqlDollar[4].union.expr()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5115
		{
			sqlVAL.union.val = &tree.CreateUser{Name: sqlDollar[6].union.expr(), Password: sqlDollar[7].union.expr(), IfNotExists: true}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5118
		{
			return helpWith(sqllex, "CREATE USER")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5123
		{
			sqlVAL.union.val = nil
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5129
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5133
		{
			sqlVAL.union.val = tree.DNull
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5143
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5147
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5150
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5155
		{
		}
	case 894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5156
		{
		}
	case 895:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5164
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: false,
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5175
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5185
		{
			return unimplementedWithIssue(sqllex, 24897)
		}
	case 898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5186
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5189
		{
		}
	case 900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5190
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5196
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 902:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5198
		{
			return unimplementedWithIssue(sqllex, 24873)
		}
	case 903:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5200
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5202
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5204
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5206
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5222
		{
			table := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[4].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Columns:     sqlDollar[9].union.idxElems(),
				Sharded:     sqlDollar[11].union.shardedIndexDef(),
				Storing:     sqlDollar[12].union.nameList(),
				Interleave:  sqlDollar[13].union.interleave(),
				PartitionBy: sqlDollar[14].union.partitionBy(),
				Inverted:    sqlDollar[7].union.bool(),
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:5237
		{
			table := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[7].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				IfNotExists: true,
				Columns:     sqlDollar[12].union.idxElems(),
				Sharded:     sqlDollar[14].union.shardedIndexDef(),
				Storing:     sqlDollar[15].union.nameList(),
				Interleave:  sqlDollar[16].union.interleave(),
				PartitionBy: sqlDollar[17].union.partitionBy(),
				Inverted:    sqlDollar[10].union.bool(),
			}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5253
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[5].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Inverted:    true,
				Columns:     sqlDollar[9].union.idxElems(),
				Storing:     sqlDollar[11].union.nameList(),
				Interleave:  sqlDollar[12].union.interleave(),
				PartitionBy: sqlDollar[13].union.partitionBy(),
			}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:5267
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[8].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Inverted:    true,
				IfNotExists: true,
				Columns:     sqlDollar[12].union.idxElems(),
				Storing:     sqlDollar[14].union.nameList(),
				Interleave:  sqlDollar[15].union.interleave(),
				PartitionBy: sqlDollar[16].union.partitionBy(),
			}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5281
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5284
		{
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5285
		{
			return unimplementedWithIssue(sqllex, 9683)
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5289
		{

			switch sqlDollar[2].str {
			case "gin":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "gist", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5304
		{
			sqlVAL.union.val = false
		}
	case 916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5310
		{
			sqlVAL.union.val = true
		}
	case 917:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5314
		{
			sqlVAL.union.val = false
		}
	case 918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5320
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5324
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5333
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5355
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 922:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5356
		{
			sqlVAL.str = ""
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5360
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5364
		{
			sqlVAL.union.val = tree.Descending
		}
	case 925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5368
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 926:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5374
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5381
		{
			sqlVAL.union.val = &tree.AlterUserSetPassword{Name: sqlDollar[3].union.expr(), Password: sqlDollar[4].union.expr()}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5385
		{
			sqlVAL.union.val = &tree.AlterUserSetPassword{Name: sqlDollar[5].union.expr(), Password: sqlDollar[6].union.expr(), IfExists: true}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5391
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5397
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5405
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5411
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5419
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5425
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5433
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5437
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5442
		{
		}
	case 938:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5443
		{
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5446
		{
		}
	case 940:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5447
		{
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5455
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5458
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5468
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5477
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5480
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5488
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5491
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5495
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5496
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5497
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5513
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5516
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5518
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5521
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5531
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5534
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5539
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5543
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5548
		{
		}
	case 965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5549
		{
		}
	case 966:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5550
		{
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5558
		{
			if sqlDollar[2].str != "" {
				sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
			} else {
				sqlVAL.union.val = &tree.RollbackTransaction{}
			}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5565
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5568
		{
		}
	case 970:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5569
		{
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5573
		{
			sqlVAL.str = ""
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5577
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5581
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 974:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5585
		{
			sqlVAL.str = ""
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5591
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5595
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5601
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5605
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5611
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5615
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5628
		{
		}
	case 982:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5630
		{
		}
	case 983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5634
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5639
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5643
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5647
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5653
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5659
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5665
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5669
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 991:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5689
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5699
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5703
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 995:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5707
		{
			sqlVAL.str = ""
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5713
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 997:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5717
		{
			sqlVAL.str = ""
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5723
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 999:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5727
		{
			sqlVAL.str = ""
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5733
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5737
		{
			sqlVAL.str = ""
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5742
		{
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5743
		{
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5755
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5762
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5769
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5780
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5787
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5791
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5800
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5805
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5811
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5815
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5819
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5825
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5829
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5849
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5853
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5857
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5863
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5866
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5867
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5869
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5875
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5880
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5884
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5901
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5913
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5916
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5919
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5925
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5929
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5942
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5945
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5949
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5992
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5998
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6002
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6017
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6021
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6025
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6029
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6033
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6037
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6041
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6045
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6050
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6051
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6054
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6055
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6059
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6063
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6069
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6078
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6079
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6080
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6081
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6084
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6085
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6088
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6089
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6090
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6095
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6130
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6131
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6132
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6154
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6167
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6181
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6193
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6197
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6206
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6215
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6230
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6237
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6249
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6253
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6258
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6264
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6268
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6274
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6282
		{
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6283
		{
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6287
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6291
		{
			sqlVAL.union.val = nil
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6296
		{
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6297
		{
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6301
		{
			sqlVAL.union.val = true
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6305
		{
			sqlVAL.union.val = false
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6309
		{
			sqlVAL.union.val = false
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6315
		{
			sqlVAL.union.val = true
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6321
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6326
		{
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6327
		{
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6331
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6335
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6341
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6347
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6351
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6357
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6378
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6383
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6395
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6399
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6403
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6412
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6421
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6432
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6433
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6437
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6441
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6445
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6454
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6460
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6467
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6476
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6480
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6484
		{
			sqlVAL.union.val = tree.NewNumVal(constant.MakeInt64(1), "", false)
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6490
		{
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6491
		{
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6494
		{
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6495
		{
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6512
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6516
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6522
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6526
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6545
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6548
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6550
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6562
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6565
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6567
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6577
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6583
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6587
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6592
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6597
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6603
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6608
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6615
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6620
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6631
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6635
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6639
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6647
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6678
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6688
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6698
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6706
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6715
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6719
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6723
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6734
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6758
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6764
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6775
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6779
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6785
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6787
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6791
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6797
		{
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6799
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6802
		{
			sqlVAL.union.val = nil
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6803
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6804
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6808
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6812
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6818
		{
			sqlVAL.union.val = true
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6822
		{
			sqlVAL.union.val = false
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6846
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6854
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6858
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6868
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6872
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6879
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6885
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6892
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6898
		{
			sqlVAL.str = tree.AstFull
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6902
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6906
		{
			sqlVAL.str = tree.AstRight
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6910
		{
			sqlVAL.str = tree.AstInner
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6916
		{
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6917
		{
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6938
		{
			sqlVAL.str = tree.AstHash
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6942
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6946
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6950
		{
			sqlVAL.str = ""
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6963
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6967
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6973
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6974
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6975
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6979
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6984
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6998
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7002
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7008
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7014
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7024
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7034
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7041
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7053
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.colType()
			}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7066
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7074
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7075
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7085
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7092
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7093
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7095
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7103
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7104
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7132
		{
			sqlVAL.union.val = types.Jsonb
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7136
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7140
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7144
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7148
		{
			sqlVAL.union.val = types.String
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7152
		{
			sqlVAL.union.val = types.Name
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7156
		{
			switch sqllex.(*lexer).nakedIntType.Width() {
			case 32:
				sqlVAL.union.val = &serial4Type
			default:
				sqlVAL.union.val = &serial8Type
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7165
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7169
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7173
		{
			sqlVAL.union.val = &serial4Type
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7181
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7185
		{
			sqlVAL.union.val = types.Uuid
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7189
		{
			sqlVAL.union.val = types.INet
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7193
		{
			sqlVAL.union.val = types.Oid
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = types.OidVector
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7201
		{
			sqlVAL.union.val = types.Int2Vector
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7205
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else {
				var ok bool
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						sqllex.Error("type does not exist")
						return 1
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7236
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7244
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7252
		{
			sqlVAL.union.val = nil
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7259
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7263
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7267
		{
			sqlVAL.union.val = types.Int2
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7271
		{
			sqlVAL.union.val = types.Int2
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7275
		{
			sqlVAL.union.val = types.Int4
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.union.val = types.Int
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7283
		{
			sqlVAL.union.val = types.Int
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = types.Int
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7291
		{
			sqlVAL.union.val = types.Float4
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.union.val = types.Float4
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7299
		{
			sqlVAL.union.val = types.Float
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7303
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7307
		{
			sqlVAL.union.val = types.Float
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7311
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7319
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7327
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7335
		{
			sqlVAL.union.val = types.Bool
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.union.val = types.Bool
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7346
		{
			sqlVAL.union.val = types.RegProc
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7350
		{
			sqlVAL.union.val = types.RegProcedure
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7354
		{
			sqlVAL.union.val = types.RegClass
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7358
		{
			sqlVAL.union.val = types.RegType
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7362
		{
			sqlVAL.union.val = types.RegNamespace
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7368
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7381
		{
			sqlVAL.union.val = types.Float
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7387
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7393
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7401
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7405
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7409
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7415
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7427
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7433
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7437
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7441
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7445
		{
			sqlVAL.union.val = types.String
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7454
		{
			sqlVAL.union.val = true
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7455
		{
			sqlVAL.union.val = false
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = types.Date
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7464
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7472
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7484
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7486
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7495
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7503
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7516
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7520
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7530
		{
			sqlVAL.union.val = true
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7531
		{
			sqlVAL.union.val = false
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7532
		{
			sqlVAL.union.val = false
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7536
		{
			sqlVAL.union.val = types.Interval
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7540
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7544
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7555
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7563
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7571
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7579
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7587
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7595
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7601
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7610
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7628
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7634
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7643
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7659
		{
			sqlVAL.union.val = nil
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7665
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7673
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7710
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7714
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7718
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7722
		{

			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7735
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7740
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7744
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7752
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7756
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7760
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7764
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7768
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7772
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7776
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7780
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7784
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7788
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7792
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7796
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7800
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7804
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7808
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7812
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7816
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7820
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7824
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7828
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7832
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7836
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7840
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7844
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7852
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7856
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7860
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7864
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7868
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7872
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7876
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7880
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7884
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7888
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7892
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7896
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7900
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7904
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7916
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7920
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7924
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7928
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7932
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7936
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7972
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7976
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7979
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7981
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7985
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7989
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7993
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7997
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8001
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8009
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8013
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8017
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8021
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8025
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8029
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8033
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8037
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8041
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8045
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8062
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8067
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8079
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8083
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8087
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8091
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8095
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8099
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8103
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8107
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8111
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8115
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8119
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8123
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8127
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8131
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8135
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8139
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8143
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8147
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8159
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8163
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8167
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8171
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8175
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8179
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8183
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8187
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8201
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8209
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8245
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8253
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8257
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8261
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8266
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8268
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8272
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8276
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8280
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8284
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8288
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8292
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8301
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8308
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8312
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8316
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8321
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8325
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8329
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8333
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8337
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8340
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8344
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8348
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy()}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8351
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8352
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy()}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8360
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8364
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8367
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8378
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8385
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8394
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8395
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8404
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8408
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8414
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8426
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8440
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8444
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8448
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8452
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.CastExplicit}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8456
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8460
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8468
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8472
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8476
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8480
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8484
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8488
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8495
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8498
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8500
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8503
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8505
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8509
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8512
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8514
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8521
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8527
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8530
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8532
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8536
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8539
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8541
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8544
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8549
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8551
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8554
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8556
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8559
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8561
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8568
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8569
		{
			return unimplemented(sqllex, "treat")
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8571
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8575
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8579
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8590
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8592
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8595
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8600
		{
			return unimplemented(sqllex, "within group")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8601
		{
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8605
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8609
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8616
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8620
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8626
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8630
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8636
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8644
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8648
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8652
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8659
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.str = ""
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8685
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8689
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8695
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8703
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8711
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8719
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8725
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8738
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8766
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8770
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8774
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8778
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8785
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8794
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8798
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8802
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8806
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8811
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8824
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8828
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8835
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8847
		{
			sqlVAL.union.val = tree.Any
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.union.val = tree.Some
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = tree.All
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8860
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8861
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8862
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8863
		{
			sqlVAL.union.val = tree.Div
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8864
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8865
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8866
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8867
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8868
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8869
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8870
		{
			sqlVAL.union.val = tree.LT
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8871
		{
			sqlVAL.union.val = tree.GT
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8872
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8873
		{
			sqlVAL.union.val = tree.LE
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8874
		{
			sqlVAL.union.val = tree.GE
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8875
		{
			sqlVAL.union.val = tree.NE
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8879
		{
			sqlVAL.union.val = tree.Like
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8880
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8881
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8882
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8909
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8919
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8934
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8938
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8944
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8948
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8955
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8961
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8965
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8971
		{
			sqlVAL.union.val = []*types.T{sqlDollar[1].union.colType()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colTypes(), sqlDollar[3].union.colType())
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8981
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8985
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8991
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8995
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9001
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9005
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9028
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9032
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9036
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9042
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9049
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9053
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9078
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9082
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9086
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9098
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9112
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9130
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9137
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9141
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9153
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9157
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9164
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9170
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9174
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9181
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9187
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9191
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9196
		{
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9197
		{
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9201
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9205
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9211
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9220
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9224
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9228
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9236
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9240
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9246
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9250
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9269
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9277
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.TableName)
			name.TableName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9300
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9309
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9317
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9321
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9343
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9352
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9363
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9372
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9380
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9392
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9489
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9496
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9500
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9504
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9526
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9539
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9557
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9570
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9577
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9602
		{
			sqlVAL.str = ""
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9608
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9612
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
