// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:72

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistenceType() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) partitionedBackup() tree.PartitionedBackup {
	return u.val.(tree.PartitionedBackup)
}
func (u *sqlSymUnion) partitionedBackups() []tree.PartitionedBackup {
	return u.val.([]tree.PartitionedBackup)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}

//line sql-gen.y:667
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11284

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 29,
	-2, 1263,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 67,
	429, 188,
	-2, 0,
	-1, 77,
	202, 1071,
	214, 1071,
	229, 307,
	325, 307,
	334, 869,
	365, 307,
	377, 869,
	414, 869,
	439, 307,
	464, 869,
	-2, 0,
	-1, 83,
	229, 311,
	-2, 0,
	-1, 84,
	118, 1263,
	208, 1263,
	449, 1263,
	450, 1263,
	-2, 0,
	-1, 100,
	133, 1234,
	151, 1234,
	164, 1234,
	211, 1234,
	241, 1234,
	284, 1234,
	294, 1234,
	444, 1234,
	-2, 1205,
	-1, 133,
	141, 755,
	228, 755,
	328, 725,
	382, 725,
	432, 755,
	-2, 0,
	-1, 135,
	4, 1265,
	21, 1265,
	22, 1265,
	23, 1265,
	24, 1265,
	25, 1265,
	26, 1265,
	28, 1265,
	29, 1265,
	35, 1265,
	40, 1265,
	41, 1265,
	42, 1265,
	43, 1265,
	44, 1265,
	45, 1265,
	46, 1265,
	47, 1265,
	48, 1265,
	50, 1265,
	51, 1265,
	52, 1265,
	54, 1265,
	55, 1265,
	56, 1265,
	57, 1265,
	58, 1265,
	62, 1265,
	63, 1265,
	64, 1265,
	65, 1265,
	67, 1265,
	68, 1265,
	69, 1265,
	73, 1265,
	74, 1265,
	75, 1265,
	76, 1265,
	77, 1265,
	78, 1265,
	79, 1265,
	82, 1265,
	83, 1265,
	84, 1265,
	85, 1265,
	87, 1265,
	89, 1265,
	90, 1265,
	91, 1265,
	93, 1265,
	95, 1265,
	96, 1265,
	104, 1265,
	105, 1265,
	106, 1265,
	107, 1265,
	109, 1265,
	110, 1265,
	111, 1265,
	113, 1265,
	114, 1265,
	115, 1265,
	117, 1265,
	118, 1265,
	120, 1265,
	121, 1265,
	124, 1265,
	125, 1265,
	126, 1265,
	128, 1265,
	129, 1265,
	131, 1265,
	132, 1265,
	134, 1265,
	135, 1265,
	136, 1265,
	137, 1265,
	138, 1265,
	139, 1265,
	140, 1265,
	141, 1265,
	142, 1265,
	143, 1265,
	144, 1265,
	145, 1265,
	146, 1265,
	147, 1265,
	148, 1265,
	150, 1265,
	156, 1265,
	157, 1265,
	158, 1265,
	159, 1265,
	163, 1265,
	165, 1265,
	169, 1265,
	170, 1265,
	171, 1265,
	172, 1265,
	173, 1265,
	174, 1265,
	176, 1265,
	177, 1265,
	179, 1265,
	180, 1265,
	182, 1265,
	183, 1265,
	184, 1265,
	185, 1265,
	186, 1265,
	187, 1265,
	188, 1265,
	189, 1265,
	190, 1265,
	192, 1265,
	193, 1265,
	195, 1265,
	196, 1265,
	197, 1265,
	198, 1265,
	202, 1265,
	203, 1265,
	204, 1265,
	205, 1265,
	208, 1265,
	209, 1265,
	210, 1265,
	212, 1265,
	214, 1265,
	216, 1265,
	218, 1265,
	219, 1265,
	220, 1265,
	222, 1265,
	226, 1265,
	227, 1265,
	228, 1265,
	229, 1265,
	230, 1265,
	232, 1265,
	233, 1265,
	235, 1265,
	236, 1265,
	238, 1265,
	239, 1265,
	242, 1265,
	243, 1265,
	244, 1265,
	247, 1265,
	248, 1265,
	249, 1265,
	250, 1265,
	252, 1265,
	253, 1265,
	254, 1265,
	255, 1265,
	256, 1265,
	257, 1265,
	258, 1265,
	259, 1265,
	260, 1265,
	261, 1265,
	262, 1265,
	264, 1265,
	266, 1265,
	267, 1265,
	268, 1265,
	269, 1265,
	270, 1265,
	271, 1265,
	273, 1265,
	275, 1265,
	277, 1265,
	279, 1265,
	280, 1265,
	281, 1265,
	282, 1265,
	283, 1265,
	286, 1265,
	289, 1265,
	290, 1265,
	291, 1265,
	292, 1265,
	295, 1265,
	296, 1265,
	297, 1265,
	299, 1265,
	301, 1265,
	302, 1265,
	303, 1265,
	304, 1265,
	305, 1265,
	306, 1265,
	307, 1265,
	308, 1265,
	309, 1265,
	310, 1265,
	311, 1265,
	312, 1265,
	314, 1265,
	315, 1265,
	316, 1265,
	317, 1265,
	318, 1265,
	319, 1265,
	320, 1265,
	321, 1265,
	322, 1265,
	324, 1265,
	326, 1265,
	327, 1265,
	328, 1265,
	329, 1265,
	330, 1265,
	331, 1265,
	332, 1265,
	333, 1265,
	334, 1265,
	335, 1265,
	336, 1265,
	343, 1265,
	345, 1265,
	346, 1265,
	347, 1265,
	348, 1265,
	349, 1265,
	350, 1265,
	351, 1265,
	352, 1265,
	354, 1265,
	355, 1265,
	356, 1265,
	358, 1265,
	359, 1265,
	360, 1265,
	361, 1265,
	362, 1265,
	363, 1265,
	365, 1265,
	366, 1265,
	367, 1265,
	368, 1265,
	369, 1265,
	370, 1265,
	371, 1265,
	372, 1265,
	373, 1265,
	374, 1265,
	375, 1265,
	377, 1265,
	378, 1265,
	379, 1265,
	380, 1265,
	381, 1265,
	382, 1265,
	384, 1265,
	385, 1265,
	386, 1265,
	387, 1265,
	388, 1265,
	390, 1265,
	391, 1265,
	392, 1265,
	394, 1265,
	396, 1265,
	397, 1265,
	398, 1265,
	399, 1265,
	400, 1265,
	401, 1265,
	402, 1265,
	403, 1265,
	404, 1265,
	405, 1265,
	406, 1265,
	407, 1265,
	408, 1265,
	410, 1265,
	411, 1265,
	413, 1265,
	415, 1265,
	416, 1265,
	417, 1265,
	418, 1265,
	419, 1265,
	420, 1265,
	421, 1265,
	422, 1265,
	424, 1265,
	425, 1265,
	426, 1265,
	427, 1265,
	428, 1265,
	430, 1265,
	432, 1265,
	433, 1265,
	434, 1265,
	435, 1265,
	436, 1265,
	438, 1265,
	439, 1265,
	440, 1265,
	442, 1265,
	443, 1265,
	446, 1265,
	447, 1265,
	448, 1265,
	449, 1265,
	450, 1265,
	451, 1265,
	452, 1265,
	454, 1265,
	457, 1265,
	458, 1265,
	459, 1265,
	460, 1265,
	461, 1265,
	462, 1265,
	464, 1265,
	465, 1265,
	466, 1265,
	471, 1265,
	472, 1265,
	473, 1265,
	474, 1265,
	475, 1265,
	476, 1265,
	-2, 0,
	-1, 136,
	1, 1139,
	218, 1139,
	324, 1139,
	332, 1139,
	479, 1139,
	503, 1139,
	-2, 0,
	-1, 138,
	1, 1139,
	503, 1139,
	-2, 0,
	-1, 139,
	1, 1139,
	503, 1139,
	-2, 0,
	-1, 140,
	1, 1139,
	429, 1139,
	503, 1139,
	-2, 0,
	-1, 169,
	133, 1233,
	151, 1233,
	164, 1233,
	211, 1233,
	241, 1233,
	284, 1233,
	294, 1233,
	444, 1233,
	-2, 1208,
	-1, 205,
	4, 1272,
	5, 1272,
	6, 1272,
	7, 1272,
	8, 1272,
	9, 1272,
	10, 1272,
	21, 1272,
	22, 1272,
	23, 1272,
	24, 1272,
	25, 1272,
	26, 1272,
	28, 1272,
	29, 1272,
	35, 1272,
	36, 1272,
	40, 1272,
	41, 1272,
	42, 1272,
	43, 1272,
	44, 1272,
	45, 1272,
	46, 1272,
	47, 1272,
	48, 1272,
	50, 1272,
	51, 1272,
	52, 1272,
	54, 1272,
	55, 1272,
	56, 1272,
	57, 1272,
	58, 1272,
	59, 1272,
	60, 1272,
	61, 1272,
	62, 1272,
	63, 1272,
	64, 1272,
	65, 1272,
	67, 1272,
	68, 1272,
	69, 1272,
	71, 1272,
	73, 1272,
	74, 1272,
	75, 1272,
	76, 1272,
	77, 1272,
	78, 1272,
	79, 1272,
	82, 1272,
	83, 1272,
	84, 1272,
	85, 1272,
	87, 1272,
	89, 1272,
	90, 1272,
	91, 1272,
	93, 1272,
	94, 1272,
	95, 1272,
	96, 1272,
	97, 1272,
	98, 1272,
	99, 1272,
	100, 1272,
	101, 1272,
	102, 1272,
	103, 1272,
	104, 1272,
	105, 1272,
	106, 1272,
	107, 1272,
	108, 1272,
	109, 1272,
	110, 1272,
	111, 1272,
	112, 1272,
	113, 1272,
	114, 1272,
	115, 1272,
	117, 1272,
	118, 1272,
	120, 1272,
	121, 1272,
	124, 1272,
	125, 1272,
	126, 1272,
	128, 1272,
	129, 1272,
	131, 1272,
	132, 1272,
	134, 1272,
	135, 1272,
	136, 1272,
	137, 1272,
	138, 1272,
	139, 1272,
	140, 1272,
	141, 1272,
	142, 1272,
	143, 1272,
	144, 1272,
	145, 1272,
	146, 1272,
	147, 1272,
	148, 1272,
	149, 1272,
	150, 1272,
	156, 1272,
	157, 1272,
	158, 1272,
	159, 1272,
	163, 1272,
	165, 1272,
	168, 1272,
	169, 1272,
	170, 1272,
	171, 1272,
	172, 1272,
	173, 1272,
	174, 1272,
	176, 1272,
	177, 1272,
	179, 1272,
	180, 1272,
	182, 1272,
	183, 1272,
	184, 1272,
	185, 1272,
	186, 1272,
	187, 1272,
	188, 1272,
	189, 1272,
	190, 1272,
	191, 1272,
	192, 1272,
	193, 1272,
	195, 1272,
	196, 1272,
	197, 1272,
	198, 1272,
	202, 1272,
	203, 1272,
	204, 1272,
	205, 1272,
	207, 1272,
	208, 1272,
	209, 1272,
	210, 1272,
	212, 1272,
	214, 1272,
	215, 1272,
	216, 1272,
	217, 1272,
	218, 1272,
	219, 1272,
	220, 1272,
	221, 1272,
	222, 1272,
	226, 1272,
	227, 1272,
	228, 1272,
	229, 1272,
	230, 1272,
	232, 1272,
	233, 1272,
	235, 1272,
	236, 1272,
	237, 1272,
	238, 1272,
	239, 1272,
	240, 1272,
	242, 1272,
	243, 1272,
	244, 1272,
	245, 1272,
	246, 1272,
	247, 1272,
	248, 1272,
	249, 1272,
	250, 1272,
	252, 1272,
	253, 1272,
	254, 1272,
	255, 1272,
	256, 1272,
	257, 1272,
	258, 1272,
	259, 1272,
	260, 1272,
	261, 1272,
	262, 1272,
	264, 1272,
	265, 1272,
	266, 1272,
	267, 1272,
	268, 1272,
	269, 1272,
	270, 1272,
	271, 1272,
	272, 1272,
	273, 1272,
	274, 1272,
	275, 1272,
	276, 1272,
	277, 1272,
	278, 1272,
	279, 1272,
	280, 1272,
	281, 1272,
	282, 1272,
	283, 1272,
	286, 1272,
	290, 1272,
	291, 1272,
	292, 1272,
	295, 1272,
	296, 1272,
	297, 1272,
	298, 1272,
	299, 1272,
	300, 1272,
	301, 1272,
	302, 1272,
	303, 1272,
	304, 1272,
	305, 1272,
	306, 1272,
	307, 1272,
	308, 1272,
	309, 1272,
	310, 1272,
	311, 1272,
	312, 1272,
	314, 1272,
	315, 1272,
	316, 1272,
	317, 1272,
	318, 1272,
	319, 1272,
	320, 1272,
	321, 1272,
	322, 1272,
	324, 1272,
	326, 1272,
	327, 1272,
	328, 1272,
	329, 1272,
	330, 1272,
	331, 1272,
	332, 1272,
	333, 1272,
	334, 1272,
	335, 1272,
	336, 1272,
	343, 1272,
	345, 1272,
	346, 1272,
	347, 1272,
	348, 1272,
	349, 1272,
	350, 1272,
	351, 1272,
	352, 1272,
	354, 1272,
	355, 1272,
	356, 1272,
	357, 1272,
	358, 1272,
	359, 1272,
	360, 1272,
	361, 1272,
	362, 1272,
	363, 1272,
	365, 1272,
	366, 1272,
	367, 1272,
	368, 1272,
	369, 1272,
	370, 1272,
	371, 1272,
	372, 1272,
	373, 1272,
	374, 1272,
	375, 1272,
	377, 1272,
	378, 1272,
	379, 1272,
	380, 1272,
	381, 1272,
	382, 1272,
	383, 1272,
	384, 1272,
	385, 1272,
	386, 1272,
	387, 1272,
	388, 1272,
	389, 1272,
	390, 1272,
	391, 1272,
	392, 1272,
	394, 1272,
	396, 1272,
	397, 1272,
	398, 1272,
	399, 1272,
	400, 1272,
	401, 1272,
	402, 1272,
	403, 1272,
	404, 1272,
	405, 1272,
	406, 1272,
	407, 1272,
	408, 1272,
	410, 1272,
	411, 1272,
	412, 1272,
	413, 1272,
	415, 1272,
	416, 1272,
	417, 1272,
	418, 1272,
	419, 1272,
	420, 1272,
	421, 1272,
	422, 1272,
	424, 1272,
	425, 1272,
	426, 1272,
	427, 1272,
	428, 1272,
	430, 1272,
	432, 1272,
	433, 1272,
	434, 1272,
	435, 1272,
	436, 1272,
	437, 1272,
	438, 1272,
	439, 1272,
	440, 1272,
	442, 1272,
	443, 1272,
	445, 1272,
	446, 1272,
	447, 1272,
	448, 1272,
	449, 1272,
	450, 1272,
	451, 1272,
	452, 1272,
	453, 1272,
	454, 1272,
	457, 1272,
	458, 1272,
	459, 1272,
	460, 1272,
	461, 1272,
	462, 1272,
	464, 1272,
	465, 1272,
	466, 1272,
	471, 1272,
	472, 1272,
	473, 1272,
	474, 1272,
	475, 1272,
	476, 1272,
	477, 1272,
	484, 1272,
	491, 1272,
	492, 1272,
	493, 1272,
	500, 1272,
	504, 1272,
	-2, 0,
	-1, 604,
	167, 1978,
	429, 1978,
	483, 1978,
	502, 1978,
	-2, 0,
	-1, 605,
	167, 2060,
	429, 2060,
	483, 2060,
	502, 2060,
	-2, 0,
	-1, 606,
	167, 1966,
	429, 1966,
	483, 1966,
	502, 1966,
	-2, 0,
	-1, 608,
	167, 2158,
	429, 2158,
	483, 2158,
	502, 2158,
	-2, 0,
	-1, 610,
	167, 2188,
	429, 2188,
	483, 2188,
	502, 2188,
	-2, 0,
	-1, 617,
	167, 2075,
	429, 2075,
	483, 2075,
	502, 2075,
	-2, 579,
	-1, 647,
	502, 1919,
	505, 1919,
	-2, 809,
	-1, 648,
	502, 1921,
	505, 1921,
	-2, 810,
	-1, 649,
	502, 1920,
	505, 1920,
	-2, 811,
	-1, 650,
	505, 1854,
	-2, 812,
	-1, 672,
	164, 201,
	-2, 0,
	-1, 695,
	464, 1048,
	-2, 870,
	-1, 733,
	4, 1069,
	21, 1069,
	22, 1069,
	23, 1069,
	24, 1069,
	25, 1069,
	26, 1069,
	28, 1069,
	29, 1069,
	35, 1069,
	40, 1069,
	41, 1069,
	42, 1069,
	43, 1069,
	44, 1069,
	45, 1069,
	46, 1069,
	47, 1069,
	48, 1069,
	50, 1069,
	51, 1069,
	52, 1069,
	54, 1069,
	55, 1069,
	56, 1069,
	57, 1069,
	58, 1069,
	62, 1069,
	63, 1069,
	64, 1069,
	65, 1069,
	67, 1069,
	68, 1069,
	69, 1069,
	73, 1069,
	74, 1069,
	75, 1069,
	76, 1069,
	77, 1069,
	78, 1069,
	79, 1069,
	82, 1069,
	83, 1069,
	84, 1069,
	85, 1069,
	87, 1069,
	89, 1069,
	90, 1069,
	91, 1069,
	93, 1069,
	95, 1069,
	96, 1069,
	104, 1069,
	105, 1069,
	106, 1069,
	107, 1069,
	109, 1069,
	110, 1069,
	111, 1069,
	113, 1069,
	114, 1069,
	115, 1069,
	117, 1069,
	118, 1069,
	120, 1069,
	121, 1069,
	124, 1069,
	125, 1069,
	126, 1069,
	128, 1069,
	129, 1069,
	131, 1069,
	132, 1069,
	134, 1069,
	135, 1069,
	136, 1069,
	137, 1069,
	138, 1069,
	139, 1069,
	140, 1069,
	141, 1069,
	142, 1069,
	143, 1069,
	144, 1069,
	145, 1069,
	146, 1069,
	147, 1069,
	148, 1069,
	150, 1069,
	156, 1069,
	157, 1069,
	158, 1069,
	159, 1069,
	163, 1069,
	165, 1069,
	169, 1069,
	170, 1069,
	171, 1069,
	172, 1069,
	173, 1069,
	174, 1069,
	176, 1069,
	177, 1069,
	179, 1069,
	180, 1069,
	182, 1069,
	183, 1069,
	184, 1069,
	185, 1069,
	186, 1069,
	187, 1069,
	188, 1069,
	189, 1069,
	190, 1069,
	192, 1069,
	193, 1069,
	195, 1069,
	196, 1069,
	197, 1069,
	198, 1069,
	202, 1069,
	203, 1069,
	204, 1069,
	205, 1069,
	208, 1069,
	209, 1069,
	210, 1069,
	212, 1069,
	214, 1069,
	216, 1069,
	218, 1069,
	219, 1069,
	220, 1069,
	222, 1069,
	226, 1069,
	227, 1069,
	228, 1069,
	229, 1069,
	230, 1069,
	232, 1069,
	233, 1069,
	235, 1069,
	236, 1069,
	238, 1069,
	239, 1069,
	242, 1069,
	243, 1069,
	244, 1069,
	247, 1069,
	248, 1069,
	249, 1069,
	250, 1069,
	252, 1069,
	253, 1069,
	254, 1069,
	255, 1069,
	256, 1069,
	257, 1069,
	258, 1069,
	259, 1069,
	260, 1069,
	261, 1069,
	262, 1069,
	264, 1069,
	266, 1069,
	267, 1069,
	268, 1069,
	269, 1069,
	270, 1069,
	271, 1069,
	273, 1069,
	275, 1069,
	277, 1069,
	279, 1069,
	280, 1069,
	281, 1069,
	282, 1069,
	283, 1069,
	286, 1069,
	290, 1069,
	291, 1069,
	292, 1069,
	295, 1069,
	296, 1069,
	297, 1069,
	299, 1069,
	301, 1069,
	302, 1069,
	303, 1069,
	304, 1069,
	305, 1069,
	306, 1069,
	307, 1069,
	308, 1069,
	309, 1069,
	310, 1069,
	311, 1069,
	312, 1069,
	314, 1069,
	315, 1069,
	316, 1069,
	317, 1069,
	318, 1069,
	319, 1069,
	320, 1069,
	321, 1069,
	322, 1069,
	324, 1069,
	326, 1069,
	327, 1069,
	328, 1069,
	329, 1069,
	330, 1069,
	331, 1069,
	332, 1069,
	333, 1069,
	334, 1069,
	335, 1069,
	336, 1069,
	343, 1069,
	345, 1069,
	346, 1069,
	347, 1069,
	348, 1069,
	349, 1069,
	350, 1069,
	351, 1069,
	352, 1069,
	354, 1069,
	355, 1069,
	356, 1069,
	358, 1069,
	359, 1069,
	360, 1069,
	361, 1069,
	362, 1069,
	363, 1069,
	365, 1069,
	366, 1069,
	367, 1069,
	368, 1069,
	369, 1069,
	370, 1069,
	371, 1069,
	372, 1069,
	373, 1069,
	374, 1069,
	375, 1069,
	377, 1069,
	378, 1069,
	379, 1069,
	380, 1069,
	381, 1069,
	382, 1069,
	384, 1069,
	385, 1069,
	386, 1069,
	387, 1069,
	388, 1069,
	390, 1069,
	391, 1069,
	392, 1069,
	394, 1069,
	396, 1069,
	397, 1069,
	398, 1069,
	399, 1069,
	400, 1069,
	401, 1069,
	402, 1069,
	403, 1069,
	404, 1069,
	405, 1069,
	406, 1069,
	407, 1069,
	408, 1069,
	410, 1069,
	411, 1069,
	413, 1069,
	415, 1069,
	416, 1069,
	417, 1069,
	418, 1069,
	419, 1069,
	420, 1069,
	421, 1069,
	422, 1069,
	424, 1069,
	425, 1069,
	426, 1069,
	427, 1069,
	428, 1069,
	430, 1069,
	432, 1069,
	433, 1069,
	434, 1069,
	435, 1069,
	436, 1069,
	438, 1069,
	439, 1069,
	440, 1069,
	442, 1069,
	443, 1069,
	446, 1069,
	447, 1069,
	448, 1069,
	449, 1069,
	450, 1069,
	451, 1069,
	452, 1069,
	454, 1069,
	457, 1069,
	458, 1069,
	459, 1069,
	460, 1069,
	461, 1069,
	462, 1069,
	464, 1069,
	465, 1069,
	466, 1069,
	471, 1069,
	472, 1069,
	473, 1069,
	474, 1069,
	475, 1069,
	476, 1069,
	-2, 0,
	-1, 810,
	328, 726,
	382, 726,
	-2, 0,
	-1, 811,
	328, 725,
	382, 725,
	-2, 673,
	-1, 815,
	1, 765,
	499, 765,
	501, 765,
	503, 765,
	-2, 0,
	-1, 816,
	1, 808,
	164, 808,
	499, 808,
	501, 808,
	503, 808,
	-2, 0,
	-1, 824,
	1, 729,
	499, 729,
	501, 729,
	503, 729,
	-2, 0,
	-1, 830,
	1, 765,
	499, 765,
	501, 765,
	503, 765,
	-2, 0,
	-1, 831,
	1, 767,
	499, 767,
	501, 767,
	503, 767,
	-2, 0,
	-1, 832,
	1, 770,
	499, 770,
	501, 770,
	503, 770,
	-2, 0,
	-1, 838,
	1, 787,
	499, 787,
	501, 787,
	503, 787,
	-2, 0,
	-1, 839,
	1, 789,
	499, 789,
	501, 789,
	503, 789,
	-2, 0,
	-1, 888,
	151, 1274,
	164, 1274,
	241, 1274,
	284, 1274,
	-2, 1212,
	-1, 903,
	151, 1273,
	164, 1273,
	241, 1273,
	284, 1273,
	-2, 1209,
	-1, 929,
	502, 1918,
	-2, 587,
	-1, 957,
	5, 1910,
	500, 1908,
	-2, 1899,
	-1, 965,
	5, 1931,
	500, 1928,
	-2, 1919,
	-1, 966,
	5, 1932,
	500, 1929,
	-2, 1920,
	-1, 974,
	502, 1916,
	-2, 1898,
	-1, 975,
	500, 2266,
	-2, 1917,
	-1, 998,
	500, 2265,
	-2, 1933,
	-1, 999,
	5, 1438,
	-2, 2236,
	-1, 1000,
	5, 1439,
	-2, 2237,
	-1, 1001,
	5, 1440,
	-2, 2251,
	-1, 1002,
	5, 1441,
	-2, 2216,
	-1, 1003,
	5, 1442,
	-2, 2249,
	-1, 1004,
	5, 1450,
	-2, 2228,
	-1, 1005,
	5, 1437,
	-2, 2224,
	-1, 1006,
	5, 1437,
	-2, 2223,
	-1, 1007,
	5, 1437,
	-2, 2242,
	-1, 1008,
	5, 1448,
	-2, 2218,
	-1, 1009,
	5, 1453,
	-2, 2217,
	-1, 1010,
	5, 1455,
	-2, 2261,
	-1, 1013,
	5, 1477,
	-2, 2254,
	-1, 1014,
	5, 1469,
	-2, 2255,
	-1, 1015,
	5, 1477,
	-2, 2256,
	-1, 1016,
	5, 1473,
	-2, 2257,
	-1, 1017,
	5, 1424,
	-2, 2229,
	-1, 1018,
	5, 1425,
	-2, 2230,
	-1, 1045,
	5, 1460,
	-2, 2262,
	-1, 1046,
	5, 1461,
	-2, 2252,
	-1, 1047,
	5, 1462,
	465, 1462,
	-2, 2219,
	-1, 1048,
	5, 1463,
	465, 1463,
	-2, 2220,
	-1, 1085,
	500, 1928,
	-2, 1919,
	-1, 1086,
	500, 1929,
	-2, 1920,
	-1, 1115,
	167, 2188,
	429, 2188,
	483, 2188,
	502, 2188,
	-2, 0,
	-1, 1118,
	1, 565,
	503, 565,
	-2, 1147,
	-1, 1243,
	345, 1894,
	384, 1894,
	493, 1894,
	-2, 1892,
	-1, 1255,
	504, 1894,
	-2, 1895,
	-1, 1262,
	1, 1045,
	499, 1045,
	501, 1045,
	503, 1045,
	-2, 1261,
	-1, 1314,
	334, 869,
	464, 869,
	-2, 306,
	-1, 1336,
	1, 1045,
	499, 1045,
	501, 1045,
	503, 1045,
	-2, 1261,
	-1, 1342,
	4, 1069,
	21, 1069,
	22, 1069,
	23, 1069,
	24, 1069,
	25, 1069,
	26, 1069,
	28, 1069,
	29, 1069,
	35, 1069,
	40, 1069,
	41, 1069,
	42, 1069,
	43, 1069,
	44, 1069,
	45, 1069,
	46, 1069,
	47, 1069,
	48, 1069,
	50, 1069,
	51, 1069,
	52, 1069,
	54, 1069,
	55, 1069,
	56, 1069,
	57, 1069,
	58, 1069,
	62, 1069,
	63, 1069,
	64, 1069,
	65, 1069,
	67, 1069,
	68, 1069,
	69, 1069,
	73, 1069,
	74, 1069,
	75, 1069,
	76, 1069,
	77, 1069,
	78, 1069,
	79, 1069,
	82, 1069,
	83, 1069,
	84, 1069,
	85, 1069,
	87, 1069,
	89, 1069,
	90, 1069,
	91, 1069,
	93, 1069,
	95, 1069,
	96, 1069,
	104, 1069,
	105, 1069,
	106, 1069,
	107, 1069,
	109, 1069,
	110, 1069,
	111, 1069,
	113, 1069,
	114, 1069,
	115, 1069,
	117, 1069,
	118, 1069,
	120, 1069,
	121, 1069,
	124, 1069,
	125, 1069,
	126, 1069,
	128, 1069,
	129, 1069,
	131, 1069,
	132, 1069,
	134, 1069,
	135, 1069,
	136, 1069,
	137, 1069,
	138, 1069,
	139, 1069,
	140, 1069,
	141, 1069,
	142, 1069,
	143, 1069,
	144, 1069,
	145, 1069,
	146, 1069,
	147, 1069,
	148, 1069,
	156, 1069,
	157, 1069,
	158, 1069,
	159, 1069,
	163, 1069,
	165, 1069,
	169, 1069,
	170, 1069,
	171, 1069,
	172, 1069,
	173, 1069,
	174, 1069,
	176, 1069,
	177, 1069,
	179, 1069,
	180, 1069,
	182, 1069,
	183, 1069,
	184, 1069,
	185, 1069,
	186, 1069,
	187, 1069,
	188, 1069,
	189, 1069,
	190, 1069,
	192, 1069,
	193, 1069,
	195, 1069,
	196, 1069,
	197, 1069,
	198, 1069,
	203, 1069,
	204, 1069,
	205, 1069,
	208, 1069,
	209, 1069,
	210, 1069,
	212, 1069,
	214, 1069,
	216, 1069,
	218, 1069,
	219, 1069,
	220, 1069,
	222, 1069,
	226, 1069,
	227, 1069,
	228, 1069,
	229, 1069,
	230, 1069,
	232, 1069,
	233, 1069,
	235, 1069,
	236, 1069,
	238, 1069,
	239, 1069,
	242, 1069,
	243, 1069,
	244, 1069,
	247, 1069,
	248, 1069,
	249, 1069,
	250, 1069,
	252, 1069,
	253, 1069,
	254, 1069,
	255, 1069,
	256, 1069,
	257, 1069,
	258, 1069,
	259, 1069,
	260, 1069,
	261, 1069,
	262, 1069,
	264, 1069,
	266, 1069,
	267, 1069,
	268, 1069,
	269, 1069,
	270, 1069,
	271, 1069,
	273, 1069,
	277, 1069,
	279, 1069,
	280, 1069,
	281, 1069,
	282, 1069,
	283, 1069,
	286, 1069,
	288, 1069,
	290, 1069,
	291, 1069,
	292, 1069,
	295, 1069,
	296, 1069,
	297, 1069,
	299, 1069,
	301, 1069,
	302, 1069,
	303, 1069,
	304, 1069,
	305, 1069,
	306, 1069,
	307, 1069,
	308, 1069,
	309, 1069,
	310, 1069,
	311, 1069,
	312, 1069,
	314, 1069,
	315, 1069,
	316, 1069,
	317, 1069,
	318, 1069,
	319, 1069,
	320, 1069,
	321, 1069,
	322, 1069,
	324, 1069,
	326, 1069,
	327, 1069,
	328, 1069,
	329, 1069,
	330, 1069,
	331, 1069,
	332, 1069,
	333, 1069,
	334, 1069,
	335, 1069,
	336, 1069,
	343, 1069,
	345, 1069,
	346, 1069,
	347, 1069,
	348, 1069,
	349, 1069,
	350, 1069,
	351, 1069,
	352, 1069,
	354, 1069,
	355, 1069,
	356, 1069,
	358, 1069,
	359, 1069,
	360, 1069,
	361, 1069,
	362, 1069,
	363, 1069,
	365, 1069,
	366, 1069,
	367, 1069,
	368, 1069,
	369, 1069,
	370, 1069,
	371, 1069,
	372, 1069,
	373, 1069,
	374, 1069,
	375, 1069,
	377, 1069,
	378, 1069,
	379, 1069,
	380, 1069,
	381, 1069,
	382, 1069,
	384, 1069,
	385, 1069,
	386, 1069,
	387, 1069,
	388, 1069,
	390, 1069,
	391, 1069,
	392, 1069,
	394, 1069,
	396, 1069,
	397, 1069,
	398, 1069,
	399, 1069,
	400, 1069,
	401, 1069,
	402, 1069,
	403, 1069,
	404, 1069,
	405, 1069,
	406, 1069,
	407, 1069,
	408, 1069,
	410, 1069,
	411, 1069,
	413, 1069,
	415, 1069,
	416, 1069,
	417, 1069,
	418, 1069,
	419, 1069,
	420, 1069,
	421, 1069,
	422, 1069,
	424, 1069,
	425, 1069,
	426, 1069,
	427, 1069,
	428, 1069,
	430, 1069,
	432, 1069,
	433, 1069,
	434, 1069,
	435, 1069,
	436, 1069,
	438, 1069,
	439, 1069,
	440, 1069,
	442, 1069,
	443, 1069,
	446, 1069,
	447, 1069,
	448, 1069,
	449, 1069,
	450, 1069,
	451, 1069,
	452, 1069,
	454, 1069,
	457, 1069,
	458, 1069,
	459, 1069,
	460, 1069,
	461, 1069,
	462, 1069,
	464, 1069,
	465, 1069,
	466, 1069,
	471, 1069,
	472, 1069,
	473, 1069,
	474, 1069,
	475, 1069,
	476, 1069,
	-2, 0,
	-1, 1414,
	1, 442,
	499, 442,
	501, 442,
	503, 442,
	-2, 1232,
	-1, 1417,
	4, 2260,
	11, 2260,
	12, 2260,
	14, 2260,
	15, 2260,
	16, 2260,
	17, 2260,
	18, 2260,
	19, 2260,
	21, 2260,
	22, 2260,
	23, 2260,
	24, 2260,
	25, 2260,
	26, 2260,
	28, 2260,
	29, 2260,
	32, 2260,
	33, 2260,
	35, 2260,
	37, 2260,
	40, 2260,
	41, 2260,
	42, 2260,
	43, 2260,
	44, 2260,
	45, 2260,
	46, 2260,
	47, 2260,
	48, 2260,
	50, 2260,
	51, 2260,
	52, 2260,
	54, 2260,
	55, 2260,
	56, 2260,
	57, 2260,
	58, 2260,
	62, 2260,
	63, 2260,
	64, 2260,
	65, 2260,
	67, 2260,
	68, 2260,
	69, 2260,
	70, 2260,
	73, 2260,
	74, 2260,
	75, 2260,
	76, 2260,
	77, 2260,
	78, 2260,
	79, 2260,
	80, 2260,
	82, 2260,
	83, 2260,
	84, 2260,
	85, 2260,
	87, 2260,
	88, 2260,
	89, 2260,
	90, 2260,
	91, 2260,
	93, 2260,
	94, 2260,
	95, 2260,
	96, 2260,
	104, 2260,
	105, 2260,
	106, 2260,
	107, 2260,
	109, 2260,
	110, 2260,
	111, 2260,
	113, 2260,
	114, 2260,
	115, 2260,
	117, 2260,
	118, 2260,
	120, 2260,
	121, 2260,
	124, 2260,
	125, 2260,
	126, 2260,
	128, 2260,
	129, 2260,
	131, 2260,
	132, 2260,
	134, 2260,
	135, 2260,
	136, 2260,
	137, 2260,
	138, 2260,
	139, 2260,
	140, 2260,
	141, 2260,
	142, 2260,
	143, 2260,
	144, 2260,
	145, 2260,
	146, 2260,
	147, 2260,
	148, 2260,
	152, 2260,
	153, 2260,
	154, 2260,
	155, 2260,
	156, 2260,
	157, 2260,
	158, 2260,
	159, 2260,
	162, 2260,
	163, 2260,
	165, 2260,
	168, 2260,
	169, 2260,
	170, 2260,
	171, 2260,
	172, 2260,
	173, 2260,
	174, 2260,
	176, 2260,
	177, 2260,
	179, 2260,
	180, 2260,
	182, 2260,
	183, 2260,
	184, 2260,
	185, 2260,
	186, 2260,
	187, 2260,
	188, 2260,
	189, 2260,
	190, 2260,
	191, 2260,
	192, 2260,
	193, 2260,
	194, 2260,
	195, 2260,
	196, 2260,
	197, 2260,
	198, 2260,
	200, 2260,
	201, 2260,
	203, 2260,
	204, 2260,
	205, 2260,
	207, 2260,
	208, 2260,
	209, 2260,
	210, 2260,
	212, 2260,
	214, 2260,
	215, 2260,
	216, 2260,
	217, 2260,
	218, 2260,
	219, 2260,
	220, 2260,
	221, 2260,
	222, 2260,
	224, 2260,
	225, 2260,
	226, 2260,
	227, 2260,
	228, 2260,
	229, 2260,
	230, 2260,
	232, 2260,
	233, 2260,
	235, 2260,
	236, 2260,
	237, 2260,
	238, 2260,
	239, 2260,
	240, 2260,
	242, 2260,
	243, 2260,
	244, 2260,
	247, 2260,
	248, 2260,
	249, 2260,
	250, 2260,
	251, 2260,
	252, 2260,
	253, 2260,
	254, 2260,
	255, 2260,
	256, 2260,
	257, 2260,
	258, 2260,
	259, 2260,
	260, 2260,
	261, 2260,
	262, 2260,
	264, 2260,
	265, 2260,
	266, 2260,
	267, 2260,
	268, 2260,
	269, 2260,
	270, 2260,
	271, 2260,
	273, 2260,
	276, 2260,
	277, 2260,
	279, 2260,
	280, 2260,
	281, 2260,
	282, 2260,
	283, 2260,
	286, 2260,
	290, 2260,
	291, 2260,
	292, 2260,
	293, 2260,
	295, 2260,
	296, 2260,
	297, 2260,
	299, 2260,
	301, 2260,
	302, 2260,
	303, 2260,
	304, 2260,
	305, 2260,
	306, 2260,
	307, 2260,
	308, 2260,
	309, 2260,
	310, 2260,
	311, 2260,
	312, 2260,
	314, 2260,
	315, 2260,
	316, 2260,
	317, 2260,
	318, 2260,
	319, 2260,
	320, 2260,
	321, 2260,
	322, 2260,
	324, 2260,
	326, 2260,
	327, 2260,
	328, 2260,
	329, 2260,
	330, 2260,
	331, 2260,
	332, 2260,
	333, 2260,
	334, 2260,
	335, 2260,
	336, 2260,
	343, 2260,
	344, 2260,
	345, 2260,
	346, 2260,
	347, 2260,
	348, 2260,
	349, 2260,
	350, 2260,
	351, 2260,
	352, 2260,
	354, 2260,
	355, 2260,
	356, 2260,
	357, 2260,
	358, 2260,
	359, 2260,
	360, 2260,
	361, 2260,
	362, 2260,
	363, 2260,
	364, 2260,
	365, 2260,
	366, 2260,
	367, 2260,
	368, 2260,
	369, 2260,
	370, 2260,
	371, 2260,
	372, 2260,
	373, 2260,
	374, 2260,
	375, 2260,
	377, 2260,
	378, 2260,
	379, 2260,
	380, 2260,
	381, 2260,
	382, 2260,
	384, 2260,
	385, 2260,
	386, 2260,
	387, 2260,
	388, 2260,
	389, 2260,
	390, 2260,
	391, 2260,
	392, 2260,
	394, 2260,
	396, 2260,
	397, 2260,
	398, 2260,
	399, 2260,
	400, 2260,
	401, 2260,
	402, 2260,
	403, 2260,
	404, 2260,
	405, 2260,
	406, 2260,
	407, 2260,
	408, 2260,
	410, 2260,
	411, 2260,
	413, 2260,
	415, 2260,
	416, 2260,
	417, 2260,
	418, 2260,
	419, 2260,
	420, 2260,
	421, 2260,
	422, 2260,
	424, 2260,
	425, 2260,
	426, 2260,
	427, 2260,
	428, 2260,
	430, 2260,
	432, 2260,
	433, 2260,
	434, 2260,
	435, 2260,
	436, 2260,
	438, 2260,
	439, 2260,
	440, 2260,
	442, 2260,
	443, 2260,
	446, 2260,
	447, 2260,
	448, 2260,
	449, 2260,
	450, 2260,
	451, 2260,
	452, 2260,
	454, 2260,
	457, 2260,
	458, 2260,
	459, 2260,
	460, 2260,
	461, 2260,
	462, 2260,
	464, 2260,
	465, 2260,
	466, 2260,
	471, 2260,
	472, 2260,
	473, 2260,
	474, 2260,
	475, 2260,
	476, 2260,
	477, 2260,
	478, 2260,
	481, 2260,
	482, 2260,
	483, 2260,
	484, 2260,
	485, 2260,
	486, 2260,
	488, 2260,
	489, 2260,
	490, 2260,
	491, 2260,
	492, 2260,
	493, 2260,
	494, 2260,
	495, 2260,
	496, 2260,
	498, 2260,
	501, 2260,
	502, 2260,
	504, 2260,
	505, 2260,
	-2, 0,
	-1, 1422,
	167, 2158,
	429, 2158,
	483, 2158,
	502, 2158,
	-2, 0,
	-1, 1470,
	328, 726,
	382, 726,
	-2, 0,
	-1, 1494,
	1, 721,
	499, 721,
	501, 721,
	503, 721,
	-2, 0,
	-1, 1495,
	1, 756,
	499, 756,
	501, 756,
	503, 756,
	-2, 0,
	-1, 1496,
	1, 728,
	499, 728,
	501, 728,
	503, 728,
	-2, 0,
	-1, 1498,
	1, 732,
	499, 732,
	501, 732,
	503, 732,
	-2, 0,
	-1, 1503,
	1, 738,
	499, 738,
	501, 738,
	503, 738,
	-2, 0,
	-1, 1531,
	1, 2208,
	499, 2208,
	501, 2208,
	502, 2208,
	503, 2208,
	-2, 785,
	-1, 1532,
	1, 2155,
	499, 2155,
	501, 2155,
	502, 2155,
	503, 2155,
	-2, 786,
	-1, 1547,
	1, 1142,
	503, 1142,
	-2, 1147,
	-1, 1550,
	151, 1273,
	164, 1273,
	241, 1273,
	284, 1273,
	-2, 1213,
	-1, 1644,
	133, 1234,
	151, 1234,
	164, 1234,
	211, 1234,
	241, 1234,
	284, 1234,
	294, 1234,
	444, 1234,
	-2, 1638,
	-1, 1704,
	501, 1788,
	-2, 0,
	-1, 1739,
	133, 1234,
	151, 1234,
	164, 1234,
	211, 1234,
	241, 1234,
	284, 1234,
	294, 1234,
	444, 1234,
	-2, 1354,
	-1, 1786,
	500, 1465,
	-2, 1453,
	-1, 1819,
	1, 567,
	503, 567,
	-2, 1147,
	-1, 2042,
	1, 723,
	499, 723,
	501, 723,
	503, 723,
	-2, 0,
	-1, 2043,
	1, 758,
	499, 758,
	501, 758,
	503, 758,
	-2, 0,
	-1, 2073,
	1, 740,
	499, 740,
	501, 740,
	503, 740,
	-2, 0,
	-1, 2119,
	362, 1300,
	363, 1300,
	-2, 1498,
	-1, 2150,
	14, 0,
	15, 0,
	16, 0,
	481, 0,
	482, 0,
	483, 0,
	-2, 1518,
	-1, 2151,
	14, 0,
	15, 0,
	16, 0,
	481, 0,
	482, 0,
	483, 0,
	-2, 1519,
	-1, 2152,
	88, 0,
	224, 0,
	225, 0,
	485, 0,
	486, 0,
	-2, 1520,
	-1, 2153,
	88, 0,
	224, 0,
	225, 0,
	485, 0,
	486, 0,
	-2, 1521,
	-1, 2154,
	88, 0,
	224, 0,
	225, 0,
	485, 0,
	486, 0,
	-2, 1522,
	-1, 2155,
	88, 0,
	224, 0,
	225, 0,
	485, 0,
	486, 0,
	-2, 1523,
	-1, 2156,
	88, 0,
	224, 0,
	225, 0,
	485, 0,
	486, 0,
	-2, 1524,
	-1, 2157,
	14, 0,
	15, 0,
	16, 0,
	481, 0,
	482, 0,
	483, 0,
	-2, 1525,
	-1, 2169,
	14, 0,
	15, 0,
	16, 0,
	481, 0,
	482, 0,
	483, 0,
	-2, 1537,
	-1, 2170,
	14, 0,
	15, 0,
	16, 0,
	481, 0,
	482, 0,
	483, 0,
	-2, 1538,
	-1, 2171,
	14, 0,
	15, 0,
	16, 0,
	481, 0,
	482, 0,
	483, 0,
	-2, 1539,
	-1, 2174,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	389, 0,
	477, 0,
	484, 0,
	-2, 1544,
	-1, 2180,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	389, 0,
	477, 0,
	484, 0,
	-2, 1548,
	-1, 2182,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	389, 0,
	477, 0,
	484, 0,
	-2, 1556,
	-1, 2183,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	389, 0,
	477, 0,
	484, 0,
	-2, 1557,
	-1, 2184,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	389, 0,
	477, 0,
	484, 0,
	-2, 1558,
	-1, 2185,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	389, 0,
	477, 0,
	484, 0,
	-2, 1559,
	-1, 2297,
	5, 1931,
	167, 1799,
	500, 1928,
	-2, 1919,
	-1, 2298,
	167, 1800,
	-2, 2212,
	-1, 2299,
	167, 1801,
	-2, 2074,
	-1, 2300,
	167, 1802,
	-2, 1989,
	-1, 2301,
	167, 1803,
	-2, 2031,
	-1, 2302,
	167, 1804,
	-2, 2069,
	-1, 2303,
	167, 1805,
	-2, 2153,
	-1, 2304,
	167, 1806,
	-2, 1621,
	-1, 2373,
	1, 1355,
	2, 1355,
	94, 1355,
	133, 1355,
	151, 1355,
	164, 1355,
	168, 1355,
	178, 1355,
	181, 1355,
	207, 1355,
	211, 1355,
	221, 1355,
	237, 1355,
	241, 1355,
	265, 1355,
	284, 1355,
	288, 1355,
	294, 1355,
	353, 1355,
	357, 1355,
	444, 1355,
	455, 1355,
	468, 1355,
	469, 1355,
	470, 1355,
	479, 1355,
	499, 1355,
	501, 1355,
	503, 1355,
	505, 1355,
	-2, 1354,
	-1, 2386,
	500, 1900,
	-2, 1914,
	-1, 2410,
	500, 1464,
	-2, 1454,
	-1, 2527,
	1, 1045,
	499, 1045,
	501, 1045,
	503, 1045,
	-2, 1261,
	-1, 2687,
	289, 1303,
	-2, 2250,
	-1, 2688,
	289, 1304,
	-2, 2139,
	-1, 2692,
	362, 1865,
	363, 1865,
	-2, 1619,
	-1, 2693,
	362, 1869,
	363, 1869,
	-2, 1620,
	-1, 2694,
	362, 1866,
	363, 1866,
	-2, 1619,
	-1, 2695,
	362, 1870,
	363, 1870,
	-2, 1620,
	-1, 2708,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	389, 0,
	477, 0,
	484, 0,
	-2, 1546,
	-1, 2709,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	389, 0,
	477, 0,
	484, 0,
	-2, 1550,
	-1, 2715,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	389, 0,
	477, 0,
	484, 0,
	-2, 1552,
	-1, 2912,
	218, 1147,
	324, 1147,
	332, 1147,
	479, 1147,
	-2, 564,
	-1, 3035,
	1, 1045,
	499, 1045,
	501, 1045,
	503, 1045,
	-2, 1261,
	-1, 3127,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	389, 0,
	477, 0,
	484, 0,
	-2, 1554,
	-1, 3134,
	215, 0,
	217, 0,
	276, 0,
	-2, 1573,
	-1, 3201,
	14, 0,
	15, 0,
	16, 0,
	481, 0,
	482, 0,
	483, 0,
	-2, 1602,
	-1, 3202,
	14, 0,
	15, 0,
	16, 0,
	481, 0,
	482, 0,
	483, 0,
	-2, 1603,
	-1, 3203,
	14, 0,
	15, 0,
	16, 0,
	481, 0,
	482, 0,
	483, 0,
	-2, 1604,
	-1, 3207,
	14, 0,
	15, 0,
	16, 0,
	481, 0,
	482, 0,
	483, 0,
	-2, 1608,
	-1, 3208,
	14, 0,
	15, 0,
	16, 0,
	481, 0,
	482, 0,
	483, 0,
	-2, 1609,
	-1, 3209,
	14, 0,
	15, 0,
	16, 0,
	481, 0,
	482, 0,
	483, 0,
	-2, 1610,
	-1, 3255,
	500, 1901,
	-2, 1915,
	-1, 3367,
	502, 2366,
	-2, 1191,
	-1, 3418,
	215, 0,
	217, 0,
	276, 0,
	-2, 1574,
	-1, 3421,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	389, 0,
	477, 0,
	484, 0,
	-2, 1577,
	-1, 3422,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	389, 0,
	477, 0,
	484, 0,
	-2, 1579,
	-1, 3620,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	389, 0,
	477, 0,
	484, 0,
	-2, 1578,
	-1, 3621,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	191, 0,
	194, 0,
	240, 0,
	389, 0,
	477, 0,
	484, 0,
	-2, 1580,
	-1, 3632,
	215, 0,
	-2, 1611,
	-1, 3775,
	215, 0,
	-2, 1612,
	-1, 3927,
	47, 0,
	191, 0,
	240, 0,
	389, 0,
	477, 0,
	484, 0,
	-2, 2215,
}

const sqlPrivate = 57344

const sqlLast = 99959

var sqlAct = [...]int{

	238, 3705, 3937, 3663, 3552, 3797, 3926, 2609, 3820, 3666,
	4034, 3902, 3866, 2842, 3884, 3401, 3021, 2581, 3938, 3277,
	3896, 3939, 3881, 3651, 1089, 3712, 3166, 2843, 3583, 3779,
	3925, 3578, 3984, 913, 3536, 3609, 2129, 2930, 1280, 3050,
	1405, 3721, 3359, 3543, 1124, 3315, 930, 1400, 3485, 3545,
	3565, 1998, 2443, 1773, 3743, 968, 1265, 2197, 3043, 3588,
	1559, 3017, 2504, 3045, 3338, 2137, 1871, 3119, 649, 3328,
	3278, 615, 1011, 2701, 3637, 2329, 2618, 1745, 1147, 2570,
	2130, 2553, 36, 2544, 2556, 2620, 1078, 2885, 1437, 2865,
	2857, 3457, 649, 3400, 904, 2825, 1987, 1478, 1240, 747,
	2628, 2611, 2846, 2617, 2565, 2582, 1714, 2365, 2567, 1920,
	1919, 2445, 1881, 2366, 2134, 2848, 2824, 3226, 2241, 912,
	160, 1690, 2239, 1248, 4, 2481, 3780, 2021, 2210, 2368,
	644, 2994, 1996, 2518, 2685, 1652, 1898, 1914, 1404, 232,
	3706, 1905, 231, 2627, 961, 1131, 1855, 2347, 1858, 1547,
	1715, 2230, 2194, 2014, 959, 2480, 1845, 2326, 2118, 2891,
	2101, 2554, 2099, 1415, 3019, 1401, 1397, 1069, 1391, 1774,
	1381, 2575, 1953, 966, 1334, 650, 569, 651, 2434, 1120,
	591, 2621, 2233, 583, 1685, 2355, 1072, 2337, 1051, 1724,
	2211, 2293, 1637, 169, 1560, 170, 2100, 1561, 2283, 599,
	646, 1952, 1267, 1436, 160, 1503, 609, 655, 1086, 741,
	658, 1973, 1734, 1413, 1357, 2102, 721, 1275, 695, 1870,
	2123, 942, 586, 41, 1074, 40, 38, 29, 27, 1049,
	25, 655, 2736, 805, 658, 594, 822, 1546, 1286, 3240,
	1566, 3241, 2844, 2732, 1574, 1575, 1989, 1607, 1608, 1609,
	1617, 1618, 1619, 1989, 4092, 4087, 1989, 4075, 2346, 3076,
	908, 2346, 3076, 4074, 1989, 1610, 1605, 2346, 3060, 2910,
	4051, 1245, 99, 1577, 3501, 1731, 1128, 4049, 4045, 3059,
	1623, 3501, 1926, 3967, 3961, 908, 3959, 3968, 2346, 1989,
	2346, 3956, 762, 3953, 3948, 3957, 3923, 3954, 1926, 2397,
	1926, 2700, 3230, 1576, 2797, 2798, 1068, 2815, 2816, 2817,
	3922, 3921, 3917, 1596, 1926, 2007, 2007, 2339, 3916, 2578,
	3911, 1593, 2007, 1066, 3501, 3416, 1128, 3909, 3892, 1052,
	1052, 3501, 3700, 3879, 1926, 3860, 3853, 3501, 1497, 2401,
	2346, 3852, 3847, 3846, 3840, 2346, 3501, 3501, 1926, 3777,
	2500, 3757, 2022, 2401, 889, 1926, 888, 3754, 3714, 3683,
	3682, 3501, 3715, 1926, 1926, 3674, 3673, 3643, 3622, 1926,
	3501, 1926, 2401, 2812, 1055, 3607, 1056, 2797, 2798, 2007,
	2815, 2816, 2817, 2346, 2466, 1599, 1600, 1601, 1602, 3596,
	3531, 3861, 3520, 3076, 2346, 1582, 2346, 3500, 3415, 2797,
	2798, 3501, 898, 903, 3420, 3375, 3772, 3760, 2401, 3092,
	1574, 1575, 3369, 3336, 3250, 3248, 3092, 3337, 3251, 3249,
	2007, 3233, 3150, 2745, 1614, 2346, 1926, 1624, 1105, 2746,
	1053, 3146, 1605, 1604, 1606, 2346, 3091, 3083, 2841, 1577,
	3092, 3084, 2346, 2836, 909, 2835, 2812, 2346, 1620, 2346,
	1621, 1100, 2788, 1408, 3700, 2803, 2789, 1591, 1592, 2797,
	2798, 2786, 2778, 2776, 3230, 2787, 2779, 2346, 2812, 1576,
	2747, 2346, 2633, 1612, 2346, 2338, 2007, 1574, 1575, 1596,
	3577, 2607, 2606, 2418, 1597, 2010, 2010, 2346, 2400, 2395,
	2389, 205, 2401, 2346, 1926, 2345, 2735, 2797, 2798, 2346,
	2815, 2816, 2817, 2009, 3521, 1926, 1577, 2010, 2818, 1622,
	3084, 2495, 1875, 2433, 1825, 1988, 2550, 1925, 3137, 1574,
	1575, 2512, 2431, 1710, 1274, 205, 1611, 1101, 2803, 207,
	2797, 2798, 205, 3307, 3122, 3100, 1576, 1732, 1908, 1990,
	3061, 1605, 1480, 2382, 2813, 2381, 1990, 2380, 1577, 1990,
	2803, 1599, 1600, 1601, 1602, 2379, 2378, 1990, 1057, 3062,
	205, 1582, 1054, 207, 897, 896, 2812, 895, 894, 893,
	207, 892, 891, 1445, 2665, 206, 887, 1603, 1576, 886,
	885, 2818, 1990, 205, 1279, 199, 884, 883, 1596, 882,
	881, 880, 879, 200, 878, 877, 1593, 1598, 207, 1604,
	1606, 876, 2797, 2798, 2266, 3473, 3059, 1101, 875, 206,
	2803, 964, 874, 873, 966, 171, 206, 2813, 966, 199,
	872, 207, 1615, 963, 871, 853, 199, 200, 1582, 803,
	802, 801, 800, 1150, 200, 799, 798, 1150, 797, 2813,
	3414, 1270, 796, 795, 206, 794, 793, 1130, 2803, 171,
	1597, 1135, 1279, 3432, 1431, 2338, 171, 2814, 792, 3261,
	1599, 1600, 1601, 1602, 966, 791, 966, 206, 966, 790,
	1582, 789, 788, 1270, 787, 786, 785, 199, 784, 783,
	782, 2803, 781, 780, 171, 200, 1256, 2561, 779, 1251,
	778, 2252, 777, 2595, 776, 775, 765, 1270, 3244, 2813,
	2005, 2818, 764, 2002, 760, 759, 753, 2577, 1604, 1606,
	1613, 1988, 205, 752, 1588, 1589, 1595, 1616, 1594, 1590,
	84, 1587, 1585, 1586, 1578, 1579, 1580, 1581, 1583, 1584,
	2814, 1278, 1591, 1592, 3869, 1288, 2094, 2813, 1270, 966,
	712, 711, 1300, 1603, 1270, 1339, 1341, 1285, 1270, 1292,
	207, 1298, 2814, 2803, 671, 670, 966, 669, 966, 1597,
	1118, 661, 1270, 1598, 3944, 660, 1101, 659, 966, 1294,
	966, 629, 621, 620, 2809, 2810, 2811, 619, 1259, 603,
	226, 2808, 2806, 2807, 2799, 2800, 2801, 2802, 2804, 2805,
	225, 224, 655, 223, 1449, 658, 206, 222, 221, 1143,
	220, 1237, 1242, 1499, 219, 218, 199, 217, 216, 215,
	1270, 214, 2814, 1435, 200, 1113, 1288, 213, 212, 1081,
	211, 210, 1411, 209, 208, 3093, 966, 2888, 1277, 966,
	1276, 1080, 2758, 1330, 2741, 2531, 171, 2797, 2798, 1429,
	1693, 1434, 2813, 2405, 2387, 2839, 1692, 2809, 2810, 2811,
	2814, 1443, 1603, 1448, 2808, 2806, 2807, 2799, 2800, 2801,
	2802, 2804, 2805, 2372, 160, 160, 2840, 1287, 1696, 1418,
	1420, 1450, 1598, 2250, 2017, 1735, 2808, 2806, 2807, 2799,
	2800, 2801, 2802, 2804, 2805, 1853, 2563, 1587, 1585, 1586,
	1578, 1579, 1580, 1581, 1583, 1584, 2797, 2798, 1573, 1654,
	1758, 957, 1385, 1388, 1574, 1575, 1693, 1498, 1663, 1282,
	1137, 1088, 1692, 2797, 2798, 3924, 3827, 3769, 3763, 966,
	966, 966, 966, 966, 966, 966, 3761, 1299, 1512, 3661,
	3636, 3597, 3305, 1577, 1691, 3342, 2808, 2806, 2807, 2799,
	2800, 2801, 2802, 2804, 2805, 3576, 1416, 205, 3592, 2016,
	966, 3478, 205, 3455, 1293, 2814, 966, 1578, 1579, 1580,
	1581, 1583, 1584, 1576, 133, 3454, 2236, 2809, 2810, 2811,
	1412, 3448, 1344, 3447, 2808, 2806, 2807, 2799, 2800, 2801,
	2802, 2804, 2805, 1551, 3446, 207, 3439, 3087, 2803, 3438,
	207, 3436, 3431, 1594, 1590, 1430, 1587, 1585, 1586, 1578,
	1579, 1580, 1581, 1583, 1584, 3428, 1394, 1444, 3427, 1661,
	2799, 2800, 2801, 2802, 2804, 2805, 909, 1360, 3335, 3265,
	1065, 3264, 1545, 3263, 3254, 1643, 3221, 3220, 205, 1288,
	3219, 206, 911, 3142, 3138, 1655, 206, 1653, 1964, 2883,
	1455, 199, 2237, 2832, 2823, 2796, 199, 2803, 1471, 200,
	2793, 2792, 2790, 2785, 200, 1582, 2562, 1933, 2784, 966,
	966, 966, 2783, 2780, 2803, 966, 207, 2777, 2757, 2740,
	2733, 171, 1086, 2608, 1086, 2373, 171, 1712, 2223, 1573,
	2806, 2807, 2799, 2800, 2801, 2802, 2804, 2805, 1654, 1150,
	1572, 1931, 2837, 4086, 1262, 4043, 4042, 966, 1548, 3977,
	649, 1556, 3781, 2265, 1791, 649, 889, 3975, 888, 1084,
	3966, 1090, 206, 966, 2238, 2235, 205, 1270, 3168, 3819,
	1555, 1550, 199, 3807, 3804, 3803, 1303, 3802, 3796, 1761,
	200, 3789, 966, 1552, 3758, 3742, 2813, 1695, 1150, 1770,
	1721, 3741, 2200, 205, 1814, 2880, 1766, 1569, 1570, 3341,
	1336, 3729, 171, 2813, 207, 3726, 3701, 236, 1749, 1785,
	3591, 3679, 3657, 3634, 3617, 1851, 1718, 1719, 205, 3616,
	3604, 3603, 1768, 1822, 3569, 3472, 1788, 3453, 3390, 3387,
	1052, 207, 1816, 3295, 3294, 3281, 3280, 205, 1817, 1742,
	2251, 1687, 1688, 3236, 3224, 160, 3133, 1641, 3094, 3077,
	206, 1424, 3036, 2983, 2958, 2933, 207, 2932, 2905, 2903,
	199, 2762, 2761, 2756, 2724, 1438, 2543, 1699, 200, 1698,
	1697, 1694, 909, 1686, 1684, 207, 2206, 206, 2412, 2411,
	2384, 2377, 2240, 2344, 2248, 1574, 1575, 199, 1764, 655,
	171, 205, 658, 1757, 655, 200, 1713, 658, 1708, 2814,
	1707, 1706, 206, 1705, 1704, 1842, 1703, 1702, 1779, 1701,
	1740, 1700, 199, 1462, 1577, 1819, 2814, 171, 1681, 1680,
	200, 206, 1679, 1678, 1270, 1677, 1676, 1675, 1674, 207,
	1711, 199, 2018, 1150, 1864, 2933, 1673, 1743, 1672, 200,
	1671, 1670, 171, 1669, 1576, 1668, 1737, 1667, 1656, 1752,
	1769, 1751, 1750, 1748, 1747, 1813, 1746, 1642, 1640, 1635,
	1112, 171, 1895, 1103, 1096, 1897, 3572, 3474, 1902, 2801,
	2802, 2804, 2805, 940, 1771, 206, 3424, 3260, 3247, 3239,
	929, 2744, 2234, 2375, 2403, 199, 3646, 3476, 2797, 2798,
	3259, 1655, 2901, 200, 205, 1733, 909, 1638, 1844, 1753,
	1847, 1837, 1844, 3523, 1844, 1134, 4040, 2414, 4033, 3805,
	3046, 3717, 1923, 1762, 3716, 171, 3702, 3595, 1128, 3522,
	1132, 3242, 2249, 3079, 3722, 2807, 2799, 2800, 2801, 2802,
	2804, 2805, 207, 3078, 1693, 917, 1580, 1581, 1583, 1584,
	1692, 3764, 1906, 2799, 2800, 2801, 2802, 2804, 2805, 3762,
	1735, 2485, 1880, 3345, 1543, 2782, 205, 2961, 2781, 1133,
	2706, 2468, 1128, 1125, 655, 1129, 3293, 658, 1665, 869,
	1270, 1676, 1270, 1128, 1270, 2844, 2015, 3660, 206, 1831,
	3713, 3023, 1957, 3022, 1479, 3964, 3949, 3936, 199, 3329,
	1270, 1270, 1480, 1921, 207, 3312, 200, 1962, 3298, 3098,
	1277, 1270, 1276, 3638, 1970, 1676, 1875, 3170, 1470, 870,
	2750, 3945, 1513, 2231, 1270, 1270, 1270, 2410, 171, 2506,
	1709, 1901, 1689, 3015, 1961, 1318, 3958, 3955, 3272, 3055,
	2024, 2023, 1992, 2509, 649, 1994, 3798, 3579, 3878, 1978,
	206, 1999, 1924, 3786, 2001, 2936, 3288, 1820, 2004, 1459,
	199, 1965, 2615, 2574, 1662, 3008, 4000, 3114, 200, 3699,
	3511, 1967, 2519, 3839, 925, 1306, 4001, 867, 1064, 1126,
	1119, 3946, 2914, 865, 2419, 863, 2020, 1127, 2079, 2109,
	171, 1082, 1944, 1943, 2077, 4082, 861, 3692, 3685, 2038,
	3331, 3321, 3320, 3314, 3311, 858, 3309, 3269, 2437, 3268,
	2755, 2754, 2753, 2752, 2437, 2710, 2516, 2515, 1510, 707,
	2511, 2502, 2435, 966, 1316, 966, 1972, 1976, 2435, 2916,
	2494, 2107, 966, 907, 2493, 1791, 1791, 1150, 2472, 966,
	966, 966, 966, 966, 966, 966, 966, 966, 966, 966,
	966, 966, 966, 966, 966, 966, 966, 966, 966, 966,
	966, 966, 966, 966, 966, 966, 966, 966, 966, 966,
	966, 966, 966, 966, 1832, 966, 2034, 966, 966, 966,
	966, 2111, 1416, 655, 1416, 2098, 658, 1511, 2312, 1113,
	1785, 1785, 1134, 2011, 849, 2012, 1980, 1981, 1317, 966,
	3325, 2093, 966, 966, 2025, 1509, 2396, 1788, 1788, 708,
	966, 906, 2181, 2027, 966, 1549, 966, 966, 1360, 2236,
	1975, 1457, 1975, 1273, 1150, 2279, 2278, 2521, 2139, 2571,
	966, 966, 966, 966, 1128, 966, 966, 966, 966, 966,
	966, 966, 966, 1081, 2056, 1081, 1133, 3838, 2520, 2522,
	2108, 4028, 909, 3099, 909, 1080, 3324, 1080, 3615, 2092,
	2902, 966, 966, 966, 966, 966, 966, 966, 966, 966,
	1350, 2073, 1349, 1125, 966, 1134, 2032, 2212, 2213, 1371,
	1584, 2122, 1325, 1312, 3497, 2028, 1086, 1438, 2525, 1779,
	1779, 2212, 2228, 1150, 908, 2237, 1125, 1348, 1093, 1347,
	1872, 2960, 1086, 2426, 2135, 2136, 2388, 1942, 2097, 2095,
	2196, 2470, 2106, 3493, 2110, 2103, 1452, 2274, 966, 1150,
	889, 855, 2126, 889, 889, 2127, 2128, 2096, 1868, 1133,
	2088, 929, 1091, 4029, 627, 929, 2296, 2296, 2310, 2668,
	2212, 1836, 1835, 2330, 2332, 1844, 1846, 2459, 1522, 2336,
	1234, 2227, 1873, 1874, 1234, 2360, 2404, 2204, 2083, 3494,
	2231, 2196, 2683, 3284, 2202, 2276, 2698, 2238, 2235, 1554,
	2277, 1111, 3105, 2280, 2489, 2281, 2282, 2975, 3914, 1126,
	1869, 1859, 2458, 2805, 1270, 3668, 1860, 1127, 1468, 2208,
	3507, 2482, 2483, 2385, 1977, 2482, 2483, 2482, 2483, 2109,
	1052, 2352, 1126, 2046, 3524, 1882, 2225, 4000, 3104, 1508,
	1127, 2374, 2041, 2240, 1150, 2091, 2974, 1742, 2662, 3310,
	1453, 2049, 1526, 4031, 1886, 1753, 1472, 1875, 1094, 2447,
	626, 2508, 2351, 2721, 3308, 2671, 2526, 2013, 1542, 2042,
	1822, 2107, 3942, 1791, 905, 3297, 1505, 2505, 2913, 1839,
	710, 709, 160, 2305, 1438, 2321, 2406, 2398, 2292, 2334,
	2719, 2507, 1480, 1859, 2026, 3296, 2342, 2343, 1860, 1150,
	3614, 2436, 1883, 909, 2357, 2358, 2353, 2035, 2036, 2037,
	2697, 4037, 909, 1270, 1861, 2240, 909, 1695, 1740, 3670,
	1480, 966, 966, 2043, 966, 3156, 2439, 3275, 1785, 2968,
	1863, 2510, 2178, 773, 2359, 2105, 2364, 2492, 859, 2370,
	2371, 2090, 1458, 2465, 859, 1788, 859, 2050, 2078, 2503,
	2471, 3489, 2417, 2469, 2076, 3490, 1859, 860, 2023, 2450,
	3159, 1860, 2413, 1084, 1128, 1084, 859, 1894, 2967, 1878,
	2670, 2438, 2087, 4017, 2499, 1687, 1688, 4016, 1494, 1841,
	2547, 2490, 3505, 2474, 705, 1765, 704, 1128, 4044, 2416,
	2108, 581, 1865, 2667, 2420, 1887, 1861, 3157, 1270, 1270,
	3492, 1270, 2532, 2716, 909, 2535, 1893, 2537, 1877, 4030,
	3943, 1840, 1863, 1270, 3495, 2234, 576, 2394, 1370, 2717,
	2585, 844, 1311, 2722, 662, 2461, 4054, 1779, 3989, 2452,
	2455, 2442, 1495, 2484, 2486, 2487, 2488, 2473, 3406, 2603,
	2598, 2528, 2475, 1335, 902, 3857, 2576, 1930, 1929, 2576,
	2491, 3285, 2106, 1888, 1889, 655, 2690, 2691, 658, 1861,
	2023, 966, 2629, 2023, 3405, 2023, 1884, 3052, 1523, 628,
	1092, 1456, 625, 844, 1865, 1863, 2176, 2669, 2240, 2179,
	1866, 4067, 2651, 2594, 2652, 1314, 1333, 1989, 3548, 2422,
	3799, 1277, 2649, 2529, 3941, 1866, 902, 3546, 1875, 2587,
	1885, 2632, 1335, 2424, 3815, 966, 2614, 2915, 2541, 1520,
	2712, 966, 966, 2192, 3506, 2240, 2449, 2551, 1904, 160,
	740, 4035, 3491, 845, 2604, 2175, 1682, 2899, 2569, 1866,
	2673, 3669, 2675, 2919, 2600, 2646, 2425, 1865, 2580, 3988,
	2190, 1903, 2659, 2634, 3402, 2653, 2637, 2655, 2638, 2657,
	1866, 2423, 2591, 2089, 2592, 2203, 2593, 3498, 1454, 2048,
	2599, 2195, 2601, 856, 2605, 2631, 966, 966, 2666, 1899,
	2635, 2636, 966, 2616, 1524, 845, 1521, 1866, 2718, 2641,
	2642, 2643, 1553, 1723, 1110, 966, 966, 2720, 2986, 1918,
	3053, 966, 966, 1873, 1874, 3855, 1890, 966, 3627, 4010,
	3548, 1467, 1469, 1416, 4036, 2437, 966, 966, 966, 3546,
	3889, 3561, 966, 3818, 1634, 2953, 3970, 2045, 2947, 2453,
	2222, 1900, 966, 2760, 3971, 2356, 2040, 2713, 3856, 3256,
	4055, 1917, 2369, 908, 3172, 4065, 1234, 4038, 2448, 966,
	1866, 663, 664, 2689, 774, 3571, 1862, 230, 2680, 2679,
	1525, 2743, 2678, 2186, 2954, 3052, 3396, 1727, 1848, 1849,
	3544, 2122, 2597, 2684, 1891, 2187, 900, 2946, 844, 2188,
	2949, 1106, 3407, 2193, 2177, 3116, 2681, 3611, 1856, 929,
	1482, 846, 2738, 2739, 3821, 1234, 2699, 2742, 3940, 3999,
	3997, 902, 3835, 3728, 1909, 3987, 1730, 3357, 2734, 1916,
	3752, 3039, 2951, 1727, 577, 966, 966, 966, 766, 1951,
	1725, 2648, 1720, 1104, 966, 966, 966, 1857, 1099, 966,
	2654, 2711, 2656, 3547, 2658, 568, 1728, 1081, 1862, 966,
	1086, 1150, 901, 846, 3340, 966, 1564, 966, 3403, 1080,
	3451, 1563, 1730, 1081, 3210, 1086, 2851, 2852, 3744, 2125,
	666, 665, 1876, 2676, 1726, 1080, 2354, 2950, 1833, 1896,
	3745, 3120, 754, 1150, 4060, 3676, 2527, 578, 3675, 3655,
	845, 2749, 1728, 2892, 4068, 1086, 3785, 2859, 1150, 3358,
	1990, 3510, 3318, 2873, 3562, 1082, 3746, 1082, 3509, 3271,
	3040, 1862, 1791, 3610, 2834, 3034, 1150, 1915, 1563, 2928,
	847, 2924, 2555, 667, 668, 579, 2545, 580, 966, 2115,
	2853, 1558, 1971, 1963, 1956, 1830, 1938, 3155, 3822, 3225,
	3969, 3897, 966, 3867, 3117, 2897, 3898, 2084, 2189, 2863,
	1234, 1562, 2476, 2867, 1791, 3547, 1826, 2191, 3360, 3584,
	2542, 2911, 848, 3748, 2909, 2882, 1729, 1785, 1563, 1373,
	966, 2602, 847, 3711, 1646, 2917, 2454, 2862, 1651, 3747,
	2861, 2886, 2871, 909, 1788, 3408, 1438, 3709, 2874, 2875,
	2887, 2829, 2830, 2831, 1564, 3656, 3749, 2920, 2921, 2845,
	2879, 2938, 1828, 1634, 2943, 2944, 2939, 2872, 1562, 1785,
	2033, 2860, 1729, 1150, 848, 2937, 3211, 1496, 2941, 1356,
	3452, 2935, 1270, 3612, 3212, 1829, 1788, 1270, 2925, 2934,
	2704, 2682, 2963, 3238, 2868, 2856, 1270, 2855, 2116, 2393,
	2906, 2907, 1150, 2908, 2348, 767, 768, 2392, 846, 649,
	4059, 1564, 2890, 2391, 2390, 2955, 2956, 3409, 1562, 2957,
	1270, 2894, 2895, 2896, 2858, 2549, 1779, 2966, 906, 2989,
	3508, 1270, 2992, 3664, 3792, 2984, 3000, 3002, 2995, 2912,
	2866, 2900, 1354, 2995, 1864, 1086, 1483, 2923, 772, 2980,
	2981, 3033, 2918, 2982, 1912, 1342, 2877, 3048, 2878, 755,
	756, 3823, 2977, 2477, 2478, 2870, 3020, 1343, 1779, 3553,
	3088, 2350, 1864, 1969, 3011, 3601, 2349, 4007, 2952, 3707,
	2965, 2987, 3875, 2929, 2959, 1270, 1270, 3864, 3870, 3458,
	3057, 3653, 3793, 3227, 2970, 3894, 1910, 1084, 2247, 4009,
	2629, 2976, 3960, 3806, 3633, 3450, 1906, 2979, 3009, 2629,
	2985, 2971, 3330, 1084, 1906, 2972, 2826, 3068, 3004, 2993,
	2998, 3005, 2973, 3665, 3003, 899, 2893, 847, 3654, 3132,
	3096, 1540, 2791, 2723, 2546, 1911, 3600, 2474, 1150, 3013,
	1538, 1150, 1517, 1515, 3041, 1493, 2869, 3049, 655, 2501,
	2467, 658, 3750, 2415, 1760, 769, 770, 3751, 3065, 3066,
	3067, 3031, 3895, 3871, 3070, 1756, 3071, 3794, 3072, 848,
	1491, 966, 3028, 1541, 1489, 1440, 2827, 966, 966, 3056,
	2075, 966, 966, 966, 3113, 966, 1487, 3112, 1558, 2664,
	1355, 3054, 2663, 3111, 966, 1791, 160, 160, 3086, 3069,
	3063, 3073, 3074, 966, 1234, 3090, 966, 2640, 1485, 757,
	758, 2104, 1150, 1477, 2086, 1475, 1504, 2053, 1935, 3110,
	1815, 966, 3101, 1352, 3102, 1666, 3103, 1451, 1329, 1150,
	2291, 2287, 3075, 3935, 2246, 3530, 2978, 3519, 4011, 1791,
	1791, 966, 966, 3863, 966, 966, 966, 3582, 3135, 3535,
	1785, 3118, 3482, 1353, 3356, 3350, 857, 3323, 3095, 771,
	3291, 3107, 966, 2988, 1723, 3985, 966, 1788, 1791, 1791,
	966, 966, 966, 966, 966, 966, 966, 966, 966, 966,
	966, 966, 966, 966, 966, 966, 966, 966, 966, 3115,
	966, 1234, 3289, 3270, 1785, 1785, 1539, 966, 966, 1791,
	2285, 3032, 3144, 3145, 966, 1537, 3152, 1516, 1514, 3024,
	1492, 1788, 1788, 2596, 3047, 966, 2572, 2289, 2290, 2288,
	909, 2560, 2552, 1785, 1785, 2539, 1086, 1086, 2008, 2006,
	966, 3140, 2003, 2000, 1995, 1490, 1993, 1991, 1727, 1488,
	1788, 1788, 2074, 1982, 1934, 3162, 3158, 3160, 3161, 1779,
	1932, 1486, 3151, 3174, 1785, 1922, 1907, 3167, 1892, 1150,
	1234, 2023, 1243, 1879, 1867, 1255, 1258, 3243, 3181, 3044,
	3735, 1788, 3182, 1484, 2284, 2286, 3183, 1730, 1476, 3222,
	1474, 3187, 3189, 3184, 2999, 3185, 1234, 966, 1351, 1916,
	3214, 1725, 1767, 1779, 1779, 862, 864, 866, 1567, 4001,
	3905, 2702, 3606, 966, 966, 3599, 1061, 1728, 2135, 3175,
	3108, 3598, 3215, 3542, 2630, 1852, 1308, 3737, 2457, 3266,
	2119, 1081, 1779, 1779, 3368, 1258, 1258, 160, 1875, 966,
	966, 1062, 3223, 1080, 2044, 1726, 1081, 2135, 3190, 3231,
	3232, 3234, 3235, 1968, 3229, 2437, 2437, 1393, 1080, 3006,
	640, 1535, 1536, 1779, 966, 2070, 3246, 2069, 1392, 2435,
	2456, 3245, 3904, 1258, 2051, 3512, 1081, 3537, 3218, 1473,
	3771, 1574, 1575, 3029, 1574, 1575, 3459, 3437, 1080, 1270,
	2479, 1234, 2703, 2460, 3035, 1571, 4003, 1915, 3995, 582,
	3965, 1791, 2538, 1568, 3262, 3317, 2072, 1823, 2506, 3304,
	3306, 227, 3303, 1577, 3299, 2514, 2513, 3319, 3290, 2496,
	3292, 2498, 3274, 2462, 3862, 3316, 1270, 3831, 3828, 1082,
	3791, 4032, 1393, 966, 2497, 3704, 1063, 1729, 696, 3313,
	1576, 1086, 966, 1576, 737, 1082, 1234, 1393, 3081, 3082,
	3346, 593, 3370, 3349, 2464, 565, 1785, 3339, 2363, 1270,
	1270, 1270, 3253, 2579, 2898, 3378, 2474, 2463, 2335, 2313,
	1818, 3365, 1772, 1788, 3897, 1270, 3662, 3322, 4058, 3898,
	3333, 1150, 3362, 2797, 2798, 3347, 1574, 1575, 3361, 2429,
	2430, 3830, 2585, 2427, 2428, 1461, 1279, 3429, 4013, 2242,
	3258, 1460, 2429, 1150, 2427, 2275, 966, 966, 3725, 3693,
	3538, 3348, 966, 966, 1791, 3394, 1519, 966, 966, 1518,
	966, 3534, 3533, 3364, 966, 2629, 3351, 3425, 3354, 2205,
	3257, 3163, 2990, 1660, 1659, 966, 4046, 3363, 4018, 3366,
	3782, 3689, 3647, 3372, 1646, 3371, 3376, 3645, 3568, 3475,
	3393, 966, 3374, 3334, 3332, 1779, 3287, 3282, 3377, 3395,
	3064, 3038, 3383, 3384, 3037, 3411, 1081, 3419, 3385, 1785,
	2929, 3391, 3388, 3392, 2661, 3410, 2645, 3389, 1080, 2644,
	2589, 2564, 2540, 2408, 3399, 3404, 1788, 2407, 2207, 2071,
	2068, 2067, 2066, 2065, 1985, 3423, 1984, 1983, 2317, 1966,
	1946, 1945, 1941, 1940, 1939, 1937, 1936, 1534, 1533, 1380,
	1379, 1086, 1378, 1377, 1376, 3382, 1375, 1374, 1372, 1086,
	1367, 1084, 1366, 1150, 1365, 1150, 1364, 1363, 1324, 1323,
	1322, 1321, 1086, 1320, 1319, 1313, 1084, 1307, 1305, 1304,
	1141, 1140, 1150, 1139, 1138, 1109, 1108, 1044, 1824, 868,
	854, 3667, 3496, 1528, 82, 3464, 1315, 683, 76, 1913,
	3286, 966, 827, 3449, 3893, 1301, 1084, 3814, 1779, 691,
	3877, 2945, 2517, 2052, 1481, 2054, 2881, 2376, 3854, 3433,
	3503, 2759, 3778, 3626, 2245, 3467, 1664, 2838, 1150, 78,
	950, 996, 3560, 3559, 3483, 1150, 974, 3273, 2619, 3557,
	3504, 3479, 3480, 3461, 3462, 3556, 3463, 3470, 1776, 3514,
	3466, 1270, 1270, 3515, 3516, 1778, 916, 1153, 2886, 3471,
	1834, 956, 3513, 1850, 160, 1843, 3460, 3481, 2409, 3456,
	2295, 973, 1255, 3502, 3465, 970, 1780, 1150, 3551, 234,
	234, 234, 1270, 571, 572, 1782, 587, 571, 587, 597,
	602, 3549, 3541, 618, 3539, 972, 3540, 3532, 624, 971,
	1781, 1765, 1683, 969, 234, 1775, 3353, 3352, 966, 2548,
	3554, 2583, 1359, 829, 3527, 1838, 2201, 2229, 2748, 1657,
	931, 952, 751, 1150, 2226, 1102, 941, 3602, 234, 2864,
	3529, 3051, 3252, 3590, 2114, 966, 966, 966, 3586, 3580,
	3550, 699, 3563, 3555, 3585, 3589, 2794, 3570, 3497, 3605,
	3573, 2232, 3574, 1150, 1095, 3575, 3518, 2318, 966, 2311,
	2307, 966, 966, 3587, 2573, 1544, 1636, 3526, 2584, 3528,
	1136, 966, 3593, 934, 1791, 2199, 1648, 3493, 2728, 966,
	966, 3486, 3326, 2124, 3058, 3594, 2884, 1081, 1081, 2402,
	3901, 3171, 1950, 1060, 1150, 1059, 1084, 3484, 1058, 1080,
	1080, 3613, 3883, 3488, 3880, 3618, 3386, 1150, 3018, 1827,
	2421, 1626, 3025, 946, 1254, 966, 2849, 3089, 1234, 1326,
	2686, 623, 966, 3494, 958, 1625, 2524, 3635, 2523, 1785,
	966, 3788, 1791, 1123, 1122, 1121, 571, 571, 3629, 2927,
	966, 3623, 3649, 966, 234, 4066, 1788, 3283, 204, 2696,
	1234, 966, 3379, 3380, 3381, 3640, 3641, 3642, 1150, 1565,
	1557, 3487, 201, 203, 202, 1234, 3644, 3564, 3963, 3301,
	3010, 20, 3650, 19, 18, 103, 3688, 39, 17, 3648,
	116, 132, 131, 1234, 130, 129, 128, 1785, 134, 127,
	3672, 126, 3671, 121, 125, 929, 3698, 124, 123, 122,
	2313, 2313, 120, 1150, 1788, 3710, 1270, 3719, 119, 929,
	118, 1960, 3690, 3686, 117, 115, 114, 113, 112, 111,
	3724, 110, 109, 3695, 966, 966, 108, 107, 1779, 106,
	3680, 3681, 105, 104, 614, 611, 3723, 966, 966, 3708,
	3703, 55, 3020, 3755, 3756, 54, 102, 101, 3734, 2317,
	3736, 3718, 16, 3694, 966, 1791, 3696, 3697, 37, 14,
	59, 60, 3732, 13, 32, 3730, 3733, 81, 3731, 1255,
	93, 92, 33, 3739, 3738, 3589, 3753, 90, 966, 89,
	1234, 966, 31, 1082, 15, 3489, 1779, 3766, 87, 3490,
	86, 3795, 1081, 30, 28, 11, 9, 3784, 1082, 8,
	966, 3678, 34, 1744, 1080, 12, 5, 165, 3776, 1234,
	1785, 164, 3767, 3768, 167, 163, 166, 80, 3783, 3801,
	2313, 2313, 2313, 1270, 162, 161, 79, 1788, 1082, 2317,
	2317, 1148, 26, 3800, 3492, 1249, 10, 966, 966, 157,
	3720, 3770, 3817, 3344, 74, 159, 158, 966, 3495, 156,
	966, 155, 1270, 154, 75, 72, 153, 152, 73, 3808,
	151, 24, 1270, 1270, 6, 3812, 3832, 3810, 58, 3834,
	3811, 3740, 7, 3608, 3097, 96, 97, 1084, 1084, 1270,
	3845, 3759, 3829, 3825, 3826, 3723, 3824, 35, 70, 69,
	68, 23, 966, 966, 57, 3841, 3837, 22, 3842, 194,
	193, 192, 3843, 3844, 191, 1438, 190, 3816, 3836, 1779,
	189, 184, 183, 188, 186, 3809, 3849, 3872, 185, 3848,
	187, 3850, 3874, 3851, 182, 966, 966, 196, 966, 3859,
	195, 198, 181, 179, 175, 174, 178, 180, 3882, 3885,
	177, 176, 173, 2725, 2726, 1234, 3899, 197, 1234, 2317,
	2317, 2317, 3906, 149, 150, 3873, 3491, 65, 148, 3887,
	147, 146, 1081, 145, 144, 3891, 143, 3858, 142, 64,
	1081, 21, 3919, 2, 1080, 3918, 966, 966, 966, 1,
	0, 3920, 1080, 1081, 0, 3910, 3913, 0, 3915, 0,
	0, 3498, 3903, 0, 0, 1080, 3947, 0, 0, 966,
	3886, 0, 0, 3890, 0, 3952, 0, 3931, 3932, 3934,
	1097, 3933, 0, 0, 0, 0, 0, 0, 1082, 1234,
	0, 3950, 0, 0, 0, 0, 0, 0, 3972, 0,
	0, 3907, 0, 0, 3908, 3974, 1234, 0, 1107, 0,
	0, 3976, 0, 3981, 0, 618, 0, 0, 966, 3982,
	0, 0, 3978, 3973, 3986, 0, 0, 0, 0, 0,
	0, 0, 0, 2820, 2821, 2822, 0, 0, 234, 0,
	234, 234, 1246, 0, 234, 234, 1261, 4005, 3998, 3994,
	3996, 4002, 1084, 4004, 3992, 3993, 0, 2585, 0, 234,
	3882, 1281, 4008, 3885, 0, 0, 966, 4006, 966, 0,
	4015, 4023, 4020, 4026, 4021, 0, 4012, 4027, 3962, 4019,
	0, 0, 4025, 0, 0, 4022, 1310, 4024, 0, 0,
	0, 0, 0, 0, 0, 4014, 0, 4041, 0, 1328,
	0, 1261, 4039, 0, 234, 234, 0, 1246, 0, 0,
	0, 3903, 0, 0, 0, 4050, 4048, 234, 4047, 4053,
	0, 0, 0, 966, 966, 1369, 0, 0, 0, 4056,
	4052, 966, 0, 966, 966, 4062, 1234, 234, 234, 234,
	4069, 1246, 234, 1261, 0, 4070, 0, 0, 0, 0,
	0, 4072, 0, 618, 4071, 234, 234, 4073, 0, 0,
	3979, 3980, 0, 4076, 0, 3983, 4081, 4080, 0, 0,
	4079, 0, 4085, 4078, 4084, 4083, 4088, 966, 751, 0,
	0, 0, 0, 0, 4093, 0, 0, 2313, 2313, 4089,
	0, 0, 4091, 0, 1574, 1575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4063, 4064,
	0, 0, 0, 0, 0, 0, 1605, 0, 0, 0,
	0, 0, 1084, 1577, 0, 0, 0, 0, 0, 0,
	1084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1243, 0, 0, 1084, 234, 0, 3813, 0, 0, 0,
	0, 0, 4090, 1576, 0, 1255, 0, 1759, 0, 0,
	0, 234, 0, 0, 0, 0, 0, 0, 0, 1082,
	1082, 0, 0, 0, 0, 2313, 2313, 2313, 2313, 2313,
	2313, 2313, 2313, 2313, 2313, 2313, 2313, 2313, 2313, 2313,
	2313, 2313, 2313, 2313, 0, 2313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1854, 0, 0, 0,
	0, 0, 0, 742, 0, 0, 2317, 2317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 66,
	0, 745, 744, 0, 0, 1582, 0, 0, 1234, 0,
	1258, 1258, 0, 0, 0, 67, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 71, 0,
	1234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1604, 1606, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1255, 0,
	0, 0, 0, 77, 2317, 2317, 2317, 2317, 2317, 2317,
	2317, 2317, 2317, 2317, 2317, 2317, 2317, 2317, 2317, 2317,
	2317, 2317, 2317, 0, 2317, 0, 0, 0, 0, 0,
	3128, 3129, 0, 0, 1597, 0, 1255, 83, 1255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	98, 1927, 0, 0, 0, 84, 95, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1082, 0, 0, 0, 234, 0,
	234, 0, 0, 0, 234, 0, 0, 0, 0, 0,
	1234, 0, 1234, 0, 0, 0, 0, 1281, 1246, 234,
	0, 234, 0, 0, 85, 0, 234, 1281, 587, 1234,
	0, 234, 1281, 0, 0, 0, 0, 618, 3191, 3192,
	3193, 3194, 3195, 3196, 3197, 3198, 3199, 3200, 3201, 3202,
	3203, 3204, 3205, 3206, 3207, 3208, 3209, 0, 3213, 0,
	0, 0, 0, 0, 0, 0, 0, 1598, 0, 0,
	0, 0, 0, 0, 0, 1234, 0, 0, 0, 0,
	0, 0, 1234, 1574, 1575, 0, 1607, 1608, 1609, 1617,
	1618, 1619, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1610, 1605, 0, 0, 0, 0,
	0, 0, 1577, 0, 0, 0, 0, 2797, 2798, 1623,
	2815, 2816, 2817, 0, 1234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3136, 0,
	0, 88, 1576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1596, 0, 0, 0, 0, 0, 0, 0,
	1593, 0, 0, 0, 1082, 0, 630, 0, 0, 0,
	1234, 0, 1082, 0, 0, 0, 0, 0, 0, 0,
	168, 91, 0, 94, 0, 1082, 2812, 0, 0, 0,
	0, 1587, 1585, 1586, 1578, 1579, 1580, 1581, 1583, 1584,
	1234, 234, 0, 0, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 746, 0, 0, 0, 133,
	0, 0, 0, 0, 1599, 1600, 1601, 1602, 0, 0,
	0, 0, 0, 0, 1582, 0, 0, 0, 0, 0,
	0, 1234, 0, 0, 0, 207, 0, 0, 0, 0,
	0, 0, 234, 0, 1234, 0, 234, 0, 0, 0,
	234, 0, 0, 1614, 0, 2138, 1624, 0, 2803, 135,
	635, 0, 1604, 1606, 0, 0, 0, 0, 234, 0,
	234, 0, 234, 172, 0, 0, 571, 1620, 0, 1621,
	929, 206, 0, 0, 0, 0, 1591, 1592, 0, 0,
	1986, 199, 0, 0, 0, 1234, 0, 0, 0, 200,
	0, 0, 1612, 0, 0, 0, 0, 0, 234, 0,
	0, 2818, 0, 1597, 0, 0, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 0, 0, 0, 1255, 0,
	0, 0, 642, 0, 0, 0, 0, 0, 1622, 618,
	1234, 0, 2243, 751, 0, 0, 0, 2813, 0, 0,
	0, 1960, 0, 0, 0, 1611, 637, 0, 0, 0,
	0, 0, 0, 0, 0, 66, 0, 0, 234, 0,
	1246, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 67, 0, 0, 618, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 71, 0, 0, 0, 0, 0,
	234, 234, 0, 234, 0, 234, 1603, 234, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1598, 0, 2080, 77,
	0, 2081, 0, 2082, 0, 0, 2313, 2386, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 0, 0,
	0, 1615, 0, 1255, 1255, 0, 0, 0, 0, 0,
	2814, 632, 0, 83, 0, 0, 602, 0, 0, 0,
	618, 0, 0, 0, 1574, 1575, 98, 0, 0, 0,
	2313, 84, 95, 0, 636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1605, 0, 0, 0,
	0, 0, 0, 1577, 0, 0, 0, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 639, 0, 0, 0, 1255,
	85, 634, 2432, 1576, 0, 0, 0, 0, 0, 1613,
	0, 0, 0, 1588, 1589, 1595, 1616, 1594, 1590, 0,
	1587, 1585, 1586, 1578, 1579, 1580, 1581, 1583, 1584, 0,
	0, 0, 0, 929, 0, 2317, 0, 3440, 631, 0,
	0, 0, 0, 0, 0, 0, 0, 2809, 2810, 2811,
	0, 0, 0, 0, 2808, 2806, 2807, 2799, 2800, 2801,
	2802, 2804, 2805, 0, 638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 643, 0, 2317,
	0, 0, 0, 0, 0, 1574, 1575, 0, 633, 2313,
	0, 0, 0, 0, 0, 1582, 0, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1605, 0, 0,
	0, 0, 234, 0, 1577, 0, 0, 88, 0, 0,
	0, 571, 0, 0, 0, 0, 0, 0, 234, 0,
	571, 0, 0, 1604, 1606, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 1576, 0, 0, 0, 0, 3632,
	0, 0, 0, 0, 1596, 0, 168, 91, 0, 94,
	0, 0, 1593, 0, 141, 0, 0, 0, 0, 0,
	0, 66, 0, 43, 42, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 1597, 0, 0, 67, 0, 136,
	0, 746, 0, 3658, 0, 133, 0, 0, 0, 0,
	71, 0, 587, 0, 0, 0, 3131, 0, 0, 0,
	61, 0, 0, 0, 0, 0, 0, 45, 2317, 138,
	0, 207, 0, 0, 0, 0, 1599, 1600, 1601, 1602,
	0, 0, 0, 44, 0, 77, 1582, 0, 0, 0,
	0, 0, 0, 0, 0, 135, 2446, 1722, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 47, 62, 172,
	0, 0, 0, 0, 48, 0, 234, 206, 0, 83,
	0, 0, 0, 139, 1604, 1606, 0, 199, 0, 234,
	46, 0, 98, 0, 0, 200, 0, 84, 95, 0,
	0, 0, 0, 0, 234, 0, 0, 1598, 1591, 1592,
	0, 2317, 2317, 0, 0, 0, 0, 171, 1574, 1575,
	0, 0, 234, 2530, 0, 0, 0, 1258, 49, 0,
	0, 0, 0, 0, 0, 1597, 0, 0, 0, 0,
	1605, 0, 3775, 0, 0, 0, 85, 1577, 1281, 0,
	0, 234, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 0, 0, 0, 2568, 0, 0, 0, 0, 0,
	1960, 0, 0, 0, 2446, 0, 571, 1576, 0, 2588,
	0, 0, 0, 0, 0, 234, 0, 0, 234, 0,
	234, 0, 234, 0, 0, 0, 0, 1246, 0, 234,
	234, 0, 1261, 1261, 0, 0, 0, 0, 0, 0,
	0, 0, 2612, 751, 0, 2446, 2446, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1603, 234,
	915, 0, 1585, 1586, 1578, 1579, 1580, 1581, 1583, 1584,
	0, 0, 0, 0, 0, 234, 1246, 234, 1598, 0,
	1281, 0, 1281, 0, 0, 1246, 0, 1246, 0, 1246,
	0, 0, 0, 88, 0, 0, 0, 0, 0, 1582,
	0, 0, 0, 0, 50, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 234, 234, 234, 1246, 234,
	0, 234, 0, 0, 0, 0, 63, 0, 0, 2850,
	0, 53, 168, 91, 0, 94, 0, 1604, 1606, 51,
	0, 0, 0, 140, 0, 0, 0, 0, 0, 0,
	52, 0, 234, 0, 0, 1574, 1575, 0, 0, 205,
	234, 2876, 0, 0, 0, 0, 0, 56, 0, 0,
	0, 133, 0, 0, 0, 0, 2889, 1605, 0, 0,
	0, 137, 0, 0, 1577, 0, 0, 0, 1597, 0,
	0, 0, 0, 0, 2904, 0, 0, 207, 0, 1594,
	1590, 0, 1587, 1585, 1586, 1578, 1579, 1580, 1581, 1583,
	1584, 0, 0, 0, 1576, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 1596, 0, 0, 0, 0, 0,
	0, 0, 1593, 0, 0, 172, 0, 0, 0, 0,
	0, 0, 0, 206, 0, 0, 0, 0, 0, 1281,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 200, 1574, 1575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3126, 0, 0, 1960,
	0, 0, 0, 171, 1605, 0, 3, 0, 0, 0,
	0, 1577, 1258, 0, 0, 0, 1599, 1600, 1601, 1602,
	0, 1598, 0, 0, 0, 0, 1582, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2889, 1576, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1604, 1606, 0, 0, 0, 1574,
	1575, 0, 1607, 1608, 1609, 1617, 1618, 1619, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 1591, 1592,
	0, 1605, 0, 0, 0, 0, 0, 0, 1577, 0,
	0, 234, 0, 0, 0, 1623, 571, 0, 0, 0,
	0, 571, 0, 0, 571, 1597, 0, 571, 571, 0,
	0, 0, 0, 571, 0, 0, 0, 0, 1576, 0,
	0, 234, 0, 1582, 0, 0, 0, 0, 1596, 0,
	0, 0, 0, 1281, 0, 0, 1593, 1586, 1578, 1579,
	1580, 1581, 1583, 1584, 0, 0, 0, 0, 0, 0,
	0, 0, 1281, 2797, 2798, 0, 2815, 2816, 2817, 0,
	0, 1604, 1606, 0, 0, 0, 1249, 0, 0, 1148,
	0, 2446, 2446, 234, 0, 1261, 0, 0, 2446, 0,
	0, 2931, 0, 0, 0, 0, 0, 0, 0, 2446,
	2931, 0, 2446, 2931, 2931, 0, 0, 0, 1603, 0,
	1599, 1600, 1601, 1602, 0, 0, 234, 234, 1261, 234,
	1582, 915, 1597, 0, 0, 915, 0, 0, 1598, 0,
	0, 0, 2812, 0, 0, 0, 0, 0, 0, 1261,
	234, 1246, 0, 0, 0, 0, 0, 0, 0, 1614,
	3148, 0, 1624, 2446, 0, 2991, 2446, 1261, 1604, 1606,
	2446, 2446, 1261, 0, 0, 0, 0, 3164, 0, 0,
	0, 1283, 0, 1289, 0, 1295, 0, 0, 0, 0,
	0, 0, 1591, 1592, 0, 234, 3014, 0, 0, 3016,
	2446, 0, 0, 234, 0, 0, 0, 234, 1612, 1261,
	0, 0, 0, 1255, 0, 0, 0, 0, 0, 1597,
	0, 0, 0, 0, 2803, 0, 2568, 0, 0, 1246,
	0, 234, 0, 0, 2446, 0, 571, 0, 0, 0,
	0, 0, 0, 2446, 0, 1598, 0, 0, 0, 0,
	0, 0, 234, 234, 0, 0, 1409, 0, 0, 1594,
	1590, 0, 1587, 1585, 1586, 1578, 1579, 1580, 1581, 1583,
	1584, 0, 0, 1427, 0, 1432, 0, 2818, 0, 234,
	2568, 0, 0, 2568, 0, 1441, 0, 1446, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1258, 0, 0,
	0, 0, 0, 0, 66, 0, 0, 3255, 0, 0,
	0, 0, 1603, 2813, 0, 0, 0, 0, 0, 0,
	67, 0, 3106, 0, 0, 1246, 234, 0, 234, 0,
	0, 0, 1598, 71, 1574, 1575, 0, 1607, 1608, 1609,
	1617, 1618, 1619, 1500, 0, 0, 1506, 0, 0, 0,
	0, 0, 0, 0, 0, 1610, 1605, 1615, 0, 0,
	0, 234, 0, 1577, 0, 0, 0, 0, 77, 0,
	1623, 0, 1578, 1579, 1580, 1581, 1583, 1584, 2797, 2798,
	0, 2815, 2816, 2817, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1576, 0, 0, 0, 0, 0, 0,
	0, 0, 83, 1596, 0, 0, 0, 0, 0, 0,
	0, 1593, 0, 0, 0, 98, 0, 3169, 0, 0,
	84, 95, 0, 0, 0, 0, 2814, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1627, 1628, 1629, 1630,
	1631, 1632, 1633, 0, 0, 1613, 0, 2812, 0, 1588,
	1589, 1595, 1616, 1594, 1590, 0, 1587, 1585, 1586, 1578,
	1579, 1580, 1581, 1583, 1584, 0, 0, 1645, 0, 85,
	0, 0, 0, 1658, 0, 1599, 1600, 1601, 1602, 0,
	0, 0, 0, 0, 0, 1582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 234, 1614, 0, 0, 1624, 0, 0,
	0, 0, 0, 1604, 1606, 0, 0, 0, 0, 2803,
	0, 0, 0, 0, 571, 571, 0, 0, 1620, 0,
	1621, 0, 0, 2809, 2810, 2811, 0, 1591, 1592, 0,
	2808, 2806, 2807, 2799, 2800, 2801, 2802, 2804, 2805, 66,
	0, 2819, 0, 1612, 0, 0, 2399, 1281, 0, 0,
	0, 0, 0, 0, 1597, 67, 1716, 1716, 1716, 0,
	0, 0, 2818, 0, 0, 0, 88, 0, 71, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1622,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1611, 618, 2813, 0,
	0, 0, 0, 77, 0, 168, 91, 0, 94, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 915,
	0, 0, 205, 0, 0, 0, 0, 83, 0, 0,
	746, 0, 0, 3469, 133, 0, 0, 1603, 0, 0,
	98, 0, 234, 0, 0, 84, 95, 0, 0, 0,
	3477, 234, 0, 0, 0, 0, 0, 1598, 0, 234,
	207, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1615, 0, 135, 0, 2446, 234, 0, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 172, 0,
	0, 2814, 0, 2612, 2612, 0, 206, 0, 0, 751,
	751, 2446, 0, 0, 2568, 2568, 199, 0, 751, 2446,
	0, 0, 0, 0, 200, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1613, 0, 0, 0, 1588, 1589, 1595, 1616, 1594, 1590,
	0, 1587, 1585, 1586, 1578, 1579, 1580, 1581, 1583, 1584,
	0, 1148, 0, 0, 3442, 3434, 0, 0, 3441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 88, 0, 0, 0, 0, 0, 0, 2809, 2810,
	2811, 3624, 0, 0, 0, 2808, 2806, 2807, 2799, 2800,
	2801, 2802, 2804, 2805, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 91, 0, 94, 0, 0, 0, 234, 0, 0,
	0, 0, 3624, 1281, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2138, 0, 205, 234, 0,
	0, 0, 0, 0, 0, 746, 0, 0, 0, 133,
	0, 66, 0, 0, 0, 2446, 2446, 2446, 0, 0,
	2797, 2798, 0, 2815, 2816, 2817, 0, 67, 1281, 0,
	0, 0, 0, 0, 0, 207, 2446, 0, 2931, 0,
	71, 1281, 1281, 234, 1261, 0, 2138, 0, 0, 0,
	0, 0, 0, 0, 0, 1261, 234, 1261, 234, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 2446, 0,
	2446, 234, 0, 172, 0, 77, 0, 0, 0, 0,
	0, 206, 0, 0, 2446, 0, 0, 0, 3566, 2812,
	0, 199, 0, 0, 0, 0, 0, 234, 0, 200,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 83,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1421, 98, 0, 0, 0, 0, 84, 95, 0,
	0, 0, 0, 0, 0, 0, 0, 1281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2113, 2803, 2117, 0, 0, 0, 85, 0, 0, 2131,
	0, 0, 0, 0, 0, 0, 2140, 2141, 2142, 2143,
	2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153,
	2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163,
	2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173,
	2174, 0, 2180, 0, 2182, 2183, 2184, 2185, 0, 2446,
	0, 2931, 0, 0, 3652, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 0, 2209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1645, 0, 0,
	2813, 2224, 0, 0, 0, 0, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 0, 0, 2254, 2257, 2260,
	2263, 0, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 0,
	0, 0, 0, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3652, 0,
	2309, 0, 2320, 2322, 2327, 0, 2446, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3727, 0, 0, 0,
	0, 0, 168, 91, 0, 94, 0, 0, 1281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 975,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	0, 234, 234, 0, 0, 0, 0, 746, 0, 0,
	0, 133, 0, 2814, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3169, 0, 0, 0, 0,
	0, 0, 235, 235, 235, 0, 0, 207, 0, 0,
	3652, 0, 0, 0, 0, 0, 0, 0, 1574, 1575,
	0, 1607, 1608, 1609, 1617, 1618, 1619, 235, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 1610,
	1605, 0, 0, 0, 0, 172, 0, 1577, 0, 0,
	0, 235, 0, 206, 1623, 0, 234, 0, 0, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 200, 3566, 0, 0, 0, 0, 1576, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 1596, 0, 0,
	0, 0, 0, 1419, 2931, 1593, 0, 0, 0, 0,
	2809, 2810, 2811, 0, 0, 0, 0, 2808, 2806, 2807,
	2799, 2800, 2801, 2802, 2804, 2805, 0, 0, 0, 1281,
	0, 1281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3868, 0, 2533, 2534,
	0, 2536, 0, 1281, 0, 0, 234, 0, 0, 1599,
	1600, 1601, 1602, 0, 0, 0, 0, 0, 0, 1582,
	0, 0, 0, 0, 0, 234, 2446, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 0, 0, 0, 1614, 0,
	0, 1624, 0, 0, 0, 0, 0, 1604, 1606, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3169, 0,
	0, 0, 1620, 0, 1621, 0, 0, 0, 0, 0,
	0, 1591, 1592, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1612, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1597, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2446, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1622, 0, 0, 0, 0, 2660, 0,
	0, 0, 3652, 0, 0, 0, 0, 0, 0, 0,
	1611, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1281, 0, 2446, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1627, 1628,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1603, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1598, 0, 1574, 1575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2708, 2709, 1605, 1615, 0, 0, 2715,
	0, 0, 1577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2729, 2730,
	0, 0, 2612, 0, 2224, 0, 0, 0, 0, 0,
	0, 0, 1576, 2737, 2612, 0, 0, 0, 0, 0,
	0, 0, 1596, 0, 0, 0, 0, 0, 0, 2751,
	1593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2763, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1613, 0, 0, 0, 1588, 1589,
	1595, 1616, 1594, 1590, 3125, 1587, 1585, 1586, 1578, 1579,
	1580, 1581, 1583, 1584, 0, 0, 0, 0, 2772, 0,
	0, 0, 2773, 0, 1599, 1600, 1601, 1602, 0, 0,
	0, 0, 0, 0, 1582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2327, 2327, 2327, 0, 1574, 1575, 0, 1607, 1608,
	1609, 1617, 1618, 1619, 0, 0, 1716, 0, 0, 0,
	0, 0, 1604, 1606, 2854, 0, 1610, 1605, 0, 0,
	0, 0, 0, 0, 1577, 0, 0, 0, 0, 0,
	0, 1623, 0, 0, 0, 0, 1591, 1592, 0, 0,
	0, 235, 1154, 235, 235, 0, 1154, 235, 235, 0,
	1154, 0, 0, 0, 1576, 0, 0, 0, 0, 0,
	0, 0, 235, 1597, 1596, 0, 0, 0, 0, 0,
	0, 0, 1593, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1154, 0, 0, 915, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 915,
	0, 0, 0, 0, 0, 0, 1154, 235, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 2948, 0, 0,
	0, 0, 0, 0, 0, 0, 1599, 1600, 1601, 1602,
	235, 235, 235, 0, 0, 235, 1582, 1154, 0, 0,
	0, 0, 0, 1154, 0, 0, 1603, 1154, 235, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1154, 0, 0, 0, 1614, 1598, 0, 1624, 0,
	0, 0, 1574, 1575, 1604, 1606, 0, 0, 1617, 1618,
	1619, 0, 0, 0, 0, 0, 0, 0, 0, 1620,
	0, 1621, 0, 0, 1605, 0, 0, 0, 1591, 1592,
	0, 1577, 0, 0, 0, 0, 1574, 1575, 1623, 1154,
	0, 0, 0, 0, 1612, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1597, 0, 0, 1605, 0,
	0, 1576, 0, 0, 0, 1577, 0, 235, 0, 0,
	0, 1596, 0, 0, 0, 0, 0, 0, 0, 1593,
	1622, 0, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 962, 1576, 0, 1611, 0, 0,
	0, 0, 0, 0, 0, 1596, 0, 0, 0, 0,
	0, 0, 0, 1593, 0, 0, 0, 1594, 1590, 0,
	1587, 1585, 1586, 1578, 1579, 1580, 1581, 1583, 1584, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 233, 233,
	0, 0, 0, 1599, 1600, 1601, 1602, 0, 1603, 0,
	0, 0, 0, 1582, 0, 0, 0, 2714, 0, 0,
	0, 0, 656, 0, 0, 0, 0, 0, 1598, 0,
	0, 0, 0, 0, 0, 0, 0, 1599, 1600, 1601,
	1602, 0, 1614, 0, 0, 1624, 656, 1582, 2131, 0,
	0, 1604, 1606, 1615, 3123, 3124, 0, 0, 3127, 0,
	0, 0, 3130, 0, 0, 0, 0, 0, 0, 0,
	0, 3134, 0, 0, 0, 1591, 1592, 0, 0, 0,
	3141, 0, 0, 2854, 0, 1604, 1606, 0, 0, 0,
	0, 1612, 0, 0, 0, 0, 0, 0, 3153, 0,
	0, 0, 1597, 0, 0, 0, 0, 0, 0, 1591,
	1592, 0, 0, 0, 0, 0, 0, 0, 3176, 3177,
	0, 3178, 3179, 3180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1597, 0, 0, 3186,
	0, 1613, 1076, 3188, 0, 1588, 1589, 1595, 1616, 1594,
	1590, 0, 1587, 1585, 1586, 1578, 1579, 1580, 1581, 1583,
	1584, 0, 1083, 0, 0, 2220, 0, 235, 0, 2221,
	0, 0, 0, 0, 3216, 3217, 0, 0, 1154, 0,
	0, 0, 235, 235, 235, 229, 229, 567, 0, 235,
	0, 0, 3228, 0, 235, 1603, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1154, 3237, 0, 0,
	0, 0, 0, 0, 0, 1598, 0, 1574, 1575, 0,
	0, 0, 0, 0, 0, 0, 0, 1154, 0, 1603,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1605,
	1615, 0, 0, 0, 0, 0, 1577, 0, 0, 1598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1576, 0, 0, 0,
	3276, 3279, 0, 0, 0, 0, 1596, 0, 0, 0,
	0, 0, 0, 0, 1593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1613, 0,
	0, 0, 0, 0, 0, 1616, 1594, 1590, 2707, 1587,
	1585, 1586, 1578, 1579, 1580, 1581, 1583, 1584, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1599, 1600,
	1601, 1602, 0, 1154, 235, 0, 0, 0, 1582, 0,
	1594, 1590, 1154, 1587, 1585, 1586, 1578, 1579, 1580, 1581,
	1583, 1584, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1716, 0, 0, 0, 0, 0, 1604, 1606, 0, 3373,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 235,
	0, 0, 0, 235, 0, 0, 0, 0, 0, 0,
	1591, 1592, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 235, 0, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3412, 3413, 0, 0, 0, 0, 3417,
	3418, 235, 0, 0, 3421, 3422, 0, 0, 0, 0,
	0, 3426, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3430, 0, 0, 0, 0, 0, 0, 1154,
	0, 1154, 0, 1154, 0, 0, 0, 0, 3435, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1154,
	1154, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1154, 235, 0, 0, 235, 0, 0, 0, 0, 0,
	1603, 0, 0, 1154, 1154, 1154, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 0,
	1598, 0, 0, 235, 235, 0, 235, 0, 235, 0,
	235, 0, 235, 0, 0, 0, 233, 0, 233, 233,
	0, 0, 233, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 656, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 1154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 233, 233, 0, 0,
	233, 1594, 1590, 0, 1587, 1585, 1586, 1578, 1579, 1580,
	1581, 1583, 1584, 233, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1154, 0, 0, 0, 0, 0, 0,
	0, 0, 3619, 3620, 3621, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1145, 0, 0, 0, 0, 0,
	1253, 1574, 1575, 0, 0, 2131, 0, 0, 3630, 3631,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1605, 0, 0, 3639, 0, 0, 233,
	1577, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1576, 0, 0, 0, 0, 235, 0, 0, 1154, 3279,
	1596, 0, 0, 1361, 0, 0, 0, 3677, 1593, 0,
	0, 0, 0, 0, 0, 0, 0, 3684, 0, 0,
	915, 0, 0, 1384, 1384, 1384, 0, 0, 3691, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1425, 1426, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 951, 100, 0, 0, 0, 0, 0,
	0, 0, 0, 1154, 0, 0, 0, 0, 0, 0,
	0, 0, 1599, 1600, 1601, 1602, 0, 0, 0, 0,
	0, 0, 1582, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1154, 0, 0, 0, 0, 0, 0,
	0, 3279, 3279, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	1604, 1606, 0, 0, 0, 0, 0, 0, 0, 0,
	1527, 0, 235, 0, 0, 0, 0, 0, 100, 0,
	0, 0, 0, 0, 1591, 1592, 0, 235, 1154, 729,
	0, 0, 0, 0, 0, 3787, 0, 0, 3790, 0,
	0, 0, 1154, 0, 0, 235, 0, 0, 0, 0,
	0, 1597, 0, 713, 0, 0, 1738, 3279, 1083, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 233, 1738, 233,
	0, 235, 0, 0, 656, 0, 0, 714, 0, 656,
	0, 0, 0, 0, 890, 0, 0, 0, 715, 0,
	0, 0, 0, 0, 3279, 910, 0, 3279, 235, 0,
	0, 235, 0, 235, 0, 235, 716, 0, 0, 0,
	0, 0, 235, 235, 0, 0, 0, 1154, 1154, 0,
	1154, 0, 0, 734, 0, 0, 0, 0, 0, 0,
	0, 1070, 1154, 0, 1603, 0, 0, 0, 0, 0,
	2131, 717, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1598, 0, 0, 0, 235, 0,
	235, 0, 0, 718, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 915, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 719, 0, 0, 720, 0, 0, 0,
	0, 0, 0, 0, 0, 642, 0, 235, 235, 235,
	235, 0, 235, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 3930, 3930, 3930, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	1754, 0, 0, 235, 0, 0, 3951, 0, 0, 656,
	0, 0, 0, 0, 0, 1763, 0, 1253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1594, 1590, 0, 1587, 1585,
	1586, 1578, 1579, 1580, 1581, 1583, 1584, 0, 0, 0,
	0, 0, 0, 0, 0, 3930, 0, 0, 0, 0,
	233, 0, 0, 0, 233, 0, 0, 0, 233, 0,
	0, 998, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 722, 0, 0, 0, 0, 233, 0, 233, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 740, 3279, 723, 3279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	0, 0, 724, 0, 0, 0, 738, 739, 736, 0,
	0, 0, 0, 0, 731, 0, 0, 725, 0, 0,
	3930, 4057, 0, 0, 0, 0, 0, 0, 4061, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 233,
	726, 732, 0, 0, 0, 0, 0, 0, 0, 727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	1154, 0, 728, 0, 0, 0, 0, 735, 656, 233,
	0, 233, 0, 233, 0, 233, 0, 233, 0, 0,
	643, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 730, 1154, 0, 0, 0, 0, 0, 1948, 0,
	0, 0, 1955, 0, 0, 0, 0, 1154, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1361, 1154, 1974, 0, 1974, 1087,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 1253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	235, 0, 235, 0, 0, 0, 0, 0, 100, 235,
	100, 0, 100, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 1154, 0, 1955, 0, 0, 2030, 0, 0,
	0, 1154, 0, 0, 0, 0, 1154, 0, 0, 0,
	0, 0, 0, 0, 0, 1154, 0, 2047, 0, 0,
	0, 1154, 0, 0, 0, 0, 0, 2057, 235, 2059,
	0, 2061, 0, 2063, 0, 2064, 235, 0, 0, 1154,
	235, 0, 0, 100, 0, 0, 0, 910, 100, 100,
	1154, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	100, 0, 100, 0, 0, 0, 0, 0, 0, 0,
	0, 2085, 100, 0, 100, 0, 0, 0, 0, 0,
	1083, 0, 0, 0, 0, 235, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1083, 0, 0, 0,
	0, 0, 0, 0, 1154, 1154, 0, 0, 0, 0,
	233, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 100, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1154, 0, 235,
	1154, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 890, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 1154, 0, 0, 233, 0, 1639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 1154, 0,
	0, 0, 0, 1644, 0, 0, 0, 1650, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	656, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 1087, 0, 0, 0, 1087, 0,
	0, 0, 1087, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 233, 0, 233, 0,
	233, 0, 0, 0, 0, 0, 0, 233, 233, 0,
	0, 0, 0, 0, 1087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1736, 0, 1739, 1154, 100,
	0, 0, 0, 0, 0, 0, 0, 233, 1087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1087,
	0, 0, 0, 0, 0, 1087, 0, 0, 0, 1087,
	0, 0, 233, 233, 233, 233, 0, 233, 0, 233,
	1253, 0, 0, 1087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	233, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 1955, 1154, 0,
	0, 1087, 0, 0, 2559, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 673, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 235,
	0, 2590, 0, 0, 1384, 1154, 1384, 0, 1384, 0,
	674, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1154, 1154,
	1154, 0, 0, 0, 675, 2639, 693, 0, 0, 0,
	0, 0, 0, 0, 1154, 0, 239, 0, 0, 235,
	1154, 2647, 0, 2650, 0, 0, 0, 0, 0, 0,
	676, 0, 0, 677, 0, 0, 0, 0, 0, 0,
	0, 0, 1154, 0, 0, 0, 0, 0, 0, 0,
	700, 0, 0, 0, 0, 0, 678, 0, 0, 0,
	2672, 1253, 2674, 1253, 0, 2677, 0, 0, 698, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 648, 0, 0, 0, 0, 0,
	679, 0, 0, 0, 0, 0, 0, 0, 1384, 0,
	0, 0, 0, 0, 0, 0, 2705, 0, 648, 0,
	680, 0, 0, 681, 0, 0, 0, 0, 702, 0,
	0, 0, 642, 0, 1083, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1083,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 910, 0, 910, 0, 0, 0, 0,
	0, 0, 1154, 0, 1154, 0, 0, 0, 0, 1738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1154, 0, 0, 0, 0, 0, 0, 701, 0,
	0, 0, 0, 1087, 0, 1087, 0, 684, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1087, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 233, 0, 0, 0, 1792, 0, 1154, 0, 235,
	0, 235, 0, 0, 1154, 0, 0, 682, 1087, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 685, 0,
	1154, 1154, 0, 0, 233, 233, 0, 233, 0, 1087,
	0, 0, 0, 0, 1738, 0, 0, 0, 0, 0,
	235, 686, 0, 0, 0, 0, 1154, 235, 233, 0,
	0, 1154, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	890, 0, 641, 890, 890, 0, 0, 0, 0, 0,
	0, 0, 0, 672, 0, 694, 0, 0, 0, 0,
	0, 0, 1154, 656, 687, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 692, 0, 0, 0, 0, 0, 0,
	0, 0, 1154, 0, 0, 0, 0, 688, 2198, 1083,
	705, 0, 704, 0, 0, 0, 689, 0, 0, 0,
	0, 0, 0, 0, 910, 0, 0, 0, 0, 690,
	233, 233, 0, 1644, 697, 0, 0, 1644, 0, 706,
	0, 703, 0, 1154, 0, 1087, 0, 643, 0, 0,
	0, 0, 0, 0, 1087, 0, 1154, 233, 0, 2922,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2962, 2964, 0, 2559, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 233, 1154, 0, 1070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1739, 0, 967, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1154, 0, 0, 1154, 100, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3026,
	0, 0, 0, 3030, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 235, 0, 0, 0, 0,
	0, 1087, 0, 1087, 0, 1087, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1087, 1087, 0, 0, 0, 0, 0, 1253, 1253,
	0, 0, 1087, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1087, 1087, 1087, 0, 0,
	0, 0, 0, 0, 0, 3085, 0, 0, 0, 0,
	0, 0, 0, 0, 100, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 1154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 100, 0, 0, 0, 0,
	1083, 1083, 3109, 0, 1253, 0, 0, 0, 235, 1151,
	0, 1154, 0, 1151, 0, 0, 0, 1271, 0, 0,
	0, 1154, 1154, 100, 0, 0, 100, 0, 100, 0,
	0, 0, 0, 0, 0, 0, 0, 3121, 1154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1271,
	0, 0, 0, 0, 0, 0, 1792, 1792, 1087, 0,
	0, 0, 0, 0, 0, 0, 0, 100, 0, 0,
	100, 0, 0, 1271, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 100, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1271, 235, 0, 0, 0, 0,
	1271, 0, 0, 0, 1271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 1271, 0,
	0, 0, 0, 0, 0, 1087, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 100, 0, 0, 0, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 233, 0, 1271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1083, 0, 1087, 0, 0,
	0, 0, 0, 0, 1087, 0, 0, 0, 0, 0,
	0, 0, 0, 1087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1087, 0, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2198, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1087, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1087, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2559, 0,
	0, 0, 0, 0, 0, 0, 0, 3343, 0, 0,
	0, 0, 0, 0, 1792, 0, 0, 0, 0, 0,
	0, 0, 3355, 0, 0, 1083, 0, 0, 0, 0,
	0, 0, 0, 1083, 0, 0, 0, 0, 0, 0,
	1087, 0, 0, 0, 0, 0, 1738, 0, 0, 0,
	0, 0, 0, 0, 1087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3397, 1070, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 1070, 0,
	0, 0, 0, 0, 233, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 1151, 0, 0, 0, 233,
	1152, 0, 0, 0, 1152, 0, 648, 0, 1272, 0,
	0, 648, 0, 0, 0, 0, 0, 0, 0, 1087,
	1087, 0, 1087, 1271, 0, 233, 0, 0, 0, 0,
	0, 0, 233, 0, 1087, 0, 0, 0, 0, 0,
	1272, 0, 0, 0, 1151, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1574, 1575, 0, 1607, 1608, 1609,
	1617, 1618, 1619, 0, 0, 0, 100, 100, 0, 0,
	100, 0, 0, 0, 0, 1610, 1605, 0, 0, 0,
	0, 0, 0, 1577, 0, 1272, 0, 0, 0, 0,
	1623, 1272, 0, 0, 0, 1272, 0, 0, 0, 0,
	100, 100, 0, 0, 100, 0, 0, 0, 0, 1272,
	0, 0, 0, 1576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1596, 0, 0, 0, 0, 0, 0,
	0, 1593, 0, 0, 0, 0, 0, 0, 0, 3517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 2559, 0, 0, 0, 0, 1272, 0, 0,
	1271, 0, 0, 0, 0, 0, 0, 0, 0, 1151,
	0, 0, 0, 0, 0, 0, 0, 0, 1070, 0,
	0, 910, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2559, 0, 1599, 1600, 1601, 1602, 0,
	3581, 0, 0, 0, 0, 1582, 0, 0, 0, 0,
	100, 100, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1614, 0, 0, 1624, 0, 0,
	0, 0, 0, 1604, 1606, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1620, 0,
	1621, 0, 0, 0, 0, 0, 0, 1591, 1592, 233,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1612, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1597, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1271, 0, 1271, 0,
	1271, 0, 0, 0, 0, 0, 0, 0, 0, 1622,
	0, 0, 0, 0, 0, 0, 1271, 1271, 0, 0,
	0, 1087, 1087, 0, 0, 0, 1611, 1271, 3659, 0,
	0, 0, 0, 0, 0, 0, 1087, 0, 0, 0,
	1271, 1271, 1271, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1087, 0, 0, 0, 0, 0,
	648, 0, 0, 0, 0, 0, 1087, 0, 0, 1087,
	0, 0, 0, 233, 0, 0, 0, 1603, 0, 0,
	0, 0, 0, 1792, 0, 0, 0, 1087, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1615, 0, 0, 1792, 1152, 0, 0, 0,
	0, 100, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 3765, 1253, 1070,
	1070, 0, 0, 1151, 1272, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1152, 0, 0, 0, 0,
	233, 0, 0, 0, 1087, 0, 0, 0, 0, 0,
	0, 0, 0, 1087, 0, 0, 0, 0, 1087, 0,
	0, 0, 0, 0, 0, 0, 0, 1087, 0, 0,
	1613, 0, 0, 1087, 1588, 1589, 1595, 1616, 1594, 1590,
	0, 1587, 1585, 1586, 1578, 1579, 1580, 1581, 1583, 1584,
	0, 1087, 0, 0, 0, 0, 0, 0, 3139, 0,
	1151, 0, 1087, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1087, 0, 0, 0,
	0, 3833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1087, 1087, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1151,
	0, 1272, 0, 0, 0, 0, 0, 0, 0, 0,
	1152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3876, 0, 0, 1151, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1087,
	0, 3900, 1087, 0, 1070, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3912, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	100, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1271, 0, 0, 0, 0, 0, 1792, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1087, 0, 0, 0, 0, 0, 0,
	1151, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1792, 1792, 0, 0, 0, 0, 0, 1272, 0, 1272,
	0, 1272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1272, 1272, 1792,
	1792, 0, 0, 0, 0, 1151, 0, 0, 1272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1271,
	0, 1272, 1272, 1272, 0, 0, 0, 0, 0, 0,
	1792, 0, 0, 0, 0, 0, 0, 0, 100, 0,
	0, 0, 0, 0, 1070, 0, 0, 0, 0, 0,
	0, 0, 1070, 0, 0, 0, 0, 1087, 1087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1271, 1271, 0, 1271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 100, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 100, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 100, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1152, 1792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1087, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1087, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1087, 1087, 1087, 0, 0, 0, 0, 0, 0, 0,
	1152, 0, 0, 0, 0, 0, 1087, 0, 0, 0,
	0, 0, 1087, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1152, 0, 0, 0,
	0, 0, 0, 0, 1087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1792, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1574, 1575, 0,
	1607, 1608, 1609, 1617, 1618, 1619, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1610, 1605,
	0, 0, 0, 0, 0, 0, 1577, 0, 0, 0,
	0, 1272, 0, 1623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1576, 0, 0, 2198,
	0, 1152, 0, 0, 0, 0, 1596, 0, 0, 0,
	0, 0, 0, 0, 1593, 0, 0, 0, 0, 0,
	0, 0, 1087, 0, 0, 0, 0, 1151, 0, 0,
	1087, 0, 0, 0, 1087, 0, 1087, 0, 0, 0,
	0, 0, 0, 1087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1087, 0, 0, 1152, 0, 0, 1151,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1272, 0, 0, 0, 1151, 0, 0, 0, 1599, 1600,
	1601, 1602, 0, 0, 0, 0, 0, 0, 1582, 0,
	0, 0, 1151, 0, 0, 0, 0, 0, 0, 1087,
	0, 0, 0, 0, 0, 0, 1087, 0, 100, 0,
	0, 0, 0, 0, 0, 0, 0, 1614, 0, 0,
	1624, 0, 1087, 1087, 0, 0, 1604, 1606, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1620, 0, 1621, 0, 0, 0, 0, 1087, 0,
	1591, 1592, 0, 1087, 0, 1272, 1272, 0, 1272, 0,
	0, 0, 0, 0, 0, 0, 1612, 0, 0, 0,
	1272, 0, 0, 0, 0, 0, 0, 1597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1151,
	0, 0, 0, 0, 1087, 0, 0, 0, 1271, 0,
	0, 0, 1622, 1271, 0, 0, 0, 0, 0, 0,
	0, 0, 1271, 0, 0, 0, 0, 0, 1151, 1611,
	0, 0, 0, 0, 1087, 648, 0, 0, 0, 0,
	0, 0, 100, 0, 0, 100, 1271, 0, 0, 0,
	0, 0, 0, 0, 0, 1792, 0, 1271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1087, 0, 0, 0, 0,
	1603, 0, 0, 0, 0, 0, 0, 0, 1087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1271, 1271, 1792, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1615, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1087,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1151, 0, 0, 1151, 0, 0,
	0, 0, 0, 0, 0, 1574, 1575, 0, 1607, 1608,
	1609, 1617, 1618, 1619, 1087, 0, 0, 1087, 0, 0,
	0, 0, 0, 0, 0, 0, 1610, 1605, 0, 0,
	0, 0, 0, 0, 1577, 0, 0, 0, 0, 0,
	0, 1623, 0, 1613, 0, 0, 0, 1588, 1589, 1595,
	1616, 1594, 1590, 0, 1587, 1585, 1586, 1578, 1579, 1580,
	1581, 1583, 1584, 0, 1576, 0, 1792, 0, 1151, 0,
	0, 2775, 0, 0, 1596, 0, 0, 0, 0, 0,
	0, 0, 1593, 0, 0, 1151, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1152, 0,
	0, 0, 0, 0, 1087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1599, 1600, 1601, 1602,
	0, 0, 0, 0, 0, 0, 1582, 0, 0, 0,
	1152, 0, 0, 1087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1087, 1087, 1152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1614, 0, 0, 1624, 0,
	1087, 0, 0, 1152, 1604, 1606, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1620,
	0, 1621, 0, 0, 0, 1151, 0, 0, 1591, 1592,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1612, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1597, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1622, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1611, 0, 0,
	1152, 0, 0, 0, 0, 0, 0, 0, 0, 1272,
	0, 0, 0, 0, 1272, 0, 0, 0, 0, 0,
	0, 0, 0, 1272, 0, 0, 0, 0, 0, 1152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1271, 0, 1272, 1603, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1615, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1272, 1272, 0, 1271, 1271, 1271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1271, 0, 0, 0, 0, 0, 1151, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1151,
	0, 0, 0, 0, 0, 1152, 0, 0, 1152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1613, 0, 0, 0, 1588, 1589, 1595, 1616, 1594,
	1590, 0, 1587, 1585, 1586, 1578, 1579, 1580, 1581, 1583,
	1584, 0, 0, 0, 0, 0, 0, 0, 0, 2774,
	0, 1574, 1575, 0, 1607, 1608, 1609, 1617, 1618, 1619,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1610, 1605, 0, 0, 0, 0, 0, 1152,
	1577, 0, 0, 0, 0, 0, 0, 1623, 0, 0,
	0, 0, 0, 0, 0, 0, 1152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1576, 0, 0, 0, 0, 0, 0, 0, 0, 1151,
	1596, 1151, 0, 0, 0, 0, 0, 0, 1593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1151, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1151, 0, 0, 0, 0, 0,
	0, 1151, 1599, 1600, 1601, 1602, 0, 0, 0, 0,
	0, 0, 1582, 0, 0, 0, 0, 1271, 1271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1152, 0, 0, 0,
	0, 1614, 0, 1151, 1624, 0, 0, 0, 1271, 0,
	1604, 1606, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1620, 0, 1621, 0, 0,
	0, 0, 0, 0, 1591, 1592, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1151,
	1612, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1597, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1151,
	0, 0, 0, 0, 0, 0, 1622, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1611, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1272, 0, 0, 0,
	1151, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1151, 1574, 1575, 0, 1607, 1608, 1609,
	1617, 1618, 1619, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1272, 1603, 1610, 1605, 0, 0, 0,
	0, 0, 0, 1577, 0, 0, 0, 0, 0, 0,
	1623, 0, 0, 0, 1598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1151, 0, 1272, 1272, 1272, 0,
	0, 0, 0, 1576, 0, 0, 0, 0, 0, 1615,
	0, 0, 1272, 1596, 0, 0, 0, 0, 1152, 0,
	0, 1593, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1151,
	1152, 0, 1271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1599, 1600, 1601, 1602, 0,
	0, 0, 0, 0, 0, 1582, 0, 1613, 0, 0,
	0, 1588, 1589, 1595, 1616, 1594, 1590, 0, 1587, 1585,
	1586, 1578, 1579, 1580, 1581, 1583, 1584, 0, 0, 0,
	0, 0, 0, 0, 1614, 2771, 0, 1624, 0, 0,
	0, 0, 0, 1604, 1606, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1620, 0,
	1621, 804, 0, 844, 0, 0, 0, 1591, 1592, 1271,
	1152, 0, 1152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1612, 0, 0, 811, 0, 0, 1152,
	0, 0, 0, 0, 1597, 0, 0, 0, 1271, 0,
	0, 0, 823, 809, 0, 0, 0, 0, 1271, 1271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1622,
	0, 0, 0, 0, 0, 1271, 0, 810, 0, 0,
	0, 0, 813, 0, 0, 1152, 1611, 852, 0, 0,
	0, 0, 1152, 0, 0, 820, 821, 0, 0, 0,
	0, 837, 0, 0, 0, 0, 0, 0, 1272, 1272,
	0, 0, 0, 0, 0, 845, 815, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1152, 0, 0, 1603, 0, 1272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 843,
	0, 0, 0, 0, 0, 0, 0, 1598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1152, 0, 1615, 0, 0, 816, 0, 0, 0, 0,
	0, 0, 0, 808, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1152, 817, 818, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 825, 824,
	0, 0, 0, 0, 0, 0, 819, 0, 0, 834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1152, 0, 849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1152, 0, 0, 0, 0, 0,
	1613, 0, 0, 846, 1588, 1589, 1595, 1616, 1594, 1590,
	0, 1587, 1585, 1586, 1578, 1579, 1580, 1581, 1583, 1584,
	0, 0, 0, 0, 0, 0, 0, 0, 2770, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1152, 0, 814, 0, 0,
	851, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 812, 0, 0, 0, 841,
	842, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1152, 0, 0, 1272, 0, 0, 0, 0, 839, 0,
	0, 0, 0, 0, 0, 850, 835, 0, 828, 826,
	0, 831, 0, 0, 0, 0, 0, 832, 0, 0,
	806, 0, 847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 833,
	0, 0, 0, 0, 830, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 848, 0, 0, 0, 0, 0,
	0, 0, 836, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 838, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1272, 0, 0, 0, 0, 840, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1149, 0, 1272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1272,
	1272, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	1155, 249, 250, 1156, 1157, 1158, 1272, 1159, 514, 1160,
	1161, 1162, 1163, 251, 252, 254, 253, 255, 256, 257,
	515, 516, 0, 517, 258, 518, 1164, 259, 260, 261,
	262, 263, 1165, 1166, 0, 264, 519, 520, 521, 1167,
	265, 266, 522, 1168, 1235, 1169, 267, 268, 269, 270,
	271, 272, 273, 0, 1170, 275, 276, 277, 274, 1171,
	278, 0, 279, 280, 281, 1172, 282, 1028, 283, 284,
	1173, 1174, 1176, 1175, 1177, 1178, 1179, 285, 286, 287,
	288, 0, 289, 523, 524, 1180, 293, 290, 291, 1181,
	294, 292, 1182, 295, 296, 1183, 1184, 297, 298, 299,
	1185, 300, 301, 1186, 302, 303, 1187, 304, 305, 525,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	526, 527, 1188, 240, 1189, 0, 0, 0, 0, 317,
	318, 319, 528, 0, 0, 0, 320, 1190, 321, 1191,
	1192, 1029, 322, 323, 529, 530, 324, 325, 1193, 326,
	531, 1194, 532, 327, 1195, 328, 329, 330, 331, 332,
	533, 534, 535, 386, 1031, 333, 334, 1196, 335, 336,
	337, 338, 0, 0, 0, 241, 339, 340, 342, 1197,
	1030, 341, 536, 537, 1198, 538, 1199, 343, 1032, 539,
	1033, 344, 345, 346, 1034, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 1200, 354, 353, 1201, 355, 540,
	1035, 356, 357, 1036, 1202, 358, 359, 360, 1203, 1204,
	361, 362, 363, 364, 0, 365, 366, 368, 370, 367,
	369, 374, 371, 372, 373, 376, 0, 375, 1037, 377,
	378, 379, 382, 383, 381, 1038, 380, 1205, 242, 1039,
	384, 1206, 541, 385, 542, 387, 388, 1207, 0, 389,
	0, 1208, 1209, 391, 392, 393, 1210, 1211, 394, 395,
	543, 1040, 396, 1041, 544, 397, 398, 390, 399, 400,
	401, 402, 403, 404, 405, 406, 1212, 407, 408, 545,
	546, 547, 409, 548, 410, 411, 1213, 412, 0, 413,
	414, 415, 416, 417, 418, 419, 549, 421, 420, 422,
	1214, 0, 0, 0, 0, 0, 423, 0, 425, 426,
	427, 424, 428, 429, 430, 431, 1215, 432, 433, 434,
	1042, 435, 436, 437, 438, 550, 439, 0, 440, 441,
	447, 448, 442, 443, 449, 450, 451, 452, 453, 1216,
	455, 456, 454, 457, 458, 459, 1217, 460, 444, 445,
	461, 462, 1043, 463, 464, 551, 0, 465, 1218, 466,
	467, 468, 469, 446, 470, 475, 552, 471, 472, 473,
	474, 553, 1219, 477, 478, 0, 476, 1220, 479, 480,
	481, 482, 483, 484, 311, 485, 1221, 486, 554, 555,
	556, 557, 1222, 493, 1223, 487, 488, 558, 489, 559,
	1224, 490, 491, 492, 0, 494, 495, 1225, 1226, 496,
	497, 498, 500, 501, 499, 502, 1227, 503, 1228, 0,
	504, 505, 506, 560, 561, 562, 1229, 508, 507, 563,
	1230, 1231, 1232, 1233, 509, 510, 564, 511, 512, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1149, 0, 0, 0, 0, 0, 0,
	0, 2361, 0, 0, 0, 0, 0, 0, 0, 2362,
	243, 244, 245, 246, 247, 248, 1155, 249, 250, 1156,
	1157, 1158, 0, 1159, 514, 1160, 1161, 1162, 1163, 251,
	252, 254, 253, 255, 256, 257, 515, 516, 0, 517,
	258, 518, 1164, 259, 260, 261, 262, 263, 1165, 1166,
	0, 264, 519, 520, 521, 1167, 265, 266, 522, 1168,
	1235, 1169, 267, 268, 269, 270, 271, 272, 273, 0,
	1170, 275, 276, 277, 274, 1171, 278, 0, 279, 280,
	281, 1172, 282, 1028, 283, 284, 1173, 1174, 1176, 1175,
	1177, 1178, 1179, 285, 286, 287, 288, 0, 289, 523,
	524, 1180, 293, 290, 291, 1181, 294, 292, 1182, 295,
	296, 1183, 1184, 297, 298, 299, 1185, 300, 301, 1186,
	302, 303, 1187, 304, 305, 525, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 526, 527, 1188, 240,
	1189, 0, 0, 0, 0, 317, 318, 319, 528, 0,
	0, 0, 320, 1190, 321, 1191, 1192, 1029, 322, 323,
	529, 530, 324, 325, 1193, 326, 531, 1194, 532, 327,
	1195, 328, 329, 330, 331, 332, 533, 534, 535, 386,
	1031, 333, 334, 1196, 335, 336, 337, 338, 0, 0,
	0, 241, 339, 340, 342, 1197, 1030, 341, 536, 537,
	1198, 538, 1199, 343, 1032, 539, 1033, 344, 345, 346,
	1034, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	1200, 354, 353, 1201, 355, 540, 1035, 356, 357, 1036,
	1202, 358, 359, 360, 1203, 1204, 361, 362, 363, 364,
	0, 365, 366, 368, 370, 367, 369, 374, 371, 372,
	373, 376, 0, 375, 1037, 377, 378, 379, 382, 383,
	381, 1038, 380, 1205, 242, 1039, 384, 1206, 541, 385,
	542, 387, 388, 1207, 0, 389, 0, 1208, 1209, 391,
	392, 393, 1210, 1211, 394, 395, 543, 1040, 396, 1041,
	544, 397, 398, 390, 399, 400, 401, 402, 403, 404,
	405, 406, 1212, 407, 408, 545, 546, 547, 409, 548,
	410, 411, 1213, 412, 0, 413, 414, 415, 416, 417,
	418, 419, 549, 421, 420, 422, 1214, 0, 0, 0,
	0, 0, 423, 0, 425, 426, 427, 424, 428, 429,
	430, 431, 1215, 432, 433, 434, 1042, 435, 436, 437,
	438, 550, 439, 0, 440, 441, 447, 448, 442, 443,
	449, 450, 451, 452, 453, 1216, 455, 456, 454, 457,
	458, 459, 1217, 460, 444, 445, 461, 462, 1043, 463,
	464, 551, 0, 465, 1218, 466, 467, 468, 469, 446,
	470, 475, 552, 471, 472, 473, 474, 553, 1219, 477,
	478, 0, 476, 1220, 479, 480, 481, 482, 483, 484,
	311, 485, 1221, 486, 554, 555, 556, 557, 1222, 493,
	1223, 487, 488, 558, 489, 559, 1224, 490, 491, 492,
	0, 494, 495, 1225, 1226, 496, 497, 498, 500, 501,
	499, 502, 1227, 503, 1228, 0, 504, 505, 506, 560,
	561, 562, 1229, 508, 507, 563, 1230, 1231, 1232, 1233,
	509, 510, 564, 511, 512, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1149, 0, 0,
	0, 0, 3147, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3149, 243, 244, 245, 246, 247, 248,
	1155, 249, 250, 1156, 1157, 1158, 0, 1159, 514, 1160,
	1161, 1162, 1163, 251, 252, 254, 253, 255, 256, 257,
	515, 516, 0, 517, 258, 518, 1164, 259, 260, 261,
	262, 263, 1165, 1166, 0, 264, 519, 520, 521, 1167,
	265, 266, 522, 1168, 1235, 1169, 267, 268, 269, 270,
	271, 272, 273, 0, 1170, 275, 276, 277, 274, 1171,
	278, 0, 279, 280, 281, 1172, 282, 1028, 283, 284,
	1173, 1174, 1176, 1175, 1177, 1178, 1179, 285, 286, 287,
	288, 0, 289, 523, 524, 1180, 293, 290, 291, 1181,
	294, 292, 1182, 295, 296, 1183, 1184, 297, 298, 299,
	1185, 300, 301, 1186, 302, 303, 1187, 304, 305, 525,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	526, 527, 1188, 240, 1189, 0, 0, 0, 0, 317,
	318, 319, 528, 0, 0, 0, 320, 1190, 321, 1191,
	1192, 1029, 322, 323, 529, 530, 324, 325, 1193, 326,
	531, 1194, 532, 327, 1195, 328, 329, 330, 331, 332,
	533, 534, 535, 386, 1031, 333, 334, 1196, 335, 336,
	337, 338, 0, 0, 0, 241, 339, 340, 342, 1197,
	1030, 341, 536, 537, 1198, 538, 1199, 343, 1032, 539,
	1033, 344, 345, 346, 1034, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 1200, 354, 353, 1201, 355, 540,
	1035, 356, 357, 1036, 1202, 358, 359, 360, 1203, 1204,
	361, 362, 363, 364, 0, 365, 366, 368, 370, 367,
	369, 374, 371, 372, 373, 376, 0, 375, 1037, 377,
	378, 379, 382, 383, 381, 1038, 380, 1205, 242, 1039,
	384, 1206, 541, 385, 542, 387, 388, 1207, 0, 389,
	0, 1208, 1209, 391, 392, 393, 1210, 1211, 394, 395,
	543, 1040, 396, 1041, 544, 397, 398, 390, 399, 400,
	401, 402, 403, 404, 405, 406, 1212, 407, 408, 545,
	546, 547, 409, 548, 410, 411, 1213, 412, 0, 413,
	414, 415, 416, 417, 418, 419, 549, 421, 420, 422,
	1214, 0, 0, 0, 0, 0, 423, 0, 425, 426,
	427, 424, 428, 429, 430, 431, 1215, 432, 433, 434,
	1042, 435, 436, 437, 438, 550, 439, 0, 440, 441,
	447, 448, 442, 443, 449, 450, 451, 452, 453, 1216,
	455, 456, 454, 457, 458, 459, 1217, 460, 444, 445,
	461, 462, 1043, 463, 464, 551, 0, 465, 1218, 466,
	467, 468, 469, 446, 470, 475, 552, 471, 472, 473,
	474, 553, 1219, 477, 478, 0, 476, 1220, 479, 480,
	481, 482, 483, 484, 311, 485, 1221, 486, 554, 555,
	556, 557, 1222, 493, 1223, 487, 488, 558, 489, 559,
	1224, 490, 491, 492, 0, 494, 495, 1225, 1226, 496,
	497, 498, 500, 501, 499, 502, 1227, 503, 1228, 0,
	504, 505, 506, 560, 561, 562, 1229, 508, 507, 563,
	1230, 1231, 1232, 1233, 509, 510, 564, 511, 512, 513,
	0, 0, 0, 0, 0, 1149, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3468, 243, 244, 245, 246, 247, 248, 1155, 249,
	250, 1156, 1157, 1158, 0, 1159, 514, 1160, 1161, 1162,
	1163, 251, 252, 254, 253, 255, 256, 257, 515, 516,
	0, 517, 258, 518, 1164, 259, 260, 261, 262, 263,
	1165, 1166, 0, 264, 519, 520, 521, 1167, 265, 266,
	522, 1168, 1235, 1169, 267, 268, 269, 270, 271, 272,
	273, 0, 1170, 275, 276, 277, 274, 1171, 278, 0,
	279, 280, 281, 1172, 282, 1028, 283, 284, 1173, 1174,
	1176, 1175, 1177, 1178, 1179, 285, 286, 287, 288, 0,
	289, 523, 524, 1180, 293, 290, 291, 1181, 294, 292,
	1182, 295, 296, 1183, 1184, 297, 298, 299, 1185, 300,
	301, 1186, 302, 303, 1187, 304, 305, 525, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 526, 527,
	1188, 240, 1189, 0, 0, 0, 0, 317, 318, 319,
	528, 0, 0, 0, 320, 1190, 321, 1191, 1192, 1029,
	322, 323, 529, 530, 324, 325, 1193, 326, 531, 1194,
	532, 327, 1195, 328, 329, 330, 331, 332, 533, 534,
	535, 386, 1031, 333, 334, 1196, 335, 336, 337, 338,
	0, 0, 0, 241, 339, 340, 342, 1197, 1030, 341,
	536, 537, 1198, 538, 1199, 343, 1032, 539, 1033, 344,
	345, 346, 1034, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 1200, 354, 353, 1201, 355, 540, 1035, 356,
	357, 1036, 1202, 358, 359, 360, 1203, 1204, 361, 362,
	363, 364, 0, 365, 366, 368, 370, 367, 369, 374,
	371, 372, 373, 376, 0, 375, 1037, 377, 378, 379,
	382, 383, 381, 1038, 380, 1205, 242, 1039, 384, 1206,
	541, 385, 542, 387, 388, 1207, 0, 389, 0, 1208,
	1209, 391, 392, 393, 1210, 1211, 394, 395, 543, 1040,
	396, 1041, 544, 397, 398, 390, 399, 400, 401, 402,
	403, 404, 405, 406, 1212, 407, 408, 545, 546, 547,
	409, 548, 410, 411, 1213, 412, 0, 413, 414, 415,
	416, 417, 418, 419, 549, 421, 420, 422, 1214, 0,
	0, 0, 0, 0, 423, 0, 425, 426, 427, 424,
	428, 429, 430, 431, 1215, 432, 433, 434, 1042, 435,
	436, 437, 438, 550, 439, 0, 440, 441, 447, 448,
	442, 443, 449, 450, 451, 452, 453, 1216, 455, 456,
	454, 457, 458, 459, 1217, 460, 444, 445, 461, 462,
	1043, 463, 464, 551, 0, 465, 1218, 466, 467, 468,
	469, 446, 470, 475, 552, 471, 472, 473, 474, 553,
	1219, 477, 478, 0, 476, 1220, 479, 480, 481, 482,
	483, 484, 311, 485, 1221, 486, 554, 555, 556, 557,
	1222, 493, 1223, 487, 488, 558, 489, 559, 1224, 490,
	491, 492, 0, 494, 495, 1225, 1226, 496, 497, 498,
	500, 501, 499, 502, 1227, 503, 1228, 0, 504, 505,
	506, 560, 561, 562, 1229, 508, 507, 563, 1230, 1231,
	1232, 1233, 509, 510, 564, 511, 512, 513, 1149, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3625, 243, 244, 245, 246, 247,
	248, 1155, 249, 250, 1156, 1157, 1158, 0, 1159, 514,
	1160, 1161, 1162, 1163, 251, 252, 254, 253, 255, 256,
	257, 515, 516, 0, 517, 258, 518, 1164, 259, 260,
	261, 262, 263, 1165, 1166, 0, 264, 519, 520, 521,
	1167, 265, 266, 522, 1168, 1235, 1169, 267, 268, 269,
	270, 271, 272, 273, 0, 1170, 275, 276, 277, 274,
	1171, 278, 0, 279, 280, 281, 1172, 282, 1028, 283,
	284, 1173, 1174, 1176, 1175, 1177, 1178, 1179, 285, 286,
	287, 288, 0, 289, 523, 524, 1180, 293, 290, 291,
	1181, 294, 292, 1182, 295, 296, 1183, 1184, 297, 298,
	299, 1185, 300, 301, 1186, 302, 303, 1187, 304, 305,
	525, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 526, 527, 1188, 240, 1189, 0, 0, 0, 0,
	317, 318, 319, 528, 0, 0, 0, 320, 1190, 321,
	1191, 1192, 1029, 322, 323, 529, 530, 324, 325, 1193,
	326, 531, 1194, 532, 327, 1195, 328, 329, 330, 331,
	332, 533, 534, 535, 386, 1031, 333, 334, 1196, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	1197, 1030, 341, 536, 537, 1198, 538, 1199, 343, 1032,
	539, 1033, 344, 345, 346, 1034, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 1200, 354, 353, 1201, 355,
	540, 1035, 356, 357, 1036, 1202, 358, 359, 360, 1203,
	1204, 361, 362, 363, 364, 0, 365, 366, 368, 370,
	367, 369, 374, 371, 372, 373, 376, 0, 375, 1037,
	377, 378, 379, 382, 383, 381, 1038, 380, 1205, 242,
	1039, 384, 1206, 541, 385, 542, 387, 388, 1207, 0,
	389, 0, 1208, 1209, 391, 392, 393, 1210, 1211, 394,
	395, 543, 1040, 396, 1041, 544, 397, 398, 390, 399,
	400, 401, 402, 403, 404, 405, 406, 1212, 407, 408,
	545, 546, 547, 409, 548, 410, 411, 1213, 412, 0,
	413, 414, 415, 416, 417, 418, 419, 549, 421, 420,
	422, 1214, 0, 0, 0, 0, 0, 423, 0, 425,
	426, 427, 424, 428, 429, 430, 431, 1215, 432, 433,
	434, 1042, 435, 436, 437, 438, 550, 439, 0, 440,
	441, 447, 448, 442, 443, 449, 450, 451, 452, 453,
	1216, 455, 456, 454, 457, 458, 459, 1217, 460, 444,
	445, 461, 462, 1043, 463, 464, 551, 0, 465, 1218,
	466, 467, 468, 469, 446, 470, 475, 552, 471, 472,
	473, 474, 553, 1219, 477, 478, 0, 476, 1220, 479,
	480, 481, 482, 483, 484, 311, 485, 1221, 486, 554,
	555, 556, 557, 1222, 493, 1223, 487, 488, 558, 489,
	559, 1224, 490, 491, 492, 0, 494, 495, 1225, 1226,
	496, 497, 498, 500, 501, 499, 502, 1227, 503, 1228,
	0, 504, 505, 506, 560, 561, 562, 1229, 508, 507,
	563, 1230, 1231, 1232, 1233, 509, 510, 564, 511, 512,
	513, 1149, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3525, 243, 244,
	245, 246, 247, 248, 1155, 249, 250, 1156, 1157, 1158,
	0, 1159, 514, 1160, 1161, 1162, 1163, 251, 252, 254,
	253, 255, 256, 257, 515, 516, 0, 517, 258, 518,
	1164, 259, 260, 261, 262, 263, 1165, 1166, 0, 264,
	519, 520, 521, 1167, 265, 266, 522, 1168, 1235, 1169,
	267, 268, 269, 270, 271, 272, 273, 0, 1170, 275,
	276, 277, 274, 1171, 278, 0, 279, 280, 281, 1172,
	282, 1028, 283, 284, 1173, 1174, 1176, 1175, 1177, 1178,
	1179, 285, 286, 287, 288, 0, 289, 523, 524, 1180,
	293, 290, 291, 1181, 294, 292, 1182, 295, 296, 1183,
	1184, 297, 298, 299, 1185, 300, 301, 1186, 302, 303,
	1187, 304, 305, 525, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 526, 527, 1188, 240, 1189, 0,
	0, 0, 0, 317, 318, 319, 528, 0, 0, 0,
	320, 1190, 321, 1191, 1192, 1029, 322, 323, 529, 530,
	324, 325, 1193, 326, 531, 1194, 532, 327, 1195, 328,
	329, 330, 331, 332, 533, 534, 535, 386, 1031, 333,
	334, 1196, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 1197, 1030, 341, 536, 537, 1198, 538,
	1199, 343, 1032, 539, 1033, 344, 345, 346, 1034, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 1200, 354,
	353, 1201, 355, 540, 1035, 356, 357, 1036, 1202, 358,
	359, 360, 1203, 1204, 361, 362, 363, 364, 0, 365,
	366, 368, 370, 367, 369, 374, 371, 372, 373, 376,
	0, 375, 1037, 377, 378, 379, 382, 383, 381, 1038,
	380, 1205, 242, 1039, 384, 1206, 541, 385, 542, 387,
	388, 1207, 0, 389, 0, 1208, 1209, 391, 392, 393,
	1210, 1211, 394, 395, 543, 1040, 396, 1041, 544, 397,
	398, 390, 399, 400, 401, 402, 403, 404, 405, 406,
	1212, 407, 408, 545, 546, 547, 409, 548, 410, 411,
	1213, 412, 0, 413, 414, 415, 416, 417, 418, 419,
	549, 421, 420, 422, 1214, 0, 0, 0, 0, 0,
	423, 0, 425, 426, 427, 424, 428, 429, 430, 431,
	1215, 432, 433, 434, 1042, 435, 436, 437, 438, 550,
	439, 0, 440, 441, 447, 448, 442, 443, 449, 450,
	451, 452, 453, 1216, 455, 456, 454, 457, 458, 459,
	1217, 460, 444, 445, 461, 462, 1043, 463, 464, 551,
	0, 465, 1218, 466, 467, 468, 469, 446, 470, 475,
	552, 471, 472, 473, 474, 553, 1219, 477, 478, 0,
	476, 1220, 479, 480, 481, 482, 483, 484, 311, 485,
	1221, 486, 554, 555, 556, 557, 1222, 493, 1223, 487,
	488, 558, 489, 559, 1224, 490, 491, 492, 0, 494,
	495, 1225, 1226, 496, 497, 498, 500, 501, 499, 502,
	1227, 503, 1228, 0, 504, 505, 506, 560, 561, 562,
	1229, 508, 507, 563, 1230, 1231, 1232, 1233, 509, 510,
	564, 511, 512, 513, 1149, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3398, 243, 244, 245, 246, 247, 248, 1155, 249, 250,
	1156, 1157, 1158, 0, 1159, 514, 1160, 1161, 1162, 1163,
	251, 252, 254, 253, 255, 256, 257, 515, 516, 0,
	517, 258, 518, 1164, 259, 260, 261, 262, 263, 1165,
	1166, 0, 264, 519, 520, 521, 1167, 265, 266, 522,
	1168, 1235, 1169, 267, 268, 269, 270, 271, 272, 273,
	0, 1170, 275, 276, 277, 274, 1171, 278, 0, 279,
	280, 281, 1172, 282, 1028, 283, 284, 1173, 1174, 1176,
	1175, 1177, 1178, 1179, 285, 286, 287, 288, 0, 289,
	523, 524, 1180, 293, 290, 291, 1181, 294, 292, 1182,
	295, 296, 1183, 1184, 297, 298, 299, 1185, 300, 301,
	1186, 302, 303, 1187, 304, 305, 525, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 526, 527, 1188,
	240, 1189, 0, 0, 0, 0, 317, 318, 319, 528,
	0, 0, 0, 320, 1190, 321, 1191, 1192, 1029, 322,
	323, 529, 530, 324, 325, 1193, 326, 531, 1194, 532,
	327, 1195, 328, 329, 330, 331, 332, 533, 534, 535,
	386, 1031, 333, 334, 1196, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 1197, 1030, 341, 536,
	537, 1198, 538, 1199, 343, 1032, 539, 1033, 344, 345,
	346, 1034, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 1200, 354, 353, 1201, 355, 540, 1035, 356, 357,
	1036, 1202, 358, 359, 360, 1203, 1204, 361, 362, 363,
	364, 0, 365, 366, 368, 370, 367, 369, 374, 371,
	372, 373, 376, 0, 375, 1037, 377, 378, 379, 382,
	383, 381, 1038, 380, 1205, 242, 1039, 384, 1206, 541,
	385, 542, 387, 388, 1207, 0, 389, 0, 1208, 1209,
	391, 392, 393, 1210, 1211, 394, 395, 543, 1040, 396,
	1041, 544, 397, 398, 390, 399, 400, 401, 402, 403,
	404, 405, 406, 1212, 407, 408, 545, 546, 547, 409,
	548, 410, 411, 1213, 412, 0, 413, 414, 415, 416,
	417, 418, 419, 549, 421, 420, 422, 1214, 0, 0,
	0, 0, 0, 423, 0, 425, 426, 427, 424, 428,
	429, 430, 431, 1215, 432, 433, 434, 1042, 435, 436,
	437, 438, 550, 439, 0, 440, 441, 447, 448, 442,
	443, 449, 450, 451, 452, 453, 1216, 455, 456, 454,
	457, 458, 459, 1217, 460, 444, 445, 461, 462, 1043,
	463, 464, 551, 0, 465, 1218, 466, 467, 468, 469,
	446, 470, 475, 552, 471, 472, 473, 474, 553, 1219,
	477, 478, 0, 476, 1220, 479, 480, 481, 482, 483,
	484, 311, 485, 1221, 486, 554, 555, 556, 557, 1222,
	493, 1223, 487, 488, 558, 489, 559, 1224, 490, 491,
	492, 0, 494, 495, 1225, 1226, 496, 497, 498, 500,
	501, 499, 502, 1227, 503, 1228, 0, 504, 505, 506,
	560, 561, 562, 1229, 508, 507, 563, 1230, 1231, 1232,
	1233, 509, 510, 564, 511, 512, 513, 1149, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3165, 243, 244, 245, 246, 247, 248,
	1155, 249, 250, 1156, 1157, 1158, 0, 1159, 514, 1160,
	1161, 1162, 1163, 251, 252, 254, 253, 255, 256, 257,
	515, 516, 0, 517, 258, 518, 1164, 259, 260, 261,
	262, 263, 1165, 1166, 0, 264, 519, 520, 521, 1167,
	265, 266, 522, 1168, 1235, 1169, 267, 268, 269, 270,
	271, 272, 273, 0, 1170, 275, 276, 277, 274, 1171,
	278, 0, 279, 280, 281, 1172, 282, 1028, 283, 284,
	1173, 1174, 1176, 1175, 1177, 1178, 1179, 285, 286, 287,
	288, 0, 289, 523, 524, 1180, 293, 290, 291, 1181,
	294, 292, 1182, 295, 296, 1183, 1184, 297, 298, 299,
	1185, 300, 301, 1186, 302, 303, 1187, 304, 305, 525,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	526, 527, 1188, 240, 1189, 0, 0, 0, 0, 317,
	318, 319, 528, 0, 0, 0, 320, 1190, 321, 1191,
	1192, 1029, 322, 323, 529, 530, 324, 325, 1193, 326,
	531, 1194, 532, 327, 1195, 328, 329, 330, 331, 332,
	533, 534, 535, 386, 1031, 333, 334, 1196, 335, 336,
	337, 338, 0, 0, 0, 241, 339, 340, 342, 1197,
	1030, 341, 536, 537, 1198, 538, 1199, 343, 1032, 539,
	1033, 344, 345, 346, 1034, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 1200, 354, 353, 1201, 355, 540,
	1035, 356, 357, 1036, 1202, 358, 359, 360, 1203, 1204,
	361, 362, 363, 364, 0, 365, 366, 368, 370, 367,
	369, 374, 371, 372, 373, 376, 0, 375, 1037, 377,
	378, 379, 382, 383, 381, 1038, 380, 1205, 242, 1039,
	384, 1206, 541, 385, 542, 387, 388, 1207, 0, 389,
	0, 1208, 1209, 391, 392, 393, 1210, 1211, 394, 395,
	543, 1040, 396, 1041, 544, 397, 398, 390, 399, 400,
	401, 402, 403, 404, 405, 406, 1212, 407, 408, 545,
	546, 547, 409, 548, 410, 411, 1213, 412, 0, 413,
	414, 415, 416, 417, 418, 419, 549, 421, 420, 422,
	1214, 0, 0, 0, 0, 0, 423, 0, 425, 426,
	427, 424, 428, 429, 430, 431, 1215, 432, 433, 434,
	1042, 435, 436, 437, 438, 550, 439, 0, 440, 441,
	447, 448, 442, 443, 449, 450, 451, 452, 453, 1216,
	455, 456, 454, 457, 458, 459, 1217, 460, 444, 445,
	461, 462, 1043, 463, 464, 551, 0, 465, 1218, 466,
	467, 468, 469, 446, 470, 475, 552, 471, 472, 473,
	474, 553, 1219, 477, 478, 0, 476, 1220, 479, 480,
	481, 482, 483, 484, 311, 485, 1221, 486, 554, 555,
	556, 557, 1222, 493, 1223, 487, 488, 558, 489, 559,
	1224, 490, 491, 492, 0, 494, 495, 1225, 1226, 496,
	497, 498, 500, 501, 499, 502, 1227, 503, 1228, 0,
	504, 505, 506, 560, 561, 562, 1229, 508, 507, 563,
	1230, 1231, 1232, 1233, 509, 510, 564, 511, 512, 513,
	1149, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3012, 243, 244, 245,
	246, 247, 248, 1155, 249, 250, 1156, 1157, 1158, 0,
	1159, 514, 1160, 1161, 1162, 1163, 251, 252, 254, 253,
	255, 256, 257, 515, 516, 0, 517, 258, 518, 1164,
	259, 260, 261, 262, 263, 1165, 1166, 0, 264, 519,
	520, 521, 1167, 265, 266, 522, 1168, 1235, 1169, 267,
	268, 269, 270, 271, 272, 273, 0, 1170, 275, 276,
	277, 274, 1171, 278, 0, 279, 280, 281, 1172, 282,
	1028, 283, 284, 1173, 1174, 1176, 1175, 1177, 1178, 1179,
	285, 286, 287, 288, 0, 289, 523, 524, 1180, 293,
	290, 291, 1181, 294, 292, 1182, 295, 296, 1183, 1184,
	297, 298, 299, 1185, 300, 301, 1186, 302, 303, 1187,
	304, 305, 525, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 526, 527, 1188, 240, 1189, 0, 0,
	0, 0, 317, 318, 319, 528, 0, 0, 0, 320,
	1190, 321, 1191, 1192, 1029, 322, 323, 529, 530, 324,
	325, 1193, 326, 531, 1194, 532, 327, 1195, 328, 329,
	330, 331, 332, 533, 534, 535, 386, 1031, 333, 334,
	1196, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 1197, 1030, 341, 536, 537, 1198, 538, 1199,
	343, 1032, 539, 1033, 344, 345, 346, 1034, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 1200, 354, 353,
	1201, 355, 540, 1035, 356, 357, 1036, 1202, 358, 359,
	360, 1203, 1204, 361, 362, 363, 364, 0, 365, 366,
	368, 370, 367, 369, 374, 371, 372, 373, 376, 0,
	375, 1037, 377, 378, 379, 382, 383, 381, 1038, 380,
	1205, 242, 1039, 384, 1206, 541, 385, 542, 387, 388,
	1207, 0, 389, 0, 1208, 1209, 391, 392, 393, 1210,
	1211, 394, 395, 543, 1040, 396, 1041, 544, 397, 398,
	390, 399, 400, 401, 402, 403, 404, 405, 406, 1212,
	407, 408, 545, 546, 547, 409, 548, 410, 411, 1213,
	412, 0, 413, 414, 415, 416, 417, 418, 419, 549,
	421, 420, 422, 1214, 0, 0, 0, 0, 0, 423,
	0, 425, 426, 427, 424, 428, 429, 430, 431, 1215,
	432, 433, 434, 1042, 435, 436, 437, 438, 550, 439,
	0, 440, 441, 447, 448, 442, 443, 449, 450, 451,
	452, 453, 1216, 455, 456, 454, 457, 458, 459, 1217,
	460, 444, 445, 461, 462, 1043, 463, 464, 551, 0,
	465, 1218, 466, 467, 468, 469, 446, 470, 475, 552,
	471, 472, 473, 474, 553, 1219, 477, 478, 0, 476,
	1220, 479, 480, 481, 482, 483, 484, 311, 485, 1221,
	486, 554, 555, 556, 557, 1222, 493, 1223, 487, 488,
	558, 489, 559, 1224, 490, 491, 492, 0, 494, 495,
	1225, 1226, 496, 497, 498, 500, 501, 499, 502, 1227,
	503, 1228, 0, 504, 505, 506, 560, 561, 562, 1229,
	508, 507, 563, 1230, 1231, 1232, 1233, 509, 510, 564,
	511, 512, 513, 1149, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2244,
	243, 244, 245, 246, 247, 248, 1155, 249, 250, 1156,
	1157, 1158, 0, 1159, 514, 1160, 1161, 1162, 1163, 251,
	252, 254, 253, 255, 256, 257, 515, 516, 0, 517,
	258, 518, 1164, 259, 260, 261, 262, 263, 1165, 1166,
	0, 264, 519, 520, 521, 1167, 265, 266, 522, 1168,
	1235, 1169, 267, 268, 269, 270, 271, 272, 273, 0,
	1170, 275, 276, 277, 274, 1171, 278, 0, 279, 280,
	281, 1172, 282, 1028, 283, 284, 1173, 1174, 1176, 1175,
	1177, 1178, 1179, 285, 286, 287, 288, 0, 289, 523,
	524, 1180, 293, 290, 291, 1181, 294, 292, 1182, 295,
	296, 1183, 1184, 297, 298, 299, 1185, 300, 301, 1186,
	302, 303, 1187, 304, 305, 525, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 526, 527, 1188, 240,
	1189, 0, 0, 0, 0, 317, 318, 319, 528, 0,
	0, 0, 320, 1190, 321, 1191, 1192, 1029, 322, 323,
	529, 530, 324, 325, 1193, 326, 531, 1194, 532, 327,
	1195, 328, 329, 330, 331, 332, 533, 534, 535, 386,
	1031, 333, 334, 1196, 335, 336, 337, 338, 0, 0,
	0, 241, 339, 340, 342, 1197, 1030, 341, 536, 537,
	1198, 538, 1199, 343, 1032, 539, 1033, 344, 345, 346,
	1034, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	1200, 354, 353, 1201, 355, 540, 1035, 356, 357, 1036,
	1202, 358, 359, 360, 1203, 1204, 361, 362, 363, 364,
	0, 365, 366, 368, 370, 367, 369, 374, 371, 372,
	373, 376, 0, 375, 1037, 377, 378, 379, 382, 383,
	381, 1038, 380, 1205, 242, 1039, 384, 1206, 541, 385,
	542, 387, 388, 1207, 0, 389, 0, 1208, 1209, 391,
	392, 393, 1210, 1211, 394, 395, 543, 1040, 396, 1041,
	544, 397, 398, 390, 399, 400, 401, 402, 403, 404,
	405, 406, 1212, 407, 408, 545, 546, 547, 409, 548,
	410, 411, 1213, 412, 0, 413, 414, 415, 416, 417,
	418, 419, 549, 421, 420, 422, 1214, 0, 0, 0,
	0, 0, 423, 0, 425, 426, 427, 424, 428, 429,
	430, 431, 1215, 432, 433, 434, 1042, 435, 436, 437,
	438, 550, 439, 0, 440, 441, 447, 448, 442, 443,
	449, 450, 451, 452, 453, 1216, 455, 456, 454, 457,
	458, 459, 1217, 460, 444, 445, 461, 462, 1043, 463,
	464, 551, 0, 465, 1218, 466, 467, 468, 469, 446,
	470, 475, 552, 471, 472, 473, 474, 553, 1219, 477,
	478, 0, 476, 1220, 479, 480, 481, 482, 483, 484,
	311, 485, 1221, 486, 554, 555, 556, 557, 1222, 493,
	1223, 487, 488, 558, 489, 559, 1224, 490, 491, 492,
	0, 494, 495, 1225, 1226, 496, 497, 498, 500, 501,
	499, 502, 1227, 503, 1228, 0, 504, 505, 506, 560,
	561, 562, 1229, 508, 507, 563, 1230, 1231, 1232, 1233,
	509, 510, 564, 511, 512, 513, 1247, 0, 1149, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1928, 0, 0, 243, 244, 245, 246, 247,
	248, 1155, 249, 250, 1156, 1157, 1158, 0, 1159, 514,
	1160, 1161, 1162, 1163, 251, 252, 254, 253, 255, 256,
	257, 515, 516, 0, 517, 258, 518, 1164, 259, 260,
	261, 262, 263, 1165, 1166, 0, 264, 519, 520, 521,
	1167, 265, 266, 522, 1168, 1235, 1169, 267, 268, 269,
	270, 271, 272, 273, 0, 1170, 275, 276, 277, 274,
	1171, 278, 0, 279, 280, 281, 1172, 282, 1028, 283,
	284, 1173, 1174, 1176, 1175, 1177, 1178, 1179, 285, 286,
	287, 288, 0, 289, 523, 524, 1180, 293, 290, 291,
	1181, 294, 292, 1182, 295, 296, 1183, 1184, 297, 298,
	299, 1185, 300, 301, 1186, 302, 303, 1187, 304, 305,
	525, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 526, 527, 1188, 240, 1189, 0, 0, 0, 0,
	317, 318, 319, 528, 0, 0, 0, 320, 1190, 321,
	1191, 1192, 1029, 322, 323, 529, 530, 324, 325, 1193,
	326, 531, 1194, 532, 327, 1195, 328, 329, 330, 331,
	332, 533, 534, 535, 386, 1031, 333, 334, 1196, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	1197, 1030, 341, 536, 537, 1198, 538, 1199, 343, 1032,
	539, 1033, 344, 345, 346, 1034, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 1200, 354, 353, 1201, 355,
	540, 1035, 356, 357, 1036, 1202, 358, 359, 360, 1203,
	1204, 361, 362, 363, 364, 0, 365, 366, 368, 370,
	367, 369, 374, 371, 372, 373, 376, 0, 375, 1037,
	377, 378, 379, 382, 383, 381, 1038, 380, 1205, 242,
	1039, 384, 1206, 541, 385, 542, 387, 388, 1207, 0,
	389, 0, 1208, 1209, 391, 392, 393, 1210, 1211, 394,
	395, 543, 1040, 396, 1041, 544, 397, 398, 390, 399,
	400, 401, 402, 403, 404, 405, 406, 1212, 407, 408,
	545, 546, 547, 409, 548, 410, 411, 1213, 412, 0,
	413, 414, 415, 416, 417, 418, 419, 549, 421, 420,
	422, 1214, 0, 0, 0, 0, 0, 423, 0, 425,
	426, 427, 424, 428, 429, 430, 431, 1215, 432, 433,
	434, 1042, 435, 436, 437, 438, 550, 439, 0, 440,
	441, 447, 448, 442, 443, 449, 450, 451, 452, 453,
	1216, 455, 456, 454, 457, 458, 459, 1217, 460, 444,
	445, 461, 462, 1043, 463, 464, 551, 0, 465, 1218,
	466, 467, 468, 469, 446, 470, 475, 552, 471, 472,
	473, 474, 553, 1219, 477, 478, 0, 476, 1220, 479,
	480, 481, 482, 483, 484, 311, 485, 1221, 486, 554,
	555, 556, 557, 1222, 493, 1223, 487, 488, 558, 489,
	559, 1224, 490, 491, 492, 0, 494, 495, 1225, 1226,
	496, 497, 498, 500, 501, 499, 502, 1227, 503, 1228,
	0, 504, 505, 506, 560, 561, 562, 1229, 508, 507,
	563, 1230, 1231, 1232, 1233, 509, 510, 564, 511, 512,
	513, 1146, 0, 1149, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 1155, 249, 250, 1156,
	1157, 1158, 0, 1159, 514, 1160, 1161, 1162, 1163, 251,
	252, 254, 253, 255, 256, 257, 515, 516, 0, 517,
	258, 518, 1164, 259, 260, 261, 262, 263, 1165, 1166,
	0, 264, 519, 520, 521, 1167, 265, 266, 522, 1168,
	1235, 1169, 267, 268, 269, 270, 271, 272, 273, 0,
	1170, 275, 276, 277, 274, 1171, 278, 0, 279, 280,
	281, 1172, 282, 1028, 283, 284, 1173, 1174, 1176, 1175,
	1177, 1178, 1179, 285, 286, 287, 288, 0, 289, 523,
	524, 1180, 293, 290, 291, 1181, 294, 292, 1182, 295,
	296, 1183, 1184, 297, 298, 299, 1185, 300, 301, 1186,
	302, 303, 1187, 304, 305, 525, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 526, 527, 1188, 240,
	1189, 0, 0, 0, 0, 317, 318, 319, 528, 0,
	0, 0, 320, 1190, 321, 1191, 1192, 1029, 322, 323,
	529, 530, 324, 325, 1193, 326, 531, 1194, 532, 327,
	1195, 328, 329, 330, 331, 332, 533, 534, 535, 386,
	1031, 333, 334, 1196, 335, 336, 337, 338, 0, 0,
	0, 241, 339, 340, 342, 1197, 1030, 341, 536, 537,
	1198, 538, 1199, 343, 1032, 539, 1033, 344, 345, 346,
	1034, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	1200, 354, 353, 1201, 355, 540, 1035, 356, 357, 1036,
	1202, 358, 359, 360, 1203, 1204, 361, 362, 363, 364,
	0, 365, 366, 368, 370, 367, 369, 374, 371, 372,
	373, 376, 0, 375, 1037, 377, 378, 379, 382, 383,
	381, 1038, 380, 1205, 242, 1039, 384, 1206, 541, 385,
	542, 387, 388, 1207, 0, 389, 0, 1208, 1209, 391,
	392, 393, 1210, 1211, 394, 395, 543, 1040, 396, 1041,
	544, 397, 398, 390, 399, 400, 401, 402, 403, 404,
	405, 406, 1212, 407, 408, 545, 546, 547, 409, 548,
	410, 411, 1213, 412, 0, 413, 414, 415, 416, 417,
	418, 419, 549, 421, 420, 422, 1214, 0, 0, 0,
	0, 0, 423, 0, 425, 426, 427, 424, 428, 429,
	430, 431, 1215, 432, 433, 434, 1042, 435, 436, 437,
	438, 550, 439, 0, 440, 441, 447, 448, 442, 443,
	449, 450, 451, 452, 453, 1216, 455, 456, 454, 457,
	458, 459, 1217, 460, 444, 445, 461, 462, 1043, 463,
	464, 551, 0, 465, 1218, 466, 467, 468, 469, 446,
	470, 475, 552, 471, 472, 473, 474, 553, 1219, 477,
	478, 0, 476, 1220, 479, 480, 481, 482, 483, 484,
	311, 485, 1221, 486, 554, 555, 556, 557, 1222, 493,
	1223, 487, 488, 558, 489, 559, 1224, 490, 491, 492,
	0, 494, 495, 1225, 1226, 496, 497, 498, 500, 501,
	499, 502, 1227, 503, 1228, 0, 504, 505, 506, 560,
	561, 562, 1229, 508, 507, 563, 1230, 1231, 1232, 1233,
	509, 510, 564, 511, 512, 513, 1149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 1155,
	249, 250, 1156, 1157, 1158, 0, 1159, 514, 1160, 1161,
	1162, 1163, 251, 252, 254, 253, 255, 256, 257, 515,
	516, 0, 517, 258, 518, 1164, 259, 260, 261, 262,
	263, 1165, 1166, 0, 264, 519, 520, 521, 1167, 265,
	266, 522, 1168, 1235, 1169, 267, 268, 269, 270, 271,
	272, 273, 0, 1170, 275, 276, 277, 274, 1171, 278,
	0, 279, 280, 281, 1172, 282, 1028, 283, 284, 1173,
	1174, 1176, 1175, 1177, 1178, 1179, 285, 286, 287, 288,
	0, 289, 523, 524, 1180, 293, 290, 291, 1181, 294,
	292, 1182, 295, 296, 1183, 1184, 297, 298, 299, 1185,
	300, 301, 1186, 302, 303, 1187, 304, 305, 525, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 526,
	527, 1188, 240, 1189, 0, 0, 0, 0, 317, 318,
	319, 528, 0, 0, 0, 320, 1190, 321, 1191, 1192,
	1029, 322, 323, 529, 530, 324, 325, 1193, 326, 531,
	1194, 532, 327, 1195, 328, 329, 330, 331, 332, 533,
	534, 535, 386, 1031, 333, 334, 1196, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 1197, 1030,
	341, 536, 537, 1198, 538, 1199, 343, 1032, 539, 1033,
	344, 345, 346, 1034, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 1200, 354, 353, 1201, 355, 540, 1035,
	356, 357, 1036, 1202, 358, 359, 360, 1203, 1204, 361,
	362, 363, 364, 0, 365, 366, 368, 370, 367, 369,
	374, 371, 372, 373, 376, 0, 375, 1037, 377, 378,
	379, 382, 383, 381, 1038, 380, 1205, 242, 1039, 384,
	1206, 541, 385, 542, 387, 388, 1207, 0, 389, 0,
	1208, 1209, 391, 392, 393, 1210, 1211, 394, 395, 543,
	1040, 396, 1041, 544, 397, 398, 390, 399, 400, 401,
	402, 403, 404, 405, 406, 1212, 407, 408, 545, 546,
	547, 409, 548, 410, 411, 1213, 412, 0, 413, 414,
	415, 416, 417, 418, 419, 549, 421, 420, 422, 1214,
	0, 0, 0, 0, 0, 423, 0, 425, 426, 427,
	424, 428, 429, 430, 431, 1215, 432, 433, 434, 1042,
	435, 436, 437, 438, 550, 439, 0, 440, 441, 447,
	448, 442, 443, 449, 450, 451, 452, 453, 1216, 455,
	456, 454, 457, 458, 459, 1217, 460, 444, 445, 461,
	462, 1043, 463, 464, 551, 0, 465, 1218, 466, 467,
	468, 469, 446, 470, 475, 552, 471, 472, 473, 474,
	553, 1219, 477, 478, 0, 476, 1220, 479, 480, 481,
	482, 483, 484, 311, 485, 1221, 486, 554, 555, 556,
	557, 1222, 493, 1223, 487, 488, 558, 489, 559, 1224,
	490, 491, 492, 0, 494, 495, 1225, 1226, 496, 497,
	498, 500, 501, 499, 502, 1227, 503, 1228, 0, 504,
	505, 506, 560, 561, 562, 1229, 508, 507, 563, 1230,
	1231, 1232, 1233, 509, 510, 564, 511, 512, 513, 2219,
	0, 965, 937, 938, 939, 935, 936, 948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 2216, 249, 250, 0, 0, 0,
	0, 0, 989, 953, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 515, 1002, 0, 1009, 258, 1008,
	0, 259, 260, 261, 262, 263, 955, 988, 922, 264,
	1047, 1048, 521, 0, 265, 266, 995, 0, 976, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 1028, 283, 284, 979, 977, 978, 985, 981, 980,
	984, 285, 286, 287, 288, 1012, 289, 1006, 1005, 926,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 2217,
	0, 297, 997, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 932, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 1019, 1020, 944, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 1004, 0, 0, 0,
	320, 0, 321, 0, 0, 1029, 322, 323, 1017, 1018,
	324, 325, 0, 326, 1026, 0, 954, 327, 0, 328,
	329, 330, 331, 332, 990, 991, 994, 386, 1031, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 0, 1030, 341, 999, 1000, 0, 960,
	0, 343, 1032, 992, 1033, 344, 345, 346, 1034, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 354,
	353, 0, 355, 1027, 1035, 356, 357, 1036, 0, 358,
	359, 360, 983, 982, 361, 362, 363, 364, 0, 365,
	366, 368, 370, 367, 369, 374, 371, 372, 373, 376,
	0, 375, 1037, 377, 378, 379, 382, 383, 381, 1038,
	380, 923, 242, 1039, 384, 945, 993, 385, 1007, 387,
	388, 0, 0, 389, 0, 0, 0, 391, 392, 393,
	0, 0, 394, 395, 543, 1040, 396, 1041, 1021, 397,
	398, 390, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 545, 546, 1022, 409, 548, 410, 411,
	0, 412, 0, 413, 414, 415, 416, 417, 418, 419,
	1003, 421, 420, 422, 0, 0, 0, 0, 0, 0,
	423, 0, 425, 426, 427, 424, 428, 429, 430, 431,
	0, 432, 433, 434, 1042, 435, 436, 437, 438, 933,
	439, 0, 440, 441, 447, 448, 442, 443, 449, 450,
	451, 452, 453, 0, 455, 456, 454, 457, 458, 459,
	986, 460, 444, 445, 461, 462, 1043, 463, 464, 1001,
	0, 465, 0, 466, 467, 468, 469, 446, 470, 475,
	1046, 471, 472, 473, 474, 1023, 0, 477, 478, 921,
	476, 0, 479, 480, 481, 482, 483, 484, 311, 485,
	0, 486, 1013, 1014, 1015, 1016, 0, 493, 0, 487,
	488, 1024, 489, 1025, 943, 490, 491, 492, 0, 494,
	495, 0, 927, 496, 497, 498, 500, 501, 499, 502,
	987, 503, 0, 0, 504, 505, 506, 560, 1010, 1045,
	2215, 508, 507, 563, 0, 0, 0, 0, 509, 510,
	564, 511, 512, 513, 924, 0, 0, 0, 0, 0,
	0, 920, 0, 0, 0, 0, 0, 0, 918, 919,
	2218, 0, 0, 0, 0, 0, 0, 949, 2214, 0,
	911, 947, 965, 937, 938, 939, 935, 936, 948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 249, 250, 0, 0,
	0, 0, 0, 989, 953, 0, 0, 0, 251, 252,
	254, 253, 255, 256, 257, 515, 1002, 0, 1009, 258,
	1008, 0, 259, 260, 261, 262, 263, 955, 988, 922,
	264, 1047, 1048, 521, 0, 265, 266, 995, 0, 976,
	0, 267, 268, 269, 270, 271, 272, 273, 0, 0,
	275, 276, 277, 274, 0, 278, 0, 279, 280, 281,
	0, 282, 1028, 283, 284, 979, 977, 978, 985, 981,
	980, 984, 285, 286, 287, 288, 1012, 289, 1006, 1005,
	926, 293, 290, 291, 0, 294, 292, 0, 295, 296,
	0, 0, 297, 997, 299, 0, 300, 301, 0, 302,
	303, 0, 304, 305, 932, 306, 307, 308, 310, 312,
	309, 313, 314, 315, 316, 1019, 1020, 944, 240, 0,
	0, 0, 0, 0, 317, 318, 319, 1004, 0, 0,
	0, 320, 0, 321, 0, 0, 1029, 322, 323, 1017,
	1018, 324, 325, 0, 326, 1026, 0, 954, 327, 0,
	328, 329, 330, 331, 332, 990, 991, 994, 386, 1031,
	333, 334, 0, 335, 336, 337, 338, 0, 0, 0,
	241, 339, 340, 342, 0, 1030, 341, 999, 1000, 0,
	960, 0, 343, 1032, 992, 1033, 344, 345, 346, 1034,
	347, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	354, 353, 0, 355, 1027, 1035, 356, 357, 1036, 0,
	358, 359, 360, 983, 982, 361, 362, 363, 364, 0,
	365, 366, 368, 370, 367, 369, 374, 371, 372, 373,
	376, 0, 375, 1037, 377, 378, 379, 382, 383, 381,
	1038, 380, 923, 242, 1039, 384, 945, 993, 385, 1007,
	387, 388, 0, 0, 389, 0, 0, 0, 391, 392,
	393, 0, 0, 394, 395, 543, 1040, 396, 1041, 1021,
	397, 398, 390, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 545, 546, 1022, 409, 548, 410,
	411, 0, 412, 0, 413, 414, 415, 416, 417, 418,
	419, 1003, 421, 420, 422, 0, 0, 0, 0, 0,
	0, 423, 0, 425, 426, 427, 424, 428, 429, 430,
	431, 0, 432, 433, 434, 1042, 435, 436, 437, 438,
	933, 439, 0, 440, 441, 447, 448, 442, 443, 449,
	450, 451, 452, 453, 205, 455, 456, 454, 457, 458,
	459, 986, 460, 444, 445, 461, 462, 1043, 463, 464,
	1001, 0, 465, 0, 466, 467, 468, 469, 446, 470,
	475, 1046, 471, 472, 473, 474, 1023, 0, 477, 478,
	921, 476, 207, 479, 480, 481, 482, 483, 484, 311,
	485, 0, 486, 1013, 1014, 1015, 1016, 0, 493, 0,
	487, 488, 1024, 489, 1025, 943, 490, 491, 492, 0,
	494, 495, 0, 927, 496, 497, 498, 500, 501, 499,
	502, 987, 503, 0, 0, 504, 505, 506, 1417, 1010,
	1045, 0, 508, 507, 563, 0, 0, 0, 199, 509,
	510, 564, 511, 512, 513, 924, 200, 0, 0, 0,
	0, 0, 920, 0, 0, 0, 0, 0, 0, 918,
	919, 965, 937, 938, 939, 935, 936, 948, 1649, 1647,
	0, 0, 947, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 989, 953, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 515, 1002, 0, 1009, 258, 1008,
	0, 259, 260, 261, 262, 263, 955, 988, 922, 264,
	1047, 1048, 521, 0, 265, 266, 995, 0, 976, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 1028, 283, 284, 979, 977, 978, 985, 981, 980,
	984, 285, 286, 287, 288, 1012, 289, 1006, 1005, 926,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 997, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 932, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 1019, 1020, 944, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 1004, 0, 0, 0,
	320, 0, 321, 0, 0, 1029, 322, 323, 1017, 1018,
	324, 325, 0, 326, 1026, 0, 954, 327, 0, 328,
	329, 330, 331, 332, 990, 991, 994, 386, 1031, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 0, 1030, 341, 999, 1000, 0, 960,
	0, 343, 1032, 992, 1033, 344, 345, 346, 1034, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 354,
	353, 0, 355, 1027, 1035, 356, 357, 1036, 0, 358,
	359, 360, 983, 982, 361, 362, 363, 364, 0, 365,
	366, 368, 370, 367, 369, 374, 371, 372, 373, 376,
	0, 375, 1037, 377, 378, 379, 382, 383, 381, 1038,
	380, 923, 242, 1039, 384, 945, 993, 385, 1007, 387,
	388, 0, 0, 389, 0, 0, 0, 391, 392, 393,
	0, 0, 394, 395, 543, 1040, 396, 1041, 1021, 397,
	398, 390, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 545, 546, 1022, 409, 548, 410, 411,
	0, 412, 0, 413, 414, 415, 416, 417, 418, 419,
	1003, 421, 420, 422, 0, 0, 0, 0, 0, 0,
	423, 0, 425, 426, 427, 424, 428, 429, 430, 431,
	0, 432, 433, 434, 1042, 435, 436, 437, 438, 933,
	439, 0, 440, 441, 447, 448, 442, 443, 449, 450,
	451, 452, 453, 205, 455, 456, 454, 457, 458, 459,
	986, 460, 444, 445, 461, 462, 1043, 463, 464, 1001,
	0, 465, 0, 466, 467, 468, 469, 446, 470, 475,
	1046, 471, 472, 473, 474, 1023, 0, 477, 478, 921,
	476, 207, 479, 480, 481, 482, 483, 484, 311, 485,
	0, 486, 1013, 1014, 1015, 1016, 0, 493, 0, 487,
	488, 1024, 489, 1025, 943, 490, 491, 492, 0, 494,
	495, 0, 927, 496, 497, 498, 500, 501, 499, 502,
	987, 503, 0, 0, 504, 505, 506, 1417, 1010, 1045,
	0, 508, 507, 563, 0, 0, 0, 199, 509, 510,
	564, 511, 512, 513, 924, 200, 0, 0, 0, 0,
	0, 920, 0, 0, 0, 0, 0, 0, 918, 919,
	965, 937, 938, 939, 935, 936, 948, 1649, 2727, 0,
	0, 947, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 989, 953, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 515, 1002, 0, 1009, 258, 1008, 0,
	259, 260, 261, 262, 263, 955, 988, 922, 264, 1047,
	1048, 521, 0, 265, 266, 995, 0, 976, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	1028, 283, 284, 979, 977, 978, 985, 981, 980, 984,
	285, 286, 287, 288, 1012, 289, 1006, 1005, 926, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 997, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 932, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 1019, 1020, 944, 240, 0, 0, 0,
	0, 0, 317, 318, 319, 1004, 0, 0, 0, 320,
	0, 321, 0, 0, 1029, 322, 323, 1017, 1018, 324,
	325, 0, 326, 1026, 0, 954, 327, 0, 328, 329,
	330, 331, 332, 990, 991, 994, 386, 1031, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 0, 1030, 341, 999, 1000, 0, 960, 0,
	343, 1032, 992, 1033, 344, 345, 346, 1034, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 354, 353,
	0, 355, 1027, 1035, 356, 357, 1036, 0, 358, 359,
	360, 983, 982, 361, 362, 363, 364, 0, 365, 366,
	368, 370, 367, 369, 374, 371, 372, 373, 376, 0,
	375, 1037, 377, 378, 379, 382, 383, 381, 1038, 380,
	923, 242, 1039, 384, 945, 993, 385, 1007, 387, 388,
	0, 0, 389, 0, 0, 0, 391, 392, 393, 0,
	0, 394, 395, 543, 1040, 396, 1041, 1021, 397, 398,
	390, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 545, 546, 1022, 409, 548, 410, 411, 0,
	412, 0, 413, 414, 415, 416, 417, 418, 419, 1003,
	421, 420, 422, 0, 0, 0, 0, 0, 0, 423,
	0, 425, 426, 427, 424, 428, 429, 430, 431, 0,
	432, 433, 434, 1042, 435, 436, 437, 438, 933, 439,
	0, 440, 441, 447, 448, 442, 443, 449, 450, 451,
	452, 453, 205, 455, 456, 454, 457, 458, 459, 986,
	460, 444, 445, 461, 462, 1043, 463, 464, 1001, 0,
	465, 0, 466, 467, 468, 469, 446, 470, 475, 1046,
	471, 472, 473, 474, 1023, 0, 477, 478, 921, 476,
	207, 479, 480, 481, 482, 483, 484, 311, 485, 0,
	486, 1013, 1014, 1015, 1016, 0, 493, 0, 487, 488,
	1024, 489, 1025, 943, 490, 491, 492, 0, 494, 495,
	0, 927, 496, 497, 498, 500, 501, 499, 502, 987,
	503, 0, 0, 504, 505, 506, 1417, 1010, 1045, 0,
	508, 507, 563, 0, 0, 0, 199, 509, 510, 564,
	511, 512, 513, 924, 200, 0, 0, 0, 0, 0,
	920, 0, 0, 0, 0, 0, 0, 918, 919, 965,
	937, 938, 939, 935, 936, 948, 1649, 1647, 0, 0,
	947, 0, 0, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	989, 953, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 515, 1002, 0, 1009, 258, 1008, 2323, 259,
	260, 261, 262, 263, 955, 988, 922, 264, 1047, 1048,
	521, 0, 265, 266, 995, 0, 976, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 1028,
	283, 284, 979, 977, 978, 985, 981, 980, 984, 285,
	286, 287, 288, 1012, 289, 1006, 1005, 926, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	997, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 932, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 1019, 1020, 944, 240, 0, 0, 0, 0,
	0, 317, 318, 319, 1004, 0, 0, 0, 320, 0,
	321, 0, 2328, 1029, 322, 323, 1017, 1018, 324, 325,
	0, 326, 1026, 0, 954, 327, 0, 328, 329, 330,
	331, 332, 990, 991, 994, 386, 1031, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 241, 339, 340,
	342, 0, 1030, 341, 999, 1000, 0, 960, 0, 343,
	1032, 992, 1033, 344, 345, 346, 1034, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 354, 353, 2324,
	355, 1027, 1035, 356, 357, 1036, 0, 358, 359, 360,
	983, 982, 361, 362, 363, 364, 0, 365, 366, 368,
	370, 367, 369, 374, 371, 372, 373, 376, 0, 375,
	1037, 377, 378, 379, 382, 383, 381, 1038, 380, 923,
	242, 1039, 384, 945, 993, 385, 1007, 387, 388, 0,
	0, 389, 0, 0, 0, 391, 392, 393, 0, 0,
	394, 395, 543, 1040, 396, 1041, 1021, 397, 398, 390,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	408, 545, 546, 1022, 409, 548, 410, 411, 0, 412,
	0, 413, 414, 415, 416, 417, 418, 419, 1003, 421,
	420, 422, 0, 0, 0, 0, 0, 0, 423, 0,
	425, 426, 427, 424, 428, 429, 430, 431, 0, 432,
	433, 434, 1042, 435, 436, 437, 438, 933, 439, 0,
	440, 441, 447, 448, 442, 443, 449, 450, 451, 452,
	453, 0, 455, 456, 454, 457, 458, 459, 986, 460,
	444, 445, 461, 462, 1043, 463, 464, 1001, 0, 465,
	0, 466, 467, 468, 469, 446, 470, 475, 1046, 471,
	472, 473, 474, 1023, 0, 477, 478, 921, 476, 0,
	479, 480, 481, 482, 483, 484, 311, 485, 0, 486,
	1013, 1014, 1015, 1016, 0, 493, 2325, 487, 488, 1024,
	489, 1025, 943, 490, 491, 492, 0, 494, 495, 0,
	927, 496, 497, 498, 500, 501, 499, 502, 987, 503,
	0, 0, 504, 505, 506, 560, 1010, 1045, 0, 508,
	507, 563, 0, 0, 0, 0, 509, 510, 564, 511,
	512, 513, 924, 0, 0, 0, 0, 0, 0, 920,
	0, 0, 0, 0, 0, 0, 918, 919, 0, 0,
	0, 0, 0, 0, 0, 949, 0, 0, 2264, 947,
	965, 937, 938, 939, 935, 936, 948, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 989, 953, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 515, 1002, 0, 1009, 258, 1008, 0,
	259, 260, 261, 262, 263, 955, 988, 922, 264, 1047,
	1048, 521, 0, 265, 266, 995, 0, 976, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	1028, 283, 284, 979, 977, 978, 985, 981, 980, 984,
	285, 286, 287, 288, 1012, 289, 1006, 1005, 926, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 997, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 932, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 1019, 1020, 944, 240, 0, 0, 0,
	0, 0, 317, 318, 319, 1004, 0, 0, 0, 320,
	0, 321, 0, 0, 1029, 322, 323, 1017, 1018, 324,
	325, 0, 326, 1026, 0, 954, 327, 0, 328, 329,
	330, 331, 332, 990, 991, 994, 386, 1031, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 0, 1030, 341, 999, 1000, 0, 960, 0,
	343, 1032, 992, 1033, 344, 345, 346, 1034, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 354, 353,
	0, 355, 1027, 1035, 356, 357, 1036, 0, 358, 359,
	360, 983, 982, 361, 362, 363, 364, 0, 365, 366,
	368, 370, 367, 369, 374, 371, 372, 373, 376, 0,
	375, 1037, 377, 378, 379, 382, 383, 381, 1038, 380,
	923, 242, 1039, 384, 945, 993, 385, 1007, 387, 388,
	0, 0, 389, 0, 0, 0, 391, 392, 393, 0,
	0, 394, 395, 543, 1040, 396, 1041, 1021, 397, 398,
	390, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 545, 546, 1022, 409, 548, 410, 411, 0,
	412, 0, 413, 414, 415, 416, 417, 418, 419, 1003,
	421, 420, 422, 0, 0, 0, 0, 0, 0, 423,
	0, 425, 426, 427, 424, 428, 429, 430, 431, 0,
	432, 433, 434, 1042, 435, 436, 437, 438, 933, 439,
	0, 440, 441, 447, 448, 442, 443, 449, 450, 451,
	452, 453, 0, 455, 456, 454, 457, 458, 459, 986,
	460, 444, 445, 461, 462, 1043, 463, 464, 1001, 0,
	465, 0, 466, 467, 468, 469, 446, 470, 475, 1046,
	471, 472, 473, 474, 1023, 0, 477, 478, 921, 476,
	0, 479, 480, 481, 482, 483, 484, 311, 485, 0,
	486, 1013, 1014, 1015, 1016, 0, 493, 0, 487, 488,
	1024, 489, 1025, 943, 490, 491, 492, 0, 494, 495,
	0, 927, 496, 497, 498, 500, 501, 499, 502, 987,
	503, 0, 0, 504, 505, 506, 560, 1010, 1045, 0,
	508, 507, 563, 0, 0, 0, 0, 509, 510, 564,
	511, 512, 513, 924, 0, 0, 0, 0, 0, 0,
	920, 0, 0, 0, 0, 0, 0, 918, 919, 0,
	0, 0, 0, 0, 0, 0, 949, 2262, 0, 2261,
	947, 965, 937, 938, 939, 935, 936, 948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 989, 953, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 515, 1002, 0, 1009, 258, 1008,
	0, 259, 260, 261, 262, 263, 955, 988, 922, 264,
	1047, 1048, 521, 0, 265, 266, 995, 0, 976, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 1028, 283, 284, 979, 977, 978, 985, 981, 980,
	984, 285, 286, 287, 288, 1012, 289, 1006, 1005, 926,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 997, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 932, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 1019, 1020, 944, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 1004, 0, 0, 0,
	320, 0, 321, 0, 0, 1029, 322, 323, 1017, 1018,
	324, 325, 0, 326, 1026, 0, 954, 327, 0, 328,
	329, 330, 331, 332, 990, 991, 994, 386, 1031, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 0, 1030, 341, 999, 1000, 0, 960,
	0, 343, 1032, 992, 1033, 344, 345, 346, 1034, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 354,
	353, 0, 355, 1027, 1035, 356, 357, 1036, 0, 358,
	359, 360, 983, 982, 361, 362, 363, 364, 0, 365,
	366, 368, 370, 367, 369, 374, 371, 372, 373, 376,
	0, 375, 1037, 377, 378, 379, 382, 383, 381, 1038,
	380, 923, 242, 1039, 384, 945, 993, 385, 1007, 387,
	388, 0, 0, 389, 0, 0, 0, 391, 392, 393,
	0, 0, 394, 395, 543, 1040, 396, 1041, 1021, 397,
	398, 390, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 545, 546, 1022, 409, 548, 410, 411,
	0, 412, 0, 413, 414, 415, 416, 417, 418, 419,
	1003, 421, 420, 422, 0, 0, 0, 0, 0, 0,
	423, 0, 425, 426, 427, 424, 428, 429, 430, 431,
	0, 432, 433, 434, 1042, 435, 436, 437, 438, 933,
	439, 0, 440, 441, 447, 448, 442, 443, 449, 450,
	451, 452, 453, 0, 455, 456, 454, 457, 458, 459,
	986, 460, 444, 445, 461, 462, 1043, 463, 464, 1001,
	0, 465, 0, 466, 467, 468, 469, 446, 470, 475,
	1046, 471, 472, 473, 474, 1023, 0, 477, 478, 921,
	476, 0, 479, 480, 481, 482, 483, 484, 311, 485,
	0, 486, 1013, 1014, 1015, 1016, 0, 493, 0, 487,
	488, 1024, 489, 1025, 943, 490, 491, 492, 0, 494,
	495, 0, 927, 496, 497, 498, 500, 501, 499, 502,
	987, 503, 0, 0, 504, 505, 506, 560, 1010, 1045,
	0, 508, 507, 563, 0, 0, 0, 0, 509, 510,
	564, 511, 512, 513, 924, 0, 0, 0, 0, 0,
	0, 920, 0, 0, 0, 0, 0, 0, 918, 919,
	0, 0, 0, 0, 0, 0, 0, 949, 2259, 0,
	2258, 947, 965, 937, 938, 939, 935, 936, 948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 249, 250, 0, 0,
	0, 0, 0, 989, 953, 0, 0, 0, 251, 252,
	254, 253, 255, 256, 257, 515, 1002, 0, 1009, 258,
	1008, 0, 259, 260, 261, 262, 263, 955, 988, 922,
	264, 1047, 1048, 521, 0, 265, 266, 995, 0, 976,
	0, 267, 268, 269, 270, 271, 272, 273, 0, 0,
	275, 276, 277, 274, 0, 278, 0, 279, 280, 281,
	0, 282, 1028, 283, 284, 979, 977, 978, 985, 981,
	980, 984, 285, 286, 287, 288, 1012, 289, 1006, 1005,
	926, 293, 290, 291, 0, 294, 292, 0, 295, 296,
	0, 0, 297, 997, 299, 0, 300, 301, 0, 302,
	303, 0, 304, 305, 932, 306, 307, 308, 310, 312,
	309, 313, 314, 315, 316, 1019, 1020, 944, 240, 0,
	0, 0, 0, 0, 317, 318, 319, 1004, 0, 0,
	0, 320, 0, 321, 0, 0, 1029, 322, 323, 1017,
	1018, 324, 325, 0, 326, 1026, 0, 954, 327, 0,
	328, 329, 330, 331, 332, 990, 991, 994, 386, 1031,
	333, 334, 0, 335, 336, 337, 338, 0, 0, 0,
	241, 339, 340, 342, 0, 1030, 341, 999, 1000, 0,
	960, 0, 343, 1032, 992, 1033, 344, 345, 346, 1034,
	347, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	354, 353, 0, 355, 1027, 1035, 356, 357, 1036, 0,
	358, 359, 360, 983, 982, 361, 362, 363, 364, 0,
	365, 366, 368, 370, 367, 369, 374, 371, 372, 373,
	376, 0, 375, 1037, 377, 378, 379, 382, 383, 381,
	1038, 380, 923, 242, 1039, 384, 945, 993, 385, 1007,
	387, 388, 0, 0, 389, 0, 0, 0, 391, 392,
	393, 0, 0, 394, 395, 543, 1040, 396, 1041, 1021,
	397, 398, 390, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 545, 546, 1022, 409, 548, 410,
	411, 0, 412, 0, 413, 414, 415, 416, 417, 418,
	419, 1003, 421, 420, 422, 0, 0, 0, 0, 0,
	0, 423, 0, 425, 426, 427, 424, 428, 429, 430,
	431, 0, 432, 433, 434, 1042, 435, 436, 437, 438,
	933, 439, 0, 440, 441, 447, 448, 442, 443, 449,
	450, 451, 452, 453, 0, 455, 456, 454, 457, 458,
	459, 986, 460, 444, 445, 461, 462, 1043, 463, 464,
	1001, 0, 465, 0, 466, 467, 468, 469, 446, 470,
	475, 1046, 471, 472, 473, 474, 1023, 0, 477, 478,
	921, 476, 0, 479, 480, 481, 482, 483, 484, 311,
	485, 0, 486, 1013, 1014, 1015, 1016, 0, 493, 0,
	487, 488, 1024, 489, 1025, 943, 490, 491, 492, 0,
	494, 495, 0, 927, 496, 497, 498, 500, 501, 499,
	502, 987, 503, 0, 0, 504, 505, 506, 560, 1010,
	1045, 0, 508, 507, 563, 0, 0, 0, 0, 509,
	510, 564, 511, 512, 513, 924, 0, 0, 0, 0,
	0, 0, 920, 0, 0, 0, 0, 0, 0, 918,
	919, 0, 0, 0, 0, 0, 0, 0, 949, 2256,
	0, 2255, 947, 965, 937, 938, 939, 935, 936, 948,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 989, 953, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 515, 1002, 0, 1009,
	258, 1008, 0, 259, 260, 261, 262, 263, 955, 988,
	922, 264, 1047, 1048, 521, 0, 265, 266, 995, 0,
	976, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 1028, 283, 284, 979, 977, 978, 985,
	981, 980, 984, 285, 286, 287, 288, 1012, 289, 1006,
	1005, 926, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 997, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 932, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 1019, 1020, 944, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 1004, 0,
	0, 0, 320, 0, 321, 0, 0, 1029, 322, 323,
	1017, 1018, 324, 325, 0, 326, 1026, 0, 954, 327,
	0, 328, 329, 330, 331, 332, 990, 991, 994, 386,
	1031, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 241, 339, 340, 342, 0, 1030, 341, 999, 1000,
	0, 960, 0, 343, 1032, 992, 1033, 344, 345, 346,
	1034, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 354, 353, 0, 355, 1027, 1035, 356, 357, 1036,
	0, 358, 359, 360, 983, 982, 361, 362, 363, 364,
	0, 365, 366, 368, 370, 367, 369, 374, 371, 372,
	373, 376, 0, 375, 1037, 377, 378, 379, 382, 383,
	381, 1038, 380, 923, 242, 1039, 384, 945, 993, 385,
	1007, 387, 388, 0, 0, 389, 0, 0, 0, 391,
	392, 393, 0, 0, 394, 395, 543, 1040, 396, 1041,
	1021, 397, 398, 390, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 545, 546, 1022, 409, 548,
	410, 411, 0, 412, 0, 413, 414, 415, 416, 417,
	418, 419, 1003, 421, 420, 422, 0, 0, 0, 0,
	0, 0, 423, 0, 425, 426, 427, 424, 428, 429,
	430, 431, 0, 432, 433, 434, 1042, 435, 436, 437,
	438, 933, 439, 0, 440, 441, 447, 448, 442, 443,
	449, 450, 451, 452, 453, 0, 455, 456, 454, 457,
	458, 459, 986, 460, 444, 445, 461, 462, 1043, 463,
	464, 1001, 0, 465, 0, 466, 467, 468, 469, 446,
	470, 475, 1046, 471, 472, 473, 474, 1023, 0, 477,
	478, 921, 476, 0, 479, 480, 481, 482, 483, 484,
	311, 485, 0, 486, 1013, 1014, 1015, 1016, 0, 493,
	0, 487, 488, 1024, 489, 1025, 943, 490, 491, 492,
	0, 494, 495, 0, 927, 496, 497, 498, 500, 501,
	499, 502, 987, 503, 0, 0, 504, 505, 506, 560,
	1010, 1045, 0, 508, 507, 563, 0, 0, 0, 0,
	509, 510, 564, 511, 512, 513, 924, 0, 0, 0,
	0, 0, 0, 920, 0, 0, 0, 0, 0, 0,
	918, 919, 0, 0, 0, 0, 0, 0, 0, 949,
	2253, 0, 1502, 947, 965, 937, 938, 939, 935, 936,
	948, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 989, 953, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 515, 1002, 0,
	1009, 258, 1008, 0, 259, 260, 261, 262, 263, 955,
	988, 922, 264, 1047, 1048, 521, 0, 265, 266, 995,
	0, 976, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 1028, 283, 284, 979, 977, 978,
	985, 981, 980, 984, 285, 286, 287, 288, 1012, 289,
	1006, 1005, 926, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 997, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 932, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 1019, 1020, 944,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 1004,
	0, 0, 0, 320, 0, 321, 0, 0, 1029, 322,
	323, 1017, 1018, 324, 325, 0, 326, 1026, 0, 954,
	327, 0, 328, 329, 330, 331, 332, 990, 991, 994,
	386, 1031, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 1030, 341, 999,
	1000, 0, 960, 0, 343, 1032, 992, 1033, 344, 345,
	346, 1034, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 354, 353, 0, 355, 1027, 1035, 356, 357,
	1036, 0, 358, 359, 360, 983, 982, 361, 362, 363,
	364, 0, 365, 366, 368, 370, 367, 369, 374, 371,
	372, 373, 376, 0, 375, 1037, 377, 378, 379, 382,
	383, 381, 1038, 380, 923, 242, 1039, 384, 945, 993,
	385, 1007, 387, 388, 0, 0, 389, 0, 0, 0,
	391, 392, 393, 0, 0, 394, 395, 543, 1040, 396,
	1041, 1021, 397, 398, 390, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 545, 546, 1022, 409,
	548, 410, 411, 0, 412, 0, 413, 414, 415, 416,
	417, 418, 419, 1003, 421, 420, 422, 0, 0, 0,
	0, 0, 0, 423, 0, 425, 426, 427, 424, 428,
	429, 430, 431, 0, 432, 433, 434, 1042, 435, 436,
	437, 438, 933, 439, 0, 440, 441, 447, 448, 442,
	443, 449, 450, 451, 452, 453, 0, 455, 456, 454,
	457, 458, 459, 986, 460, 444, 445, 461, 462, 1043,
	463, 464, 1001, 0, 465, 0, 466, 467, 468, 469,
	446, 470, 475, 1046, 471, 472, 473, 474, 1023, 0,
	477, 478, 921, 476, 0, 479, 480, 481, 482, 483,
	484, 311, 485, 0, 486, 1013, 1014, 1015, 1016, 0,
	493, 0, 487, 488, 1024, 489, 1025, 943, 490, 491,
	492, 0, 494, 495, 0, 927, 496, 497, 498, 500,
	501, 499, 502, 987, 503, 0, 0, 504, 505, 506,
	560, 1010, 1045, 0, 508, 507, 563, 1501, 0, 0,
	0, 509, 510, 564, 511, 512, 513, 924, 0, 0,
	0, 0, 0, 0, 920, 0, 0, 0, 0, 0,
	0, 918, 919, 0, 0, 0, 0, 0, 0, 0,
	949, 0, 0, 914, 947, 965, 937, 938, 939, 935,
	936, 948, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 989, 953, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 515, 1002,
	0, 1009, 258, 1008, 0, 259, 260, 261, 262, 263,
	955, 988, 922, 264, 1047, 1048, 521, 0, 265, 266,
	995, 0, 976, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 1028, 283, 284, 979, 977,
	978, 985, 981, 980, 984, 285, 286, 287, 288, 1012,
	289, 1006, 1005, 926, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 997, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 932, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 1019, 1020,
	944, 240, 0, 0, 0, 0, 0, 317, 318, 319,
	1004, 0, 0, 0, 320, 0, 321, 0, 0, 1029,
	322, 323, 1017, 1018, 324, 325, 0, 326, 1026, 0,
	954, 327, 0, 328, 329, 330, 331, 332, 990, 991,
	994, 386, 1031, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 241, 339, 340, 342, 0, 1030, 341,
	999, 1000, 0, 960, 0, 343, 1032, 992, 1033, 344,
	345, 346, 1034, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 354, 353, 0, 355, 1027, 1035, 356,
	357, 1036, 0, 358, 359, 360, 983, 982, 361, 362,
	363, 364, 0, 365, 366, 368, 370, 367, 369, 374,
	371, 372, 373, 376, 0, 375, 1037, 377, 378, 379,
	382, 383, 381, 1038, 380, 923, 242, 1039, 384, 945,
	993, 385, 1007, 387, 388, 0, 0, 389, 0, 928,
	0, 391, 392, 393, 0, 0, 394, 395, 543, 1040,
	396, 1041, 1021, 397, 398, 390, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 545, 546, 1022,
	409, 548, 410, 411, 0, 412, 0, 413, 414, 415,
	416, 417, 418, 419, 1003, 421, 420, 422, 0, 0,
	0, 0, 0, 0, 423, 0, 425, 426, 427, 424,
	428, 429, 430, 431, 0, 432, 433, 434, 1042, 435,
	436, 437, 438, 933, 439, 0, 440, 441, 447, 448,
	442, 443, 449, 450, 451, 452, 453, 0, 455, 456,
	454, 457, 458, 459, 986, 460, 444, 445, 461, 462,
	1043, 463, 464, 1001, 0, 465, 0, 466, 467, 468,
	469, 446, 470, 475, 1046, 471, 472, 473, 474, 1023,
	0, 477, 478, 921, 476, 0, 479, 480, 481, 482,
	483, 484, 311, 485, 0, 486, 1013, 1014, 1015, 1016,
	0, 493, 0, 487, 488, 1024, 489, 1025, 943, 490,
	491, 492, 0, 494, 495, 0, 927, 496, 497, 498,
	500, 501, 499, 502, 987, 503, 0, 0, 504, 505,
	506, 560, 1010, 1045, 0, 508, 507, 563, 0, 0,
	0, 0, 509, 510, 564, 511, 512, 513, 924, 0,
	0, 0, 0, 0, 0, 920, 0, 0, 0, 0,
	0, 0, 918, 919, 965, 937, 938, 939, 935, 936,
	948, 949, 0, 0, 0, 947, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 989, 953, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 515, 1002, 0,
	1009, 258, 1008, 0, 259, 260, 261, 262, 263, 955,
	988, 922, 264, 1047, 1048, 521, 0, 265, 266, 995,
	0, 976, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	3888, 281, 0, 282, 1028, 283, 284, 979, 977, 978,
	985, 981, 980, 984, 285, 286, 287, 288, 1012, 289,
	1006, 1005, 926, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 997, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 932, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 1019, 1020, 944,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 1004,
	0, 0, 0, 320, 0, 321, 0, 0, 1029, 322,
	323, 1017, 1018, 324, 325, 0, 326, 1026, 0, 954,
	327, 0, 328, 329, 330, 331, 332, 990, 991, 994,
	386, 1031, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 1030, 341, 999,
	1000, 0, 960, 0, 343, 1032, 992, 1033, 344, 345,
	346, 1034, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 354, 353, 0, 355, 1027, 1035, 356, 357,
	1036, 0, 358, 359, 360, 983, 982, 361, 362, 363,
	364, 0, 365, 366, 368, 370, 367, 369, 374, 371,
	372, 373, 376, 0, 375, 1037, 377, 378, 379, 382,
	383, 381, 1038, 380, 923, 242, 1039, 384, 945, 993,
	385, 1007, 387, 388, 0, 0, 389, 0, 928, 0,
	391, 392, 393, 0, 0, 394, 395, 543, 1040, 396,
	1041, 1021, 397, 398, 390, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 545, 546, 1022, 409,
	548, 410, 411, 0, 412, 0, 413, 414, 415, 416,
	417, 418, 419, 1003, 421, 420, 422, 0, 0, 0,
	0, 0, 0, 423, 0, 425, 426, 427, 424, 428,
	429, 430, 431, 0, 432, 433, 434, 1042, 435, 436,
	437, 438, 933, 439, 0, 440, 441, 447, 448, 442,
	443, 449, 450, 451, 452, 453, 0, 455, 456, 454,
	457, 458, 459, 986, 460, 444, 445, 461, 462, 1043,
	463, 464, 1001, 0, 465, 0, 466, 467, 468, 469,
	446, 470, 475, 1046, 471, 472, 473, 474, 1023, 0,
	477, 478, 921, 476, 0, 479, 480, 481, 482, 483,
	484, 311, 485, 0, 486, 1013, 1014, 1015, 1016, 0,
	493, 0, 487, 488, 1024, 489, 1025, 943, 490, 491,
	492, 0, 494, 495, 0, 927, 496, 497, 498, 500,
	501, 499, 502, 987, 503, 0, 0, 504, 505, 506,
	560, 1010, 1045, 0, 508, 507, 563, 0, 0, 0,
	0, 509, 510, 564, 511, 512, 513, 924, 0, 0,
	0, 0, 0, 0, 920, 0, 0, 0, 0, 0,
	0, 918, 919, 965, 937, 938, 939, 935, 936, 948,
	949, 0, 0, 0, 947, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 989, 953, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 515, 1002, 0, 1009,
	258, 1008, 0, 259, 260, 261, 262, 263, 955, 988,
	922, 264, 1047, 1048, 521, 0, 265, 266, 995, 0,
	976, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 1028, 283, 284, 979, 977, 978, 985,
	981, 980, 984, 285, 286, 287, 288, 1012, 289, 1006,
	1005, 926, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 997, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 932, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 1019, 1020, 944, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 1004, 0,
	0, 0, 320, 0, 321, 0, 0, 1029, 322, 323,
	1017, 1018, 324, 325, 0, 326, 1026, 0, 954, 327,
	0, 328, 329, 330, 331, 332, 990, 991, 994, 386,
	1031, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 2133, 339, 340, 342, 0, 1030, 341, 999, 1000,
	0, 960, 0, 343, 1032, 992, 1033, 344, 345, 346,
	1034, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 354, 353, 0, 355, 1027, 1035, 356, 357, 1036,
	0, 358, 359, 360, 983, 982, 361, 362, 363, 364,
	0, 365, 366, 368, 370, 367, 369, 374, 371, 372,
	373, 376, 0, 375, 1037, 377, 378, 379, 382, 383,
	381, 1038, 380, 923, 242, 1039, 384, 945, 993, 385,
	1007, 387, 388, 0, 0, 389, 0, 0, 0, 391,
	392, 393, 0, 0, 394, 395, 543, 1040, 396, 1041,
	1021, 397, 398, 390, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 545, 546, 1022, 409, 548,
	410, 411, 2132, 412, 0, 413, 414, 415, 416, 417,
	418, 419, 1003, 421, 420, 422, 0, 0, 0, 0,
	0, 0, 423, 0, 425, 426, 427, 424, 428, 429,
	430, 431, 0, 432, 433, 434, 1042, 435, 436, 437,
	438, 933, 439, 0, 440, 441, 447, 448, 442, 443,
	449, 450, 451, 452, 453, 0, 455, 456, 454, 457,
	458, 459, 986, 460, 444, 445, 461, 462, 1043, 463,
	464, 1001, 0, 465, 0, 466, 467, 468, 469, 446,
	470, 475, 1046, 471, 472, 473, 474, 1023, 0, 477,
	478, 921, 476, 0, 479, 480, 481, 482, 483, 484,
	311, 485, 0, 486, 1013, 1014, 1015, 1016, 0, 493,
	0, 487, 488, 1024, 489, 1025, 943, 490, 491, 492,
	0, 494, 495, 0, 927, 496, 497, 498, 500, 501,
	499, 502, 987, 503, 0, 0, 504, 505, 506, 560,
	1010, 1045, 0, 508, 507, 563, 0, 0, 0, 0,
	509, 510, 564, 511, 512, 513, 924, 0, 0, 0,
	0, 0, 0, 920, 0, 0, 0, 0, 0, 0,
	918, 919, 965, 937, 938, 939, 935, 936, 948, 949,
	0, 0, 0, 947, 0, 0, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 249, 250, 0, 0,
	0, 0, 0, 989, 953, 0, 0, 0, 251, 252,
	254, 253, 255, 256, 257, 515, 1002, 0, 1009, 258,
	1008, 0, 259, 260, 261, 262, 263, 955, 988, 922,
	264, 1047, 1048, 521, 0, 265, 266, 995, 0, 976,
	0, 267, 268, 269, 270, 271, 272, 273, 0, 0,
	275, 276, 277, 274, 0, 278, 0, 279, 3687, 281,
	0, 282, 1028, 283, 284, 979, 977, 978, 985, 981,
	980, 984, 285, 286, 287, 288, 1012, 289, 1006, 1005,
	926, 293, 290, 291, 0, 294, 292, 0, 295, 296,
	0, 0, 297, 997, 299, 0, 300, 301, 0, 302,
	303, 0, 304, 305, 932, 306, 307, 308, 310, 312,
	309, 313, 314, 315, 316, 1019, 1020, 944, 240, 0,
	0, 0, 0, 0, 317, 318, 319, 1004, 0, 0,
	0, 320, 0, 321, 0, 0, 1029, 322, 323, 1017,
	1018, 324, 325, 0, 326, 1026, 0, 954, 327, 0,
	328, 329, 330, 331, 332, 990, 991, 994, 386, 1031,
	333, 334, 0, 335, 336, 337, 338, 0, 0, 0,
	241, 339, 340, 342, 0, 1030, 341, 999, 1000, 0,
	960, 0, 343, 1032, 992, 1033, 344, 345, 346, 1034,
	347, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	354, 353, 0, 355, 1027, 1035, 356, 357, 1036, 0,
	358, 359, 360, 983, 982, 361, 362, 363, 364, 0,
	365, 366, 368, 370, 367, 369, 374, 371, 372, 373,
	376, 0, 375, 1037, 377, 378, 379, 382, 383, 381,
	1038, 380, 923, 242, 1039, 384, 945, 993, 385, 1007,
	387, 388, 0, 0, 389, 0, 928, 0, 391, 392,
	393, 0, 0, 394, 395, 543, 1040, 396, 1041, 1021,
	397, 398, 390, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 545, 546, 1022, 409, 548, 410,
	411, 0, 412, 0, 413, 414, 415, 416, 417, 418,
	419, 1003, 421, 420, 422, 0, 0, 0, 0, 0,
	0, 423, 0, 425, 426, 427, 424, 428, 429, 430,
	431, 0, 432, 433, 434, 1042, 435, 436, 437, 438,
	933, 439, 0, 440, 441, 447, 448, 442, 443, 449,
	450, 451, 452, 453, 0, 455, 456, 454, 457, 458,
	459, 986, 460, 444, 445, 461, 462, 1043, 463, 464,
	1001, 0, 465, 0, 466, 467, 468, 469, 446, 470,
	475, 1046, 471, 472, 473, 474, 1023, 0, 477, 478,
	921, 476, 0, 479, 480, 481, 482, 483, 484, 311,
	485, 0, 486, 1013, 1014, 1015, 1016, 0, 493, 0,
	487, 488, 1024, 489, 1025, 943, 490, 491, 492, 0,
	494, 495, 0, 927, 496, 497, 498, 500, 501, 499,
	502, 987, 503, 0, 0, 504, 505, 506, 560, 1010,
	1045, 0, 508, 507, 563, 0, 0, 0, 0, 509,
	510, 564, 511, 512, 513, 924, 0, 0, 0, 0,
	0, 0, 920, 0, 0, 0, 0, 0, 0, 918,
	919, 965, 937, 938, 939, 935, 936, 948, 949, 0,
	0, 0, 947, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 989, 953, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 515, 1002, 0, 1009, 258, 1008,
	0, 259, 260, 261, 262, 263, 955, 988, 922, 264,
	1047, 1048, 521, 0, 265, 266, 995, 0, 976, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 1028, 283, 284, 979, 977, 978, 985, 981, 980,
	984, 285, 286, 287, 288, 1012, 289, 1006, 1005, 926,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 997, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 932, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 1019, 1020, 944, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 1004, 0, 0, 0,
	320, 0, 321, 0, 0, 1029, 322, 323, 1017, 1018,
	324, 325, 0, 326, 1026, 0, 954, 327, 0, 328,
	329, 330, 331, 332, 990, 991, 994, 386, 1031, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 0, 1030, 341, 999, 1000, 0, 960,
	0, 343, 1032, 992, 1033, 344, 345, 346, 1034, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 354,
	353, 0, 355, 1027, 1035, 356, 357, 1036, 0, 358,
	359, 360, 983, 982, 361, 362, 363, 364, 0, 365,
	366, 368, 370, 367, 369, 374, 371, 372, 373, 376,
	0, 375, 1037, 377, 378, 379, 382, 383, 381, 1038,
	380, 923, 3367, 1039, 384, 945, 993, 385, 1007, 387,
	388, 0, 0, 389, 0, 0, 0, 391, 392, 393,
	0, 0, 394, 395, 543, 1040, 396, 1041, 1021, 397,
	398, 390, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 545, 546, 1022, 409, 548, 410, 411,
	0, 412, 0, 413, 414, 415, 416, 417, 418, 419,
	1003, 421, 420, 422, 0, 0, 0, 0, 0, 0,
	423, 0, 425, 426, 427, 424, 428, 429, 430, 431,
	0, 432, 433, 434, 1042, 435, 436, 437, 438, 933,
	439, 0, 440, 441, 447, 448, 442, 443, 449, 450,
	451, 452, 453, 0, 455, 456, 454, 457, 458, 459,
	986, 460, 444, 445, 461, 462, 1043, 463, 464, 1001,
	0, 465, 0, 466, 467, 468, 469, 446, 470, 475,
	1046, 471, 472, 473, 474, 1023, 0, 477, 478, 921,
	476, 0, 479, 480, 481, 482, 483, 484, 311, 485,
	0, 486, 1013, 1014, 1015, 1016, 0, 493, 0, 487,
	488, 1024, 489, 1025, 943, 490, 491, 492, 0, 494,
	495, 0, 927, 496, 497, 498, 500, 501, 499, 502,
	987, 503, 0, 0, 504, 505, 506, 560, 1010, 1045,
	0, 508, 507, 563, 0, 0, 0, 0, 509, 510,
	564, 511, 512, 513, 924, 0, 0, 0, 0, 0,
	0, 920, 0, 0, 0, 0, 0, 0, 918, 919,
	1717, 0, 0, 0, 0, 0, 0, 949, 0, 0,
	0, 947, 965, 937, 938, 939, 935, 936, 948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 249, 250, 0, 0,
	0, 0, 0, 989, 953, 0, 0, 0, 251, 252,
	254, 253, 255, 256, 257, 515, 1002, 0, 1009, 258,
	1008, 0, 259, 260, 261, 262, 263, 955, 988, 922,
	264, 1047, 1048, 521, 0, 265, 266, 995, 0, 976,
	0, 267, 268, 269, 270, 271, 272, 273, 0, 0,
	275, 276, 277, 274, 0, 278, 0, 279, 280, 281,
	0, 282, 1028, 283, 284, 979, 977, 978, 985, 981,
	980, 984, 285, 286, 287, 288, 1012, 289, 1006, 1005,
	926, 293, 290, 291, 0, 294, 292, 0, 295, 296,
	0, 0, 297, 997, 299, 0, 300, 301, 0, 302,
	303, 0, 304, 305, 932, 306, 307, 308, 310, 312,
	309, 313, 314, 315, 316, 1019, 1020, 944, 240, 0,
	0, 0, 0, 0, 317, 318, 319, 1004, 0, 0,
	0, 320, 0, 321, 0, 0, 1029, 322, 323, 1017,
	1018, 324, 325, 0, 326, 1026, 0, 954, 327, 0,
	328, 329, 330, 331, 332, 990, 991, 994, 386, 1031,
	333, 334, 0, 335, 336, 337, 338, 0, 0, 0,
	241, 339, 340, 342, 0, 1030, 341, 999, 1000, 0,
	960, 0, 343, 1032, 992, 1033, 344, 345, 346, 1034,
	347, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	354, 353, 0, 355, 1027, 1035, 356, 357, 1036, 0,
	358, 359, 360, 983, 982, 361, 362, 363, 364, 0,
	365, 366, 368, 370, 367, 369, 374, 371, 372, 373,
	376, 0, 375, 1037, 377, 378, 379, 382, 383, 381,
	1038, 380, 923, 242, 1039, 384, 945, 993, 385, 1007,
	387, 388, 0, 0, 389, 0, 0, 0, 391, 392,
	393, 0, 0, 394, 395, 543, 1040, 396, 1041, 1021,
	397, 398, 390, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 545, 546, 1022, 409, 548, 410,
	411, 0, 412, 0, 413, 414, 415, 416, 417, 418,
	419, 1003, 421, 420, 422, 0, 0, 0, 0, 0,
	0, 423, 0, 425, 426, 427, 424, 428, 429, 430,
	431, 0, 432, 433, 434, 1042, 435, 436, 437, 438,
	933, 439, 0, 440, 441, 447, 448, 442, 443, 449,
	450, 451, 452, 453, 0, 455, 456, 454, 457, 458,
	459, 986, 460, 444, 445, 461, 462, 1043, 463, 464,
	1001, 0, 465, 0, 466, 467, 468, 469, 446, 470,
	475, 1046, 471, 472, 473, 474, 1023, 0, 477, 478,
	921, 476, 0, 479, 480, 481, 482, 483, 484, 311,
	485, 0, 486, 1013, 1014, 1015, 1016, 0, 493, 0,
	487, 488, 1024, 489, 1025, 943, 490, 491, 492, 0,
	494, 495, 0, 927, 496, 497, 498, 500, 501, 499,
	502, 987, 503, 0, 0, 504, 505, 506, 560, 1010,
	1045, 3143, 508, 507, 563, 0, 0, 0, 0, 509,
	510, 564, 511, 512, 513, 924, 0, 0, 0, 0,
	0, 0, 920, 0, 0, 0, 0, 0, 0, 918,
	919, 965, 937, 938, 939, 935, 936, 948, 949, 0,
	0, 0, 947, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 989, 953, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 515, 1002, 0, 1009, 258, 1008,
	0, 259, 260, 261, 262, 263, 955, 988, 922, 264,
	1047, 1048, 521, 0, 265, 266, 995, 0, 976, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 1028, 283, 284, 979, 977, 978, 985, 981, 980,
	984, 285, 286, 287, 288, 1012, 289, 1006, 1005, 926,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 997, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 932, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 1019, 1020, 944, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 1004, 0, 0, 0,
	320, 0, 321, 0, 0, 1029, 322, 323, 1017, 1018,
	324, 325, 0, 326, 1026, 0, 954, 327, 0, 328,
	329, 330, 331, 332, 990, 991, 994, 386, 1031, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 0, 1030, 341, 999, 1000, 0, 960,
	0, 343, 1032, 992, 1033, 344, 345, 346, 1034, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 354,
	353, 0, 355, 1027, 1035, 356, 357, 1036, 0, 358,
	359, 360, 983, 982, 361, 362, 363, 364, 0, 365,
	366, 368, 370, 367, 369, 374, 371, 372, 373, 376,
	0, 375, 1037, 377, 378, 379, 382, 383, 381, 1038,
	380, 923, 242, 1039, 384, 945, 993, 385, 1007, 387,
	388, 0, 0, 389, 0, 928, 0, 391, 392, 393,
	0, 0, 394, 395, 543, 1040, 396, 1041, 1021, 397,
	398, 390, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 545, 546, 1022, 409, 548, 410, 411,
	0, 412, 0, 413, 414, 415, 416, 417, 418, 419,
	1003, 421, 420, 422, 0, 0, 0, 0, 0, 0,
	423, 0, 425, 426, 427, 424, 428, 429, 430, 431,
	0, 432, 433, 434, 1042, 435, 436, 437, 438, 933,
	439, 0, 440, 441, 447, 448, 442, 443, 449, 450,
	451, 452, 453, 0, 455, 456, 454, 457, 458, 459,
	986, 460, 444, 445, 461, 462, 1043, 463, 464, 1001,
	0, 465, 0, 466, 467, 468, 469, 446, 470, 475,
	1046, 471, 472, 473, 474, 1023, 0, 477, 478, 921,
	476, 0, 479, 480, 481, 482, 483, 484, 311, 485,
	0, 486, 1013, 1014, 1015, 1016, 0, 493, 0, 487,
	488, 1024, 489, 1025, 943, 490, 491, 492, 0, 494,
	495, 0, 927, 496, 497, 498, 500, 501, 499, 502,
	987, 503, 0, 0, 504, 505, 506, 560, 1010, 1045,
	0, 508, 507, 563, 0, 0, 0, 0, 509, 510,
	564, 511, 512, 513, 924, 0, 0, 0, 0, 0,
	0, 920, 0, 0, 0, 0, 0, 0, 918, 919,
	965, 937, 938, 939, 935, 936, 948, 949, 0, 0,
	0, 947, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 989, 953, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 515, 1002, 0, 1009, 258, 1008, 0,
	259, 260, 261, 262, 263, 955, 988, 922, 264, 1047,
	1048, 521, 0, 265, 266, 995, 0, 976, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	1028, 283, 284, 979, 977, 978, 985, 981, 980, 984,
	285, 286, 287, 288, 1012, 289, 1006, 1005, 926, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 997, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 932, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 1019, 1020, 944, 240, 0, 0, 0,
	0, 0, 317, 318, 319, 1004, 0, 0, 0, 320,
	0, 321, 0, 0, 1029, 322, 323, 1017, 1018, 324,
	325, 0, 326, 1026, 0, 954, 327, 0, 328, 329,
	330, 331, 332, 990, 991, 994, 386, 1031, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 0, 1030, 341, 999, 1000, 0, 960, 0,
	343, 1032, 992, 1033, 344, 345, 346, 1034, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 354, 353,
	0, 355, 1027, 1035, 356, 357, 1036, 0, 358, 359,
	360, 983, 982, 361, 362, 363, 364, 0, 365, 366,
	368, 370, 367, 369, 374, 371, 372, 373, 376, 0,
	375, 1037, 377, 378, 379, 382, 383, 381, 1038, 380,
	923, 242, 1039, 384, 945, 993, 385, 1007, 387, 388,
	0, 0, 389, 0, 0, 0, 391, 392, 393, 0,
	0, 394, 395, 543, 1040, 396, 1041, 1021, 397, 398,
	390, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 545, 546, 1022, 409, 548, 410, 411, 0,
	412, 0, 413, 414, 415, 416, 417, 418, 419, 1003,
	421, 420, 422, 0, 0, 0, 0, 0, 0, 423,
	0, 425, 426, 427, 424, 428, 429, 430, 431, 0,
	432, 433, 434, 1042, 435, 436, 437, 438, 933, 439,
	0, 440, 441, 447, 448, 442, 443, 449, 450, 451,
	452, 453, 0, 455, 456, 454, 457, 458, 459, 986,
	460, 444, 445, 461, 462, 1043, 463, 464, 1001, 0,
	465, 0, 466, 467, 468, 469, 446, 470, 475, 1046,
	471, 472, 473, 474, 1023, 0, 477, 478, 921, 476,
	0, 479, 480, 481, 482, 483, 484, 311, 485, 0,
	486, 1013, 1014, 1015, 1016, 0, 493, 0, 487, 488,
	1024, 489, 1025, 943, 490, 491, 492, 0, 494, 495,
	0, 927, 496, 497, 498, 500, 501, 499, 502, 987,
	503, 0, 0, 504, 505, 506, 560, 1010, 1045, 0,
	508, 507, 563, 0, 0, 0, 0, 509, 510, 564,
	511, 512, 513, 924, 0, 0, 0, 0, 0, 0,
	920, 0, 0, 0, 0, 0, 0, 918, 919, 1717,
	0, 0, 0, 0, 0, 0, 949, 0, 0, 0,
	947, 965, 937, 938, 939, 935, 936, 948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 989, 953, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 515, 1002, 0, 1009, 258, 1008,
	0, 259, 260, 261, 262, 263, 955, 988, 922, 264,
	1047, 1048, 521, 0, 265, 266, 995, 0, 976, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 1028, 283, 284, 979, 977, 978, 985, 981, 980,
	984, 285, 286, 287, 288, 1012, 289, 1006, 1005, 926,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 997, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 932, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 1019, 1020, 944, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 1004, 0, 0, 0,
	320, 0, 321, 0, 2328, 1029, 322, 323, 1017, 1018,
	324, 325, 0, 326, 1026, 0, 954, 327, 0, 328,
	329, 330, 331, 332, 990, 991, 994, 386, 1031, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 0, 1030, 341, 999, 1000, 0, 960,
	0, 343, 1032, 992, 1033, 344, 345, 346, 1034, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 354,
	353, 0, 355, 1027, 1035, 356, 357, 1036, 0, 358,
	359, 360, 983, 982, 361, 362, 363, 364, 0, 365,
	366, 368, 370, 367, 369, 374, 371, 372, 373, 376,
	0, 375, 1037, 377, 378, 379, 382, 383, 381, 1038,
	380, 923, 242, 1039, 384, 945, 993, 385, 1007, 387,
	388, 0, 0, 389, 0, 0, 0, 391, 392, 393,
	0, 0, 394, 395, 543, 1040, 396, 1041, 1021, 397,
	398, 390, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 545, 546, 1022, 409, 548, 410, 411,
	0, 412, 0, 413, 414, 415, 416, 417, 418, 419,
	1003, 421, 420, 422, 0, 0, 0, 0, 0, 0,
	423, 0, 425, 426, 427, 424, 428, 429, 430, 431,
	0, 432, 433, 434, 1042, 435, 436, 437, 438, 933,
	439, 0, 440, 441, 447, 448, 442, 443, 449, 450,
	451, 452, 453, 0, 455, 456, 454, 457, 458, 459,
	986, 460, 444, 445, 461, 462, 1043, 463, 464, 1001,
	0, 465, 0, 466, 467, 468, 469, 446, 470, 475,
	1046, 471, 472, 473, 474, 1023, 0, 477, 478, 921,
	476, 0, 479, 480, 481, 482, 483, 484, 311, 485,
	0, 486, 1013, 1014, 1015, 1016, 0, 493, 0, 487,
	488, 1024, 489, 1025, 943, 490, 491, 492, 0, 494,
	495, 0, 927, 496, 497, 498, 500, 501, 499, 502,
	987, 503, 0, 0, 504, 505, 506, 560, 1010, 1045,
	0, 508, 507, 563, 0, 0, 0, 0, 509, 510,
	564, 511, 512, 513, 924, 0, 0, 0, 0, 0,
	0, 920, 0, 0, 0, 0, 0, 0, 918, 919,
	965, 937, 938, 939, 935, 936, 948, 949, 0, 0,
	0, 947, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 989, 953, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 515, 1002, 0, 1009, 258, 1008, 0,
	259, 260, 261, 262, 263, 955, 988, 922, 264, 1047,
	1048, 521, 0, 265, 266, 995, 0, 976, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	1028, 283, 284, 979, 977, 978, 985, 981, 980, 984,
	285, 286, 287, 288, 1012, 289, 1006, 1005, 926, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 997, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 932, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 1019, 1020, 944, 240, 0, 0, 0,
	0, 0, 317, 318, 319, 1004, 0, 0, 0, 320,
	0, 321, 0, 0, 1029, 322, 323, 1017, 1018, 324,
	325, 0, 326, 1026, 0, 954, 327, 0, 328, 329,
	330, 331, 332, 990, 991, 994, 386, 1031, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 0, 1030, 341, 999, 1000, 0, 960, 0,
	343, 1032, 992, 1033, 344, 345, 346, 1034, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 354, 353,
	0, 355, 1027, 1035, 356, 357, 1036, 0, 358, 359,
	360, 983, 982, 361, 362, 363, 364, 0, 365, 366,
	368, 370, 367, 369, 374, 371, 372, 373, 376, 0,
	375, 1037, 377, 378, 379, 382, 383, 381, 1038, 380,
	923, 242, 1039, 384, 945, 993, 385, 1007, 387, 388,
	0, 0, 389, 0, 0, 0, 391, 392, 393, 0,
	0, 394, 395, 543, 1040, 396, 1041, 1021, 397, 398,
	390, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 545, 546, 1022, 409, 548, 410, 411, 0,
	412, 0, 413, 414, 415, 416, 417, 418, 419, 1003,
	421, 420, 422, 0, 0, 0, 0, 0, 0, 423,
	0, 425, 426, 427, 424, 428, 429, 430, 431, 0,
	432, 433, 434, 1042, 435, 436, 437, 438, 933, 439,
	0, 440, 441, 447, 448, 442, 443, 449, 450, 451,
	452, 453, 0, 455, 456, 454, 457, 458, 459, 986,
	460, 444, 445, 461, 462, 1043, 463, 464, 1001, 0,
	465, 0, 466, 467, 468, 469, 446, 470, 475, 1046,
	471, 472, 473, 474, 1023, 0, 477, 478, 921, 476,
	0, 479, 480, 481, 482, 483, 484, 311, 485, 0,
	486, 1013, 1014, 1015, 1016, 0, 493, 0, 487, 488,
	1024, 489, 1025, 943, 490, 491, 492, 0, 494, 495,
	0, 927, 496, 497, 498, 500, 501, 499, 502, 987,
	503, 0, 0, 504, 505, 506, 560, 1010, 1045, 0,
	508, 507, 563, 0, 0, 0, 0, 509, 510, 564,
	511, 512, 513, 924, 0, 0, 0, 0, 0, 0,
	920, 0, 0, 0, 0, 0, 0, 918, 919, 0,
	0, 0, 0, 0, 0, 0, 949, 1647, 0, 2333,
	947, 965, 937, 938, 939, 935, 936, 948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 989, 953, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 515, 1002, 0, 1009, 258, 1008,
	0, 259, 260, 261, 262, 263, 955, 988, 922, 264,
	1047, 1048, 521, 0, 265, 266, 995, 0, 976, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 1028, 283, 284, 979, 977, 978, 985, 981, 980,
	984, 285, 286, 287, 288, 1012, 289, 1006, 1005, 926,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 997, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 932, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 1019, 1020, 944, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 1004, 0, 0, 0,
	320, 0, 321, 0, 0, 1029, 322, 323, 1017, 1018,
	324, 325, 0, 326, 1026, 0, 954, 327, 0, 328,
	329, 330, 331, 332, 990, 991, 994, 386, 1031, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 0, 1030, 341, 999, 1000, 0, 960,
	0, 343, 1032, 992, 1033, 344, 345, 346, 1034, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 354,
	353, 0, 355, 1027, 1035, 356, 357, 1036, 0, 358,
	359, 360, 983, 982, 361, 362, 363, 364, 0, 365,
	366, 368, 370, 367, 369, 374, 371, 372, 373, 376,
	0, 375, 1037, 377, 378, 379, 382, 383, 381, 1038,
	380, 923, 242, 1039, 384, 945, 993, 385, 1007, 387,
	388, 0, 0, 389, 0, 0, 0, 391, 392, 393,
	0, 0, 394, 395, 543, 1040, 396, 1041, 1021, 397,
	398, 390, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 545, 546, 1022, 409, 548, 410, 411,
	0, 412, 0, 413, 414, 415, 416, 417, 418, 419,
	1003, 421, 420, 422, 0, 0, 0, 0, 0, 0,
	423, 0, 425, 426, 427, 424, 428, 429, 430, 431,
	0, 432, 433, 434, 1042, 435, 436, 437, 438, 933,
	439, 0, 440, 441, 447, 448, 442, 443, 449, 450,
	451, 452, 453, 0, 455, 456, 454, 457, 458, 459,
	986, 460, 444, 445, 461, 462, 1043, 463, 464, 1001,
	0, 465, 0, 466, 467, 468, 469, 446, 470, 475,
	1046, 471, 472, 473, 474, 1023, 0, 477, 478, 921,
	476, 0, 479, 480, 481, 482, 483, 484, 311, 485,
	0, 486, 1013, 1014, 1015, 1016, 0, 493, 0, 487,
	488, 1024, 489, 1025, 943, 490, 491, 492, 0, 494,
	495, 0, 927, 496, 497, 498, 500, 501, 499, 502,
	987, 503, 0, 0, 504, 505, 506, 560, 1010, 1045,
	0, 508, 507, 563, 0, 0, 0, 0, 509, 510,
	564, 511, 512, 513, 924, 0, 0, 0, 0, 0,
	0, 920, 0, 0, 0, 0, 0, 0, 918, 919,
	0, 0, 0, 0, 0, 0, 0, 949, 0, 0,
	2331, 947, 965, 937, 938, 939, 935, 936, 948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 249, 250, 0, 0,
	0, 0, 0, 989, 953, 0, 0, 0, 251, 252,
	254, 253, 255, 256, 257, 515, 1002, 0, 1009, 258,
	1008, 0, 259, 260, 261, 262, 263, 955, 988, 922,
	264, 1047, 1048, 521, 0, 265, 266, 995, 0, 976,
	0, 267, 268, 269, 270, 271, 272, 273, 0, 0,
	275, 276, 277, 274, 0, 278, 0, 279, 280, 281,
	0, 282, 1028, 283, 284, 979, 977, 978, 985, 981,
	980, 984, 285, 286, 287, 288, 1012, 289, 1006, 1005,
	926, 293, 290, 291, 0, 294, 292, 0, 295, 296,
	0, 0, 297, 997, 299, 0, 300, 301, 0, 302,
	303, 0, 304, 305, 932, 306, 307, 308, 310, 312,
	309, 313, 314, 315, 316, 1019, 1020, 944, 240, 0,
	0, 0, 0, 0, 317, 318, 319, 1004, 0, 0,
	0, 320, 0, 321, 0, 0, 1029, 322, 323, 1017,
	1018, 324, 325, 0, 326, 1026, 0, 954, 327, 0,
	328, 329, 330, 331, 332, 990, 991, 994, 386, 1031,
	333, 334, 0, 335, 336, 337, 338, 0, 0, 0,
	241, 339, 340, 342, 0, 1030, 341, 999, 1000, 0,
	960, 0, 343, 1032, 992, 1033, 344, 345, 346, 1034,
	347, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	354, 353, 0, 355, 1027, 1035, 356, 357, 1036, 0,
	358, 359, 360, 983, 982, 361, 362, 363, 364, 0,
	365, 366, 368, 370, 367, 369, 374, 371, 372, 373,
	376, 0, 375, 1037, 377, 378, 379, 382, 383, 381,
	1038, 380, 923, 242, 1039, 384, 945, 993, 385, 1007,
	387, 388, 0, 0, 389, 0, 0, 0, 391, 392,
	393, 0, 0, 394, 395, 543, 1040, 396, 1041, 1021,
	397, 398, 390, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 545, 546, 1022, 409, 548, 410,
	411, 0, 412, 0, 413, 414, 415, 416, 417, 418,
	419, 1003, 421, 420, 422, 0, 0, 0, 0, 0,
	0, 423, 0, 425, 426, 427, 424, 428, 429, 430,
	431, 0, 432, 433, 434, 1042, 435, 436, 437, 438,
	933, 439, 0, 440, 441, 447, 448, 442, 443, 449,
	450, 451, 452, 453, 0, 455, 456, 454, 457, 458,
	459, 986, 460, 444, 445, 461, 462, 1043, 463, 464,
	1001, 0, 465, 0, 466, 467, 468, 469, 446, 470,
	475, 1046, 471, 472, 473, 474, 1023, 0, 477, 478,
	921, 476, 0, 479, 480, 481, 482, 483, 484, 311,
	485, 0, 486, 1013, 1014, 1015, 1016, 0, 493, 0,
	487, 488, 1024, 489, 1025, 943, 490, 491, 492, 0,
	494, 495, 0, 927, 496, 497, 498, 500, 501, 499,
	502, 987, 503, 0, 0, 504, 505, 506, 560, 1010,
	1045, 0, 508, 507, 563, 0, 0, 0, 0, 509,
	510, 564, 511, 512, 513, 924, 0, 0, 0, 0,
	0, 0, 920, 0, 0, 0, 0, 0, 0, 918,
	919, 0, 0, 0, 0, 0, 0, 0, 949, 0,
	0, 2319, 947, 965, 937, 938, 939, 935, 936, 948,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 989, 953, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 515, 1002, 0, 1009,
	258, 1008, 0, 259, 260, 261, 262, 263, 955, 988,
	922, 264, 1047, 1048, 521, 0, 265, 266, 995, 0,
	976, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 1028, 283, 284, 979, 977, 978, 985,
	981, 980, 984, 285, 286, 287, 288, 1012, 289, 1006,
	1005, 926, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 997, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 932, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 1019, 1020, 944, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 1004, 0,
	0, 0, 320, 0, 321, 0, 0, 1029, 322, 323,
	1017, 1018, 324, 325, 0, 326, 1026, 0, 954, 327,
	0, 328, 329, 330, 331, 332, 990, 991, 994, 386,
	1031, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 241, 339, 340, 342, 0, 1030, 341, 999, 1000,
	0, 960, 0, 343, 1032, 992, 1033, 344, 345, 346,
	1034, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 354, 353, 0, 355, 1027, 1035, 356, 357, 1036,
	0, 358, 359, 360, 983, 982, 361, 362, 363, 364,
	0, 365, 366, 368, 370, 367, 369, 374, 371, 372,
	373, 376, 0, 375, 1037, 377, 378, 379, 382, 383,
	381, 1038, 380, 923, 242, 1039, 384, 945, 993, 385,
	1007, 387, 388, 0, 0, 389, 0, 0, 0, 391,
	392, 393, 0, 0, 394, 395, 543, 1040, 396, 1041,
	1021, 397, 398, 390, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 545, 546, 1022, 409, 548,
	410, 411, 0, 412, 0, 413, 414, 415, 416, 417,
	418, 419, 1003, 421, 420, 422, 0, 0, 0, 0,
	0, 0, 423, 0, 425, 426, 427, 424, 428, 429,
	430, 431, 0, 432, 433, 434, 1042, 435, 436, 437,
	438, 933, 439, 0, 440, 441, 447, 448, 442, 443,
	449, 450, 451, 452, 453, 0, 455, 456, 454, 457,
	458, 459, 986, 460, 444, 445, 461, 462, 1043, 463,
	464, 1001, 0, 465, 0, 466, 467, 468, 469, 446,
	470, 475, 1046, 471, 472, 473, 474, 1023, 0, 477,
	478, 921, 476, 0, 479, 480, 481, 482, 483, 484,
	311, 485, 0, 486, 1013, 1014, 1015, 1016, 0, 493,
	0, 487, 488, 1024, 489, 1025, 943, 490, 491, 492,
	0, 494, 495, 0, 927, 496, 497, 498, 500, 501,
	499, 502, 987, 503, 0, 0, 504, 505, 506, 560,
	1010, 1045, 0, 508, 507, 563, 0, 0, 0, 0,
	509, 510, 564, 511, 512, 513, 924, 0, 0, 0,
	0, 0, 0, 920, 0, 0, 0, 0, 0, 0,
	918, 919, 0, 0, 0, 0, 0, 0, 0, 949,
	0, 0, 2308, 947, 965, 937, 938, 939, 935, 936,
	948, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 989, 953, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 515, 1002, 0,
	1009, 258, 1008, 0, 259, 260, 261, 262, 263, 955,
	988, 922, 264, 1047, 1048, 521, 0, 265, 266, 995,
	0, 976, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 1028, 283, 284, 979, 977, 978,
	985, 981, 980, 984, 285, 286, 287, 288, 1012, 289,
	1006, 1005, 926, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 997, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 932, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 1019, 1020, 944,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 1004,
	0, 0, 0, 320, 0, 321, 0, 0, 1029, 322,
	323, 1017, 1018, 324, 325, 0, 326, 1026, 0, 954,
	327, 0, 328, 329, 330, 331, 332, 990, 991, 994,
	386, 1031, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 1030, 341, 999,
	1000, 0, 960, 0, 343, 1032, 992, 1033, 344, 345,
	346, 1034, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 354, 353, 0, 355, 1027, 1035, 356, 357,
	1036, 0, 358, 359, 360, 983, 982, 361, 362, 363,
	364, 0, 365, 366, 368, 370, 367, 369, 374, 371,
	372, 373, 376, 0, 375, 1037, 377, 378, 379, 382,
	383, 381, 1038, 380, 923, 242, 1039, 384, 945, 993,
	385, 1007, 387, 388, 0, 0, 389, 0, 0, 0,
	391, 392, 393, 0, 0, 394, 395, 543, 1040, 396,
	1041, 1021, 397, 398, 390, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 545, 546, 1022, 409,
	548, 410, 411, 0, 412, 0, 413, 414, 415, 416,
	417, 418, 419, 1003, 421, 420, 422, 0, 0, 0,
	0, 0, 0, 423, 0, 425, 426, 427, 424, 428,
	429, 430, 431, 0, 432, 433, 434, 1042, 435, 436,
	437, 438, 933, 439, 0, 440, 441, 447, 448, 442,
	443, 449, 450, 451, 452, 453, 0, 455, 456, 454,
	457, 458, 459, 986, 460, 444, 445, 461, 462, 1043,
	463, 464, 1001, 0, 465, 0, 466, 467, 468, 469,
	446, 470, 475, 1046, 471, 472, 473, 474, 1023, 0,
	477, 478, 921, 476, 0, 479, 480, 481, 482, 483,
	484, 311, 485, 0, 486, 1013, 1014, 1015, 1016, 0,
	493, 0, 487, 488, 1024, 489, 1025, 943, 490, 491,
	492, 0, 494, 495, 0, 927, 496, 497, 498, 500,
	501, 499, 502, 987, 503, 0, 0, 504, 505, 506,
	560, 1010, 1045, 0, 508, 507, 563, 0, 0, 0,
	0, 509, 510, 564, 511, 512, 513, 924, 0, 0,
	0, 0, 0, 0, 920, 0, 0, 0, 0, 0,
	0, 918, 919, 0, 0, 0, 0, 0, 0, 0,
	949, 0, 0, 2306, 947, 2297, 2304, 938, 939, 935,
	936, 948, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 989, 953, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 515, 1002,
	0, 1009, 258, 1008, 0, 259, 260, 261, 262, 263,
	955, 988, 922, 264, 1047, 1048, 521, 0, 265, 266,
	995, 0, 976, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 1028, 283, 284, 979, 977,
	978, 985, 981, 980, 984, 285, 286, 287, 288, 1012,
	2300, 1006, 1005, 926, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 997, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 932, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 1019, 1020,
	944, 240, 0, 0, 0, 0, 0, 317, 318, 319,
	1004, 0, 0, 0, 320, 0, 321, 0, 0, 1029,
	322, 323, 1017, 1018, 324, 325, 0, 326, 1026, 0,
	954, 327, 0, 328, 329, 330, 2301, 332, 990, 991,
	994, 386, 1031, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 241, 339, 340, 342, 0, 1030, 341,
	999, 1000, 0, 960, 0, 343, 1032, 992, 1033, 344,
	345, 346, 1034, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 354, 353, 0, 355, 1027, 1035, 356,
	357, 1036, 0, 358, 359, 360, 983, 982, 361, 362,
	363, 364, 0, 365, 366, 368, 370, 367, 2302, 2299,
	371, 372, 373, 376, 0, 375, 1037, 377, 378, 379,
	382, 383, 381, 1038, 380, 923, 242, 1039, 384, 945,
	993, 385, 1007, 387, 388, 0, 0, 389, 0, 0,
	0, 391, 392, 393, 0, 0, 394, 395, 543, 1040,
	396, 1041, 1021, 397, 398, 390, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 545, 546, 1022,
	409, 548, 410, 411, 0, 412, 0, 413, 414, 415,
	416, 417, 418, 419, 1003, 421, 420, 422, 0, 0,
	0, 0, 0, 0, 423, 0, 425, 426, 427, 424,
	428, 429, 430, 431, 0, 432, 433, 434, 1042, 435,
	436, 437, 438, 933, 439, 0, 440, 441, 447, 448,
	442, 443, 449, 450, 451, 452, 2303, 0, 455, 456,
	454, 457, 458, 459, 986, 460, 444, 445, 461, 462,
	1043, 463, 464, 1001, 0, 465, 0, 466, 467, 468,
	469, 446, 470, 475, 1046, 471, 472, 473, 474, 1023,
	0, 477, 478, 921, 476, 0, 479, 480, 481, 482,
	483, 484, 311, 485, 0, 486, 1013, 1014, 1015, 1016,
	0, 493, 0, 487, 488, 1024, 489, 1025, 943, 490,
	491, 492, 0, 494, 495, 0, 927, 496, 497, 498,
	500, 501, 499, 502, 987, 503, 0, 0, 504, 505,
	506, 560, 1010, 1045, 0, 508, 507, 563, 0, 0,
	0, 0, 509, 510, 564, 511, 2298, 513, 924, 0,
	0, 0, 0, 0, 0, 920, 0, 0, 0, 0,
	0, 0, 918, 919, 0, 0, 0, 0, 0, 0,
	0, 949, 0, 0, 2294, 947, 2297, 2304, 938, 939,
	935, 936, 948, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 989, 953, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 515,
	1002, 0, 1009, 258, 1008, 0, 259, 260, 261, 262,
	263, 955, 988, 922, 264, 1047, 1048, 521, 0, 265,
	266, 995, 0, 976, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 1028, 283, 284, 979,
	977, 978, 985, 981, 980, 984, 285, 286, 287, 288,
	1012, 2300, 1006, 1005, 926, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 997, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 932, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 1019,
	1020, 944, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 1004, 0, 0, 0, 320, 0, 321, 0, 0,
	1029, 322, 323, 1017, 1018, 324, 325, 0, 326, 1026,
	0, 954, 327, 0, 328, 329, 330, 2301, 332, 990,
	991, 994, 386, 1031, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 0, 1030,
	341, 999, 1000, 0, 960, 0, 343, 1032, 992, 1033,
	344, 345, 346, 1034, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 354, 353, 0, 355, 1027, 1035,
	356, 357, 1036, 0, 358, 359, 360, 983, 982, 361,
	362, 363, 364, 0, 365, 366, 368, 370, 367, 2302,
	2299, 371, 372, 373, 376, 0, 375, 1037, 377, 378,
	379, 382, 383, 381, 1038, 380, 923, 242, 1039, 384,
	945, 993, 385, 1007, 387, 388, 0, 0, 389, 0,
	0, 0, 391, 392, 393, 0, 0, 394, 395, 543,
	1040, 396, 1041, 1021, 397, 398, 390, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 545, 546,
	1022, 409, 548, 410, 411, 0, 412, 0, 413, 414,
	415, 416, 417, 418, 419, 1003, 421, 420, 422, 0,
	0, 0, 0, 0, 0, 423, 0, 425, 426, 427,
	424, 428, 429, 430, 431, 0, 432, 433, 434, 1042,
	435, 436, 437, 438, 933, 439, 0, 440, 441, 447,
	448, 442, 443, 449, 450, 451, 452, 2303, 0, 455,
	456, 454, 457, 458, 459, 986, 460, 444, 445, 461,
	462, 1043, 463, 464, 1001, 0, 465, 0, 466, 467,
	468, 469, 446, 470, 475, 1046, 471, 472, 473, 474,
	1023, 0, 477, 478, 921, 476, 0, 479, 480, 481,
	482, 483, 484, 311, 485, 0, 486, 1013, 1014, 1015,
	1016, 0, 493, 0, 487, 488, 1024, 489, 1025, 943,
	490, 491, 492, 0, 494, 495, 0, 927, 496, 497,
	498, 500, 501, 499, 502, 987, 503, 0, 0, 504,
	505, 506, 560, 1010, 1045, 0, 508, 507, 563, 0,
	0, 0, 0, 509, 510, 564, 511, 2298, 513, 924,
	0, 0, 0, 0, 0, 0, 920, 0, 0, 0,
	0, 0, 0, 918, 919, 965, 937, 938, 939, 935,
	936, 948, 949, 0, 0, 0, 947, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 989, 953, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 515, 1002,
	0, 1009, 258, 1008, 0, 259, 260, 261, 262, 263,
	955, 988, 922, 264, 1047, 1048, 521, 0, 265, 266,
	995, 0, 976, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 1028, 283, 284, 979, 977,
	978, 985, 981, 980, 984, 285, 286, 287, 288, 1012,
	289, 1006, 1005, 926, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 997, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 932, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 1019, 1020,
	944, 240, 0, 0, 0, 0, 0, 317, 318, 319,
	1004, 0, 0, 0, 320, 0, 321, 0, 0, 1029,
	322, 323, 1017, 1018, 324, 325, 0, 326, 1026, 0,
	954, 327, 0, 328, 329, 330, 331, 332, 990, 991,
	994, 386, 1031, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 241, 339, 340, 342, 0, 1030, 341,
	999, 1000, 0, 960, 0, 343, 1032, 992, 1033, 344,
	345, 346, 1034, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 354, 353, 0, 355, 1027, 1035, 356,
	357, 1036, 0, 358, 359, 360, 983, 982, 361, 362,
	363, 364, 0, 365, 366, 368, 370, 367, 369, 374,
	371, 372, 373, 376, 0, 375, 1037, 377, 378, 379,
	382, 383, 381, 1038, 380, 923, 242, 1039, 384, 945,
	993, 385, 1007, 387, 388, 0, 0, 389, 0, 0,
	0, 391, 392, 393, 0, 0, 394, 395, 543, 1040,
	396, 1041, 1021, 397, 398, 390, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 545, 546, 1022,
	409, 548, 410, 411, 0, 412, 0, 413, 414, 415,
	416, 417, 418, 419, 1003, 421, 420, 422, 0, 0,
	0, 0, 0, 0, 423, 0, 425, 426, 427, 424,
	428, 429, 430, 431, 0, 432, 433, 434, 1042, 435,
	436, 437, 438, 933, 439, 0, 440, 441, 447, 448,
	442, 443, 449, 450, 451, 452, 453, 0, 455, 456,
	454, 457, 458, 459, 986, 460, 444, 445, 461, 462,
	1043, 463, 464, 1001, 0, 465, 0, 466, 467, 468,
	469, 446, 470, 475, 1046, 471, 472, 473, 474, 1023,
	0, 477, 478, 921, 476, 0, 479, 480, 481, 482,
	483, 484, 311, 485, 0, 486, 1013, 1014, 1015, 1016,
	0, 493, 0, 487, 488, 1024, 489, 1025, 943, 490,
	491, 492, 0, 494, 495, 0, 927, 496, 497, 498,
	500, 501, 499, 502, 987, 503, 0, 0, 504, 505,
	506, 560, 1010, 1045, 0, 508, 507, 563, 0, 0,
	0, 0, 509, 510, 564, 511, 512, 513, 924, 0,
	0, 0, 0, 0, 0, 920, 0, 0, 0, 0,
	0, 0, 918, 919, 0, 0, 0, 0, 0, 1655,
	0, 949, 0, 0, 0, 947, 965, 937, 938, 939,
	935, 936, 948, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 2112,
	249, 250, 0, 0, 0, 0, 0, 989, 953, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 515,
	1002, 0, 1009, 258, 1008, 0, 259, 260, 261, 262,
	263, 955, 988, 922, 264, 1047, 1048, 521, 0, 265,
	266, 995, 0, 976, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 1028, 283, 284, 979,
	977, 978, 985, 981, 980, 984, 285, 286, 287, 288,
	1012, 289, 1006, 1005, 926, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 997, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 932, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 1019,
	1020, 944, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 1004, 0, 0, 0, 320, 0, 321, 0, 0,
	1029, 322, 323, 1017, 1018, 324, 325, 0, 326, 1026,
	0, 954, 327, 0, 328, 329, 330, 331, 332, 990,
	991, 994, 386, 1031, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 0, 1030,
	341, 999, 1000, 0, 960, 0, 343, 1032, 992, 1033,
	344, 345, 346, 1034, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 354, 353, 0, 355, 1027, 1035,
	356, 357, 1036, 0, 358, 359, 360, 983, 982, 361,
	362, 363, 364, 0, 365, 366, 368, 370, 367, 369,
	374, 371, 372, 373, 376, 0, 375, 1037, 377, 378,
	379, 382, 383, 381, 1038, 380, 923, 242, 1039, 384,
	945, 993, 385, 1007, 387, 388, 0, 0, 389, 0,
	0, 0, 391, 392, 393, 0, 0, 394, 395, 543,
	1040, 396, 1041, 1021, 397, 398, 390, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 545, 546,
	1022, 409, 548, 410, 411, 0, 412, 0, 413, 414,
	415, 416, 417, 418, 419, 1003, 421, 420, 422, 0,
	0, 0, 0, 0, 0, 423, 0, 425, 426, 427,
	424, 428, 429, 430, 431, 0, 432, 433, 434, 1042,
	435, 436, 437, 438, 933, 439, 0, 440, 441, 447,
	448, 442, 443, 449, 450, 451, 452, 453, 0, 455,
	456, 454, 457, 458, 459, 986, 460, 444, 445, 461,
	462, 1043, 463, 464, 1001, 0, 465, 0, 466, 467,
	468, 469, 446, 470, 475, 1046, 471, 472, 473, 474,
	1023, 0, 477, 478, 921, 476, 0, 479, 480, 481,
	482, 483, 484, 311, 485, 0, 486, 1013, 1014, 1015,
	1016, 0, 493, 0, 487, 488, 1024, 489, 1025, 943,
	490, 491, 492, 0, 494, 495, 0, 927, 496, 497,
	498, 500, 501, 499, 502, 987, 503, 0, 0, 504,
	505, 506, 560, 1010, 1045, 0, 508, 507, 563, 0,
	0, 0, 0, 509, 510, 564, 511, 512, 513, 924,
	0, 0, 0, 0, 0, 0, 920, 0, 0, 0,
	0, 0, 0, 918, 919, 0, 0, 0, 0, 0,
	0, 0, 949, 0, 0, 1507, 947, 965, 937, 938,
	939, 935, 936, 948, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 989, 953,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	515, 1002, 0, 1009, 258, 1008, 0, 259, 260, 261,
	262, 263, 955, 988, 922, 264, 1047, 1048, 521, 0,
	265, 266, 995, 0, 976, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 1028, 283, 284,
	979, 977, 978, 985, 981, 980, 984, 285, 286, 287,
	288, 1012, 289, 1006, 1005, 926, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 997, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 932,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	1019, 1020, 944, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 1004, 0, 0, 0, 320, 0, 321, 0,
	0, 1029, 322, 323, 1017, 1018, 324, 325, 0, 326,
	1026, 0, 954, 327, 0, 328, 329, 330, 331, 332,
	990, 991, 994, 386, 1031, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 241, 339, 340, 342, 0,
	1030, 341, 999, 1000, 0, 960, 0, 343, 1032, 992,
	1033, 344, 345, 346, 1034, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 354, 353, 0, 355, 1027,
	1035, 356, 357, 1036, 0, 358, 359, 360, 983, 982,
	361, 362, 363, 364, 0, 365, 366, 368, 370, 367,
	369, 374, 371, 372, 373, 376, 0, 375, 1037, 377,
	378, 379, 382, 383, 381, 1038, 380, 923, 242, 1039,
	384, 945, 993, 385, 1007, 387, 388, 0, 0, 389,
	0, 0, 0, 391, 392, 393, 0, 0, 394, 395,
	543, 1040, 396, 1041, 1021, 397, 398, 390, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 545,
	546, 1022, 409, 548, 410, 411, 0, 412, 0, 413,
	414, 415, 416, 417, 418, 419, 1003, 421, 420, 422,
	0, 0, 0, 0, 0, 0, 423, 0, 425, 426,
	427, 424, 428, 429, 430, 431, 0, 432, 433, 434,
	1042, 435, 436, 437, 438, 933, 439, 0, 440, 441,
	447, 448, 442, 443, 449, 450, 451, 452, 453, 0,
	455, 456, 454, 457, 458, 459, 986, 460, 444, 445,
	461, 462, 1043, 463, 464, 1001, 0, 465, 0, 466,
	467, 468, 469, 446, 470, 475, 1046, 471, 472, 473,
	474, 1023, 0, 477, 478, 921, 476, 0, 479, 480,
	481, 482, 483, 484, 311, 485, 0, 486, 1013, 1014,
	1015, 1016, 0, 493, 0, 487, 488, 1024, 489, 1025,
	943, 490, 491, 492, 0, 494, 495, 0, 927, 496,
	497, 498, 500, 501, 499, 502, 987, 503, 0, 0,
	504, 505, 506, 560, 1010, 1045, 0, 508, 507, 563,
	0, 0, 0, 0, 509, 510, 564, 511, 512, 513,
	924, 0, 0, 0, 0, 0, 0, 920, 0, 0,
	0, 0, 0, 0, 918, 919, 0, 0, 0, 0,
	0, 0, 0, 949, 0, 0, 1447, 947, 965, 937,
	938, 939, 935, 936, 948, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 989,
	953, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 515, 1002, 0, 1009, 258, 1008, 0, 259, 260,
	261, 262, 263, 955, 988, 922, 264, 1047, 1048, 521,
	0, 265, 266, 995, 0, 976, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 1028, 283,
	284, 979, 977, 978, 985, 981, 980, 984, 285, 286,
	287, 288, 1012, 289, 1006, 1005, 926, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 997,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	932, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 1019, 1020, 944, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 1004, 0, 0, 0, 320, 0, 321,
	0, 0, 1029, 322, 323, 1017, 1018, 324, 325, 0,
	326, 1026, 0, 954, 327, 0, 328, 329, 330, 331,
	332, 990, 991, 994, 386, 1031, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	0, 1030, 341, 999, 1000, 0, 960, 0, 343, 1032,
	992, 1033, 344, 345, 346, 1034, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 354, 353, 0, 355,
	1027, 1035, 356, 357, 1036, 0, 358, 359, 360, 983,
	982, 361, 362, 363, 364, 0, 365, 366, 368, 370,
	367, 369, 374, 371, 372, 373, 376, 0, 375, 1037,
	377, 378, 379, 382, 383, 381, 1038, 380, 923, 242,
	1039, 384, 945, 993, 385, 1007, 387, 388, 0, 0,
	389, 0, 0, 0, 391, 392, 393, 0, 0, 394,
	395, 543, 1040, 396, 1041, 1021, 397, 398, 390, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	545, 546, 1022, 409, 548, 410, 411, 0, 412, 0,
	413, 414, 415, 416, 417, 418, 419, 1003, 421, 420,
	422, 0, 0, 0, 0, 0, 0, 423, 0, 425,
	426, 427, 424, 428, 429, 430, 431, 0, 432, 433,
	434, 1042, 435, 436, 437, 438, 933, 439, 0, 440,
	441, 447, 448, 442, 443, 449, 450, 451, 452, 453,
	0, 455, 456, 454, 457, 458, 459, 986, 460, 444,
	445, 461, 462, 1043, 463, 464, 1001, 0, 465, 0,
	466, 467, 468, 469, 446, 470, 475, 1046, 471, 472,
	473, 474, 1023, 0, 477, 478, 921, 476, 0, 479,
	480, 481, 482, 483, 484, 311, 485, 0, 486, 1013,
	1014, 1015, 1016, 0, 493, 0, 487, 488, 1024, 489,
	1025, 943, 490, 491, 492, 0, 494, 495, 0, 927,
	496, 497, 498, 500, 501, 499, 502, 987, 503, 0,
	0, 504, 505, 506, 560, 1010, 1045, 0, 508, 507,
	563, 0, 0, 0, 0, 509, 510, 564, 511, 512,
	513, 924, 0, 0, 0, 0, 0, 0, 920, 0,
	0, 0, 0, 0, 0, 918, 919, 0, 0, 0,
	0, 0, 0, 0, 949, 0, 0, 1442, 947, 965,
	937, 938, 939, 935, 936, 948, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	989, 953, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 515, 1002, 0, 1009, 258, 1008, 0, 259,
	260, 261, 262, 263, 955, 988, 922, 264, 1047, 1048,
	521, 0, 265, 266, 995, 0, 976, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 1028,
	283, 284, 979, 977, 978, 985, 981, 980, 984, 285,
	286, 287, 288, 1012, 289, 1006, 1005, 926, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	997, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 932, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 1019, 1020, 944, 240, 0, 0, 0, 0,
	0, 317, 318, 319, 1004, 0, 0, 0, 320, 0,
	321, 0, 0, 1029, 322, 323, 1017, 1018, 324, 325,
	0, 326, 1026, 0, 954, 327, 0, 328, 329, 330,
	331, 332, 990, 991, 994, 386, 1031, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 241, 339, 340,
	342, 0, 1030, 341, 999, 1000, 0, 960, 0, 343,
	1032, 992, 1033, 344, 345, 346, 1034, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 354, 353, 0,
	355, 1027, 1035, 356, 357, 1036, 0, 358, 359, 360,
	983, 982, 361, 362, 363, 364, 0, 365, 366, 368,
	370, 367, 369, 374, 371, 372, 373, 376, 0, 375,
	1037, 377, 378, 379, 382, 383, 381, 1038, 380, 923,
	242, 1039, 384, 945, 993, 385, 1007, 387, 388, 0,
	0, 389, 0, 0, 0, 391, 392, 393, 0, 0,
	394, 395, 543, 1040, 396, 1041, 1021, 397, 398, 390,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	408, 545, 546, 1022, 409, 548, 410, 411, 0, 412,
	0, 413, 414, 415, 416, 417, 418, 419, 1003, 421,
	420, 422, 0, 0, 0, 0, 0, 0, 423, 0,
	425, 426, 427, 424, 428, 429, 430, 431, 0, 432,
	433, 434, 1042, 435, 436, 437, 438, 933, 439, 0,
	440, 441, 447, 448, 442, 443, 449, 450, 451, 452,
	453, 0, 455, 456, 454, 457, 458, 459, 986, 460,
	444, 445, 461, 462, 1043, 463, 464, 1001, 0, 465,
	0, 466, 467, 468, 469, 446, 470, 475, 1046, 471,
	472, 473, 474, 1023, 0, 477, 478, 921, 476, 0,
	479, 480, 481, 482, 483, 484, 311, 485, 0, 486,
	1013, 1014, 1015, 1016, 0, 493, 0, 487, 488, 1024,
	489, 1025, 943, 490, 491, 492, 0, 494, 495, 0,
	927, 496, 497, 498, 500, 501, 499, 502, 987, 503,
	0, 0, 504, 505, 506, 560, 1010, 1045, 0, 508,
	507, 563, 0, 0, 0, 0, 509, 510, 564, 511,
	512, 513, 924, 0, 0, 0, 0, 0, 0, 920,
	0, 0, 0, 0, 0, 0, 918, 919, 0, 0,
	0, 0, 0, 0, 0, 949, 0, 0, 1433, 947,
	965, 937, 938, 939, 935, 936, 948, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 989, 953, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 515, 1002, 0, 1009, 258, 1008, 0,
	259, 260, 261, 262, 263, 955, 988, 922, 264, 1047,
	1048, 521, 0, 265, 266, 995, 0, 976, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	1028, 283, 284, 979, 977, 978, 985, 981, 980, 984,
	285, 286, 287, 288, 1012, 289, 1006, 1005, 926, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 997, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 932, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 1019, 1020, 944, 240, 0, 0, 0,
	0, 0, 317, 318, 319, 1004, 0, 0, 0, 320,
	0, 321, 0, 0, 1029, 322, 323, 1017, 1018, 324,
	325, 0, 326, 1026, 0, 954, 327, 0, 328, 329,
	330, 331, 332, 990, 991, 994, 386, 1031, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 0, 1030, 341, 999, 1000, 0, 960, 0,
	343, 1032, 992, 1033, 344, 345, 346, 1034, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 354, 353,
	0, 355, 1027, 1035, 356, 357, 1036, 0, 358, 359,
	360, 983, 982, 361, 362, 363, 364, 0, 365, 366,
	368, 370, 367, 369, 374, 371, 372, 373, 376, 0,
	375, 1037, 377, 378, 379, 382, 383, 381, 1038, 380,
	923, 242, 1039, 384, 945, 993, 385, 1007, 387, 388,
	0, 0, 389, 0, 0, 0, 391, 392, 393, 0,
	0, 394, 395, 543, 1040, 396, 1041, 1021, 397, 398,
	390, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 545, 546, 1022, 409, 548, 410, 411, 0,
	412, 0, 413, 414, 415, 416, 417, 418, 419, 1003,
	421, 420, 422, 0, 0, 0, 0, 0, 0, 423,
	0, 425, 426, 427, 424, 428, 429, 430, 431, 0,
	432, 433, 434, 1042, 435, 436, 437, 438, 933, 439,
	0, 440, 441, 447, 448, 442, 443, 449, 450, 451,
	452, 453, 0, 455, 456, 454, 457, 458, 459, 986,
	460, 444, 445, 461, 462, 1043, 463, 464, 1001, 0,
	465, 0, 466, 467, 468, 469, 446, 470, 475, 1046,
	471, 472, 473, 474, 1023, 0, 477, 478, 921, 476,
	0, 479, 480, 481, 482, 483, 484, 311, 485, 0,
	486, 1013, 1014, 1015, 1016, 0, 493, 0, 487, 488,
	1024, 489, 1025, 943, 490, 491, 492, 0, 494, 495,
	0, 927, 496, 497, 498, 500, 501, 499, 502, 987,
	503, 0, 0, 504, 505, 506, 560, 1010, 1045, 0,
	508, 507, 563, 0, 0, 0, 0, 509, 510, 564,
	511, 512, 513, 924, 0, 0, 0, 0, 0, 0,
	920, 0, 0, 0, 0, 0, 0, 918, 919, 0,
	0, 0, 0, 0, 0, 0, 949, 0, 0, 1428,
	947, 965, 937, 938, 939, 935, 936, 948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 989, 953, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 515, 1002, 0, 1009, 258, 1008,
	0, 259, 260, 261, 262, 263, 955, 988, 922, 264,
	1047, 1048, 521, 0, 265, 266, 995, 0, 976, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 1028, 283, 284, 979, 977, 978, 985, 981, 980,
	984, 285, 286, 287, 288, 1012, 289, 1006, 1005, 926,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 997, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 932, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 1019, 1020, 944, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 1004, 0, 0, 0,
	320, 0, 321, 0, 0, 1029, 322, 323, 1017, 1018,
	324, 325, 0, 326, 1026, 0, 954, 327, 0, 328,
	329, 330, 331, 332, 990, 991, 994, 386, 1031, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 0, 1030, 341, 999, 1000, 0, 960,
	0, 343, 1032, 992, 1033, 344, 345, 346, 1034, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 354,
	353, 0, 355, 1027, 1035, 356, 357, 1036, 0, 358,
	359, 360, 983, 982, 361, 362, 363, 364, 0, 365,
	366, 368, 370, 367, 369, 374, 371, 372, 373, 376,
	0, 375, 1037, 377, 378, 379, 382, 383, 381, 1038,
	380, 923, 242, 1039, 384, 945, 993, 385, 1007, 387,
	388, 0, 0, 389, 0, 0, 0, 391, 392, 393,
	0, 0, 394, 395, 543, 1040, 396, 1041, 1021, 397,
	398, 390, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 545, 546, 1022, 409, 548, 410, 411,
	0, 412, 0, 413, 414, 415, 416, 417, 418, 419,
	1003, 421, 420, 422, 0, 0, 0, 0, 0, 0,
	423, 0, 425, 426, 427, 424, 428, 429, 430, 431,
	0, 432, 433, 434, 1042, 435, 436, 437, 438, 933,
	439, 0, 440, 441, 447, 448, 442, 443, 449, 450,
	451, 452, 453, 0, 455, 456, 454, 457, 458, 459,
	986, 460, 444, 445, 461, 462, 1043, 463, 464, 1001,
	0, 465, 0, 466, 467, 468, 469, 446, 470, 475,
	1046, 471, 472, 473, 474, 1023, 0, 477, 478, 921,
	476, 0, 479, 480, 481, 482, 483, 484, 311, 485,
	0, 486, 1013, 1014, 1015, 1016, 0, 493, 0, 487,
	488, 1024, 489, 1025, 943, 490, 491, 492, 0, 494,
	495, 0, 927, 496, 497, 498, 500, 501, 499, 502,
	987, 503, 0, 0, 504, 505, 506, 560, 1010, 1045,
	0, 508, 507, 563, 0, 0, 0, 0, 509, 510,
	564, 511, 512, 513, 924, 0, 0, 0, 0, 0,
	0, 920, 0, 0, 0, 0, 0, 0, 918, 919,
	0, 0, 0, 0, 0, 0, 0, 949, 0, 0,
	1410, 947, 965, 937, 938, 939, 935, 936, 948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 249, 250, 0, 0,
	0, 0, 0, 989, 953, 0, 0, 0, 251, 252,
	254, 253, 255, 256, 257, 515, 1002, 0, 1009, 258,
	1008, 0, 259, 260, 261, 262, 263, 955, 988, 922,
	264, 1047, 1048, 521, 0, 265, 266, 995, 0, 976,
	0, 267, 268, 269, 270, 271, 272, 273, 0, 0,
	275, 276, 277, 274, 0, 278, 0, 279, 280, 281,
	0, 282, 1028, 283, 284, 979, 977, 978, 985, 981,
	980, 984, 285, 286, 287, 288, 1012, 289, 1006, 1005,
	926, 293, 290, 291, 0, 294, 292, 0, 295, 296,
	0, 0, 297, 997, 299, 0, 300, 301, 0, 302,
	303, 0, 304, 305, 932, 306, 307, 308, 310, 312,
	309, 313, 314, 315, 316, 1019, 1020, 944, 240, 0,
	0, 0, 0, 0, 317, 318, 319, 1004, 0, 0,
	0, 320, 0, 321, 0, 0, 1029, 322, 323, 1017,
	1018, 324, 325, 0, 326, 1026, 0, 954, 327, 0,
	328, 329, 330, 331, 332, 990, 991, 994, 386, 1031,
	333, 334, 0, 335, 336, 337, 338, 0, 0, 0,
	241, 339, 340, 342, 0, 1030, 341, 999, 1000, 0,
	960, 0, 343, 1032, 992, 1033, 344, 345, 346, 1034,
	347, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	354, 353, 0, 355, 1027, 1035, 356, 357, 1036, 0,
	358, 359, 360, 983, 982, 361, 362, 363, 364, 0,
	365, 366, 368, 370, 367, 369, 374, 371, 372, 373,
	376, 0, 375, 1037, 377, 378, 379, 382, 383, 381,
	1038, 380, 923, 242, 1039, 384, 945, 993, 385, 1007,
	387, 388, 0, 0, 389, 0, 0, 0, 391, 392,
	393, 0, 0, 394, 395, 543, 1040, 396, 1041, 1021,
	397, 398, 390, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 545, 546, 1022, 409, 548, 410,
	411, 0, 412, 0, 413, 414, 415, 416, 417, 418,
	419, 1003, 421, 420, 422, 0, 0, 0, 0, 0,
	0, 423, 0, 425, 426, 427, 424, 428, 429, 430,
	431, 0, 432, 433, 434, 1042, 435, 436, 437, 438,
	933, 439, 0, 440, 441, 447, 448, 442, 443, 449,
	450, 451, 452, 453, 0, 455, 456, 454, 457, 458,
	459, 986, 460, 444, 445, 461, 462, 1043, 463, 464,
	1001, 0, 465, 0, 466, 467, 468, 469, 446, 470,
	475, 1046, 471, 472, 473, 474, 1023, 0, 477, 478,
	921, 476, 0, 479, 480, 481, 482, 483, 484, 311,
	485, 0, 486, 1013, 1014, 1015, 1016, 0, 493, 0,
	487, 488, 1024, 489, 1025, 943, 490, 491, 492, 0,
	494, 495, 0, 927, 496, 497, 498, 500, 501, 499,
	502, 987, 503, 0, 0, 504, 505, 506, 560, 1010,
	1045, 0, 508, 507, 563, 0, 0, 0, 0, 509,
	510, 564, 511, 512, 513, 924, 0, 0, 0, 0,
	0, 0, 920, 0, 0, 0, 0, 0, 0, 918,
	919, 0, 0, 0, 0, 0, 0, 0, 949, 0,
	0, 1297, 947, 965, 937, 938, 939, 935, 936, 948,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 989, 953, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 515, 1002, 0, 1009,
	258, 1008, 0, 259, 260, 261, 262, 263, 955, 988,
	922, 264, 1047, 1048, 521, 0, 265, 266, 995, 0,
	976, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 1028, 283, 284, 979, 977, 978, 985,
	981, 980, 984, 285, 286, 287, 288, 1012, 289, 1006,
	1005, 926, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 997, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 932, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 1019, 1020, 944, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 1004, 0,
	0, 0, 320, 0, 321, 0, 0, 1029, 322, 323,
	1017, 1018, 324, 325, 0, 326, 1026, 0, 954, 327,
	0, 328, 329, 330, 331, 332, 1296, 991, 994, 386,
	1031, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 241, 339, 340, 342, 0, 1030, 341, 999, 1000,
	0, 960, 0, 343, 1032, 992, 1033, 344, 345, 346,
	1034, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 354, 353, 0, 355, 1027, 1035, 356, 357, 1036,
	0, 358, 359, 360, 983, 982, 361, 362, 363, 364,
	0, 365, 366, 368, 370, 367, 369, 374, 371, 372,
	373, 376, 0, 375, 1037, 377, 378, 379, 382, 383,
	381, 1038, 380, 923, 242, 1039, 384, 945, 993, 385,
	1007, 387, 388, 0, 0, 389, 0, 0, 0, 391,
	392, 393, 0, 0, 394, 395, 543, 1040, 396, 1041,
	1021, 397, 398, 390, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 545, 546, 1022, 409, 548,
	410, 411, 0, 412, 0, 413, 414, 415, 416, 417,
	418, 419, 1003, 421, 420, 422, 0, 0, 0, 0,
	0, 0, 423, 0, 425, 426, 427, 424, 428, 429,
	430, 431, 0, 432, 433, 434, 1042, 435, 436, 437,
	438, 933, 439, 0, 440, 441, 447, 448, 442, 443,
	449, 450, 451, 452, 453, 0, 455, 456, 454, 457,
	458, 459, 986, 460, 444, 445, 461, 462, 1043, 463,
	464, 1001, 0, 465, 0, 466, 467, 468, 469, 446,
	470, 475, 1046, 471, 472, 473, 474, 1023, 0, 477,
	478, 921, 476, 0, 479, 480, 481, 482, 483, 484,
	311, 485, 0, 486, 1013, 1014, 1015, 1016, 0, 493,
	0, 487, 488, 1024, 489, 1025, 943, 490, 491, 492,
	0, 494, 495, 0, 927, 496, 497, 498, 500, 501,
	499, 502, 987, 503, 0, 0, 504, 505, 506, 560,
	1010, 1045, 0, 508, 507, 563, 0, 0, 0, 0,
	509, 510, 564, 511, 512, 513, 924, 0, 0, 0,
	0, 0, 0, 920, 0, 0, 0, 0, 0, 0,
	918, 919, 0, 0, 0, 0, 0, 0, 0, 949,
	0, 0, 1291, 947, 965, 937, 938, 939, 935, 936,
	948, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 989, 953, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 515, 1002, 0,
	1009, 258, 1008, 0, 259, 260, 261, 262, 263, 955,
	988, 922, 264, 1047, 1048, 521, 0, 265, 266, 995,
	0, 976, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 1028, 283, 284, 979, 977, 978,
	985, 981, 980, 984, 285, 286, 287, 288, 1012, 289,
	1006, 1005, 926, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 997, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 932, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 1019, 1020, 944,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 1004,
	0, 0, 0, 320, 0, 321, 0, 0, 1029, 322,
	323, 1017, 1018, 324, 325, 0, 326, 1026, 0, 954,
	327, 0, 328, 329, 330, 331, 332, 1290, 991, 994,
	386, 1031, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 1030, 341, 999,
	1000, 0, 960, 0, 343, 1032, 992, 1033, 344, 345,
	346, 1034, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 354, 353, 0, 355, 1027, 1035, 356, 357,
	1036, 0, 358, 359, 360, 983, 982, 361, 362, 363,
	364, 0, 365, 366, 368, 370, 367, 369, 374, 371,
	372, 373, 376, 0, 375, 1037, 377, 378, 379, 382,
	383, 381, 1038, 380, 923, 242, 1039, 384, 945, 993,
	385, 1007, 387, 388, 0, 0, 389, 0, 0, 0,
	391, 392, 393, 0, 0, 394, 395, 543, 1040, 396,
	1041, 1021, 397, 398, 390, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 545, 546, 1022, 409,
	548, 410, 411, 0, 412, 0, 413, 414, 415, 416,
	417, 418, 419, 1003, 421, 420, 422, 0, 0, 0,
	0, 0, 0, 423, 0, 425, 426, 427, 424, 428,
	429, 430, 431, 0, 432, 433, 434, 1042, 435, 436,
	437, 438, 933, 439, 0, 440, 441, 447, 448, 442,
	443, 449, 450, 451, 452, 453, 0, 455, 456, 454,
	457, 458, 459, 986, 460, 444, 445, 461, 462, 1043,
	463, 464, 1001, 0, 465, 0, 466, 467, 468, 469,
	446, 470, 475, 1046, 471, 472, 473, 474, 1023, 0,
	477, 478, 921, 476, 0, 479, 480, 481, 482, 483,
	484, 311, 485, 0, 486, 1013, 1014, 1015, 1016, 0,
	493, 0, 487, 488, 1024, 489, 1025, 943, 490, 491,
	492, 0, 494, 495, 0, 927, 496, 497, 498, 500,
	501, 499, 502, 987, 503, 0, 0, 504, 505, 506,
	560, 1010, 1045, 0, 508, 507, 563, 0, 0, 0,
	0, 509, 510, 564, 511, 512, 513, 924, 0, 0,
	0, 0, 0, 0, 920, 0, 0, 0, 0, 0,
	0, 918, 919, 0, 0, 0, 0, 0, 0, 0,
	949, 0, 0, 1284, 947, 965, 937, 938, 939, 935,
	936, 948, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 989, 953, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 515, 1002,
	0, 1009, 258, 1008, 0, 259, 260, 261, 262, 263,
	955, 988, 922, 264, 1047, 1048, 521, 0, 265, 266,
	995, 0, 976, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 1028, 283, 284, 979, 977,
	978, 985, 981, 980, 984, 285, 286, 287, 288, 1012,
	289, 1006, 1005, 926, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 997, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 932, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 1019, 1020,
	944, 240, 0, 0, 0, 0, 0, 317, 318, 319,
	1004, 0, 0, 0, 320, 0, 321, 0, 0, 1029,
	322, 323, 1017, 1018, 324, 325, 0, 326, 1026, 0,
	954, 327, 0, 328, 329, 330, 331, 332, 990, 991,
	994, 386, 1031, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 241, 339, 340, 342, 0, 1030, 341,
	999, 1000, 0, 960, 0, 343, 1032, 992, 1033, 344,
	345, 346, 1034, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 354, 353, 0, 355, 1027, 1035, 356,
	357, 1036, 0, 358, 359, 360, 983, 982, 361, 362,
	363, 364, 0, 365, 366, 368, 370, 367, 369, 374,
	371, 372, 373, 376, 0, 375, 1037, 377, 378, 379,
	382, 383, 381, 1038, 380, 923, 242, 1039, 384, 945,
	993, 385, 1007, 387, 388, 0, 0, 389, 0, 0,
	0, 391, 392, 393, 0, 0, 394, 395, 543, 1040,
	396, 1041, 1021, 397, 398, 390, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 545, 546, 1022,
	409, 548, 410, 411, 0, 412, 0, 413, 414, 415,
	416, 417, 418, 419, 1003, 421, 420, 422, 0, 0,
	0, 0, 0, 0, 423, 0, 425, 426, 427, 424,
	428, 429, 430, 431, 0, 432, 433, 434, 1042, 435,
	436, 437, 438, 933, 439, 0, 440, 441, 447, 448,
	442, 443, 449, 450, 451, 452, 453, 0, 455, 456,
	454, 457, 458, 459, 986, 460, 444, 445, 461, 462,
	1043, 463, 464, 1001, 0, 465, 0, 466, 467, 468,
	469, 446, 470, 475, 1046, 471, 472, 473, 474, 1023,
	0, 477, 478, 921, 476, 0, 479, 480, 481, 482,
	483, 484, 311, 485, 0, 486, 1013, 1014, 1015, 1016,
	0, 493, 0, 487, 488, 1024, 489, 1025, 943, 490,
	491, 492, 0, 494, 495, 0, 927, 496, 497, 498,
	500, 501, 499, 502, 987, 503, 0, 0, 504, 505,
	506, 560, 1010, 1045, 0, 508, 507, 563, 0, 0,
	0, 0, 509, 510, 564, 511, 512, 513, 924, 0,
	0, 0, 0, 0, 0, 920, 0, 0, 0, 0,
	0, 0, 918, 919, 965, 937, 938, 939, 935, 936,
	948, 949, 0, 0, 0, 947, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 989, 953, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 515, 1002, 0,
	1009, 258, 1008, 0, 259, 260, 261, 262, 263, 955,
	988, 922, 264, 1047, 1048, 521, 0, 265, 266, 995,
	0, 976, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 1028, 283, 284, 979, 977, 978,
	985, 981, 980, 984, 285, 286, 287, 288, 1012, 289,
	1006, 1005, 926, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 997, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 932, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 1019, 1020, 944,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 1004,
	0, 0, 0, 320, 0, 321, 0, 0, 1029, 322,
	323, 1017, 1018, 324, 325, 0, 326, 1026, 0, 954,
	327, 0, 328, 329, 330, 331, 332, 990, 991, 994,
	386, 1031, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 1030, 341, 999,
	1000, 0, 960, 0, 343, 1032, 992, 1033, 344, 345,
	346, 1034, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 354, 353, 0, 355, 1027, 1035, 356, 357,
	1036, 0, 358, 359, 360, 983, 982, 361, 362, 363,
	364, 0, 365, 366, 368, 370, 367, 369, 374, 371,
	372, 373, 376, 0, 375, 1037, 377, 378, 379, 382,
	383, 381, 1038, 380, 923, 242, 1039, 384, 945, 993,
	385, 1007, 387, 388, 0, 0, 389, 0, 0, 0,
	391, 392, 393, 0, 0, 394, 395, 543, 1040, 396,
	1041, 1021, 397, 398, 390, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 545, 546, 1022, 409,
	548, 410, 411, 0, 412, 0, 413, 414, 415, 416,
	417, 418, 419, 1003, 421, 420, 422, 0, 0, 0,
	0, 0, 0, 423, 0, 425, 426, 427, 424, 428,
	429, 430, 431, 0, 432, 433, 434, 1042, 435, 436,
	437, 438, 933, 439, 0, 440, 441, 447, 448, 442,
	443, 449, 450, 451, 452, 453, 0, 455, 456, 454,
	457, 458, 459, 986, 460, 444, 445, 461, 462, 1043,
	463, 464, 1001, 0, 465, 0, 466, 467, 468, 469,
	446, 470, 475, 1046, 471, 472, 473, 474, 1023, 0,
	477, 478, 921, 476, 0, 479, 480, 481, 482, 483,
	484, 311, 485, 0, 486, 1013, 1014, 1015, 1016, 0,
	493, 0, 487, 488, 1024, 489, 1025, 943, 490, 491,
	492, 0, 494, 495, 0, 927, 496, 497, 498, 500,
	501, 499, 502, 987, 503, 0, 0, 504, 505, 506,
	560, 1010, 1045, 0, 508, 507, 563, 0, 0, 0,
	0, 509, 510, 564, 511, 512, 513, 924, 0, 0,
	0, 0, 0, 0, 920, 0, 0, 0, 0, 0,
	0, 918, 919, 965, 937, 938, 939, 935, 936, 948,
	949, 0, 0, 0, 947, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 989, 953, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 515, 1002, 0, 1009,
	258, 1008, 0, 259, 260, 261, 262, 263, 955, 988,
	922, 264, 1047, 1048, 521, 0, 265, 266, 995, 0,
	976, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 1028, 283, 3929, 979, 977, 978, 985,
	981, 980, 984, 285, 286, 287, 288, 1012, 289, 1006,
	1005, 926, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 997, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 932, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 1019, 1020, 944, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 1004, 0,
	0, 0, 320, 0, 321, 0, 0, 1029, 322, 323,
	1017, 1018, 324, 325, 0, 326, 1026, 0, 954, 327,
	0, 328, 329, 330, 331, 332, 990, 991, 994, 386,
	1031, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 241, 339, 340, 342, 0, 1030, 341, 999, 1000,
	0, 960, 0, 343, 1032, 992, 1033, 344, 345, 346,
	1034, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 354, 353, 0, 355, 1027, 1035, 356, 357, 1036,
	0, 358, 359, 360, 983, 982, 361, 362, 363, 364,
	0, 365, 366, 368, 370, 367, 369, 374, 371, 372,
	373, 376, 0, 375, 1037, 377, 378, 379, 382, 383,
	381, 1038, 380, 923, 242, 1039, 384, 945, 993, 385,
	1007, 387, 388, 0, 0, 389, 0, 0, 0, 391,
	392, 393, 0, 0, 394, 395, 543, 1040, 396, 1041,
	1021, 397, 398, 390, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 545, 546, 1022, 409, 548,
	410, 411, 0, 412, 0, 413, 414, 415, 416, 417,
	418, 419, 1003, 421, 420, 422, 0, 0, 0, 0,
	0, 0, 423, 0, 425, 426, 427, 424, 428, 429,
	430, 431, 0, 432, 433, 434, 1042, 435, 436, 437,
	438, 933, 439, 0, 440, 441, 447, 448, 442, 443,
	449, 450, 451, 452, 453, 0, 455, 456, 454, 457,
	458, 459, 986, 460, 444, 445, 461, 462, 1043, 463,
	464, 1001, 0, 465, 0, 466, 467, 468, 469, 446,
	470, 475, 1046, 471, 472, 473, 474, 1023, 0, 477,
	478, 921, 476, 0, 479, 480, 481, 482, 483, 484,
	311, 485, 0, 486, 1013, 1014, 1015, 1016, 0, 493,
	0, 487, 488, 1024, 489, 1025, 943, 490, 491, 492,
	0, 3928, 495, 0, 927, 496, 497, 498, 500, 501,
	499, 502, 987, 503, 0, 0, 504, 505, 506, 560,
	1010, 1045, 0, 508, 507, 563, 0, 0, 0, 0,
	509, 510, 564, 511, 512, 513, 924, 0, 0, 0,
	0, 0, 0, 920, 0, 0, 0, 0, 0, 0,
	918, 919, 965, 937, 938, 939, 935, 936, 948, 949,
	0, 0, 0, 947, 0, 0, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 249, 250, 0, 0,
	0, 0, 0, 989, 953, 0, 0, 0, 251, 252,
	254, 253, 255, 256, 257, 3927, 1002, 0, 1009, 258,
	1008, 0, 259, 260, 261, 262, 263, 955, 988, 922,
	264, 1047, 1048, 521, 0, 265, 266, 995, 0, 976,
	0, 267, 268, 269, 270, 271, 272, 273, 0, 0,
	275, 276, 277, 274, 0, 278, 0, 279, 280, 281,
	0, 282, 1028, 283, 3929, 979, 977, 978, 985, 981,
	980, 984, 285, 286, 287, 288, 1012, 289, 1006, 1005,
	926, 293, 290, 291, 0, 294, 292, 0, 295, 296,
	0, 0, 297, 997, 299, 0, 300, 301, 0, 302,
	303, 0, 304, 305, 932, 306, 307, 308, 310, 312,
	309, 313, 314, 315, 316, 1019, 1020, 944, 240, 0,
	0, 0, 0, 0, 317, 318, 319, 1004, 0, 0,
	0, 320, 0, 321, 0, 0, 1029, 322, 323, 1017,
	1018, 324, 325, 0, 326, 1026, 0, 954, 327, 0,
	328, 329, 330, 331, 332, 990, 991, 994, 386, 1031,
	333, 334, 0, 335, 336, 337, 338, 0, 0, 0,
	241, 339, 340, 342, 0, 1030, 341, 999, 1000, 0,
	960, 0, 343, 1032, 992, 1033, 344, 345, 346, 1034,
	347, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	354, 353, 0, 355, 1027, 1035, 356, 357, 1036, 0,
	358, 359, 360, 983, 982, 361, 362, 363, 364, 0,
	365, 366, 368, 370, 367, 369, 374, 371, 372, 373,
	376, 0, 375, 1037, 377, 378, 379, 382, 383, 381,
	1038, 380, 923, 242, 1039, 384, 945, 993, 385, 1007,
	387, 388, 0, 0, 389, 0, 0, 0, 391, 392,
	393, 0, 0, 394, 395, 543, 1040, 396, 1041, 1021,
	397, 398, 390, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 545, 546, 1022, 409, 548, 410,
	411, 0, 412, 0, 413, 414, 415, 416, 417, 418,
	419, 1003, 421, 420, 422, 0, 0, 0, 0, 0,
	0, 423, 0, 425, 426, 427, 424, 428, 429, 430,
	431, 0, 432, 433, 434, 1042, 435, 436, 437, 438,
	933, 439, 0, 440, 441, 447, 448, 442, 443, 449,
	450, 451, 452, 453, 0, 455, 456, 454, 457, 458,
	459, 986, 460, 444, 445, 461, 462, 1043, 463, 464,
	1001, 0, 465, 0, 466, 467, 468, 469, 446, 470,
	475, 1046, 471, 472, 473, 474, 1023, 0, 477, 478,
	921, 476, 0, 479, 480, 481, 482, 483, 484, 311,
	485, 0, 486, 1013, 1014, 1015, 1016, 0, 493, 0,
	487, 488, 1024, 489, 1025, 943, 490, 491, 492, 0,
	3928, 495, 0, 927, 496, 497, 498, 500, 501, 499,
	502, 987, 503, 0, 0, 504, 505, 506, 560, 1010,
	1045, 0, 508, 507, 563, 0, 0, 0, 0, 509,
	510, 564, 511, 512, 513, 924, 0, 0, 0, 0,
	0, 0, 920, 0, 0, 0, 0, 0, 0, 918,
	919, 965, 937, 938, 939, 2694, 2695, 948, 949, 0,
	0, 0, 947, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 989, 953, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 515, 1002, 0, 1009, 258, 1008,
	0, 259, 260, 261, 262, 263, 955, 988, 922, 264,
	1047, 1048, 521, 0, 265, 266, 995, 0, 976, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 1028, 283, 284, 979, 977, 978, 985, 981, 980,
	984, 285, 286, 287, 288, 1012, 289, 1006, 1005, 926,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 997, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 932, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 1019, 1020, 944, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 1004, 0, 0, 0,
	320, 0, 321, 0, 0, 1029, 322, 323, 1017, 1018,
	324, 325, 0, 326, 1026, 0, 954, 327, 0, 328,
	329, 330, 331, 332, 990, 991, 994, 386, 1031, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 0, 1030, 341, 999, 1000, 0, 960,
	0, 343, 1032, 992, 1033, 344, 345, 346, 1034, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 354,
	353, 0, 355, 1027, 1035, 356, 357, 1036, 0, 358,
	359, 360, 983, 982, 361, 362, 363, 364, 0, 365,
	366, 368, 370, 367, 369, 374, 371, 372, 373, 376,
	0, 375, 1037, 377, 378, 379, 382, 383, 381, 1038,
	380, 923, 242, 1039, 384, 945, 993, 385, 1007, 387,
	388, 0, 0, 389, 0, 0, 0, 391, 392, 393,
	0, 0, 394, 395, 543, 1040, 396, 1041, 1021, 397,
	398, 390, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 545, 546, 1022, 409, 548, 410, 411,
	0, 412, 0, 413, 414, 415, 416, 417, 418, 419,
	1003, 421, 420, 422, 0, 0, 0, 0, 0, 0,
	423, 0, 425, 426, 427, 424, 428, 429, 430, 431,
	0, 432, 433, 434, 1042, 435, 436, 437, 438, 933,
	439, 0, 440, 441, 447, 448, 442, 443, 449, 450,
	451, 452, 453, 0, 455, 456, 454, 457, 458, 459,
	986, 460, 444, 445, 461, 462, 1043, 463, 464, 1001,
	0, 465, 0, 466, 467, 468, 469, 446, 470, 475,
	1046, 471, 472, 473, 474, 1023, 0, 477, 478, 921,
	476, 0, 479, 480, 481, 482, 483, 484, 311, 485,
	0, 486, 1013, 1014, 1015, 1016, 0, 493, 0, 487,
	488, 1024, 489, 1025, 943, 490, 491, 492, 0, 494,
	495, 0, 927, 496, 497, 498, 500, 501, 499, 502,
	987, 503, 0, 0, 504, 505, 506, 560, 1010, 1045,
	0, 508, 507, 563, 0, 0, 0, 0, 509, 510,
	564, 511, 512, 513, 924, 0, 0, 0, 0, 0,
	0, 920, 0, 0, 0, 0, 0, 0, 918, 919,
	965, 937, 938, 939, 2692, 2693, 948, 949, 0, 0,
	0, 947, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 989, 953, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 515, 1002, 0, 1009, 258, 1008, 0,
	259, 260, 261, 262, 263, 955, 988, 922, 264, 1047,
	1048, 521, 0, 265, 266, 995, 0, 976, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	1028, 283, 284, 979, 977, 978, 985, 981, 980, 984,
	285, 286, 287, 288, 1012, 289, 1006, 1005, 926, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 997, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 932, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 1019, 1020, 944, 240, 0, 0, 0,
	0, 0, 317, 318, 319, 1004, 0, 0, 0, 320,
	0, 321, 0, 0, 1029, 322, 323, 1017, 1018, 324,
	325, 0, 326, 1026, 0, 954, 327, 0, 328, 329,
	330, 331, 332, 990, 991, 994, 386, 1031, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 0, 1030, 341, 999, 1000, 0, 960, 0,
	343, 1032, 992, 1033, 344, 345, 346, 1034, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 354, 353,
	0, 355, 1027, 1035, 356, 357, 1036, 0, 358, 359,
	360, 983, 982, 361, 362, 363, 364, 0, 365, 366,
	368, 370, 367, 369, 374, 371, 372, 373, 376, 0,
	375, 1037, 377, 378, 379, 382, 383, 381, 1038, 380,
	923, 242, 1039, 384, 945, 993, 385, 1007, 387, 388,
	0, 0, 389, 0, 0, 0, 391, 392, 393, 0,
	0, 394, 395, 543, 1040, 396, 1041, 1021, 397, 398,
	390, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 545, 546, 1022, 409, 548, 410, 411, 0,
	412, 0, 413, 414, 415, 416, 417, 418, 419, 1003,
	421, 420, 422, 0, 0, 0, 0, 0, 0, 423,
	0, 425, 426, 427, 424, 428, 429, 430, 431, 0,
	432, 433, 434, 1042, 435, 436, 437, 438, 933, 439,
	0, 440, 441, 447, 448, 442, 443, 449, 450, 451,
	452, 453, 0, 455, 456, 454, 457, 458, 459, 986,
	460, 444, 445, 461, 462, 1043, 463, 464, 1001, 0,
	465, 0, 466, 467, 468, 469, 446, 470, 475, 1046,
	471, 472, 473, 474, 1023, 0, 477, 478, 921, 476,
	0, 479, 480, 481, 482, 483, 484, 311, 485, 0,
	486, 1013, 1014, 1015, 1016, 0, 493, 0, 487, 488,
	1024, 489, 1025, 943, 490, 491, 492, 0, 494, 495,
	0, 927, 496, 497, 498, 500, 501, 499, 502, 987,
	503, 0, 0, 504, 505, 506, 560, 1010, 1045, 0,
	508, 507, 563, 0, 0, 0, 0, 509, 510, 564,
	511, 512, 513, 924, 0, 0, 0, 0, 0, 0,
	920, 0, 0, 0, 0, 0, 0, 918, 919, 965,
	937, 938, 939, 935, 936, 948, 949, 0, 0, 0,
	947, 0, 0, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	989, 953, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 515, 1002, 0, 1009, 258, 1008, 0, 259,
	260, 261, 262, 263, 955, 988, 922, 264, 1047, 1048,
	521, 0, 265, 266, 995, 0, 976, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 1028,
	283, 284, 979, 977, 978, 985, 981, 980, 984, 285,
	286, 287, 288, 1012, 289, 1006, 1005, 926, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	997, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 932, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 1019, 1020, 944, 240, 0, 0, 0, 0,
	0, 317, 318, 319, 1004, 0, 0, 0, 320, 0,
	321, 0, 0, 1029, 322, 323, 1017, 1018, 324, 325,
	0, 326, 1026, 0, 954, 327, 0, 328, 329, 330,
	331, 332, 990, 991, 994, 386, 1031, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 241, 339, 340,
	342, 0, 1030, 341, 999, 1000, 0, 960, 0, 343,
	1032, 992, 1033, 344, 345, 346, 1034, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 354, 353, 0,
	355, 1027, 1035, 356, 357, 1036, 0, 358, 359, 360,
	983, 982, 361, 362, 363, 364, 0, 365, 366, 368,
	370, 367, 369, 374, 371, 372, 373, 376, 0, 375,
	1037, 377, 378, 379, 382, 383, 381, 1038, 380, 923,
	242, 1039, 384, 945, 993, 385, 1007, 387, 388, 0,
	0, 389, 0, 0, 0, 391, 392, 393, 0, 0,
	394, 395, 543, 1040, 396, 1041, 1021, 397, 398, 390,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	408, 545, 546, 1022, 409, 548, 410, 411, 0, 412,
	0, 413, 414, 415, 416, 417, 418, 419, 1003, 421,
	420, 422, 0, 0, 0, 0, 0, 0, 423, 0,
	425, 426, 427, 424, 428, 429, 430, 431, 0, 432,
	433, 434, 1042, 435, 436, 437, 438, 933, 439, 0,
	440, 441, 447, 448, 442, 443, 449, 450, 451, 452,
	453, 0, 455, 456, 454, 457, 458, 459, 986, 460,
	444, 445, 461, 462, 1043, 463, 464, 1001, 0, 465,
	0, 466, 467, 468, 469, 446, 470, 475, 1046, 471,
	472, 473, 474, 1023, 0, 477, 478, 921, 476, 0,
	479, 480, 481, 482, 483, 484, 311, 485, 0, 486,
	1013, 1014, 1015, 1016, 0, 493, 0, 487, 488, 1024,
	489, 1025, 943, 490, 491, 492, 0, 494, 495, 0,
	927, 496, 497, 498, 500, 501, 499, 502, 987, 503,
	0, 0, 504, 505, 506, 560, 1010, 1045, 0, 508,
	507, 563, 0, 0, 0, 0, 509, 510, 564, 511,
	512, 513, 924, 0, 0, 0, 0, 0, 0, 920,
	0, 0, 0, 0, 0, 0, 2120, 2121, 965, 937,
	938, 939, 935, 936, 948, 949, 0, 0, 0, 947,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 989,
	953, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 515, 1002, 0, 1009, 258, 1008, 0, 259, 260,
	261, 262, 263, 955, 988, 0, 264, 1047, 1048, 521,
	0, 265, 266, 995, 0, 976, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 1028, 283,
	284, 979, 977, 978, 985, 981, 980, 984, 285, 286,
	287, 288, 1012, 289, 1006, 1005, 0, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 997,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	932, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 1019, 1020, 944, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 1004, 0, 0, 0, 320, 0, 321,
	0, 0, 1029, 322, 323, 1017, 1018, 324, 325, 0,
	326, 1026, 0, 954, 327, 0, 328, 329, 330, 331,
	332, 990, 991, 994, 386, 1031, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	0, 1030, 341, 999, 1000, 0, 960, 0, 343, 1032,
	992, 1033, 344, 345, 346, 1034, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 354, 353, 0, 355,
	1027, 1035, 356, 357, 1036, 0, 358, 359, 360, 983,
	982, 361, 362, 363, 364, 0, 365, 366, 368, 370,
	367, 369, 374, 371, 372, 373, 376, 0, 375, 1037,
	377, 378, 379, 382, 383, 381, 1038, 380, 0, 242,
	1039, 384, 945, 993, 385, 1007, 387, 388, 0, 0,
	389, 0, 0, 0, 391, 392, 393, 0, 0, 394,
	395, 543, 1040, 396, 1041, 1021, 397, 398, 390, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	545, 546, 1022, 409, 548, 410, 411, 0, 412, 0,
	413, 414, 415, 416, 417, 418, 419, 1003, 421, 420,
	422, 0, 0, 0, 0, 0, 0, 423, 0, 425,
	426, 427, 424, 428, 429, 430, 431, 0, 432, 433,
	434, 1042, 435, 436, 437, 438, 933, 439, 0, 440,
	441, 447, 448, 442, 443, 449, 450, 451, 452, 453,
	0, 455, 456, 454, 457, 458, 459, 986, 460, 444,
	445, 461, 462, 1043, 463, 464, 1001, 0, 465, 0,
	466, 467, 468, 469, 446, 470, 475, 1046, 471, 472,
	473, 474, 1023, 0, 477, 478, 0, 476, 0, 479,
	480, 481, 482, 483, 484, 311, 485, 0, 486, 1013,
	1014, 1015, 1016, 0, 493, 0, 487, 488, 1024, 489,
	1025, 943, 490, 491, 492, 0, 494, 495, 0, 0,
	496, 497, 498, 500, 501, 499, 502, 987, 503, 0,
	0, 504, 505, 506, 560, 1010, 1045, 0, 508, 507,
	563, 0, 0, 0, 0, 509, 510, 564, 511, 512,
	513, 965, 937, 938, 939, 935, 936, 948, 2316, 0,
	0, 0, 0, 0, 0, 2314, 2315, 0, 243, 244,
	245, 246, 247, 248, 949, 249, 250, 0, 947, 0,
	0, 0, 989, 953, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 515, 1002, 0, 1009, 258, 1008,
	0, 259, 260, 261, 262, 263, 955, 988, 0, 264,
	1047, 1048, 521, 0, 265, 266, 995, 0, 976, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 1028, 283, 284, 979, 977, 978, 985, 981, 980,
	984, 285, 286, 287, 288, 1012, 289, 1006, 1005, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 997, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 932, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 1019, 1020, 944, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 1004, 0, 0, 0,
	320, 0, 321, 0, 0, 1029, 322, 323, 1017, 1018,
	324, 325, 0, 326, 1026, 0, 954, 327, 0, 328,
	329, 330, 331, 332, 990, 991, 994, 386, 1031, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 0, 1030, 341, 999, 1000, 0, 960,
	0, 343, 1032, 992, 1033, 344, 345, 346, 1034, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 354,
	353, 0, 355, 1027, 1035, 356, 357, 1036, 0, 358,
	359, 360, 983, 982, 361, 362, 363, 364, 0, 365,
	366, 368, 370, 367, 369, 374, 371, 372, 373, 376,
	0, 375, 1037, 377, 378, 379, 382, 383, 381, 1038,
	380, 0, 242, 1039, 384, 945, 993, 385, 1007, 387,
	388, 0, 0, 389, 0, 0, 0, 391, 392, 393,
	0, 0, 394, 395, 543, 1040, 396, 1041, 1021, 397,
	398, 390, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 545, 546, 1022, 409, 548, 410, 411,
	0, 412, 0, 413, 414, 415, 416, 417, 418, 419,
	1003, 421, 420, 422, 0, 0, 0, 0, 0, 0,
	423, 0, 425, 426, 427, 424, 428, 429, 430, 431,
	0, 432, 433, 434, 1042, 435, 436, 437, 438, 2687,
	2688, 0, 440, 441, 447, 448, 442, 443, 449, 450,
	451, 452, 453, 0, 455, 456, 454, 457, 458, 459,
	986, 460, 444, 445, 461, 462, 1043, 463, 464, 1001,
	0, 465, 0, 466, 467, 468, 469, 446, 470, 475,
	1046, 471, 472, 473, 474, 1023, 0, 477, 478, 0,
	476, 0, 479, 480, 481, 482, 483, 484, 311, 485,
	0, 486, 1013, 1014, 1015, 1016, 0, 493, 0, 487,
	488, 1024, 489, 1025, 943, 490, 491, 492, 0, 494,
	495, 0, 0, 496, 497, 498, 500, 501, 499, 502,
	987, 503, 0, 0, 504, 505, 506, 560, 1010, 1045,
	0, 508, 507, 563, 0, 0, 0, 0, 509, 510,
	564, 511, 512, 513, 965, 937, 938, 939, 935, 936,
	948, 0, 0, 0, 0, 0, 0, 0, 1848, 1849,
	0, 243, 244, 245, 246, 247, 248, 949, 249, 250,
	0, 947, 0, 0, 0, 989, 953, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 0, 1002, 0,
	1009, 258, 1008, 0, 259, 260, 261, 262, 263, 955,
	988, 922, 264, 1047, 1048, 521, 0, 265, 266, 995,
	0, 976, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 1028, 283, 3929, 979, 977, 978,
	985, 981, 980, 984, 285, 286, 287, 288, 1012, 289,
	1006, 1005, 926, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 997, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 932, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 1019, 1020, 944,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 1004,
	0, 0, 0, 320, 0, 321, 0, 0, 1029, 322,
	323, 1017, 1018, 324, 325, 0, 326, 1026, 0, 954,
	327, 0, 328, 329, 330, 331, 332, 990, 991, 994,
	386, 0, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 1030, 341, 999,
	1000, 0, 960, 0, 343, 0, 992, 0, 344, 345,
	346, 1034, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 354, 353, 0, 355, 1027, 1035, 356, 357,
	0, 0, 358, 359, 360, 983, 982, 361, 362, 363,
	364, 0, 365, 366, 368, 370, 367, 369, 374, 371,
	372, 373, 376, 0, 375, 1037, 377, 378, 379, 382,
	383, 381, 1038, 380, 923, 242, 0, 384, 945, 993,
	385, 1007, 387, 388, 0, 0, 389, 0, 0, 0,
	391, 392, 393, 0, 0, 394, 395, 543, 1040, 396,
	1041, 1021, 397, 398, 390, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 545, 546, 1022, 409,
	548, 410, 411, 0, 412, 0, 413, 414, 415, 416,
	417, 418, 419, 1003, 421, 420, 422, 0, 0, 0,
	0, 0, 0, 423, 0, 425, 426, 427, 424, 428,
	429, 430, 431, 0, 432, 433, 434, 1042, 435, 436,
	437, 438, 933, 439, 0, 440, 441, 447, 448, 442,
	443, 449, 450, 451, 452, 453, 0, 455, 456, 454,
	457, 458, 459, 986, 460, 444, 445, 461, 462, 0,
	463, 464, 1001, 0, 465, 0, 466, 467, 468, 469,
	446, 470, 475, 1046, 471, 472, 473, 474, 1023, 0,
	477, 478, 921, 476, 0, 479, 480, 481, 482, 483,
	484, 311, 485, 0, 486, 1013, 1014, 1015, 1016, 0,
	493, 0, 487, 488, 1024, 489, 1025, 943, 490, 491,
	492, 0, 3928, 495, 0, 927, 496, 497, 498, 500,
	501, 499, 502, 987, 503, 0, 0, 504, 505, 506,
	560, 1010, 1045, 0, 508, 507, 563, 0, 0, 0,
	0, 509, 510, 564, 511, 512, 513, 965, 937, 938,
	939, 935, 936, 948, 0, 0, 0, 0, 0, 0,
	0, 918, 919, 0, 243, 244, 245, 246, 247, 248,
	949, 249, 250, 0, 947, 0, 0, 0, 989, 953,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	515, 1002, 0, 1009, 258, 1008, 0, 259, 260, 261,
	262, 263, 0, 988, 0, 264, 1047, 1048, 521, 0,
	265, 266, 995, 0, 976, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 1028, 283, 284,
	979, 977, 978, 985, 981, 980, 984, 285, 286, 287,
	288, 1012, 289, 1006, 1005, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 997, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 525,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	1019, 1020, 944, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 1004, 0, 0, 0, 320, 0, 321, 0,
	0, 1029, 322, 323, 1017, 1018, 324, 325, 0, 326,
	1026, 0, 954, 327, 0, 328, 329, 330, 331, 332,
	990, 991, 994, 386, 1031, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 241, 339, 340, 342, 0,
	1030, 341, 999, 1000, 0, 960, 0, 343, 1032, 992,
	1033, 344, 345, 346, 1034, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 354, 353, 0, 355, 1027,
	1035, 356, 357, 1036, 0, 358, 359, 360, 983, 982,
	361, 362, 363, 364, 0, 365, 366, 368, 370, 367,
	369, 374, 371, 372, 373, 376, 0, 375, 1037, 377,
	378, 379, 382, 383, 381, 1038, 380, 0, 242, 1039,
	384, 945, 993, 385, 1007, 387, 388, 0, 0, 389,
	0, 0, 0, 391, 392, 393, 0, 0, 394, 395,
	543, 1040, 396, 1041, 1021, 397, 398, 390, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 545,
	546, 1022, 409, 548, 410, 411, 0, 412, 0, 413,
	414, 415, 416, 417, 418, 419, 1003, 421, 420, 422,
	0, 0, 0, 0, 0, 0, 423, 0, 425, 426,
	427, 424, 428, 429, 430, 431, 0, 432, 433, 434,
	1042, 435, 436, 437, 438, 933, 439, 0, 440, 441,
	447, 448, 442, 443, 449, 450, 451, 452, 453, 0,
	455, 456, 454, 457, 458, 459, 986, 460, 444, 445,
	461, 462, 1043, 463, 464, 1001, 0, 465, 0, 466,
	467, 468, 469, 446, 470, 475, 1046, 471, 472, 473,
	474, 1023, 0, 477, 478, 0, 476, 0, 479, 480,
	481, 482, 483, 484, 311, 485, 0, 486, 1013, 1014,
	1015, 1016, 0, 493, 0, 487, 488, 1024, 489, 1025,
	943, 490, 491, 492, 0, 494, 495, 0, 0, 496,
	497, 498, 500, 501, 499, 502, 987, 503, 0, 0,
	504, 505, 506, 560, 1010, 1045, 0, 508, 507, 563,
	0, 911, 0, 1085, 509, 510, 564, 511, 512, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 949, 989, 0, 0, 947, 0, 251,
	252, 254, 253, 255, 256, 257, 515, 516, 0, 517,
	258, 518, 0, 259, 260, 261, 262, 263, 0, 988,
	0, 264, 519, 520, 521, 0, 265, 266, 995, 0,
	976, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 1028, 283, 284, 979, 977, 978, 985,
	981, 980, 984, 285, 286, 287, 288, 0, 289, 523,
	524, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 525, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 1019, 1020, 0, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 528, 0,
	0, 0, 320, 0, 321, 0, 0, 1029, 322, 323,
	529, 530, 324, 325, 0, 326, 1026, 0, 532, 327,
	0, 328, 329, 330, 331, 332, 990, 991, 994, 386,
	1031, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 241, 339, 340, 342, 0, 1030, 341, 536, 537,
	0, 538, 0, 343, 1032, 992, 1033, 344, 345, 346,
	1034, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	1071, 354, 353, 0, 355, 1027, 1035, 356, 357, 1036,
	0, 358, 359, 360, 983, 982, 361, 362, 363, 364,
	0, 365, 366, 368, 370, 367, 369, 374, 371, 372,
	373, 376, 0, 375, 1037, 377, 378, 379, 382, 383,
	381, 1038, 380, 0, 242, 1039, 384, 0, 993, 385,
	542, 387, 388, 0, 0, 389, 0, 0, 1077, 391,
	392, 393, 0, 0, 394, 395, 543, 1040, 396, 1041,
	1021, 397, 398, 390, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 545, 546, 1022, 409, 548,
	410, 411, 0, 412, 0, 413, 414, 415, 416, 417,
	418, 419, 549, 421, 420, 422, 0, 0, 0, 0,
	0, 0, 423, 0, 425, 426, 427, 424, 428, 429,
	430, 431, 0, 432, 433, 434, 1042, 435, 436, 437,
	438, 550, 1079, 0, 440, 441, 447, 448, 442, 443,
	449, 450, 451, 452, 453, 205, 455, 456, 454, 457,
	458, 459, 986, 460, 444, 445, 461, 462, 1043, 463,
	464, 551, 0, 465, 0, 466, 467, 468, 469, 446,
	470, 475, 552, 471, 472, 473, 474, 1023, 0, 477,
	478, 0, 476, 207, 479, 480, 481, 482, 483, 484,
	311, 485, 0, 486, 554, 555, 556, 557, 0, 493,
	0, 487, 488, 1024, 489, 1025, 0, 490, 491, 492,
	0, 494, 495, 0, 0, 496, 497, 498, 500, 501,
	499, 502, 987, 503, 0, 0, 504, 505, 506, 1417,
	561, 562, 0, 508, 507, 563, 0, 1085, 0, 199,
	509, 510, 564, 511, 512, 513, 0, 200, 0, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 1075, 989, 1741,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	515, 516, 0, 517, 258, 518, 0, 259, 260, 261,
	262, 263, 0, 988, 0, 264, 519, 520, 521, 0,
	265, 266, 995, 0, 976, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 1028, 283, 284,
	979, 977, 978, 985, 981, 980, 984, 285, 286, 287,
	288, 0, 289, 523, 524, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 525,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	1019, 1020, 0, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 528, 0, 0, 0, 320, 0, 321, 0,
	0, 1029, 322, 323, 529, 530, 324, 325, 0, 326,
	1026, 0, 532, 327, 0, 328, 329, 330, 331, 332,
	990, 991, 994, 386, 1031, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 241, 339, 340, 342, 0,
	1030, 341, 536, 537, 0, 538, 0, 343, 1032, 992,
	1033, 344, 345, 346, 1034, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 1071, 354, 353, 0, 355, 1027,
	1035, 356, 357, 1036, 0, 358, 359, 360, 983, 982,
	361, 362, 363, 364, 0, 365, 366, 368, 370, 367,
	369, 374, 371, 372, 373, 376, 0, 375, 1037, 377,
	378, 379, 382, 383, 381, 1038, 380, 0, 242, 1039,
	384, 0, 993, 385, 542, 387, 388, 0, 0, 389,
	0, 0, 1077, 391, 392, 393, 0, 0, 394, 395,
	543, 1040, 396, 1041, 1021, 397, 398, 390, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 545,
	546, 1022, 409, 548, 410, 411, 0, 412, 0, 413,
	414, 415, 416, 417, 418, 419, 549, 421, 420, 422,
	0, 0, 0, 0, 0, 0, 423, 0, 425, 426,
	427, 424, 428, 429, 430, 431, 0, 432, 433, 434,
	1042, 435, 436, 437, 438, 550, 1079, 0, 440, 441,
	447, 448, 442, 443, 449, 450, 451, 452, 453, 205,
	455, 456, 454, 457, 458, 459, 986, 460, 444, 445,
	461, 462, 1043, 463, 464, 551, 0, 465, 0, 466,
	467, 468, 469, 446, 470, 475, 552, 471, 472, 473,
	474, 1023, 0, 477, 478, 0, 476, 207, 479, 480,
	481, 482, 483, 484, 311, 485, 0, 486, 554, 555,
	556, 557, 0, 493, 0, 487, 488, 1024, 489, 1025,
	0, 490, 491, 492, 0, 494, 495, 0, 0, 496,
	497, 498, 500, 501, 499, 502, 987, 503, 0, 0,
	504, 505, 506, 1417, 561, 562, 0, 508, 507, 563,
	0, 0, 0, 199, 509, 510, 564, 511, 512, 513,
	0, 200, 0, 0, 0, 2847, 0, 1085, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1075, 0, 1741, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 989, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	515, 516, 0, 517, 258, 518, 0, 259, 260, 261,
	262, 263, 0, 988, 0, 264, 519, 520, 521, 0,
	265, 266, 995, 0, 976, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 1028, 283, 284,
	979, 977, 978, 985, 981, 980, 984, 285, 286, 287,
	288, 0, 289, 523, 524, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 525,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	1019, 1020, 0, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 528, 0, 0, 0, 320, 0, 321, 0,
	0, 1029, 322, 323, 529, 530, 324, 325, 0, 326,
	1026, 0, 532, 327, 0, 328, 329, 330, 331, 332,
	990, 991, 994, 386, 1031, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 241, 339, 340, 342, 0,
	1030, 341, 536, 537, 0, 538, 0, 343, 1032, 992,
	1033, 344, 345, 346, 1034, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 1071, 354, 353, 0, 355, 1027,
	1035, 356, 357, 1036, 0, 358, 359, 360, 983, 982,
	361, 362, 363, 364, 0, 365, 366, 368, 370, 367,
	369, 374, 371, 372, 373, 376, 0, 375, 1037, 377,
	378, 379, 382, 383, 381, 1038, 380, 0, 242, 1039,
	384, 0, 993, 385, 542, 387, 388, 0, 0, 389,
	0, 0, 1077, 391, 392, 393, 0, 0, 394, 395,
	543, 1040, 396, 1041, 1021, 397, 398, 390, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 545,
	546, 1022, 409, 548, 410, 411, 0, 412, 0, 413,
	414, 415, 416, 417, 418, 419, 549, 421, 420, 422,
	0, 0, 0, 0, 0, 0, 423, 0, 425, 426,
	427, 424, 428, 429, 430, 431, 0, 432, 433, 434,
	1042, 435, 436, 437, 438, 550, 1079, 0, 440, 441,
	447, 448, 442, 443, 449, 450, 451, 452, 453, 0,
	455, 456, 454, 457, 458, 459, 986, 460, 444, 445,
	461, 462, 1043, 463, 464, 551, 0, 465, 0, 466,
	467, 468, 469, 446, 470, 475, 552, 471, 472, 473,
	474, 1023, 0, 477, 478, 0, 476, 0, 479, 480,
	481, 482, 483, 484, 311, 485, 0, 486, 554, 555,
	556, 557, 0, 493, 0, 487, 488, 1024, 489, 1025,
	0, 490, 491, 492, 0, 494, 495, 0, 0, 496,
	497, 498, 500, 501, 499, 502, 987, 503, 0, 0,
	504, 505, 506, 560, 561, 562, 0, 508, 507, 563,
	0, 1067, 0, 1085, 509, 510, 564, 511, 512, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 1075, 0, 1073, 989, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 515, 516, 0, 517,
	258, 518, 0, 259, 260, 261, 262, 263, 0, 988,
	0, 264, 519, 520, 521, 0, 265, 266, 995, 0,
	976, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 1028, 283, 284, 979, 977, 978, 985,
	981, 980, 984, 285, 286, 287, 288, 0, 289, 523,
	524, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 525, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 1019, 1020, 0, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 528, 0,
	0, 0, 320, 0, 321, 0, 0, 1029, 322, 323,
	529, 530, 324, 325, 0, 326, 1026, 0, 532, 327,
	0, 328, 329, 330, 331, 332, 990, 991, 994, 386,
	1031, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 241, 339, 340, 342, 0, 1030, 341, 536, 537,
	0, 538, 0, 343, 1032, 992, 1033, 344, 345, 346,
	1034, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	1071, 354, 353, 0, 355, 1027, 1035, 356, 357, 1036,
	0, 358, 359, 360, 983, 982, 361, 362, 363, 364,
	0, 365, 366, 368, 370, 367, 369, 374, 371, 372,
	373, 376, 0, 375, 1037, 377, 378, 379, 382, 383,
	381, 1038, 380, 0, 242, 1039, 384, 0, 993, 385,
	542, 387, 388, 0, 0, 389, 0, 0, 1077, 391,
	392, 393, 0, 0, 394, 395, 543, 1040, 396, 1041,
	1021, 397, 398, 390, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 545, 546, 1022, 409, 548,
	410, 411, 0, 412, 0, 413, 414, 415, 416, 417,
	418, 419, 549, 421, 420, 422, 0, 0, 0, 0,
	0, 0, 423, 0, 425, 426, 427, 424, 428, 429,
	430, 431, 0, 432, 433, 434, 1042, 435, 436, 437,
	438, 550, 1079, 0, 440, 441, 447, 448, 442, 443,
	449, 450, 451, 452, 453, 0, 455, 456, 454, 457,
	458, 459, 986, 460, 444, 445, 461, 462, 1043, 463,
	464, 551, 0, 465, 0, 466, 467, 468, 469, 446,
	470, 475, 552, 471, 472, 473, 474, 1023, 0, 477,
	478, 0, 476, 0, 479, 480, 481, 482, 483, 484,
	311, 485, 0, 486, 554, 555, 556, 557, 0, 493,
	0, 487, 488, 1024, 489, 1025, 0, 490, 491, 492,
	0, 494, 495, 0, 0, 496, 497, 498, 500, 501,
	499, 502, 987, 503, 0, 0, 504, 505, 506, 560,
	561, 562, 0, 508, 507, 563, 0, 1085, 0, 0,
	509, 510, 564, 511, 512, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 1075, 989, 1073,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	515, 516, 0, 517, 258, 518, 0, 259, 260, 261,
	262, 263, 0, 988, 0, 264, 519, 520, 521, 0,
	265, 266, 995, 0, 976, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 1028, 283, 284,
	979, 977, 978, 985, 981, 980, 984, 285, 286, 287,
	288, 0, 289, 523, 524, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 525,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	1019, 1020, 0, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 528, 0, 0, 0, 320, 0, 321, 0,
	0, 1029, 322, 323, 529, 530, 324, 325, 0, 326,
	1026, 0, 532, 327, 0, 328, 329, 330, 331, 332,
	990, 991, 994, 386, 1031, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 241, 339, 340, 342, 0,
	1030, 341, 536, 537, 0, 538, 0, 343, 1032, 992,
	1033, 344, 345, 346, 1034, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 1071, 354, 353, 0, 355, 1027,
	1035, 356, 357, 1036, 0, 358, 359, 360, 983, 982,
	361, 362, 363, 364, 0, 365, 366, 368, 370, 367,
	369, 374, 371, 372, 373, 376, 0, 375, 1037, 377,
	378, 379, 382, 383, 381, 1038, 380, 0, 242, 1039,
	384, 0, 993, 385, 542, 387, 388, 0, 0, 389,
	0, 0, 1077, 391, 392, 393, 0, 0, 394, 395,
	543, 1040, 396, 1041, 1021, 397, 398, 390, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 545,
	546, 1022, 409, 548, 410, 411, 0, 412, 0, 413,
	414, 415, 416, 417, 418, 419, 549, 421, 420, 422,
	0, 0, 0, 0, 0, 0, 423, 0, 425, 426,
	427, 424, 428, 429, 430, 431, 0, 432, 433, 434,
	1042, 435, 436, 437, 438, 550, 1079, 0, 440, 441,
	447, 448, 442, 443, 449, 450, 451, 452, 453, 0,
	455, 456, 454, 457, 458, 459, 986, 460, 444, 445,
	461, 462, 1043, 463, 464, 551, 0, 465, 0, 466,
	467, 468, 469, 446, 470, 475, 552, 471, 472, 473,
	474, 1023, 0, 477, 478, 0, 476, 0, 479, 480,
	481, 482, 483, 484, 311, 485, 0, 486, 554, 555,
	556, 557, 0, 493, 0, 487, 488, 1024, 489, 1025,
	0, 490, 491, 492, 0, 494, 495, 0, 0, 496,
	497, 498, 500, 501, 499, 502, 987, 503, 0, 0,
	504, 505, 506, 560, 561, 562, 0, 508, 507, 563,
	0, 1085, 0, 0, 509, 510, 564, 511, 512, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 1075, 989, 1073, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 515, 516, 0, 517, 258, 518,
	0, 259, 260, 261, 262, 263, 0, 988, 0, 264,
	519, 520, 521, 0, 265, 266, 995, 0, 976, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 1028, 283, 284, 979, 977, 978, 985, 981, 980,
	984, 285, 286, 287, 288, 0, 289, 523, 524, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 525, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 1019, 1020, 0, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 528, 0, 0, 0,
	320, 0, 321, 0, 0, 1029, 322, 323, 529, 530,
	324, 325, 0, 326, 1026, 0, 532, 327, 0, 328,
	329, 330, 331, 332, 990, 991, 994, 386, 1031, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 0, 1030, 341, 536, 537, 0, 538,
	0, 343, 1032, 992, 1033, 344, 345, 346, 1034, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 354,
	353, 0, 355, 1027, 1035, 356, 357, 1036, 0, 358,
	359, 360, 983, 982, 361, 362, 363, 364, 0, 365,
	366, 368, 370, 367, 369, 374, 371, 372, 373, 376,
	0, 375, 1037, 377, 378, 379, 382, 383, 381, 1038,
	380, 0, 242, 1039, 384, 0, 993, 385, 542, 387,
	388, 0, 0, 389, 0, 0, 0, 391, 392, 393,
	0, 0, 394, 395, 543, 1040, 396, 1041, 1021, 397,
	398, 390, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 545, 546, 1022, 409, 548, 410, 411,
	0, 412, 0, 413, 414, 415, 416, 417, 418, 419,
	549, 421, 420, 422, 0, 0, 0, 0, 0, 0,
	423, 0, 425, 426, 427, 424, 428, 429, 430, 431,
	0, 432, 433, 434, 1042, 435, 436, 437, 438, 550,
	1079, 0, 440, 441, 447, 448, 442, 443, 449, 450,
	451, 452, 453, 0, 455, 456, 454, 457, 458, 459,
	986, 460, 444, 445, 461, 462, 1043, 463, 464, 551,
	0, 465, 0, 466, 467, 468, 469, 446, 470, 475,
	552, 471, 472, 473, 474, 1023, 0, 477, 478, 0,
	476, 0, 479, 480, 481, 482, 483, 484, 311, 485,
	0, 486, 554, 555, 556, 557, 0, 493, 0, 487,
	488, 1024, 489, 1025, 0, 490, 491, 492, 0, 494,
	495, 0, 0, 496, 497, 498, 500, 501, 499, 502,
	987, 503, 0, 0, 504, 505, 506, 560, 561, 562,
	0, 508, 507, 563, 0, 911, 0, 1269, 509, 510,
	564, 511, 512, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 1640, 514, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	515, 516, 0, 517, 258, 518, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 519, 520, 521, 0,
	265, 266, 522, 0, 1235, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 1028, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 523, 524, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 525,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	526, 527, 0, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 528, 0, 0, 0, 320, 0, 321, 0,
	0, 1029, 322, 323, 529, 530, 324, 325, 0, 326,
	531, 0, 532, 327, 0, 328, 329, 330, 331, 332,
	533, 534, 535, 386, 1031, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 0, 339, 340, 342, 0,
	1030, 341, 536, 537, 0, 538, 0, 343, 1032, 539,
	1033, 344, 345, 346, 1034, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 354, 353, 0, 355, 540,
	1035, 356, 357, 1036, 0, 358, 359, 360, 0, 0,
	361, 362, 363, 364, 0, 365, 366, 368, 370, 367,
	369, 374, 371, 372, 373, 376, 0, 375, 1037, 377,
	378, 379, 382, 383, 381, 1038, 380, 0, 0, 1039,
	384, 0, 541, 385, 542, 387, 388, 0, 0, 389,
	0, 0, 0, 391, 392, 393, 0, 0, 394, 395,
	543, 1040, 396, 1041, 544, 397, 398, 390, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 545,
	546, 547, 409, 548, 410, 411, 0, 412, 0, 413,
	414, 415, 416, 417, 418, 419, 549, 421, 420, 422,
	0, 0, 0, 0, 0, 0, 423, 0, 425, 426,
	427, 424, 428, 429, 430, 431, 0, 432, 433, 434,
	1042, 435, 436, 437, 438, 550, 439, 0, 440, 441,
	447, 448, 442, 443, 449, 450, 451, 452, 453, 205,
	455, 456, 454, 457, 458, 459, 0, 460, 444, 445,
	461, 462, 1043, 463, 464, 551, 0, 465, 0, 466,
	467, 468, 469, 446, 470, 475, 552, 471, 472, 473,
	474, 553, 0, 477, 478, 0, 476, 207, 479, 480,
	481, 482, 483, 484, 311, 485, 0, 486, 554, 555,
	556, 557, 0, 493, 0, 487, 488, 558, 489, 559,
	0, 490, 491, 492, 0, 494, 495, 0, 0, 496,
	497, 498, 500, 501, 499, 502, 0, 503, 0, 0,
	504, 505, 506, 1417, 561, 562, 0, 508, 507, 563,
	0, 0, 0, 199, 509, 510, 564, 511, 512, 513,
	0, 200, 0, 0, 0, 1414, 0, 1269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 171, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 514, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	515, 516, 0, 517, 258, 518, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 519, 520, 521, 0,
	265, 266, 522, 0, 1235, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 1028, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 523, 524, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 525,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	526, 527, 0, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 528, 0, 0, 0, 320, 0, 321, 0,
	0, 1029, 322, 323, 529, 530, 324, 325, 0, 326,
	531, 0, 532, 327, 0, 328, 329, 330, 331, 332,
	533, 534, 535, 386, 1031, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 0, 339, 340, 342, 0,
	1030, 341, 536, 537, 0, 538, 0, 343, 1032, 539,
	1033, 344, 345, 346, 1034, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 354, 353, 0, 355, 540,
	1035, 356, 357, 1036, 0, 358, 359, 360, 0, 0,
	361, 362, 363, 364, 0, 365, 366, 368, 370, 367,
	369, 374, 371, 372, 373, 376, 0, 375, 1037, 377,
	378, 379, 382, 383, 381, 1038, 380, 0, 0, 1039,
	384, 0, 541, 385, 542, 387, 388, 0, 0, 389,
	0, 0, 0, 391, 392, 393, 0, 0, 394, 395,
	543, 1040, 396, 1041, 544, 397, 398, 390, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 545,
	546, 547, 409, 548, 410, 411, 0, 412, 0, 413,
	414, 415, 416, 417, 418, 419, 549, 421, 420, 422,
	0, 0, 0, 0, 0, 0, 423, 0, 425, 426,
	427, 424, 428, 429, 430, 431, 0, 432, 433, 434,
	1042, 435, 436, 437, 438, 550, 439, 0, 440, 441,
	447, 448, 442, 443, 449, 450, 451, 452, 453, 205,
	455, 456, 454, 457, 458, 459, 0, 460, 444, 445,
	461, 462, 1043, 463, 464, 551, 0, 465, 0, 466,
	467, 468, 469, 446, 470, 475, 552, 471, 472, 473,
	474, 553, 0, 477, 478, 0, 476, 207, 479, 480,
	481, 482, 483, 484, 311, 485, 0, 486, 554, 555,
	556, 557, 0, 493, 0, 487, 488, 558, 489, 559,
	0, 490, 491, 492, 0, 494, 495, 0, 0, 496,
	497, 498, 500, 501, 499, 502, 0, 503, 0, 0,
	504, 505, 506, 1417, 561, 562, 0, 508, 507, 563,
	0, 0, 0, 199, 509, 510, 564, 511, 512, 513,
	0, 200, 0, 0, 0, 0, 0, 1269, 1268, 0,
	0, 0, 0, 1266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 171, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 514, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	515, 516, 0, 517, 258, 518, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 519, 520, 521, 0,
	265, 266, 522, 0, 1235, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 1028, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 523, 524, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 525,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	526, 527, 0, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 528, 0, 0, 0, 320, 0, 321, 0,
	0, 1029, 322, 323, 529, 530, 324, 325, 0, 326,
	531, 0, 532, 327, 0, 328, 329, 330, 331, 332,
	533, 534, 535, 386, 1031, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 0, 339, 340, 342, 0,
	1030, 341, 536, 537, 0, 538, 0, 343, 1032, 539,
	1033, 344, 345, 346, 1034, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 354, 353, 0, 355, 540,
	1035, 356, 357, 1036, 0, 358, 359, 360, 0, 0,
	361, 362, 363, 364, 0, 365, 366, 368, 370, 367,
	369, 374, 371, 372, 373, 376, 0, 375, 1037, 377,
	378, 379, 382, 383, 381, 1038, 380, 0, 0, 1039,
	384, 0, 541, 385, 542, 387, 388, 0, 0, 389,
	0, 0, 0, 391, 392, 393, 0, 0, 394, 395,
	543, 1040, 396, 1041, 544, 397, 398, 390, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 545,
	546, 547, 409, 548, 410, 411, 0, 412, 0, 413,
	414, 415, 416, 417, 418, 419, 549, 421, 420, 422,
	0, 0, 0, 0, 0, 0, 423, 0, 425, 426,
	427, 424, 428, 429, 430, 431, 0, 432, 433, 434,
	1042, 435, 436, 437, 438, 550, 439, 0, 440, 441,
	447, 448, 442, 443, 449, 450, 451, 452, 453, 0,
	455, 456, 454, 457, 458, 459, 0, 460, 444, 445,
	461, 462, 1043, 463, 464, 551, 0, 465, 0, 466,
	467, 468, 469, 446, 470, 475, 552, 471, 472, 473,
	474, 553, 0, 477, 478, 0, 476, 0, 479, 480,
	481, 482, 483, 484, 311, 485, 0, 486, 554, 555,
	556, 557, 0, 493, 0, 487, 488, 558, 489, 559,
	0, 490, 491, 492, 0, 494, 495, 0, 0, 496,
	497, 498, 500, 501, 499, 502, 0, 503, 0, 0,
	504, 505, 506, 560, 561, 562, 0, 508, 507, 563,
	0, 0, 0, 0, 509, 510, 564, 511, 512, 513,
	1269, 1268, 0, 0, 0, 0, 1266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 1439, 249, 250, 0, 0, 0, 0,
	0, 514, 0, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 515, 516, 0, 517, 258, 518, 0,
	259, 260, 261, 262, 263, 0, 0, 0, 264, 519,
	520, 521, 0, 265, 266, 522, 0, 1235, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	1028, 283, 284, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 288, 0, 289, 523, 524, 0, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 298, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 525, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 526, 527, 0, 240, 0, 0, 0,
	0, 0, 317, 318, 319, 528, 0, 0, 0, 320,
	0, 321, 0, 0, 1029, 322, 323, 529, 530, 324,
	325, 0, 326, 531, 0, 532, 327, 0, 328, 329,
	330, 331, 332, 533, 534, 535, 386, 1031, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 0, 339,
	340, 342, 0, 1030, 341, 536, 537, 0, 538, 0,
	343, 1032, 539, 1033, 344, 345, 346, 1034, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 354, 353,
	0, 355, 540, 1035, 356, 357, 1036, 0, 358, 359,
	360, 0, 0, 361, 362, 363, 364, 0, 365, 366,
	368, 370, 367, 369, 374, 371, 372, 373, 376, 0,
	375, 1037, 377, 378, 379, 382, 383, 381, 1038, 380,
	0, 0, 1039, 384, 0, 541, 385, 542, 387, 388,
	0, 0, 389, 0, 0, 0, 391, 392, 393, 0,
	0, 394, 395, 543, 1040, 396, 1041, 544, 397, 398,
	390, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 545, 546, 547, 409, 548, 410, 411, 0,
	412, 0, 413, 414, 415, 416, 417, 418, 419, 549,
	421, 420, 422, 0, 0, 0, 0, 0, 0, 423,
	0, 425, 426, 427, 424, 428, 429, 430, 431, 0,
	432, 433, 434, 1042, 435, 436, 437, 438, 550, 439,
	0, 440, 441, 447, 448, 442, 443, 449, 450, 451,
	452, 453, 0, 455, 456, 454, 457, 458, 459, 0,
	460, 444, 445, 461, 462, 1043, 463, 464, 551, 0,
	465, 0, 466, 467, 468, 469, 446, 470, 475, 552,
	471, 472, 473, 474, 553, 0, 477, 478, 0, 476,
	0, 479, 480, 481, 482, 483, 484, 311, 485, 0,
	486, 554, 555, 556, 557, 0, 493, 0, 487, 488,
	558, 489, 559, 0, 490, 491, 492, 0, 494, 495,
	0, 0, 496, 497, 498, 500, 501, 499, 502, 0,
	503, 0, 0, 504, 505, 506, 560, 561, 562, 0,
	508, 507, 563, 0, 0, 0, 0, 509, 510, 564,
	511, 512, 513, 1269, 1268, 0, 0, 0, 0, 1266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 3080, 249, 250, 0,
	0, 0, 0, 0, 514, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 515, 516, 0, 517,
	258, 518, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 519, 520, 521, 0, 265, 266, 522, 0,
	1235, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 1028, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 523,
	524, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 525, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 526, 527, 0, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 528, 0,
	0, 0, 320, 0, 321, 0, 0, 1029, 322, 323,
	529, 530, 324, 325, 0, 326, 531, 0, 532, 327,
	0, 328, 329, 330, 331, 332, 533, 534, 535, 386,
	1031, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 1030, 341, 536, 537,
	0, 538, 0, 343, 1032, 539, 1033, 344, 345, 346,
	1034, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 354, 353, 0, 355, 540, 1035, 356, 357, 1036,
	0, 358, 359, 360, 0, 0, 361, 362, 363, 364,
	0, 365, 366, 368, 370, 367, 369, 374, 371, 372,
	373, 376, 0, 375, 1037, 377, 378, 379, 382, 383,
	381, 1038, 380, 0, 0, 1039, 384, 0, 541, 385,
	542, 387, 388, 0, 0, 389, 0, 0, 0, 391,
	392, 393, 0, 0, 394, 395, 543, 1040, 396, 1041,
	544, 397, 398, 390, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 545, 546, 547, 409, 548,
	410, 411, 0, 412, 0, 413, 414, 415, 416, 417,
	418, 419, 549, 421, 420, 422, 0, 0, 0, 0,
	0, 0, 423, 0, 425, 426, 427, 424, 428, 429,
	430, 431, 0, 432, 433, 434, 1042, 435, 436, 437,
	438, 550, 439, 0, 440, 441, 447, 448, 442, 443,
	449, 450, 451, 452, 453, 0, 455, 456, 454, 457,
	458, 459, 0, 460, 444, 445, 461, 462, 1043, 463,
	464, 551, 0, 465, 0, 466, 467, 468, 469, 446,
	470, 475, 552, 471, 472, 473, 474, 553, 0, 477,
	478, 0, 476, 0, 479, 480, 481, 482, 483, 484,
	311, 485, 0, 486, 554, 555, 556, 557, 0, 493,
	0, 487, 488, 558, 489, 559, 0, 490, 491, 492,
	0, 494, 495, 0, 0, 496, 497, 498, 500, 501,
	499, 502, 0, 503, 0, 0, 504, 505, 506, 560,
	561, 562, 0, 508, 507, 563, 1085, 0, 0, 0,
	509, 510, 564, 511, 512, 513, 0, 0, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 989, 0, 1423,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 515,
	516, 0, 517, 258, 518, 0, 259, 260, 261, 262,
	263, 0, 988, 0, 264, 519, 520, 521, 0, 265,
	266, 995, 0, 976, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 1028, 283, 284, 979,
	977, 978, 985, 981, 980, 984, 285, 286, 287, 288,
	0, 289, 523, 524, 0, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 298, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 525, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 1019,
	1020, 0, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 528, 0, 0, 0, 320, 0, 321, 0, 0,
	1029, 322, 323, 529, 530, 324, 325, 0, 326, 1026,
	0, 532, 327, 0, 328, 329, 330, 331, 332, 990,
	991, 994, 386, 1031, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 0, 1030,
	341, 536, 537, 0, 538, 0, 343, 1032, 992, 1033,
	344, 345, 346, 1034, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 354, 353, 0, 355, 1027, 1035,
	356, 357, 1036, 0, 358, 359, 360, 983, 982, 361,
	362, 363, 364, 0, 365, 366, 368, 370, 367, 369,
	374, 371, 372, 373, 376, 0, 375, 1037, 377, 378,
	379, 382, 383, 381, 1038, 380, 0, 242, 1039, 384,
	0, 993, 385, 542, 387, 388, 0, 0, 389, 0,
	0, 0, 391, 392, 393, 0, 0, 394, 395, 543,
	1040, 396, 1041, 1021, 397, 398, 390, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 545, 546,
	1022, 409, 548, 410, 411, 0, 412, 0, 413, 414,
	415, 416, 417, 418, 419, 549, 421, 420, 422, 0,
	0, 0, 0, 0, 0, 423, 0, 425, 426, 427,
	424, 428, 429, 430, 431, 0, 432, 433, 434, 1042,
	435, 436, 437, 438, 550, 439, 0, 440, 441, 447,
	448, 442, 443, 449, 450, 451, 452, 453, 0, 455,
	456, 454, 457, 458, 459, 986, 460, 444, 445, 461,
	462, 1043, 463, 464, 551, 0, 465, 0, 466, 467,
	468, 469, 446, 470, 475, 552, 471, 472, 473, 474,
	1023, 0, 477, 478, 0, 476, 0, 479, 480, 481,
	482, 483, 484, 311, 485, 0, 486, 554, 555, 556,
	557, 0, 493, 0, 487, 488, 1024, 489, 1025, 0,
	490, 491, 492, 0, 494, 495, 0, 0, 496, 497,
	498, 500, 501, 499, 502, 987, 503, 0, 0, 504,
	505, 506, 560, 561, 562, 0, 508, 507, 563, 911,
	0, 237, 0, 509, 510, 564, 511, 512, 513, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 514, 0, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 515, 516, 0, 517, 258, 518,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	519, 520, 521, 0, 265, 266, 522, 0, 0, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 523, 524, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 525, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 526, 527, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 528, 0, 0, 0,
	320, 0, 321, 0, 0, 0, 322, 323, 529, 530,
	324, 325, 0, 326, 531, 0, 532, 327, 0, 328,
	329, 330, 331, 332, 533, 534, 535, 386, 0, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 0,
	339, 340, 342, 0, 0, 341, 536, 537, 0, 538,
	0, 343, 0, 539, 0, 344, 345, 346, 0, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 354,
	353, 0, 355, 540, 0, 356, 357, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 363, 364, 0, 365,
	366, 368, 370, 367, 369, 374, 371, 372, 373, 376,
	0, 375, 0, 377, 378, 379, 382, 383, 381, 0,
	380, 0, 0, 0, 384, 0, 541, 385, 542, 387,
	388, 0, 0, 389, 0, 0, 0, 391, 392, 393,
	0, 0, 394, 395, 543, 0, 396, 0, 544, 397,
	398, 390, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 545, 546, 547, 409, 548, 410, 411,
	0, 412, 0, 413, 414, 415, 416, 417, 418, 419,
	549, 421, 420, 422, 0, 0, 0, 0, 0, 0,
	423, 0, 425, 426, 427, 424, 428, 429, 430, 431,
	0, 432, 433, 434, 0, 435, 436, 437, 438, 550,
	439, 0, 440, 441, 447, 448, 442, 443, 449, 450,
	451, 452, 453, 205, 455, 456, 454, 457, 458, 459,
	0, 460, 444, 445, 461, 462, 0, 463, 464, 551,
	0, 465, 0, 466, 467, 468, 469, 446, 470, 475,
	552, 471, 472, 473, 474, 553, 0, 477, 478, 0,
	476, 207, 479, 480, 481, 482, 483, 484, 311, 485,
	0, 486, 554, 555, 556, 557, 0, 493, 0, 487,
	488, 558, 489, 559, 0, 490, 491, 492, 0, 494,
	495, 0, 0, 496, 497, 498, 500, 501, 499, 502,
	0, 503, 0, 0, 504, 505, 506, 1417, 561, 562,
	0, 508, 507, 563, 237, 0, 0, 199, 509, 510,
	564, 511, 512, 513, 0, 200, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 514, 0, 171, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 515, 516, 0,
	517, 258, 518, 0, 259, 260, 261, 262, 263, 0,
	0, 0, 264, 519, 520, 521, 0, 265, 266, 522,
	0, 0, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 0, 0, 285, 286, 287, 288, 0, 289,
	523, 524, 0, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 298, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 525, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 526, 527, 0,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 528,
	0, 0, 0, 320, 0, 321, 0, 0, 0, 322,
	323, 529, 530, 324, 325, 0, 326, 531, 0, 532,
	327, 0, 328, 329, 330, 331, 332, 533, 534, 535,
	386, 0, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 0, 341, 536,
	537, 0, 538, 0, 343, 0, 539, 0, 344, 345,
	346, 0, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 354, 353, 0, 355, 540, 0, 356, 357,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 363,
	364, 0, 365, 366, 368, 370, 367, 369, 374, 371,
	372, 373, 376, 0, 375, 0, 377, 378, 379, 382,
	383, 381, 0, 380, 0, 242, 0, 384, 0, 541,
	385, 542, 387, 388, 0, 0, 389, 0, 0, 0,
	391, 392, 393, 0, 0, 394, 395, 543, 0, 396,
	0, 544, 397, 398, 390, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 545, 546, 547, 409,
	548, 410, 411, 0, 412, 0, 413, 414, 415, 416,
	417, 418, 419, 549, 421, 420, 422, 0, 0, 0,
	0, 0, 0, 423, 0, 425, 426, 427, 424, 428,
	429, 430, 431, 0, 432, 433, 434, 0, 435, 436,
	437, 438, 550, 439, 0, 440, 441, 447, 448, 442,
	443, 449, 450, 451, 452, 453, 0, 455, 456, 454,
	457, 458, 459, 0, 460, 444, 445, 461, 462, 0,
	463, 464, 551, 0, 465, 0, 466, 467, 468, 469,
	446, 470, 475, 552, 471, 472, 473, 474, 553, 0,
	477, 478, 0, 476, 0, 479, 480, 481, 482, 483,
	484, 311, 485, 0, 486, 554, 555, 556, 557, 0,
	493, 0, 487, 488, 558, 489, 559, 0, 490, 491,
	492, 0, 494, 495, 0, 0, 496, 497, 498, 500,
	501, 499, 502, 0, 503, 0, 0, 504, 505, 506,
	560, 561, 562, 0, 508, 507, 563, 0, 1358, 0,
	237, 509, 510, 564, 511, 512, 513, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	1755, 514, 0, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 515, 516, 0, 517, 258, 518, 0,
	259, 260, 261, 262, 263, 0, 0, 0, 264, 519,
	520, 521, 0, 265, 266, 522, 0, 0, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 288, 0, 289, 523, 524, 0, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 298, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 525, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 526, 527, 0, 240, 0, 0, 0,
	0, 0, 317, 318, 319, 528, 0, 0, 0, 320,
	0, 321, 0, 0, 0, 322, 323, 529, 530, 324,
	325, 0, 326, 531, 0, 532, 327, 0, 328, 329,
	330, 331, 332, 533, 534, 535, 386, 0, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 0, 0, 341, 536, 537, 0, 538, 0,
	343, 0, 539, 0, 344, 345, 346, 0, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 354, 353,
	0, 355, 540, 0, 356, 357, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 363, 364, 0, 365, 366,
	368, 370, 367, 369, 374, 371, 372, 373, 376, 0,
	375, 0, 377, 378, 379, 382, 383, 381, 0, 380,
	0, 242, 0, 384, 0, 541, 385, 542, 387, 388,
	0, 0, 389, 0, 0, 0, 391, 392, 393, 0,
	0, 394, 395, 543, 0, 396, 0, 544, 397, 398,
	390, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 545, 546, 547, 409, 548, 410, 411, 0,
	412, 0, 413, 414, 415, 416, 417, 418, 419, 549,
	421, 420, 422, 0, 0, 0, 0, 0, 0, 423,
	0, 425, 426, 427, 424, 428, 429, 430, 431, 0,
	432, 433, 434, 0, 435, 436, 437, 438, 550, 439,
	0, 440, 441, 447, 448, 442, 443, 449, 450, 451,
	452, 453, 0, 455, 456, 454, 457, 458, 459, 0,
	460, 444, 445, 461, 462, 0, 463, 464, 551, 0,
	465, 0, 466, 467, 468, 469, 446, 470, 475, 552,
	471, 472, 473, 474, 553, 0, 477, 478, 0, 476,
	0, 479, 480, 481, 482, 483, 484, 311, 485, 0,
	486, 554, 555, 556, 557, 0, 493, 0, 487, 488,
	558, 489, 559, 0, 490, 491, 492, 0, 494, 495,
	0, 0, 496, 497, 498, 500, 501, 499, 502, 0,
	503, 0, 0, 504, 505, 506, 560, 561, 562, 0,
	508, 507, 563, 0, 237, 2613, 0, 509, 510, 564,
	511, 512, 513, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 1362, 514, 0, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 515, 516, 0,
	517, 258, 518, 0, 259, 260, 261, 262, 263, 0,
	0, 0, 264, 519, 520, 521, 0, 265, 266, 522,
	0, 0, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 0, 0, 285, 286, 287, 288, 0, 289,
	523, 524, 0, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 298, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 525, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 526, 527, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 528,
	0, 0, 0, 320, 0, 321, 0, 0, 0, 322,
	323, 529, 530, 324, 325, 0, 326, 531, 0, 532,
	327, 0, 328, 329, 330, 331, 332, 533, 534, 535,
	386, 0, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 0, 339, 340, 342, 0, 0, 341, 536,
	537, 0, 538, 0, 343, 0, 539, 0, 344, 345,
	346, 0, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 354, 353, 0, 355, 540, 0, 356, 357,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 363,
	364, 0, 365, 366, 368, 370, 367, 369, 374, 371,
	372, 373, 376, 0, 375, 0, 377, 378, 379, 382,
	383, 381, 0, 380, 0, 0, 0, 384, 0, 541,
	385, 542, 387, 388, 0, 0, 389, 0, 0, 0,
	391, 392, 393, 0, 0, 394, 395, 543, 0, 396,
	0, 544, 397, 398, 390, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 545, 546, 547, 409,
	548, 410, 411, 0, 412, 0, 413, 414, 415, 416,
	417, 418, 419, 549, 421, 420, 422, 0, 0, 0,
	0, 0, 0, 423, 0, 425, 426, 427, 424, 428,
	429, 430, 431, 0, 432, 433, 434, 0, 435, 436,
	437, 438, 550, 439, 0, 440, 441, 447, 448, 442,
	443, 449, 450, 451, 452, 453, 0, 455, 456, 454,
	457, 458, 459, 0, 460, 444, 445, 461, 462, 0,
	463, 464, 551, 0, 465, 0, 466, 467, 468, 469,
	446, 470, 475, 552, 471, 472, 473, 474, 553, 0,
	477, 478, 0, 476, 0, 479, 480, 481, 482, 483,
	484, 311, 485, 0, 486, 554, 555, 556, 557, 0,
	493, 0, 487, 488, 558, 489, 559, 0, 490, 491,
	492, 0, 494, 495, 0, 0, 496, 497, 498, 500,
	501, 499, 502, 0, 503, 0, 0, 504, 505, 506,
	560, 561, 562, 0, 508, 507, 563, 237, 0, 0,
	0, 509, 510, 564, 511, 512, 513, 0, 0, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 514, 0,
	4077, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	515, 516, 0, 517, 258, 518, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 519, 520, 521, 0,
	265, 266, 522, 0, 0, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 523, 524, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 525,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	526, 527, 0, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 528, 0, 0, 0, 320, 0, 321, 0,
	0, 0, 322, 323, 529, 530, 324, 325, 0, 326,
	531, 0, 532, 327, 0, 328, 329, 330, 331, 332,
	533, 534, 535, 386, 0, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 241, 339, 340, 342, 0,
	0, 341, 536, 537, 0, 538, 0, 343, 0, 539,
	0, 344, 345, 346, 0, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 354, 353, 0, 355, 540,
	0, 356, 357, 0, 0, 358, 359, 360, 0, 0,
	361, 362, 363, 364, 0, 365, 366, 368, 370, 367,
	369, 374, 371, 372, 373, 376, 0, 375, 0, 377,
	378, 379, 382, 383, 381, 0, 380, 0, 242, 0,
	384, 0, 541, 385, 542, 387, 388, 0, 0, 389,
	0, 0, 0, 391, 392, 393, 0, 0, 394, 395,
	543, 0, 396, 0, 544, 397, 398, 390, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 545,
	546, 547, 409, 548, 410, 411, 0, 412, 0, 413,
	414, 415, 416, 417, 418, 419, 549, 421, 420, 422,
	0, 0, 0, 0, 0, 0, 423, 0, 425, 426,
	427, 424, 428, 429, 430, 431, 0, 432, 433, 434,
	0, 435, 436, 437, 438, 550, 439, 0, 440, 441,
	447, 448, 442, 443, 449, 450, 451, 452, 453, 0,
	455, 456, 454, 457, 458, 459, 0, 460, 444, 445,
	461, 462, 0, 463, 464, 551, 0, 465, 0, 466,
	467, 468, 469, 446, 470, 475, 552, 471, 472, 473,
	474, 553, 0, 477, 478, 0, 476, 0, 479, 480,
	481, 482, 483, 484, 311, 485, 0, 486, 554, 555,
	556, 557, 0, 493, 0, 487, 488, 558, 489, 559,
	0, 490, 491, 492, 0, 494, 495, 0, 0, 496,
	497, 498, 500, 501, 499, 502, 0, 503, 0, 0,
	504, 505, 506, 560, 561, 562, 237, 508, 507, 563,
	0, 0, 0, 0, 509, 510, 564, 511, 512, 513,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 514, 0, 0,
	0, 3027, 251, 252, 254, 253, 255, 256, 257, 515,
	516, 0, 517, 258, 518, 0, 259, 260, 261, 262,
	263, 0, 0, 0, 264, 519, 520, 521, 0, 265,
	266, 522, 0, 0, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 0, 0, 285, 286, 287, 288,
	0, 289, 523, 524, 0, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 298, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 525, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 526,
	527, 0, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 528, 0, 0, 0, 320, 0, 321, 0, 0,
	0, 322, 323, 529, 530, 324, 325, 0, 326, 531,
	0, 532, 327, 0, 328, 329, 330, 331, 332, 533,
	534, 535, 386, 0, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 0, 0,
	341, 536, 537, 0, 538, 0, 343, 0, 539, 0,
	344, 345, 346, 0, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 354, 353, 0, 355, 540, 0,
	356, 357, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 363, 364, 0, 365, 366, 368, 370, 367, 369,
	374, 371, 372, 373, 376, 0, 375, 0, 377, 378,
	379, 382, 383, 381, 0, 380, 0, 242, 0, 384,
	0, 541, 385, 542, 387, 388, 0, 0, 389, 0,
	0, 0, 391, 392, 393, 0, 0, 394, 395, 543,
	0, 396, 0, 544, 397, 398, 390, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 545, 546,
	547, 409, 548, 410, 411, 0, 412, 0, 413, 414,
	415, 416, 417, 418, 419, 549, 421, 420, 422, 0,
	0, 0, 0, 0, 0, 423, 0, 425, 426, 427,
	424, 428, 429, 430, 431, 0, 432, 433, 434, 0,
	435, 436, 437, 438, 550, 439, 0, 440, 441, 447,
	448, 442, 443, 449, 450, 451, 452, 453, 0, 455,
	456, 454, 457, 458, 459, 0, 460, 444, 445, 461,
	462, 0, 463, 464, 551, 0, 465, 0, 466, 467,
	468, 469, 446, 470, 475, 552, 471, 472, 473, 474,
	553, 0, 477, 478, 0, 476, 0, 479, 480, 481,
	482, 483, 484, 311, 485, 0, 486, 554, 555, 556,
	557, 0, 493, 0, 487, 488, 558, 489, 559, 0,
	490, 491, 492, 0, 494, 495, 0, 0, 496, 497,
	498, 500, 501, 499, 502, 0, 503, 0, 0, 504,
	505, 506, 560, 561, 562, 237, 508, 507, 563, 0,
	0, 0, 0, 509, 510, 564, 511, 512, 513, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 514, 0, 0, 0,
	1362, 251, 252, 254, 253, 255, 256, 257, 515, 516,
	0, 517, 258, 518, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 519, 520, 521, 0, 265, 266,
	522, 0, 0, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 288, 0,
	289, 523, 524, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 525, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 526, 527,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	528, 0, 0, 0, 320, 0, 321, 0, 0, 0,
	322, 323, 529, 530, 324, 325, 0, 326, 531, 0,
	532, 327, 0, 328, 329, 330, 331, 332, 533, 534,
	535, 386, 0, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 0, 339, 340, 342, 0, 0, 341,
	536, 537, 0, 538, 0, 343, 0, 539, 0, 344,
	345, 346, 0, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 354, 353, 0, 355, 540, 0, 356,
	357, 0, 0, 358, 359, 360, 0, 0, 361, 362,
	363, 364, 0, 365, 366, 368, 370, 367, 369, 374,
	371, 372, 373, 376, 0, 375, 0, 377, 378, 379,
	382, 383, 381, 0, 380, 0, 0, 0, 384, 0,
	541, 385, 542, 387, 388, 0, 0, 389, 0, 0,
	0, 391, 392, 393, 0, 0, 394, 395, 543, 0,
	396, 0, 544, 397, 398, 390, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 545, 546, 547,
	409, 548, 410, 411, 0, 412, 0, 413, 414, 415,
	416, 417, 418, 419, 549, 421, 420, 422, 0, 0,
	0, 0, 0, 0, 423, 0, 425, 426, 427, 424,
	428, 429, 430, 431, 0, 432, 433, 434, 0, 435,
	436, 437, 438, 550, 439, 0, 440, 441, 447, 448,
	442, 443, 449, 450, 451, 452, 453, 0, 455, 456,
	454, 457, 458, 459, 0, 460, 444, 445, 461, 462,
	0, 463, 464, 551, 0, 465, 0, 466, 467, 468,
	469, 446, 470, 475, 552, 471, 472, 473, 474, 553,
	0, 477, 478, 0, 476, 0, 479, 480, 481, 482,
	483, 484, 311, 485, 0, 486, 554, 555, 556, 557,
	0, 493, 0, 487, 488, 558, 489, 559, 0, 490,
	491, 492, 0, 494, 495, 0, 0, 496, 497, 498,
	500, 501, 499, 502, 0, 503, 0, 0, 504, 505,
	506, 560, 561, 562, 0, 508, 507, 563, 237, 0,
	0, 0, 509, 510, 564, 511, 512, 513, 0, 0,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 514,
	0, 2586, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 515, 516, 0, 517, 258, 518, 0, 259, 260,
	261, 262, 263, 0, 0, 0, 264, 519, 520, 521,
	0, 265, 266, 522, 0, 0, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	287, 288, 0, 289, 523, 524, 0, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 298,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	525, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 526, 527, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 528, 0, 0, 0, 320, 0, 321,
	0, 0, 0, 322, 323, 529, 530, 324, 325, 0,
	326, 531, 0, 532, 327, 0, 328, 329, 330, 331,
	332, 533, 534, 535, 386, 0, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 0, 339, 340, 342,
	0, 0, 341, 536, 537, 0, 538, 0, 343, 0,
	539, 0, 344, 345, 346, 0, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 354, 353, 0, 355,
	540, 0, 356, 357, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 363, 364, 0, 365, 366, 368, 370,
	367, 369, 374, 371, 372, 373, 376, 0, 375, 0,
	377, 378, 379, 382, 383, 381, 0, 380, 0, 0,
	0, 384, 0, 541, 385, 542, 387, 388, 0, 0,
	389, 0, 0, 0, 391, 392, 393, 0, 0, 394,
	395, 543, 0, 396, 0, 544, 397, 398, 390, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	545, 546, 547, 409, 548, 410, 411, 0, 412, 0,
	413, 414, 415, 416, 417, 418, 419, 549, 421, 420,
	422, 0, 0, 0, 0, 0, 0, 423, 0, 425,
	426, 427, 424, 428, 429, 430, 431, 0, 432, 433,
	434, 0, 435, 436, 437, 438, 550, 439, 0, 440,
	441, 447, 448, 442, 443, 449, 450, 451, 452, 453,
	0, 455, 456, 454, 457, 458, 459, 0, 460, 444,
	445, 461, 462, 0, 463, 464, 551, 0, 465, 0,
	466, 467, 468, 469, 446, 470, 475, 552, 471, 472,
	473, 474, 553, 0, 477, 478, 0, 476, 0, 479,
	480, 481, 482, 483, 484, 311, 485, 0, 486, 554,
	555, 556, 557, 0, 493, 0, 487, 488, 558, 489,
	559, 0, 490, 491, 492, 0, 494, 495, 0, 0,
	496, 497, 498, 500, 501, 499, 502, 0, 503, 0,
	0, 504, 505, 506, 560, 561, 562, 0, 508, 507,
	563, 237, 0, 0, 0, 509, 510, 564, 511, 512,
	513, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 514, 0, 3168, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 515, 516, 0, 517, 258, 518,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	519, 520, 521, 0, 265, 266, 522, 0, 0, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 523, 524, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 525, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 526, 527, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 528, 0, 0, 0,
	320, 0, 321, 0, 0, 0, 322, 323, 529, 530,
	324, 325, 0, 326, 531, 0, 532, 327, 0, 328,
	329, 330, 331, 332, 533, 534, 535, 386, 0, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 0,
	339, 340, 342, 0, 0, 341, 536, 537, 0, 538,
	0, 343, 0, 539, 0, 344, 345, 346, 0, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 354,
	353, 0, 355, 540, 0, 356, 357, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 363, 364, 0, 365,
	366, 368, 370, 367, 369, 374, 371, 372, 373, 376,
	0, 375, 0, 377, 378, 379, 382, 383, 381, 0,
	380, 0, 0, 0, 384, 0, 541, 385, 542, 387,
	388, 0, 0, 389, 0, 0, 0, 391, 392, 393,
	0, 0, 394, 395, 543, 0, 396, 0, 544, 397,
	398, 390, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 545, 546, 547, 409, 548, 410, 411,
	0, 412, 0, 413, 414, 415, 416, 417, 418, 419,
	549, 421, 420, 422, 0, 0, 0, 0, 0, 0,
	423, 0, 425, 426, 427, 424, 428, 429, 430, 431,
	0, 432, 433, 434, 0, 435, 436, 437, 438, 550,
	439, 0, 440, 441, 447, 448, 442, 443, 449, 450,
	451, 452, 453, 0, 455, 456, 454, 457, 458, 459,
	0, 460, 444, 445, 461, 462, 0, 463, 464, 551,
	0, 465, 0, 466, 467, 468, 469, 446, 470, 475,
	552, 471, 472, 473, 474, 553, 0, 477, 478, 0,
	476, 0, 479, 480, 481, 482, 483, 484, 311, 485,
	0, 486, 554, 555, 556, 557, 0, 493, 0, 487,
	488, 558, 489, 559, 0, 490, 491, 492, 0, 494,
	495, 0, 0, 496, 497, 498, 500, 501, 499, 502,
	0, 503, 0, 0, 504, 505, 506, 560, 561, 562,
	0, 508, 507, 563, 0, 763, 0, 647, 509, 510,
	564, 511, 512, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 2019, 514, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	515, 516, 0, 517, 258, 518, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 519, 520, 521, 0,
	265, 266, 522, 0, 0, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 654,
	288, 0, 289, 523, 524, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 525,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	526, 527, 0, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 528, 0, 0, 0, 320, 0, 321, 0,
	761, 0, 322, 323, 529, 530, 324, 325, 0, 326,
	531, 0, 532, 327, 0, 328, 329, 330, 331, 332,
	533, 534, 535, 386, 0, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 241, 339, 340, 342, 0,
	0, 341, 536, 537, 0, 538, 0, 343, 0, 539,
	0, 344, 345, 346, 0, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 354, 353, 0, 355, 540,
	0, 356, 357, 0, 0, 358, 359, 360, 0, 0,
	361, 362, 363, 364, 0, 365, 366, 368, 370, 367,
	369, 374, 371, 372, 373, 376, 0, 375, 0, 377,
	378, 379, 382, 383, 381, 0, 380, 0, 242, 0,
	384, 0, 541, 385, 542, 387, 388, 0, 0, 389,
	0, 0, 0, 391, 392, 393, 0, 0, 394, 395,
	543, 0, 396, 0, 544, 397, 398, 390, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 545,
	546, 547, 409, 548, 410, 411, 0, 412, 0, 413,
	414, 415, 416, 417, 418, 419, 549, 421, 420, 422,
	0, 0, 0, 0, 0, 0, 423, 0, 425, 426,
	427, 424, 428, 429, 430, 431, 0, 432, 433, 434,
	0, 435, 436, 437, 438, 550, 439, 0, 440, 441,
	447, 448, 442, 443, 449, 450, 451, 452, 453, 0,
	455, 456, 454, 457, 458, 459, 0, 460, 444, 445,
	461, 462, 0, 463, 464, 551, 0, 465, 0, 466,
	467, 468, 469, 446, 470, 475, 552, 471, 472, 473,
	474, 553, 0, 477, 478, 0, 476, 652, 479, 480,
	481, 482, 653, 484, 311, 485, 0, 486, 554, 555,
	556, 557, 0, 493, 0, 487, 488, 558, 489, 559,
	0, 490, 491, 492, 0, 494, 495, 0, 0, 496,
	497, 498, 500, 501, 499, 502, 0, 503, 0, 0,
	504, 505, 506, 560, 561, 562, 0, 508, 507, 563,
	0, 645, 0, 647, 509, 510, 564, 511, 512, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 657, 249, 250, 0,
	0, 0, 0, 0, 514, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 515, 516, 0, 517,
	258, 518, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 519, 520, 521, 0, 265, 266, 522, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 654, 288, 0, 289, 523,
	524, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 525, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 526, 527, 0, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 528, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	529, 530, 324, 325, 0, 326, 531, 0, 532, 327,
	0, 328, 329, 330, 331, 332, 533, 534, 535, 386,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 241, 339, 340, 342, 0, 0, 341, 536, 537,
	0, 538, 0, 343, 0, 539, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 354, 353, 0, 355, 540, 0, 356, 357, 0,
	0, 358, 359, 360, 0, 0, 361, 362, 363, 364,
	0, 365, 366, 368, 370, 367, 369, 374, 371, 372,
	373, 376, 0, 375, 0, 377, 378, 379, 382, 383,
	381, 0, 380, 0, 242, 0, 384, 0, 541, 385,
	542, 387, 388, 0, 0, 389, 0, 0, 0, 391,
	392, 393, 0, 0, 394, 395, 543, 0, 396, 0,
	544, 397, 398, 390, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 545, 546, 547, 409, 548,
	410, 411, 0, 412, 0, 413, 414, 415, 416, 417,
	418, 419, 549, 421, 420, 422, 0, 0, 0, 0,
	0, 0, 423, 0, 425, 426, 427, 424, 428, 429,
	430, 431, 0, 432, 433, 434, 0, 435, 436, 437,
	438, 550, 439, 0, 440, 441, 447, 448, 442, 443,
	449, 450, 451, 452, 453, 0, 455, 456, 454, 457,
	458, 459, 0, 460, 444, 445, 461, 462, 0, 463,
	464, 551, 0, 465, 0, 466, 467, 468, 469, 446,
	470, 475, 552, 471, 472, 473, 474, 553, 0, 477,
	478, 0, 476, 652, 479, 480, 481, 482, 653, 484,
	311, 485, 0, 486, 554, 555, 556, 557, 0, 493,
	0, 487, 488, 558, 489, 559, 0, 490, 491, 492,
	0, 494, 495, 0, 0, 496, 497, 498, 500, 501,
	499, 502, 0, 503, 0, 0, 504, 505, 506, 560,
	561, 562, 647, 508, 507, 563, 0, 0, 0, 0,
	509, 510, 564, 511, 512, 513, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 249, 250, 0, 0,
	0, 0, 657, 514, 0, 0, 0, 0, 251, 252,
	254, 253, 255, 256, 257, 515, 516, 0, 517, 258,
	518, 0, 259, 260, 261, 262, 263, 0, 0, 0,
	264, 519, 520, 521, 0, 265, 266, 522, 0, 0,
	0, 267, 268, 269, 270, 271, 272, 273, 0, 0,
	275, 276, 277, 274, 0, 278, 0, 279, 280, 281,
	0, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	0, 0, 285, 286, 654, 288, 0, 289, 523, 524,
	0, 293, 290, 291, 0, 294, 292, 0, 295, 296,
	0, 0, 297, 298, 299, 0, 300, 301, 0, 302,
	303, 0, 304, 305, 525, 306, 307, 308, 310, 312,
	309, 313, 314, 315, 316, 526, 527, 0, 240, 0,
	0, 0, 0, 0, 317, 318, 319, 528, 0, 0,
	0, 320, 0, 321, 0, 0, 0, 322, 323, 529,
	530, 324, 325, 0, 326, 531, 0, 532, 327, 0,
	328, 329, 330, 331, 332, 533, 534, 535, 386, 0,
	333, 334, 0, 335, 336, 337, 338, 0, 0, 0,
	241, 339, 340, 342, 0, 0, 341, 536, 537, 0,
	538, 0, 343, 0, 539, 0, 344, 345, 346, 0,
	347, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	354, 353, 0, 355, 540, 0, 356, 357, 0, 0,
	358, 359, 360, 0, 0, 361, 362, 363, 364, 0,
	365, 366, 368, 370, 367, 369, 374, 371, 372, 373,
	376, 0, 375, 0, 377, 378, 379, 382, 383, 381,
	0, 380, 0, 242, 0, 384, 0, 541, 385, 542,
	387, 388, 0, 0, 389, 0, 0, 0, 391, 392,
	393, 0, 0, 394, 395, 543, 0, 396, 0, 544,
	397, 398, 390, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 545, 546, 547, 409, 548, 410,
	411, 0, 412, 0, 413, 414, 415, 416, 417, 418,
	419, 549, 421, 420, 422, 0, 0, 0, 0, 0,
	0, 423, 0, 425, 426, 427, 424, 428, 429, 430,
	431, 0, 432, 433, 434, 0, 435, 436, 437, 438,
	550, 439, 0, 440, 441, 447, 448, 442, 443, 449,
	450, 451, 452, 453, 0, 455, 456, 454, 457, 458,
	459, 0, 460, 444, 445, 461, 462, 0, 463, 464,
	551, 0, 465, 0, 466, 467, 468, 469, 446, 470,
	475, 552, 471, 472, 473, 474, 553, 0, 477, 478,
	0, 476, 652, 479, 480, 481, 482, 653, 484, 311,
	485, 0, 486, 554, 555, 556, 557, 0, 493, 0,
	487, 488, 558, 489, 559, 0, 490, 491, 492, 0,
	494, 495, 0, 0, 496, 497, 498, 500, 501, 499,
	502, 0, 503, 0, 0, 504, 505, 506, 560, 561,
	562, 647, 508, 507, 563, 0, 0, 0, 0, 509,
	510, 564, 511, 512, 513, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 657, 514, 0, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 515, 516, 0, 517, 258, 518,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	519, 520, 521, 0, 265, 266, 522, 0, 0, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 654, 288, 0, 289, 523, 524, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 525, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 526, 527, 0, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 528, 0, 0, 0,
	320, 0, 321, 0, 0, 0, 322, 323, 529, 530,
	324, 325, 0, 326, 531, 0, 532, 327, 0, 328,
	329, 330, 331, 332, 533, 534, 535, 386, 0, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 0, 0, 341, 536, 537, 0, 538,
	0, 343, 0, 539, 0, 344, 345, 346, 0, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 354,
	353, 0, 355, 540, 0, 356, 357, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 363, 364, 0, 365,
	366, 368, 370, 367, 369, 374, 371, 372, 373, 376,
	0, 375, 0, 377, 378, 379, 382, 383, 381, 0,
	380, 0, 242, 0, 384, 0, 541, 385, 542, 387,
	388, 0, 0, 389, 0, 0, 0, 391, 392, 393,
	0, 0, 394, 395, 543, 0, 396, 0, 544, 397,
	398, 390, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 545, 546, 547, 409, 548, 410, 411,
	0, 412, 0, 413, 414, 415, 416, 417, 418, 419,
	549, 421, 420, 422, 0, 0, 0, 0, 0, 0,
	423, 0, 425, 426, 427, 424, 428, 429, 430, 431,
	0, 432, 433, 434, 0, 2055, 436, 437, 438, 550,
	439, 0, 440, 441, 447, 448, 442, 443, 449, 450,
	451, 452, 453, 0, 455, 456, 454, 457, 458, 459,
	0, 460, 444, 445, 461, 462, 0, 463, 464, 551,
	0, 465, 0, 466, 467, 468, 469, 446, 470, 475,
	552, 471, 472, 473, 474, 553, 0, 477, 478, 0,
	476, 652, 479, 480, 481, 482, 653, 484, 311, 485,
	0, 486, 554, 555, 556, 557, 0, 493, 0, 487,
	488, 558, 489, 559, 0, 490, 491, 492, 0, 494,
	495, 0, 0, 496, 497, 498, 500, 501, 499, 502,
	0, 503, 0, 0, 504, 505, 506, 560, 561, 562,
	1790, 508, 507, 563, 0, 0, 0, 0, 509, 510,
	564, 511, 512, 513, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	657, 0, 0, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 0, 1796, 0, 1786, 258, 1802, 0,
	259, 260, 261, 262, 263, 0, 0, 0, 264, 1811,
	1812, 0, 0, 265, 266, 0, 0, 1235, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	1028, 283, 284, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 288, 1012, 289, 1800, 1799, 0, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 997, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 0, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 1798, 0, 0, 0, 320,
	0, 321, 0, 0, 1029, 322, 323, 1807, 1808, 324,
	325, 0, 326, 0, 0, 0, 327, 0, 328, 329,
	330, 331, 332, 0, 0, 0, 386, 1031, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 0, 339,
	340, 342, 0, 1030, 341, 1793, 1794, 0, 1789, 0,
	343, 1032, 0, 1033, 344, 345, 346, 1034, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 354, 353,
	0, 355, 0, 1035, 356, 357, 1036, 0, 358, 359,
	360, 0, 0, 361, 362, 363, 364, 0, 365, 366,
	368, 370, 367, 369, 374, 371, 372, 373, 376, 0,
	375, 1037, 377, 378, 379, 382, 383, 381, 1038, 380,
	0, 0, 1039, 384, 0, 0, 385, 1801, 387, 388,
	0, 0, 389, 0, 0, 0, 391, 392, 393, 0,
	0, 394, 395, 0, 1040, 396, 1041, 0, 397, 398,
	390, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 1783, 1784, 0, 409, 0, 410, 411, 0,
	412, 0, 413, 414, 415, 416, 417, 418, 419, 1797,
	421, 420, 422, 0, 0, 0, 0, 0, 0, 423,
	0, 425, 426, 427, 424, 428, 429, 430, 431, 0,
	432, 433, 434, 1042, 435, 436, 437, 438, 0, 439,
	0, 440, 441, 447, 448, 442, 443, 449, 450, 451,
	452, 453, 0, 455, 456, 454, 457, 458, 459, 0,
	460, 444, 445, 461, 462, 1043, 463, 464, 1795, 0,
	465, 0, 466, 467, 468, 469, 446, 470, 475, 1810,
	471, 472, 473, 474, 0, 0, 477, 478, 0, 476,
	0, 479, 480, 481, 482, 483, 484, 311, 485, 0,
	486, 1803, 1804, 1805, 1806, 0, 493, 0, 487, 488,
	0, 489, 0, 0, 490, 491, 492, 0, 494, 495,
	0, 0, 496, 497, 498, 500, 501, 499, 502, 0,
	503, 0, 0, 504, 505, 506, 0, 1787, 1809, 0,
	508, 507, 0, 0, 0, 0, 0, 509, 510, 0,
	511, 512, 513, 1269, 1268, 0, 0, 0, 0, 1266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	1777, 0, 0, 0, 514, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 515, 516, 0, 517,
	258, 518, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 519, 520, 521, 0, 265, 266, 522, 0,
	1235, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 1028, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 523,
	524, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 525, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 526, 527, 0, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 528, 0,
	0, 0, 320, 0, 321, 0, 0, 1029, 322, 323,
	529, 530, 324, 325, 0, 326, 531, 0, 532, 327,
	0, 328, 329, 330, 331, 332, 533, 534, 535, 386,
	1031, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 1030, 341, 536, 537,
	0, 538, 0, 343, 1032, 539, 1033, 344, 345, 346,
	1034, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 354, 353, 0, 355, 540, 1035, 356, 357, 1036,
	0, 358, 359, 360, 0, 0, 361, 362, 363, 364,
	0, 365, 366, 368, 370, 367, 369, 374, 371, 372,
	373, 376, 0, 375, 1037, 377, 378, 379, 382, 383,
	381, 1038, 380, 0, 0, 1039, 384, 3327, 541, 385,
	542, 387, 388, 0, 0, 389, 0, 0, 0, 391,
	392, 393, 0, 0, 394, 395, 543, 1040, 396, 1041,
	544, 397, 398, 390, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 545, 546, 547, 409, 548,
	410, 411, 0, 412, 0, 413, 414, 415, 416, 417,
	418, 419, 549, 421, 420, 422, 0, 0, 0, 0,
	0, 0, 423, 0, 425, 426, 427, 424, 428, 429,
	430, 431, 0, 432, 433, 434, 1042, 435, 436, 437,
	438, 550, 439, 0, 440, 441, 447, 448, 442, 443,
	449, 450, 451, 452, 453, 0, 455, 456, 454, 457,
	458, 459, 0, 460, 444, 445, 461, 462, 1043, 463,
	464, 551, 0, 465, 0, 466, 467, 468, 469, 446,
	470, 475, 552, 471, 472, 473, 474, 553, 0, 477,
	478, 0, 476, 0, 479, 480, 481, 482, 483, 484,
	311, 485, 0, 486, 554, 555, 556, 557, 0, 493,
	0, 487, 488, 558, 489, 559, 0, 490, 491, 492,
	0, 494, 495, 0, 0, 496, 497, 498, 500, 501,
	499, 502, 0, 503, 0, 0, 504, 505, 506, 560,
	561, 562, 0, 508, 507, 563, 0, 0, 0, 0,
	509, 510, 564, 511, 512, 513, 1269, 1268, 0, 0,
	0, 0, 1266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 514, 0, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 515,
	516, 0, 517, 258, 518, 0, 259, 260, 261, 262,
	263, 0, 0, 0, 264, 519, 520, 521, 0, 265,
	266, 522, 0, 1235, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 1028, 283, 284, 0,
	0, 0, 0, 0, 0, 0, 285, 286, 287, 288,
	0, 289, 523, 524, 0, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 298, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 525, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 526,
	527, 0, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 528, 0, 0, 0, 320, 0, 321, 0, 0,
	1029, 322, 323, 529, 530, 324, 325, 0, 326, 531,
	0, 532, 327, 0, 328, 329, 330, 331, 332, 533,
	534, 535, 386, 1031, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 0, 339, 340, 342, 0, 1030,
	341, 536, 537, 0, 538, 0, 343, 1032, 539, 1033,
	344, 345, 346, 1034, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 354, 353, 0, 355, 540, 1035,
	356, 357, 1036, 0, 358, 359, 360, 0, 0, 361,
	362, 363, 364, 0, 365, 366, 368, 370, 367, 369,
	374, 371, 372, 373, 376, 0, 375, 1037, 377, 378,
	379, 382, 383, 381, 1038, 380, 0, 0, 1039, 384,
	3007, 541, 385, 542, 387, 388, 0, 0, 389, 0,
	0, 0, 391, 392, 393, 0, 0, 394, 395, 543,
	1040, 396, 1041, 544, 397, 398, 390, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 545, 546,
	547, 409, 548, 410, 411, 0, 412, 0, 413, 414,
	415, 416, 417, 418, 419, 549, 421, 420, 422, 0,
	0, 0, 0, 0, 0, 423, 0, 425, 426, 427,
	424, 428, 429, 430, 431, 0, 432, 433, 434, 1042,
	435, 436, 437, 438, 550, 439, 0, 440, 441, 447,
	448, 442, 443, 449, 450, 451, 452, 453, 0, 455,
	456, 454, 457, 458, 459, 0, 460, 444, 445, 461,
	462, 1043, 463, 464, 551, 0, 465, 0, 466, 467,
	468, 469, 446, 470, 475, 552, 471, 472, 473, 474,
	553, 0, 477, 478, 0, 476, 0, 479, 480, 481,
	482, 483, 484, 311, 485, 0, 486, 554, 555, 556,
	557, 0, 493, 0, 487, 488, 558, 489, 559, 0,
	490, 491, 492, 0, 494, 495, 0, 0, 496, 497,
	498, 500, 501, 499, 502, 0, 503, 0, 0, 504,
	505, 506, 560, 561, 562, 0, 508, 507, 563, 1269,
	1268, 0, 0, 509, 510, 564, 511, 512, 513, 0,
	0, 0, 0, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	514, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 515, 516, 0, 517, 258, 518, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 519, 520,
	521, 0, 265, 266, 522, 0, 1235, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 1028,
	283, 284, 0, 0, 0, 0, 0, 0, 2996, 285,
	286, 287, 288, 0, 289, 523, 524, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 525, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 526, 527, 0, 240, 0, 0, 0, 0,
	0, 317, 318, 319, 528, 0, 0, 0, 320, 0,
	321, 0, 0, 1029, 322, 323, 529, 530, 324, 325,
	0, 326, 531, 0, 532, 327, 0, 328, 329, 330,
	331, 332, 533, 534, 535, 386, 1031, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 0, 339, 340,
	342, 0, 1030, 341, 536, 537, 0, 538, 0, 343,
	1032, 539, 1033, 344, 345, 346, 1034, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 354, 353, 0,
	355, 540, 1035, 356, 357, 1036, 0, 358, 359, 360,
	0, 0, 361, 362, 363, 364, 0, 365, 366, 368,
	370, 367, 369, 374, 371, 372, 373, 376, 0, 375,
	1037, 377, 378, 379, 382, 383, 381, 1038, 380, 0,
	0, 1039, 384, 0, 541, 385, 542, 387, 388, 0,
	0, 389, 0, 0, 0, 391, 392, 393, 0, 0,
	394, 395, 543, 1040, 396, 1041, 544, 397, 398, 390,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	408, 545, 546, 547, 409, 548, 410, 411, 0, 412,
	0, 413, 414, 415, 416, 417, 418, 419, 549, 421,
	420, 422, 0, 0, 0, 0, 0, 0, 423, 0,
	425, 426, 427, 424, 428, 429, 430, 431, 0, 432,
	433, 434, 1042, 435, 436, 437, 438, 550, 439, 0,
	440, 441, 447, 448, 442, 443, 449, 450, 451, 452,
	453, 0, 455, 456, 454, 457, 458, 459, 2997, 460,
	444, 445, 461, 462, 1043, 463, 464, 551, 0, 465,
	0, 466, 467, 468, 469, 446, 470, 475, 552, 471,
	472, 473, 474, 553, 0, 477, 478, 0, 476, 0,
	479, 480, 481, 482, 483, 484, 311, 485, 0, 486,
	554, 555, 556, 557, 0, 493, 0, 487, 488, 558,
	489, 559, 0, 490, 491, 492, 0, 494, 495, 0,
	0, 496, 497, 498, 500, 501, 499, 502, 0, 503,
	0, 0, 504, 505, 506, 560, 561, 562, 237, 508,
	507, 563, 0, 0, 0, 0, 509, 510, 564, 511,
	512, 513, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 514,
	0, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 515, 516, 0, 517, 258, 518, 0, 259, 260,
	261, 262, 263, 0, 0, 0, 264, 519, 520, 521,
	0, 265, 266, 522, 0, 0, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	287, 288, 0, 289, 523, 524, 0, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 298,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	525, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 526, 527, 0, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 528, 0, 0, 0, 320, 0, 321,
	0, 0, 0, 322, 323, 529, 530, 324, 325, 0,
	326, 531, 0, 532, 327, 0, 328, 329, 330, 331,
	332, 533, 534, 535, 386, 0, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	0, 0, 341, 536, 537, 0, 538, 0, 343, 0,
	539, 0, 344, 345, 346, 0, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 354, 353, 0, 355,
	540, 0, 356, 357, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 363, 364, 0, 365, 366, 368, 370,
	367, 369, 374, 371, 372, 373, 376, 0, 375, 0,
	377, 378, 379, 382, 383, 381, 0, 380, 0, 242,
	0, 384, 0, 541, 385, 542, 387, 388, 0, 0,
	389, 0, 0, 0, 391, 392, 393, 0, 0, 394,
	395, 543, 0, 396, 0, 544, 397, 398, 390, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	545, 546, 547, 409, 548, 410, 411, 0, 412, 0,
	413, 414, 415, 416, 417, 418, 419, 549, 421, 420,
	422, 0, 0, 0, 0, 0, 0, 423, 0, 425,
	426, 427, 424, 428, 429, 430, 431, 0, 432, 433,
	434, 0, 435, 436, 437, 438, 550, 439, 0, 440,
	441, 447, 448, 442, 443, 449, 450, 451, 452, 453,
	0, 455, 456, 454, 457, 458, 459, 0, 460, 444,
	445, 461, 462, 0, 463, 464, 551, 0, 465, 0,
	466, 467, 468, 469, 446, 470, 475, 552, 471, 472,
	473, 474, 553, 0, 477, 478, 0, 476, 0, 479,
	480, 481, 482, 483, 484, 311, 485, 0, 486, 554,
	555, 556, 557, 0, 493, 0, 487, 488, 558, 489,
	559, 0, 490, 491, 492, 0, 494, 495, 0, 0,
	496, 497, 498, 500, 501, 499, 502, 0, 503, 0,
	0, 504, 505, 506, 560, 561, 562, 0, 508, 507,
	563, 0, 0, 0, 0, 509, 510, 564, 511, 512,
	513, 1466, 0, 1269, 1268, 0, 0, 0, 0, 1266,
	0, 0, 0, 0, 0, 0, 0, 657, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 514, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 515, 516, 0, 517,
	258, 518, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 519, 520, 521, 0, 265, 266, 522, 0,
	1235, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 1028, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 523,
	524, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 525, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 526, 527, 0, 240,
	0, 0, 0, 0, 0, 1465, 318, 319, 528, 0,
	0, 0, 320, 0, 321, 0, 0, 1029, 322, 323,
	529, 530, 324, 325, 0, 326, 531, 0, 532, 327,
	0, 328, 329, 330, 331, 332, 533, 534, 535, 386,
	1031, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 1030, 341, 536, 537,
	0, 538, 0, 343, 1032, 539, 1033, 344, 345, 346,
	1034, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 354, 353, 0, 355, 540, 1035, 356, 357, 1036,
	0, 358, 359, 360, 0, 0, 361, 362, 363, 364,
	0, 365, 366, 368, 370, 367, 369, 374, 371, 372,
	373, 376, 0, 375, 1037, 377, 378, 379, 382, 383,
	381, 1038, 380, 0, 0, 1039, 384, 0, 541, 385,
	542, 387, 388, 0, 0, 389, 0, 0, 0, 391,
	392, 393, 0, 0, 394, 395, 543, 1040, 396, 1041,
	544, 397, 398, 390, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 545, 546, 547, 409, 548,
	410, 411, 0, 412, 0, 413, 414, 415, 416, 417,
	1464, 419, 549, 421, 420, 422, 0, 0, 0, 0,
	0, 0, 423, 0, 425, 426, 427, 424, 428, 429,
	430, 431, 0, 432, 433, 434, 1042, 435, 436, 437,
	438, 550, 439, 0, 440, 441, 447, 448, 442, 443,
	449, 1463, 451, 452, 453, 0, 455, 456, 454, 457,
	458, 459, 0, 460, 444, 445, 461, 462, 1043, 463,
	464, 551, 0, 465, 0, 466, 467, 468, 469, 446,
	470, 475, 552, 471, 472, 473, 474, 553, 0, 477,
	478, 0, 476, 0, 479, 480, 481, 482, 483, 484,
	311, 485, 0, 486, 554, 555, 556, 557, 0, 493,
	0, 487, 488, 558, 489, 559, 0, 490, 491, 492,
	0, 494, 495, 0, 0, 496, 497, 498, 500, 501,
	499, 502, 0, 503, 0, 0, 504, 505, 506, 560,
	561, 562, 0, 508, 507, 563, 0, 0, 0, 0,
	509, 510, 564, 511, 512, 513, 1407, 0, 1269, 1268,
	0, 0, 0, 0, 1266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 514,
	0, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 515, 516, 0, 517, 258, 518, 0, 259, 260,
	261, 262, 263, 0, 0, 0, 264, 519, 520, 521,
	0, 265, 266, 522, 0, 1235, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 1028, 283,
	284, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	287, 288, 0, 289, 523, 524, 0, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 298,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	525, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 526, 527, 0, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 528, 0, 0, 0, 320, 0, 321,
	0, 0, 1029, 322, 323, 529, 530, 324, 325, 0,
	326, 531, 0, 532, 327, 0, 328, 329, 330, 331,
	332, 1406, 534, 535, 386, 1031, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 0, 339, 340, 342,
	0, 1030, 341, 536, 537, 0, 538, 0, 343, 1032,
	539, 1033, 344, 345, 346, 1034, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 354, 353, 0, 355,
	540, 1035, 356, 357, 1036, 0, 358, 359, 360, 0,
	0, 361, 362, 363, 364, 0, 365, 366, 368, 370,
	367, 369, 374, 371, 372, 373, 376, 0, 375, 1037,
	377, 378, 379, 382, 383, 381, 1038, 380, 0, 0,
	1039, 384, 0, 541, 385, 542, 387, 388, 0, 0,
	389, 0, 0, 0, 391, 392, 393, 0, 0, 394,
	395, 543, 1040, 396, 1041, 544, 397, 398, 390, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	545, 546, 547, 409, 548, 410, 411, 0, 412, 0,
	413, 414, 415, 416, 417, 418, 419, 549, 421, 420,
	422, 0, 0, 0, 0, 0, 0, 423, 0, 425,
	426, 427, 424, 428, 429, 430, 431, 0, 432, 433,
	434, 1042, 435, 436, 437, 438, 550, 439, 0, 440,
	441, 447, 448, 442, 443, 449, 450, 451, 452, 453,
	0, 455, 456, 454, 457, 458, 459, 0, 460, 444,
	445, 461, 462, 1043, 463, 464, 551, 0, 465, 0,
	466, 467, 468, 469, 446, 470, 475, 552, 471, 472,
	473, 474, 553, 0, 477, 478, 0, 476, 0, 479,
	480, 481, 482, 483, 484, 311, 485, 0, 486, 554,
	555, 556, 557, 0, 493, 0, 487, 488, 558, 489,
	559, 0, 490, 491, 492, 0, 494, 495, 0, 0,
	496, 497, 498, 500, 501, 499, 502, 0, 503, 0,
	0, 504, 505, 506, 560, 561, 562, 0, 508, 507,
	563, 0, 0, 0, 0, 509, 510, 564, 511, 512,
	513, 1338, 0, 1269, 1268, 0, 0, 0, 0, 1266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 514, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 515, 516, 0, 517,
	258, 518, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 519, 520, 521, 0, 265, 266, 522, 0,
	1235, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 1028, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 523,
	524, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 525, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 526, 527, 0, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 528, 0,
	0, 0, 320, 0, 321, 0, 0, 1029, 322, 323,
	529, 530, 324, 325, 0, 326, 531, 0, 532, 327,
	0, 328, 329, 330, 331, 332, 1337, 534, 535, 386,
	1031, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 1030, 341, 536, 537,
	0, 538, 0, 343, 1032, 539, 1033, 344, 345, 346,
	1034, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 354, 353, 0, 355, 540, 1035, 356, 357, 1036,
	0, 358, 359, 360, 0, 0, 361, 362, 363, 364,
	0, 365, 366, 368, 370, 367, 369, 374, 371, 372,
	373, 376, 0, 375, 1037, 377, 378, 379, 382, 383,
	381, 1038, 380, 0, 0, 1039, 384, 0, 541, 385,
	542, 387, 388, 0, 0, 389, 0, 0, 0, 391,
	392, 393, 0, 0, 394, 395, 543, 1040, 396, 1041,
	544, 397, 398, 390, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 545, 546, 547, 409, 548,
	410, 411, 0, 412, 0, 413, 414, 415, 416, 417,
	418, 419, 549, 421, 420, 422, 0, 0, 0, 0,
	0, 0, 423, 0, 425, 426, 427, 424, 428, 429,
	430, 431, 0, 432, 433, 434, 1042, 435, 436, 437,
	438, 550, 439, 0, 440, 441, 447, 448, 442, 443,
	449, 450, 451, 452, 453, 0, 455, 456, 454, 457,
	458, 459, 0, 460, 444, 445, 461, 462, 1043, 463,
	464, 551, 0, 465, 0, 466, 467, 468, 469, 446,
	470, 475, 552, 471, 472, 473, 474, 553, 0, 477,
	478, 0, 476, 0, 479, 480, 481, 482, 483, 484,
	311, 485, 0, 486, 554, 555, 556, 557, 0, 493,
	0, 487, 488, 558, 489, 559, 0, 490, 491, 492,
	0, 494, 495, 0, 0, 496, 497, 498, 500, 501,
	499, 502, 0, 503, 0, 0, 504, 505, 506, 560,
	561, 562, 0, 508, 507, 563, 0, 0, 0, 0,
	509, 510, 564, 511, 512, 513, 1302, 0, 1269, 1268,
	0, 0, 0, 0, 1266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 514,
	0, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 515, 516, 0, 517, 258, 518, 0, 259, 260,
	261, 262, 263, 0, 0, 0, 264, 519, 520, 521,
	0, 265, 266, 522, 0, 1235, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 1028, 283,
	284, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	287, 288, 0, 289, 523, 524, 0, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 298,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	525, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 526, 527, 0, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 528, 0, 0, 0, 320, 0, 321,
	0, 0, 1029, 322, 323, 529, 530, 324, 325, 0,
	326, 531, 0, 532, 327, 0, 328, 329, 330, 331,
	332, 533, 534, 535, 386, 1031, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 0, 339, 340, 342,
	0, 1030, 341, 536, 537, 0, 538, 0, 343, 1032,
	539, 1033, 344, 345, 346, 1034, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 354, 353, 0, 355,
	540, 1035, 356, 357, 1036, 0, 358, 359, 360, 0,
	0, 361, 362, 363, 364, 0, 365, 366, 368, 370,
	367, 369, 374, 371, 372, 373, 376, 0, 375, 1037,
	377, 378, 379, 382, 383, 381, 1038, 380, 0, 0,
	1039, 384, 0, 541, 385, 542, 387, 388, 0, 0,
	389, 0, 0, 0, 391, 392, 393, 0, 0, 394,
	395, 543, 1040, 396, 1041, 544, 397, 398, 390, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	545, 546, 547, 409, 548, 410, 411, 0, 412, 0,
	413, 414, 415, 416, 417, 418, 419, 549, 421, 420,
	422, 0, 0, 0, 0, 0, 0, 423, 0, 425,
	426, 427, 424, 428, 429, 430, 431, 0, 432, 433,
	434, 1042, 435, 436, 437, 438, 550, 439, 0, 440,
	441, 447, 448, 442, 443, 449, 450, 451, 452, 453,
	0, 455, 456, 454, 457, 458, 459, 0, 460, 444,
	445, 461, 462, 1043, 463, 464, 551, 0, 465, 0,
	466, 467, 468, 469, 446, 470, 475, 552, 471, 472,
	473, 474, 553, 0, 477, 478, 0, 476, 0, 479,
	480, 481, 482, 483, 484, 311, 485, 0, 486, 554,
	555, 556, 557, 0, 493, 0, 487, 488, 558, 489,
	559, 0, 490, 491, 492, 0, 494, 495, 0, 0,
	496, 497, 498, 500, 501, 499, 502, 0, 503, 0,
	0, 504, 505, 506, 560, 561, 562, 0, 508, 507,
	563, 0, 0, 0, 0, 509, 510, 564, 511, 512,
	513, 1264, 0, 1269, 1268, 0, 0, 0, 0, 1266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 514, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 515, 516, 0, 517,
	258, 518, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 519, 520, 521, 0, 265, 266, 522, 0,
	1235, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 1028, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 523,
	524, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 525, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 526, 527, 0, 240,
	0, 0, 0, 0, 0, 317, 318, 319, 528, 0,
	0, 0, 320, 0, 321, 0, 0, 1029, 322, 323,
	529, 530, 324, 325, 0, 326, 531, 0, 532, 327,
	0, 328, 329, 330, 331, 332, 1263, 534, 535, 386,
	1031, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 1030, 341, 536, 537,
	0, 538, 0, 343, 1032, 539, 1033, 344, 345, 346,
	1034, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 354, 353, 0, 355, 540, 1035, 356, 357, 1036,
	0, 358, 359, 360, 0, 0, 361, 362, 363, 364,
	0, 365, 366, 368, 370, 367, 369, 374, 371, 372,
	373, 376, 0, 375, 1037, 377, 378, 379, 382, 383,
	381, 1038, 380, 0, 0, 1039, 384, 0, 541, 385,
	542, 387, 388, 0, 0, 389, 0, 0, 0, 391,
	392, 393, 0, 0, 394, 395, 543, 1040, 396, 1041,
	544, 397, 398, 390, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 545, 546, 547, 409, 548,
	410, 411, 0, 412, 0, 413, 414, 415, 416, 417,
	418, 419, 549, 421, 420, 422, 0, 0, 0, 0,
	0, 0, 423, 0, 425, 426, 427, 424, 428, 429,
	430, 431, 0, 432, 433, 434, 1042, 435, 436, 437,
	438, 550, 439, 0, 440, 441, 447, 448, 442, 443,
	449, 450, 451, 452, 453, 0, 455, 456, 454, 457,
	458, 459, 0, 460, 444, 445, 461, 462, 1043, 463,
	464, 551, 0, 465, 0, 466, 467, 468, 469, 446,
	470, 475, 552, 471, 472, 473, 474, 553, 0, 477,
	478, 0, 476, 0, 479, 480, 481, 482, 483, 484,
	311, 485, 0, 486, 554, 555, 556, 557, 0, 493,
	0, 487, 488, 558, 489, 559, 0, 490, 491, 492,
	0, 494, 495, 0, 0, 496, 497, 498, 500, 501,
	499, 502, 0, 503, 0, 0, 504, 505, 506, 560,
	561, 562, 0, 508, 507, 563, 0, 0, 0, 0,
	509, 510, 564, 511, 512, 513, 1269, 1268, 0, 0,
	0, 0, 1266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 514, 0, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 515,
	516, 0, 517, 258, 518, 0, 259, 260, 261, 262,
	263, 0, 0, 0, 264, 519, 520, 521, 0, 265,
	266, 522, 0, 1235, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 1028, 283, 284, 0,
	0, 0, 0, 0, 0, 0, 285, 286, 287, 288,
	0, 289, 523, 524, 0, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 298, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 525, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 526,
	527, 0, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 528, 0, 0, 0, 320, 0, 321, 0, 0,
	1029, 322, 323, 529, 530, 324, 325, 0, 326, 531,
	0, 532, 327, 0, 328, 329, 330, 331, 332, 533,
	534, 535, 386, 1031, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 0, 339, 340, 342, 0, 1030,
	341, 536, 537, 0, 538, 0, 343, 1032, 539, 1033,
	344, 345, 346, 1034, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 354, 353, 0, 355, 540, 1035,
	356, 357, 1036, 0, 358, 359, 360, 0, 0, 361,
	362, 363, 364, 0, 365, 366, 368, 370, 367, 369,
	374, 371, 372, 373, 376, 0, 375, 1037, 377, 378,
	379, 382, 383, 381, 1038, 380, 0, 0, 1039, 384,
	0, 541, 385, 542, 387, 388, 0, 0, 389, 0,
	0, 0, 391, 392, 393, 0, 0, 394, 395, 543,
	1040, 396, 1041, 544, 397, 398, 390, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 545, 546,
	547, 409, 548, 410, 411, 0, 412, 0, 413, 414,
	415, 416, 417, 418, 419, 549, 421, 420, 422, 0,
	0, 0, 0, 0, 0, 423, 0, 425, 426, 427,
	424, 428, 429, 430, 431, 0, 432, 433, 434, 1042,
	435, 436, 437, 438, 550, 439, 0, 440, 441, 447,
	448, 442, 443, 449, 450, 451, 452, 453, 0, 455,
	456, 454, 457, 458, 459, 0, 460, 444, 445, 461,
	462, 1043, 463, 464, 551, 0, 465, 0, 466, 467,
	468, 469, 446, 470, 475, 552, 471, 472, 473, 474,
	553, 0, 477, 478, 0, 476, 0, 479, 480, 481,
	482, 483, 484, 311, 485, 0, 486, 554, 555, 556,
	557, 0, 493, 0, 487, 488, 558, 489, 559, 0,
	490, 491, 492, 0, 494, 495, 0, 0, 496, 497,
	498, 500, 501, 499, 502, 0, 503, 0, 0, 504,
	505, 506, 560, 561, 562, 0, 508, 507, 563, 1269,
	1268, 0, 0, 509, 510, 564, 511, 512, 513, 0,
	0, 0, 0, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	514, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 515, 516, 0, 517, 258, 518, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 519, 520,
	521, 0, 265, 266, 522, 0, 1235, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 1028,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 523, 524, 1821, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 525, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 526, 527, 0, 240, 0, 0, 0, 0,
	0, 317, 318, 319, 528, 0, 0, 0, 320, 0,
	321, 0, 0, 1029, 322, 323, 529, 530, 324, 325,
	0, 326, 531, 0, 532, 327, 0, 328, 329, 330,
	331, 332, 533, 534, 535, 386, 1031, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 0, 339, 340,
	342, 0, 1030, 341, 536, 537, 0, 538, 0, 343,
	1032, 539, 1033, 344, 345, 346, 1034, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 354, 353, 0,
	355, 540, 1035, 356, 357, 1036, 0, 358, 359, 360,
	0, 0, 361, 362, 363, 364, 0, 365, 366, 368,
	370, 367, 369, 374, 371, 372, 373, 376, 0, 375,
	1037, 377, 378, 379, 382, 383, 381, 1038, 380, 0,
	0, 1039, 384, 0, 541, 385, 542, 387, 388, 0,
	0, 389, 0, 0, 0, 391, 392, 393, 0, 0,
	394, 395, 543, 1040, 396, 1041, 544, 397, 398, 390,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	408, 545, 546, 547, 409, 548, 410, 411, 0, 412,
	0, 413, 414, 415, 416, 417, 418, 419, 549, 421,
	420, 422, 0, 0, 0, 0, 0, 0, 423, 0,
	425, 426, 427, 424, 428, 429, 430, 431, 0, 432,
	433, 434, 1042, 435, 436, 437, 438, 550, 439, 0,
	440, 441, 447, 448, 442, 443, 449, 450, 451, 452,
	453, 0, 455, 456, 454, 457, 458, 459, 0, 460,
	444, 445, 461, 462, 1043, 463, 464, 551, 0, 465,
	0, 466, 467, 468, 469, 446, 470, 475, 552, 471,
	472, 473, 474, 553, 0, 477, 478, 0, 476, 0,
	479, 480, 481, 482, 483, 484, 311, 485, 0, 486,
	554, 555, 556, 557, 0, 493, 0, 487, 488, 558,
	489, 559, 0, 490, 491, 492, 0, 494, 495, 0,
	0, 496, 497, 498, 500, 501, 499, 502, 0, 503,
	0, 0, 504, 505, 506, 560, 561, 562, 0, 508,
	507, 563, 1269, 1268, 0, 0, 509, 510, 564, 511,
	512, 513, 0, 0, 0, 0, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 249, 250, 0, 0,
	0, 0, 0, 514, 0, 0, 0, 0, 251, 252,
	254, 253, 255, 256, 257, 515, 516, 0, 517, 258,
	518, 0, 259, 260, 261, 262, 263, 0, 0, 0,
	264, 519, 520, 521, 0, 265, 266, 522, 0, 1235,
	0, 267, 268, 269, 270, 271, 272, 273, 0, 0,
	275, 276, 277, 274, 0, 278, 0, 279, 280, 281,
	0, 282, 1028, 283, 284, 0, 0, 0, 0, 0,
	0, 0, 285, 286, 287, 288, 0, 289, 523, 524,
	0, 293, 290, 291, 0, 294, 292, 0, 295, 296,
	0, 0, 297, 298, 299, 0, 300, 301, 0, 302,
	303, 0, 304, 305, 525, 306, 307, 308, 310, 312,
	309, 313, 314, 315, 316, 526, 527, 0, 240, 0,
	0, 0, 0, 0, 317, 318, 319, 528, 0, 0,
	0, 320, 0, 321, 0, 0, 1029, 322, 323, 529,
	530, 324, 325, 0, 326, 531, 0, 532, 327, 0,
	328, 329, 330, 331, 332, 533, 534, 535, 386, 1031,
	333, 334, 0, 335, 336, 337, 338, 0, 0, 0,
	0, 339, 340, 342, 0, 1030, 341, 536, 537, 0,
	538, 0, 343, 1032, 539, 1033, 344, 345, 346, 1034,
	347, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	354, 353, 0, 355, 540, 1035, 356, 357, 1036, 0,
	358, 359, 360, 0, 0, 361, 362, 363, 364, 0,
	365, 366, 368, 370, 367, 369, 374, 371, 372, 373,
	376, 0, 375, 1037, 377, 378, 379, 382, 383, 381,
	1038, 380, 0, 0, 1039, 384, 0, 541, 385, 542,
	387, 388, 0, 0, 389, 0, 0, 0, 391, 392,
	393, 0, 0, 394, 395, 543, 1040, 396, 1041, 544,
	397, 398, 390, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 545, 546, 547, 409, 548, 410,
	411, 0, 412, 0, 413, 414, 415, 416, 417, 418,
	419, 549, 421, 420, 422, 0, 0, 0, 0, 0,
	0, 423, 0, 425, 426, 427, 424, 428, 429, 430,
	431, 0, 432, 433, 434, 1042, 435, 436, 437, 438,
	550, 439, 0, 440, 441, 447, 448, 442, 443, 449,
	450, 451, 452, 453, 0, 455, 456, 454, 457, 458,
	459, 0, 460, 444, 445, 461, 462, 1043, 463, 464,
	551, 0, 465, 0, 466, 467, 468, 469, 446, 470,
	475, 552, 471, 472, 473, 474, 553, 0, 477, 478,
	0, 476, 0, 479, 480, 481, 482, 483, 484, 311,
	485, 0, 486, 554, 555, 556, 557, 0, 493, 0,
	487, 488, 558, 489, 559, 0, 490, 491, 492, 0,
	494, 495, 0, 0, 496, 497, 498, 500, 501, 499,
	502, 0, 503, 0, 0, 504, 505, 506, 560, 561,
	562, 1269, 508, 507, 563, 0, 0, 0, 0, 509,
	510, 564, 511, 512, 513, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 514, 0, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 515, 516, 0, 517, 258, 518,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	519, 520, 521, 0, 265, 266, 522, 0, 1235, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 1028, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 523, 524, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 525, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 526, 527, 0, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 528, 0, 0, 0,
	320, 0, 321, 0, 0, 1029, 322, 323, 529, 530,
	324, 325, 0, 326, 531, 0, 532, 327, 0, 328,
	329, 330, 331, 332, 533, 534, 535, 386, 1031, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 0,
	339, 340, 342, 0, 1030, 341, 536, 537, 0, 538,
	0, 343, 1032, 539, 1033, 344, 345, 346, 1034, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 354,
	353, 0, 355, 540, 1035, 356, 357, 1036, 0, 358,
	359, 360, 0, 0, 361, 362, 363, 364, 0, 365,
	366, 368, 370, 367, 369, 374, 371, 372, 373, 376,
	0, 375, 1037, 377, 378, 379, 382, 383, 381, 1038,
	380, 0, 0, 1039, 384, 0, 541, 385, 542, 387,
	388, 0, 0, 389, 0, 0, 0, 391, 392, 393,
	0, 0, 394, 395, 543, 1040, 396, 1041, 544, 397,
	398, 390, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 545, 546, 547, 409, 548, 410, 411,
	0, 412, 0, 413, 414, 415, 416, 417, 418, 419,
	549, 421, 420, 422, 0, 0, 0, 0, 0, 0,
	423, 0, 425, 426, 427, 424, 428, 429, 430, 431,
	0, 432, 433, 434, 1042, 435, 436, 437, 438, 550,
	439, 0, 440, 441, 447, 448, 442, 443, 449, 450,
	451, 452, 453, 0, 455, 456, 454, 457, 458, 459,
	0, 460, 444, 445, 461, 462, 1043, 463, 464, 551,
	0, 465, 0, 466, 467, 468, 469, 446, 470, 475,
	552, 471, 472, 473, 474, 553, 0, 477, 478, 0,
	476, 0, 479, 480, 481, 482, 483, 484, 311, 485,
	0, 486, 554, 555, 556, 557, 0, 493, 0, 487,
	488, 558, 489, 559, 0, 490, 491, 492, 0, 494,
	495, 0, 0, 496, 497, 498, 500, 501, 499, 502,
	0, 503, 0, 0, 504, 505, 506, 560, 561, 562,
	237, 508, 507, 563, 0, 0, 0, 0, 509, 510,
	564, 511, 512, 513, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 514, 0, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 515, 516, 0, 517, 258, 518, 0,
	259, 260, 261, 262, 263, 0, 0, 0, 264, 519,
	520, 521, 2447, 265, 266, 522, 0, 0, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 2444, 278, 0, 279, 280, 281, 0, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 288, 0, 289, 523, 524, 0, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 298, 299, 0, 300, 301, 0, 302, 303, 0,
	2451, 305, 525, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 526, 527, 0, 2626, 0, 0, 0,
	0, 0, 317, 318, 319, 528, 0, 0, 0, 320,
	0, 321, 2450, 0, 0, 322, 323, 529, 530, 324,
	325, 0, 326, 531, 0, 532, 327, 0, 328, 329,
	330, 331, 332, 533, 534, 535, 386, 0, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 2623, 339,
	340, 342, 0, 0, 341, 536, 537, 0, 538, 0,
	2625, 0, 539, 0, 344, 345, 346, 0, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 354, 353,
	0, 355, 540, 0, 356, 357, 2622, 0, 358, 359,
	360, 0, 0, 361, 362, 363, 364, 0, 365, 366,
	368, 370, 367, 369, 374, 371, 372, 373, 376, 0,
	375, 0, 377, 378, 379, 382, 383, 381, 0, 380,
	0, 0, 0, 384, 0, 541, 385, 542, 387, 388,
	0, 0, 389, 0, 0, 0, 391, 392, 393, 0,
	0, 394, 395, 543, 0, 396, 0, 544, 397, 398,
	390, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 545, 546, 547, 409, 548, 410, 411, 2449,
	412, 0, 413, 414, 415, 416, 417, 418, 419, 549,
	421, 420, 422, 0, 0, 0, 0, 0, 0, 423,
	0, 425, 426, 427, 424, 428, 429, 430, 431, 0,
	432, 433, 434, 0, 435, 436, 437, 438, 550, 439,
	0, 440, 441, 447, 448, 442, 443, 449, 450, 451,
	452, 453, 0, 455, 456, 454, 457, 458, 459, 0,
	460, 444, 445, 461, 462, 0, 463, 464, 551, 0,
	465, 0, 466, 467, 468, 469, 446, 470, 475, 552,
	471, 472, 473, 474, 553, 0, 477, 478, 0, 476,
	0, 479, 480, 481, 482, 483, 484, 311, 485, 0,
	486, 554, 555, 556, 557, 0, 493, 0, 487, 488,
	558, 489, 559, 0, 490, 491, 492, 0, 494, 495,
	0, 2624, 496, 497, 498, 500, 501, 499, 502, 0,
	503, 0, 0, 504, 505, 506, 560, 561, 562, 237,
	508, 507, 563, 0, 0, 0, 0, 509, 510, 564,
	511, 512, 513, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	514, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 515, 516, 0, 517, 258, 518, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 519, 520,
	521, 2447, 265, 266, 522, 0, 0, 2441, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 2444, 278, 0, 279, 280, 281, 0, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 523, 524, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 2451,
	305, 525, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 526, 527, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 528, 0, 0, 0, 320, 0,
	321, 2450, 0, 0, 322, 323, 529, 530, 324, 325,
	0, 326, 531, 0, 532, 327, 0, 328, 329, 330,
	331, 332, 2440, 534, 535, 386, 0, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 0, 339, 340,
	342, 0, 0, 341, 536, 537, 0, 538, 0, 343,
	0, 539, 0, 344, 345, 346, 0, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 354, 353, 0,
	355, 540, 0, 356, 357, 0, 0, 358, 359, 360,
	0, 0, 361, 362, 363, 364, 0, 365, 366, 368,
	370, 367, 369, 374, 371, 372, 373, 376, 0, 375,
	0, 377, 378, 379, 382, 383, 381, 0, 380, 0,
	0, 0, 384, 0, 541, 385, 542, 387, 388, 0,
	0, 389, 0, 0, 0, 391, 392, 393, 0, 0,
	394, 395, 543, 0, 396, 0, 544, 397, 398, 390,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	408, 545, 546, 547, 409, 548, 410, 411, 2449, 412,
	0, 413, 414, 415, 416, 417, 418, 419, 549, 421,
	420, 422, 0, 0, 0, 0, 0, 0, 423, 0,
	425, 426, 427, 424, 428, 429, 430, 431, 0, 432,
	433, 434, 0, 435, 436, 437, 438, 550, 439, 0,
	440, 441, 447, 448, 442, 443, 449, 450, 451, 452,
	453, 0, 455, 456, 454, 457, 458, 459, 0, 460,
	444, 445, 461, 462, 0, 463, 464, 551, 0, 465,
	0, 466, 467, 468, 469, 446, 470, 475, 552, 471,
	472, 473, 474, 553, 0, 477, 478, 0, 476, 0,
	479, 480, 481, 482, 483, 484, 311, 485, 0, 486,
	554, 555, 556, 557, 0, 493, 0, 487, 488, 558,
	489, 559, 0, 490, 491, 492, 0, 494, 495, 0,
	2448, 496, 497, 498, 500, 501, 499, 502, 0, 503,
	0, 0, 504, 505, 506, 560, 561, 562, 0, 508,
	507, 563, 1529, 0, 237, 0, 509, 510, 564, 511,
	512, 513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 514, 0, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 515, 516, 0,
	517, 258, 518, 0, 259, 260, 261, 262, 263, 0,
	0, 0, 264, 519, 520, 521, 0, 265, 266, 522,
	0, 0, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 0, 0, 285, 286, 287, 288, 0, 289,
	523, 524, 0, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 298, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 525, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 526, 527, 0,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 528,
	0, 0, 0, 320, 0, 321, 0, 0, 0, 322,
	323, 529, 530, 324, 325, 0, 326, 531, 0, 532,
	327, 0, 328, 329, 330, 331, 332, 533, 534, 535,
	386, 0, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 0, 341, 536,
	537, 0, 538, 0, 343, 0, 539, 0, 344, 345,
	346, 0, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 354, 353, 0, 355, 540, 0, 356, 357,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 363,
	364, 0, 365, 366, 368, 370, 367, 369, 374, 371,
	372, 373, 376, 0, 375, 0, 377, 378, 379, 382,
	383, 381, 0, 380, 0, 242, 0, 384, 0, 541,
	385, 542, 387, 388, 0, 0, 389, 0, 0, 0,
	391, 392, 393, 0, 0, 394, 395, 543, 0, 396,
	0, 544, 397, 398, 390, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 545, 546, 547, 409,
	548, 410, 411, 0, 412, 0, 413, 414, 415, 416,
	417, 418, 419, 549, 421, 420, 422, 0, 0, 0,
	0, 0, 0, 423, 0, 425, 426, 427, 424, 428,
	429, 430, 431, 0, 432, 433, 434, 0, 435, 436,
	437, 438, 550, 439, 0, 440, 441, 447, 448, 442,
	443, 449, 450, 451, 452, 453, 0, 1532, 456, 454,
	457, 458, 459, 0, 460, 444, 445, 461, 462, 0,
	463, 464, 551, 0, 465, 0, 466, 467, 468, 469,
	446, 470, 475, 552, 471, 472, 473, 474, 553, 0,
	477, 478, 0, 476, 1530, 479, 480, 481, 482, 483,
	484, 311, 485, 0, 486, 554, 555, 556, 557, 0,
	493, 0, 487, 488, 558, 489, 559, 0, 490, 491,
	492, 0, 494, 495, 0, 0, 496, 497, 498, 500,
	501, 499, 502, 0, 503, 0, 0, 504, 505, 506,
	560, 561, 562, 0, 1531, 507, 563, 1239, 0, 237,
	0, 509, 510, 564, 511, 512, 513, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	514, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 515, 516, 0, 517, 258, 518, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 519, 520,
	521, 0, 265, 266, 522, 0, 0, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 523, 524, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 525, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 526, 527, 0, 240, 0, 0, 0, 0,
	0, 317, 318, 319, 528, 0, 0, 0, 320, 0,
	321, 0, 0, 0, 322, 323, 529, 530, 324, 325,
	0, 326, 531, 0, 532, 327, 0, 328, 329, 330,
	331, 332, 1241, 534, 535, 386, 0, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 241, 339, 340,
	342, 0, 0, 341, 536, 537, 0, 538, 0, 343,
	0, 539, 0, 344, 345, 346, 0, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 354, 353, 0,
	355, 540, 0, 356, 357, 0, 0, 358, 359, 360,
	0, 0, 361, 362, 363, 364, 0, 365, 366, 368,
	370, 367, 369, 374, 371, 372, 373, 376, 0, 375,
	0, 377, 378, 379, 382, 383, 381, 0, 380, 0,
	242, 0, 384, 0, 541, 385, 542, 387, 388, 0,
	0, 389, 0, 0, 1077, 391, 392, 393, 0, 0,
	394, 395, 543, 0, 396, 0, 544, 397, 398, 390,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	408, 545, 546, 547, 409, 548, 410, 411, 0, 412,
	0, 413, 414, 415, 416, 417, 418, 419, 549, 421,
	420, 422, 0, 0, 0, 0, 0, 0, 423, 0,
	425, 426, 427, 424, 428, 429, 430, 431, 0, 432,
	433, 434, 0, 435, 436, 437, 438, 550, 439, 0,
	440, 441, 447, 448, 442, 443, 449, 450, 451, 452,
	453, 0, 455, 456, 454, 457, 458, 459, 0, 460,
	444, 445, 461, 462, 0, 463, 464, 551, 0, 465,
	0, 466, 467, 468, 469, 446, 470, 475, 552, 471,
	472, 473, 474, 553, 0, 477, 478, 0, 476, 0,
	479, 480, 481, 482, 483, 484, 311, 485, 0, 486,
	554, 555, 556, 557, 0, 493, 0, 487, 488, 558,
	489, 559, 0, 490, 491, 492, 0, 494, 495, 0,
	0, 496, 497, 498, 500, 501, 499, 502, 0, 503,
	0, 0, 504, 505, 506, 560, 561, 562, 0, 508,
	507, 563, 1236, 0, 237, 0, 509, 510, 564, 511,
	512, 513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 514, 0, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 515, 516, 0,
	517, 258, 518, 0, 259, 260, 261, 262, 263, 0,
	0, 0, 264, 519, 520, 521, 0, 265, 266, 522,
	0, 0, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 0, 0, 285, 286, 287, 288, 0, 289,
	523, 524, 0, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 298, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 525, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 526, 527, 0,
	240, 0, 0, 0, 0, 0, 317, 318, 319, 528,
	0, 0, 0, 320, 0, 321, 0, 0, 0, 322,
	323, 529, 530, 324, 325, 0, 326, 531, 0, 532,
	327, 0, 328, 329, 330, 331, 332, 1238, 534, 535,
	386, 0, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 241, 339, 340, 342, 0, 0, 341, 536,
	537, 0, 538, 0, 343, 0, 539, 0, 344, 345,
	346, 0, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 354, 353, 0, 355, 540, 0, 356, 357,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 363,
	364, 0, 365, 366, 368, 370, 367, 369, 374, 371,
	372, 373, 376, 0, 375, 0, 377, 378, 379, 382,
	383, 381, 0, 380, 0, 242, 0, 384, 0, 541,
	385, 542, 387, 388, 0, 0, 389, 0, 0, 1077,
	391, 392, 393, 0, 0, 394, 395, 543, 0, 396,
	0, 544, 397, 398, 390, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 545, 546, 547, 409,
	548, 410, 411, 0, 412, 0, 413, 414, 415, 416,
	417, 418, 419, 549, 421, 420, 422, 0, 0, 0,
	0, 0, 0, 423, 0, 425, 426, 427, 424, 428,
	429, 430, 431, 0, 432, 433, 434, 0, 435, 436,
	437, 438, 550, 439, 0, 440, 441, 447, 448, 442,
	443, 449, 450, 451, 452, 453, 0, 455, 456, 454,
	457, 458, 459, 0, 460, 444, 445, 461, 462, 0,
	463, 464, 551, 0, 465, 0, 466, 467, 468, 469,
	446, 470, 475, 552, 471, 472, 473, 474, 553, 0,
	477, 478, 0, 476, 0, 479, 480, 481, 482, 483,
	484, 311, 485, 0, 486, 554, 555, 556, 557, 0,
	493, 0, 487, 488, 558, 489, 559, 0, 490, 491,
	492, 0, 494, 495, 0, 0, 496, 497, 498, 500,
	501, 499, 502, 0, 503, 0, 0, 504, 505, 506,
	560, 561, 562, 0, 508, 507, 563, 1142, 0, 237,
	0, 509, 510, 564, 511, 512, 513, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	514, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 515, 516, 0, 517, 258, 518, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 519, 520,
	521, 0, 265, 266, 522, 0, 0, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 523, 524, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 525, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 526, 527, 0, 240, 0, 0, 0, 0,
	0, 317, 318, 319, 528, 0, 0, 0, 320, 0,
	321, 0, 0, 0, 322, 323, 529, 530, 324, 325,
	0, 326, 531, 0, 532, 327, 0, 328, 329, 330,
	331, 332, 1144, 534, 535, 386, 0, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 241, 339, 340,
	342, 0, 0, 341, 536, 537, 0, 538, 0, 343,
	0, 539, 0, 344, 345, 346, 0, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 354, 353, 0,
	355, 540, 0, 356, 357, 0, 0, 358, 359, 360,
	0, 0, 361, 362, 363, 364, 0, 365, 366, 368,
	370, 367, 369, 374, 371, 372, 373, 376, 0, 375,
	0, 377, 378, 379, 382, 383, 381, 0, 380, 0,
	242, 0, 384, 0, 541, 385, 542, 387, 388, 0,
	0, 389, 0, 0, 1077, 391, 392, 393, 0, 0,
	394, 395, 543, 0, 396, 0, 544, 397, 398, 390,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	408, 545, 546, 547, 409, 548, 410, 411, 0, 412,
	0, 413, 414, 415, 416, 417, 418, 419, 549, 421,
	420, 422, 0, 0, 0, 0, 0, 0, 423, 0,
	425, 426, 427, 424, 428, 429, 430, 431, 0, 432,
	433, 434, 0, 435, 436, 437, 438, 550, 439, 0,
	440, 441, 447, 448, 442, 443, 449, 450, 451, 452,
	453, 0, 455, 456, 454, 457, 458, 459, 0, 460,
	444, 445, 461, 462, 0, 463, 464, 551, 0, 465,
	0, 466, 467, 468, 469, 446, 470, 475, 552, 471,
	472, 473, 474, 553, 0, 477, 478, 0, 476, 0,
	479, 480, 481, 482, 483, 484, 311, 485, 0, 486,
	554, 555, 556, 557, 0, 493, 0, 487, 488, 558,
	489, 559, 0, 490, 491, 492, 0, 494, 495, 0,
	0, 496, 497, 498, 500, 501, 499, 502, 0, 503,
	0, 0, 504, 505, 506, 560, 561, 562, 0, 508,
	507, 563, 596, 0, 237, 0, 509, 510, 564, 511,
	512, 513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 244, 245, 595, 247, 248, 585, 249, 250,
	0, 0, 0, 0, 0, 514, 0, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 515, 516, 0,
	517, 258, 518, 0, 259, 260, 261, 262, 263, 0,
	0, 0, 264, 519, 520, 521, 0, 265, 266, 522,
	0, 0, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 588, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 0, 0, 285, 286, 287, 288, 0, 289,
	523, 524, 0, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 298, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 525, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 526, 527, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 528,
	0, 0, 0, 320, 0, 321, 0, 0, 0, 322,
	323, 529, 530, 324, 325, 589, 326, 531, 0, 532,
	327, 0, 328, 329, 330, 331, 332, 533, 534, 535,
	386, 0, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 0, 339, 340, 342, 0, 0, 341, 536,
	537, 0, 538, 0, 343, 0, 539, 0, 344, 345,
	346, 0, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 354, 353, 0, 355, 540, 0, 356, 357,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 363,
	364, 0, 365, 366, 368, 370, 367, 369, 374, 371,
	372, 373, 376, 0, 375, 0, 377, 378, 379, 382,
	383, 381, 0, 380, 0, 0, 0, 384, 0, 541,
	385, 542, 387, 388, 0, 0, 389, 0, 0, 0,
	391, 392, 393, 0, 0, 394, 395, 543, 0, 396,
	0, 544, 397, 398, 390, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 545, 546, 547, 409,
	548, 410, 411, 0, 412, 0, 413, 414, 415, 416,
	417, 418, 419, 549, 421, 420, 422, 0, 0, 0,
	0, 0, 0, 423, 0, 425, 426, 427, 424, 428,
	429, 430, 431, 0, 432, 433, 434, 0, 435, 436,
	437, 438, 550, 439, 0, 440, 441, 447, 448, 442,
	443, 449, 450, 451, 452, 453, 590, 455, 456, 454,
	457, 458, 459, 0, 460, 444, 445, 461, 462, 0,
	463, 464, 551, 0, 465, 0, 466, 467, 468, 469,
	446, 470, 475, 552, 471, 472, 473, 474, 553, 0,
	477, 478, 0, 476, 0, 479, 480, 481, 482, 483,
	484, 311, 485, 0, 486, 554, 555, 556, 557, 0,
	493, 0, 487, 488, 558, 489, 559, 0, 490, 491,
	492, 0, 494, 495, 0, 0, 496, 497, 498, 500,
	501, 499, 502, 0, 503, 0, 0, 504, 505, 506,
	560, 561, 562, 0, 508, 507, 563, 584, 0, 237,
	0, 509, 510, 564, 511, 512, 513, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 585, 249, 250, 0, 0, 0, 0, 0,
	514, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 515, 516, 0, 517, 258, 518, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 519, 520,
	521, 0, 265, 266, 522, 0, 0, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 588, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 523, 524, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 525, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 526, 527, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 528, 0, 0, 0, 320, 0,
	321, 0, 0, 0, 322, 323, 529, 530, 324, 325,
	589, 326, 531, 0, 532, 327, 0, 328, 329, 330,
	331, 332, 533, 534, 535, 386, 0, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 0, 339, 340,
	342, 0, 0, 341, 536, 537, 0, 538, 0, 343,
	0, 539, 0, 344, 345, 346, 0, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 354, 353, 0,
	355, 540, 0, 356, 357, 0, 0, 358, 359, 360,
	0, 0, 361, 362, 363, 364, 0, 365, 366, 368,
	370, 367, 369, 374, 371, 372, 373, 376, 0, 375,
	0, 377, 378, 379, 382, 383, 381, 0, 380, 0,
	0, 0, 384, 0, 541, 385, 542, 387, 388, 0,
	0, 389, 0, 0, 0, 391, 392, 393, 0, 0,
	394, 395, 543, 0, 396, 0, 544, 397, 398, 390,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	408, 545, 546, 547, 409, 548, 410, 411, 0, 412,
	0, 413, 414, 415, 416, 417, 418, 419, 549, 421,
	420, 422, 0, 0, 0, 0, 0, 0, 423, 0,
	425, 426, 427, 424, 428, 429, 430, 431, 0, 432,
	433, 434, 0, 435, 436, 437, 438, 550, 439, 0,
	440, 441, 447, 448, 442, 443, 449, 450, 451, 452,
	453, 590, 455, 456, 454, 457, 458, 459, 0, 460,
	444, 445, 461, 462, 0, 463, 464, 551, 0, 465,
	0, 466, 467, 468, 469, 446, 470, 475, 552, 471,
	472, 473, 474, 553, 0, 477, 478, 0, 476, 0,
	479, 480, 481, 482, 483, 484, 311, 485, 0, 486,
	554, 555, 556, 557, 0, 493, 0, 487, 488, 558,
	489, 559, 0, 490, 491, 492, 0, 494, 495, 0,
	0, 496, 497, 498, 500, 501, 499, 502, 0, 503,
	0, 0, 504, 505, 506, 560, 561, 562, 237, 508,
	507, 563, 0, 0, 0, 0, 509, 510, 564, 511,
	512, 513, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 514,
	0, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 515, 516, 0, 517, 258, 518, 0, 259, 260,
	261, 262, 263, 0, 0, 0, 264, 519, 520, 521,
	0, 265, 266, 522, 0, 0, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	287, 288, 0, 289, 523, 524, 0, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 298,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	525, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 526, 527, 0, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 528, 0, 0, 0, 320, 0, 321,
	0, 0, 0, 322, 323, 529, 530, 324, 325, 0,
	326, 531, 0, 532, 327, 0, 328, 329, 330, 331,
	332, 533, 534, 535, 386, 0, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	0, 0, 341, 536, 537, 0, 538, 0, 343, 0,
	539, 0, 344, 345, 346, 0, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 354, 353, 0, 355,
	540, 0, 356, 357, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 363, 364, 0, 365, 366, 368, 370,
	367, 369, 374, 371, 372, 373, 376, 0, 375, 0,
	377, 378, 379, 382, 383, 381, 2969, 380, 0, 242,
	0, 384, 0, 541, 385, 542, 387, 388, 0, 0,
	389, 0, 0, 0, 391, 392, 393, 0, 0, 394,
	395, 543, 0, 396, 0, 544, 397, 398, 390, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	545, 546, 547, 409, 548, 410, 411, 0, 412, 0,
	413, 414, 415, 416, 417, 418, 419, 549, 421, 420,
	422, 0, 0, 0, 0, 0, 0, 423, 0, 425,
	426, 427, 424, 428, 429, 430, 431, 0, 432, 433,
	434, 0, 435, 436, 437, 438, 550, 439, 0, 440,
	441, 447, 448, 442, 443, 449, 450, 451, 452, 453,
	0, 455, 456, 454, 457, 458, 459, 0, 460, 444,
	445, 461, 462, 0, 463, 464, 551, 0, 465, 0,
	466, 467, 468, 469, 446, 470, 475, 552, 471, 472,
	473, 474, 553, 0, 477, 478, 0, 476, 0, 479,
	480, 481, 482, 483, 484, 311, 485, 0, 486, 554,
	555, 556, 557, 0, 493, 0, 487, 488, 558, 489,
	559, 0, 490, 491, 492, 0, 494, 495, 0, 0,
	496, 497, 498, 500, 501, 499, 502, 0, 503, 0,
	0, 504, 505, 506, 560, 561, 562, 237, 508, 507,
	563, 0, 0, 0, 0, 509, 510, 564, 511, 512,
	513, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 514, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	515, 516, 0, 517, 258, 518, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 519, 520, 521, 0,
	265, 266, 522, 0, 0, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 523, 524, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 525,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	526, 527, 0, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 528, 0, 0, 0, 320, 0, 321, 0,
	0, 0, 322, 323, 529, 530, 324, 325, 0, 326,
	531, 0, 532, 327, 0, 328, 329, 330, 331, 332,
	533, 534, 535, 386, 0, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 241, 339, 340, 342, 0,
	0, 341, 536, 537, 0, 538, 0, 343, 0, 539,
	0, 344, 345, 346, 0, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 354, 353, 0, 355, 540,
	0, 356, 357, 0, 0, 358, 359, 360, 0, 0,
	361, 362, 363, 364, 0, 365, 366, 368, 370, 367,
	369, 374, 371, 372, 373, 376, 0, 375, 0, 377,
	378, 379, 382, 383, 381, 0, 380, 0, 242, 0,
	384, 0, 541, 385, 542, 387, 388, 0, 0, 389,
	0, 0, 1077, 391, 392, 393, 0, 0, 394, 395,
	543, 0, 396, 0, 544, 397, 398, 390, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 545,
	546, 547, 409, 548, 410, 411, 0, 412, 0, 413,
	414, 415, 416, 417, 418, 419, 549, 421, 420, 422,
	0, 0, 0, 0, 0, 0, 423, 0, 425, 426,
	427, 424, 428, 429, 430, 431, 0, 432, 433, 434,
	0, 435, 436, 437, 438, 550, 439, 0, 440, 441,
	447, 448, 442, 443, 449, 450, 451, 452, 453, 0,
	455, 456, 454, 457, 458, 459, 0, 460, 444, 445,
	461, 462, 0, 463, 464, 551, 0, 465, 0, 466,
	467, 468, 469, 446, 470, 475, 552, 471, 472, 473,
	474, 553, 0, 477, 478, 0, 476, 0, 479, 480,
	481, 482, 483, 484, 311, 485, 0, 486, 554, 555,
	556, 557, 0, 493, 0, 487, 488, 558, 489, 559,
	0, 490, 491, 492, 0, 494, 495, 0, 0, 496,
	497, 498, 500, 501, 499, 502, 0, 503, 0, 0,
	504, 505, 506, 560, 561, 562, 0, 508, 507, 563,
	2558, 0, 237, 0, 509, 510, 564, 511, 512, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 249, 250, 0, 0,
	0, 0, 0, 514, 0, 0, 0, 0, 251, 252,
	254, 253, 255, 256, 257, 515, 516, 0, 517, 258,
	518, 0, 259, 260, 261, 262, 263, 0, 0, 0,
	264, 519, 520, 521, 0, 265, 266, 522, 0, 0,
	0, 267, 268, 269, 270, 271, 272, 273, 0, 0,
	275, 276, 277, 274, 0, 278, 0, 279, 280, 281,
	0, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	0, 0, 285, 286, 287, 288, 0, 289, 523, 524,
	0, 293, 290, 291, 0, 294, 292, 0, 295, 296,
	0, 0, 297, 298, 299, 0, 300, 301, 0, 302,
	303, 0, 304, 305, 525, 306, 307, 308, 310, 312,
	309, 313, 314, 315, 316, 526, 527, 0, 240, 0,
	0, 0, 0, 0, 317, 318, 319, 528, 0, 0,
	0, 320, 0, 321, 0, 0, 0, 322, 323, 529,
	530, 324, 325, 0, 326, 531, 0, 532, 327, 0,
	328, 329, 330, 331, 332, 2557, 534, 535, 386, 0,
	333, 334, 0, 335, 336, 337, 338, 0, 0, 0,
	241, 339, 340, 342, 0, 0, 341, 536, 537, 0,
	538, 0, 343, 0, 539, 0, 344, 345, 346, 0,
	347, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	354, 353, 0, 355, 540, 0, 356, 357, 0, 0,
	358, 359, 360, 0, 0, 361, 362, 363, 364, 0,
	365, 366, 368, 370, 367, 369, 374, 371, 372, 373,
	376, 0, 375, 0, 377, 378, 379, 382, 383, 381,
	0, 380, 0, 242, 0, 384, 0, 541, 385, 542,
	387, 388, 0, 0, 389, 0, 0, 0, 391, 392,
	393, 0, 0, 394, 395, 543, 0, 396, 0, 544,
	397, 398, 390, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 545, 546, 547, 409, 548, 410,
	411, 0, 412, 0, 413, 414, 415, 416, 417, 418,
	419, 549, 421, 420, 422, 0, 0, 0, 0, 0,
	0, 423, 0, 425, 426, 427, 424, 428, 429, 430,
	431, 0, 432, 433, 434, 0, 435, 436, 437, 438,
	550, 439, 0, 440, 441, 447, 448, 442, 443, 449,
	450, 451, 452, 453, 0, 455, 456, 454, 457, 458,
	459, 0, 460, 444, 445, 461, 462, 0, 463, 464,
	551, 0, 465, 0, 466, 467, 468, 469, 446, 470,
	475, 552, 471, 472, 473, 474, 553, 0, 477, 478,
	0, 476, 0, 479, 480, 481, 482, 483, 484, 311,
	485, 0, 486, 554, 555, 556, 557, 0, 493, 0,
	487, 488, 558, 489, 559, 0, 490, 491, 492, 0,
	494, 495, 0, 0, 496, 497, 498, 500, 501, 499,
	502, 0, 503, 0, 0, 504, 505, 506, 560, 561,
	562, 0, 508, 507, 563, 2031, 0, 237, 0, 509,
	510, 564, 511, 512, 513, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 514, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	515, 516, 0, 517, 258, 518, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 519, 520, 521, 0,
	265, 266, 522, 0, 0, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 523, 524, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 525,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	526, 527, 0, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 528, 0, 0, 0, 320, 0, 321, 0,
	0, 0, 322, 323, 529, 530, 324, 325, 0, 326,
	531, 0, 532, 327, 0, 328, 329, 330, 331, 332,
	533, 534, 535, 386, 0, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 241, 339, 340, 342, 0,
	0, 341, 536, 537, 0, 538, 0, 343, 0, 539,
	0, 344, 345, 346, 0, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 354, 353, 0, 355, 540,
	0, 356, 357, 0, 0, 358, 359, 360, 0, 0,
	361, 362, 363, 364, 0, 365, 366, 368, 370, 367,
	369, 374, 371, 372, 373, 376, 0, 375, 0, 377,
	378, 379, 382, 383, 381, 0, 380, 0, 242, 0,
	384, 0, 541, 385, 542, 387, 388, 0, 0, 389,
	0, 0, 0, 391, 392, 393, 0, 0, 394, 395,
	543, 0, 396, 0, 544, 397, 398, 390, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 545,
	546, 547, 409, 548, 410, 411, 0, 412, 0, 413,
	414, 415, 416, 417, 418, 419, 549, 421, 420, 422,
	0, 0, 0, 0, 0, 0, 423, 0, 425, 426,
	427, 424, 428, 429, 430, 431, 0, 432, 433, 434,
	0, 435, 436, 437, 438, 550, 439, 0, 440, 441,
	447, 448, 442, 443, 449, 450, 451, 452, 453, 0,
	455, 456, 454, 457, 458, 459, 0, 460, 444, 445,
	461, 462, 0, 463, 464, 551, 0, 465, 0, 466,
	467, 468, 469, 446, 470, 475, 552, 471, 472, 473,
	474, 553, 0, 477, 478, 0, 476, 0, 479, 480,
	481, 482, 483, 484, 311, 485, 0, 486, 554, 555,
	556, 557, 0, 493, 0, 487, 488, 558, 489, 559,
	0, 490, 491, 492, 0, 494, 495, 0, 0, 496,
	497, 498, 500, 501, 499, 502, 0, 503, 0, 0,
	504, 505, 506, 560, 561, 562, 237, 508, 507, 563,
	0, 0, 0, 0, 509, 510, 564, 511, 512, 513,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 514, 0, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 515,
	516, 0, 517, 258, 518, 0, 259, 260, 261, 262,
	263, 0, 0, 0, 264, 519, 520, 521, 0, 265,
	266, 522, 0, 0, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 0, 0, 285, 286, 287, 288,
	0, 289, 523, 524, 0, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 298, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 525, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 526,
	527, 0, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 528, 0, 0, 0, 320, 0, 321, 0, 0,
	0, 322, 323, 529, 530, 324, 325, 0, 326, 531,
	0, 532, 327, 0, 328, 329, 330, 331, 332, 533,
	534, 535, 386, 0, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 0, 0,
	341, 536, 537, 0, 538, 0, 343, 0, 539, 0,
	344, 345, 346, 0, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 354, 353, 0, 355, 540, 0,
	356, 357, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 363, 364, 0, 365, 366, 368, 370, 367, 369,
	374, 371, 372, 373, 376, 0, 375, 0, 377, 378,
	379, 382, 383, 381, 0, 380, 0, 242, 0, 384,
	0, 541, 385, 542, 387, 388, 0, 0, 389, 0,
	0, 0, 391, 392, 393, 0, 0, 394, 395, 543,
	0, 396, 0, 544, 397, 398, 390, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 545, 546,
	547, 409, 548, 410, 411, 0, 412, 0, 413, 414,
	415, 416, 417, 418, 419, 549, 421, 420, 422, 0,
	0, 0, 0, 0, 0, 423, 0, 425, 426, 427,
	424, 428, 429, 430, 431, 0, 432, 433, 434, 0,
	435, 436, 437, 438, 550, 439, 0, 440, 441, 447,
	448, 442, 443, 449, 450, 451, 452, 453, 0, 455,
	456, 454, 457, 458, 459, 0, 460, 444, 445, 461,
	462, 0, 463, 464, 551, 0, 465, 0, 466, 467,
	468, 469, 446, 470, 475, 552, 471, 472, 473, 474,
	553, 0, 477, 478, 0, 476, 1954, 479, 480, 481,
	482, 483, 484, 311, 485, 0, 486, 554, 555, 556,
	557, 0, 493, 0, 487, 488, 558, 489, 559, 0,
	490, 491, 492, 0, 494, 495, 0, 0, 496, 497,
	498, 500, 501, 499, 502, 0, 503, 0, 0, 504,
	505, 506, 560, 561, 562, 0, 508, 507, 563, 1959,
	0, 237, 0, 509, 510, 564, 511, 512, 513, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 514, 0, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 515, 516, 0, 517, 258, 518,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	519, 520, 521, 0, 265, 266, 522, 0, 0, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 523, 524, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 525, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 526, 527, 0, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 528, 0, 0, 0,
	320, 0, 321, 0, 0, 0, 322, 323, 529, 530,
	324, 325, 0, 326, 531, 0, 532, 327, 0, 328,
	329, 330, 331, 332, 1958, 534, 535, 386, 0, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 0, 0, 341, 536, 537, 0, 538,
	0, 343, 0, 539, 0, 344, 345, 346, 0, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 354,
	353, 0, 355, 540, 0, 356, 357, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 363, 364, 0, 365,
	366, 368, 370, 367, 369, 374, 371, 372, 373, 376,
	0, 375, 0, 377, 378, 379, 382, 383, 381, 0,
	380, 0, 242, 0, 384, 0, 541, 385, 542, 387,
	388, 0, 0, 389, 0, 0, 0, 391, 392, 393,
	0, 0, 394, 395, 543, 0, 396, 0, 544, 397,
	398, 390, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 545, 546, 547, 409, 548, 410, 411,
	0, 412, 0, 413, 414, 415, 416, 417, 418, 419,
	549, 421, 420, 422, 0, 0, 0, 0, 0, 0,
	423, 0, 425, 426, 427, 424, 428, 429, 430, 431,
	0, 432, 433, 434, 0, 435, 436, 437, 438, 550,
	439, 0, 440, 441, 447, 448, 442, 443, 449, 450,
	451, 452, 453, 0, 455, 456, 454, 457, 458, 459,
	0, 460, 444, 445, 461, 462, 0, 463, 464, 551,
	0, 465, 0, 466, 467, 468, 469, 446, 470, 475,
	552, 471, 472, 473, 474, 553, 0, 477, 478, 0,
	476, 0, 479, 480, 481, 482, 483, 484, 311, 485,
	0, 486, 554, 555, 556, 557, 0, 493, 0, 487,
	488, 558, 489, 559, 0, 490, 491, 492, 0, 494,
	495, 0, 0, 496, 497, 498, 500, 501, 499, 502,
	0, 503, 0, 0, 504, 505, 506, 560, 561, 562,
	0, 508, 507, 563, 1947, 0, 237, 0, 509, 510,
	564, 511, 512, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 514, 0, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 515,
	516, 0, 517, 258, 518, 0, 259, 260, 261, 262,
	263, 0, 0, 0, 264, 519, 520, 521, 0, 265,
	266, 522, 0, 0, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 0, 0, 285, 286, 287, 288,
	0, 289, 523, 524, 0, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 298, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 525, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 526,
	527, 0, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 528, 0, 0, 0, 320, 0, 321, 0, 0,
	0, 322, 323, 529, 530, 324, 325, 0, 326, 531,
	0, 532, 327, 0, 328, 329, 330, 331, 332, 1949,
	534, 535, 386, 0, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 0, 0,
	341, 536, 537, 0, 538, 0, 343, 0, 539, 0,
	344, 345, 346, 0, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 354, 353, 0, 355, 540, 0,
	356, 357, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 363, 364, 0, 365, 366, 368, 370, 367, 369,
	374, 371, 372, 373, 376, 0, 375, 0, 377, 378,
	379, 382, 383, 381, 0, 380, 0, 242, 0, 384,
	0, 541, 385, 542, 387, 388, 0, 0, 389, 0,
	0, 0, 391, 392, 393, 0, 0, 394, 395, 543,
	0, 396, 0, 544, 397, 398, 390, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 545, 546,
	547, 409, 548, 410, 411, 0, 412, 0, 413, 414,
	415, 416, 417, 418, 419, 549, 421, 420, 422, 0,
	0, 0, 0, 0, 0, 423, 0, 425, 426, 427,
	424, 428, 429, 430, 431, 0, 432, 433, 434, 0,
	435, 436, 437, 438, 550, 439, 0, 440, 441, 447,
	448, 442, 443, 449, 450, 451, 452, 453, 0, 455,
	456, 454, 457, 458, 459, 0, 460, 444, 445, 461,
	462, 0, 463, 464, 551, 0, 465, 0, 466, 467,
	468, 469, 446, 470, 475, 552, 471, 472, 473, 474,
	553, 0, 477, 478, 0, 476, 0, 479, 480, 481,
	482, 483, 484, 311, 485, 0, 486, 554, 555, 556,
	557, 0, 493, 0, 487, 488, 558, 489, 559, 0,
	490, 491, 492, 0, 494, 495, 0, 0, 496, 497,
	498, 500, 501, 499, 502, 0, 503, 0, 0, 504,
	505, 506, 560, 561, 562, 0, 508, 507, 563, 1399,
	0, 237, 0, 509, 510, 564, 511, 512, 513, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 514, 0, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 515, 516, 0, 517, 258, 518,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	519, 520, 521, 0, 265, 266, 522, 0, 0, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 523, 524, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 525, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 526, 527, 0, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 528, 0, 0, 0,
	320, 0, 321, 0, 0, 0, 322, 323, 529, 530,
	324, 325, 0, 326, 531, 0, 532, 327, 0, 328,
	329, 330, 331, 332, 1398, 534, 535, 386, 0, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 0, 0, 341, 536, 537, 0, 538,
	0, 343, 0, 539, 0, 344, 345, 346, 0, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 354,
	353, 0, 355, 540, 0, 356, 357, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 363, 364, 0, 365,
	366, 368, 370, 367, 369, 374, 371, 372, 373, 376,
	0, 375, 0, 377, 378, 379, 382, 383, 381, 0,
	380, 0, 242, 0, 384, 0, 541, 385, 542, 387,
	388, 0, 0, 389, 0, 0, 0, 391, 392, 393,
	0, 0, 394, 395, 543, 0, 396, 0, 544, 397,
	398, 390, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 545, 546, 547, 409, 548, 410, 411,
	0, 412, 0, 413, 414, 415, 416, 417, 418, 419,
	549, 421, 420, 422, 0, 0, 0, 0, 0, 0,
	423, 0, 425, 426, 427, 424, 428, 429, 430, 431,
	0, 432, 433, 434, 0, 435, 436, 437, 438, 550,
	439, 0, 440, 441, 447, 448, 442, 443, 449, 450,
	451, 452, 453, 0, 455, 456, 454, 457, 458, 459,
	0, 460, 444, 445, 461, 462, 0, 463, 464, 551,
	0, 465, 0, 466, 467, 468, 469, 446, 470, 475,
	552, 471, 472, 473, 474, 553, 0, 477, 478, 0,
	476, 0, 479, 480, 481, 482, 483, 484, 311, 485,
	0, 486, 554, 555, 556, 557, 0, 493, 0, 487,
	488, 558, 489, 559, 0, 490, 491, 492, 0, 494,
	495, 0, 0, 496, 497, 498, 500, 501, 499, 502,
	0, 503, 0, 0, 504, 505, 506, 560, 561, 562,
	0, 508, 507, 563, 1390, 0, 237, 0, 509, 510,
	564, 511, 512, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 514, 0, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 515,
	516, 0, 517, 258, 518, 0, 259, 260, 261, 262,
	263, 0, 0, 0, 264, 519, 520, 521, 0, 265,
	266, 522, 0, 0, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 0, 0, 285, 286, 287, 288,
	0, 289, 523, 524, 0, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 298, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 525, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 526,
	527, 0, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 528, 0, 0, 0, 320, 0, 321, 0, 0,
	0, 322, 323, 529, 530, 324, 325, 0, 326, 531,
	0, 532, 327, 0, 328, 329, 330, 331, 332, 1389,
	534, 535, 386, 0, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 0, 0,
	341, 536, 537, 0, 538, 0, 343, 0, 539, 0,
	344, 345, 346, 0, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 354, 353, 0, 355, 540, 0,
	356, 357, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 363, 364, 0, 365, 366, 368, 370, 367, 369,
	374, 371, 372, 373, 376, 0, 375, 0, 377, 378,
	379, 382, 383, 381, 0, 380, 0, 242, 0, 384,
	0, 541, 385, 542, 387, 388, 0, 0, 389, 0,
	0, 0, 391, 392, 393, 0, 0, 394, 395, 543,
	0, 396, 0, 544, 397, 398, 390, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 545, 546,
	547, 409, 548, 410, 411, 0, 412, 0, 413, 414,
	415, 416, 417, 418, 419, 549, 421, 420, 422, 0,
	0, 0, 0, 0, 0, 423, 0, 425, 426, 427,
	424, 428, 429, 430, 431, 0, 432, 433, 434, 0,
	435, 436, 437, 438, 550, 439, 0, 440, 441, 447,
	448, 442, 443, 449, 450, 451, 452, 453, 0, 455,
	456, 454, 457, 458, 459, 0, 460, 444, 445, 461,
	462, 0, 463, 464, 551, 0, 465, 0, 466, 467,
	468, 469, 446, 470, 475, 552, 471, 472, 473, 474,
	553, 0, 477, 478, 0, 476, 0, 479, 480, 481,
	482, 483, 484, 311, 485, 0, 486, 554, 555, 556,
	557, 0, 493, 0, 487, 488, 558, 489, 559, 0,
	490, 491, 492, 0, 494, 495, 0, 0, 496, 497,
	498, 500, 501, 499, 502, 0, 503, 0, 0, 504,
	505, 506, 560, 561, 562, 0, 508, 507, 563, 1387,
	0, 237, 0, 509, 510, 564, 511, 512, 513, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 514, 0, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 515, 516, 0, 517, 258, 518,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	519, 520, 521, 0, 265, 266, 522, 0, 0, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 523, 524, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 525, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 526, 527, 0, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 528, 0, 0, 0,
	320, 0, 321, 0, 0, 0, 322, 323, 529, 530,
	324, 325, 0, 326, 531, 0, 532, 327, 0, 328,
	329, 330, 331, 332, 1386, 534, 535, 386, 0, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 0, 0, 341, 536, 537, 0, 538,
	0, 343, 0, 539, 0, 344, 345, 346, 0, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 354,
	353, 0, 355, 540, 0, 356, 357, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 363, 364, 0, 365,
	366, 368, 370, 367, 369, 374, 371, 372, 373, 376,
	0, 375, 0, 377, 378, 379, 382, 383, 381, 0,
	380, 0, 242, 0, 384, 0, 541, 385, 542, 387,
	388, 0, 0, 389, 0, 0, 0, 391, 392, 393,
	0, 0, 394, 395, 543, 0, 396, 0, 544, 397,
	398, 390, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 545, 546, 547, 409, 548, 410, 411,
	0, 412, 0, 413, 414, 415, 416, 417, 418, 419,
	549, 421, 420, 422, 0, 0, 0, 0, 0, 0,
	423, 0, 425, 426, 427, 424, 428, 429, 430, 431,
	0, 432, 433, 434, 0, 435, 436, 437, 438, 550,
	439, 0, 440, 441, 447, 448, 442, 443, 449, 450,
	451, 452, 453, 0, 455, 456, 454, 457, 458, 459,
	0, 460, 444, 445, 461, 462, 0, 463, 464, 551,
	0, 465, 0, 466, 467, 468, 469, 446, 470, 475,
	552, 471, 472, 473, 474, 553, 0, 477, 478, 0,
	476, 0, 479, 480, 481, 482, 483, 484, 311, 485,
	0, 486, 554, 555, 556, 557, 0, 493, 0, 487,
	488, 558, 489, 559, 0, 490, 491, 492, 0, 494,
	495, 0, 0, 496, 497, 498, 500, 501, 499, 502,
	0, 503, 0, 0, 504, 505, 506, 560, 561, 562,
	0, 508, 507, 563, 1383, 0, 237, 0, 509, 510,
	564, 511, 512, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 514, 0, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 515,
	516, 0, 517, 258, 518, 0, 259, 260, 261, 262,
	263, 0, 0, 0, 264, 519, 520, 521, 0, 265,
	266, 522, 0, 0, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 0, 0, 285, 286, 287, 288,
	0, 289, 523, 524, 0, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 298, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 525, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 526,
	527, 0, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 528, 0, 0, 0, 320, 0, 321, 0, 0,
	0, 322, 323, 529, 530, 324, 325, 0, 326, 531,
	0, 532, 327, 0, 328, 329, 330, 331, 332, 1382,
	534, 535, 386, 0, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 0, 0,
	341, 536, 537, 0, 538, 0, 343, 0, 539, 0,
	344, 345, 346, 0, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 354, 353, 0, 355, 540, 0,
	356, 357, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 363, 364, 0, 365, 366, 368, 370, 367, 369,
	374, 371, 372, 373, 376, 0, 375, 0, 377, 378,
	379, 382, 383, 381, 0, 380, 0, 242, 0, 384,
	0, 541, 385, 542, 387, 388, 0, 0, 389, 0,
	0, 0, 391, 392, 393, 0, 0, 394, 395, 543,
	0, 396, 0, 544, 397, 398, 390, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 545, 546,
	547, 409, 548, 410, 411, 0, 412, 0, 413, 414,
	415, 416, 417, 418, 419, 549, 421, 420, 422, 0,
	0, 0, 0, 0, 0, 423, 0, 425, 426, 427,
	424, 428, 429, 430, 431, 0, 432, 433, 434, 0,
	435, 436, 437, 438, 550, 439, 0, 440, 441, 447,
	448, 442, 443, 449, 450, 451, 452, 453, 0, 455,
	456, 454, 457, 458, 459, 0, 460, 444, 445, 461,
	462, 0, 463, 464, 551, 0, 465, 0, 466, 467,
	468, 469, 446, 470, 475, 552, 471, 472, 473, 474,
	553, 0, 477, 478, 0, 476, 0, 479, 480, 481,
	482, 483, 484, 311, 485, 0, 486, 554, 555, 556,
	557, 0, 493, 0, 487, 488, 558, 489, 559, 0,
	490, 491, 492, 0, 494, 495, 0, 0, 496, 497,
	498, 500, 501, 499, 502, 0, 503, 0, 0, 504,
	505, 506, 560, 561, 562, 0, 508, 507, 563, 1340,
	0, 237, 0, 509, 510, 564, 511, 512, 513, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 514, 0, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 515, 516, 0, 517, 258, 518,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	519, 520, 521, 0, 265, 266, 522, 0, 0, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 523, 524, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 525, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 526, 527, 0, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 528, 0, 0, 0,
	320, 0, 321, 0, 0, 0, 322, 323, 529, 530,
	324, 325, 0, 326, 531, 0, 532, 327, 0, 328,
	329, 330, 331, 332, 533, 534, 535, 386, 0, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 0, 0, 341, 536, 537, 0, 538,
	0, 343, 0, 539, 0, 344, 345, 346, 0, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 354,
	353, 0, 355, 540, 0, 356, 357, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 363, 364, 0, 365,
	366, 368, 370, 367, 369, 374, 371, 372, 373, 376,
	0, 375, 0, 377, 378, 379, 382, 383, 381, 0,
	380, 0, 242, 0, 384, 0, 541, 385, 542, 387,
	388, 0, 0, 389, 0, 0, 0, 391, 392, 393,
	0, 0, 394, 395, 543, 0, 396, 0, 544, 397,
	398, 390, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 545, 546, 547, 409, 548, 410, 411,
	0, 412, 0, 413, 414, 415, 416, 417, 418, 419,
	549, 421, 420, 422, 0, 0, 0, 0, 0, 0,
	423, 0, 425, 426, 427, 424, 428, 429, 430, 431,
	0, 432, 433, 434, 0, 435, 436, 437, 438, 550,
	439, 0, 440, 441, 447, 448, 442, 443, 449, 450,
	451, 452, 453, 0, 455, 456, 454, 457, 458, 459,
	0, 460, 444, 445, 461, 462, 0, 463, 464, 551,
	0, 465, 0, 466, 467, 468, 469, 446, 470, 475,
	552, 471, 472, 473, 474, 553, 0, 477, 478, 0,
	476, 0, 479, 480, 481, 482, 483, 484, 311, 485,
	0, 486, 554, 555, 556, 557, 0, 493, 0, 487,
	488, 558, 489, 559, 0, 490, 491, 492, 0, 494,
	495, 0, 0, 496, 497, 498, 500, 501, 499, 502,
	0, 503, 0, 0, 504, 505, 506, 560, 561, 562,
	0, 508, 507, 563, 1257, 0, 237, 0, 509, 510,
	564, 511, 512, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 514, 0, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 515,
	516, 0, 517, 258, 518, 0, 259, 260, 261, 262,
	263, 0, 0, 0, 264, 519, 520, 521, 0, 265,
	266, 522, 0, 0, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 0, 0, 285, 286, 287, 288,
	0, 289, 523, 524, 0, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 298, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 525, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 526,
	527, 0, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 528, 0, 0, 0, 320, 0, 321, 0, 0,
	0, 322, 323, 529, 530, 324, 325, 0, 326, 531,
	0, 532, 327, 0, 328, 329, 330, 331, 332, 533,
	534, 535, 386, 0, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 0, 0,
	341, 536, 537, 0, 538, 0, 343, 0, 539, 0,
	344, 345, 346, 0, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 354, 353, 0, 355, 540, 0,
	356, 357, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 363, 364, 0, 365, 366, 368, 370, 367, 369,
	374, 371, 372, 373, 376, 0, 375, 0, 377, 378,
	379, 382, 383, 381, 0, 380, 0, 242, 0, 384,
	0, 541, 385, 542, 387, 388, 0, 0, 389, 0,
	0, 0, 391, 392, 393, 0, 0, 394, 395, 543,
	0, 396, 0, 544, 397, 398, 390, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 545, 546,
	547, 409, 548, 410, 411, 0, 412, 0, 413, 414,
	415, 416, 417, 418, 419, 549, 421, 420, 422, 0,
	0, 0, 0, 0, 0, 423, 0, 425, 426, 427,
	424, 428, 429, 430, 431, 0, 432, 433, 434, 0,
	435, 436, 437, 438, 550, 439, 0, 440, 441, 447,
	448, 442, 443, 449, 450, 451, 452, 453, 0, 455,
	456, 454, 457, 458, 459, 0, 460, 444, 445, 461,
	462, 0, 463, 464, 551, 0, 465, 0, 466, 467,
	468, 469, 446, 470, 475, 552, 471, 472, 473, 474,
	553, 0, 477, 478, 0, 476, 0, 479, 480, 481,
	482, 483, 484, 311, 485, 0, 486, 554, 555, 556,
	557, 0, 493, 0, 487, 488, 558, 489, 559, 0,
	490, 491, 492, 0, 494, 495, 0, 0, 496, 497,
	498, 500, 501, 499, 502, 0, 503, 0, 0, 504,
	505, 506, 560, 561, 562, 0, 508, 507, 563, 1250,
	0, 237, 0, 509, 510, 564, 511, 512, 513, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 514, 0, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 515, 516, 0, 517, 258, 518,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	519, 520, 521, 0, 265, 266, 522, 0, 0, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 523, 524, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 525, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 526, 527, 0, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 528, 0, 0, 0,
	320, 0, 321, 0, 0, 0, 322, 323, 529, 530,
	324, 325, 0, 326, 531, 0, 532, 327, 0, 328,
	329, 330, 331, 332, 1252, 534, 535, 386, 0, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 0, 0, 341, 536, 537, 0, 538,
	0, 343, 0, 539, 0, 344, 345, 346, 0, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 354,
	353, 0, 355, 540, 0, 356, 357, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 363, 364, 0, 365,
	366, 368, 370, 367, 369, 374, 371, 372, 373, 376,
	0, 375, 0, 377, 378, 379, 382, 383, 381, 0,
	380, 0, 242, 0, 384, 0, 541, 385, 542, 387,
	388, 0, 0, 389, 0, 0, 0, 391, 392, 393,
	0, 0, 394, 395, 543, 0, 396, 0, 544, 397,
	398, 390, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 545, 546, 547, 409, 548, 410, 411,
	0, 412, 0, 413, 414, 415, 416, 417, 418, 419,
	549, 421, 420, 422, 0, 0, 0, 0, 0, 0,
	423, 0, 425, 426, 427, 424, 428, 429, 430, 431,
	0, 432, 433, 434, 0, 435, 436, 437, 438, 550,
	439, 0, 440, 441, 447, 448, 442, 443, 449, 450,
	451, 452, 453, 0, 455, 456, 454, 457, 458, 459,
	0, 460, 444, 445, 461, 462, 0, 463, 464, 551,
	0, 465, 0, 466, 467, 468, 469, 446, 470, 475,
	552, 471, 472, 473, 474, 553, 0, 477, 478, 0,
	476, 0, 479, 480, 481, 482, 483, 484, 311, 485,
	0, 486, 554, 555, 556, 557, 0, 493, 0, 487,
	488, 558, 489, 559, 0, 490, 491, 492, 0, 494,
	495, 0, 0, 496, 497, 498, 500, 501, 499, 502,
	0, 503, 0, 0, 504, 505, 506, 560, 561, 562,
	0, 508, 507, 563, 566, 0, 237, 0, 509, 510,
	564, 511, 512, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 514, 0, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 515,
	516, 0, 517, 258, 518, 0, 259, 260, 261, 262,
	263, 0, 0, 0, 264, 519, 520, 521, 0, 265,
	266, 522, 0, 0, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 0, 0, 285, 286, 287, 288,
	0, 289, 523, 524, 0, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 298, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 525, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 526,
	527, 0, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 528, 0, 0, 0, 320, 0, 321, 0, 0,
	0, 322, 323, 529, 530, 324, 325, 0, 326, 531,
	0, 532, 327, 0, 328, 329, 330, 331, 332, 533,
	534, 535, 386, 0, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 0, 0,
	341, 536, 537, 0, 538, 0, 343, 0, 539, 0,
	344, 345, 346, 0, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 354, 353, 0, 355, 540, 0,
	356, 357, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 363, 364, 0, 365, 366, 368, 370, 367, 369,
	374, 371, 372, 373, 376, 0, 375, 0, 377, 378,
	379, 382, 383, 381, 0, 380, 0, 242, 0, 384,
	0, 541, 385, 542, 387, 388, 0, 0, 389, 0,
	0, 0, 391, 392, 393, 0, 0, 394, 395, 543,
	0, 396, 0, 544, 397, 398, 390, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 545, 546,
	547, 409, 548, 410, 411, 0, 412, 0, 413, 414,
	415, 416, 417, 418, 419, 549, 421, 420, 422, 0,
	0, 0, 0, 0, 0, 423, 0, 425, 426, 427,
	424, 428, 429, 430, 431, 0, 432, 433, 434, 0,
	435, 436, 437, 438, 550, 439, 0, 440, 441, 447,
	448, 442, 443, 449, 450, 451, 452, 453, 0, 455,
	456, 454, 457, 458, 459, 0, 460, 444, 445, 461,
	462, 0, 463, 464, 551, 0, 465, 0, 466, 467,
	468, 469, 446, 470, 475, 552, 471, 472, 473, 474,
	553, 0, 477, 478, 0, 476, 0, 479, 480, 481,
	482, 483, 484, 311, 485, 0, 486, 554, 555, 556,
	557, 0, 493, 0, 487, 488, 558, 489, 559, 0,
	490, 491, 492, 0, 494, 495, 0, 0, 496, 497,
	498, 500, 501, 499, 502, 0, 503, 0, 0, 504,
	505, 506, 560, 561, 562, 0, 508, 507, 563, 228,
	0, 237, 0, 509, 510, 564, 511, 512, 513, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 514, 0, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 515, 516, 0, 517, 258, 518,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	519, 520, 521, 0, 265, 266, 522, 0, 0, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 523, 524, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 525, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 526, 527, 0, 240, 0, 0,
	0, 0, 0, 317, 318, 319, 528, 0, 0, 0,
	320, 0, 321, 0, 0, 0, 322, 323, 529, 530,
	324, 325, 0, 326, 531, 0, 532, 327, 0, 328,
	329, 330, 331, 332, 533, 534, 535, 386, 0, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 241,
	339, 340, 342, 0, 0, 341, 536, 537, 0, 538,
	0, 343, 0, 539, 0, 344, 345, 346, 0, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 354,
	353, 0, 355, 540, 0, 356, 357, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 363, 364, 0, 365,
	366, 368, 370, 367, 369, 374, 371, 372, 373, 376,
	0, 375, 0, 377, 378, 379, 382, 383, 381, 0,
	380, 0, 242, 0, 384, 0, 541, 385, 542, 387,
	388, 0, 0, 389, 0, 0, 0, 391, 392, 393,
	0, 0, 394, 395, 543, 0, 396, 0, 544, 397,
	398, 390, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 545, 546, 547, 409, 548, 410, 411,
	0, 412, 0, 413, 414, 415, 416, 417, 418, 419,
	549, 421, 420, 422, 0, 0, 0, 0, 0, 0,
	423, 0, 425, 426, 427, 424, 428, 429, 430, 431,
	0, 432, 433, 434, 0, 435, 436, 437, 438, 550,
	439, 0, 440, 441, 447, 448, 442, 443, 449, 450,
	451, 452, 453, 0, 455, 456, 454, 457, 458, 459,
	0, 460, 444, 445, 461, 462, 0, 463, 464, 551,
	0, 465, 0, 466, 467, 468, 469, 446, 470, 475,
	552, 471, 472, 473, 474, 553, 0, 477, 478, 0,
	476, 0, 479, 480, 481, 482, 483, 484, 311, 485,
	0, 486, 554, 555, 556, 557, 0, 493, 0, 487,
	488, 558, 489, 559, 0, 490, 491, 492, 0, 494,
	495, 0, 0, 496, 497, 498, 500, 501, 499, 502,
	0, 503, 0, 0, 504, 505, 506, 560, 561, 562,
	237, 508, 507, 563, 0, 0, 0, 0, 509, 510,
	564, 511, 512, 513, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 514, 0, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 515, 516, 0, 517, 258, 518, 0,
	259, 260, 261, 262, 263, 0, 0, 0, 264, 519,
	520, 521, 0, 265, 266, 522, 0, 0, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 288, 0, 289, 523, 524, 0, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 298, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 525, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 526, 527, 0, 240, 0, 0, 0,
	0, 0, 317, 318, 319, 528, 0, 0, 0, 320,
	0, 321, 0, 0, 0, 322, 323, 529, 530, 324,
	325, 0, 326, 531, 0, 532, 327, 0, 328, 329,
	330, 331, 332, 533, 534, 535, 386, 0, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 241, 339,
	340, 342, 0, 0, 341, 536, 537, 0, 538, 0,
	343, 0, 539, 0, 344, 345, 346, 0, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 354, 353,
	0, 355, 540, 0, 356, 357, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 363, 364, 0, 365, 366,
	368, 370, 367, 369, 374, 371, 372, 373, 376, 0,
	375, 0, 377, 378, 379, 382, 383, 381, 0, 380,
	0, 242, 0, 384, 0, 541, 385, 542, 387, 388,
	0, 0, 389, 0, 0, 0, 391, 392, 393, 0,
	0, 394, 395, 543, 0, 396, 0, 544, 397, 398,
	390, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 545, 546, 547, 409, 548, 410, 411, 0,
	412, 0, 413, 414, 415, 416, 417, 418, 419, 549,
	421, 420, 422, 0, 0, 0, 0, 0, 0, 423,
	0, 425, 426, 427, 424, 428, 429, 430, 431, 0,
	432, 433, 434, 0, 435, 436, 437, 438, 550, 439,
	0, 440, 441, 447, 448, 442, 443, 449, 450, 451,
	452, 453, 0, 455, 456, 454, 457, 458, 459, 0,
	460, 444, 445, 461, 462, 0, 463, 464, 551, 0,
	465, 0, 466, 467, 468, 469, 446, 470, 475, 552,
	471, 472, 473, 474, 553, 0, 477, 478, 0, 476,
	0, 479, 480, 481, 482, 483, 484, 311, 485, 0,
	486, 554, 555, 556, 557, 0, 493, 0, 487, 488,
	558, 489, 559, 0, 490, 491, 492, 0, 494, 495,
	0, 0, 496, 497, 498, 500, 501, 499, 502, 0,
	503, 0, 0, 504, 505, 506, 560, 561, 562, 237,
	508, 507, 563, 0, 0, 0, 0, 509, 510, 564,
	511, 512, 513, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	514, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 515, 516, 0, 517, 258, 518, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 519, 520,
	521, 0, 265, 266, 522, 0, 0, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 588, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 523, 524, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 525, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 526, 527, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 528, 0, 0, 0, 320, 0,
	321, 0, 0, 0, 322, 323, 529, 530, 324, 325,
	589, 326, 531, 0, 532, 327, 0, 328, 329, 330,
	331, 332, 533, 534, 535, 386, 0, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 0, 339, 340,
	342, 0, 0, 341, 536, 537, 0, 538, 0, 343,
	0, 539, 0, 344, 345, 346, 0, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 354, 353, 0,
	355, 540, 0, 356, 357, 0, 0, 358, 359, 360,
	0, 0, 361, 362, 363, 364, 0, 365, 366, 368,
	370, 367, 369, 374, 371, 372, 373, 376, 0, 375,
	0, 377, 378, 379, 382, 383, 381, 0, 380, 0,
	0, 0, 384, 0, 541, 385, 542, 387, 388, 0,
	0, 389, 0, 0, 0, 391, 392, 393, 0, 0,
	394, 395, 543, 0, 396, 0, 544, 397, 398, 390,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	408, 545, 546, 547, 409, 548, 410, 411, 0, 412,
	0, 413, 414, 415, 416, 417, 418, 419, 549, 421,
	420, 422, 0, 0, 0, 0, 0, 0, 423, 0,
	425, 426, 427, 424, 428, 429, 430, 431, 0, 432,
	433, 434, 0, 435, 436, 437, 438, 550, 439, 0,
	440, 441, 447, 448, 442, 443, 449, 450, 451, 452,
	453, 590, 455, 456, 454, 457, 458, 459, 0, 460,
	444, 445, 461, 462, 0, 463, 464, 551, 0, 465,
	0, 466, 467, 468, 469, 446, 470, 475, 552, 471,
	472, 473, 474, 553, 0, 477, 478, 0, 476, 0,
	479, 480, 481, 482, 483, 484, 311, 485, 0, 486,
	554, 555, 556, 557, 0, 493, 0, 487, 488, 558,
	489, 559, 0, 490, 491, 492, 0, 494, 495, 0,
	0, 496, 497, 498, 500, 501, 499, 502, 0, 503,
	0, 0, 504, 505, 506, 560, 561, 562, 237, 508,
	507, 563, 0, 0, 0, 0, 509, 510, 564, 511,
	512, 513, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 514,
	0, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 515, 516, 0, 517, 258, 518, 0, 259, 260,
	261, 262, 263, 0, 0, 0, 264, 519, 520, 521,
	0, 265, 266, 522, 0, 0, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	2062, 288, 0, 289, 523, 524, 0, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 298,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	525, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 526, 527, 0, 240, 0, 0, 0, 0, 0,
	317, 318, 319, 528, 0, 0, 0, 320, 0, 321,
	0, 0, 0, 322, 323, 529, 530, 324, 325, 0,
	326, 531, 0, 532, 327, 0, 328, 329, 330, 331,
	332, 533, 534, 535, 386, 0, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 241, 339, 340, 342,
	0, 0, 341, 536, 537, 0, 538, 0, 343, 0,
	539, 0, 344, 345, 346, 0, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 354, 353, 0, 355,
	540, 0, 356, 357, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 363, 364, 0, 365, 366, 368, 370,
	367, 369, 374, 371, 372, 373, 376, 0, 375, 0,
	377, 378, 379, 382, 383, 381, 0, 380, 0, 242,
	0, 384, 0, 541, 385, 542, 387, 388, 0, 0,
	389, 0, 0, 0, 391, 392, 393, 0, 0, 394,
	395, 543, 0, 396, 0, 544, 397, 398, 390, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	545, 546, 547, 409, 548, 410, 411, 0, 412, 0,
	413, 414, 415, 416, 417, 418, 419, 549, 421, 420,
	422, 0, 0, 0, 0, 0, 0, 423, 0, 425,
	426, 427, 424, 428, 429, 430, 431, 0, 432, 433,
	434, 0, 435, 436, 437, 438, 550, 439, 0, 440,
	441, 447, 448, 442, 443, 449, 450, 451, 452, 453,
	0, 455, 456, 454, 457, 458, 459, 0, 460, 444,
	445, 461, 462, 0, 463, 464, 551, 0, 465, 0,
	466, 467, 468, 469, 446, 470, 475, 552, 471, 472,
	473, 474, 553, 0, 477, 478, 0, 476, 0, 479,
	480, 481, 482, 483, 484, 311, 485, 0, 486, 554,
	555, 556, 557, 0, 493, 0, 487, 488, 558, 489,
	559, 0, 490, 491, 492, 0, 494, 495, 0, 0,
	496, 497, 498, 500, 501, 499, 502, 0, 503, 0,
	0, 504, 505, 506, 560, 561, 562, 237, 508, 507,
	563, 0, 0, 0, 0, 509, 510, 564, 511, 512,
	513, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 514, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	515, 516, 0, 517, 258, 518, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 519, 520, 521, 0,
	265, 266, 522, 0, 0, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 2060,
	288, 0, 289, 523, 524, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 525,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	526, 527, 0, 240, 0, 0, 0, 0, 0, 317,
	318, 319, 528, 0, 0, 0, 320, 0, 321, 0,
	0, 0, 322, 323, 529, 530, 324, 325, 0, 326,
	531, 0, 532, 327, 0, 328, 329, 330, 331, 332,
	533, 534, 535, 386, 0, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 241, 339, 340, 342, 0,
	0, 341, 536, 537, 0, 538, 0, 343, 0, 539,
	0, 344, 345, 346, 0, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 354, 353, 0, 355, 540,
	0, 356, 357, 0, 0, 358, 359, 360, 0, 0,
	361, 362, 363, 364, 0, 365, 366, 368, 370, 367,
	369, 374, 371, 372, 373, 376, 0, 375, 0, 377,
	378, 379, 382, 383, 381, 0, 380, 0, 242, 0,
	384, 0, 541, 385, 542, 387, 388, 0, 0, 389,
	0, 0, 0, 391, 392, 393, 0, 0, 394, 395,
	543, 0, 396, 0, 544, 397, 398, 390, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 545,
	546, 547, 409, 548, 410, 411, 0, 412, 0, 413,
	414, 415, 416, 417, 418, 419, 549, 421, 420, 422,
	0, 0, 0, 0, 0, 0, 423, 0, 425, 426,
	427, 424, 428, 429, 430, 431, 0, 432, 433, 434,
	0, 435, 436, 437, 438, 550, 439, 0, 440, 441,
	447, 448, 442, 443, 449, 450, 451, 452, 453, 0,
	455, 456, 454, 457, 458, 459, 0, 460, 444, 445,
	461, 462, 0, 463, 464, 551, 0, 465, 0, 466,
	467, 468, 469, 446, 470, 475, 552, 471, 472, 473,
	474, 553, 0, 477, 478, 0, 476, 0, 479, 480,
	481, 482, 483, 484, 311, 485, 0, 486, 554, 555,
	556, 557, 0, 493, 0, 487, 488, 558, 489, 559,
	0, 490, 491, 492, 0, 494, 495, 0, 0, 496,
	497, 498, 500, 501, 499, 502, 0, 503, 0, 0,
	504, 505, 506, 560, 561, 562, 237, 508, 507, 563,
	0, 0, 0, 0, 509, 510, 564, 511, 512, 513,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 514, 0, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 515,
	516, 0, 517, 258, 518, 0, 259, 260, 261, 262,
	263, 0, 0, 0, 264, 519, 520, 521, 0, 265,
	266, 522, 0, 0, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 0, 0, 285, 286, 2058, 288,
	0, 289, 523, 524, 0, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 298, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 525, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 526,
	527, 0, 240, 0, 0, 0, 0, 0, 317, 318,
	319, 528, 0, 0, 0, 320, 0, 321, 0, 0,
	0, 322, 323, 529, 530, 324, 325, 0, 326, 531,
	0, 532, 327, 0, 328, 329, 330, 331, 332, 533,
	534, 535, 386, 0, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 241, 339, 340, 342, 0, 0,
	341, 536, 537, 0, 538, 0, 343, 0, 539, 0,
	344, 345, 346, 0, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 354, 353, 0, 355, 540, 0,
	356, 357, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 363, 364, 0, 365, 366, 368, 370, 367, 369,
	374, 371, 372, 373, 376, 0, 375, 0, 377, 378,
	379, 382, 383, 381, 0, 380, 0, 242, 0, 384,
	0, 541, 385, 542, 387, 388, 0, 0, 389, 0,
	0, 0, 391, 392, 393, 0, 0, 394, 395, 543,
	0, 396, 0, 544, 397, 398, 390, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 545, 546,
	547, 409, 548, 410, 411, 0, 412, 0, 413, 414,
	415, 416, 417, 418, 419, 549, 421, 420, 422, 0,
	0, 0, 0, 0, 0, 423, 0, 425, 426, 427,
	424, 428, 429, 430, 431, 0, 432, 433, 434, 0,
	435, 436, 437, 438, 550, 439, 0, 440, 441, 447,
	448, 442, 443, 449, 450, 451, 452, 453, 0, 455,
	456, 454, 457, 458, 459, 0, 460, 444, 445, 461,
	462, 0, 463, 464, 551, 0, 465, 0, 466, 467,
	468, 469, 446, 470, 475, 552, 471, 472, 473, 474,
	553, 0, 477, 478, 0, 476, 0, 479, 480, 481,
	482, 483, 484, 311, 485, 0, 486, 554, 555, 556,
	557, 0, 493, 0, 487, 488, 558, 489, 559, 0,
	490, 491, 492, 0, 494, 495, 0, 0, 496, 497,
	498, 500, 501, 499, 502, 0, 503, 0, 0, 504,
	505, 506, 560, 561, 562, 237, 508, 507, 563, 0,
	0, 0, 0, 509, 510, 564, 511, 512, 513, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 514, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 515, 516,
	0, 517, 258, 518, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 519, 520, 521, 0, 265, 266,
	522, 0, 0, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 288, 0,
	289, 523, 524, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 525, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 526, 527,
	0, 240, 0, 0, 0, 0, 0, 317, 318, 319,
	528, 0, 0, 0, 320, 0, 321, 0, 0, 0,
	322, 323, 529, 530, 324, 325, 0, 326, 531, 0,
	532, 327, 0, 328, 329, 330, 331, 332, 1997, 534,
	535, 386, 0, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 241, 339, 340, 342, 0, 0, 341,
	536, 537, 0, 538, 0, 343, 0, 539, 0, 344,
	345, 346, 0, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 354, 353, 0, 355, 540, 0, 356,
	357, 0, 0, 358, 359, 360, 0, 0, 361, 362,
	363, 364, 0, 365, 366, 368, 370, 367, 369, 374,
	371, 372, 373, 376, 0, 375, 0, 377, 378, 379,
	382, 383, 381, 0, 380, 0, 242, 0, 384, 0,
	541, 385, 542, 387, 388, 0, 0, 389, 0, 0,
	0, 391, 392, 393, 0, 0, 394, 395, 543, 0,
	396, 0, 544, 397, 398, 390, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 545, 546, 547,
	409, 548, 410, 411, 0, 412, 0, 413, 414, 415,
	416, 417, 418, 419, 549, 421, 420, 422, 0, 0,
	0, 0, 0, 0, 423, 0, 425, 426, 427, 424,
	428, 429, 430, 431, 0, 432, 433, 434, 0, 435,
	436, 437, 438, 550, 439, 0, 440, 441, 447, 448,
	442, 443, 449, 450, 451, 452, 453, 0, 455, 456,
	454, 457, 458, 459, 0, 460, 444, 445, 461, 462,
	0, 463, 464, 551, 0, 465, 0, 466, 467, 468,
	469, 446, 470, 475, 552, 471, 472, 473, 474, 553,
	0, 477, 478, 0, 476, 0, 479, 480, 481, 482,
	483, 484, 311, 485, 0, 486, 554, 555, 556, 557,
	0, 493, 0, 487, 488, 558, 489, 559, 0, 490,
	491, 492, 0, 494, 495, 0, 0, 496, 497, 498,
	500, 501, 499, 502, 0, 503, 0, 0, 504, 505,
	506, 560, 561, 562, 0, 508, 507, 563, 750, 0,
	237, 0, 509, 510, 564, 511, 512, 513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 514, 0, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 515, 516, 0, 517, 258, 518, 0,
	259, 260, 261, 262, 263, 0, 0, 0, 264, 519,
	520, 521, 0, 265, 266, 522, 0, 0, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 288, 0, 289, 523, 524, 0, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 298, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 525, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 526, 527, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 528, 0, 0, 0, 320,
	0, 321, 0, 0, 0, 322, 323, 529, 530, 324,
	325, 0, 326, 531, 0, 532, 327, 0, 328, 329,
	330, 331, 332, 533, 534, 535, 386, 0, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 0, 339,
	340, 342, 0, 0, 341, 536, 537, 0, 538, 749,
	343, 0, 539, 0, 344, 345, 346, 0, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 354, 353,
	0, 355, 540, 0, 356, 357, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 363, 364, 0, 365, 366,
	368, 370, 367, 369, 374, 371, 372, 373, 376, 0,
	375, 0, 377, 378, 379, 382, 383, 381, 0, 380,
	0, 0, 0, 384, 0, 541, 385, 542, 387, 388,
	0, 0, 389, 0, 0, 0, 391, 392, 393, 0,
	0, 394, 395, 543, 0, 396, 0, 544, 397, 398,
	390, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 545, 546, 547, 409, 548, 410, 411, 0,
	412, 0, 413, 414, 415, 416, 417, 418, 419, 549,
	421, 420, 422, 0, 0, 0, 0, 0, 0, 423,
	0, 425, 426, 427, 424, 428, 429, 430, 431, 0,
	432, 433, 434, 0, 435, 436, 437, 438, 550, 439,
	0, 440, 441, 447, 448, 442, 443, 449, 450, 451,
	452, 453, 0, 455, 456, 454, 457, 458, 459, 0,
	460, 444, 445, 461, 462, 0, 463, 464, 551, 0,
	465, 0, 466, 467, 468, 469, 446, 470, 475, 552,
	471, 472, 473, 474, 553, 0, 477, 478, 0, 476,
	748, 479, 480, 481, 482, 483, 484, 311, 485, 0,
	486, 554, 555, 556, 557, 0, 493, 0, 487, 488,
	558, 489, 559, 0, 490, 491, 492, 0, 494, 495,
	0, 0, 496, 497, 498, 500, 501, 499, 502, 0,
	503, 0, 0, 504, 505, 506, 560, 561, 562, 237,
	508, 507, 563, 0, 0, 0, 0, 509, 510, 564,
	511, 512, 513, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	514, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 515, 516, 0, 517, 258, 518, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 519, 520,
	521, 0, 265, 266, 522, 0, 0, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 523, 524, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 525, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 526, 527, 0, 2626, 0, 0, 0, 0,
	0, 317, 318, 319, 528, 0, 0, 0, 320, 0,
	321, 0, 0, 0, 322, 323, 529, 530, 324, 325,
	0, 326, 531, 0, 532, 327, 0, 328, 329, 330,
	331, 332, 533, 534, 535, 386, 0, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 0, 339, 340,
	342, 0, 0, 341, 536, 537, 0, 538, 0, 343,
	0, 539, 0, 344, 345, 346, 0, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 354, 353, 0,
	355, 540, 0, 356, 357, 0, 0, 358, 359, 360,
	0, 0, 361, 362, 363, 364, 0, 365, 366, 368,
	370, 367, 369, 374, 371, 372, 373, 376, 0, 375,
	0, 377, 378, 379, 382, 383, 381, 0, 380, 0,
	0, 0, 384, 0, 541, 385, 542, 387, 388, 0,
	0, 389, 0, 0, 0, 391, 392, 393, 0, 0,
	394, 395, 543, 0, 396, 0, 544, 397, 398, 390,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	408, 545, 546, 547, 409, 548, 410, 411, 3558, 412,
	0, 413, 414, 415, 416, 417, 418, 419, 549, 421,
	420, 422, 0, 0, 0, 0, 0, 0, 423, 0,
	425, 426, 427, 424, 428, 429, 430, 431, 0, 432,
	433, 434, 0, 435, 436, 437, 438, 550, 439, 0,
	440, 441, 447, 448, 442, 443, 449, 450, 451, 452,
	453, 0, 455, 456, 454, 457, 458, 459, 0, 460,
	444, 445, 461, 462, 0, 463, 464, 551, 0, 465,
	0, 466, 467, 468, 469, 446, 470, 475, 552, 471,
	472, 473, 474, 553, 0, 477, 478, 0, 476, 0,
	479, 480, 481, 482, 483, 484, 311, 485, 0, 486,
	554, 555, 556, 557, 0, 493, 0, 487, 488, 558,
	489, 559, 0, 490, 491, 492, 0, 494, 495, 0,
	0, 496, 497, 498, 500, 501, 499, 502, 0, 503,
	0, 0, 504, 505, 506, 560, 561, 562, 0, 508,
	507, 563, 575, 0, 237, 0, 509, 510, 564, 511,
	512, 513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 574, 249, 250,
	0, 0, 0, 0, 0, 514, 0, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 515, 516, 0,
	517, 258, 518, 0, 259, 260, 261, 262, 263, 0,
	0, 0, 264, 519, 520, 521, 0, 265, 266, 522,
	0, 0, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 0, 0, 285, 286, 287, 288, 0, 289,
	523, 524, 0, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 298, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 525, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 526, 527, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 528,
	0, 0, 0, 320, 0, 321, 0, 0, 0, 322,
	323, 529, 530, 324, 325, 0, 326, 531, 0, 532,
	327, 0, 328, 329, 330, 331, 332, 533, 534, 535,
	386, 0, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 0, 339, 340, 342, 0, 0, 341, 536,
	537, 0, 538, 0, 343, 0, 539, 0, 344, 345,
	346, 0, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 354, 353, 0, 355, 540, 0, 356, 357,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 363,
	364, 0, 365, 366, 368, 370, 367, 369, 374, 371,
	372, 373, 376, 0, 375, 0, 377, 378, 379, 382,
	383, 381, 0, 380, 0, 0, 0, 384, 0, 541,
	385, 542, 387, 388, 0, 0, 389, 0, 0, 0,
	391, 392, 393, 0, 0, 394, 395, 543, 0, 396,
	0, 544, 397, 398, 390, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 545, 546, 547, 409,
	548, 573, 411, 0, 412, 0, 413, 414, 415, 416,
	417, 418, 419, 549, 421, 420, 422, 0, 0, 0,
	0, 0, 0, 423, 0, 425, 426, 427, 424, 428,
	429, 430, 431, 0, 432, 433, 434, 0, 435, 436,
	437, 438, 550, 439, 0, 440, 441, 447, 448, 442,
	443, 449, 450, 451, 452, 453, 0, 455, 456, 454,
	457, 458, 459, 0, 460, 444, 445, 461, 462, 0,
	463, 464, 551, 0, 465, 0, 466, 467, 468, 469,
	446, 470, 475, 552, 471, 472, 473, 474, 553, 0,
	477, 478, 0, 476, 0, 479, 480, 481, 482, 483,
	484, 311, 485, 0, 486, 554, 555, 556, 557, 0,
	493, 0, 487, 488, 558, 489, 559, 0, 490, 491,
	492, 0, 494, 495, 0, 0, 496, 497, 498, 500,
	501, 499, 502, 0, 503, 0, 0, 504, 505, 506,
	560, 561, 562, 0, 508, 507, 563, 237, 2613, 0,
	0, 509, 510, 564, 511, 512, 513, 0, 0, 0,
	0, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 514, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	515, 516, 0, 517, 258, 518, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 519, 520, 521, 0,
	265, 266, 522, 0, 0, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 523, 524, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 525,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	526, 527, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 528, 0, 0, 0, 320, 0, 321, 0,
	0, 0, 322, 323, 529, 530, 324, 325, 0, 326,
	531, 0, 532, 327, 0, 328, 329, 330, 331, 332,
	533, 534, 535, 386, 0, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 0, 339, 340, 342, 0,
	0, 341, 536, 537, 0, 538, 0, 343, 0, 539,
	0, 344, 345, 346, 0, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 354, 353, 0, 355, 540,
	0, 356, 357, 0, 0, 358, 359, 360, 0, 0,
	361, 362, 363, 364, 0, 365, 366, 368, 370, 367,
	369, 374, 371, 372, 373, 376, 0, 375, 0, 377,
	378, 379, 382, 383, 381, 0, 380, 0, 0, 0,
	384, 0, 541, 385, 542, 387, 388, 0, 0, 389,
	0, 0, 0, 391, 392, 393, 0, 0, 394, 395,
	543, 0, 396, 0, 544, 397, 398, 390, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 545,
	546, 547, 409, 548, 410, 411, 0, 412, 0, 413,
	414, 415, 416, 417, 418, 419, 549, 421, 420, 422,
	0, 0, 0, 0, 0, 0, 423, 0, 425, 426,
	427, 424, 428, 429, 430, 431, 0, 432, 433, 434,
	0, 435, 436, 437, 438, 550, 439, 0, 440, 441,
	447, 448, 442, 443, 449, 450, 451, 452, 453, 0,
	455, 456, 454, 457, 458, 459, 0, 460, 444, 445,
	461, 462, 0, 463, 464, 551, 0, 465, 0, 466,
	467, 468, 469, 446, 470, 475, 552, 471, 472, 473,
	474, 553, 0, 477, 478, 0, 476, 0, 479, 480,
	481, 482, 483, 484, 311, 485, 0, 486, 554, 555,
	556, 557, 0, 493, 0, 487, 488, 558, 489, 559,
	0, 490, 491, 492, 0, 494, 495, 0, 0, 496,
	497, 498, 500, 501, 499, 502, 0, 503, 0, 0,
	504, 505, 506, 560, 561, 562, 0, 508, 507, 563,
	237, 3567, 0, 0, 509, 510, 564, 511, 512, 513,
	0, 0, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 514, 0, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 515, 516, 0, 517, 258, 518, 0,
	259, 260, 261, 262, 263, 0, 0, 0, 264, 519,
	520, 521, 0, 265, 266, 522, 0, 0, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 288, 0, 289, 523, 524, 0, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 298, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 525, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 526, 527, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 528, 0, 0, 0, 320,
	0, 321, 0, 0, 0, 322, 323, 529, 530, 324,
	325, 0, 326, 531, 0, 532, 327, 0, 328, 329,
	330, 331, 332, 533, 534, 535, 386, 0, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 0, 339,
	340, 342, 0, 0, 341, 536, 537, 0, 538, 0,
	343, 0, 539, 0, 344, 345, 346, 0, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 354, 353,
	0, 355, 540, 0, 356, 357, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 363, 364, 0, 365, 366,
	368, 370, 367, 369, 374, 371, 372, 373, 376, 0,
	375, 0, 377, 378, 379, 382, 383, 381, 0, 380,
	0, 0, 0, 384, 0, 541, 385, 542, 387, 388,
	0, 0, 389, 0, 0, 0, 391, 392, 393, 0,
	0, 394, 395, 543, 0, 396, 0, 544, 397, 398,
	390, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 545, 546, 547, 409, 548, 410, 411, 0,
	412, 0, 413, 414, 415, 416, 417, 418, 419, 549,
	421, 420, 422, 0, 0, 0, 0, 0, 0, 423,
	0, 425, 426, 427, 424, 428, 429, 430, 431, 0,
	432, 433, 434, 0, 435, 436, 437, 438, 550, 439,
	0, 440, 441, 447, 448, 442, 443, 449, 450, 451,
	452, 453, 0, 455, 456, 454, 457, 458, 459, 0,
	460, 444, 445, 461, 462, 0, 463, 464, 551, 0,
	465, 0, 466, 467, 468, 469, 446, 470, 475, 552,
	471, 472, 473, 474, 553, 0, 477, 478, 0, 476,
	0, 479, 480, 481, 482, 483, 484, 311, 485, 0,
	486, 554, 555, 556, 557, 0, 493, 0, 487, 488,
	558, 489, 559, 0, 490, 491, 492, 0, 494, 495,
	0, 0, 496, 497, 498, 500, 501, 499, 502, 0,
	503, 0, 0, 504, 505, 506, 560, 561, 562, 237,
	508, 507, 563, 0, 0, 0, 0, 509, 510, 564,
	511, 512, 513, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	514, 0, 0, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 515, 516, 0, 517, 258, 518, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 519, 520,
	521, 0, 265, 266, 522, 0, 0, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 523, 524, 3302, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 525, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 526, 527, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 528, 0, 0, 0, 320, 0,
	321, 0, 0, 0, 322, 323, 529, 530, 324, 325,
	0, 326, 531, 0, 532, 327, 0, 328, 329, 330,
	331, 332, 533, 534, 535, 386, 0, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 0, 339, 340,
	342, 0, 0, 341, 536, 537, 0, 538, 0, 343,
	0, 539, 0, 344, 345, 346, 0, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 354, 353, 0,
	355, 540, 0, 356, 357, 0, 0, 358, 359, 360,
	0, 0, 361, 362, 363, 364, 0, 365, 366, 368,
	370, 367, 369, 374, 371, 372, 373, 376, 0, 375,
	0, 377, 378, 379, 382, 383, 381, 0, 380, 0,
	0, 0, 384, 0, 541, 385, 542, 387, 388, 0,
	0, 389, 0, 0, 0, 391, 392, 393, 0, 0,
	394, 395, 543, 0, 396, 0, 544, 397, 398, 390,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	408, 545, 546, 547, 409, 548, 410, 411, 0, 412,
	0, 413, 414, 415, 416, 417, 418, 419, 549, 421,
	420, 422, 0, 0, 0, 0, 0, 0, 423, 0,
	425, 426, 427, 424, 428, 429, 430, 431, 0, 432,
	433, 434, 0, 435, 436, 437, 438, 550, 439, 0,
	440, 441, 447, 448, 442, 443, 449, 450, 451, 452,
	453, 0, 455, 456, 454, 457, 458, 459, 0, 460,
	444, 445, 461, 462, 0, 463, 464, 551, 0, 465,
	0, 466, 467, 468, 469, 446, 470, 475, 552, 471,
	472, 473, 474, 553, 0, 477, 478, 0, 476, 0,
	479, 480, 481, 482, 483, 484, 311, 485, 0, 486,
	554, 555, 556, 557, 0, 493, 0, 487, 488, 558,
	489, 559, 0, 490, 491, 492, 0, 494, 495, 0,
	0, 496, 497, 498, 500, 501, 499, 502, 0, 503,
	0, 0, 504, 505, 506, 560, 561, 562, 237, 508,
	507, 563, 0, 0, 0, 0, 509, 510, 564, 511,
	512, 513, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 514,
	0, 2367, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 515, 516, 0, 517, 258, 518, 0, 259, 260,
	261, 262, 263, 0, 0, 0, 264, 519, 520, 521,
	0, 265, 266, 522, 0, 0, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	287, 288, 0, 289, 523, 524, 0, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 298,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	525, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 526, 527, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 528, 0, 0, 0, 320, 0, 321,
	0, 0, 0, 322, 323, 529, 530, 324, 325, 0,
	326, 531, 0, 532, 327, 0, 328, 329, 330, 331,
	332, 533, 534, 535, 386, 0, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 0, 339, 340, 342,
	0, 0, 341, 536, 537, 0, 538, 0, 343, 0,
	539, 0, 344, 345, 346, 0, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 354, 353, 0, 355,
	540, 0, 356, 357, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 363, 364, 0, 365, 366, 368, 370,
	367, 369, 374, 371, 372, 373, 376, 0, 375, 0,
	377, 378, 379, 382, 383, 381, 0, 380, 0, 0,
	0, 384, 0, 541, 385, 542, 387, 388, 0, 0,
	389, 0, 0, 0, 391, 392, 393, 0, 0, 394,
	395, 543, 0, 396, 0, 544, 397, 398, 390, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	545, 546, 547, 409, 548, 410, 411, 0, 412, 0,
	413, 414, 415, 416, 417, 418, 419, 549, 421, 420,
	422, 0, 0, 0, 0, 0, 0, 423, 0, 425,
	426, 427, 424, 428, 429, 430, 431, 0, 432, 433,
	434, 0, 435, 436, 437, 438, 550, 439, 0, 440,
	441, 447, 448, 442, 443, 449, 450, 451, 452, 453,
	0, 455, 456, 454, 457, 458, 459, 0, 460, 444,
	445, 461, 462, 0, 463, 464, 551, 0, 465, 0,
	466, 467, 468, 469, 446, 470, 475, 552, 471, 472,
	473, 474, 553, 0, 477, 478, 0, 476, 0, 479,
	480, 481, 482, 483, 484, 311, 485, 0, 486, 554,
	555, 556, 557, 0, 493, 0, 487, 488, 558, 489,
	559, 0, 490, 491, 492, 0, 494, 495, 0, 0,
	496, 497, 498, 500, 501, 499, 502, 0, 503, 0,
	0, 504, 505, 506, 560, 561, 562, 0, 508, 507,
	563, 237, 2613, 0, 0, 509, 510, 564, 511, 512,
	513, 0, 0, 0, 0, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 514, 0, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 515, 516, 0, 517, 258, 518,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	519, 520, 521, 0, 265, 266, 522, 0, 0, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 523, 524, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 525, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 526, 527, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 528, 0, 0, 0,
	320, 0, 321, 0, 0, 0, 322, 323, 529, 530,
	324, 325, 0, 326, 531, 0, 532, 327, 0, 328,
	329, 330, 331, 332, 533, 534, 535, 386, 0, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 0,
	339, 340, 342, 0, 0, 341, 536, 537, 0, 538,
	0, 343, 0, 539, 0, 344, 345, 346, 0, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 354,
	353, 0, 355, 540, 0, 356, 357, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 363, 364, 0, 365,
	366, 368, 370, 367, 369, 374, 371, 372, 373, 376,
	0, 375, 0, 377, 378, 379, 382, 383, 381, 0,
	380, 0, 0, 0, 384, 0, 541, 385, 542, 387,
	388, 0, 0, 389, 0, 0, 0, 391, 392, 2610,
	0, 0, 394, 395, 543, 0, 396, 0, 544, 397,
	398, 390, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 545, 546, 547, 409, 548, 410, 411,
	0, 412, 0, 413, 414, 415, 416, 417, 418, 419,
	549, 421, 420, 422, 0, 0, 0, 0, 0, 0,
	423, 0, 425, 426, 427, 424, 428, 429, 430, 431,
	0, 432, 433, 434, 0, 435, 436, 437, 438, 550,
	439, 0, 440, 441, 447, 448, 442, 443, 449, 450,
	451, 452, 453, 0, 455, 456, 454, 457, 458, 459,
	0, 460, 444, 445, 461, 462, 0, 463, 464, 551,
	0, 465, 0, 466, 467, 468, 469, 446, 470, 475,
	552, 471, 472, 473, 474, 553, 0, 477, 478, 0,
	476, 0, 479, 480, 481, 482, 483, 484, 311, 485,
	0, 486, 554, 555, 556, 557, 0, 493, 0, 487,
	488, 558, 489, 559, 0, 490, 491, 492, 0, 494,
	495, 0, 0, 496, 497, 498, 500, 501, 499, 502,
	0, 503, 0, 0, 504, 505, 506, 560, 561, 562,
	237, 508, 507, 563, 0, 0, 0, 0, 509, 510,
	564, 511, 512, 513, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 2039, 249, 250, 0, 0, 0, 0,
	0, 514, 0, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 515, 516, 0, 517, 258, 518, 0,
	259, 260, 261, 262, 263, 0, 0, 0, 264, 519,
	520, 521, 0, 265, 266, 522, 0, 0, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 288, 0, 289, 523, 524, 0, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 298, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 525, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 526, 527, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 528, 0, 0, 0, 320,
	0, 321, 0, 0, 0, 322, 323, 529, 530, 324,
	325, 0, 326, 531, 0, 532, 327, 0, 328, 329,
	330, 331, 332, 533, 534, 535, 386, 0, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 0, 339,
	340, 342, 0, 0, 341, 536, 537, 0, 538, 0,
	343, 0, 539, 0, 344, 345, 346, 0, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 354, 353,
	0, 355, 540, 0, 356, 357, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 363, 364, 0, 365, 366,
	368, 370, 367, 369, 374, 371, 372, 373, 376, 0,
	375, 0, 377, 378, 379, 382, 383, 381, 0, 380,
	0, 0, 0, 384, 0, 541, 385, 542, 387, 388,
	0, 0, 389, 0, 0, 0, 391, 392, 393, 0,
	0, 394, 395, 543, 0, 396, 0, 544, 397, 398,
	390, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 545, 546, 547, 409, 548, 410, 411, 0,
	412, 0, 413, 414, 415, 416, 417, 418, 419, 549,
	421, 420, 422, 0, 0, 0, 0, 0, 0, 423,
	0, 425, 426, 427, 424, 428, 429, 430, 431, 0,
	432, 433, 434, 0, 435, 436, 437, 438, 550, 439,
	0, 440, 441, 447, 448, 442, 443, 449, 450, 451,
	452, 453, 0, 455, 456, 454, 457, 458, 459, 0,
	460, 444, 445, 461, 462, 0, 463, 464, 551, 0,
	465, 0, 466, 467, 468, 469, 446, 470, 475, 552,
	471, 472, 473, 474, 553, 0, 477, 478, 0, 476,
	0, 479, 480, 481, 482, 483, 484, 311, 485, 0,
	486, 554, 555, 556, 557, 0, 493, 0, 487, 488,
	558, 489, 559, 0, 490, 491, 492, 0, 494, 495,
	0, 0, 496, 497, 498, 500, 501, 499, 502, 0,
	503, 0, 0, 504, 505, 506, 560, 561, 562, 0,
	508, 507, 563, 2029, 0, 237, 0, 509, 510, 564,
	511, 512, 513, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 514, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 515, 516,
	0, 517, 258, 518, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 519, 520, 521, 0, 265, 266,
	522, 0, 0, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 288, 0,
	289, 523, 524, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 525, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 526, 527,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	528, 0, 0, 0, 320, 0, 321, 0, 0, 0,
	322, 323, 529, 530, 324, 325, 0, 326, 531, 0,
	532, 327, 0, 328, 329, 330, 331, 332, 533, 534,
	535, 386, 0, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 0, 339, 340, 342, 0, 0, 341,
	536, 537, 0, 538, 0, 343, 0, 539, 0, 344,
	345, 346, 0, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 354, 353, 0, 355, 540, 0, 356,
	357, 0, 0, 358, 359, 360, 0, 0, 361, 362,
	363, 364, 0, 365, 366, 368, 370, 367, 369, 374,
	371, 372, 373, 376, 0, 375, 0, 377, 378, 379,
	382, 383, 381, 0, 380, 0, 0, 0, 384, 0,
	541, 385, 542, 387, 388, 0, 0, 389, 0, 0,
	0, 391, 392, 393, 0, 0, 394, 395, 543, 0,
	396, 0, 544, 397, 398, 390, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 545, 546, 547,
	409, 548, 410, 411, 0, 412, 0, 413, 414, 415,
	416, 417, 418, 419, 549, 421, 420, 422, 0, 0,
	0, 0, 0, 0, 423, 0, 425, 426, 427, 424,
	428, 429, 430, 431, 0, 432, 433, 434, 0, 435,
	436, 437, 438, 550, 439, 0, 440, 441, 447, 448,
	442, 443, 449, 450, 451, 452, 453, 0, 455, 456,
	454, 457, 458, 459, 0, 460, 444, 445, 461, 462,
	0, 463, 464, 551, 0, 465, 0, 466, 467, 468,
	469, 446, 470, 475, 552, 471, 472, 473, 474, 553,
	0, 477, 478, 0, 476, 0, 479, 480, 481, 482,
	483, 484, 311, 485, 0, 486, 554, 555, 556, 557,
	0, 493, 0, 487, 488, 558, 489, 559, 0, 490,
	491, 492, 0, 494, 495, 0, 0, 496, 497, 498,
	500, 501, 499, 502, 0, 503, 0, 0, 504, 505,
	506, 560, 561, 562, 0, 508, 507, 563, 616, 0,
	237, 0, 509, 510, 564, 511, 512, 513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 514, 0, 0, 0, 0, 251, 252, 1116, 253,
	255, 256, 257, 515, 516, 0, 517, 258, 518, 0,
	259, 260, 261, 262, 263, 0, 0, 0, 264, 519,
	520, 1114, 0, 265, 266, 522, 0, 0, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 288, 0, 289, 523, 524, 0, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 298, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 525, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 526, 527, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 528, 0, 0, 0, 320,
	0, 321, 0, 0, 0, 322, 323, 529, 530, 324,
	325, 0, 326, 531, 0, 532, 327, 0, 328, 329,
	330, 331, 332, 533, 534, 535, 386, 0, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 0, 339,
	340, 342, 0, 0, 341, 536, 537, 0, 538, 0,
	343, 0, 539, 0, 344, 345, 346, 0, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 354, 353,
	0, 355, 540, 0, 356, 357, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 363, 364, 0, 365, 366,
	368, 370, 367, 369, 374, 371, 372, 373, 376, 0,
	617, 0, 377, 378, 379, 382, 383, 381, 0, 380,
	0, 0, 0, 384, 0, 541, 385, 542, 387, 388,
	0, 0, 389, 0, 0, 0, 391, 392, 393, 0,
	0, 394, 395, 543, 0, 396, 0, 544, 397, 398,
	390, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 545, 546, 547, 409, 548, 410, 411, 0,
	412, 0, 413, 414, 415, 416, 417, 418, 419, 549,
	421, 420, 422, 0, 0, 0, 0, 0, 0, 423,
	0, 425, 426, 427, 424, 428, 429, 430, 431, 0,
	432, 433, 434, 0, 435, 436, 437, 438, 550, 439,
	0, 440, 441, 447, 448, 442, 443, 613, 450, 451,
	452, 453, 0, 455, 456, 454, 457, 1117, 459, 0,
	460, 444, 445, 461, 462, 0, 463, 464, 551, 0,
	465, 0, 466, 467, 468, 469, 446, 470, 475, 552,
	471, 472, 473, 474, 553, 0, 477, 478, 0, 476,
	0, 479, 480, 481, 482, 483, 484, 311, 485, 0,
	486, 612, 555, 556, 557, 0, 493, 0, 487, 488,
	558, 489, 559, 0, 490, 491, 492, 0, 494, 495,
	0, 0, 496, 497, 498, 500, 501, 499, 502, 0,
	503, 0, 0, 504, 505, 506, 560, 561, 562, 0,
	508, 507, 563, 616, 0, 237, 0, 509, 510, 564,
	511, 512, 513, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 514, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 515, 516,
	0, 517, 258, 518, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 519, 520, 521, 0, 265, 606,
	522, 0, 0, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 288, 0,
	289, 523, 524, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 525, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 526, 527,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	528, 0, 0, 0, 320, 0, 321, 0, 0, 0,
	322, 323, 529, 530, 324, 325, 0, 326, 531, 0,
	532, 327, 0, 328, 329, 330, 331, 332, 533, 534,
	535, 386, 0, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 0, 339, 340, 342, 0, 0, 341,
	536, 537, 0, 538, 0, 343, 0, 539, 0, 344,
	345, 346, 0, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 354, 353, 0, 355, 540, 0, 356,
	357, 0, 0, 358, 359, 360, 0, 0, 361, 362,
	363, 364, 0, 365, 366, 368, 370, 367, 369, 374,
	371, 372, 373, 376, 0, 617, 0, 377, 378, 379,
	382, 383, 381, 0, 380, 0, 0, 0, 384, 0,
	541, 385, 542, 387, 388, 0, 0, 389, 0, 0,
	0, 391, 392, 393, 0, 0, 394, 395, 543, 0,
	396, 0, 544, 397, 398, 390, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 545, 546, 547,
	409, 548, 410, 411, 0, 412, 0, 413, 414, 415,
	416, 417, 418, 419, 549, 421, 420, 422, 0, 0,
	0, 0, 0, 0, 423, 0, 425, 426, 427, 424,
	428, 429, 430, 431, 0, 432, 433, 434, 0, 435,
	436, 437, 438, 550, 439, 0, 440, 441, 447, 448,
	442, 443, 613, 450, 451, 452, 453, 0, 455, 456,
	454, 457, 1422, 459, 0, 460, 444, 445, 461, 462,
	0, 463, 464, 551, 0, 465, 0, 466, 467, 468,
	469, 446, 470, 475, 552, 471, 472, 473, 474, 553,
	0, 477, 478, 0, 476, 0, 479, 480, 481, 482,
	483, 484, 311, 485, 0, 486, 612, 555, 556, 557,
	0, 493, 0, 487, 488, 558, 489, 559, 0, 490,
	491, 492, 0, 494, 495, 0, 0, 496, 497, 498,
	500, 501, 499, 502, 0, 503, 0, 0, 504, 505,
	506, 560, 561, 562, 0, 508, 507, 563, 1403, 0,
	237, 0, 509, 510, 564, 511, 512, 513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 514, 0, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 515, 516, 0, 517, 258, 518, 0,
	259, 260, 261, 262, 263, 0, 0, 0, 264, 519,
	520, 521, 0, 265, 266, 522, 0, 0, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 288, 0, 289, 523, 524, 0, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 298, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 525, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 526, 527, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 528, 0, 0, 0, 320,
	0, 321, 0, 0, 0, 322, 323, 529, 530, 324,
	325, 0, 326, 531, 0, 532, 327, 0, 328, 329,
	330, 331, 332, 1402, 534, 535, 386, 0, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 0, 339,
	340, 342, 0, 0, 341, 536, 537, 0, 538, 0,
	343, 0, 539, 0, 344, 345, 346, 0, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 354, 353,
	0, 355, 540, 0, 356, 357, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 363, 364, 0, 365, 366,
	368, 370, 367, 369, 374, 371, 372, 373, 376, 0,
	375, 0, 377, 378, 379, 382, 383, 381, 0, 380,
	0, 0, 0, 384, 0, 541, 385, 542, 387, 388,
	0, 0, 389, 0, 0, 0, 391, 392, 393, 0,
	0, 394, 395, 543, 0, 396, 0, 544, 397, 398,
	390, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 545, 546, 547, 409, 548, 410, 411, 0,
	412, 0, 413, 414, 415, 416, 417, 418, 419, 549,
	421, 420, 422, 0, 0, 0, 0, 0, 0, 423,
	0, 425, 426, 427, 424, 428, 429, 430, 431, 0,
	432, 433, 434, 0, 435, 436, 437, 438, 550, 439,
	0, 440, 441, 447, 448, 442, 443, 449, 450, 451,
	452, 453, 0, 455, 456, 454, 457, 458, 459, 0,
	460, 444, 445, 461, 462, 0, 463, 464, 551, 0,
	465, 0, 466, 467, 468, 469, 446, 470, 475, 552,
	471, 472, 473, 474, 553, 0, 477, 478, 0, 476,
	0, 479, 480, 481, 482, 483, 484, 311, 485, 0,
	486, 554, 555, 556, 557, 0, 493, 0, 487, 488,
	558, 489, 559, 0, 490, 491, 492, 0, 494, 495,
	0, 0, 496, 497, 498, 500, 501, 499, 502, 0,
	503, 0, 0, 504, 505, 506, 560, 561, 562, 0,
	508, 507, 563, 1396, 0, 237, 0, 509, 510, 564,
	511, 512, 513, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 514, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 515, 516,
	0, 517, 258, 518, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 519, 520, 521, 0, 265, 266,
	522, 0, 0, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 288, 0,
	289, 523, 524, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 525, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 526, 527,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	528, 0, 0, 0, 320, 0, 321, 0, 0, 0,
	322, 323, 529, 530, 324, 325, 0, 326, 531, 0,
	532, 327, 0, 328, 329, 330, 331, 332, 1395, 534,
	535, 386, 0, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 0, 339, 340, 342, 0, 0, 341,
	536, 537, 0, 538, 0, 343, 0, 539, 0, 344,
	345, 346, 0, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 354, 353, 0, 355, 540, 0, 356,
	357, 0, 0, 358, 359, 360, 0, 0, 361, 362,
	363, 364, 0, 365, 366, 368, 370, 367, 369, 374,
	371, 372, 373, 376, 0, 375, 0, 377, 378, 379,
	382, 383, 381, 0, 380, 0, 0, 0, 384, 0,
	541, 385, 542, 387, 388, 0, 0, 389, 0, 0,
	0, 391, 392, 393, 0, 0, 394, 395, 543, 0,
	396, 0, 544, 397, 398, 390, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 545, 546, 547,
	409, 548, 410, 411, 0, 412, 0, 413, 414, 415,
	416, 417, 418, 419, 549, 421, 420, 422, 0, 0,
	0, 0, 0, 0, 423, 0, 425, 426, 427, 424,
	428, 429, 430, 431, 0, 432, 433, 434, 0, 435,
	436, 437, 438, 550, 439, 0, 440, 441, 447, 448,
	442, 443, 449, 450, 451, 452, 453, 0, 455, 456,
	454, 457, 458, 459, 0, 460, 444, 445, 461, 462,
	0, 463, 464, 551, 0, 465, 0, 466, 467, 468,
	469, 446, 470, 475, 552, 471, 472, 473, 474, 553,
	0, 477, 478, 0, 476, 0, 479, 480, 481, 482,
	483, 484, 311, 485, 0, 486, 554, 555, 556, 557,
	0, 493, 0, 487, 488, 558, 489, 559, 0, 490,
	491, 492, 0, 494, 495, 0, 0, 496, 497, 498,
	500, 501, 499, 502, 0, 503, 0, 0, 504, 505,
	506, 560, 561, 562, 0, 508, 507, 563, 1346, 0,
	237, 0, 509, 510, 564, 511, 512, 513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 514, 0, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 515, 516, 0, 517, 258, 518, 0,
	259, 260, 261, 262, 263, 0, 0, 0, 264, 519,
	520, 521, 0, 265, 266, 522, 0, 0, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 288, 0, 289, 523, 524, 0, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 298, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 525, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 526, 527, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 528, 0, 0, 0, 320,
	0, 321, 0, 0, 0, 322, 323, 529, 530, 324,
	325, 0, 326, 531, 0, 532, 327, 0, 328, 329,
	330, 331, 332, 1345, 534, 535, 386, 0, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 0, 339,
	340, 342, 0, 0, 341, 536, 537, 0, 538, 0,
	343, 0, 539, 0, 344, 345, 346, 0, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 354, 353,
	0, 355, 540, 0, 356, 357, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 363, 364, 0, 365, 366,
	368, 370, 367, 369, 374, 371, 372, 373, 376, 0,
	375, 0, 377, 378, 379, 382, 383, 381, 0, 380,
	0, 0, 0, 384, 0, 541, 385, 542, 387, 388,
	0, 0, 389, 0, 0, 0, 391, 392, 393, 0,
	0, 394, 395, 543, 0, 396, 0, 544, 397, 398,
	390, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 545, 546, 547, 409, 548, 410, 411, 0,
	412, 0, 413, 414, 415, 416, 417, 418, 419, 549,
	421, 420, 422, 0, 0, 0, 0, 0, 0, 423,
	0, 425, 426, 427, 424, 428, 429, 430, 431, 0,
	432, 433, 434, 0, 435, 436, 437, 438, 550, 439,
	0, 440, 441, 447, 448, 442, 443, 449, 450, 451,
	452, 453, 0, 455, 456, 454, 457, 458, 459, 0,
	460, 444, 445, 461, 462, 0, 463, 464, 551, 0,
	465, 0, 466, 467, 468, 469, 446, 470, 475, 552,
	471, 472, 473, 474, 553, 0, 477, 478, 0, 476,
	0, 479, 480, 481, 482, 483, 484, 311, 485, 0,
	486, 554, 555, 556, 557, 0, 493, 0, 487, 488,
	558, 489, 559, 0, 490, 491, 492, 0, 494, 495,
	0, 0, 496, 497, 498, 500, 501, 499, 502, 0,
	503, 0, 0, 504, 505, 506, 560, 561, 562, 0,
	508, 507, 563, 1332, 0, 237, 0, 509, 510, 564,
	511, 512, 513, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 514, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 515, 516,
	0, 517, 258, 518, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 519, 520, 521, 0, 265, 266,
	522, 0, 0, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 288, 0,
	289, 523, 524, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 525, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 526, 527,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	528, 0, 0, 0, 320, 0, 321, 0, 0, 0,
	322, 323, 529, 530, 324, 325, 0, 326, 531, 0,
	532, 327, 0, 328, 329, 330, 331, 332, 1331, 534,
	535, 386, 0, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 0, 339, 340, 342, 0, 0, 341,
	536, 537, 0, 538, 0, 343, 0, 539, 0, 344,
	345, 346, 0, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 354, 353, 0, 355, 540, 0, 356,
	357, 0, 0, 358, 359, 360, 0, 0, 361, 362,
	363, 364, 0, 365, 366, 368, 370, 367, 369, 374,
	371, 372, 373, 376, 0, 375, 0, 377, 378, 379,
	382, 383, 381, 0, 380, 0, 0, 0, 384, 0,
	541, 385, 542, 387, 388, 0, 0, 389, 0, 0,
	0, 391, 392, 393, 0, 0, 394, 395, 543, 0,
	396, 0, 544, 397, 398, 390, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 545, 546, 547,
	409, 548, 410, 411, 0, 412, 0, 413, 414, 415,
	416, 417, 418, 419, 549, 421, 420, 422, 0, 0,
	0, 0, 0, 0, 423, 0, 425, 426, 427, 424,
	428, 429, 430, 431, 0, 432, 433, 434, 0, 435,
	436, 437, 438, 550, 439, 0, 440, 441, 447, 448,
	442, 443, 449, 450, 451, 452, 453, 0, 455, 456,
	454, 457, 458, 459, 0, 460, 444, 445, 461, 462,
	0, 463, 464, 551, 0, 465, 0, 466, 467, 468,
	469, 446, 470, 475, 552, 471, 472, 473, 474, 553,
	0, 477, 478, 0, 476, 0, 479, 480, 481, 482,
	483, 484, 311, 485, 0, 486, 554, 555, 556, 557,
	0, 493, 0, 487, 488, 558, 489, 559, 0, 490,
	491, 492, 0, 494, 495, 0, 0, 496, 497, 498,
	500, 501, 499, 502, 0, 503, 0, 0, 504, 505,
	506, 560, 561, 562, 0, 508, 507, 563, 1327, 0,
	237, 0, 509, 510, 564, 511, 512, 513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 514, 0, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 515, 516, 0, 517, 258, 518, 0,
	259, 260, 261, 262, 263, 0, 0, 0, 264, 519,
	520, 521, 0, 265, 266, 522, 0, 0, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 288, 0, 289, 523, 524, 0, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 298, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 525, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 526, 527, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 528, 0, 0, 0, 320,
	0, 321, 0, 0, 0, 322, 323, 529, 530, 324,
	325, 0, 326, 531, 0, 532, 327, 0, 328, 329,
	330, 331, 332, 533, 534, 535, 386, 0, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 0, 339,
	340, 342, 0, 0, 341, 536, 537, 0, 538, 0,
	343, 0, 539, 0, 344, 345, 346, 0, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 354, 353,
	0, 355, 540, 0, 356, 357, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 363, 364, 0, 365, 366,
	368, 370, 367, 369, 374, 371, 372, 373, 376, 0,
	375, 0, 377, 378, 379, 382, 383, 381, 0, 380,
	0, 0, 0, 384, 0, 541, 385, 542, 387, 388,
	0, 0, 389, 0, 0, 0, 391, 392, 393, 0,
	0, 394, 395, 543, 0, 396, 0, 544, 397, 398,
	390, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 545, 546, 547, 409, 548, 410, 411, 0,
	412, 0, 413, 414, 415, 416, 417, 418, 419, 549,
	421, 420, 422, 0, 0, 0, 0, 0, 0, 423,
	0, 425, 426, 427, 424, 428, 429, 430, 431, 0,
	432, 433, 434, 0, 435, 436, 437, 438, 550, 439,
	0, 440, 441, 447, 448, 442, 443, 449, 450, 451,
	452, 453, 0, 455, 456, 454, 457, 458, 459, 0,
	460, 444, 445, 461, 462, 0, 463, 464, 551, 0,
	465, 0, 466, 467, 468, 469, 446, 470, 475, 552,
	471, 472, 473, 474, 553, 0, 477, 478, 0, 476,
	0, 479, 480, 481, 482, 483, 484, 311, 485, 0,
	486, 554, 555, 556, 557, 0, 493, 0, 487, 488,
	558, 489, 559, 0, 490, 491, 492, 0, 494, 495,
	0, 0, 496, 497, 498, 500, 501, 499, 502, 0,
	503, 0, 0, 504, 505, 506, 560, 561, 562, 0,
	508, 507, 563, 1260, 0, 237, 0, 509, 510, 564,
	511, 512, 513, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 514, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 515, 516,
	0, 517, 258, 518, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 519, 520, 521, 0, 265, 266,
	522, 0, 0, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 288, 0,
	289, 523, 524, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 525, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 526, 527,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	528, 0, 0, 0, 320, 0, 321, 0, 0, 0,
	322, 323, 529, 530, 324, 325, 0, 326, 531, 0,
	532, 327, 0, 328, 329, 330, 331, 332, 533, 534,
	535, 386, 0, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 0, 339, 340, 342, 0, 0, 341,
	536, 537, 0, 538, 0, 343, 0, 539, 0, 344,
	345, 346, 0, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 354, 353, 0, 355, 540, 0, 356,
	357, 0, 0, 358, 359, 360, 0, 0, 361, 362,
	363, 364, 0, 365, 366, 368, 370, 367, 369, 374,
	371, 372, 373, 376, 0, 375, 0, 377, 378, 379,
	382, 383, 381, 0, 380, 0, 0, 0, 384, 0,
	541, 385, 542, 387, 388, 0, 0, 389, 0, 0,
	0, 391, 392, 393, 0, 0, 394, 395, 543, 0,
	396, 0, 544, 397, 398, 390, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 545, 546, 547,
	409, 548, 410, 411, 0, 412, 0, 413, 414, 415,
	416, 417, 418, 419, 549, 421, 420, 422, 0, 0,
	0, 0, 0, 0, 423, 0, 425, 426, 427, 424,
	428, 429, 430, 431, 0, 432, 433, 434, 0, 435,
	436, 437, 438, 550, 439, 0, 440, 441, 447, 448,
	442, 443, 449, 450, 451, 452, 453, 0, 455, 456,
	454, 457, 458, 459, 0, 460, 444, 445, 461, 462,
	0, 463, 464, 551, 0, 465, 0, 466, 467, 468,
	469, 446, 470, 475, 552, 471, 472, 473, 474, 553,
	0, 477, 478, 0, 476, 0, 479, 480, 481, 482,
	483, 484, 311, 485, 0, 486, 554, 555, 556, 557,
	0, 493, 0, 487, 488, 558, 489, 559, 0, 490,
	491, 492, 0, 494, 495, 0, 0, 496, 497, 498,
	500, 501, 499, 502, 0, 503, 0, 0, 504, 505,
	506, 560, 561, 562, 0, 508, 507, 563, 1244, 0,
	237, 0, 509, 510, 564, 511, 512, 513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 514, 0, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 515, 516, 0, 517, 258, 518, 0,
	259, 260, 261, 262, 263, 0, 0, 0, 264, 519,
	520, 521, 0, 265, 266, 522, 0, 0, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 288, 0, 289, 523, 524, 0, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 298, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 525, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 526, 527, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 528, 0, 0, 0, 320,
	0, 321, 0, 0, 0, 322, 323, 529, 530, 324,
	325, 0, 326, 531, 0, 532, 327, 0, 328, 329,
	330, 331, 332, 533, 534, 535, 386, 0, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 0, 339,
	340, 342, 0, 0, 341, 536, 537, 0, 538, 0,
	343, 0, 539, 0, 344, 345, 346, 0, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 354, 353,
	0, 355, 540, 0, 356, 357, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 363, 364, 0, 365, 366,
	368, 370, 367, 369, 374, 371, 372, 373, 376, 0,
	375, 0, 377, 378, 379, 382, 383, 381, 0, 380,
	0, 0, 0, 384, 0, 541, 385, 542, 387, 388,
	0, 0, 389, 0, 0, 0, 391, 392, 393, 0,
	0, 394, 395, 543, 0, 396, 0, 544, 397, 398,
	390, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 545, 546, 547, 409, 548, 410, 411, 0,
	412, 0, 413, 414, 415, 416, 417, 418, 419, 549,
	421, 420, 422, 0, 0, 0, 0, 0, 0, 423,
	0, 425, 426, 427, 424, 428, 429, 430, 431, 0,
	432, 433, 434, 0, 435, 436, 437, 438, 550, 439,
	0, 440, 441, 447, 448, 442, 443, 449, 450, 451,
	452, 453, 0, 455, 456, 454, 457, 458, 459, 0,
	460, 444, 445, 461, 462, 0, 463, 464, 551, 0,
	465, 0, 466, 467, 468, 469, 446, 470, 475, 552,
	471, 472, 473, 474, 553, 0, 477, 478, 0, 476,
	0, 479, 480, 481, 482, 483, 484, 311, 485, 0,
	486, 554, 555, 556, 557, 0, 493, 0, 487, 488,
	558, 489, 559, 0, 490, 491, 492, 0, 494, 495,
	0, 0, 496, 497, 498, 500, 501, 499, 502, 0,
	503, 0, 0, 504, 505, 506, 560, 561, 562, 0,
	508, 507, 563, 616, 0, 237, 0, 509, 510, 564,
	511, 512, 513, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 514, 0, 0, 0,
	0, 251, 252, 1116, 253, 255, 256, 257, 515, 516,
	0, 517, 258, 518, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 519, 520, 1114, 0, 265, 266,
	522, 0, 0, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 288, 0,
	289, 523, 524, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 525, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 526, 527,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	528, 0, 0, 0, 320, 0, 321, 0, 0, 0,
	322, 323, 529, 530, 324, 325, 0, 326, 531, 0,
	532, 327, 0, 328, 329, 330, 331, 332, 533, 534,
	535, 386, 0, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 0, 339, 340, 342, 0, 0, 341,
	536, 537, 0, 538, 0, 343, 0, 539, 0, 344,
	345, 346, 0, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 354, 353, 0, 355, 540, 0, 356,
	357, 0, 0, 358, 359, 360, 0, 0, 361, 362,
	363, 364, 0, 365, 366, 368, 370, 367, 369, 374,
	371, 372, 373, 376, 0, 617, 0, 377, 378, 379,
	382, 383, 381, 0, 380, 0, 0, 0, 384, 0,
	541, 385, 542, 387, 388, 0, 0, 389, 0, 0,
	0, 391, 392, 393, 0, 0, 394, 395, 543, 0,
	396, 0, 544, 397, 398, 390, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 545, 546, 547,
	409, 548, 410, 411, 0, 412, 0, 413, 414, 415,
	416, 417, 418, 419, 549, 421, 420, 422, 0, 0,
	0, 0, 0, 0, 423, 0, 425, 426, 427, 424,
	428, 429, 430, 431, 0, 432, 433, 434, 0, 435,
	436, 437, 438, 550, 439, 0, 440, 441, 447, 448,
	442, 443, 613, 450, 451, 452, 453, 0, 455, 456,
	454, 457, 1117, 459, 0, 460, 444, 445, 461, 462,
	0, 463, 464, 551, 0, 465, 0, 466, 467, 468,
	469, 446, 470, 475, 552, 471, 472, 473, 474, 553,
	0, 477, 478, 0, 476, 0, 479, 480, 481, 482,
	483, 484, 311, 485, 0, 486, 612, 555, 556, 557,
	0, 493, 0, 487, 1115, 558, 489, 559, 0, 490,
	491, 492, 0, 494, 495, 0, 0, 496, 497, 498,
	500, 501, 499, 502, 0, 503, 0, 0, 504, 505,
	506, 560, 561, 562, 237, 508, 507, 563, 0, 0,
	0, 0, 509, 510, 564, 511, 512, 513, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 1098, 249, 250,
	0, 0, 0, 0, 0, 514, 0, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 515, 516, 0,
	517, 258, 518, 0, 259, 260, 261, 262, 263, 0,
	0, 0, 264, 519, 520, 521, 0, 265, 266, 522,
	0, 0, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 0, 0, 285, 286, 287, 288, 0, 289,
	523, 524, 0, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 298, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 525, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 526, 527, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 528,
	0, 0, 0, 320, 0, 321, 0, 0, 0, 322,
	323, 529, 530, 324, 325, 0, 326, 531, 0, 532,
	327, 0, 328, 329, 330, 331, 332, 533, 534, 535,
	386, 0, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 0, 339, 340, 342, 0, 0, 341, 536,
	537, 0, 538, 0, 343, 0, 539, 0, 344, 345,
	346, 0, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 354, 353, 0, 355, 540, 0, 356, 357,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 363,
	364, 0, 365, 366, 368, 370, 367, 369, 374, 371,
	372, 373, 376, 0, 375, 0, 377, 378, 379, 382,
	383, 381, 0, 380, 0, 0, 0, 384, 0, 541,
	385, 542, 387, 388, 0, 0, 389, 0, 0, 0,
	391, 392, 393, 0, 0, 394, 395, 543, 0, 396,
	0, 544, 397, 398, 390, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 545, 546, 547, 409,
	548, 410, 411, 0, 412, 0, 413, 414, 415, 416,
	417, 418, 419, 549, 421, 420, 422, 0, 0, 0,
	0, 0, 0, 423, 0, 425, 426, 427, 424, 428,
	429, 430, 431, 0, 432, 433, 434, 0, 435, 436,
	437, 438, 550, 439, 0, 440, 441, 447, 448, 442,
	443, 449, 450, 451, 452, 453, 0, 455, 456, 454,
	457, 458, 459, 0, 460, 444, 445, 461, 462, 0,
	463, 464, 551, 0, 465, 0, 466, 467, 468, 469,
	446, 470, 475, 552, 471, 472, 473, 474, 553, 0,
	477, 478, 0, 476, 0, 479, 480, 481, 482, 483,
	484, 311, 485, 0, 486, 554, 555, 556, 557, 0,
	493, 0, 487, 488, 558, 489, 559, 0, 490, 491,
	492, 0, 494, 495, 0, 0, 496, 497, 498, 500,
	501, 499, 502, 0, 503, 0, 0, 504, 505, 506,
	560, 561, 562, 237, 508, 507, 563, 0, 0, 0,
	0, 509, 510, 564, 511, 512, 513, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 622, 249, 250, 0,
	0, 0, 0, 0, 514, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 515, 516, 0, 517,
	258, 518, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 519, 520, 521, 0, 265, 266, 522, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 523,
	524, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 525, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 526, 527, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 528, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	529, 530, 324, 325, 0, 326, 531, 0, 532, 327,
	0, 328, 329, 330, 331, 332, 533, 534, 535, 386,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 536, 537,
	0, 538, 0, 343, 0, 539, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 354, 353, 0, 355, 540, 0, 356, 357, 0,
	0, 358, 359, 360, 0, 0, 361, 362, 363, 364,
	0, 365, 366, 368, 370, 367, 369, 374, 371, 372,
	373, 376, 0, 375, 0, 377, 378, 379, 382, 383,
	381, 0, 380, 0, 0, 0, 384, 0, 541, 385,
	542, 387, 388, 0, 0, 389, 0, 0, 0, 391,
	392, 393, 0, 0, 394, 395, 543, 0, 396, 0,
	544, 397, 398, 390, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 545, 546, 547, 409, 548,
	410, 411, 0, 412, 0, 413, 414, 415, 416, 417,
	418, 419, 549, 421, 420, 422, 0, 0, 0, 0,
	0, 0, 423, 0, 425, 426, 427, 424, 428, 429,
	430, 431, 0, 432, 433, 434, 0, 435, 436, 437,
	438, 550, 439, 0, 440, 441, 447, 448, 442, 443,
	449, 450, 451, 452, 453, 0, 455, 456, 454, 457,
	458, 459, 0, 460, 444, 445, 461, 462, 0, 463,
	464, 551, 0, 465, 0, 466, 467, 468, 469, 446,
	470, 475, 552, 471, 472, 473, 474, 553, 0, 477,
	478, 0, 476, 0, 479, 480, 481, 482, 483, 484,
	311, 485, 0, 486, 554, 555, 556, 557, 0, 493,
	0, 487, 488, 558, 489, 559, 0, 490, 491, 492,
	0, 494, 495, 0, 0, 496, 497, 498, 500, 501,
	499, 502, 0, 503, 0, 0, 504, 505, 506, 560,
	561, 562, 0, 508, 507, 563, 616, 0, 237, 0,
	509, 510, 564, 511, 512, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 514,
	0, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 515, 516, 0, 517, 258, 518, 0, 259, 260,
	261, 262, 263, 0, 0, 0, 264, 519, 520, 521,
	0, 265, 606, 522, 0, 0, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 604, 0, 279, 280, 281, 0, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	287, 288, 0, 289, 523, 524, 0, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 298,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	525, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 526, 527, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 528, 0, 0, 0, 320, 0, 321,
	0, 0, 0, 322, 323, 529, 530, 324, 325, 0,
	326, 531, 0, 532, 327, 0, 328, 329, 330, 331,
	332, 533, 534, 535, 386, 0, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 0, 339, 340, 342,
	0, 0, 341, 536, 537, 0, 538, 0, 343, 0,
	539, 0, 344, 345, 346, 0, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 354, 353, 0, 355,
	540, 0, 356, 357, 0, 0, 358, 359, 605, 0,
	0, 361, 362, 363, 364, 0, 365, 366, 368, 370,
	367, 369, 374, 371, 372, 373, 376, 0, 617, 0,
	377, 378, 379, 382, 383, 381, 0, 380, 0, 0,
	0, 384, 0, 541, 385, 542, 387, 388, 0, 0,
	389, 0, 0, 0, 391, 392, 393, 0, 0, 394,
	395, 543, 0, 396, 0, 544, 397, 398, 390, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	545, 546, 547, 409, 548, 410, 411, 0, 412, 0,
	413, 414, 415, 416, 417, 418, 419, 549, 421, 420,
	422, 0, 0, 0, 0, 0, 0, 423, 0, 425,
	426, 427, 424, 428, 429, 430, 431, 0, 432, 433,
	434, 0, 435, 436, 437, 438, 607, 439, 0, 440,
	441, 447, 448, 442, 443, 613, 450, 451, 452, 453,
	0, 455, 456, 454, 457, 608, 459, 0, 460, 444,
	445, 461, 462, 0, 463, 464, 551, 0, 465, 0,
	466, 467, 468, 469, 446, 470, 475, 552, 471, 472,
	473, 474, 553, 0, 477, 478, 0, 476, 0, 479,
	480, 481, 482, 483, 484, 311, 485, 0, 486, 612,
	555, 556, 557, 0, 493, 0, 487, 610, 558, 489,
	559, 0, 490, 491, 492, 0, 494, 495, 0, 0,
	496, 497, 498, 500, 501, 499, 502, 0, 503, 0,
	0, 504, 505, 506, 560, 561, 562, 0, 508, 507,
	563, 600, 0, 237, 0, 509, 510, 564, 511, 512,
	513, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 514, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 515, 516, 0, 517,
	258, 518, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 519, 520, 521, 0, 265, 266, 522, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 523,
	524, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 525, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 526, 527, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 528, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	529, 530, 324, 325, 0, 326, 531, 0, 532, 327,
	0, 328, 329, 330, 331, 332, 533, 534, 535, 386,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 536, 537,
	0, 538, 0, 343, 0, 539, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 354, 353, 0, 355, 540, 0, 356, 357, 0,
	0, 358, 359, 360, 0, 0, 361, 362, 363, 364,
	0, 365, 366, 368, 370, 367, 369, 374, 371, 372,
	373, 376, 0, 375, 0, 377, 378, 379, 382, 383,
	381, 0, 380, 0, 0, 0, 384, 0, 541, 385,
	542, 387, 388, 0, 0, 389, 0, 0, 0, 391,
	392, 393, 0, 0, 394, 395, 543, 0, 396, 0,
	544, 397, 398, 390, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 545, 546, 547, 409, 548,
	410, 411, 0, 412, 0, 413, 414, 415, 416, 417,
	418, 419, 549, 421, 420, 422, 0, 0, 0, 0,
	0, 0, 423, 0, 425, 426, 427, 424, 428, 429,
	430, 431, 0, 432, 433, 434, 0, 435, 436, 437,
	438, 550, 439, 0, 440, 441, 601, 448, 442, 443,
	449, 450, 451, 452, 453, 0, 455, 456, 454, 457,
	458, 459, 0, 460, 444, 445, 461, 462, 0, 463,
	464, 551, 0, 465, 0, 466, 467, 468, 469, 446,
	470, 475, 552, 471, 472, 473, 474, 553, 0, 477,
	478, 0, 476, 0, 479, 480, 481, 482, 483, 484,
	311, 485, 0, 486, 554, 555, 556, 557, 0, 493,
	0, 487, 488, 558, 489, 559, 0, 490, 491, 492,
	0, 494, 495, 0, 0, 496, 497, 498, 500, 501,
	499, 502, 0, 503, 0, 0, 504, 505, 506, 560,
	561, 562, 0, 508, 507, 563, 598, 0, 237, 0,
	509, 510, 564, 511, 512, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 514,
	0, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 515, 516, 0, 517, 258, 518, 0, 259, 260,
	261, 262, 263, 0, 0, 0, 264, 519, 520, 521,
	0, 265, 266, 522, 0, 0, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	287, 288, 0, 289, 523, 524, 0, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 298,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	525, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 526, 527, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 528, 0, 0, 0, 320, 0, 321,
	0, 0, 0, 322, 323, 529, 530, 324, 325, 0,
	326, 531, 0, 532, 327, 0, 328, 329, 330, 331,
	332, 533, 534, 535, 386, 0, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 0, 339, 340, 342,
	0, 0, 341, 536, 537, 0, 538, 0, 343, 0,
	539, 0, 344, 345, 346, 0, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 354, 353, 0, 355,
	540, 0, 356, 357, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 363, 364, 0, 365, 366, 368, 370,
	367, 369, 374, 371, 372, 373, 376, 0, 375, 0,
	377, 378, 379, 382, 383, 381, 0, 380, 0, 0,
	0, 384, 0, 541, 385, 542, 387, 388, 0, 0,
	389, 0, 0, 0, 391, 392, 393, 0, 0, 394,
	395, 543, 0, 396, 0, 544, 397, 398, 390, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	545, 546, 547, 409, 548, 410, 411, 0, 412, 0,
	413, 414, 415, 416, 417, 418, 419, 549, 421, 420,
	422, 0, 0, 0, 0, 0, 0, 423, 0, 425,
	426, 427, 424, 428, 429, 430, 431, 0, 432, 433,
	434, 0, 435, 436, 437, 438, 550, 439, 0, 440,
	441, 447, 448, 442, 443, 449, 450, 451, 452, 453,
	0, 455, 456, 454, 457, 458, 459, 0, 460, 444,
	445, 461, 462, 0, 463, 464, 551, 0, 465, 0,
	466, 467, 468, 469, 446, 470, 475, 552, 471, 472,
	473, 474, 553, 0, 477, 478, 0, 476, 0, 479,
	480, 481, 482, 483, 484, 311, 485, 0, 486, 554,
	555, 556, 557, 0, 493, 0, 487, 488, 558, 489,
	559, 0, 490, 491, 492, 0, 494, 495, 0, 0,
	496, 497, 498, 500, 501, 499, 502, 0, 503, 0,
	0, 504, 505, 506, 560, 561, 562, 0, 508, 507,
	563, 592, 0, 237, 0, 509, 510, 564, 511, 512,
	513, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 514, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 515, 516, 0, 517,
	258, 518, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 519, 520, 521, 0, 265, 266, 522, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 523,
	524, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 525, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 526, 527, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 528, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	529, 530, 324, 325, 0, 326, 531, 0, 532, 327,
	0, 328, 329, 330, 331, 332, 533, 534, 535, 386,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 536, 537,
	0, 538, 0, 343, 0, 539, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 354, 353, 0, 355, 540, 0, 356, 357, 0,
	0, 358, 359, 360, 0, 0, 361, 362, 363, 364,
	0, 365, 366, 368, 370, 367, 369, 374, 371, 372,
	373, 376, 0, 375, 0, 377, 378, 379, 382, 383,
	381, 0, 380, 0, 0, 0, 384, 0, 541, 385,
	542, 387, 388, 0, 0, 389, 0, 0, 0, 391,
	392, 393, 0, 0, 394, 395, 543, 0, 396, 0,
	544, 397, 398, 390, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 545, 546, 547, 409, 548,
	410, 411, 0, 412, 0, 413, 414, 415, 416, 417,
	418, 419, 549, 421, 420, 422, 0, 0, 0, 0,
	0, 0, 423, 0, 425, 426, 427, 424, 428, 429,
	430, 431, 0, 432, 433, 434, 0, 435, 436, 437,
	438, 550, 439, 0, 440, 441, 447, 448, 442, 443,
	449, 450, 451, 452, 453, 0, 455, 456, 454, 457,
	458, 459, 0, 460, 444, 445, 461, 462, 0, 463,
	464, 551, 0, 465, 0, 466, 467, 468, 469, 446,
	470, 475, 552, 471, 472, 473, 474, 553, 0, 477,
	478, 0, 476, 0, 479, 480, 481, 482, 483, 484,
	311, 485, 0, 486, 554, 555, 556, 557, 0, 493,
	0, 487, 488, 558, 489, 559, 0, 490, 491, 492,
	0, 494, 495, 0, 0, 496, 497, 498, 500, 501,
	499, 502, 0, 503, 0, 0, 504, 505, 506, 560,
	561, 562, 0, 508, 507, 563, 570, 0, 237, 0,
	509, 510, 564, 511, 512, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 514,
	0, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 515, 516, 0, 517, 258, 518, 0, 259, 260,
	261, 262, 263, 0, 0, 0, 264, 519, 520, 521,
	0, 265, 266, 522, 0, 0, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	287, 288, 0, 289, 523, 524, 0, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 298,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	525, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 526, 527, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 528, 0, 0, 0, 320, 0, 321,
	0, 0, 0, 322, 323, 529, 530, 324, 325, 0,
	326, 531, 0, 532, 327, 0, 328, 329, 330, 331,
	332, 533, 534, 535, 386, 0, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 0, 339, 340, 342,
	0, 0, 341, 536, 537, 0, 538, 0, 343, 0,
	539, 0, 344, 345, 346, 0, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 354, 353, 0, 355,
	540, 0, 356, 357, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 363, 364, 0, 365, 366, 368, 370,
	367, 369, 374, 371, 372, 373, 376, 0, 375, 0,
	377, 378, 379, 382, 383, 381, 0, 380, 0, 0,
	0, 384, 0, 541, 385, 542, 387, 388, 0, 0,
	389, 0, 0, 0, 391, 392, 393, 0, 0, 394,
	395, 543, 0, 396, 0, 544, 397, 398, 390, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	545, 546, 547, 409, 548, 410, 411, 0, 412, 0,
	413, 414, 415, 416, 417, 418, 419, 549, 421, 420,
	422, 0, 0, 0, 0, 0, 0, 423, 0, 425,
	426, 427, 424, 428, 429, 430, 431, 0, 432, 433,
	434, 0, 435, 436, 437, 438, 550, 439, 0, 440,
	441, 447, 448, 442, 443, 449, 450, 451, 452, 453,
	0, 455, 456, 454, 457, 458, 459, 0, 460, 444,
	445, 461, 462, 0, 463, 464, 551, 0, 465, 0,
	466, 467, 468, 469, 446, 470, 475, 552, 471, 472,
	473, 474, 553, 0, 477, 478, 0, 476, 0, 479,
	480, 481, 482, 483, 484, 311, 485, 0, 486, 554,
	555, 556, 557, 0, 493, 0, 487, 488, 558, 489,
	559, 0, 490, 491, 492, 0, 494, 495, 0, 0,
	496, 497, 498, 500, 501, 499, 502, 0, 503, 0,
	0, 504, 505, 506, 560, 561, 562, 237, 508, 507,
	563, 0, 0, 0, 0, 509, 510, 564, 511, 512,
	513, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 514, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	515, 516, 0, 517, 258, 518, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 519, 520, 521, 0,
	265, 266, 522, 0, 0, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 523, 524, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 525,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	526, 527, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 528, 0, 0, 0, 320, 0, 321, 0,
	0, 0, 322, 323, 529, 530, 324, 325, 0, 326,
	531, 0, 532, 327, 0, 328, 329, 330, 331, 332,
	533, 534, 535, 386, 0, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 0, 339, 340, 342, 0,
	0, 341, 536, 537, 0, 538, 0, 343, 0, 539,
	0, 344, 345, 346, 0, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 354, 353, 0, 355, 540,
	0, 356, 357, 0, 0, 358, 359, 360, 0, 0,
	361, 362, 363, 364, 0, 365, 366, 368, 370, 367,
	369, 374, 371, 372, 373, 376, 0, 375, 0, 377,
	378, 379, 382, 383, 381, 0, 380, 0, 0, 0,
	384, 0, 541, 385, 542, 387, 388, 0, 0, 389,
	0, 0, 0, 391, 392, 393, 0, 0, 394, 395,
	543, 0, 396, 0, 544, 397, 398, 390, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 545,
	546, 547, 409, 548, 410, 411, 0, 412, 0, 413,
	414, 415, 416, 417, 418, 419, 549, 421, 420, 422,
	0, 0, 0, 0, 0, 0, 423, 0, 425, 426,
	427, 424, 428, 429, 430, 431, 0, 432, 433, 434,
	0, 435, 436, 437, 438, 550, 439, 0, 440, 441,
	447, 448, 442, 443, 449, 450, 451, 452, 453, 0,
	455, 456, 454, 457, 458, 459, 0, 460, 444, 445,
	461, 462, 0, 463, 464, 551, 0, 465, 0, 466,
	467, 468, 469, 446, 470, 475, 552, 471, 472, 473,
	474, 553, 0, 477, 478, 0, 476, 0, 479, 480,
	481, 482, 483, 484, 311, 485, 0, 486, 554, 555,
	556, 557, 0, 493, 0, 487, 488, 558, 489, 559,
	0, 490, 491, 492, 0, 494, 495, 0, 0, 496,
	497, 498, 500, 501, 499, 502, 0, 503, 0, 0,
	504, 505, 506, 560, 561, 562, 237, 508, 507, 563,
	0, 0, 0, 0, 509, 510, 564, 511, 512, 513,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 514, 0, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 515,
	516, 0, 517, 258, 518, 0, 259, 260, 261, 262,
	263, 0, 0, 0, 264, 519, 520, 521, 0, 265,
	266, 522, 0, 0, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 0, 0, 285, 286, 287, 288,
	0, 289, 523, 524, 0, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 298, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 525, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 526,
	527, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 528, 0, 0, 0, 320, 0, 321, 0, 0,
	0, 322, 323, 529, 530, 324, 325, 0, 326, 531,
	0, 532, 327, 0, 328, 329, 330, 331, 332, 3042,
	534, 535, 386, 0, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 0, 339, 340, 342, 0, 0,
	341, 536, 537, 0, 538, 0, 343, 0, 539, 0,
	344, 345, 346, 0, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 354, 353, 0, 355, 540, 0,
	356, 357, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 363, 364, 0, 365, 366, 368, 370, 367, 369,
	374, 371, 372, 373, 376, 0, 375, 0, 377, 378,
	379, 382, 383, 381, 0, 380, 0, 0, 0, 384,
	0, 541, 385, 542, 387, 388, 0, 0, 389, 0,
	0, 0, 391, 392, 393, 0, 0, 394, 395, 543,
	0, 396, 0, 544, 397, 398, 390, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 545, 546,
	547, 409, 548, 410, 411, 0, 412, 0, 413, 414,
	415, 416, 417, 418, 419, 549, 421, 420, 422, 0,
	0, 0, 0, 0, 0, 423, 0, 425, 426, 427,
	424, 428, 429, 430, 431, 0, 432, 433, 434, 0,
	435, 436, 437, 438, 550, 439, 0, 440, 441, 447,
	448, 442, 443, 449, 450, 451, 452, 453, 0, 455,
	456, 454, 457, 458, 459, 0, 460, 444, 445, 461,
	462, 0, 463, 464, 551, 0, 465, 0, 466, 467,
	468, 469, 446, 470, 475, 552, 471, 472, 473, 474,
	553, 0, 477, 478, 0, 476, 0, 479, 480, 481,
	482, 483, 484, 311, 485, 0, 486, 554, 555, 556,
	557, 0, 493, 0, 487, 488, 558, 489, 559, 0,
	490, 491, 492, 0, 494, 495, 0, 0, 496, 497,
	498, 500, 501, 499, 502, 0, 503, 0, 0, 504,
	505, 506, 560, 561, 562, 237, 508, 507, 563, 0,
	0, 0, 0, 509, 510, 564, 511, 512, 513, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 514, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 515, 516,
	0, 517, 258, 518, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 519, 520, 521, 0, 265, 266,
	522, 0, 0, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 288, 0,
	289, 523, 524, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 525, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 526, 527,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	528, 0, 0, 0, 320, 0, 321, 0, 0, 0,
	322, 323, 529, 530, 324, 325, 0, 326, 531, 0,
	532, 327, 0, 328, 329, 330, 331, 332, 3001, 534,
	535, 386, 0, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 0, 339, 340, 342, 0, 0, 341,
	536, 537, 0, 538, 0, 343, 0, 539, 0, 344,
	345, 346, 0, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 354, 353, 0, 355, 540, 0, 356,
	357, 0, 0, 358, 359, 360, 0, 0, 361, 362,
	363, 364, 0, 365, 366, 368, 370, 367, 369, 374,
	371, 372, 373, 376, 0, 375, 0, 377, 378, 379,
	382, 383, 381, 0, 380, 0, 0, 0, 384, 0,
	541, 385, 542, 387, 388, 0, 0, 389, 0, 0,
	0, 391, 392, 393, 0, 0, 394, 395, 543, 0,
	396, 0, 544, 397, 398, 390, 399, 400, 401, 402,
	403, 404, 405, 406, 0, 407, 408, 545, 546, 547,
	409, 548, 410, 411, 0, 412, 0, 413, 414, 415,
	416, 417, 418, 419, 549, 421, 420, 422, 0, 0,
	0, 0, 0, 0, 423, 0, 425, 426, 427, 424,
	428, 429, 430, 431, 0, 432, 433, 434, 0, 435,
	436, 437, 438, 550, 439, 0, 440, 441, 447, 448,
	442, 443, 449, 450, 451, 452, 453, 0, 455, 456,
	454, 457, 458, 459, 0, 460, 444, 445, 461, 462,
	0, 463, 464, 551, 0, 465, 0, 466, 467, 468,
	469, 446, 470, 475, 552, 471, 472, 473, 474, 553,
	0, 477, 478, 0, 476, 0, 479, 480, 481, 482,
	483, 484, 311, 485, 0, 486, 554, 555, 556, 557,
	0, 493, 0, 487, 488, 558, 489, 559, 0, 490,
	491, 492, 0, 494, 495, 0, 0, 496, 497, 498,
	500, 501, 499, 502, 0, 503, 0, 0, 504, 505,
	506, 560, 561, 562, 237, 508, 507, 563, 0, 0,
	0, 0, 509, 510, 564, 511, 512, 513, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 249, 250,
	0, 0, 0, 0, 0, 514, 0, 0, 0, 0,
	251, 252, 254, 253, 255, 256, 257, 515, 516, 0,
	517, 258, 518, 0, 259, 260, 261, 262, 263, 0,
	0, 0, 264, 519, 520, 521, 0, 265, 266, 522,
	0, 0, 0, 267, 268, 269, 270, 271, 272, 273,
	0, 0, 275, 276, 277, 274, 0, 278, 0, 279,
	280, 281, 0, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 0, 0, 285, 286, 287, 288, 0, 289,
	523, 524, 0, 293, 290, 291, 0, 294, 292, 0,
	295, 296, 0, 0, 297, 298, 299, 0, 300, 301,
	0, 302, 303, 0, 304, 305, 525, 306, 307, 308,
	310, 312, 309, 313, 314, 315, 316, 526, 527, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 528,
	0, 0, 0, 320, 0, 321, 0, 0, 0, 322,
	323, 529, 530, 324, 325, 0, 326, 531, 0, 532,
	327, 0, 328, 329, 330, 331, 332, 2942, 534, 535,
	386, 0, 333, 334, 0, 335, 336, 337, 338, 0,
	0, 0, 0, 339, 340, 342, 0, 0, 341, 536,
	537, 0, 538, 0, 343, 0, 539, 0, 344, 345,
	346, 0, 347, 0, 0, 0, 348, 349, 350, 351,
	352, 0, 354, 353, 0, 355, 540, 0, 356, 357,
	0, 0, 358, 359, 360, 0, 0, 361, 362, 363,
	364, 0, 365, 366, 368, 370, 367, 369, 374, 371,
	372, 373, 376, 0, 375, 0, 377, 378, 379, 382,
	383, 381, 0, 380, 0, 0, 0, 384, 0, 541,
	385, 542, 387, 388, 0, 0, 389, 0, 0, 0,
	391, 392, 393, 0, 0, 394, 395, 543, 0, 396,
	0, 544, 397, 398, 390, 399, 400, 401, 402, 403,
	404, 405, 406, 0, 407, 408, 545, 546, 547, 409,
	548, 410, 411, 0, 412, 0, 413, 414, 415, 416,
	417, 418, 419, 549, 421, 420, 422, 0, 0, 0,
	0, 0, 0, 423, 0, 425, 426, 427, 424, 428,
	429, 430, 431, 0, 432, 433, 434, 0, 435, 436,
	437, 438, 550, 439, 0, 440, 441, 447, 448, 442,
	443, 449, 450, 451, 452, 453, 0, 455, 456, 454,
	457, 458, 459, 0, 460, 444, 445, 461, 462, 0,
	463, 464, 551, 0, 465, 0, 466, 467, 468, 469,
	446, 470, 475, 552, 471, 472, 473, 474, 553, 0,
	477, 478, 0, 476, 0, 479, 480, 481, 482, 483,
	484, 311, 485, 0, 486, 554, 555, 556, 557, 0,
	493, 0, 487, 488, 558, 489, 559, 0, 490, 491,
	492, 0, 494, 495, 0, 0, 496, 497, 498, 500,
	501, 499, 502, 0, 503, 0, 0, 504, 505, 506,
	560, 561, 562, 237, 508, 507, 563, 0, 0, 0,
	0, 509, 510, 564, 511, 512, 513, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 249, 250, 0,
	0, 0, 0, 0, 514, 0, 0, 0, 0, 251,
	252, 254, 253, 255, 256, 257, 515, 516, 0, 517,
	258, 518, 0, 259, 260, 261, 262, 263, 0, 0,
	0, 264, 519, 520, 521, 0, 265, 266, 522, 0,
	0, 0, 267, 268, 269, 270, 271, 272, 273, 0,
	0, 275, 276, 277, 274, 0, 278, 0, 279, 280,
	281, 0, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 287, 288, 0, 289, 523,
	524, 0, 293, 290, 291, 0, 294, 292, 0, 295,
	296, 0, 0, 297, 298, 299, 0, 300, 301, 0,
	302, 303, 0, 304, 305, 525, 306, 307, 308, 310,
	312, 309, 313, 314, 315, 316, 526, 527, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 528, 0,
	0, 0, 320, 0, 321, 0, 0, 0, 322, 323,
	529, 530, 324, 325, 0, 326, 531, 0, 532, 327,
	0, 328, 329, 330, 331, 332, 2940, 534, 535, 386,
	0, 333, 334, 0, 335, 336, 337, 338, 0, 0,
	0, 0, 339, 340, 342, 0, 0, 341, 536, 537,
	0, 538, 0, 343, 0, 539, 0, 344, 345, 346,
	0, 347, 0, 0, 0, 348, 349, 350, 351, 352,
	0, 354, 353, 0, 355, 540, 0, 356, 357, 0,
	0, 358, 359, 360, 0, 0, 361, 362, 363, 364,
	0, 365, 366, 368, 370, 367, 369, 374, 371, 372,
	373, 376, 0, 375, 0, 377, 378, 379, 382, 383,
	381, 0, 380, 0, 0, 0, 384, 0, 541, 385,
	542, 387, 388, 0, 0, 389, 0, 0, 0, 391,
	392, 393, 0, 0, 394, 395, 543, 0, 396, 0,
	544, 397, 398, 390, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 407, 408, 545, 546, 547, 409, 548,
	410, 411, 0, 412, 0, 413, 414, 415, 416, 417,
	418, 419, 549, 421, 420, 422, 0, 0, 0, 0,
	0, 0, 423, 0, 425, 426, 427, 424, 428, 429,
	430, 431, 0, 432, 433, 434, 0, 435, 436, 437,
	438, 550, 439, 0, 440, 441, 447, 448, 442, 443,
	449, 450, 451, 452, 453, 0, 455, 456, 454, 457,
	458, 459, 0, 460, 444, 445, 461, 462, 0, 463,
	464, 551, 0, 465, 0, 466, 467, 468, 469, 446,
	470, 475, 552, 471, 472, 473, 474, 553, 0, 477,
	478, 0, 476, 0, 479, 480, 481, 482, 483, 484,
	311, 485, 0, 486, 554, 555, 556, 557, 0, 493,
	0, 487, 488, 558, 489, 559, 0, 490, 491, 492,
	0, 494, 495, 0, 0, 496, 497, 498, 500, 501,
	499, 502, 0, 503, 0, 0, 504, 505, 506, 560,
	561, 562, 237, 508, 507, 563, 0, 0, 0, 0,
	509, 510, 564, 511, 512, 513, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 249, 250, 0, 0,
	0, 0, 0, 514, 0, 0, 0, 0, 251, 252,
	254, 253, 255, 256, 257, 515, 516, 0, 517, 258,
	518, 0, 259, 260, 261, 262, 263, 0, 0, 0,
	264, 519, 520, 521, 0, 265, 266, 522, 0, 0,
	0, 267, 268, 269, 270, 271, 272, 273, 0, 0,
	275, 276, 277, 274, 0, 278, 0, 279, 280, 281,
	0, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	0, 0, 285, 286, 287, 288, 0, 289, 523, 524,
	0, 293, 290, 291, 0, 294, 292, 0, 295, 296,
	0, 0, 297, 298, 299, 0, 300, 301, 0, 302,
	303, 0, 304, 305, 525, 306, 307, 308, 310, 312,
	309, 313, 314, 315, 316, 526, 527, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 528, 0, 0,
	0, 320, 0, 321, 0, 0, 0, 322, 323, 529,
	530, 324, 325, 0, 326, 531, 0, 532, 327, 0,
	328, 329, 330, 331, 332, 2926, 534, 535, 386, 0,
	333, 334, 0, 335, 336, 337, 338, 0, 0, 0,
	0, 339, 340, 342, 0, 0, 341, 536, 537, 0,
	538, 0, 343, 0, 539, 0, 344, 345, 346, 0,
	347, 0, 0, 0, 348, 349, 350, 351, 352, 0,
	354, 353, 0, 355, 540, 0, 356, 357, 0, 0,
	358, 359, 360, 0, 0, 361, 362, 363, 364, 0,
	365, 366, 368, 370, 367, 369, 374, 371, 372, 373,
	376, 0, 375, 0, 377, 378, 379, 382, 383, 381,
	0, 380, 0, 0, 0, 384, 0, 541, 385, 542,
	387, 388, 0, 0, 389, 0, 0, 0, 391, 392,
	393, 0, 0, 394, 395, 543, 0, 396, 0, 544,
	397, 398, 390, 399, 400, 401, 402, 403, 404, 405,
	406, 0, 407, 408, 545, 546, 547, 409, 548, 410,
	411, 0, 412, 0, 413, 414, 415, 416, 417, 418,
	419, 549, 421, 420, 422, 0, 0, 0, 0, 0,
	0, 423, 0, 425, 426, 427, 424, 428, 429, 430,
	431, 0, 432, 433, 434, 0, 435, 436, 437, 438,
	550, 439, 0, 440, 441, 447, 448, 442, 443, 449,
	450, 451, 452, 453, 0, 455, 456, 454, 457, 458,
	459, 0, 460, 444, 445, 461, 462, 0, 463, 464,
	551, 0, 465, 0, 466, 467, 468, 469, 446, 470,
	475, 552, 471, 472, 473, 474, 553, 0, 477, 478,
	0, 476, 0, 479, 480, 481, 482, 483, 484, 311,
	485, 0, 486, 554, 555, 556, 557, 0, 493, 0,
	487, 488, 558, 489, 559, 0, 490, 491, 492, 0,
	494, 495, 0, 0, 496, 497, 498, 500, 501, 499,
	502, 0, 503, 0, 0, 504, 505, 506, 560, 561,
	562, 237, 508, 507, 563, 0, 0, 0, 0, 509,
	510, 564, 511, 512, 513, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 249, 250, 0, 0, 0,
	0, 0, 514, 0, 0, 0, 0, 251, 252, 254,
	253, 255, 256, 257, 515, 516, 0, 517, 258, 518,
	0, 259, 260, 261, 262, 263, 0, 0, 0, 264,
	519, 520, 521, 0, 265, 266, 522, 0, 0, 0,
	267, 268, 269, 270, 271, 272, 273, 0, 0, 275,
	276, 277, 274, 0, 278, 0, 279, 280, 281, 0,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 0,
	0, 285, 286, 287, 288, 0, 289, 523, 524, 0,
	293, 290, 291, 0, 294, 292, 0, 295, 296, 0,
	0, 297, 298, 299, 0, 300, 301, 0, 302, 303,
	0, 304, 305, 525, 306, 307, 308, 310, 312, 309,
	313, 314, 315, 316, 526, 527, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 528, 0, 0, 0,
	320, 0, 321, 0, 0, 0, 322, 323, 529, 530,
	324, 325, 0, 326, 531, 0, 532, 327, 0, 328,
	329, 330, 331, 332, 2566, 534, 535, 386, 0, 333,
	334, 0, 335, 336, 337, 338, 0, 0, 0, 0,
	339, 340, 342, 0, 0, 341, 536, 537, 0, 538,
	0, 343, 0, 539, 0, 344, 345, 346, 0, 347,
	0, 0, 0, 348, 349, 350, 351, 352, 0, 354,
	353, 0, 355, 540, 0, 356, 357, 0, 0, 358,
	359, 360, 0, 0, 361, 362, 363, 364, 0, 365,
	366, 368, 370, 367, 369, 374, 371, 372, 373, 376,
	0, 375, 0, 377, 378, 379, 382, 383, 381, 0,
	380, 0, 0, 0, 384, 0, 541, 385, 542, 387,
	388, 0, 0, 389, 0, 0, 0, 391, 392, 393,
	0, 0, 394, 395, 543, 0, 396, 0, 544, 397,
	398, 390, 399, 400, 401, 402, 403, 404, 405, 406,
	0, 407, 408, 545, 546, 547, 409, 548, 410, 411,
	0, 412, 0, 413, 414, 415, 416, 417, 418, 419,
	549, 421, 420, 422, 0, 0, 0, 0, 0, 0,
	423, 0, 425, 426, 427, 424, 428, 429, 430, 431,
	0, 432, 433, 434, 0, 435, 436, 437, 438, 550,
	439, 0, 440, 441, 447, 448, 442, 443, 449, 450,
	451, 452, 453, 0, 455, 456, 454, 457, 458, 459,
	0, 460, 444, 445, 461, 462, 0, 463, 464, 551,
	0, 465, 0, 466, 467, 468, 469, 446, 470, 475,
	552, 471, 472, 473, 474, 553, 0, 477, 478, 0,
	476, 0, 479, 480, 481, 482, 483, 484, 311, 485,
	0, 486, 554, 555, 556, 557, 0, 493, 0, 487,
	488, 558, 489, 559, 0, 490, 491, 492, 0, 494,
	495, 0, 0, 496, 497, 498, 500, 501, 499, 502,
	0, 503, 0, 0, 504, 505, 506, 560, 561, 562,
	237, 508, 507, 563, 0, 0, 0, 0, 509, 510,
	564, 511, 512, 513, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 249, 250, 0, 0, 0, 0,
	0, 514, 0, 0, 0, 0, 251, 252, 254, 253,
	255, 256, 257, 515, 516, 0, 517, 258, 518, 0,
	259, 260, 261, 262, 263, 0, 0, 0, 264, 519,
	520, 521, 0, 265, 266, 522, 0, 0, 0, 267,
	268, 269, 270, 271, 272, 273, 0, 0, 275, 276,
	277, 274, 0, 278, 0, 279, 280, 281, 0, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 287, 288, 0, 289, 523, 524, 0, 293,
	290, 291, 0, 294, 292, 0, 295, 296, 0, 0,
	297, 298, 299, 0, 300, 301, 0, 302, 303, 0,
	304, 305, 525, 306, 307, 308, 310, 312, 309, 313,
	314, 315, 316, 526, 527, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 528, 0, 0, 0, 320,
	0, 321, 0, 0, 0, 322, 323, 529, 530, 324,
	325, 0, 326, 531, 0, 532, 327, 0, 328, 329,
	330, 331, 332, 533, 534, 535, 386, 0, 333, 334,
	0, 335, 336, 337, 338, 0, 0, 0, 0, 339,
	340, 342, 0, 0, 341, 536, 537, 0, 538, 0,
	343, 0, 539, 0, 344, 345, 346, 0, 347, 0,
	0, 0, 348, 349, 350, 351, 352, 0, 354, 353,
	0, 355, 540, 0, 356, 357, 0, 0, 358, 359,
	360, 0, 0, 361, 362, 363, 364, 0, 365, 366,
	368, 370, 367, 369, 374, 371, 372, 373, 376, 0,
	375, 0, 377, 378, 379, 382, 383, 381, 0, 380,
	0, 0, 0, 384, 0, 541, 385, 542, 387, 388,
	0, 0, 389, 0, 0, 0, 391, 392, 393, 0,
	0, 394, 395, 543, 0, 396, 0, 544, 397, 398,
	390, 399, 400, 401, 402, 403, 404, 405, 406, 0,
	407, 408, 545, 546, 547, 409, 548, 410, 411, 0,
	412, 0, 413, 414, 415, 416, 417, 418, 419, 549,
	421, 420, 422, 0, 0, 0, 0, 0, 0, 423,
	0, 425, 426, 427, 424, 428, 429, 430, 431, 0,
	432, 433, 434, 0, 435, 436, 437, 438, 550, 439,
	0, 440, 441, 601, 448, 442, 443, 449, 450, 451,
	452, 453, 0, 455, 456, 454, 457, 458, 459, 0,
	460, 444, 445, 461, 462, 0, 463, 464, 551, 0,
	465, 0, 466, 467, 468, 469, 446, 470, 475, 552,
	471, 472, 473, 474, 553, 0, 477, 478, 0, 476,
	0, 479, 480, 481, 482, 483, 484, 311, 485, 0,
	486, 554, 555, 556, 557, 0, 493, 0, 487, 488,
	558, 489, 559, 0, 490, 491, 492, 0, 494, 495,
	0, 0, 496, 497, 498, 500, 501, 499, 502, 0,
	503, 0, 0, 504, 505, 506, 560, 561, 562, 237,
	508, 507, 563, 0, 0, 0, 0, 509, 510, 564,
	511, 512, 513, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 249, 250, 0, 0, 0, 0, 0,
	514, 0, 1979, 0, 0, 251, 252, 254, 253, 255,
	256, 257, 515, 516, 0, 517, 258, 518, 0, 259,
	260, 261, 262, 263, 0, 0, 0, 264, 519, 520,
	521, 0, 265, 266, 522, 0, 0, 0, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 275, 276, 277,
	274, 0, 278, 0, 279, 280, 281, 0, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 287, 288, 0, 289, 523, 524, 0, 293, 290,
	291, 0, 294, 292, 0, 295, 296, 0, 0, 297,
	298, 299, 0, 300, 301, 0, 302, 303, 0, 304,
	305, 525, 306, 307, 308, 310, 312, 309, 313, 314,
	315, 316, 526, 527, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 528, 0, 0, 0, 320, 0,
	321, 0, 0, 0, 322, 323, 529, 530, 324, 325,
	0, 326, 531, 0, 532, 327, 0, 328, 329, 330,
	331, 332, 533, 534, 535, 386, 0, 333, 334, 0,
	335, 336, 337, 338, 0, 0, 0, 0, 339, 340,
	342, 0, 0, 341, 536, 537, 0, 538, 0, 343,
	0, 539, 0, 344, 345, 346, 0, 347, 0, 0,
	0, 348, 349, 350, 351, 352, 0, 354, 353, 0,
	355, 540, 0, 356, 357, 0, 0, 358, 359, 360,
	0, 0, 361, 362, 363, 364, 0, 365, 366, 368,
	370, 367, 369, 374, 371, 372, 373, 376, 0, 375,
	0, 377, 378, 379, 382, 383, 381, 0, 380, 0,
	0, 0, 384, 0, 541, 385, 542, 387, 388, 0,
	0, 389, 0, 0, 0, 391, 392, 393, 0, 0,
	394, 395, 543, 0, 396, 0, 544, 397, 398, 390,
	399, 400, 401, 402, 403, 404, 405, 406, 0, 407,
	408, 545, 546, 547, 409, 548, 410, 411, 0, 412,
	0, 413, 414, 415, 416, 417, 418, 419, 549, 421,
	420, 422, 0, 0, 0, 0, 0, 0, 423, 0,
	425, 426, 427, 424, 428, 429, 430, 431, 0, 432,
	433, 434, 0, 435, 436, 437, 438, 550, 439, 0,
	440, 441, 447, 448, 442, 443, 449, 450, 451, 452,
	453, 0, 455, 456, 454, 457, 458, 459, 0, 0,
	444, 445, 461, 462, 0, 463, 464, 551, 0, 465,
	0, 466, 467, 468, 469, 446, 470, 475, 552, 471,
	472, 473, 474, 553, 0, 477, 478, 0, 476, 0,
	479, 480, 481, 482, 483, 484, 311, 485, 0, 486,
	554, 555, 556, 557, 0, 493, 0, 487, 488, 558,
	489, 559, 0, 490, 491, 492, 0, 494, 495, 0,
	0, 496, 497, 498, 500, 501, 499, 502, 0, 503,
	0, 0, 504, 505, 506, 560, 561, 562, 237, 508,
	507, 563, 0, 0, 0, 0, 509, 510, 564, 511,
	512, 513, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 249, 250, 0, 0, 0, 0, 0, 514,
	0, 0, 0, 0, 251, 252, 254, 253, 255, 256,
	257, 515, 516, 0, 517, 258, 518, 0, 259, 260,
	261, 262, 263, 0, 0, 0, 264, 519, 520, 521,
	0, 265, 266, 522, 0, 0, 0, 267, 268, 269,
	270, 271, 272, 273, 0, 0, 275, 276, 277, 274,
	0, 278, 0, 279, 280, 281, 0, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 0, 0, 285, 286,
	287, 288, 0, 289, 523, 524, 0, 293, 290, 291,
	0, 294, 292, 0, 295, 296, 0, 0, 297, 298,
	299, 0, 300, 301, 0, 302, 303, 0, 304, 305,
	525, 306, 307, 308, 310, 312, 309, 313, 314, 315,
	316, 526, 527, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 528, 0, 0, 0, 320, 0, 321,
	0, 0, 0, 322, 323, 529, 530, 324, 325, 0,
	326, 531, 0, 532, 327, 0, 328, 329, 330, 331,
	332, 1368, 534, 535, 386, 0, 333, 334, 0, 335,
	336, 337, 338, 0, 0, 0, 0, 339, 340, 342,
	0, 0, 341, 536, 537, 0, 538, 0, 343, 0,
	539, 0, 344, 345, 346, 0, 347, 0, 0, 0,
	348, 349, 350, 351, 352, 0, 354, 353, 0, 355,
	540, 0, 356, 357, 0, 0, 358, 359, 360, 0,
	0, 361, 362, 363, 364, 0, 365, 366, 368, 370,
	367, 369, 374, 371, 372, 373, 376, 0, 375, 0,
	377, 378, 379, 382, 383, 381, 0, 380, 0, 0,
	0, 384, 0, 541, 385, 542, 387, 388, 0, 0,
	389, 0, 0, 0, 391, 392, 393, 0, 0, 394,
	395, 543, 0, 396, 0, 544, 397, 398, 390, 399,
	400, 401, 402, 403, 404, 405, 406, 0, 407, 408,
	545, 546, 547, 409, 548, 410, 411, 0, 412, 0,
	413, 414, 415, 416, 417, 418, 419, 549, 421, 420,
	422, 0, 0, 0, 0, 0, 0, 423, 0, 425,
	426, 427, 424, 428, 429, 430, 431, 0, 432, 433,
	434, 0, 435, 436, 437, 438, 550, 439, 0, 440,
	441, 447, 448, 442, 443, 449, 450, 451, 452, 453,
	0, 455, 456, 454, 457, 458, 459, 0, 460, 444,
	445, 461, 462, 0, 463, 464, 551, 0, 465, 0,
	466, 467, 468, 469, 446, 470, 475, 552, 471, 472,
	473, 474, 553, 0, 477, 478, 0, 476, 0, 479,
	480, 481, 482, 483, 484, 311, 485, 0, 486, 554,
	555, 556, 557, 0, 493, 0, 487, 488, 558, 489,
	559, 0, 490, 491, 492, 0, 494, 495, 0, 0,
	496, 497, 498, 500, 501, 499, 502, 0, 503, 0,
	0, 504, 505, 506, 560, 561, 562, 237, 508, 507,
	563, 0, 0, 0, 0, 509, 510, 564, 511, 512,
	513, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 249, 250, 0, 0, 0, 0, 0, 514, 0,
	0, 0, 0, 251, 252, 254, 253, 255, 256, 257,
	515, 516, 0, 517, 258, 518, 0, 259, 260, 261,
	262, 263, 0, 0, 0, 264, 519, 520, 521, 0,
	265, 266, 522, 0, 0, 0, 267, 268, 269, 270,
	271, 272, 273, 0, 0, 275, 276, 277, 274, 0,
	278, 0, 279, 280, 281, 0, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 0, 0, 285, 286, 287,
	288, 0, 289, 523, 524, 0, 293, 290, 291, 0,
	294, 292, 0, 295, 296, 0, 0, 297, 298, 299,
	0, 300, 301, 0, 302, 303, 0, 304, 305, 525,
	306, 307, 308, 310, 312, 309, 313, 314, 315, 316,
	526, 527, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 528, 0, 0, 0, 320, 0, 321, 0,
	0, 0, 322, 323, 529, 530, 324, 325, 0, 326,
	531, 0, 532, 327, 0, 328, 329, 330, 331, 332,
	1309, 534, 535, 386, 0, 333, 334, 0, 335, 336,
	337, 338, 0, 0, 0, 0, 339, 340, 342, 0,
	0, 341, 536, 537, 0, 538, 0, 343, 0, 539,
	0, 344, 345, 346, 0, 347, 0, 0, 0, 348,
	349, 350, 351, 352, 0, 354, 353, 0, 355, 540,
	0, 356, 357, 0, 0, 358, 359, 360, 0, 0,
	361, 362, 363, 364, 0, 365, 366, 368, 370, 367,
	369, 374, 371, 372, 373, 376, 0, 375, 0, 377,
	378, 379, 382, 383, 381, 0, 380, 0, 0, 0,
	384, 0, 541, 385, 542, 387, 388, 0, 0, 389,
	0, 0, 0, 391, 392, 393, 0, 0, 394, 395,
	543, 0, 396, 0, 544, 397, 398, 390, 399, 400,
	401, 402, 403, 404, 405, 406, 0, 407, 408, 545,
	546, 547, 409, 548, 410, 411, 0, 412, 0, 413,
	414, 415, 416, 417, 418, 419, 549, 421, 420, 422,
	0, 0, 0, 0, 0, 0, 423, 0, 425, 426,
	427, 424, 428, 429, 430, 431, 0, 432, 433, 434,
	0, 435, 436, 437, 438, 550, 439, 0, 440, 441,
	447, 448, 442, 443, 449, 450, 451, 452, 453, 0,
	455, 456, 454, 457, 458, 459, 0, 460, 444, 445,
	461, 462, 0, 463, 464, 551, 0, 465, 0, 466,
	467, 468, 469, 446, 470, 475, 552, 471, 472, 473,
	474, 553, 0, 477, 478, 0, 476, 0, 479, 480,
	481, 482, 483, 484, 311, 485, 0, 486, 554, 555,
	556, 557, 0, 493, 0, 487, 488, 558, 489, 559,
	0, 490, 491, 492, 0, 494, 495, 0, 0, 496,
	497, 498, 500, 501, 499, 502, 0, 503, 0, 0,
	504, 505, 506, 560, 561, 562, 237, 508, 507, 563,
	0, 0, 0, 0, 509, 510, 564, 511, 512, 513,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	249, 250, 0, 0, 0, 0, 0, 514, 0, 0,
	0, 0, 251, 252, 254, 253, 255, 256, 257, 515,
	516, 0, 517, 258, 518, 0, 259, 260, 261, 262,
	263, 0, 0, 0, 264, 519, 520, 521, 0, 265,
	266, 522, 0, 0, 0, 267, 268, 269, 270, 271,
	272, 273, 0, 0, 275, 276, 277, 274, 0, 278,
	0, 279, 280, 281, 0, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 0, 0, 285, 286, 287, 288,
	0, 289, 523, 524, 0, 293, 290, 291, 0, 294,
	292, 0, 295, 296, 0, 0, 297, 298, 299, 0,
	300, 301, 0, 302, 303, 0, 304, 305, 525, 306,
	307, 308, 310, 312, 309, 313, 314, 315, 316, 526,
	527, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 528, 0, 0, 0, 320, 0, 321, 0, 0,
	0, 322, 323, 529, 530, 324, 325, 0, 326, 531,
	0, 532, 327, 0, 328, 329, 330, 331, 332, 533,
	534, 535, 386, 0, 333, 334, 0, 335, 336, 337,
	338, 0, 0, 0, 0, 339, 340, 342, 0, 0,
	341, 536, 537, 0, 538, 0, 343, 0, 539, 0,
	344, 345, 346, 0, 347, 0, 0, 0, 348, 349,
	350, 351, 352, 0, 354, 353, 0, 355, 540, 0,
	356, 357, 0, 0, 358, 359, 360, 0, 0, 361,
	362, 363, 364, 0, 365, 366, 368, 370, 367, 369,
	374, 371, 372, 373, 376, 0, 375, 0, 377, 378,
	379, 382, 383, 381, 0, 380, 0, 0, 0, 384,
	0, 541, 385, 542, 387, 388, 0, 0, 389, 0,
	0, 0, 391, 392, 393, 0, 0, 394, 395, 543,
	0, 396, 0, 544, 397, 398, 390, 399, 400, 401,
	402, 403, 404, 405, 406, 0, 407, 408, 545, 546,
	547, 409, 548, 410, 411, 0, 412, 0, 413, 414,
	415, 416, 417, 418, 419, 549, 1050, 420, 422, 0,
	0, 0, 0, 0, 0, 423, 0, 425, 426, 427,
	424, 428, 429, 430, 431, 0, 432, 433, 434, 0,
	435, 436, 437, 438, 550, 439, 0, 440, 441, 447,
	448, 442, 443, 449, 450, 451, 452, 453, 0, 455,
	456, 454, 457, 458, 459, 0, 460, 444, 445, 461,
	462, 0, 463, 464, 551, 0, 465, 0, 466, 467,
	468, 469, 446, 470, 475, 552, 471, 472, 473, 474,
	553, 0, 477, 478, 0, 476, 0, 479, 480, 481,
	482, 483, 484, 311, 485, 0, 486, 554, 555, 556,
	557, 0, 493, 0, 487, 488, 558, 489, 559, 0,
	490, 491, 492, 0, 494, 495, 0, 0, 496, 497,
	498, 500, 501, 499, 502, 0, 503, 0, 0, 504,
	505, 506, 560, 561, 562, 237, 508, 507, 563, 0,
	0, 0, 0, 509, 510, 564, 511, 512, 513, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 249,
	250, 0, 0, 0, 0, 0, 514, 0, 0, 0,
	0, 251, 252, 254, 253, 255, 256, 257, 515, 516,
	0, 517, 258, 518, 0, 259, 260, 261, 262, 263,
	0, 0, 0, 264, 519, 520, 521, 0, 265, 266,
	522, 0, 0, 0, 267, 268, 269, 270, 271, 272,
	273, 0, 0, 275, 276, 277, 274, 0, 278, 0,
	279, 280, 281, 0, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 287, 288, 0,
	289, 523, 524, 0, 293, 290, 291, 0, 294, 292,
	0, 295, 296, 0, 0, 297, 298, 299, 0, 300,
	301, 0, 302, 303, 0, 304, 305, 525, 306, 307,
	308, 310, 312, 309, 313, 314, 315, 316, 526, 527,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	528, 0, 0, 0, 320, 0, 321, 0, 0, 0,
	322, 323, 529, 530, 324, 325, 0, 326, 531, 0,
	532, 0, 0, 328, 329, 330, 331, 332, 533, 534,
	535, 386, 0, 333, 334, 0, 335, 336, 337, 338,
	0, 0, 0, 0, 339, 340, 342, 0, 0, 341,
	536, 537, 0, 538, 0, 343, 0, 539, 0, 344,
	345, 346, 0, 347, 0, 0, 0, 348, 349, 350,
	351, 352, 0, 354, 353, 0, 355, 540, 0, 356,
	357, 0, 0, 358, 359, 360, 0, 0, 361, 362,
	363, 364, 0, 365, 366, 368, 370, 367, 369, 374,
	371, 372, 373, 376, 0, 375, 0, 377, 378, 379,
	382, 383, 381, 0, 380, 0, 0, 0, 384, 0,
	541, 385, 542, 387, 388, 0, 0, 389, 0, 0,
	0, 391, 392, 393, 0, 0, 394, 395, 543, 0,
	396, 0, 544, 397, 398, 390, 399, 400, 0, 402,
	403, 404, 405, 406, 0, 407, 408, 545, 546, 547,
	409, 548, 410, 411, 0, 412, 0, 413, 414, 415,
	416, 0, 418, 419, 549, 421, 420, 422, 0, 0,
	0, 0, 0, 0, 423, 0, 425, 426, 427, 424,
	428, 429, 430, 431, 0, 432, 433, 434, 0, 435,
	436, 437, 438, 550, 0, 0, 440, 441, 447, 448,
	442, 443, 449, 450, 451, 452, 453, 0, 455, 456,
	454, 457, 458, 459, 0, 460, 444, 445, 461, 462,
	0, 463, 464, 551, 0, 465, 0, 466, 467, 468,
	469, 446, 470, 475, 552, 471, 472, 473, 474, 553,
	0, 477, 478, 0, 476, 0, 479, 480, 481, 482,
	483, 484, 311, 485, 0, 486, 554, 555, 556, 557,
	0, 493, 0, 487, 488, 558, 489, 559, 0, 490,
	491, 492, 0, 494, 495, 0, 0, 496, 497, 498,
	500, 501, 499, 502, 0, 503, 0, 0, 504, 505,
	506, 560, 561, 562, 0, 508, 507, 563, 0, 0,
	0, 0, 509, 510, 564, 511, 512, 513, 1574, 1575,
	0, 1607, 1608, 1609, 1617, 1618, 1619, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1610,
	1605, 0, 0, 0, 0, 0, 0, 1577, 0, 0,
	0, 0, 0, 0, 1623, 0, 0, 0, 0, 0,
	0, 1574, 1575, 0, 1607, 1608, 1609, 1617, 1618, 1619,
	0, 0, 0, 0, 0, 0, 0, 1576, 0, 0,
	0, 0, 1610, 1605, 0, 0, 0, 1596, 0, 0,
	1577, 0, 0, 0, 0, 1593, 0, 1623, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1596, 0, 0, 0, 0, 0, 0, 0, 1593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1599,
	1600, 1601, 1602, 0, 0, 0, 0, 0, 0, 1582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1614, 0,
	0, 1624, 1599, 1600, 1601, 1602, 0, 1604, 1606, 0,
	0, 0, 1582, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1620, 0, 1621, 0, 0, 0, 0, 0,
	0, 1591, 1592, 0, 0, 0, 0, 0, 0, 0,
	0, 1614, 0, 0, 1624, 0, 0, 1612, 0, 0,
	1604, 1606, 0, 0, 0, 0, 0, 0, 1597, 0,
	0, 0, 0, 0, 0, 1620, 0, 1621, 0, 0,
	0, 0, 0, 0, 1591, 1592, 0, 0, 0, 0,
	0, 0, 0, 1622, 0, 0, 0, 0, 0, 0,
	1612, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1611, 1597, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1622, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1611, 0, 0, 0, 0, 0, 0,
	0, 1603, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1598, 0, 0, 0, 0, 0, 1574, 1575, 0,
	1607, 1608, 1609, 1617, 1618, 1619, 0, 0, 0, 0,
	0, 0, 0, 0, 1603, 0, 1615, 0, 1610, 1605,
	0, 0, 0, 0, 0, 0, 1577, 0, 0, 0,
	0, 0, 0, 1623, 1598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1576, 0, 0, 1615,
	0, 0, 0, 0, 0, 0, 1596, 0, 0, 0,
	0, 0, 0, 0, 1593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1613, 0, 0, 0, 1588, 1589,
	1595, 1616, 1594, 1590, 0, 1587, 1585, 1586, 1578, 1579,
	1580, 1581, 1583, 1584, 0, 0, 0, 0, 0, 0,
	0, 0, 2769, 0, 0, 0, 0, 0, 1599, 1600,
	1601, 1602, 0, 0, 0, 0, 0, 1613, 1582, 0,
	0, 1588, 1589, 1595, 1616, 1594, 1590, 0, 1587, 1585,
	1586, 1578, 1579, 1580, 1581, 1583, 1584, 0, 0, 0,
	0, 0, 0, 0, 0, 2221, 0, 1614, 0, 0,
	1624, 0, 0, 0, 0, 0, 1604, 1606, 0, 0,
	0, 1574, 1575, 0, 1607, 1608, 1609, 1617, 1618, 1619,
	0, 1620, 0, 1621, 0, 0, 0, 0, 0, 0,
	1591, 1592, 1610, 1605, 0, 0, 0, 0, 0, 0,
	1577, 0, 0, 0, 0, 0, 1612, 1623, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1596, 0, 1622, 0, 0, 0, 0, 0, 1593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1611,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1603, 0, 1599, 1600, 1601, 1602, 0, 0, 0, 0,
	0, 0, 1582, 0, 0, 0, 0, 0, 0, 0,
	1598, 0, 0, 0, 0, 0, 0, 1574, 1575, 0,
	1607, 1608, 1609, 1617, 1618, 1619, 0, 0, 0, 0,
	0, 1614, 0, 0, 1624, 1615, 0, 0, 1610, 1605,
	1604, 1606, 0, 0, 0, 0, 1577, 0, 0, 0,
	0, 0, 0, 1623, 0, 1620, 0, 1621, 0, 0,
	0, 0, 0, 0, 1591, 1592, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1576, 0, 0, 0,
	1612, 0, 0, 0, 0, 0, 1596, 0, 0, 0,
	0, 1597, 0, 0, 1593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1622, 0, 0, 0,
	0, 0, 0, 1613, 0, 0, 0, 1588, 1589, 1595,
	1616, 1594, 1590, 1611, 1587, 1585, 1586, 1578, 1579, 1580,
	1581, 1583, 1584, 0, 0, 0, 0, 3865, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1599, 1600,
	1601, 1602, 0, 0, 0, 0, 0, 0, 1582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1603, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1614, 0, 0,
	1624, 0, 0, 0, 1598, 0, 1604, 1606, 0, 0,
	0, 1574, 1575, 0, 1607, 1608, 1609, 1617, 1618, 1619,
	0, 1620, 0, 1621, 0, 0, 0, 0, 0, 1615,
	1591, 1592, 1610, 1605, 0, 0, 0, 0, 0, 0,
	1577, 0, 0, 0, 0, 0, 1612, 1623, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1596, 0, 1622, 0, 0, 0, 0, 0, 1593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1611,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1613, 0, 0,
	0, 1588, 1589, 1595, 1616, 1594, 1590, 0, 1587, 1585,
	1586, 1578, 1579, 1580, 1581, 1583, 1584, 0, 0, 0,
	0, 3774, 0, 0, 0, 0, 0, 0, 0, 0,
	1603, 0, 1599, 1600, 1601, 1602, 0, 0, 0, 0,
	0, 0, 1582, 0, 0, 0, 0, 0, 0, 0,
	1598, 0, 0, 0, 0, 0, 0, 1574, 1575, 0,
	1607, 1608, 1609, 1617, 1618, 1619, 0, 0, 0, 0,
	0, 1614, 0, 0, 1624, 1615, 0, 0, 1610, 1605,
	1604, 1606, 0, 0, 0, 0, 1577, 0, 0, 0,
	0, 0, 0, 1623, 0, 1620, 0, 1621, 0, 0,
	0, 0, 0, 0, 1591, 1592, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1576, 0, 0, 0,
	1612, 0, 0, 0, 0, 0, 1596, 0, 0, 0,
	0, 1597, 0, 0, 1593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1622, 0, 0, 0,
	0, 0, 0, 1613, 0, 0, 0, 1588, 1589, 1595,
	1616, 1594, 1590, 1611, 1587, 1585, 1586, 1578, 1579, 1580,
	1581, 1583, 1584, 0, 0, 0, 0, 3773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1599, 1600,
	1601, 1602, 0, 0, 0, 0, 0, 0, 1582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1603, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1614, 0, 0,
	1624, 0, 0, 0, 1598, 0, 1604, 1606, 0, 0,
	0, 1574, 1575, 0, 1607, 1608, 1609, 1617, 1618, 1619,
	0, 1620, 0, 1621, 0, 0, 0, 0, 0, 1615,
	1591, 1592, 1610, 1605, 0, 0, 0, 0, 0, 0,
	1577, 0, 0, 0, 0, 0, 1612, 1623, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1596, 0, 1622, 0, 0, 0, 0, 0, 1593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1611,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1613, 0, 0,
	0, 1588, 1589, 1595, 1616, 1594, 1590, 0, 1587, 1585,
	1586, 1578, 1579, 1580, 1581, 1583, 1584, 0, 0, 0,
	0, 3628, 0, 0, 0, 0, 0, 0, 0, 0,
	1603, 0, 1599, 1600, 1601, 1602, 0, 0, 0, 0,
	0, 0, 1582, 0, 0, 0, 0, 0, 0, 0,
	1598, 0, 0, 0, 0, 0, 0, 1574, 1575, 0,
	1607, 1608, 1609, 1617, 1618, 1619, 0, 0, 0, 0,
	0, 1614, 0, 0, 1624, 1615, 0, 0, 1610, 1605,
	1604, 1606, 0, 0, 0, 0, 1577, 0, 0, 0,
	0, 0, 0, 1623, 0, 1620, 0, 1621, 0, 0,
	0, 0, 0, 0, 1591, 1592, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1576, 0, 0, 0,
	1612, 0, 0, 0, 0, 0, 1596, 0, 0, 0,
	0, 1597, 0, 0, 1593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1622, 0, 0, 0,
	0, 0, 0, 1613, 0, 0, 0, 1588, 1589, 1595,
	1616, 1594, 1590, 1611, 1587, 1585, 1586, 1578, 1579, 1580,
	1581, 1583, 1584, 0, 0, 0, 0, 3499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1599, 1600,
	1601, 1602, 0, 0, 0, 0, 0, 0, 1582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1603, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1614, 0, 0,
	1624, 0, 0, 0, 1598, 0, 1604, 1606, 0, 0,
	0, 1574, 1575, 0, 1607, 1608, 1609, 1617, 1618, 1619,
	0, 1620, 0, 1621, 0, 0, 0, 0, 0, 1615,
	1591, 1592, 1610, 1605, 0, 0, 0, 0, 0, 0,
	1577, 0, 0, 0, 0, 0, 1612, 1623, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1596, 0, 1622, 0, 0, 0, 0, 0, 1593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1611,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1613, 0, 0,
	0, 1588, 1589, 1595, 1616, 1594, 1590, 0, 1587, 1585,
	1586, 1578, 1579, 1580, 1581, 1583, 1584, 0, 0, 0,
	0, 3445, 0, 0, 0, 0, 0, 0, 0, 0,
	1603, 0, 1599, 1600, 1601, 1602, 0, 0, 0, 0,
	0, 0, 1582, 0, 0, 0, 0, 0, 0, 0,
	1598, 0, 0, 0, 0, 0, 0, 1574, 1575, 0,
	1607, 1608, 1609, 1617, 1618, 1619, 0, 0, 0, 0,
	0, 1614, 0, 0, 1624, 1615, 0, 0, 1610, 1605,
	1604, 1606, 0, 0, 0, 0, 1577, 0, 0, 0,
	0, 0, 0, 1623, 0, 1620, 0, 1621, 0, 0,
	0, 0, 0, 0, 1591, 1592, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1576, 0, 0, 0,
	1612, 0, 0, 0, 0, 0, 1596, 0, 0, 0,
	0, 1597, 0, 0, 1593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1622, 0, 0, 0,
	0, 0, 0, 1613, 0, 0, 0, 1588, 1589, 1595,
	1616, 1594, 1590, 1611, 1587, 1585, 1586, 1578, 1579, 1580,
	1581, 1583, 1584, 0, 0, 0, 0, 3444, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1599, 1600,
	1601, 1602, 0, 0, 0, 0, 0, 0, 1582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1603, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1614, 0, 0,
	1624, 0, 0, 0, 1598, 0, 1604, 1606, 0, 0,
	0, 1574, 1575, 0, 1607, 1608, 1609, 1617, 1618, 1619,
	0, 1620, 0, 1621, 0, 0, 0, 0, 0, 1615,
	1591, 1592, 1610, 1605, 0, 0, 0, 0, 0, 0,
	1577, 0, 0, 0, 0, 0, 1612, 1623, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1596, 0, 1622, 0, 0, 0, 0, 0, 1593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1611,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1613, 0, 0,
	0, 1588, 1589, 1595, 1616, 1594, 1590, 0, 1587, 1585,
	1586, 1578, 1579, 1580, 1581, 1583, 1584, 0, 0, 0,
	0, 3443, 0, 0, 0, 0, 0, 0, 0, 0,
	1603, 0, 1599, 1600, 1601, 1602, 0, 0, 0, 0,
	0, 0, 1582, 0, 0, 0, 0, 0, 0, 0,
	1598, 0, 0, 0, 0, 0, 0, 1574, 1575, 0,
	1607, 1608, 1609, 1617, 1618, 1619, 0, 0, 0, 0,
	0, 1614, 0, 0, 1624, 1615, 0, 0, 1610, 1605,
	1604, 1606, 0, 0, 0, 0, 1577, 0, 0, 0,
	0, 0, 0, 1623, 0, 1620, 0, 1621, 0, 0,
	0, 0, 0, 0, 1591, 1592, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1576, 0, 0, 0,
	1612, 0, 0, 0, 0, 0, 1596, 0, 0, 0,
	0, 1597, 0, 0, 1593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1622, 0, 0, 0,
	0, 0, 0, 1613, 0, 0, 0, 1588, 1589, 1595,
	1616, 1594, 1590, 1611, 1587, 1585, 1586, 1578, 1579, 1580,
	1581, 1583, 1584, 0, 0, 0, 0, 3173, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1599, 1600,
	1601, 1602, 0, 0, 0, 0, 0, 0, 1582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1603, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1614, 0, 0,
	1624, 0, 0, 0, 1598, 0, 1604, 1606, 0, 0,
	0, 1574, 1575, 0, 1607, 1608, 1609, 1617, 1618, 1619,
	0, 1620, 0, 1621, 0, 0, 0, 0, 0, 1615,
	1591, 1592, 1610, 1605, 0, 0, 0, 0, 0, 0,
	1577, 0, 0, 0, 0, 0, 1612, 1623, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1596, 0, 1622, 0, 0, 0, 0, 0, 1593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1611,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1613, 0, 0,
	0, 1588, 1589, 1595, 1616, 1594, 1590, 0, 1587, 1585,
	1586, 1578, 1579, 1580, 1581, 1583, 1584, 0, 0, 0,
	0, 2767, 0, 0, 0, 0, 0, 0, 0, 0,
	1603, 0, 1599, 1600, 1601, 1602, 0, 0, 0, 0,
	0, 0, 1582, 0, 0, 0, 0, 0, 0, 0,
	1598, 0, 0, 0, 0, 0, 0, 1574, 1575, 0,
	1607, 1608, 1609, 1617, 1618, 1619, 0, 0, 0, 0,
	0, 1614, 0, 0, 1624, 1615, 0, 0, 1610, 1605,
	1604, 1606, 0, 0, 0, 0, 1577, 0, 0, 0,
	0, 0, 0, 1623, 0, 1620, 0, 1621, 0, 0,
	0, 0, 0, 0, 1591, 1592, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1576, 0, 0, 0,
	1612, 0, 0, 0, 0, 0, 1596, 0, 0, 0,
	0, 1597, 0, 0, 1593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1622, 0, 0, 0,
	0, 0, 0, 1613, 0, 0, 0, 1588, 1589, 1595,
	1616, 1594, 1590, 1611, 1587, 1585, 1586, 1578, 1579, 1580,
	1581, 1583, 1584, 0, 0, 0, 0, 2766, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1599, 1600,
	1601, 1602, 0, 0, 0, 0, 0, 0, 1582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1603, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1614, 0, 0,
	1624, 0, 0, 0, 1598, 0, 1604, 1606, 0, 0,
	0, 1574, 1575, 0, 1607, 1608, 1609, 1617, 1618, 1619,
	0, 1620, 0, 1621, 0, 0, 0, 0, 0, 1615,
	1591, 1592, 1610, 1605, 0, 0, 0, 0, 0, 0,
	1577, 0, 0, 0, 0, 0, 1612, 1623, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1596, 0, 1622, 0, 0, 0, 0, 0, 1593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1611,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1613, 0, 0,
	0, 1588, 1589, 1595, 1616, 1594, 1590, 0, 1587, 1585,
	1586, 1578, 1579, 1580, 1581, 1583, 1584, 0, 0, 0,
	0, 2765, 0, 0, 0, 0, 0, 0, 0, 0,
	1603, 0, 1599, 1600, 1601, 1602, 0, 0, 0, 0,
	0, 0, 1582, 0, 0, 0, 0, 0, 1574, 1575,
	1598, 1607, 1608, 1609, 1617, 1618, 1619, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1610,
	1605, 1614, 0, 0, 1624, 1615, 0, 1577, 0, 0,
	1604, 1606, 0, 0, 1623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1620, 0, 1621, 0, 0,
	0, 0, 0, 0, 1591, 1592, 0, 1576, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1596, 0, 0,
	1612, 0, 0, 0, 0, 1593, 0, 0, 0, 0,
	0, 1597, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1622, 0, 0, 0,
	0, 0, 0, 1613, 0, 0, 0, 1588, 1589, 1595,
	1616, 1594, 1590, 1611, 1587, 1585, 1586, 1578, 1579, 1580,
	1581, 1583, 1584, 0, 0, 0, 0, 2764, 0, 1599,
	1600, 1601, 1602, 0, 0, 0, 0, 0, 0, 1582,
	3991, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1603, 0, 0, 0, 1614, 0,
	0, 1624, 0, 0, 0, 0, 0, 1604, 1606, 0,
	0, 0, 0, 0, 1598, 0, 0, 0, 0, 0,
	0, 0, 1620, 0, 1621, 0, 0, 0, 0, 0,
	0, 1591, 1592, 0, 0, 0, 0, 0, 0, 1615,
	0, 0, 0, 0, 0, 0, 0, 1612, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1597, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1622, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1611, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3990, 1613, 0, 0,
	0, 1588, 1589, 1595, 1616, 1594, 1590, 0, 1587, 1585,
	1586, 1578, 1579, 1580, 1581, 1583, 1584, 0, 0, 2731,
	0, 1603, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1598, 1574, 1575, 0, 1607, 1608, 1609, 1617, 1618,
	1619, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1610, 1605, 0, 1615, 0, 0, 2702,
	0, 1577, 0, 0, 0, 0, 0, 0, 1623, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1576, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1596, 0, 0, 0, 0, 0, 0, 0, 1593,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2703, 0, 0, 0, 1613, 0, 0, 0, 1588, 1589,
	1595, 1616, 1594, 1590, 0, 1587, 1585, 1586, 1578, 1579,
	1580, 1581, 1583, 1584, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1599, 1600, 1601, 1602, 0, 0, 0,
	0, 0, 0, 1582, 0, 0, 0, 0, 1574, 1575,
	0, 1607, 1608, 1609, 1617, 1618, 1619, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1610,
	1605, 0, 1614, 0, 0, 1624, 0, 1577, 0, 0,
	0, 1604, 1606, 0, 1623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1620, 0, 1621, 0,
	0, 0, 0, 0, 0, 1591, 1592, 1576, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1596, 0, 0,
	0, 1612, 0, 0, 0, 1593, 0, 0, 0, 0,
	0, 0, 1597, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1622, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1611, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1599,
	1600, 1601, 1602, 0, 0, 0, 0, 0, 0, 1582,
	0, 2827, 0, 0, 2826, 1574, 1575, 0, 1607, 1608,
	1609, 1617, 1618, 1619, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1603, 1610, 1605, 1614, 0,
	0, 1624, 0, 0, 1577, 0, 0, 1604, 1606, 0,
	0, 1623, 0, 0, 0, 1598, 0, 0, 0, 0,
	0, 0, 1620, 0, 1621, 0, 0, 0, 0, 0,
	0, 1591, 1592, 0, 1576, 0, 0, 0, 0, 0,
	1615, 0, 0, 0, 1596, 0, 0, 1612, 0, 0,
	0, 0, 1593, 0, 0, 0, 0, 0, 1597, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1622, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1611, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1599, 1600, 1601, 1602,
	0, 0, 0, 0, 0, 0, 1582, 0, 1613, 0,
	0, 0, 1588, 1589, 1595, 1616, 1594, 1590, 0, 1587,
	1585, 1586, 1578, 1579, 1580, 1581, 1583, 1584, 0, 0,
	0, 1603, 0, 0, 0, 1614, 0, 0, 1624, 0,
	0, 0, 2341, 0, 1604, 1606, 0, 0, 0, 1574,
	1575, 1598, 1607, 1608, 1609, 1617, 1618, 1619, 0, 1620,
	0, 1621, 0, 0, 0, 0, 0, 0, 1591, 1592,
	1610, 1605, 0, 0, 0, 2340, 1615, 0, 1577, 0,
	0, 0, 0, 0, 1612, 1623, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1597, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1596, 0,
	1622, 0, 0, 0, 0, 0, 1593, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1611, 908, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1613, 0, 0, 0, 1588, 1589,
	1595, 1616, 1594, 1590, 0, 1587, 1585, 1586, 1578, 1579,
	1580, 1581, 1583, 1584, 0, 0, 0, 0, 1603, 0,
	1599, 1600, 1601, 1602, 0, 0, 0, 0, 0, 0,
	1582, 0, 0, 0, 0, 0, 1574, 1575, 1598, 1607,
	1608, 1609, 1617, 1618, 1619, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1610, 1605, 1614,
	0, 0, 1624, 1615, 0, 1577, 0, 0, 1604, 1606,
	0, 0, 1623, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1620, 0, 1621, 0, 0, 0, 0,
	0, 0, 1591, 1592, 0, 1576, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1596, 0, 0, 1612, 0,
	0, 0, 0, 1593, 0, 0, 0, 0, 0, 1597,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1622, 0, 0, 0, 0, 0,
	0, 1613, 0, 0, 0, 1588, 1589, 1595, 1616, 1594,
	1590, 1611, 1587, 1585, 1586, 1578, 1579, 1580, 1581, 1583,
	1584, 0, 0, 0, 0, 0, 0, 1599, 1600, 1601,
	1602, 0, 0, 0, 0, 0, 0, 1582, 0, 0,
	0, 0, 1574, 1575, 0, 1607, 1608, 1609, 1617, 1618,
	1619, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1603, 1610, 1605, 0, 1614, 0, 0, 1624,
	0, 1577, 0, 0, 0, 1604, 1606, 0, 1623, 0,
	0, 0, 1598, 0, 0, 0, 0, 0, 0, 0,
	1620, 0, 1621, 0, 0, 0, 0, 0, 0, 1591,
	1592, 1576, 0, 0, 0, 0, 0, 1615, 0, 0,
	0, 1596, 0, 0, 0, 1612, 0, 0, 0, 1593,
	0, 0, 0, 0, 0, 0, 1597, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1622, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1611, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1599, 1600, 1601, 1602, 0, 0, 0,
	0, 0, 0, 1582, 0, 1613, 0, 0, 2833, 1588,
	1589, 1595, 1616, 1594, 1590, 0, 1587, 1585, 1586, 1578,
	1579, 1580, 1581, 1583, 1584, 0, 0, 0, 0, 1603,
	0, 0, 1614, 0, 0, 1624, 0, 0, 0, 0,
	0, 1604, 1606, 0, 0, 0, 0, 0, 0, 1598,
	0, 0, 0, 0, 0, 0, 1620, 0, 1621, 0,
	0, 0, 0, 0, 0, 1591, 1592, 0, 0, 0,
	0, 0, 0, 0, 1615, 0, 0, 0, 0, 0,
	0, 1612, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1597, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3154, 0,
	0, 0, 0, 0, 0, 0, 0, 1622, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1611, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1613, 0, 0, 0, 1588, 1589, 1595, 1616,
	1594, 1590, 0, 1587, 1585, 1586, 1578, 1579, 1580, 1581,
	1583, 1584, 0, 0, 0, 1603, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1574, 1575, 1598, 1607, 1608, 1609, 1617,
	1618, 1619, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1610, 1605, 0, 0, 0, 2828,
	1615, 0, 1577, 0, 0, 0, 0, 0, 0, 1623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1596, 0, 0, 0, 0, 0, 0, 0,
	1593, 0, 0, 1574, 1575, 0, 1607, 1608, 1609, 1617,
	1618, 1619, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1610, 1605, 0, 0, 0, 0,
	0, 0, 1577, 0, 0, 0, 0, 0, 1613, 1623,
	0, 0, 1588, 1589, 1595, 1616, 1594, 1590, 0, 1587,
	1585, 1586, 1578, 1579, 1580, 1581, 1583, 1584, 0, 0,
	0, 0, 1576, 0, 1599, 1600, 1601, 1602, 0, 0,
	0, 0, 1596, 0, 1582, 0, 0, 0, 0, 0,
	1593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1614, 0, 0, 1624, 0, 0, 0,
	0, 0, 1604, 1606, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1620, 0, 1621,
	0, 0, 0, 0, 0, 0, 1591, 1592, 0, 0,
	0, 0, 0, 0, 1599, 1600, 1601, 1602, 0, 0,
	0, 0, 1612, 0, 1582, 0, 0, 0, 0, 0,
	0, 0, 0, 1597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1614, 0, 0, 1624, 0, 1622, 0,
	0, 0, 1604, 1606, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1611, 0, 1620, 0, 1621,
	0, 0, 0, 0, 0, 0, 1591, 1592, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1603, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1622, 0,
	0, 0, 0, 0, 0, 0, 1598, 0, 0, 0,
	0, 0, 0, 0, 0, 1611, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1615, 0, 0, 0, 2795, 0, 0, 0, 1574,
	1575, 0, 1607, 1608, 1609, 1617, 1618, 1619, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1610, 1605, 0, 0, 0, 2768, 1603, 0, 1577, 0,
	0, 0, 0, 0, 0, 1623, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1596, 0,
	0, 1615, 0, 0, 0, 0, 1593, 0, 0, 1613,
	0, 0, 0, 1588, 1589, 1595, 1616, 1594, 1590, 0,
	1587, 1585, 1586, 1578, 1579, 1580, 1581, 1583, 1584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1599, 1600, 1601, 1602, 0, 0, 0, 0, 0, 0,
	1582, 0, 0, 0, 0, 0, 0, 0, 0, 1613,
	0, 0, 0, 1588, 1589, 1595, 1616, 1594, 1590, 0,
	1587, 1585, 1586, 1578, 1579, 1580, 1581, 1583, 1584, 1614,
	0, 0, 1624, 0, 0, 0, 0, 0, 1604, 1606,
	0, 0, 0, 1574, 1575, 0, 1607, 1608, 1609, 1617,
	1618, 1619, 0, 1620, 0, 1621, 0, 0, 0, 0,
	0, 0, 1591, 1592, 1610, 1605, 0, 0, 0, 0,
	0, 0, 1577, 0, 0, 0, 0, 0, 1612, 1623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1597,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1596, 0, 1622, 0, 0, 0, 0, 0,
	1593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1611, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1574,
	1575, 0, 1607, 1608, 1609, 1617, 1618, 1619, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1610, 1605, 1603, 0, 1599, 1600, 1601, 1602, 1577, 0,
	0, 0, 0, 0, 1582, 1623, 0, 0, 0, 0,
	0, 0, 1598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1576, 0,
	0, 0, 0, 1614, 0, 0, 1624, 1615, 1596, 0,
	0, 0, 1604, 1606, 0, 0, 1593, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1620, 0, 1621,
	0, 0, 0, 0, 0, 0, 1591, 1592, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1599, 1600, 1601, 1602, 0, 0, 0, 0, 1622, 0,
	1582, 0, 0, 0, 0, 1613, 0, 0, 0, 1588,
	1589, 1595, 1616, 1594, 1590, 1611, 1587, 1585, 1586, 1578,
	1579, 1580, 1581, 1583, 1584, 0, 0, 0, 0, 1614,
	0, 0, 1624, 0, 0, 0, 0, 0, 1604, 1606,
	0, 0, 0, 1574, 1575, 0, 1607, 1608, 1609, 1617,
	1618, 1619, 0, 1620, 0, 1621, 0, 0, 0, 0,
	0, 0, 1591, 1592, 0, 1605, 1603, 0, 0, 0,
	0, 0, 1577, 0, 0, 0, 0, 0, 1612, 1623,
	0, 0, 0, 0, 0, 0, 1598, 0, 0, 1597,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1576, 0, 0, 0, 0, 0, 0, 0,
	0, 1615, 1596, 0, 1622, 0, 0, 0, 0, 0,
	1593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1603, 0, 1599, 1600, 1601, 1602, 0, 0,
	0, 0, 0, 0, 1582, 0, 0, 0, 0, 1613,
	0, 0, 1598, 1588, 1589, 1595, 1616, 1594, 1590, 0,
	1587, 1585, 1586, 1578, 1579, 1580, 1581, 1583, 1584, 0,
	0, 0, 0, 1614, 0, 0, 1624, 1615, 0, 0,
	0, 0, 1604, 1606, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1620, 0, 1621,
	0, 0, 0, 0, 0, 0, 1591, 1592, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1622, 0,
	0, 0, 0, 0, 0, 1613, 0, 0, 0, 1588,
	1589, 1595, 1616, 1594, 1590, 0, 1587, 1585, 1586, 1578,
	1579, 1580, 1581, 1583, 1584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1603, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1615, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1613,
	0, 0, 0, 1588, 1589, 1595, 1616, 1594, 1590, 0,
	1587, 1585, 1586, 1578, 1579, 1580, 1581, 1583, 1584,
}
var sqlPact = [...]int{

	5073, -1000, -1000, -1000, -1000, 321, -1000, -1000, 320, 318,
	317, 315, 314, 308, 306, 305, -1000, -1000, -1000, -1000,
	-1000, -1000, 304, -1000, -1000, 302, -1000, 301, 297, 295,
	-1000, -1000, 294, -1000, 290, -1000, -1000, -1000, -1000, 288,
	287, 277, 72477, 72012, 72936, 2047, 87744, 76620, 1999, 65055,
	87279, 64590, 86814, 86349, 276, -1000, 85884, 274, 270, 269,
	-1000, 85419, -1000, 1668, -1000, 268, 4554, 53869, 264, 262,
	258, 2032, 254, -1000, 252, 251, -1000, 9944, 1441, -1000,
	238, 237, -1000, 8827, 4221, 75696, 210, 203, 2370, 202,
	201, 53403, 199, 193, 2316, 2576, -1000, -1000, 1881, -1000,
	-1000, 192, 191, 189, 187, 185, 180, 179, 177, 176,
	-1000, 175, 173, 172, 171, 169, 168, 166, 162, -1000,
	155, 143, 142, 140, 139, 135, 133, 132, 129, 128,
	127, 126, -1000, 13709, 122, 1759, 1543, 1534, 1523, 1521,
	1515, 986, 121, 117, 110, 109, 105, 98, 92, 91,
	89, -1000, 88, 87, 86, 84, 83, 77, 76, 73,
	184, 69, 68, 66, 65, 64, 62, 61, 2274, -1000,
	1440, 1030, 25361, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 93252,
	88203, 59, -129, 55, -1000, 2934, 1018, 45009, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 409, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 611, 1666, 814,
	-1000, -1000, -1000, 84960, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2040, 22, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 813, -1000, 2035, 261, 1990, -1000, -1000, -1000, -1000,
	-1000, 88203, -1000, -1000, 3264, 3263, 1809, 810, 84501, -1000,
	1518, -1000, 939, 28307, -1000, 1203, -1000, 28307, 408, -1000,
	-1000, -1000, -1000, -1000, -1000, 3262, 3261, 3259, 3258, -1000,
	-1000, 64125, 19439, 63660, 63195, 84036, 18964, 71547, 71082, 83571,
	59489, -1000, -1000, -1000, 1234, -1000, -1000, -1000, -1000, -1000,
	-1000, 19, 57114, 3108, 88203, -1000, 407, -1000, -1000, -1000,
	-1000, -1000, -1000, 38291, 865, 37790, 767, 37289, 740, -1000,
	-1000, -1000, 59014, -1000, 3257, 3256, 1080, 3255, 2857, 92793,
	1618, 3253, 1748, 1199, 1011, 3252, 3251, 3249, 3248, 3247,
	3246, 1308, 83106, 2594, 82641, 1719, 58539, 70617, 72936, 2383,
	82176, 1321, 1294, -1000, -1000, -1000, -1000, 2751, 2570, 2507,
	50166, -1000, -1000, 3245, 3244, 3242, 3240, 3238, 92334, 1614,
	3236, 2230, 3235, 3234, 3232, 3231, 3230, 3228, 3227, -1000,
	70152, 69687, 69222, 2986, 81711, 68757, 81246, 58064, 36788, 968,
	-1000, -1000, -1000, 46883, 6553, 6191, 80781, 48309, 72936, 72936,
	-1000, -1000, -1000, -1000, -1000, 36287, 652, 35786, 811, -1000,
	-1000, 47363, 2538, -1000, -1000, -1000, -1000, 35285, 571, 34784,
	792, 88203, -1000, 2593, 1754, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2079, 1497, 3113, 57589,
	1826, 1390, 2931, 2743, 2741, 1432, 2288, 2736, 2714, 2702,
	2698, 2673, 1660, 2287, 336, 24860, 2582, 1516, 34283, 1417,
	1460, 2671, 2670, 3134, 1790, 1786, 1860, 62730, 3226, 3225,
	2899, 2668, 2659, 2536, -1000, -1000, -1000, -1000, 1402, -1000,
	-1000, -1000, -1000, -1000, 65973, -1000, -1000, 1195, -1000, -1000,
	1195, -1000, -1000, -1000, -1000, -1000, 1226, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1440, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2027,
	-1000, 1807, -1000, -1000, 2257, 2901, 2901, 2901, 2960, 589,
	578, -1000, 184, -1000, -1000, 99152, -1000, -1000, 38780, 38780,
	38780, 38780, 38780, 38780, 38780, 1924, -1000, 809, -1000, -1000,
	849, -1000, 808, 697, -1000, -1000, -1000, -1000, -1000, -1000,
	807, -1000, -1000, -1000, -1000, -1000, -1000, 3108, -1000, 21866,
	-1000, -1000, -1000, 537, 798, 38780, -1000, -1000, 3149, 3148,
	1004, -1000, 406, 947, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2591, 797, 795, -1000,
	793, 791, 790, 788, 786, -1000, -1000, -1000, 778, 777,
	776, 775, 773, 772, 769, 768, -1000, 1816, -1000, -1000,
	-1000, -1000, -1000, -1000, 724, 723, 723, 723, -1000, 1007,
	-1000, -1000, -1000, 434, 721, 368, 720, 719, 717, 761,
	759, 757, 756, 754, 753, 751, 750, 748, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1005, -1000, -1000, -1000, -1000, 18,
	88203, -1000, 611, 18, -1000, -1000, 746, -1000, 28796, 28796,
	28796, -1000, -1000, 2034, 38780, -1000, 2700, -1000, 33, 33,
	922, 45937, -1000, 44063, 922, 576, 856, 49700, -1000, 2528,
	-1000, -1000, 743, 398, -1000, -1000, -1000, -1000, 19912, 2517,
	88203, 88203, 72936, 72936, 72936, 2801, 38780, -1000, -1000, 54328,
	88203, 73395, 3055, 55246, 54328, 88203, 2586, -1000, -1000, -1000,
	88203, -1000, 38780, -1000, 3053, 1495, 60425, 2985, 9, -1000,
	-1000, -1000, -1000, -1000, -1000, 2207, 2242, 1140, 2086, 1777,
	-1000, 28307, 2849, -1000, -1000, -1000, 383, 19912, -1000, -1000,
	-1000, -1000, -1000, 1943, 2758, 1372, -1000, 2080, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1634, 2757, -1000,
	1808, 2752, 1632, -1000, -1000, 2024, -1000, -1000, 2874, -1000,
	-1000, 1783, 2750, 34, -1000, -1000, 2281, -1000, -1000, 1896,
	-1000, -1000, 973, 2749, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 47363, 57114, 12, -1000, -1000, -1000, -1000,
	0, -1000, 18489, 99152, -1000, -1000, -1000, -1000, 1688, 99152,
	955, -1000, -1000, 2744, -1000, 99152, 921, -1000, -1000, 2738,
	-1000, 2584, -1000, -1000, -1000, -1000, 3224, -1000, 3223, 2152,
	3222, 3221, 3220, -1000, 1578, 1805, 3219, -1000, 3218, -1000,
	-1000, -1000, -1000, -1000, -1000, 68292, 2031, -1000, -1000, 67362,
	-1000, 2150, -1000, 67827, 1010, -1000, 973, 2149, -1000, 1001,
	-1000, 3217, 2971, 2401, 973, 2148, -1000, -1000, -1000, -1000,
	-1000, 51552, -1000, 51552, -1000, 51552, -1000, 1450, -1000, 91875,
	33, 33, 3108, -1000, -1000, -1000, -1000, -1000, 2737, 3215,
	3214, 3212, -1000, 88203, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 206, 2731, -1000, -1000, 206, 2730, -1000, 206, 2728,
	-1000, 75231, -1000, -1000, 2039, 2727, -1000, 198, 2726, -1000,
	-1000, 195, 2723, -1000, -1000, -85, 2722, -1000, -1000, 99152,
	-1000, -1000, -1000, 2, -1000, -1000, -1000, 1018, -1000, 46403,
	-1000, 46403, 80316, 59962, 956, 782, 52937, 99152, -1000, -1000,
	-1000, -1000, 99152, -1000, -1000, -1000, -153, -1000, -1000, 59962,
	47363, 99152, -1000, -1000, -1000, -1000, 99152, -1000, -1000, -1000,
	59962, 67362, -1000, 79851, 66903, -1000, -1000, 1302, 2278, -1000,
	-1000, -1000, 956, 59962, 59962, 59962, -1000, 79386, -1000, -1000,
	1850, 1551, 2881, 1841, 72936, -1000, 1755, -1000, -1000, -1000,
	2920, 2583, -1000, 54787, 74772, -1000, 74313, -1000, 73854, -1000,
	72936, -1000, 72936, -1000, 3211, 3210, 3209, -1000, 3208, 2908,
	99152, 2906, -1000, 3207, 2982, 2582, 99152, -1000, 2708, 1532,
	1526, 88203, -1000, -1000, 88203, -1000, 88203, -1000, -1000, -1000,
	1399, -1000, -1000, 2198, -1000, -1000, -1000, -1000, 72936, -1000,
	-1000, -1000, -1000, -1000, -1000, 2580, -1000, 1568, -1000, 1749,
	-1000, 1285, -1000, -1000, 231, -1000, -1000, 9, -1000, 91416,
	-1000, 2257, -1000, 88203, -1000, 2200, 2554, 2577, 1613, 2062,
	2307, -1000, 33782, 2261, 41225, 2077, 184, -1000, -1000, 184,
	184, 26339, -1000, -1000, 55246, 55246, 19912, 1243, 38780, 38780,
	38780, 38780, 38780, 38780, 38780, 38780, 38780, 38780, 38780, 38780,
	38780, 38780, 38780, 38780, 38780, 38780, 38780, 38780, 38780, 38780,
	38780, 38780, 38780, 38780, 38780, 38780, 38780, 38780, 38780, 38780,
	38780, 38780, 38780, 1895, 38780, 1223, 38780, 38780, 38780, 38780,
	2001, -1000, -1000, 1762, 642, 1770, -1000, 3095, 3095, 3095,
	466, 466, 99462, 99462, 726, 3206, 849, -1000, 38780, -1000,
	156, 38780, 20387, -1000, 578, 7494, 2193, -1000, 577, 20888,
	-1000, -1000, -1000, 21866, 697, 33281, 38780, 996, 99152, -1000,
	-1000, 1550, 3111, 18016, 2607, 2450, 734, 871, 689, 24359,
	23858, 23357, 22856, 602, 38780, 38780, 38780, 38780, 38780, 38780,
	38780, 38780, -1000, -1000, 3117, -1000, 3111, -1000, -1000, -1000,
	-1000, 3111, 1241, 1240, 3111, -1000, 3111, 3111, 2588, 2588,
	32792, 32291, 31790, 41714, 31289, 38780, 22355, 30788, 30287, -1000,
	88203, 18, 3051, 38780, 150, -1000, 97908, -1000, 150, 150,
	733, -6, 99152, 2352, 2352, 45473, 2145, 1937, 1937, 1937,
	-1000, 922, 14203, 922, 78464, 1947, 922, 922, 361, 397,
	574, 43599, 2700, 78464, 834, 731, 53, 52, 44, -1000,
	-1000, 42, 40, -1000, -1000, 72936, 730, 20387, 19912, 342,
	1345, -11, 2329, 2328, 2322, -1000, 2314, 1664, -12, 1217,
	-171, -1000, 5936, -13, -1000, 1298, 341, 3111, -1000, -1000,
	-1000, -1000, -1000, 3205, 3201, -1000, 1002, 729, 728, 857,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 724, 723,
	723, 723, -1000, 434, 721, 368, 720, 719, 717, -1000,
	-1000, -1000, -1000, 2516, 0, 73395, 926, -18, 1091, 9,
	-1000, -1000, -1000, 60425, 1195, -1000, 1767, -1000, -1000, -1000,
	-1000, -1000, -1000, 1332, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1004, -1000, -1000, -1000, -1000, -1000, -1000, 3105, 3101,
	17, -1000, -1000, 19912, -1000, 8, 1482, 1610, -1000, 62265,
	2143, 2904, 2862, 1438, -1000, 1388, 2958, 65973, 3003, 3047,
	149, -1000, 2513, -1000, -1000, 935, 1549, 1589, 1149, 65973,
	1808, -1000, 55246, -1000, 2338, 2955, 1340, 1346, 1340, 1340,
	1344, -1000, 65973, 1576, 1145, -1000, 1141, -1000, 6, 2999,
	3014, 115, -1000, 2512, 1132, -1000, -1000, 72936, 19912, 1428,
	1442, 1570, 1131, 16, -1000, 2995, 2994, 1128, 1127, -1000,
	1419, -1000, 59962, 889, 12, 57114, 88203, 333, -1000, 156,
	38780, 38780, 156, 38780, 156, 2978, -1000, -1000, 2719, -1000,
	-1000, -1000, 3200, 1778, 2221, -1000, -1000, -1000, 716, 2142,
	2497, 88203, 2342, 11, 72936, -1000, 2716, 1808, 2138, -1000,
	-1000, 66438, -1000, 2715, 556, 3199, -1000, 90957, -1000, 2896,
	1252, 2710, 1048, 207, 3046, -1000, 207, 52011, -1000, 88203,
	-1000, -1000, 88203, -1000, -1000, -1000, 3198, -1000, 72936, -1000,
	-1000, 72936, -1000, 72936, -1000, 72936, 188, 2707, -1000, -1000,
	88203, -1000, 72936, 72936, -1000, 88203, 88203, 59962, 59962, 4737,
	61347, -19, -20, 572, -1000, 78927, 88203, 1047, 61806, 88203,
	2839, 956, 47363, -1000, -29, -153, 956, 956, 889, -1000,
	889, -1000, 72936, 2573, -1000, 956, 956, 956, -1000, -1000,
	-1000, -1000, 3197, 3194, -1000, -1000, -1000, 972, 72936, 88203,
	72936, -1000, -1000, 88203, -1000, 88203, -1000, 972, 88203, 972,
	88203, 972, 88203, -1000, -1000, -1000, -1000, -1000, -1000, 156,
	38780, -1000, -1000, 3192, 1477, -1000, 2558, -1000, 2555, -1000,
	72, -1000, -1000, -1000, -1000, -1000, 1673, 72936, 72936, 72936,
	72936, 88203, 72936, -1000, 65973, -1000, 2200, 2554, -1000, -1000,
	-1000, -1000, -1000, -1000, 1303, 1997, -1000, 2295, -1000, 1415,
	-1000, -1000, -1000, 99152, 42187, -1000, -1000, 99152, 1704, -1000,
	40736, 40247, -1000, -1000, 1529, 72936, 2347, -1000, 2347, -204,
	-1000, 97401, 2294, 72936, -1000, -1000, -1000, -1000, -1000, 934,
	893, 893, 1224, 1224, 1224, 1224, 2993, 5227, 5541, 4863,
	7681, 7681, 399, 399, 399, 399, 399, 7681, 4093, 466,
	466, 4093, 4093, 4093, 4093, 4093, 466, 466, 466, 7681,
	7681, 7681, 99462, 99268, 8036, 38780, 38780, 1126, 1711, 642,
	7715, 38780, 8600, 8600, 8600, 8600, -1000, 1751, -1000, -1000,
	-1000, -1000, 2496, 714, 41714, 41714, -1000, -1000, -1000, -1000,
	21377, 38780, -1000, -1000, -1000, -1000, 29786, -1000, -1000, 96890,
	-265, 569, -122, -9, -1000, 38780, 38780, 38780, 568, -1000,
	332, 38780, 88203, -1000, 94220, 832, -76, -1000, -31, 1333,
	-1000, 38780, -1000, -1000, 1124, -1000, 1123, 1122, 1121, -1000,
	713, 567, -1000, 330, -1000, 1934, 712, 711, 38780, -1000,
	-1000, -1000, -1000, -1000, 96696, -1000, -1000, 96530, -1000, -1000,
	96336, -1000, -1000, 96170, -1000, -1000, -1000, 98958, 94177, 13493,
	13180, 6967, 12684, 12256, -38, 566, -39, 562, 932, 929,
	561, 557, 552, -40, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -49, 551, -1000, 2495, -122, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 550, -1000, 549, -1000, 98652,
	-122, 544, 6027, -1000, 41714, 41714, 41714, -1000, 543, -1000,
	97557, -1000, 98572, 29297, 29297, 29297, 542, 98221, 38780, -122,
	-56, -1000, -58, -1000, -1000, 592, -63, 957, 28796, 44543,
	19912, -1000, 957, 957, 38780, -1000, 38780, 2306, -1000, -1000,
	-1000, 2304, 2099, 2352, 45473, -1000, -1000, -1000, -1000, 78464,
	-1000, 3108, 2405, -1000, 78464, -1000, -1000, 88203, 611, -1000,
	78464, 78464, 19912, 922, -1000, 922, 78464, 644, -1000, -1000,
	-1000, -1000, -1000, 538, 48772, -9, 325, 19912, 956, -1000,
	2378, 2378, 2378, 2378, -1000, -1000, 88203, 3060, -1000, 1823,
	-1000, 55246, -1000, 844, 1201, 19912, -1000, -1000, -1000, 708,
	-1000, 3111, 3111, -1000, 3111, 88203, 102, 28307, -1000, 1195,
	-1000, -1000, 1445, -1000, 1785, -1000, 1144, -1000, -1000, -1000,
	-1000, 28307, -1000, 1798, 88203, 88203, 72936, -1000, 88203, -1000,
	2137, 90498, 2135, 55246, 88203, -1000, -1000, 707, 705, 2293,
	2285, 1040, 88203, 88203, 2270, 90039, 89580, 88203, 1945, 38780,
	2037, 1880, 156, 156, -1000, -1000, 156, 704, 1286, 72936,
	72936, 88203, 72936, 1594, -1000, -1000, -1000, -1000, -1000, 65514,
	-1000, -1000, 3116, 3114, -1000, 1340, -1000, -1000, -1000, 1340,
	1808, 1472, 88203, 72936, 88203, 1832, 156, 156, -1000, -1000,
	156, 703, 19912, 1853, -1000, 2606, 88203, 3147, 88203, 88203,
	88203, 56655, 2891, 89121, 88203, 88203, 56655, 1419, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 56192, 1054, 973, 2406, -1000,
	-1000, 17543, -1000, 99152, 99152, -1000, 99152, -1000, 54328, 88203,
	-1000, 1009, 88203, 61806, 961, 2703, 51093, 0, 956, 59962,
	72936, 11, 88203, -1000, 1808, 2695, 611, 2131, -1000, -1000,
	59962, 702, 3182, 3179, -1000, 2023, 2126, -1000, -1000, 88662,
	2771, 877, 88203, 957, 45473, 1912, -1000, 49237, 1019, 88203,
	1724, 101, -1000, -1000, -1000, 57, 88203, -1000, 3178, -1000,
	-1000, 206, 206, 206, -1000, 72936, 72936, 2039, -1000, 198,
	-1000, 195, -1000, -85, -1000, -1000, 4737, 4737, 956, -243,
	699, -1000, 900, 890, 47836, 59962, -64, -1000, -1000, -1000,
	-1000, -1000, 72936, 88203, 785, 2398, 88203, -65, -1000, 323,
	698, -1000, -1000, -1000, 956, 2493, -1000, -1000, 979, -1000,
	1279, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	31, 0, 0, -1000, 972, -1000, 972, -1000, 972, -1000,
	99152, -1000, -1000, 1467, 1431, 88203, -1000, 19912, 88203, 72936,
	19912, 72936, 2553, 2550, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1058, -1000, 1704, 1996, -1000, 697, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2187, -1000, 10,
	26339, 2091, -1000, -1000, 72936, 30, 38780, 38780, 7322, 5434,
	38780, 41714, 41714, -1000, 38780, 5004, -1000, -1000, -1000, -1000,
	-1000, 2492, 696, 38780, 55246, 4496, 486, -1000, 533, 11173,
	4093, -1000, 38780, -1000, 532, 27818, -1000, 97714, -34, -70,
	-1000, 14689, -122, -79, -1000, -1000, 843, -1000, 2706, -1000,
	38780, 98065, 2169, 1750, 1713, 1478, 3111, 3146, 17070, -1000,
	52474, 989, 1950, 95976, -1000, -1000, -1000, -1000, 55246, 55246,
	38780, 38780, -1000, 38780, 38780, 38780, -1000, -1000, -1000, 3111,
	912, -1000, -1000, -1000, 912, -1000, -1000, 1340, -1000, 1340,
	-1000, 38780, -1000, -1000, 2479, 38780, -1000, 55246, 55246, 41714,
	41714, 41714, 41714, 41714, 41714, 41714, 41714, 41714, 41714, 41714,
	41714, 41714, 41714, 41714, 41714, 41714, 41714, 41714, 2232, 41714,
	3092, 3092, 3092, -1000, 2542, 2479, 38780, 38780, 55246, 529,
	526, 525, -1000, 38780, -122, -1000, -1000, 4737, 694, -1000,
	2176, -1000, 2445, -1000, 38780, -1000, -203, -1000, 2700, -1000,
	-1000, 2445, 2445, -80, 99152, 45473, 45473, -1000, 693, 38780,
	2302, -1000, -1000, 830, -266, -1000, 888, -1000, -1000, -1000,
	-1000, -1000, 611, -1000, -1000, -1000, 196, 78464, 78464, 829,
	-1000, -86, -1000, -1000, -87, -1000, 3045, 523, 19912, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 0, 1948, 3145,
	-1000, 3112, 842, 828, 157, 3111, 522, 520, 518, 0,
	88203, -1000, 9, -1000, -1000, -1000, 38780, -1000, -1000, 2903,
	1120, 1118, -1000, -1000, 2687, -1000, 2125, -1000, 1021, -1000,
	1803, -1000, 38780, 38780, 686, 685, 3175, 1677, 3174, 1041,
	2686, 2039, 2654, 2039, -1000, -1000, 942, -1000, 99152, 684,
	683, -1000, 8, 1476, 1514, 978, -1000, -1000, 38780, 38780,
	78005, -1000, 428, 2874, 29, -1000, -1000, 1503, 1117, -1000,
	-1000, -1000, -1000, 1808, 1488, 1115, -1000, -1000, -1000, -1000,
	975, -1000, -1000, 38780, -1000, 6, 1114, 3000, 2118, 72936,
	1113, -1000, 1112, -1000, -1000, -1000, -1000, -1000, -1000, 2987,
	2039, 2651, 1256, -1000, -1000, -1000, -1000, -1000, 55719, -1000,
	969, 2475, -1000, 1111, 3172, 72936, 3171, 517, -88, 5,
	55246, 3040, 2058, 649, 72936, 933, -1000, 3108, -1000, -1000,
	-1000, -1000, 72936, 3036, 2649, 973, 3143, -1000, -1000, 72936,
	2648, 2019, 2115, 2215, 877, 60888, -1000, 973, 1949, -41,
	-1000, 1724, 27317, 2869, -89, -1000, -1000, -1000, 957, 52011,
	45473, 38780, 3170, -96, -1000, -1000, -1000, -1000, -1000, 188,
	-1000, -1000, -1000, -1000, -1000, -1000, 77083, 77083, 59962, 59962,
	59962, 956, 88203, 88203, 61806, -1000, 679, 88203, 88203, 678,
	-1000, 88203, 88203, 3168, 59962, -1000, 156, -1000, 1974, 72936,
	16597, -1000, -1000, -1000, -1000, -1000, 972, -1000, -1000, 1847,
	2066, 1847, 1712, 1686, -1000, 1993, -1000, -1000, -1000, -1000,
	2317, 2893, 19912, 2990, 8600, 38780, 38780, 508, 366, 293,
	8600, 38780, 38780, 55246, 5628, -97, 38780, 38780, -1000, 38780,
	827, 99152, 3142, 38780, 507, 504, -1000, -1000, -1000, 3109,
	-1000, -1000, -1000, 99152, 38780, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 491, -1000, 151, -1000, -1000, -1000, 93711, -1000,
	38780, 490, 2952, -1000, 488, 485, 4462, 5983, 95810, 95616,
	95450, 483, -1000, -1000, 472, 470, 99152, 2542, 99152, -1000,
	-1000, 826, 826, 1327, 1327, 1327, 1327, 3092, 885, 902,
	591, 388, 388, 388, 448, 519, 519, 388, 388, 388,
	2468, 2228, 677, 5722, -1000, -1000, 99152, 99152, 464, -1000,
	-1000, -1000, -122, 452, 4737, -1000, 2438, 2951, 99152, -1000,
	45473, 2438, 2438, -1000, -1000, 2099, 88203, 99152, 45473, -1000,
	2405, -1000, 15173, -1000, 19912, -1000, -1000, -1000, -1000, 3108,
	-1000, 48772, -1000, 675, -1000, 103, -1000, -1000, 818, 3167,
	839, 19912, 450, -1000, -1000, -1000, 0, 99152, 88203, 88203,
	88203, 2646, -1000, 3391, -1000, 1040, 95256, -104, -1000, 97401,
	38780, 88203, -1000, -1000, 1718, 2286, 1070, -1000, 2922, 88203,
	-1000, 88203, -1000, -1000, 88203, 88203, 72936, 88203, 2624, -109,
	99152, -1, -1000, 886, -1000, 1351, -1000, 16124, 88203, 72936,
	88203, 72936, 2622, -111, 19912, -1000, 3137, 3136, 2643, 2927,
	3125, 88203, -1000, 88203, 72936, 2838, -1000, -1000, -1000, 1978,
	59962, 47363, -1000, 611, -1000, 2394, -1000, 76155, 2071, 156,
	-1000, 77546, 3166, 674, -1000, 1963, -1000, 817, 1808, 156,
	72936, -1000, 444, -25, -1000, 1032, 19912, 72936, 2641, 2217,
	877, 60888, -1000, 1252, 2307, -1000, -30, -1000, 660, 156,
	1949, -1000, -41, 99152, -1000, 884, -1000, -1000, -112, -1000,
	-1000, 430, -1000, 2836, 2830, -1000, 2470, 38780, 671, 670,
	88203, 2827, -1000, -1000, -126, -1000, 2201, -1000, -1000, -1000,
	-1000, -1000, 19912, 1496, -1000, 669, 664, -1000, -1000, -1000,
	-1000, 2893, 8600, 8600, 38780, 38780, 38780, 8600, 5628, -133,
	-1000, 8600, 8600, -122, -1000, -1000, 97714, -1000, -1000, -1000,
	99152, -1000, 15651, 1901, -1000, 95090, -1000, 26339, -1000, -1000,
	38780, 38780, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	41714, 2467, 663, 55246, -1000, -1000, 429, 984, 38780, 38780,
	2700, 984, 984, -1000, -134, -1000, -1000, -1000, 3108, 103,
	-1000, -1000, 3165, 19912, 838, -1000, 3160, -1000, -1000, -1000,
	-1000, -1000, 88203, -1000, 88203, -1000, 19912, 88203, 2471, 2101,
	-1000, -1000, 2259, 662, 41714, 72936, 927, -1000, 3067, 2447,
	1734, 38780, 2091, -135, -136, 2100, -1000, -1000, 2097, 38780,
	-1000, 55246, 661, 2039, 2039, -141, -142, -1000, -1000, 38780,
	1109, 88203, 26828, -1000, 3159, 2874, -1000, -1000, -1000, -1000,
	38780, 1108, -1000, -1000, -1000, 3124, 2039, 19912, -1000, 2039,
	2039, 2927, 1069, -51, 656, -1000, 883, -1000, -1000, -85,
	969, 3018, 1832, 2415, -1000, -1000, -1000, -1000, 2251, -1000,
	-1000, 88203, 2237, 960, -143, -1000, 881, 878, -1000, 61806,
	961, 944, -1000, -1000, -1000, 611, -1000, 3123, 655, 88203,
	2015, 651, 19912, -1000, 877, 60888, -1000, 2771, 1724, -1000,
	2777, 88203, 2861, -1000, 2307, 642, -1000, 956, 641, 635,
	2283, 2283, -144, 38780, 38780, -150, 634, 956, -98, -1000,
	899, 891, -1000, -1000, 72936, 72936, 38780, 38780, -1000, 8600,
	8600, 8600, -1000, 416, -1000, -1000, 1949, 2945, -1000, -99,
	94896, 94730, 6579, 41714, 55246, -152, -1000, -1000, 88203, 99152,
	-122, -1000, -1000, -1000, 603, -1000, 3158, -1000, -1000, 1687,
	-1000, -1000, -1000, 88203, 2112, -1000, 1038, 38780, 5722, 631,
	38780, -1000, 3013, -1000, 2358, 2505, 2394, 628, -1000, -1000,
	-1000, -1000, -1000, 1031, 1763, -1000, -1000, 99152, 2927, 38780,
	-1000, -1000, 627, 625, 99152, 624, 876, 2466, -1000, -1000,
	-1000, 99152, 623, 3000, -1000, -1000, -1000, -1000, 2039, 72936,
	2090, 2090, 59962, 1779, 156, 961, -1000, 1918, 2071, 619,
	-1000, -1000, 2006, 2323, -1000, 77546, 43133, 43133, 415, 3011,
	944, -1000, 3102, -1000, 3010, -1000, 38780, -1000, 72936, 38780,
	2014, 60888, -1000, 2215, -1000, 1238, -157, 88203, 1724, -1000,
	-1000, 59962, 59962, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1031, -158, -159, -1000, 59962, -1000,
	2201, -1000, 88203, -1000, 88203, -1000, -1000, -160, -165, -1000,
	1875, 38780, 26339, -1000, -1000, 6579, -166, -1000, -114, -1000,
	3007, -1000, -1000, -1000, -1000, 2637, 2435, 94536, 2181, 88203,
	233, -1000, 2501, -1000, -1000, 1832, 88203, 2394, 2430, 72936,
	1033, -168, 1847, 1847, 38780, 25850, 1915, 38780, -1000, -1000,
	2927, -1000, -173, -1000, 2457, 2426, -1000, 2006, 72936, 88203,
	-1000, 2916, -1000, 2825, -1000, -1000, -1000, 2394, 156, -1000,
	-1000, 156, -174, 1032, -181, 72936, -1000, 2217, 1434, -1000,
	957, -1000, -1000, -183, -189, 1734, 1031, 957, -190, -1000,
	-191, -205, -1000, -1000, 414, 39758, 39758, 39758, -122, -204,
	-1000, 88203, 618, 2613, 967, -1000, 2010, 1714, 263, 1055,
	-1000, -1000, 2447, -207, -1000, 966, 611, -1000, 38780, 1031,
	-208, -1000, 1017, -210, -1000, 1016, -215, -1000, 2465, -1000,
	-217, 2039, -1000, 965, 2976, -1000, -1000, -1000, -1000, -1000,
	610, -218, -1000, -1000, 2108, -1000, 1832, 960, -1000, 1031,
	607, 1734, 599, -1000, 52011, -1000, 956, 956, 2394, 1734,
	-1000, 956, -1000, -1000, -1000, 2661, -1000, 42660, 1986, 1676,
	97047, 2661, 2661, -1000, -1000, 88203, 2967, -1000, 2012, 2011,
	1398, -1000, -1000, -1000, -1000, -1000, -1000, 957, -1000, 2965,
	2181, 99152, 2394, -1000, 1847, 2413, -1000, 1847, 2462, -1000,
	1904, -1000, -1000, -1000, 2629, 3089, 88203, -1000, 88203, 1624,
	1620, 3156, 961, 2006, 1734, 38780, 2394, 38780, -226, -1000,
	-1000, 1832, 2394, -1000, -1000, 1595, 3019, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 875, -1000, 2811, -1000, 1057,
	1863, 1863, -1000, 873, 2010, -1000, -1000, 596, -1000, 595,
	-1000, 1629, -1000, -1000, -223, -1000, -1000, 3154, -1000, 2006,
	-1000, 2394, -224, 1832, -231, -1000, 957, 1832, 1674, -1000,
	-1000, 1944, 39269, 38780, -1000, 3076, -1000, -1000, 2262, -1000,
	38780, 2447, 38780, 38780, 1953, 2033, -1000, -1000, 1832, 1031,
	957, 1734, -1000, 957, -1000, -1000, -1000, 99152, -1000, -1000,
	-1000, 99152, -1000, -238, -244, 50630, -1000, -1000, -1000, 957,
	1734, -1000, 2394, -1000, 1832, 1106, -243, 77083, -1000, 2394,
	1832, -1000, 593, -246, 1832, 957, 38780, -1000, 957, -1000,
	-247, -1000, 1832, -1000,
}
var sqlPgo = [...]int{

	0, 3859, 3853, 3851, 3849, 3848, 3846, 3844, 3843, 3841,
	3840, 3838, 3837, 3834, 3833, 3827, 3822, 3821, 3820, 3817,
	3816, 3815, 3814, 3813, 3812, 3811, 3810, 3807, 3804, 3800,
	3798, 3794, 3793, 3792, 3791, 3790, 3786, 3784, 3781, 3780,
	3779, 3777, 3774, 3771, 3770, 3769, 3768, 3767, 3756, 3755,
	3754, 3753, 35, 3752, 3748, 3744, 3741, 3740, 3738, 3737,
	3736, 3735, 3734, 3733, 3731, 3729, 3726, 3725, 3724, 3723,
	3720, 41, 3719, 230, 3716, 3712, 3706, 3705, 3704, 3697,
	3696, 3695, 3694, 3691, 3687, 3686, 228, 3685, 124, 3683,
	3682, 3679, 3676, 3675, 227, 3674, 3673, 3670, 3668, 238,
	3664, 3662, 3659, 3657, 3652, 3651, 3650, 3647, 3644, 88,
	203, 3643, 82, 3641, 3640, 3639, 3638, 3632, 3627, 3626,
	3625, 3621, 3615, 206, 3614, 226, 3613, 3612, 3609, 3607,
	3606, 3602, 3601, 3599, 3598, 3597, 3596, 3595, 3594, 3590,
	3588, 3582, 3579, 3578, 3577, 3574, 3573, 3571, 3569, 3568,
	3566, 3565, 3564, 3562, 3561, 3560, 233, 159, 3558, 3557,
	225, 223, 3555, 3554, 3553, 3551, 3550, 101, 7, 153,
	3549, 3548, 69, 49, 43, 99, 50, 3547, 16, 272,
	195, 8733, 193, 3544, 3543, 3542, 215, 160, 3540, 197,
	3539, 3529, 3528, 3527, 73, 67, 148, 146, 141, 136,
	96, 3525, 3519, 79, 58, 42, 28, 3515, 3514, 3513,
	3316, 108, 3511, 222, 199, 133, 3508, 3506, 3505, 1323,
	3504, 34, 3501, 271, 62, 104, 52, 100, 3499, 126,
	23, 3497, 129, 37, 3496, 123, 78, 65, 7784, 7972,
	3494, 98, 47, 84, 2257, 142, 139, 166, 138, 165,
	177, 175, 144, 901, 3493, 211, 3492, 3031, 51, 132,
	3491, 3490, 3489, 61, 164, 83, 3488, 3486, 54, 8,
	4, 1, 140, 15, 93, 22, 3484, 14, 3482, 3478,
	3475, 3473, 24, 143, 3472, 232, 3471, 94, 36, 19,
	3470, 38, 183, 3469, 187, 102, 3466, 3464, 217, 172,
	170, 3463, 75, 190, 3458, 3456, 3455, 3453, 3450, 106,
	17, 105, 3448, 3446, 117, 196, 162, 3445, 39, 3444,
	161, 81, 112, 240, 97, 185, 90, 189, 147, 191,
	3440, 3439, 3437, 157, 3434, 3431, 182, 122, 3426, 3421,
	168, 236, 31, 60, 194, 59, 158, 134, 3414, 171,
	3413, 3412, 3411, 237, 149, 179, 5, 9, 76, 103,
	27, 13, 192, 128, 275, 89, 3409, 5177, 1628, 1385,
	46, 3406, 116, 95, 57, 91, 135, 221, 53, 3405,
	3404, 1514, 3401, 3400, 3399, 3398, 151, 3397, 3396, 3395,
	113, 107, 212, 3393, 80, 70, 11, 115, 306, 224,
	87, 186, 167, 214, 3392, 150, 3391, 44, 127, 3389,
	163, 213, 3387, 3386, 169, 3385, 114, 154, 45, 121,
	3383, 184, 3382, 3380, 3379, 3375, 3365, 3356, 3355, 72,
	198, 3351, 3350, 3348, 125, 156, 3345, 220, 118, 155,
	77, 33, 3343, 71, 3078, 3341, 55, 202, 56, 3340,
	453, 40, 0, 10477, 9121, 6919, 10016, 3337, 1157, 3336,
	3335, 3328, 181, 111, 3325, 3319, 3318, 85, 3317, 64,
	3314, 3313, 48, 3312, 12, 2, 10, 21, 18, 623,
	611, 3311, 3310, 86, 109, 119, 3309, 229, 188, 3307,
	3306, 3304, 3303, 74, 3302, 29, 3301, 26, 3299, 3298,
	30, 6, 32, 3297, 3296, 200, 3295, 201, 3294, 130,
	3293, 3019, 110, 3292, 3291, 219, 66, 3290, 218, 3289,
	2980, 3287, 3285, 20, 3284, 3282, 205, 145, 178, 3280,
	131, 3279, 137, 3278, 3277, 3276, 216, 3274, 3273, 25,
	3272, 3, 3271, 3270, 174, 2786, 3269, 3268, 63, 3267,
	152,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 11, 11, 7, 7, 7, 8, 8, 8,
	8, 39, 39, 9, 9, 9, 10, 10, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 16, 16, 28,
	28, 17, 17, 30, 30, 18, 18, 31, 31, 515,
	515, 21, 33, 22, 34, 15, 516, 516, 516, 516,
	27, 23, 35, 25, 25, 25, 25, 25, 170, 170,
	170, 170, 20, 20, 29, 29, 197, 197, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	514, 514, 199, 199, 198, 193, 193, 517, 517, 200,
	200, 200, 202, 202, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 418, 418, 418, 530, 530, 530, 531,
	531, 532, 532, 532, 532, 532, 41, 41, 509, 509,
	172, 172, 172, 174, 174, 173, 173, 173, 62, 62,
	522, 522, 523, 523, 521, 521, 524, 524, 524, 171,
	171, 171, 108, 108, 108, 109, 109, 110, 110, 175,
	95, 95, 95, 95, 95, 95, 95, 95, 95, 90,
	90, 450, 450, 451, 451, 166, 166, 167, 167, 167,
	167, 168, 168, 169, 169, 169, 55, 43, 43, 43,
	43, 43, 43, 43, 44, 44, 44, 44, 44, 45,
	45, 45, 45, 45, 45, 46, 46, 46, 46, 46,
	46, 53, 53, 53, 53, 157, 157, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 534, 534, 535, 535,
	536, 536, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 68, 68,
	284, 284, 256, 256, 69, 69, 69, 70, 70, 71,
	71, 57, 57, 507, 507, 299, 299, 409, 409, 73,
	73, 319, 319, 74, 74, 74, 74, 74, 74, 75,
	75, 75, 75, 75, 75, 75, 76, 76, 76, 76,
	76, 76, 76, 76, 76, 76, 76, 76, 76, 76,
	83, 83, 83, 84, 84, 84, 81, 81, 81, 78,
	78, 78, 77, 77, 77, 82, 82, 82, 247, 247,
	80, 80, 80, 249, 249, 79, 79, 79, 300, 300,
	85, 85, 85, 85, 257, 86, 86, 86, 86, 86,
	86, 86, 86, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 411, 411, 87, 87,
	87, 379, 379, 91, 91, 91, 334, 334, 92, 92,
	92, 92, 92, 93, 93, 93, 93, 111, 111, 111,
	111, 511, 511, 292, 292, 213, 213, 213, 213, 101,
	101, 101, 101, 102, 102, 102, 103, 103, 162, 162,
	117, 117, 117, 117, 117, 116, 116, 116, 116, 116,
	116, 47, 47, 47, 48, 48, 49, 49, 50, 50,
	51, 51, 52, 52, 52, 52, 52, 119, 119, 527,
	527, 121, 118, 118, 118, 120, 120, 120, 120, 122,
	123, 123, 123, 123, 123, 123, 123, 123, 124, 124,
	443, 443, 308, 308, 441, 441, 459, 459, 442, 442,
	261, 261, 261, 261, 261, 262, 262, 262, 449, 449,
	449, 449, 449, 449, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 163, 163, 164, 165, 165, 165, 165, 144,
	144, 144, 156, 156, 156, 156, 156, 156, 156, 147,
	147, 147, 134, 134, 126, 126, 126, 126, 126, 130,
	130, 130, 130, 130, 130, 130, 130, 127, 127, 136,
	136, 136, 136, 136, 131, 131, 133, 133, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 128, 128, 128,
	128, 138, 138, 138, 138, 341, 341, 341, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 155, 155,
	155, 155, 155, 155, 525, 525, 526, 526, 151, 151,
	151, 151, 151, 151, 393, 393, 145, 145, 145, 145,
	150, 150, 150, 150, 324, 324, 142, 142, 142, 143,
	143, 143, 148, 148, 149, 146, 146, 152, 152, 152,
	152, 129, 129, 129, 538, 538, 538, 153, 153, 141,
	141, 154, 154, 154, 154, 154, 154, 154, 154, 140,
	140, 140, 139, 139, 139, 139, 132, 508, 508, 505,
	505, 505, 505, 505, 505, 505, 505, 506, 506, 510,
	510, 96, 96, 96, 96, 96, 104, 104, 104, 104,
	104, 97, 97, 97, 97, 97, 99, 99, 98, 98,
	98, 98, 63, 63, 63, 14, 14, 14, 64, 64,
	178, 178, 178, 178, 269, 269, 269, 269, 176, 176,
	177, 177, 65, 65, 539, 539, 539, 518, 518, 518,
	519, 519, 519, 519, 519, 519, 263, 263, 264, 264,
	359, 359, 359, 359, 359, 267, 267, 267, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 270, 270, 201,
	201, 201, 273, 274, 274, 271, 271, 272, 272, 272,
	276, 276, 275, 278, 278, 277, 358, 468, 468, 470,
	470, 470, 470, 470, 470, 470, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 540, 540, 466,
	466, 466, 467, 462, 462, 463, 463, 463, 463, 463,
	265, 265, 266, 266, 266, 266, 464, 465, 290, 290,
	396, 469, 469, 471, 471, 473, 541, 541, 541, 541,
	541, 541, 542, 542, 542, 357, 357, 356, 356, 282,
	282, 474, 474, 474, 474, 475, 475, 475, 475, 475,
	478, 477, 476, 476, 476, 476, 476, 67, 67, 67,
	321, 321, 320, 320, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 159,
	159, 216, 216, 61, 61, 61, 12, 12, 12, 520,
	520, 520, 66, 66, 66, 66, 215, 215, 215, 215,
	215, 215, 513, 513, 512, 512, 217, 217, 544, 544,
	72, 72, 72, 72, 72, 72, 72, 412, 412, 413,
	413, 60, 60, 60, 60, 60, 342, 342, 340, 340,
	339, 339, 289, 289, 395, 221, 221, 194, 194, 194,
	26, 19, 19, 24, 24, 37, 37, 40, 40, 36,
	36, 38, 38, 32, 32, 528, 528, 529, 529, 100,
	100, 105, 105, 105, 105, 105, 106, 106, 106, 106,
	107, 107, 107, 107, 115, 115, 158, 158, 158, 158,
	158, 158, 158, 42, 42, 42, 42, 54, 54, 54,
	54, 113, 546, 546, 546, 114, 114, 114, 545, 545,
	214, 214, 353, 353, 354, 354, 547, 547, 355, 355,
	355, 355, 208, 207, 209, 209, 59, 59, 59, 203,
	203, 204, 204, 205, 205, 206, 206, 548, 548, 94,
	94, 94, 161, 161, 255, 255, 255, 349, 349, 349,
	283, 283, 227, 227, 352, 352, 350, 350, 350, 350,
	318, 318, 318, 160, 160, 297, 297, 310, 310, 311,
	311, 406, 406, 312, 112, 112, 181, 181, 179, 179,
	179, 179, 179, 179, 179, 179, 186, 186, 187, 187,
	188, 188, 189, 190, 190, 190, 190, 301, 301, 191,
	191, 191, 180, 180, 180, 182, 182, 182, 182, 182,
	182, 182, 185, 185, 185, 185, 192, 192, 192, 184,
	184, 485, 485, 485, 487, 487, 489, 489, 488, 488,
	484, 484, 486, 486, 543, 543, 323, 323, 323, 280,
	281, 279, 279, 287, 287, 285, 286, 286, 288, 288,
	394, 394, 394, 195, 195, 195, 315, 315, 315, 315,
	316, 316, 345, 345, 343, 343, 343, 343, 344, 344,
	346, 346, 346, 347, 347, 348, 348, 314, 314, 375,
	375, 183, 183, 183, 294, 294, 294, 295, 295, 365,
	365, 365, 365, 365, 365, 366, 366, 364, 364, 364,
	364, 397, 397, 397, 397, 397, 397, 397, 397, 397,
	398, 399, 399, 296, 296, 400, 351, 351, 503, 503,
	503, 504, 504, 392, 392, 401, 401, 401, 401, 401,
	401, 390, 390, 391, 391, 407, 408, 408, 327, 327,
	327, 327, 325, 325, 328, 328, 328, 328, 326, 326,
	402, 402, 402, 402, 317, 317, 403, 403, 403, 403,
	404, 360, 361, 361, 414, 414, 414, 414, 416, 293,
	293, 293, 293, 293, 461, 460, 460, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 430, 430, 430, 430,
	430, 430, 430, 430, 431, 431, 431, 431, 431, 431,
	417, 417, 417, 417, 417, 421, 421, 421, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 422,
	422, 427, 427, 428, 428, 428, 423, 424, 429, 429,
	429, 429, 549, 549, 433, 433, 425, 425, 425, 425,
	425, 425, 425, 425, 425, 419, 419, 419, 426, 426,
	426, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 335, 335, 337, 337, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 369, 369, 369, 369, 370,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 479, 479, 479, 479, 479, 479,
	479, 479, 371, 371, 482, 482, 483, 483, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 490, 490, 491,
	491, 493, 493, 494, 494, 495, 496, 496, 496, 497,
	498, 498, 492, 492, 499, 499, 499, 499, 500, 500,
	501, 501, 501, 501, 501, 502, 502, 502, 502, 502,
	381, 381, 382, 382, 388, 388, 388, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 218, 218, 218, 218, 218, 306, 306,
	304, 304, 304, 307, 307, 305, 305, 303, 303, 302,
	302, 378, 378, 376, 376, 380, 380, 329, 329, 432,
	432, 432, 432, 432, 432, 432, 432, 330, 330, 330,
	338, 331, 331, 332, 332, 332, 332, 332, 372, 373,
	333, 333, 333, 374, 374, 383, 387, 387, 386, 385,
	385, 384, 384, 362, 362, 363, 363, 313, 313, 550,
	550, 309, 309, 405, 405, 405, 405, 259, 259, 298,
	298, 258, 258, 250, 250, 251, 251, 251, 251, 291,
	291, 389, 389, 434, 434, 435, 435, 436, 436, 437,
	437, 438, 439, 440, 377, 377, 237, 236, 224, 225,
	235, 234, 233, 223, 226, 230, 231, 232, 228, 229,
	243, 242, 241, 248, 239, 240, 410, 222, 252, 252,
	253, 253, 253, 254, 254, 254, 254, 219, 219, 220,
	220, 244, 244, 245, 246, 246, 238, 238, 238, 210,
	210, 210, 211, 211, 212, 212, 448, 448, 445, 445,
	445, 446, 446, 446, 447, 447, 447, 447, 444, 444,
	444, 444, 444, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 453, 453, 454, 454, 454,
	454, 454, 454, 454, 454, 454, 454, 454, 454, 454,
	454, 454, 454, 454, 455, 457, 457, 457, 457, 457,
	457, 457, 457, 457, 457, 457, 457, 457, 457, 457,
	457, 457, 457, 457, 457, 457, 457, 457, 457, 457,
	457, 457, 457, 457, 457, 457, 457, 457, 457, 457,
	457, 457, 457, 457, 457, 457, 457, 457, 457, 457,
	457, 457, 457, 457, 457, 457, 457, 457, 457, 457,
	457, 457, 457, 457, 457, 457, 457, 457, 457, 457,
	457, 457, 457, 457, 457, 457, 457, 457, 457, 457,
	457, 457, 457, 457, 457, 458, 458,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 1, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 1, 3, 1, 1, 1,
	3, 4, 6, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 5, 5, 6, 6, 4, 4, 4, 4, 3,
	4, 4, 4, 7, 7, 9, 8, 9, 5, 3,
	5, 7, 4, 12, 4, 12, 1, 3, 5, 5,
	2, 5, 3, 6, 4, 6, 5, 6, 6, 4,
	8, 3, 4, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 2, 0, 1,
	1, 0, 2, 0, 7, 10, 8, 6, 6, 6,
	9, 4, 3, 2, 2, 0, 1, 1, 1, 1,
	3, 6, 4, 6, 7, 9, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 12, 3,
	1, 0, 1, 1, 2, 2, 3, 3, 0, 5,
	7, 0, 5, 6, 2, 1, 3, 1, 3, 1,
	6, 4, 9, 7, 12, 12, 12, 9, 2, 7,
	2, 1, 1, 1, 3, 3, 0, 3, 1, 3,
	1, 1, 3, 2, 5, 0, 6, 1, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 6, 6, 6, 6, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 3, 3, 4, 3,
	4, 7, 4, 4, 4, 3, 5, 7, 4, 3,
	3, 4, 3, 3, 3, 3, 2, 0, 1, 0,
	1, 0, 3, 3, 3, 3, 3, 6, 4, 4,
	4, 3, 5, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 1, 2, 1, 2, 1, 2, 7, 3,
	2, 0, 1, 3, 3, 1, 0, 1, 2, 2,
	1, 6, 5, 1, 2, 1, 3, 2, 0, 9,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 6, 3, 4, 6, 3, 4, 6, 3, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 1, 3,
	4, 6, 3, 1, 3, 3, 5, 3, 1, 3,
	2, 2, 2, 2, 1, 2, 2, 5, 3, 3,
	6, 6, 3, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 6, 4, 7, 2, 6, 4, 7,
	2, 1, 1, 1, 3, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 2, 4, 3, 2, 2,
	1, 2, 1, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 1,
	1, 5, 3, 2, 6, 3, 3, 4, 4, 3,
	1, 3, 2, 3, 3, 1, 3, 1, 2, 1,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	2, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 2, 2, 1, 3, 3, 3, 3, 2,
	3, 3, 1, 1, 1, 1, 1, 2, 2, 5,
	7, 3, 3, 3, 4, 5, 5, 5, 3, 4,
	4, 3, 4, 4, 3, 4, 4, 5, 3, 5,
	5, 5, 7, 3, 3, 3, 4, 3, 5, 3,
	6, 5, 6, 3, 5, 6, 3, 4, 3, 4,
	3, 3, 4, 4, 5, 0, 1, 1, 3, 2,
	4, 3, 3, 5, 4, 3, 5, 3, 3, 4,
	4, 5, 3, 3, 1, 1, 0, 2, 5, 4,
	6, 4, 6, 4, 1, 0, 3, 4, 4, 5,
	7, 5, 3, 3, 2, 0, 4, 2, 3, 4,
	2, 3, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 3, 4, 3, 1, 1, 1, 2, 3, 2,
	3, 6, 6, 7, 9, 7, 9, 3, 4, 10,
	10, 3, 5, 5, 5, 3, 5, 2, 0, 1,
	1, 1, 1, 3, 2, 2, 2, 2, 1, 2,
	0, 1, 2, 1, 2, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 6, 3, 6, 6, 3, 11, 14,
	0, 2, 4, 3, 0, 4, 5, 4, 3, 3,
	1, 3, 10, 13, 0, 2, 3, 1, 1, 0,
	1, 2, 2, 2, 2, 1, 1, 0, 1, 3,
	1, 1, 1, 1, 3, 3, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 8, 0, 1,
	1, 0, 2, 1, 0, 1, 0, 9, 9, 3,
	1, 3, 7, 1, 3, 11, 3, 2, 0, 3,
	1, 2, 2, 3, 2, 6, 2, 1, 1, 2,
	8, 4, 2, 5, 5, 5, 2, 1, 3, 10,
	11, 7, 5, 3, 1, 5, 9, 7, 11, 3,
	3, 0, 2, 4, 3, 3, 1, 5, 1, 3,
	1, 2, 0, 1, 2, 2, 0, 1, 3, 3,
	2, 2, 1, 1, 1, 4, 0, 6, 0, 3,
	0, 2, 2, 2, 0, 1, 1, 2, 2, 0,
	3, 3, 2, 1, 1, 2, 2, 5, 8, 4,
	1, 0, 1, 2, 2, 1, 2, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 1, 4,
	2, 2, 2, 4, 7, 3, 4, 6, 3, 1,
	1, 1, 8, 10, 11, 5, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 3, 0, 1,
	8, 3, 6, 6, 5, 3, 4, 1, 0, 1,
	3, 16, 19, 15, 18, 4, 2, 0, 1, 0,
	1, 0, 1, 3, 3, 2, 0, 1, 1, 0,
	6, 6, 8, 6, 8, 6, 8, 6, 8, 6,
	8, 6, 8, 6, 8, 1, 0, 2, 0, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 3, 2, 3, 2, 2, 2, 2,
	2, 2, 1, 1, 0, 2, 4, 2, 1, 0,
	2, 1, 1, 0, 1, 3, 1, 0, 1, 1,
	1, 1, 2, 3, 2, 2, 8, 11, 3, 3,
	0, 3, 0, 3, 0, 3, 0, 1, 0, 6,
	7, 3, 6, 3, 1, 3, 1, 1, 4, 2,
	1, 3, 1, 3, 8, 5, 3, 4, 3, 0,
	2, 2, 0, 10, 3, 2, 0, 1, 3, 1,
	1, 3, 3, 5, 1, 1, 3, 3, 1, 2,
	4, 4, 2, 3, 5, 5, 1, 3, 1, 0,
	1, 2, 3, 2, 4, 2, 3, 0, 2, 0,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 8, 8, 8, 2, 4, 4, 4, 2,
	2, 2, 2, 3, 1, 3, 1, 2, 6, 7,
	1, 0, 1, 0, 1, 0, 1, 1, 0, 1,
	5, 1, 0, 1, 0, 3, 3, 5, 1, 3,
	3, 4, 5, 2, 2, 0, 2, 2, 1, 1,
	1, 0, 1, 0, 2, 2, 5, 4, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 2,
	0, 4, 2, 5, 3, 2, 0, 1, 3, 3,
	5, 1, 1, 1, 1, 1, 3, 2, 4, 4,
	0, 4, 4, 3, 4, 1, 5, 3, 4, 5,
	5, 1, 5, 1, 3, 2, 0, 3, 0, 2,
	3, 1, 3, 2, 0, 3, 5, 6, 4, 6,
	4, 3, 2, 1, 0, 5, 1, 0, 2, 2,
	2, 1, 1, 0, 1, 1, 1, 0, 4, 2,
	1, 2, 2, 4, 1, 3, 1, 2, 3, 2,
	2, 2, 1, 0, 2, 5, 7, 2, 1, 2,
	4, 3, 5, 0, 1, 3, 5, 1, 2, 1,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 6, 6,
	1, 1, 1, 1, 1, 3, 5, 0, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 3,
	0, 5, 4, 1, 2, 1, 4, 1, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 2, 5, 1,
	4, 2, 5, 1, 4, 3, 3, 0, 1, 2,
	4, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 1, 0, 1, 4, 1, 3,
	3, 3, 5, 2, 2, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 3, 5, 4, 6, 3, 5,
	4, 6, 4, 6, 5, 7, 3, 3, 3, 3,
	3, 4, 3, 2, 4, 2, 3, 3, 4, 3,
	4, 3, 4, 5, 6, 6, 7, 6, 7, 6,
	7, 3, 4, 4, 1, 3, 1, 3, 3, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 5, 6, 6, 7, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 6, 1, 1, 1, 1, 1,
	1, 2, 1, 5, 5, 6, 3, 1, 1, 1,
	2, 2, 2, 4, 3, 5, 6, 8, 6, 5,
	4, 3, 2, 2, 4, 1, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	6, 6, 8, 8, 6, 4, 6, 6, 6, 4,
	1, 3, 3, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 3, 4,
	3, 4, 3, 4, 3, 4, 4, 3, 6, 5,
	5, 5, 4, 4, 3, 4, 3, 5, 0, 5,
	0, 2, 0, 1, 3, 3, 2, 2, 0, 6,
	1, 0, 3, 0, 3, 3, 3, 0, 1, 4,
	2, 2, 2, 2, 2, 3, 2, 2, 3, 0,
	4, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 2, 3,
	1, 2, 3, 2, 3, 2, 3, 1, 0, 1,
	3, 1, 3, 3, 3, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 1,
	2, 3, 0, 3, 3, 2, 2, 1, 2, 2,
	3, 2, 1, 1, 1, 5, 1, 2, 4, 2,
	0, 1, 0, 3, 5, 1, 0, 1, 2, 1,
	0, 1, 3, 3, 2, 1, 1, 1, 3, 1,
	3, 3, 1, 1, 1, 1, 5, 3, 1, 1,
	3, 1, 1, 1, 1, 2, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 7, 1, 7, 5, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 503, -88, -85, -55, -53, -91, -92,
	-74, -93, -87, -111, -115, -100, -117, -158, -163, -164,
	-165, -3, -41, -43, -56, -73, -75, -86, -95, -94,
	-96, -101, -108, -104, -90, -47, -112, -116, -125, -159,
	-160, -161, 31, 30, 90, 74, 137, 114, 121, 175,
	321, 356, 367, 348, -120, -121, 384, -42, -54, -114,
	-113, 67, 115, 343, -4, -12, 28, 44, -44, -45,
	-46, 57, -61, -58, -68, -62, -533, 92, -486, -76,
	-79, -107, -537, 126, 144, 193, -97, -98, 310, -102,
	-103, 350, -105, -106, 352, 145, -49, -48, 139, -179,
	-181, -118, -119, -162, -126, -127, -128, -129, -130, -131,
	-132, -133, -134, -135, -136, -137, -155, -138, -139, -140,
	-141, -146, -142, -143, -144, -145, -147, -148, -150, -151,
	-152, -153, -154, 388, -149, 438, 46, 398, 76, 130,
	360, 21, -5, -6, -7, -8, -9, -10, -11, -14,
	-13, -57, -59, -60, -63, -64, -65, -72, -66, -67,
	-485, -77, -78, -81, -83, -84, -80, -82, 349, -182,
	-180, 500, 452, -16, -21, -22, -17, -18, -20, -23,
	-19, -24, -28, -33, -34, -30, -31, -29, -32, -35,
	-36, -37, -38, -39, -40, -26, -27, -15, -25, 470,
	478, -185, -183, -184, -192, 376, 460, 414, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, -257, 2, -239,
	-244, -245, -246, -238, -210, -455, -458, 4, -452, -456,
	150, 202, 275, 21, 22, 23, 24, 25, 26, 28,
	29, 40, 41, 43, 42, 44, 45, 46, 51, 54,
	55, 56, 57, 58, 62, 67, 68, 73, 74, 75,
	76, 77, 78, 79, 85, 82, 83, 84, 87, 89,
	90, 91, 93, 95, 96, 104, 105, 106, 107, 109,
	114, 115, 118, 113, 117, 120, 121, 124, 125, 126,
	128, 129, 131, 132, 134, 135, 137, 138, 139, 142,
	140, 421, 141, 143, 144, 145, 146, 156, 157, 158,
	163, 165, 169, 170, 173, 174, 176, 180, 182, 183,
	184, 185, 186, 192, 193, 195, 196, 197, 198, 203,
	204, 208, 205, 214, 218, 219, 220, 222, 226, 227,
	228, 229, 230, 233, 232, 235, 238, 239, 242, 243,
	244, 247, 248, 249, 250, 252, 253, 256, 254, 257,
	255, 259, 260, 261, 258, 264, 262, 266, 267, 268,
	273, 271, 269, 270, 277, 280, 190, 282, 283, 286,
	304, 290, 291, 292, 295, 296, 299, 302, 303, 305,
	306, 307, 308, 309, 310, 311, 312, 314, 315, 319,
	321, 322, 324, 326, 327, 328, 329, 330, 331, 332,
	335, 334, 336, 343, 348, 345, 346, 347, 349, 350,
	351, 352, 354, 355, 356, 358, 359, 360, 361, 363,
	365, 366, 369, 370, 385, 386, 400, 367, 368, 371,
	372, 373, 374, 375, 379, 377, 378, 380, 381, 382,
	384, 387, 388, 390, 391, 394, 396, 397, 398, 399,
	401, 404, 405, 406, 407, 402, 413, 410, 411, 415,
	416, 417, 418, 419, 420, 422, 424, 432, 433, 435,
	438, 439, 440, 430, 442, 443, 446, 447, 448, 451,
	449, 450, 452, 454, 457, 458, 459, 465, 464, 471,
	472, 474, 475, 476, 35, 47, 48, 50, 52, 63,
	64, 65, 69, 110, 111, 136, 147, 148, 159, 171,
	172, 177, 179, 187, 188, 189, 209, 210, 212, 216,
	236, 279, 281, 297, 301, 316, 317, 318, 320, 333,
	362, 392, 403, 408, 425, 426, 427, 428, 434, 436,
	460, 461, 462, 466, 473, -257, 2, -239, 288, -232,
	2, -210, -210, 321, 27, 2, 27, 315, 378, 416,
	418, 2, -511, -292, 2, 27, -213, -210, 92, 175,
	376, -232, 2, -511, -292, 24, 2, -210, 2, -214,
	2, 367, -210, 503, 87, 244, 68, 362, 381, -123,
	433, -122, 425, 371, -124, -443, 2, 264, -210, 503,
	503, 503, 27, -222, -210, 414, 202, 106, 411, 503,
	2, 414, 307, 464, 377, 106, 330, 202, 440, 371,
	-520, 358, 178, 453, -509, 2, -505, 4, -456, -452,
	-251, -250, 414, 419, 106, -246, -238, 493, -245, 503,
	503, 503, 2, 219, 220, 329, 328, 381, 382, 503,
	503, 503, 369, 2, 26, 60, 86, 89, 112, 146,
	166, 169, 293, -534, 253, 304, 327, 380, 413, 422,
	435, -519, 399, 62, 371, -518, -520, 440, 124, -339,
	106, 244, 174, 447, 418, 416, 445, 118, 208, 450,
	449, 503, 503, 26, 60, 71, 89, 124, 146, 166,
	169, -536, 304, 327, 365, 380, 413, 422, 435, 2,
	464, 377, 414, 202, 106, 440, 371, -520, 369, 370,
	325, -88, 2, 500, 31, 30, 384, -175, 414, 213,
	2, -210, 503, 503, 2, 219, 220, 369, 370, 503,
	503, 167, -505, 2, 503, 503, 2, 219, 220, 369,
	370, 213, 2, 62, 373, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 2, -156, 381, 399, 184, 44,
	68, 27, 326, 73, 308, 107, 176, 202, 203, 227,
	86, 87, -341, 43, 220, 219, 370, -525, 369, -393,
	415, 372, 378, 410, 230, 367, 433, 92, 454, 359,
	476, 330, 331, 140, 4, 106, 264, 383, 425, 244,
	366, 311, 78, 503, -543, 2, 414, -545, 2, 433,
	433, 2, -545, 2, -545, 2, -545, 2, -546, 433,
	473, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, -180, -182,
	-181, 503, 503, 503, 503, 503, 503, 503, -156, 381,
	2, 68, 27, -285, -287, 444, 211, 133, 294, -179,
	-181, 2, -485, -441, 2, -367, -459, -369, 491, 492,
	484, 412, 61, 274, 477, -381, 112, 445, 288, -458,
	-370, -383, 136, 362, -307, 8, 9, 5, 6, 7,
	-219, -371, -377, 437, 149, 278, -254, 504, 10, 500,
	-482, -181, -382, 36, 179, 59, -445, -253, -220, -417,
	212, -252, -238, -479, -480, 4, -452, -453, -446, -420,
	-428, -424, -425, -431, -210, -455, 71, 98, 99, 97,
	102, 101, 246, 245, 103, 100, 383, 453, 60, 35,
	187, 188, 216, 279, 189, 69, -481, 125, -454, 209,
	210, 392, 48, 333, 159, 111, 110, 281, 52, 50,
	461, -429, 108, 425, 426, 427, 428, 171, 172, 147,
	148, 301, 318, 408, 434, 436, 177, 236, 94, 168,
	207, 191, 215, 217, 221, 237, 240, 265, 272, 276,
	298, 300, 357, 389, -549, 462, 403, 63, 64, -487,
	334, -488, -232, -487, 503, 503, 505, 503, -279, -280,
	-281, 2, 27, 122, 500, 2, -397, 2, -398, -402,
	-181, 231, -401, 500, -399, 498, -239, 289, -483, 363,
	-479, -480, -219, -238, -253, 4, -452, -454, 502, -282,
	500, 106, 414, 72, 202, -334, 500, -210, 27, 288,
	429, 505, -379, 500, 288, 167, 291, -210, 2, 2,
	385, 2, 500, -123, 65, 433, 42, 381, -354, 2,
	-355, -207, -208, -209, -407, 218, 324, 332, 479, 476,
	-441, -527, 167, 483, 429, -441, -308, 502, 2, 2,
	2, 2, 2, -402, 187, -239, 2, -236, -444, 4,
	-452, -456, -453, -457, -455, 27, 30, 31, 32, 34,
	36, 37, 38, 39, 53, 59, 60, 66, 70, 72,
	81, 86, 92, 97, 98, 100, 99, 101, 102, 103,
	112, 116, 119, 122, 123, 127, 130, 133, 149, 151,
	164, 166, 167, 175, 178, 181, 194, 206, 211, 213,
	231, 234, 241, 245, 246, 274, 278, 284, 288, 289,
	293, 294, 313, 323, 337, 353, 376, 383, 395, 409,
	414, 423, 429, 431, 437, 444, 445, 453, 455, 463,
	467, 468, 469, 470, -458, 71, 2, -402, 187, 2,
	-241, 187, -402, -244, 2, -223, -210, 2, -235, -444,
	2, -258, 187, -239, -240, -244, -242, 2, -244, -248,
	2, -210, -450, 187, 2, -448, 10, -447, 5, 4,
	-452, -456, -453, 429, 505, -298, -250, -251, -440, 8,
	-291, -210, 502, -367, 2, -112, -99, 2, 164, -367,
	187, 2, -112, 187, 2, -367, 187, 2, -112, 187,
	2, -522, 2, -450, 2, 2, 435, 2, 89, 187,
	-210, 414, 105, 2, 347, -535, 365, 439, 464, 2,
	2, 2, 2, 2, 2, 414, -228, 2, -210, 164,
	-248, 187, 2, 377, -544, 334, -450, 187, 2, -242,
	2, -242, 202, 214, -223, 187, 2, 418, 416, 418,
	416, 167, 2, 213, 2, 213, 2, -403, 2, -404,
	-398, -239, 498, 2, 2, 2, 2, 2, 187, -210,
	414, 105, 2, 229, 2, 2, 2, 2, 2, 2,
	2, -300, 187, 2, -239, -300, 187, 2, -300, 187,
	2, -340, 2, 81, -223, 187, 2, -247, 187, 2,
	-242, -249, 187, 2, -248, -451, 187, 2, -450, -367,
	2, -112, 2, -411, 2, -410, -447, 460, -88, 500,
	-88, 500, 381, 500, -450, -239, -239, -367, 2, -112,
	-99, 2, -367, 2, -112, 2, -110, -109, -450, 500,
	167, -367, 2, -112, -99, 2, -367, 2, -112, 2,
	-175, 164, 2, 106, 414, -156, 2, 164, 455, 2,
	8, 2, -450, 372, 331, 156, 2, 385, 2, 386,
	68, -341, 476, 68, 167, 2, 167, 2, -324, 2,
	470, -508, 2, 288, 167, 2, 167, 2, 167, 2,
	167, 2, 167, 2, 328, 382, 220, 2, -112, 467,
	-367, 467, 2, -526, 164, 370, -367, 2, 432, 228,
	141, 167, -324, 2, 167, 2, 167, 2, 5, 2,
	329, 400, 2, 218, 324, 400, 2, -239, -538, 2,
	414, 464, 377, 2, 2, 82, 83, 167, 2, 167,
	2, 167, 476, 2, -317, -402, -353, -354, -353, 429,
	-285, -287, -156, 385, 2, -186, -315, -188, 164, -343,
	-344, -189, 241, 151, 284, -190, -323, 27, 122, -323,
	-323, 55, 501, 501, 11, 12, 70, 40, 491, 492,
	493, 494, 162, 495, 496, 489, 490, 488, 481, 482,
	486, 224, 225, 88, 485, 483, 80, 251, 364, 152,
	153, 154, 155, 344, 200, 33, 201, 14, 15, 16,
	32, 293, 240, 477, 191, 389, 484, 17, 18, 19,
	215, 217, 276, 47, 194, -218, -260, -367, -367, -367,
	-367, -367, -367, -367, 300, 500, -313, -362, 498, -181,
	500, 500, 500, -440, -181, -367, -381, 501, -305, 500,
	-181, -381, -376, 500, 362, 498, 500, -384, -367, 5,
	5, 5, 500, 502, -490, 471, 164, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 320, -422, 500, -421, 500, -421, -421, 465,
	-419, 500, 478, 472, 500, -419, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 465,
	505, -487, -282, 500, -309, -405, -367, 493, -309, -309,
	288, -302, -367, 94, -327, 221, 265, 168, 237, 357,
	207, -364, 504, -364, -392, 478, -181, -399, -238, -181,
	-401, 500, -397, -392, -89, -440, -73, -86, -94, -112,
	-125, -160, -161, 493, -239, 500, 167, 500, 502, -444,
	167, -291, -223, -239, -252, -253, -258, 121, -302, -505,
	-291, -213, 37, -378, -414, -415, -461, 504, -460, -417,
	-427, -423, -426, 316, 317, -446, 50, 461, -429, 212,
	4, -452, -454, 209, 210, 392, 48, 333, 159, 111,
	110, 281, 52, 425, 426, 427, 428, 171, 172, 462,
	403, 63, 64, -505, -291, 164, -443, -302, 37, -354,
	2, 112, -448, 42, -547, 505, 239, -262, 250, 273,
	183, 289, 474, 282, -449, 5, 4, -377, -389, 112,
	244, 212, -434, -436, 8, -435, 9, -437, 491, 492,
	-442, -441, 96, 502, -444, -197, 345, 384, -196, 23,
	28, 126, 458, 142, -272, 204, 307, 136, 396, 448,
	-515, -516, 368, 420, 421, 84, 282, 384, 345, 136,
	-320, -322, 37, 104, 268, 302, 56, 197, 255, 256,
	398, 466, 136, 384, 345, -516, 345, -516, -199, 396,
	448, -515, -516, 368, 345, -198, -272, 136, 504, 23,
	345, 384, 303, -531, -532, 126, 28, 345, 303, -512,
	-484, 470, 136, -109, -298, 505, 505, -444, 493, 370,
	369, 136, 136, 136, 136, 164, 2, 2, 274, 2,
	2, 2, 169, -518, -536, 2, 2, 2, -239, 187,
	-284, 288, -507, -299, 414, -239, 274, -241, 187, 2,
	-244, 464, -512, 274, 37, 500, 2, -340, 2, 202,
	-484, 274, -403, -255, -239, -398, -255, 384, -232, 37,
	-364, -364, 136, 2, 2, 2, -210, -200, 505, 58,
	351, 136, -200, 136, -200, 136, -259, 187, -258, -200,
	136, -200, 505, 136, -200, 505, 136, 505, 136, 501,
	505, -411, -411, -450, -169, 470, 167, 92, 500, 500,
	-175, -408, 505, -407, -451, -110, -450, -507, -223, 2,
	-239, 2, 414, 222, -169, -450, -450, -450, -443, 27,
	386, 2, 328, 382, 83, 386, 2, -239, 414, 106,
	202, 74, -510, 164, -506, 358, -505, -239, 106, -239,
	106, -239, 106, -239, -239, 2, 2, 2, 2, 79,
	79, 2, 44, -526, 164, 2, 432, 2, 432, 2,
	-210, -210, -210, 399, 239, -239, 164, 414, 202, 414,
	202, 106, 414, -200, 505, -214, -186, -315, -443, -316,
	-315, -187, -186, -189, 164, 332, 449, 268, 387, 226,
	-344, -343, 27, -367, -348, 158, 267, -367, -346, -369,
	491, 492, -435, -437, -301, 282, -180, -180, -180, -288,
	-394, -367, 323, 202, -416, -414, -414, -237, -444, 425,
	-367, -367, -367, -367, -367, -367, -367, -367, -367, -367,
	-367, -367, -367, -367, -367, -367, -367, -367, -367, -367,
	-367, -367, -367, -367, -367, -367, -367, -367, -367, -367,
	-367, -367, -367, -367, -367, 240, 191, 389, 47, 194,
	-367, 429, -367, -367, -367, -367, 262, 274, 278, 437,
	149, 446, 122, 282, -550, 409, 39, -374, -181, -306,
	500, -388, 34, 395, 27, -381, 500, 2, -362, -367,
	-363, -303, -302, -302, 501, 463, 27, 122, 493, 2,
	501, 505, 37, 501, -367, -303, -380, -376, -302, -387,
	-386, 467, -335, -336, 475, 258, 109, 185, 257, -337,
	375, -438, 8, -444, 493, -491, 157, 178, 500, 501,
	2, 501, 2, 501, -367, 2, 501, -367, 2, 501,
	-367, 2, 501, -367, 2, 501, 2, -367, -367, -367,
	-367, -367, -367, -367, -302, 8, -438, -438, 425, 425,
	-438, -438, -438, -430, 316, 242, 317, 173, 261, 259,
	260, 172, -430, -329, 2, -432, -302, 4, 475, 258,
	109, 185, 257, 375, 5, -329, 2, -330, 2, -367,
	-302, -331, -368, -369, 491, 492, 484, -381, -332, 2,
	-367, -303, -367, 53, 234, 431, -333, -367, 167, -302,
	-302, 2, -302, 2, -488, 37, -302, -294, 505, 167,
	37, 4, -294, -294, 500, 501, 505, -328, 182, 254,
	249, -328, -397, -327, 221, -325, 298, -325, -325, -392,
	-224, 498, 506, -444, -392, -391, -390, 37, -232, 295,
	-392, -392, 502, 501, -391, 499, -503, 500, 503, 503,
	503, 503, 503, -239, 500, -302, -444, 502, 401, 501,
	215, 215, 215, 215, 363, 501, 429, 470, -88, 290,
	501, 505, -293, 36, 498, 502, -438, 2, 2, -433,
	465, 500, 500, -336, 500, 167, -292, -527, 501, 433,
	-355, -261, 332, 394, 346, 379, 411, 8, 9, 8,
	9, 505, -444, 505, -528, 86, 429, 72, 371, -358,
	187, 72, -462, -226, 86, -463, -210, 66, 445, 323,
	166, 134, -528, 86, 323, -528, 86, 86, 384, 399,
	55, -402, 40, 40, 27, -112, 235, 167, 476, 414,
	202, 371, 429, -402, -322, -414, 104, 255, 256, 55,
	-439, -434, 491, 492, -439, 55, -439, -439, -439, 470,
	-241, -402, 371, 429, 429, 505, 40, 40, 27, -112,
	235, 167, 429, -258, -224, 459, 41, 459, 429, 41,
	371, 429, 505, 41, 41, 429, 429, -513, -215, 93,
	269, 248, 270, -216, -217, 309, 457, -450, -408, -250,
	-210, 502, -112, -367, -367, -112, -367, -112, 44, 136,
	2, -544, 229, 500, -265, 274, 167, -291, -409, 213,
	505, -299, 136, -321, -320, 274, -243, 187, 2, -239,
	136, 131, 500, 330, 2, -225, 187, -211, -210, -340,
	-203, 417, 136, -319, 455, -349, -112, 500, 112, 37,
	-349, -310, -311, -406, -312, -226, 500, -232, -210, 2,
	-239, -300, -300, -300, -200, 505, 136, -223, -242, -247,
	-248, -249, -450, -451, -88, -410, 501, 501, 501, -168,
	292, -167, -210, 5, -175, 455, -264, -359, -358, -466,
	-467, -462, 240, 202, 445, 214, 150, -283, -227, -226,
	105, -169, -109, 501, -408, -169, -169, -408, -408, -239,
	164, -169, -169, -169, 2, 2, -324, -239, -223, -258,
	-239, -291, -291, -324, -223, -324, -223, -324, -223, -112,
	-367, 2, 381, 164, 164, 502, -324, 330, 106, 414,
	307, 202, -239, -258, -239, -258, -223, -239, -402, -316,
	-187, 289, 226, 387, -346, -347, -369, 362, 363, -347,
	362, 363, 8, 9, 8, 9, -191, 391, 277, -300,
	505, -194, 38, 119, 226, -239, 476, 132, -367, -367,
	429, -550, 409, -374, 132, -367, 262, 278, 437, 149,
	446, 122, 282, 167, 500, -368, -368, 501, -304, -367,
	-367, 499, 508, 501, -287, 505, -285, -367, -302, -302,
	501, 502, -302, -291, 499, 499, 505, 501, -385, -386,
	127, -367, 429, 429, 429, 429, 500, 501, 502, -496,
	299, 500, 500, -367, 501, 501, 501, 501, 37, 505,
	505, 505, 501, 505, 505, 505, 501, 501, 501, 505,
	501, 476, 476, 501, 501, 501, 501, 505, 501, 505,
	501, 167, 501, 501, -338, 313, 501, 11, 12, 491,
	492, 493, 494, 162, 495, 496, 489, 490, 488, 481,
	482, 483, 80, 251, 364, 14, 15, 16, 215, 194,
	-368, -368, -368, 501, -372, -373, 167, 164, 37, -333,
	-333, -333, 501, 167, -302, 501, 501, 500, -489, 253,
	274, 501, -361, -360, 468, -405, -295, 2, -397, -234,
	-444, -361, -361, -302, -367, 221, 221, -326, 455, 288,
	-328, -397, -391, -440, -366, -365, 165, 38, 119, 271,
	190, -391, -232, -282, -391, -391, -444, -392, -392, -390,
	501, -504, -440, 501, -296, -400, -483, -287, 502, -444,
	-169, -157, 5, 278, -157, -157, -157, -291, 24, 314,
	-414, 498, 499, 8, -444, 500, -438, -438, -438, -291,
	167, -441, -354, 443, 77, 332, 425, -441, -196, 345,
	-226, -226, -239, -248, 274, -358, 187, -202, 274, -414,
	-233, -210, 500, 500, 226, 226, 455, -226, -233, 226,
	187, -226, 187, -233, -233, -514, 332, 283, -367, 243,
	330, 275, -197, 345, 384, -112, -112, -112, 500, -527,
	455, 121, -239, -258, -239, -248, -243, 384, 345, 272,
	-252, -439, -439, -320, 384, 345, -248, -241, -223, -198,
	-112, -112, -112, 500, -224, -199, 345, 5, 187, -226,
	5, -210, -226, -248, -530, -448, 103, 383, -532, 23,
	-226, 187, -226, -248, -530, -215, -450, 278, 451, -512,
	-166, 198, 493, -509, -210, 464, -210, -263, -266, -264,
	-226, -178, 472, 470, 136, -256, -239, 498, -169, -450,
	-239, -248, 136, -282, 274, -450, 500, 2, 2, 288,
	274, -225, 187, -204, 128, -548, 483, -223, -361, -295,
	-318, -352, 353, 288, -283, 460, -232, -318, -297, 505,
	167, 483, 502, -283, 2, -200, -200, -200, -258, -259,
	-200, -200, -200, -88, -88, -169, 505, 500, 483, 483,
	500, -450, -450, 501, 505, -239, -225, 202, 202, -231,
	-211, 501, 505, 502, 500, -169, 167, -50, 470, 414,
	504, -324, -324, -324, 381, 381, -210, -235, -223, -239,
	-236, -258, 164, 164, 449, -347, 289, 247, -394, -195,
	280, -239, 504, -367, -367, 132, 132, -367, -368, -368,
	-367, 132, 167, 500, -367, -378, 32, 32, 501, 505,
	-363, -367, 501, 463, -287, -287, 501, 493, -444, 504,
	501, -376, 130, -367, 423, 258, 185, 257, -337, 257,
	-337, -337, -438, 5, -444, 493, -497, -229, 500, -210,
	468, -286, 294, 501, -416, -414, -367, -367, -367, -367,
	-367, -438, -419, -419, -434, -434, -367, -372, -367, -416,
	-414, -368, -368, -368, -368, -368, -368, -368, -368, -368,
	-368, -368, -368, -368, -368, -368, -368, -368, -368, -368,
	122, 274, 282, -368, -373, -372, -367, -367, -414, 501,
	501, 501, -302, -88, 500, 253, -314, 178, -367, -408,
	505, -314, -314, 501, -397, -397, 500, -367, 221, 499,
	505, 507, 483, -282, 502, -390, -391, 499, 501, 505,
	501, 505, -351, 37, 501, -444, 291, 5, 8, 498,
	499, 502, -438, 501, 501, 501, -291, -367, 429, 429,
	136, 274, 457, -468, -463, 134, -367, -289, -395, -367,
	500, 500, 2, -193, 126, 384, -529, 2, 455, 136,
	-200, 136, -200, 474, 500, 500, 429, 371, 470, -302,
	-367, -170, 112, -443, -516, 504, -516, 504, 371, 429,
	371, 429, 470, -302, 429, -418, 45, 25, 274, -242,
	429, 429, -200, 136, 440, 384, -450, 278, -172, 470,
	167, 429, 2, -243, 2, 501, 501, 505, -469, 37,
	286, 500, 286, -239, -69, 470, -407, -440, -241, 37,
	136, -512, -412, -413, 5, -239, 136, 288, 274, -205,
	233, -548, -448, -484, -287, -318, -309, 275, 85, 501,
	-361, -311, -295, -367, 2, 501, -200, -167, -168, -450,
	-450, -450, -169, -175, -175, -359, -267, 500, -225, -211,
	500, -175, -227, 2, -451, -112, 292, -239, 493, -324,
	-274, -273, 307, 282, -274, 362, 362, 289, 158, 230,
	-194, -224, -367, -367, 132, 32, 32, -367, -367, -378,
	501, -367, -367, -302, 499, 5, -367, 501, 501, 8,
	-367, 501, 502, -498, -210, -367, 501, 55, 501, 501,
	505, 505, 501, 501, 501, 501, 501, 501, 501, -373,
	167, 122, 282, 500, 501, 501, -88, -375, 181, 55,
	-397, -375, -375, -326, -291, -397, -365, -224, 498, -444,
	-440, -400, 500, 502, 499, 2, 498, -444, 501, -226,
	-226, -358, 136, -470, 86, -472, 70, 150, 92, 274,
	278, 445, 323, 66, 112, 337, -540, 37, 480, 501,
	501, 505, -194, -289, -291, 274, 406, 112, 274, 112,
	105, 440, 73, -226, -233, -291, -291, -239, -248, 143,
	501, 505, 483, 2, 493, 493, -248, -243, -248, -241,
	143, 501, -224, 5, 5, 136, -221, 70, 5, -226,
	-226, -242, 105, -174, 292, -173, 129, 355, 120, -451,
	-109, -282, -270, 205, -226, -467, -464, -465, 323, -471,
	-473, 150, 323, -112, -177, -176, -210, 5, 2, 500,
	-265, 292, 499, -321, -112, -243, 501, 505, -342, 455,
	-224, -239, 136, -206, 232, -548, -448, -203, -345, -343,
	-350, 500, 288, -112, -287, 483, 501, 501, 105, 105,
	196, 135, -289, 500, 500, -291, 105, 501, -51, -52,
	202, 86, 312, -236, 414, 202, 500, 500, -194, -367,
	-367, -367, 501, -287, -444, 493, -492, 307, 501, -394,
	-367, -367, -368, 167, 500, -378, 501, -493, 469, -367,
	-302, -493, -493, 501, -440, 2, 498, 2, -358, -233,
	-237, -230, -210, 150, 187, 278, 226, 500, -368, -239,
	500, 2, 29, -541, 116, 206, -357, -542, 91, 407,
	195, -395, -195, 501, 501, 278, 278, -367, -414, 500,
	-200, -200, 501, 501, -367, 429, -443, 90, -441, 2,
	-516, -367, 429, 5, -200, -237, -200, -200, -221, 440,
	505, 500, 483, -172, 37, -271, -272, 194, -469, 226,
	-230, 226, -539, 470, 501, 505, 483, 483, -263, -178,
	-70, -71, 430, -407, -282, 5, 500, -210, 288, 500,
	-224, -548, -448, -204, -318, 123, -291, 86, -345, -374,
	-169, 500, 500, -268, 75, 87, 113, 186, 170, 203,
	399, 404, 27, -268, 501, -289, -289, 501, 500, -169,
	505, 27, 500, 27, 500, -239, -258, -302, -302, 501,
	-287, 55, 505, 501, 501, -368, -378, 501, -494, -495,
	-229, 499, 2, -472, -230, 274, 455, -367, -212, 500,
	-367, 37, 206, 117, 192, -270, 500, -356, 455, 337,
	-221, -289, 500, 500, 500, 483, 167, 500, -418, -200,
	-242, -173, -174, -450, -521, 335, -112, -178, 305, 500,
	-269, 288, 105, 268, -176, -370, -370, 501, 37, -71,
	9, 37, -289, -239, -289, 288, -448, -205, 449, 275,
	501, -233, -318, -451, -451, -356, 501, 501, -451, -52,
	-291, -291, 501, 501, -499, 330, 363, 180, -302, -288,
	501, 505, 37, 136, 182, 501, -474, 252, -210, 501,
	117, 192, -271, -291, -270, 182, -239, -517, 455, 501,
	-276, -275, -273, -278, -277, -273, -302, -441, 90, 305,
	-302, -221, 501, -524, 168, 266, -523, 5, 10, -269,
	-239, -290, -396, -226, 76, 105, -270, -112, -112, 501,
	-342, 501, -239, -206, 384, -360, 501, 501, -357, -356,
	-361, 501, 501, 501, 501, -500, -501, 47, 442, 96,
	-367, -500, -500, -495, -497, 150, 470, -475, -478, -477,
	288, 390, 168, 306, 501, 406, 466, -541, 501, 470,
	-282, -367, -356, 501, 505, 460, 501, 505, 460, 501,
	167, 501, -200, -171, 470, 44, 500, 501, 505, 322,
	118, 126, -271, -539, -356, 500, -357, 500, -310, -169,
	-169, -270, -357, -169, -502, 134, -501, 319, 163, 362,
	319, 163, -502, -502, -230, 51, -477, 288, -478, 288,
	449, 118, -361, 51, -474, -270, -275, 194, -277, 167,
	305, 139, -523, 29, -291, -396, 363, 363, 2, -178,
	-269, -357, -289, -270, -289, -361, -271, -270, 96, 178,
	424, 268, 32, 483, -476, 268, 351, 58, 384, -476,
	483, -475, 500, 500, 369, 501, 2, -269, -270, 501,
	-271, 501, -361, -271, 362, 296, -501, -367, 22, 278,
	112, -367, -541, -302, -302, 292, -201, 58, 351, -271,
	-356, -361, -357, -361, 501, 501, -168, 500, -361, -357,
	-270, -271, 429, -168, -270, -271, 500, 501, -271, -361,
	-302, -361, 501, -271,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 25, 26, 27,
	28, 443, 444, 446, 447, 448, 450, 451, 453, 455,
	457, 458, 459, 461, 462, 464, 465, 466, 467, 468,
	470, 472, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 532, 0, 1116, 1118, 1120,
	1122, 0, 664, 0, 30, 31, 0, -2, 247, 249,
	251, 0, 277, 279, 280, 282, 284, -2, 0, 379,
	380, 382, 384, -2, -2, 0, 821, 823, 0, 519,
	521, 0, 826, 828, 0, 0, 541, 542, 0, 1204,
	-2, 535, 537, 539, 604, 606, 608, 610, 612, 614,
	616, 617, 619, 621, 623, 625, 627, 629, 631, 633,
	634, 636, 638, 640, 642, 644, 646, 648, 650, 652,
	654, 656, 658, -2, 660, -2, -2, 0, -2, -2,
	-2, 1134, 34, 36, 38, 40, 42, 44, 46, 48,
	50, 330, 331, 333, 335, 337, 339, 342, 344, 346,
	1262, 386, 388, 390, 392, 394, 396, 398, 0, -2,
	1274, 0, 0, 52, 53, 54, 55, 56, 57, 58,
	59, 60, 78, 79, 80, 81, 82, 83, 84, 85,
	64, 65, 67, 68, 69, 73, 74, 76, 62, 0,
	0, 1235, 1237, 1239, 1241, -2, 0, 0, 5, 9,
	11, 13, 15, 17, 19, 21, 23, 445, 449, 452,
	454, 456, 460, 463, 469, 471, 473, 430, 431, 434,
	1894, 1911, 1912, 1913, 1916, 1917, 1918, 1919, 1920, 1921,
	2284, 2365, 2366, 1943, 1944, 1945, 1946, 1947, 1948, 1949,
	1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959,
	1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969,
	1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979,
	1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989,
	1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
	2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,
	2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019,
	2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029,
	2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039,
	2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049,
	2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059,
	2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069,
	2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079,
	2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089,
	2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099,
	2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109,
	2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119,
	2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129,
	2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139,
	2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149,
	2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159,
	2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169,
	2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179,
	2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189,
	2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199,
	2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209,
	2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219,
	2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229,
	2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239,
	2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249,
	2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259,
	2260, 2261, 2262, 2263, 2264, 432, 433, 980, 0, 497,
	495, 1887, 498, 2110, 500, 502, 373, 374, 375, 376,
	377, 378, 0, 512, 506, 511, 513, 515, 516, 517,
	518, 492, 490, 0, 512, 1946, 510, 1114, 1115, 1099,
	1100, 2147, 1141, 531, -2, -2, -2, 2250, -2, 563,
	-2, 570, 2254, 2149, 575, 0, 577, -2, 580, 1117,
	1119, 1121, 662, 663, 1897, 0, 0, 0, 0, 32,
	33, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1029, 1030, 1031, 0, 187, 189, -2, -2, -2,
	-2, 0, 0, 2183, 1987, 1855, 1913, 1858, 1853, 248,
	250, 252, 253, 0, 0, 0, 0, 0, 0, 278,
	281, 283, -2, 285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 875, 867, 868, 1070, 0, 0, 0,
	0, 381, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	310, 435, 436, 0, 1263, 1263, 0, 0, 0, 0,
	228, 219, 822, 824, 825, 0, 0, 0, 0, 520,
	522, 0, 0, 214, 827, 829, 830, 0, 0, 0,
	0, 0, 230, 0, 0, 536, 538, 540, 605, 607,
	609, 611, 613, 615, 618, 620, 622, 624, 626, 628,
	630, 632, 635, 637, 639, 641, 643, 645, 647, 649,
	651, 653, 655, 657, 659, 669, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 746, 0, 0, 0,
	-2, -2, -2, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, 672, 674, 675, 676, 0, 727,
	744, 745, 754, 661, 0, 1020, 1264, 1143, 1124, 1138,
	1143, 1126, 1127, 1128, 1129, 1130, 1135, 1137, 1131, 1132,
	1133, 35, 37, 39, 41, 43, 45, 47, 49, 51,
	332, 334, 336, 338, 340, 343, 345, 347, -2, 1233,
	1234, 387, 389, 391, 393, 395, 397, 399, 523, 0,
	525, 0, 673, -2, 0, 1268, 1268, 1268, 0, 0,
	1234, 1232, 0, 528, 529, 584, 585, 1498, 0, 0,
	0, 0, 0, 0, 0, 1752, 1584, 0, 586, -2,
	1615, 1617, 2225, 2250, 1751, 1619, 1620, 1621, 1622, 1623,
	0, 1625, 1626, 1627, 1628, 1629, 1630, 0, 1632, 0,
	1637, 1638, 1639, 0, 2232, 1832, 1907, -2, 0, 0,
	2238, 1903, 0, 1718, 1655, -2, -2, 1930, 1909, 1430,
	1431, 1432, 1433, 1434, -2, -2, 2267, 1659, 1660, 1661,
	1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 0, 2214,
	2233, 2234, 2239, 2241, 2235, 2222, 1680, 1998, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1457, 1466, -2, -2, -2, -2, -2, -2, 2226,
	2227, 2244, 2247, 2253, 2258, 2259, 2231, 2240, 2268, 2269,
	2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279,
	2280, 2281, 2282, 2283, 1458, -2, -2, -2, -2, 1251,
	2121, 1254, 980, 1252, 1236, 1238, 0, 1240, 0, 0,
	0, 1245, 1271, 1269, 0, 1312, 1249, 1250, 1330, 1330,
	1354, 0, 1335, 0, 1354, 1263, 1380, 0, 1341, 2139,
	1656, 1657, 0, 1913, 1908, -2, -2, 2265, 0, 0,
	0, 0, 0, 0, 0, 493, 0, 499, 501, 0,
	0, 0, 0, 0, 0, 0, 0, 1140, 533, 534,
	0, 558, 0, 562, 2221, -2, 1954, 2158, -2, 566,
	1144, 1148, 1149, 1150, 1151, 0, 0, 0, 0, 0,
	572, 0, 0, 559, 560, 578, 581, 0, 665, 666,
	667, 668, 61, 0, 2233, 1380, 63, 0, 1877, 1938,
	1939, 1940, 1941, 1942, 2266, 2285, 2286, 2287, 2288, 2289,
	2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299,
	2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309,
	2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319,
	2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329,
	2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339,
	2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349,
	2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359,
	2360, 2361, 2362, 2363, 2364, 2267, 66, 0, 2233, 70,
	0, 2233, 0, -2, 75, 0, 1883, 77, 0, 1880,
	86, 0, 2233, 0, 1852, -2, 0, 172, 1891, 0,
	847, 1893, -2, 2233, 1028, 231, 232, 1926, 1927, 1934,
	1935, 1936, 1937, 0, 0, 814, 1849, 1854, 815, 1873,
	816, 1859, 0, 254, 255, 256, 257, 258, 0, 259,
	2233, 261, 262, 0, 264, 265, 2233, 267, 268, 0,
	270, 0, 199, 200, 286, 287, 0, 289, 0, 2233,
	0, 0, 0, 295, -2, 311, 0, 308, 0, 299,
	300, 302, 303, 304, 305, 0, 351, 349, 1888, 0,
	842, 2233, 844, 0, 0, 1049, -2, 2233, 1025, 1055,
	1051, 0, -2, 0, 1261, 2233, 1158, 871, 872, 873,
	874, 0, 370, 0, 1171, 0, 1173, 0, 1194, 1386,
	1330, 1330, 0, 312, 313, 314, 315, 316, 2233, 0,
	0, 0, 321, 0, 323, 324, 325, 326, 327, 328,
	329, 161, 2233, 402, 428, 161, 2233, 405, 161, 2233,
	408, 0, 411, 1068, 161, 2233, 414, 161, 2233, 417,
	418, 161, 2233, 422, 423, 425, 2233, 427, 233, 1110,
	1111, 1112, 1113, 0, -2, 486, 1896, -2, 438, 0,
	439, 0, -2, 0, 245, 0, 0, 831, 832, 833,
	834, 835, 838, 839, 840, 841, 1367, 217, 215, 0,
	0, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109,
	0, 0, 543, 0, 0, 670, 671, 0, 0, 681,
	682, 683, 245, 2150, 2118, 2017, 688, 0, 691, 694,
	-2, 0, 0, 0, 0, 698, 0, 703, 704, 705,
	0, 820, 707, 0, 0, 709, 0, 713, 0, 716,
	0, 718, 0, 720, -2, -2, -2, 731, -2, 0,
	735, 0, 737, -2, 0, 746, 742, 743, 0, 0,
	0, 0, 762, 763, 0, 768, 0, 771, 772, 773,
	0, 775, 776, 0, 778, 779, 780, 781, 0, 783,
	784, -2, -2, 788, 790, 0, 797, 0, 801, 0,
	805, 0, 677, 678, 161, 1384, 1123, -2, 1125, 0,
	-2, 0, 524, 0, 527, 1291, 1219, 1216, 0, 1288,
	1289, 1220, 0, 0, 0, 1227, 0, 1266, 1267, 0,
	0, 0, 1206, 1207, 0, 0, 0, 0, 1757, 1758,
	1759, 1760, 1761, 1762, 1765, 1766, 1763, 1764, 1767, 1768,
	0, 0, 0, 0, 0, 1769, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1770, 1771, 1772,
	0, 0, 1774, 0, 1776, 0, 0, 0, 0, 0,
	0, 1563, 1565, 1840, 0, 0, 1773, 1503, 1504, 1505,
	1506, 1507, 1542, 1543, 0, 0, 1616, 1837, 1836, 1618,
	0, 1788, 0, 1631, -2, 0, 1752, 1783, 0, 0,
	1640, 1641, 1642, 0, 0, 1788, 0, 0, 1831, 1652,
	1653, 1495, 0, 0, 1720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1444, 1443, 0, 1445, 0, 1446, 1447, 1454,
	1467, 0, 0, 0, 0, 1471, 0, 0, 0, 0,
	0, 0, 0, 1812, -2, 0, 0, 0, 0, 1459,
	0, 1253, 0, 0, 1316, 1841, 1845, 1846, 1316, 1316,
	0, 0, 1789, 1377, 1377, 0, 0, 1373, 1373, 1373,
	1371, 1354, 0, 1354, 1364, 0, 1354, 1354, 0, -2,
	1335, 0, 0, 1364, 0, 1348, 474, 476, 478, 480,
	481, 482, 484, 1381, 1382, 0, 0, 0, 0, 1914,
	0, 0, 0, 0, 0, 1899, 0, 0, 0, 0,
	504, 514, 1263, 0, 1791, 1403, 1407, 0, 1409, 1410,
	1411, 1412, 1413, 0, 0, 1404, -2, 1455, 1457, 1478,
	1931, 1932, 1933, 1438, 1439, 1440, 1441, 1442, 1450, 1437,
	1437, 1437, 1448, 1477, 1469, 1477, 1473, 1424, 1425, 1460,
	1461, 1462, 1463, 0, 508, 0, 0, 0, 0, -2,
	568, 573, 574, 0, 0, 1146, 0, 1152, 595, 596,
	597, 1154, 1155, 0, 571, 598, 599, 600, 601, 602,
	603, 0, 1861, 1862, 1863, 1864, 1867, 1868, 0, 0,
	569, 588, 576, 0, 582, 87, 1096, 0, 126, 0,
	1096, 1096, 0, 0, 148, 0, 0, 0, 0, 0,
	0, 111, 122, 99, 100, 0, 0, 0, 0, 0,
	71, 1002, 0, 1005, 0, 0, 0, 0, 0, 0,
	0, 1018, 0, 0, 0, 110, 0, 105, 89, 0,
	0, 0, 112, 124, 0, 152, 154, 0, 0, 0,
	0, 0, 0, 171, 179, 0, 0, 0, 0, 1026,
	0, 1260, 0, 1367, 813, 0, 0, 1914, 1857, 0,
	0, 0, 0, 0, 0, 0, 288, 290, 0, 292,
	293, 294, 0, 1048, 0, 301, 298, 341, 951, 2233,
	0, 0, 368, 363, 0, 365, 0, 1001, 2233, 999,
	1892, 0, 1023, 0, 0, 0, 1056, 1923, 1065, 1069,
	1160, 0, 372, 0, 1174, 1176, 0, 0, 1387, 0,
	1389, 1390, 0, 318, 319, 320, 0, 400, 0, 159,
	160, 0, 403, 0, 406, 0, 161, 2233, 1847, 412,
	0, 415, 0, 0, 420, 0, 0, 0, 0, 1263,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 245, 0, 1366, 0, 1367, 245, 245, 1367, 545,
	1367, 547, 0, 0, 684, 245, 245, 245, 689, 690,
	692, 693, -2, -2, 798, 695, 696, 765, 0, 0,
	0, 764, 706, 0, 807, 2135, 818, 765, 1987, 765,
	1987, 765, 1987, 717, 719, 722, 757, 730, 734, 0,
	0, 739, 747, -2, 0, 749, 0, 751, 0, 753,
	765, 766, 769, 774, 777, 782, 0, 0, 0, 0,
	0, 0, 0, 1019, 0, 1136, 1291, 1219, 526, 1210,
	1290, 1211, 1218, 1221, 0, 0, 1223, 0, 1225, 0,
	1286, 1287, 1294, 1295, 0, 1305, 1306, 1298, 0, -2,
	0, 0, 1301, 1302, 1229, 0, 1246, 1247, 1248, 1275,
	1278, 1079, 0, 2365, 1499, 1398, 1500, 1501, 1876, 0,
	1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
	-2, -2, -2, -2, -2, -2, -2, -2, 1526, 1527,
	1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, -2,
	-2, -2, 1540, 1541, -2, 1775, 1777, 0, 1840, 0,
	-2, 0, -2, -2, -2, -2, 1560, 0, 1562, 1567,
	1569, 1571, 0, 0, 0, 0, 1839, 1581, 1823, 1824,
	0, 0, 1754, 1755, 1756, 1566, 0, 1585, 1838, 1835,
	0, 0, 1787, 1274, 1644, 0, 0, 0, 0, 1651,
	1636, 1785, 0, 1784, 0, 0, 0, 1795, 0, 1830,
	1826, 0, 1874, 1494, 1481, 1482, 1483, 1484, 1485, 1486,
	1496, 0, 1871, 1900, 1906, 1728, 0, 0, 0, 1681,
	1682, 1683, 1684, 1685, 0, 1687, 1688, 0, 1690, 1691,
	0, 1693, 1694, 0, 1696, 1697, 1698, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 0, 0, 1700, 0, 1798, -2, -2, -2,
	-2, -2, -2, -2, -2, 0, 1702, 0, 1704, 1789,
	1809, 0, 0, 1586, 0, 0, 0, 1752, 0, 1707,
	1789, 1817, 0, 0, 0, 0, 0, 1789, 0, 1822,
	0, 1714, 0, 1716, 1255, 0, 0, 1393, 0, 0,
	0, 1844, 1393, 1393, 0, 1311, 0, 0, 1374, 1375,
	1376, 0, 0, 1377, 0, 1368, 1372, 1369, 1370, 1364,
	1327, 0, 0, 1878, 1364, 1333, 1363, 0, 980, 1353,
	1364, 1364, 0, -2, 1337, 1354, 0, 0, 475, 477,
	479, 483, 485, 0, 0, 1274, -2, 0, 245, 979,
	0, 0, 0, 0, 494, 496, 0, 0, 488, 0,
	491, 0, 1394, 1397, 0, 0, 1408, 1414, 1415, 0,
	-2, 0, 0, 1479, 0, 0, 0, 0, 561, 0,
	1145, 1153, 0, 592, 0, 594, 0, 1865, 1869, 1866,
	1870, 0, 583, 0, 0, 0, 0, 1095, 0, 130,
	2233, 0, 163, 0, 0, 944, 1884, 0, 0, 0,
	0, 2004, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 96, 101, 0, 0, 0, 0,
	0, 0, 0, 0, 1003, 1004, 1006, 1013, 1015, 0,
	1009, 1872, 0, 0, 1010, 0, 1012, 1014, 1016, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 98, 102,
	0, 0, 0, 0, 1851, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1044, 1042, 1036,
	1037, 1038, 1039, 1040, 1041, 0, 0, -2, 236, 1850,
	1860, 0, 836, 837, 260, 263, 266, 269, 188, 0,
	296, 0, 0, 877, 850, 0, 0, 350, 245, 0,
	0, 364, 0, 997, 1000, 0, 980, 2233, 1035, 1890,
	0, 0, 0, 0, 1054, 0, 2233, 1879, 1922, 1923,
	1162, 1168, 0, 1393, 0, 1192, 1177, 0, 0, 0,
	1192, 1196, 1197, 1199, 1200, 0, 0, 1388, 0, 322,
	429, 161, 161, 161, 409, 0, 0, 161, 419, 161,
	424, 161, 234, 426, 437, 487, 1263, 1263, 245, 243,
	2093, 241, 238, 240, 0, 0, 0, 878, 880, 881,
	882, 883, 0, 1923, 0, 2043, 1923, 0, 1180, 1182,
	0, 212, 218, 216, 245, 0, 362, 544, 549, 679,
	0, 685, 686, 687, 724, 759, 697, 699, 700, 701,
	0, 819, 817, 708, 765, 711, 765, 714, 765, 733,
	736, 741, 748, 0, 0, 0, 761, 0, 0, 0,
	0, 0, 0, 0, 802, 803, 804, 806, 1385, 1214,
	1215, 1217, 0, 1226, 0, 0, 1300, -2, -2, 1299,
	1303, 1304, -2, -2, -2, -2, 1222, 0, 1231, 1228,
	0, 1285, 1077, 1078, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 1582, 0, -2, 1561, 1564, 1568, 1570,
	1572, 0, 0, 0, 0, 0, 0, 1778, 0, 1780,
	1583, 1833, 1836, 1750, 0, 0, 1273, 1274, 1274, 0,
	1650, 0, 1786, 0, 1793, 1794, 0, 1643, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1654,
	0, 0, 0, 0, 1686, 1689, 1692, 1695, 0, 0,
	0, 0, 1675, 0, 0, 0, 1679, 1449, 1435, 0,
	1477, 1475, 1476, 1470, 1477, 1474, 1427, 0, 1426, 0,
	1699, 0, 1701, 1703, 0, 0, 1705, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1589, 1590, 1591, 1706, 1815, 1816, 0, 0, 0, 0,
	0, 0, 1712, 0, 1821, 1713, 1715, 1263, 0, 1256,
	0, 1313, 1308, 1392, 0, 1842, 1367, 1315, 1317, 1843,
	1881, 1308, 1308, 0, 1790, 0, 0, 1358, 0, 0,
	0, 1360, 1331, 0, 0, 1325, 0, 1321, 1322, 1323,
	1324, 1332, 980, 1362, 1334, 1338, 1900, 0, 1364, 0,
	1349, 0, 1351, 1383, 0, 1343, 1346, 0, 0, 1915,
	246, 271, 275, 276, 272, 273, 274, 503, 0, 0,
	1792, 0, 1399, 0, 1405, 0, 0, 0, 0, 507,
	0, 557, -2, 590, 591, 593, 0, 589, 127, 1096,
	0, 0, 1081, 1083, 0, 132, 2233, 141, 0, 918,
	0, 1882, 0, 0, 0, 0, 0, 1098, 0, 0,
	2233, 161, 2233, 161, 144, 147, 0, 151, 149, 0,
	0, 909, 88, 1096, 0, 91, 95, 103, 0, 0,
	0, 109, 0, 0, 0, 1085, 1089, 0, 0, 1007,
	1008, 1011, 1017, 72, 0, 0, 1087, 1091, 1080, 153,
	93, 97, 104, 0, 1093, 90, 0, 175, 0, 0,
	0, 167, 0, 168, 169, 176, 177, 178, 180, 0,
	161, 2233, 0, 845, 846, 1043, 1021, 1022, 0, 1027,
	192, 0, 1856, 0, 0, 0, 0, 0, 0, 876,
	962, 0, 0, 0, 0, 356, 352, 0, 361, 367,
	366, 843, 0, 0, 0, -2, 1058, 1052, 1053, 0,
	0, 0, 2233, 1164, 1168, 0, 1167, 1261, 1274, 371,
	1169, 1192, 0, 0, 0, 1179, 1175, 1172, 1393, 0,
	0, 0, 0, 0, 317, 401, 404, 407, 1848, 161,
	413, 416, 421, 440, 441, 220, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 887, 0, 1923, 1923, 0,
	1886, 0, 0, 0, 0, 213, 0, 546, 0, 0,
	0, 710, 712, 715, 750, 752, 765, 791, 792, 904,
	0, 904, 0, 0, 1224, 0, 1297, 1230, 1279, 1280,
	0, 1079, 0, 1502, 1545, 0, 0, -2, 0, 0,
	1549, 0, 0, 0, -2, 0, 0, 0, 1779, 1781,
	0, 1835, 1645, 0, 0, 0, 1649, 1633, 1634, 0,
	1753, 1796, 1825, 1829, 0, 1487, 1488, 1489, 1490, 1491,
	1492, 1493, 0, 1875, 1901, 1905, 1726, 1727, 1731, 1889,
	0, 0, 0, 1658, 0, 0, 0, 0, 0, 0,
	0, 0, 1468, 1472, 0, 0, 1797, 1808, 1810, 1587,
	1588, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, -2, -2, -2, 1605, 1606, 1607, -2, -2, -2,
	0, 0, 0, 1811, 1813, 1814, 1818, 1819, 0, 1709,
	1710, 1711, 1820, 0, 1263, 1257, 1310, 0, 1391, 1314,
	0, 1310, 1310, 1270, 1356, 0, 0, 1379, 0, 1328,
	0, 1329, 0, 1361, 0, 1336, 1339, 1340, 1350, 0,
	1342, 0, 1345, 0, 1645, -2, 505, 489, 0, 0,
	1401, 0, 0, 1452, 1456, 1480, 509, 1365, 0, 0,
	0, 0, 162, 916, 943, 0, 0, 0, 1072, 1079,
	0, 0, 949, 134, 0, 0, 0, 142, 0, 0,
	139, 0, 146, 150, 0, 0, 0, 0, 0, 0,
	106, 107, 108, 0, 113, 0, 114, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 1076,
	0, 0, 182, 0, 0, 0, 1046, 1047, 186, 0,
	0, 0, 291, 980, 297, 898, 950, 0, 952, 0,
	851, 0, 0, 951, 348, 0, 355, 0, 1001, 0,
	0, 1024, 0, 1057, 1059, 1067, 0, 0, 0, 1166,
	1168, 0, 1159, 1160, 1293, 1170, 1190, -2, 1189, 0,
	1274, 1198, 1195, 1201, 1202, 0, 410, 242, 0, 237,
	239, 0, 223, 0, 0, 879, 884, 0, 0, 0,
	0, 0, 1181, 1183, 0, 229, 0, 680, 702, 760,
	793, 903, 0, 0, 795, 0, 0, 1296, 1283, 1284,
	1281, 1079, 1547, 1551, 0, 0, 0, 1553, -2, 0,
	1575, -2, -2, 1782, 1834, 1624, 1274, 1646, 1648, 1635,
	1828, 1497, 0, 1733, 1730, 0, 1717, 0, 1670, 1671,
	0, 0, 1674, 1676, 1677, 1678, 1436, 1429, 1428, 1807,
	0, 0, 0, 0, 1708, 1258, 0, 1722, 0, 0,
	1318, 1722, 1722, 1357, 0, 1359, 1326, 1319, 0, 1901,
	1352, 1344, 0, 0, 1395, 1400, 0, 1406, 1451, 128,
	129, 131, 0, 917, 0, 920, 0, 0, 0, 0,
	927, 928, 0, 0, 0, 0, 0, 937, 0, 966,
	976, 0, 1285, 0, 0, 0, 136, 156, 0, 0,
	1097, 0, 0, 161, 161, 0, 0, 1082, 1084, 0,
	0, 0, 0, 116, 0, 0, 1086, 1090, 1088, 1092,
	0, 0, 1094, 173, 174, 0, 161, 0, 166, 161,
	161, 1076, 0, 190, 0, 193, 0, 196, 197, 235,
	192, 0, 906, 0, 962, 954, 955, 956, 0, 961,
	963, 0, 0, 864, 0, 860, 0, 0, 853, 877,
	850, 0, 353, 998, 1032, 980, 1050, 0, 0, 0,
	0, 0, 0, 1156, 1168, 0, 1161, 1162, 1192, 1292,
	0, 0, 0, 1178, 1293, 0, 244, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 548, 550,
	0, 0, 556, 902, 0, 0, 0, 0, 1282, 1555,
	-2, -2, 1576, 0, 1902, 1904, 1274, 0, 1719, 1276,
	0, 0, -2, 0, 0, 0, 1259, 1242, 0, 1309,
	1307, 1243, 1244, 1378, 0, 1347, 0, 1402, 133, 0,
	921, 922, 1885, 924, 0, 926, 929, 0, 932, 1925,
	0, 936, 0, 945, 967, 0, 898, 0, 972, 973,
	974, 1073, 1074, 978, 0, 135, 137, 155, 1076, 0,
	138, 145, 0, 0, 92, 0, 0, 1980, 119, 117,
	115, 94, 0, 175, 181, 1075, 170, 183, 161, 0,
	0, 0, 0, 0, 0, 850, 905, 0, 953, 0,
	964, 965, 854, 0, 852, 0, 0, 0, 0, 0,
	354, 357, 0, 360, 0, 1060, 0, 1066, 0, 0,
	0, 0, 1163, 1164, 369, 0, 0, 0, 1192, 1203,
	222, 0, 0, 885, 888, 889, 890, 891, 892, 893,
	894, 895, 896, 886, 978, 0, 0, 942, 0, 227,
	0, 552, 0, 554, 0, 794, 796, 0, 0, 1647,
	1737, 0, 0, 1672, 1673, -2, 0, 1613, 1721, 1723,
	0, 1320, 1396, 919, 923, 0, 0, 0, 984, 0,
	0, 938, 0, 970, 971, 906, 0, 898, 0, 0,
	158, 0, 0, 0, 0, 0, 0, 0, 165, 184,
	1076, 194, 0, 195, 208, 0, 1033, 854, 0, 0,
	862, 0, 865, 0, 861, 858, 859, 898, 0, 358,
	359, 0, 0, 1067, 0, 0, 1165, 1166, 0, 1185,
	1186, 1188, 1193, 0, 0, 976, 978, 1393, 0, 551,
	0, 0, 799, 800, 0, 0, 0, 0, 1732, 1277,
	1614, 0, 0, 0, 0, 931, 989, 0, 0, 0,
	968, 969, 966, 0, 947, 0, 980, 140, 0, 978,
	0, 910, 0, 0, 913, 0, 0, 120, 1980, 118,
	0, 161, 191, 211, 0, 204, 205, 202, 203, 848,
	0, 0, 958, 960, 0, 866, 906, 864, 1034, 978,
	0, 976, 0, 1157, 0, 1187, 245, 245, 898, 976,
	941, 245, 553, 555, 1729, 1749, 1738, -2, 2194, 1984,
	0, 1749, 1749, 1724, 1725, 0, 0, 933, 985, 986,
	0, 981, 982, 983, 1924, 934, 935, 1393, 975, 0,
	984, 157, 898, 907, 0, 0, 908, 0, 0, 123,
	0, 125, 185, 198, 0, 0, 0, 957, 0, 0,
	0, 0, 850, 854, 976, 0, 898, 0, 1393, 224,
	225, 906, 898, 226, 1734, 0, 0, 1740, 1741, 1742,
	1743, 1744, 1735, 1736, 925, 0, 987, 0, 988, 0,
	0, 0, 946, 0, 989, 143, 911, 0, 914, 0,
	121, 0, 206, 207, 0, 959, 855, 0, 857, 854,
	863, 898, 0, 906, 0, 1184, 1393, 906, 0, 1746,
	1747, 0, 0, 0, 990, 0, 993, 994, 0, 991,
	0, 966, 0, 0, 0, 901, 856, 849, 906, 978,
	1393, 976, 939, 1393, 1745, 1748, 1739, 930, 992, 995,
	996, 977, 948, 0, 0, 0, 897, 899, 900, 1393,
	976, 1063, 898, 940, 906, 0, 209, 0, 1061, 898,
	906, 912, 0, 0, 906, 1393, 0, 210, 1393, 1064,
	0, 1062, 906, 915,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 489, 3, 495, 490, 3,
	500, 501, 493, 491, 505, 492, 502, 494, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 508, 3,
	481, 483, 482, 486, 504, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 498, 3, 499, 496, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 506, 488, 507, 484,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 485, 57824, 487,
	57825, 497, 57826, 503, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1196
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1201
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1203
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1206
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1207
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1208
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1209
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1210
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1211
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1212
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1213
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1220
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1229
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1230
		{
			return helpWith(sqllex, "ALTER")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1233
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1234
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1235
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1236
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1237
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1238
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1239
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1240
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1241
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1297
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1323
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1336
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1353
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1357
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 72:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1361
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 75:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1375
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1394
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 86:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1426
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 87:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1430
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1434
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 89:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1440
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1444
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1450
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1459
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1470
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1474
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1480
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1488
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1498
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1502
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1512
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1523
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1530
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1542
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1549
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1557
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1562
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1566
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1571
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1577
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1585
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1596
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 113:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1606
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 114:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1616
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1625
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1636
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1642
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1650
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1654
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1658
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 121:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1662
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1668
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1673
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1684
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1688
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1694
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1698
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1705
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1710
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1715
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1720
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1725
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1730
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1735
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1740
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1745
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1750
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1755
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1764
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1776
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1786
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1793
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 143:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1797
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1805
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1812
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1821
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1830
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1842
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1850
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1855
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1859
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1865
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1873
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1877
		{
			sqlVAL.union.val = nil
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1883
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1887
		{
			sqlVAL.union.val = nil
		}
	case 159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1898
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 161:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1902
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1912
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 164:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1937
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1948
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1959
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1969
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1978
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1987
		{
			return unimplementedWithIssueDetail(sqllex, 48700, "ALTER TYPE OWNER TO")
		}
	case 170:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1991
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1995
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1998
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2002
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2009
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2016
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 186:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2060
		{
			backup := &tree.Backup{
				To:              sqlDollar[4].union.partitionedBackup(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}

			tl := sqlDollar[2].union.targetListPtr()
			if tl == nil {
				backup.DescriptorCoverage = tree.AllDescriptors
			} else {
				backup.DescriptorCoverage = tree.RequestedDescriptors
				backup.Targets = *tl
			}

			sqlVAL.union.val = backup
		}
	case 187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2078
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2082
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2086
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2094
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 191:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2098
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2102
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2109
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2113
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2122
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2126
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2130
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2212
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleName:    sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.partitionedBackup(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2223
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2228
		{
			sqlVAL.union.val = nil
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2236
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2240
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2248
		{
			sqlVAL.union.val = nil
		}
	case 205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2262
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2266
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2270
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 209:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2276
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 210:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2280
		{
			sqlVAL.union.val = sqlDollar[6].union.kvOptions()
		}
	case 211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2284
		{
			sqlVAL.union.val = nil
		}
	case 212:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2310
		{
			sqlVAL.union.val = &tree.Restore{DescriptorCoverage: tree.AllDescriptors, From: sqlDollar[3].union.partitionedBackups(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = &tree.Restore{Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.partitionedBackups(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2317
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2321
		{
			sqlVAL.union.val = tree.PartitionedBackup{sqlDollar[1].union.expr()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = tree.PartitionedBackup(sqlDollar[2].union.exprs())
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2331
		{
			sqlVAL.union.val = []tree.PartitionedBackup{sqlDollar[1].union.partitionedBackup()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2335
		{
			sqlVAL.union.val = append(sqlDollar[1].union.partitionedBackups(), sqlDollar[3].union.partitionedBackup())
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2341
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2378
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2383
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2387
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2393
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2398
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2403
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2408
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2413
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2417
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 229:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2433
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2436
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2440
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2444
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2452
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2456
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2462
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2466
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2472
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2476
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2480
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2484
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2490
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2494
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2500
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2504
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2508
		{
			sqlVAL.union.val = nil
		}
	case 246:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2514
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2528
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2529
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2530
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2531
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2541
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2549
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2551
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2555
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2558
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2568
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2577
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2585
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2591
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2594
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2604
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2613
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2621
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2623
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2627
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2630
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 271:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2634
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2638
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2642
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2655
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2661
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2666
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2678
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2680
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2681
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2682
		{
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2683
		{
			return helpWith(sqllex, "CREATE")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2686
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2687
		{
			return unimplemented(sqllex, "create cast")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2688
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2689
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2690
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2691
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 292:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2692
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 293:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2693
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2694
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2695
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2696
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 297:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2697
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 298:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2698
		{
			return unimplementedWithIssue(sqllex, 41649)
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2699
		{
			return unimplemented(sqllex, "create operator")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2700
		{
			return unimplemented(sqllex, "create publication")
		}
	case 301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2701
		{
			return unimplemented(sqllex, "create rule")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2702
		{
			return unimplemented(sqllex, "create server")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2703
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2704
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2705
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2708
		{
		}
	case 307:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2709
		{
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2712
		{
		}
	case 309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2713
		{
		}
	case 310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2716
		{
		}
	case 311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2717
		{
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2720
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2721
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2722
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2723
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2724
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2725
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 318:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2726
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2727
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2728
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2729
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2730
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2731
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2732
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2733
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2734
		{
			return unimplemented(sqllex, "drop server")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2735
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2736
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2737
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2741
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2742
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2743
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2744
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2745
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2747
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2748
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2749
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2750
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2760
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2768
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2772
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2776
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2782
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2786
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2795
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2802
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2808
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2814
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2818
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2829
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2841
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2849
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2857
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2867
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2871
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2877
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2881
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2888
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2892
		{

			sqlVAL.union.val = nil
		}
	case 369:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2906
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2916
		{
			return helpWith(sqllex, "DELETE")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2919
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2920
		{
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2928
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2931
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2932
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2933
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2934
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2935
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2944
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2945
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2946
		{
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2947
		{
			return helpWith(sqllex, "DROP")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2950
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2951
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2952
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2953
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2954
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2955
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2956
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2964
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2968
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2971
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2979
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2983
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2986
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2998
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3001
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3009
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3018
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3026
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3034
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3042
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3049
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3056
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3064
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3071
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3075
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3079
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3088
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3096
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3103
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3107
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3111
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3121
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3125
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3128
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3132
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3137
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3150
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3155
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3157
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3162
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3166
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3188
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3195
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3197
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3205
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3213
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3221
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3229
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3240
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3244
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3247
		{
			return helpWith(sqllex, "DELETE")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3249
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3250
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3251
		{
			return helpWith(sqllex, "INSERT")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3254
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3256
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3259
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3264
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3265
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3266
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3271
		{
			return helpWith(sqllex, "DELETE")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3272
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3273
		{
			return helpWith(sqllex, "INSERT")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3279
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3280
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3284
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3288
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 488:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3298
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3306
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3314
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3318
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3322
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3332
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3339
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3347
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3351
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3355
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3365
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3369
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3373
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3377
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3380
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3400
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3404
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3408
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3411
		{
			return helpWith(sqllex, "GRANT")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3431
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3435
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3439
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3442
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3447
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3451
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3461
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3465
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3479
		{
			return helpWith(sqllex, "RESET")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3480
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3488
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3492
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3495
		{
			return helpWith(sqllex, "RESET")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3503
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3506
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3517
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3520
		{
			return helpWith(sqllex, "USE")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3524
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3525
		{
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3526
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3527
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3531
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3532
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3533
		{
			return helpWith(sqllex, "USE")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3549
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3564
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3567
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3585
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3593
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3597
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 549:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3601
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3607
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3611
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3617
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3621
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3625
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3629
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3633
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3644
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3647
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3657
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3673
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3677
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 564:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3682
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3699
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3702
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3704
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3707
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3711
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3730
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3737
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3742
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3747
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3752
		{
			return unimplemented(sqllex, "set from current")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3753
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3761
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3766
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3773
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3777
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3783
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3787
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3794
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3815
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3819
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3825
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3829
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3833
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3837
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3841
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3847
		{
			sqlVAL.union.val = tree.Low
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3851
		{
			sqlVAL.union.val = tree.Normal
		}
	case 597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3855
		{
			sqlVAL.union.val = tree.High
		}
	case 598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3866
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3870
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3874
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3879
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3883
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3897
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3898
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3899
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3900
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3901
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3902
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3904
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3905
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3906
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3907
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3908
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3909
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3910
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3911
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3913
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3914
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3915
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3916
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3917
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3918
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3919
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3920
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3921
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3922
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3923
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3924
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3926
		{
			return helpWith(sqllex, "SHOW")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3927
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3932
		{
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3933
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3936
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3940
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3945
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3950
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3955
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3966
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3967
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3978
		{
			sqlVAL.str = "client_encoding"
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3981
		{
			sqlVAL.str = "timezone"
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3982
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3996
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4000
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4004
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4015
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4023
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4031
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4039
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4048
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4057
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4065
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4075
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4079
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4082
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4084
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4087
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4089
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4093
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4096
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4104
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4107
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4115
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4119
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4123
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4127
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4130
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4138
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4141
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4154
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4162
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4170
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4173
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4175
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4179
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4183
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4186
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4188
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4192
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4195
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4203
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4206
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4208
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4211
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4219
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4222
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4224
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4227
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4231
		{
			sqlVAL.union.val = true
		}
	case 726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4233
		{
			sqlVAL.union.val = true
		}
	case 727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4235
		{
			sqlVAL.union.val = false
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4245
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4249
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4252
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4253
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4255
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4259
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4262
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4264
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4272
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4280
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4290
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4296
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4298
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4304
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4306
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4312
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4316
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4320
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 746:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4326
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4330
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 748:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4341
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4344
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4346
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4349
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4351
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4355
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4358
		{
			sqlVAL.union.val = true
		}
	case 755:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4359
		{
			sqlVAL.union.val = false
		}
	case 756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4367
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4370
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4372
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4375
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4383
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4393
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4403
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4406
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4409
		{
			sqlVAL.union.val = true
		}
	case 765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4410
		{
			sqlVAL.union.val = false
		}
	case 766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4417
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4421
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4424
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4431
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4438
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4445
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4449
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4456
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4466
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4469
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4477
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4482
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4487
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4491
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4499
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4503
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4507
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4523
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4531
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4534
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4538
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4542
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4546
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4554
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4562
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4576
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4580
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4591
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4599
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4605
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4614
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4619
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4623
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4626
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4630
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4637
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 808:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4642
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4762
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4766
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4770
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4809
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4813
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4818
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4822
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4830
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4839
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4846
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 820:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4850
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4863
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4864
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4865
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4875
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4876
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4877
		{
			return helpWith(sqllex, "RESUME")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4887
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4895
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4897
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4901
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4904
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4909
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4913
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4928
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4936
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4938
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4944
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4952
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4958
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4964
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4975
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4984
		{
			return unimplementedWithIssueDetail(sqllex, 50882, "ALTER SCHEMA OWNER TO")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4987
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5026
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5041
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5058
		{
			sqlVAL.union.val = nil
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5062
		{

			sqlVAL.union.val = nil
		}
	case 852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5068
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5073
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5079
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5083
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 856:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5088
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5093
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5100
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5104
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5110
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5114
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 862:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5120
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
			}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5133
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
			}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5147
		{
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5148
		{
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5149
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5167
		{
			sqlVAL.union.val = true
		}
	case 868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5168
		{
			sqlVAL.union.val = true
		}
	case 869:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5169
		{
			sqlVAL.union.val = false
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5173
		{
			sqlVAL.union.val = true
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5174
		{
			sqlVAL.union.val = true
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5175
		{
			sqlVAL.union.val = true
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5176
		{
			sqlVAL.union.val = true
		}
	case 875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5177
		{
			return unimplemented(sqllex, "create unlogged")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5182
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5188
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5192
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5198
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5204
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5208
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5217
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5221
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 887:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5227
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5232
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5233
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5234
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5235
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5236
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5237
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5238
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5239
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5245
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5261
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5266
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 901:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5271
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5277
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 904:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5284
		{
			sqlVAL.str = ""
		}
	case 906:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5291
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 907:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5297
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5304
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5311
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5317
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5321
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 912:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5327
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5337
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 915:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5347
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5361
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5372
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 918:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5376
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5382
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5386
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5390
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5394
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5402
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5406
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5424
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5428
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5432
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5436
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5440
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5447
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5451
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5455
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5465
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5469
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5473
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5480
		{
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5481
		{
		}
	case 939:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5486
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Sharded:     sqlDollar[6].union.shardedIndexDef(),
				Storing:     sqlDollar[7].union.nameList(),
				Interleave:  sqlDollar[8].union.interleave(),
				PartitionBy: sqlDollar[9].union.partitionBy(),
				Predicate:   sqlDollar[10].union.expr(),
			}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5498
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Sharded:     sqlDollar[7].union.shardedIndexDef(),
					Storing:     sqlDollar[8].union.nameList(),
					Interleave:  sqlDollar[9].union.interleave(),
					PartitionBy: sqlDollar[10].union.partitionBy(),
					Predicate:   sqlDollar[11].union.expr(),
				},
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5512
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:      tree.Name(sqlDollar[3].str),
				Columns:   sqlDollar[5].union.idxElems(),
				Inverted:  true,
				Predicate: sqlDollar[7].union.expr(),
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5523
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5535
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5540
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 945:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5546
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5552
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5564
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5576
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5587
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5594
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 951:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5598
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5604
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5614
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5629
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5636
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 957:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5642
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5653
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5657
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5663
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5669
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 962:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5673
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5683
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5689
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5694
		{
		}
	case 967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5695
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5696
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5697
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5698
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5699
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5717
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 976:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5721
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 977:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5727
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5733
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5739
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 980:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5743
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5763
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5767
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5771
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5775
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5784
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5788
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5792
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5796
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5800
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5806
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5812
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5820
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5824
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5828
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5832
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5836
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 997:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5855
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:      name,
				Temporary: sqlDollar[2].union.persistenceType(),
				Options:   sqlDollar[5].union.seqOpts(),
			}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5864
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5872
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5876
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5879
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5880
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5883
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5884
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5886
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5887
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5888
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5898
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5901
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5903
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5905
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5907
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5908
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5910
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5911
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5913
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5915
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5923
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5926
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5930
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5934
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5944
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5948
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5951
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5959
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5963
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5966
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5972
		{
			sqlVAL.union.val = true
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5976
		{

			sqlVAL.union.val = true
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5981
		{
			sqlVAL.union.val = false
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5991
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6005
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Temporary:   sqlDollar[4].union.persistenceType(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6017
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6028
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6032
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6036
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6040
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6044
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6052
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6056
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6062
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = nil
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6072
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6076
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6081
		{
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6082
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6091
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6098
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6100
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6102
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6104
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6106
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6108
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6112
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6116
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6122
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6126
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6144
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[5].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Columns:      sqlDollar[10].union.idxElems(),
				Sharded:      sqlDollar[12].union.shardedIndexDef(),
				Storing:      sqlDollar[13].union.nameList(),
				Interleave:   sqlDollar[14].union.interleave(),
				PartitionBy:  sqlDollar[15].union.partitionBy(),
				Predicate:    sqlDollar[16].union.expr(),
				Inverted:     sqlDollar[8].union.bool(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6161
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[8].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Sharded:      sqlDollar[15].union.shardedIndexDef(),
				Storing:      sqlDollar[16].union.nameList(),
				Interleave:   sqlDollar[17].union.interleave(),
				PartitionBy:  sqlDollar[18].union.partitionBy(),
				Inverted:     sqlDollar[11].union.bool(),
				Predicate:    sqlDollar[19].union.expr(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6179
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[6].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				Columns:      sqlDollar[10].union.idxElems(),
				Storing:      sqlDollar[12].union.nameList(),
				Interleave:   sqlDollar[13].union.interleave(),
				PartitionBy:  sqlDollar[14].union.partitionBy(),
				Predicate:    sqlDollar[15].union.expr(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:6195
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[9].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Storing:      sqlDollar[15].union.nameList(),
				Interleave:   sqlDollar[16].union.interleave(),
				PartitionBy:  sqlDollar[17].union.partitionBy(),
				Predicate:    sqlDollar[18].union.expr(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6211
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6215
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6230
		{
			sqlVAL.union.val = false
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6236
		{
			sqlVAL.union.val = true
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6240
		{
			sqlVAL.union.val = false
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6246
		{
			sqlVAL.union.val = true
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6250
		{
			sqlVAL.union.val = false
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6256
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6269
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6291
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6292
		{
			sqlVAL.str = ""
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6296
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6300
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6304
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6310
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6316
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6322
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6336
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6350
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6358
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6364
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6372
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6378
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6386
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6392
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6400
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6409
		{
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6410
		{
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6413
		{
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6414
		{
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6422
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6425
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6435
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6443
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6445
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6449
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6452
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6465
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6473
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6475
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6481
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6494
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6502
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6504
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6510
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6518
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6521
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6525
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6526
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6527
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6543
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6546
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6548
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6551
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6561
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6564
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6566
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6569
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6578
		{
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6579
		{
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6580
		{
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6590
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6594
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6597
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6600
		{
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6601
		{
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6605
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6609
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6615
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6619
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6625
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6629
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6642
		{
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6644
		{
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6648
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6653
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6657
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6661
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6667
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6673
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6679
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6683
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6693
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6703
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6713
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6717
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6721
		{
			sqlVAL.str = ""
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6727
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6731
		{
			sqlVAL.str = ""
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6737
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6741
		{
			sqlVAL.str = ""
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6747
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6751
		{
			sqlVAL.str = ""
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6756
		{
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6757
		{
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6769
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6783
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6794
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6801
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6805
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6814
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6825
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6829
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6833
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6839
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6843
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6863
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6867
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6871
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6877
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6880
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6881
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6883
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6889
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6894
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6898
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6915
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6927
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6930
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6939
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6943
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6956
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6959
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6963
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7006
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7012
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7016
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7031
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7035
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7039
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7043
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7047
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7051
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7055
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7059
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7064
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7065
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7068
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7069
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7073
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7083
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7092
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7093
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7094
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7095
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7099
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7102
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7103
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7104
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7109
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7144
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7145
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7146
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7181
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7195
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7207
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7211
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7220
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7229
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7244
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7251
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7263
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7267
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7272
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7288
		{
			sqlVAL.union.val = true
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7292
		{
			sqlVAL.union.val = false
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7298
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7308
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7320
		{
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7321
		{
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7325
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.union.val = nil
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7334
		{
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7335
		{
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.union.val = true
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7343
		{
			sqlVAL.union.val = false
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7347
		{
			sqlVAL.union.val = false
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7353
		{
			sqlVAL.union.val = true
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7359
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7364
		{
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7365
		{
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7369
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7373
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7379
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7385
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7389
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7396
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7400
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7406
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7427
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7432
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7444
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7461
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7481
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7482
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7486
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7490
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7494
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7508
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7512
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7520
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7527
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7549
		{
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7550
		{
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7553
		{
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7554
		{
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7571
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7575
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7581
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7585
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7604
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7607
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7609
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7621
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7624
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7626
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7632
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7636
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7642
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7646
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7651
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7656
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7662
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7667
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7674
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7679
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7690
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7694
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7698
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7706
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7737
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7747
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7757
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7765
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7774
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7778
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7782
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7793
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7817
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7823
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7834
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7838
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7844
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7846
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7850
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7856
		{
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7858
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7861
		{
			sqlVAL.union.val = nil
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7862
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7863
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7877
		{
			sqlVAL.union.val = true
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7881
		{
			sqlVAL.union.val = false
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7901
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7905
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7909
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7913
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7917
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7921
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7927
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7931
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7938
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7951
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7957
		{
			sqlVAL.str = tree.AstFull
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.str = tree.AstRight
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7969
		{
			sqlVAL.str = tree.AstInner
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7975
		{
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7976
		{
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7997
		{
			sqlVAL.str = tree.AstHash
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8001
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8009
		{
			sqlVAL.str = ""
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8022
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8026
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8031
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8033
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8038
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8043
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8057
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8061
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8067
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8073
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8083
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8093
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8100
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8112
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8125
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8133
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8134
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8144
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8152
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8154
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8162
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8163
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8175
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8182
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8191
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8231
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.IDTypeReference{ID: uint32(id)}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8236
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8243
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8244
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8247
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8248
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8250
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8251
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8252
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8253
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8254
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8257
		{
			sqlVAL.union.val = types.Geography
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8258
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8260
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8264
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8268
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8276
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8302
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8310
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8318
		{
			sqlVAL.union.val = nil
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8325
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8329
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8333
		{
			sqlVAL.union.val = types.Int2
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8337
		{
			sqlVAL.union.val = types.Int
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8341
		{
			sqlVAL.union.val = types.Float4
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8345
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8349
		{
			sqlVAL.union.val = types.Float
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8353
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8361
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8369
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8377
		{
			sqlVAL.union.val = types.Bool
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8383
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = types.Float
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8402
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8408
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8416
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8420
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8424
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8430
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8442
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8448
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8452
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8456
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8460
		{
			sqlVAL.union.val = types.String
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8469
		{
			sqlVAL.union.val = true
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8470
		{
			sqlVAL.union.val = false
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8475
		{
			sqlVAL.union.val = types.Date
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8479
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8487
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8499
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8501
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8510
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8518
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8535
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8545
		{
			sqlVAL.union.val = true
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.union.val = false
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8547
		{
			sqlVAL.union.val = false
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8551
		{
			sqlVAL.union.val = types.Interval
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8559
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8570
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8578
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8586
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8602
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8610
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8616
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8625
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8634
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8643
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8649
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8658
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8664
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.union.val = nil
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8688
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8725
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8729
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8733
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8737
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8748
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8753
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8757
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8761
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8765
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8769
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8773
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8777
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8781
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8785
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8789
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8793
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8797
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8801
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8805
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8809
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8813
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8817
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8821
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8825
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8829
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8833
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8837
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8841
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8845
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8849
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8853
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8857
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8861
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8865
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8869
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8873
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8877
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8881
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8885
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8893
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8897
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8901
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8909
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8913
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8917
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8921
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8925
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8929
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8933
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8937
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8945
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8957
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8961
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8965
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8969
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8973
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8977
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8981
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8985
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8989
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8997
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9000
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9002
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9006
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9014
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9018
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9022
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9026
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9030
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9034
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9038
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9042
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9046
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9050
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9058
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9062
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9066
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9083
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9088
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9100
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9112
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9116
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9120
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9124
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9128
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9136
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9152
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9160
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9164
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9168
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9172
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9176
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9180
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9184
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9192
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9200
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9204
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9208
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9222
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9230
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9266
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9270
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9274
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9282
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9287
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9289
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9293
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9309
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9313
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9322
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9329
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9337
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9343
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9348
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9356
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9360
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9364
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9367
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9375
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9378
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9379
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9381
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9387
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9391
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9394
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9403
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9456
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9469
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9481
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9490
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9491
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9496
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9500
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9504
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9526
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9530
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9536
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9552
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9560
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9564
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9576
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9580
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9584
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9591
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9594
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9596
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9599
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9601
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9605
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9608
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9610
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9614
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9617
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9619
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9623
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9626
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9628
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9632
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9635
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9637
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9640
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9645
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9647
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9650
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9652
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9655
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9657
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9661
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9664
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9665
		{
			return unimplemented(sqllex, "treat")
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9667
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9671
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9675
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9679
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9683
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9686
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9688
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9691
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9697
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9701
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9707
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9711
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9728
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9732
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9738
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9754
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.str = ""
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9787
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9791
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9797
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9805
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9821
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9827
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9840
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9868
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9872
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9876
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9880
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9904
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9908
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9913
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9926
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9930
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9937
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9949
		{
			sqlVAL.union.val = tree.Any
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9953
		{
			sqlVAL.union.val = tree.Some
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9957
		{
			sqlVAL.union.val = tree.All
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9964
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9965
		{
			sqlVAL.union.val = tree.Div
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9968
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9969
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9971
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9972
		{
			sqlVAL.union.val = tree.LT
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9973
		{
			sqlVAL.union.val = tree.GT
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9975
		{
			sqlVAL.union.val = tree.LE
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9976
		{
			sqlVAL.union.val = tree.GE
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9977
		{
			sqlVAL.union.val = tree.NE
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9981
		{
			sqlVAL.union.val = tree.Like
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9982
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9983
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10011
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10017
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10021
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10025
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10036
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10046
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10050
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10057
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10063
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10067
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10077
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10083
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10087
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10093
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10097
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10103
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10107
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10130
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10134
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10138
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10144
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10151
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10155
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10172
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10176
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10180
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10184
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10194
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10200
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10206
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10214
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10220
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10239
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10243
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10249
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10255
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10259
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10272
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10276
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10283
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10298
		{
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10299
		{
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10313
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10330
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10338
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10342
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10348
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10352
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10371
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10379
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10402
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10433
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10448
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10452
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10468
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10477
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10488
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10497
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10505
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10517
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10625
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10629
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10633
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10647
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10651
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10655
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10668
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10677
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10695
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10708
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10715
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10740
		{
			sqlVAL.str = ""
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10746
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10750
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
