// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:73

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}

//line sql-gen.y:675
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCONTROLJOB",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11655

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 31,
	-2, 1315,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	220, 199,
	445, 199,
	-2, 0,
	-1, 79,
	209, 1118,
	222, 1118,
	238, 337,
	336, 337,
	345, 912,
	377, 337,
	389, 912,
	430, 912,
	455, 337,
	480, 912,
	-2, 0,
	-1, 85,
	238, 341,
	-2, 0,
	-1, 86,
	123, 1315,
	215, 1315,
	465, 1315,
	466, 1315,
	-2, 0,
	-1, 102,
	140, 1286,
	158, 1286,
	171, 1286,
	218, 1286,
	251, 1286,
	295, 1286,
	305, 1286,
	460, 1286,
	-2, 1257,
	-1, 136,
	148, 797,
	237, 797,
	339, 766,
	394, 766,
	448, 797,
	-2, 0,
	-1, 138,
	4, 1317,
	21, 1317,
	22, 1317,
	23, 1317,
	24, 1317,
	25, 1317,
	26, 1317,
	28, 1317,
	29, 1317,
	35, 1317,
	40, 1317,
	41, 1317,
	42, 1317,
	43, 1317,
	44, 1317,
	45, 1317,
	46, 1317,
	47, 1317,
	48, 1317,
	49, 1317,
	51, 1317,
	52, 1317,
	53, 1317,
	54, 1317,
	56, 1317,
	57, 1317,
	58, 1317,
	59, 1317,
	60, 1317,
	61, 1317,
	65, 1317,
	66, 1317,
	67, 1317,
	68, 1317,
	70, 1317,
	71, 1317,
	72, 1317,
	76, 1317,
	77, 1317,
	78, 1317,
	79, 1317,
	80, 1317,
	81, 1317,
	82, 1317,
	85, 1317,
	86, 1317,
	87, 1317,
	88, 1317,
	90, 1317,
	92, 1317,
	93, 1317,
	94, 1317,
	95, 1317,
	96, 1317,
	98, 1317,
	100, 1317,
	101, 1317,
	109, 1317,
	110, 1317,
	111, 1317,
	112, 1317,
	114, 1317,
	115, 1317,
	116, 1317,
	118, 1317,
	119, 1317,
	120, 1317,
	122, 1317,
	123, 1317,
	125, 1317,
	126, 1317,
	127, 1317,
	130, 1317,
	131, 1317,
	132, 1317,
	134, 1317,
	135, 1317,
	137, 1317,
	138, 1317,
	139, 1317,
	141, 1317,
	142, 1317,
	143, 1317,
	144, 1317,
	145, 1317,
	146, 1317,
	147, 1317,
	148, 1317,
	149, 1317,
	150, 1317,
	151, 1317,
	152, 1317,
	153, 1317,
	154, 1317,
	155, 1317,
	157, 1317,
	163, 1317,
	164, 1317,
	165, 1317,
	166, 1317,
	170, 1317,
	172, 1317,
	176, 1317,
	177, 1317,
	178, 1317,
	179, 1317,
	180, 1317,
	181, 1317,
	183, 1317,
	184, 1317,
	186, 1317,
	187, 1317,
	189, 1317,
	190, 1317,
	191, 1317,
	192, 1317,
	193, 1317,
	194, 1317,
	195, 1317,
	196, 1317,
	197, 1317,
	199, 1317,
	200, 1317,
	202, 1317,
	203, 1317,
	204, 1317,
	205, 1317,
	209, 1317,
	210, 1317,
	211, 1317,
	212, 1317,
	215, 1317,
	216, 1317,
	217, 1317,
	219, 1317,
	221, 1317,
	222, 1317,
	224, 1317,
	226, 1317,
	227, 1317,
	228, 1317,
	230, 1317,
	234, 1317,
	235, 1317,
	236, 1317,
	237, 1317,
	238, 1317,
	239, 1317,
	241, 1317,
	242, 1317,
	243, 1317,
	245, 1317,
	246, 1317,
	248, 1317,
	249, 1317,
	252, 1317,
	253, 1317,
	254, 1317,
	257, 1317,
	258, 1317,
	259, 1317,
	260, 1317,
	262, 1317,
	263, 1317,
	264, 1317,
	265, 1317,
	266, 1317,
	267, 1317,
	268, 1317,
	269, 1317,
	270, 1317,
	271, 1317,
	272, 1317,
	274, 1317,
	276, 1317,
	277, 1317,
	278, 1317,
	279, 1317,
	280, 1317,
	281, 1317,
	282, 1317,
	284, 1317,
	286, 1317,
	288, 1317,
	290, 1317,
	291, 1317,
	292, 1317,
	293, 1317,
	294, 1317,
	297, 1317,
	300, 1317,
	301, 1317,
	302, 1317,
	303, 1317,
	306, 1317,
	307, 1317,
	308, 1317,
	310, 1317,
	312, 1317,
	313, 1317,
	314, 1317,
	315, 1317,
	316, 1317,
	317, 1317,
	318, 1317,
	319, 1317,
	320, 1317,
	321, 1317,
	322, 1317,
	323, 1317,
	325, 1317,
	326, 1317,
	327, 1317,
	328, 1317,
	329, 1317,
	330, 1317,
	331, 1317,
	332, 1317,
	333, 1317,
	335, 1317,
	337, 1317,
	338, 1317,
	339, 1317,
	340, 1317,
	341, 1317,
	342, 1317,
	343, 1317,
	344, 1317,
	345, 1317,
	346, 1317,
	347, 1317,
	349, 1317,
	355, 1317,
	357, 1317,
	358, 1317,
	359, 1317,
	360, 1317,
	361, 1317,
	362, 1317,
	363, 1317,
	364, 1317,
	366, 1317,
	367, 1317,
	368, 1317,
	370, 1317,
	371, 1317,
	372, 1317,
	373, 1317,
	374, 1317,
	375, 1317,
	377, 1317,
	378, 1317,
	379, 1317,
	380, 1317,
	381, 1317,
	382, 1317,
	383, 1317,
	384, 1317,
	385, 1317,
	386, 1317,
	387, 1317,
	389, 1317,
	390, 1317,
	391, 1317,
	392, 1317,
	393, 1317,
	394, 1317,
	396, 1317,
	397, 1317,
	398, 1317,
	399, 1317,
	400, 1317,
	402, 1317,
	403, 1317,
	404, 1317,
	405, 1317,
	406, 1317,
	407, 1317,
	408, 1317,
	410, 1317,
	412, 1317,
	413, 1317,
	414, 1317,
	415, 1317,
	416, 1317,
	417, 1317,
	418, 1317,
	419, 1317,
	420, 1317,
	421, 1317,
	422, 1317,
	423, 1317,
	424, 1317,
	426, 1317,
	427, 1317,
	429, 1317,
	431, 1317,
	432, 1317,
	433, 1317,
	434, 1317,
	435, 1317,
	436, 1317,
	437, 1317,
	438, 1317,
	440, 1317,
	441, 1317,
	442, 1317,
	443, 1317,
	444, 1317,
	446, 1317,
	448, 1317,
	449, 1317,
	450, 1317,
	451, 1317,
	452, 1317,
	454, 1317,
	455, 1317,
	456, 1317,
	458, 1317,
	459, 1317,
	462, 1317,
	463, 1317,
	464, 1317,
	465, 1317,
	466, 1317,
	467, 1317,
	468, 1317,
	470, 1317,
	473, 1317,
	474, 1317,
	475, 1317,
	476, 1317,
	477, 1317,
	478, 1317,
	480, 1317,
	481, 1317,
	482, 1317,
	487, 1317,
	488, 1317,
	489, 1317,
	490, 1317,
	491, 1317,
	492, 1317,
	-2, 0,
	-1, 139,
	1, 1191,
	226, 1191,
	335, 1191,
	343, 1191,
	495, 1191,
	519, 1191,
	-2, 0,
	-1, 141,
	1, 1191,
	519, 1191,
	-2, 0,
	-1, 142,
	1, 1191,
	519, 1191,
	-2, 0,
	-1, 143,
	1, 1191,
	445, 1191,
	519, 1191,
	-2, 0,
	-1, 172,
	140, 1285,
	158, 1285,
	171, 1285,
	218, 1285,
	251, 1285,
	295, 1285,
	305, 1285,
	460, 1285,
	-2, 1260,
	-1, 210,
	4, 1324,
	5, 1324,
	6, 1324,
	7, 1324,
	8, 1324,
	9, 1324,
	10, 1324,
	21, 1324,
	22, 1324,
	23, 1324,
	24, 1324,
	25, 1324,
	26, 1324,
	28, 1324,
	29, 1324,
	35, 1324,
	36, 1324,
	40, 1324,
	41, 1324,
	42, 1324,
	43, 1324,
	44, 1324,
	45, 1324,
	46, 1324,
	47, 1324,
	48, 1324,
	49, 1324,
	51, 1324,
	52, 1324,
	53, 1324,
	54, 1324,
	56, 1324,
	57, 1324,
	58, 1324,
	59, 1324,
	60, 1324,
	61, 1324,
	62, 1324,
	63, 1324,
	64, 1324,
	65, 1324,
	66, 1324,
	67, 1324,
	68, 1324,
	70, 1324,
	71, 1324,
	72, 1324,
	74, 1324,
	76, 1324,
	77, 1324,
	78, 1324,
	79, 1324,
	80, 1324,
	81, 1324,
	82, 1324,
	85, 1324,
	86, 1324,
	87, 1324,
	88, 1324,
	90, 1324,
	92, 1324,
	93, 1324,
	94, 1324,
	95, 1324,
	96, 1324,
	98, 1324,
	99, 1324,
	100, 1324,
	101, 1324,
	102, 1324,
	103, 1324,
	104, 1324,
	105, 1324,
	106, 1324,
	107, 1324,
	108, 1324,
	109, 1324,
	110, 1324,
	111, 1324,
	112, 1324,
	113, 1324,
	114, 1324,
	115, 1324,
	116, 1324,
	117, 1324,
	118, 1324,
	119, 1324,
	120, 1324,
	122, 1324,
	123, 1324,
	125, 1324,
	126, 1324,
	127, 1324,
	130, 1324,
	131, 1324,
	132, 1324,
	134, 1324,
	135, 1324,
	137, 1324,
	138, 1324,
	139, 1324,
	141, 1324,
	142, 1324,
	143, 1324,
	144, 1324,
	145, 1324,
	146, 1324,
	147, 1324,
	148, 1324,
	149, 1324,
	150, 1324,
	151, 1324,
	152, 1324,
	153, 1324,
	154, 1324,
	155, 1324,
	156, 1324,
	157, 1324,
	163, 1324,
	164, 1324,
	165, 1324,
	166, 1324,
	170, 1324,
	172, 1324,
	175, 1324,
	176, 1324,
	177, 1324,
	178, 1324,
	179, 1324,
	180, 1324,
	181, 1324,
	183, 1324,
	184, 1324,
	186, 1324,
	187, 1324,
	189, 1324,
	190, 1324,
	191, 1324,
	192, 1324,
	193, 1324,
	194, 1324,
	195, 1324,
	196, 1324,
	197, 1324,
	198, 1324,
	199, 1324,
	200, 1324,
	202, 1324,
	203, 1324,
	204, 1324,
	205, 1324,
	209, 1324,
	210, 1324,
	211, 1324,
	212, 1324,
	214, 1324,
	215, 1324,
	216, 1324,
	217, 1324,
	219, 1324,
	221, 1324,
	222, 1324,
	223, 1324,
	224, 1324,
	225, 1324,
	226, 1324,
	227, 1324,
	228, 1324,
	229, 1324,
	230, 1324,
	234, 1324,
	235, 1324,
	236, 1324,
	237, 1324,
	238, 1324,
	239, 1324,
	241, 1324,
	242, 1324,
	243, 1324,
	245, 1324,
	246, 1324,
	247, 1324,
	248, 1324,
	249, 1324,
	250, 1324,
	252, 1324,
	253, 1324,
	254, 1324,
	255, 1324,
	256, 1324,
	257, 1324,
	258, 1324,
	259, 1324,
	260, 1324,
	262, 1324,
	263, 1324,
	264, 1324,
	265, 1324,
	266, 1324,
	267, 1324,
	268, 1324,
	269, 1324,
	270, 1324,
	271, 1324,
	272, 1324,
	274, 1324,
	275, 1324,
	276, 1324,
	277, 1324,
	278, 1324,
	279, 1324,
	280, 1324,
	281, 1324,
	282, 1324,
	283, 1324,
	284, 1324,
	285, 1324,
	286, 1324,
	287, 1324,
	288, 1324,
	289, 1324,
	290, 1324,
	291, 1324,
	292, 1324,
	293, 1324,
	294, 1324,
	297, 1324,
	301, 1324,
	302, 1324,
	303, 1324,
	306, 1324,
	307, 1324,
	308, 1324,
	309, 1324,
	310, 1324,
	311, 1324,
	312, 1324,
	313, 1324,
	314, 1324,
	315, 1324,
	316, 1324,
	317, 1324,
	318, 1324,
	319, 1324,
	320, 1324,
	321, 1324,
	322, 1324,
	323, 1324,
	325, 1324,
	326, 1324,
	327, 1324,
	328, 1324,
	329, 1324,
	330, 1324,
	331, 1324,
	332, 1324,
	333, 1324,
	335, 1324,
	337, 1324,
	338, 1324,
	339, 1324,
	340, 1324,
	341, 1324,
	342, 1324,
	343, 1324,
	344, 1324,
	345, 1324,
	346, 1324,
	347, 1324,
	349, 1324,
	355, 1324,
	357, 1324,
	358, 1324,
	359, 1324,
	360, 1324,
	361, 1324,
	362, 1324,
	363, 1324,
	364, 1324,
	366, 1324,
	367, 1324,
	368, 1324,
	369, 1324,
	370, 1324,
	371, 1324,
	372, 1324,
	373, 1324,
	374, 1324,
	375, 1324,
	377, 1324,
	378, 1324,
	379, 1324,
	380, 1324,
	381, 1324,
	382, 1324,
	383, 1324,
	384, 1324,
	385, 1324,
	386, 1324,
	387, 1324,
	389, 1324,
	390, 1324,
	391, 1324,
	392, 1324,
	393, 1324,
	394, 1324,
	395, 1324,
	396, 1324,
	397, 1324,
	398, 1324,
	399, 1324,
	400, 1324,
	401, 1324,
	402, 1324,
	403, 1324,
	404, 1324,
	405, 1324,
	406, 1324,
	407, 1324,
	408, 1324,
	410, 1324,
	412, 1324,
	413, 1324,
	414, 1324,
	415, 1324,
	416, 1324,
	417, 1324,
	418, 1324,
	419, 1324,
	420, 1324,
	421, 1324,
	422, 1324,
	423, 1324,
	424, 1324,
	426, 1324,
	427, 1324,
	428, 1324,
	429, 1324,
	431, 1324,
	432, 1324,
	433, 1324,
	434, 1324,
	435, 1324,
	436, 1324,
	437, 1324,
	438, 1324,
	440, 1324,
	441, 1324,
	442, 1324,
	443, 1324,
	444, 1324,
	446, 1324,
	448, 1324,
	449, 1324,
	450, 1324,
	451, 1324,
	452, 1324,
	453, 1324,
	454, 1324,
	455, 1324,
	456, 1324,
	458, 1324,
	459, 1324,
	461, 1324,
	462, 1324,
	463, 1324,
	464, 1324,
	465, 1324,
	466, 1324,
	467, 1324,
	468, 1324,
	469, 1324,
	470, 1324,
	473, 1324,
	474, 1324,
	475, 1324,
	476, 1324,
	477, 1324,
	478, 1324,
	480, 1324,
	481, 1324,
	482, 1324,
	487, 1324,
	488, 1324,
	489, 1324,
	490, 1324,
	491, 1324,
	492, 1324,
	493, 1324,
	500, 1324,
	507, 1324,
	508, 1324,
	509, 1324,
	516, 1324,
	520, 1324,
	-2, 0,
	-1, 628,
	174, 2033,
	445, 2033,
	499, 2033,
	518, 2033,
	-2, 0,
	-1, 629,
	174, 2122,
	445, 2122,
	499, 2122,
	518, 2122,
	-2, 0,
	-1, 630,
	174, 2021,
	445, 2021,
	499, 2021,
	518, 2021,
	-2, 0,
	-1, 632,
	174, 2222,
	445, 2222,
	499, 2222,
	518, 2222,
	-2, 0,
	-1, 634,
	174, 2256,
	445, 2256,
	499, 2256,
	518, 2256,
	-2, 0,
	-1, 641,
	174, 2137,
	445, 2137,
	499, 2137,
	518, 2137,
	-2, 614,
	-1, 672,
	518, 1972,
	521, 1972,
	-2, 851,
	-1, 673,
	518, 1974,
	521, 1974,
	-2, 852,
	-1, 674,
	518, 1973,
	521, 1973,
	-2, 853,
	-1, 675,
	521, 1907,
	-2, 854,
	-1, 697,
	171, 213,
	-2, 0,
	-1, 719,
	480, 1095,
	-2, 913,
	-1, 759,
	4, 1116,
	21, 1116,
	22, 1116,
	23, 1116,
	24, 1116,
	25, 1116,
	26, 1116,
	28, 1116,
	29, 1116,
	35, 1116,
	40, 1116,
	41, 1116,
	42, 1116,
	43, 1116,
	44, 1116,
	45, 1116,
	46, 1116,
	47, 1116,
	48, 1116,
	49, 1116,
	51, 1116,
	52, 1116,
	53, 1116,
	54, 1116,
	56, 1116,
	57, 1116,
	58, 1116,
	59, 1116,
	60, 1116,
	61, 1116,
	65, 1116,
	66, 1116,
	67, 1116,
	68, 1116,
	70, 1116,
	71, 1116,
	72, 1116,
	76, 1116,
	77, 1116,
	78, 1116,
	79, 1116,
	80, 1116,
	81, 1116,
	82, 1116,
	85, 1116,
	86, 1116,
	87, 1116,
	88, 1116,
	90, 1116,
	92, 1116,
	93, 1116,
	94, 1116,
	95, 1116,
	96, 1116,
	98, 1116,
	100, 1116,
	101, 1116,
	109, 1116,
	110, 1116,
	111, 1116,
	112, 1116,
	114, 1116,
	115, 1116,
	116, 1116,
	118, 1116,
	119, 1116,
	120, 1116,
	122, 1116,
	123, 1116,
	125, 1116,
	126, 1116,
	127, 1116,
	130, 1116,
	131, 1116,
	132, 1116,
	134, 1116,
	135, 1116,
	137, 1116,
	138, 1116,
	139, 1116,
	141, 1116,
	142, 1116,
	143, 1116,
	144, 1116,
	145, 1116,
	146, 1116,
	147, 1116,
	148, 1116,
	149, 1116,
	150, 1116,
	151, 1116,
	152, 1116,
	153, 1116,
	154, 1116,
	155, 1116,
	157, 1116,
	163, 1116,
	164, 1116,
	165, 1116,
	166, 1116,
	170, 1116,
	172, 1116,
	176, 1116,
	177, 1116,
	178, 1116,
	179, 1116,
	180, 1116,
	181, 1116,
	183, 1116,
	184, 1116,
	186, 1116,
	187, 1116,
	189, 1116,
	190, 1116,
	191, 1116,
	192, 1116,
	193, 1116,
	194, 1116,
	195, 1116,
	196, 1116,
	197, 1116,
	199, 1116,
	200, 1116,
	202, 1116,
	203, 1116,
	204, 1116,
	205, 1116,
	209, 1116,
	210, 1116,
	211, 1116,
	212, 1116,
	215, 1116,
	216, 1116,
	217, 1116,
	219, 1116,
	221, 1116,
	222, 1116,
	224, 1116,
	226, 1116,
	227, 1116,
	228, 1116,
	230, 1116,
	234, 1116,
	235, 1116,
	236, 1116,
	237, 1116,
	238, 1116,
	239, 1116,
	241, 1116,
	242, 1116,
	243, 1116,
	245, 1116,
	246, 1116,
	248, 1116,
	249, 1116,
	252, 1116,
	253, 1116,
	254, 1116,
	257, 1116,
	258, 1116,
	259, 1116,
	260, 1116,
	262, 1116,
	263, 1116,
	264, 1116,
	265, 1116,
	266, 1116,
	267, 1116,
	268, 1116,
	269, 1116,
	270, 1116,
	271, 1116,
	272, 1116,
	274, 1116,
	276, 1116,
	277, 1116,
	278, 1116,
	279, 1116,
	280, 1116,
	281, 1116,
	282, 1116,
	284, 1116,
	286, 1116,
	288, 1116,
	290, 1116,
	291, 1116,
	292, 1116,
	293, 1116,
	294, 1116,
	297, 1116,
	301, 1116,
	302, 1116,
	303, 1116,
	306, 1116,
	307, 1116,
	308, 1116,
	310, 1116,
	312, 1116,
	313, 1116,
	314, 1116,
	315, 1116,
	316, 1116,
	317, 1116,
	318, 1116,
	319, 1116,
	320, 1116,
	321, 1116,
	322, 1116,
	323, 1116,
	325, 1116,
	326, 1116,
	327, 1116,
	328, 1116,
	329, 1116,
	330, 1116,
	331, 1116,
	332, 1116,
	333, 1116,
	335, 1116,
	337, 1116,
	338, 1116,
	339, 1116,
	340, 1116,
	341, 1116,
	342, 1116,
	343, 1116,
	344, 1116,
	345, 1116,
	346, 1116,
	347, 1116,
	349, 1116,
	355, 1116,
	357, 1116,
	358, 1116,
	359, 1116,
	360, 1116,
	361, 1116,
	362, 1116,
	363, 1116,
	364, 1116,
	366, 1116,
	367, 1116,
	368, 1116,
	370, 1116,
	371, 1116,
	372, 1116,
	373, 1116,
	374, 1116,
	375, 1116,
	377, 1116,
	378, 1116,
	379, 1116,
	380, 1116,
	381, 1116,
	382, 1116,
	383, 1116,
	384, 1116,
	385, 1116,
	386, 1116,
	387, 1116,
	389, 1116,
	390, 1116,
	391, 1116,
	392, 1116,
	393, 1116,
	394, 1116,
	396, 1116,
	397, 1116,
	398, 1116,
	399, 1116,
	400, 1116,
	402, 1116,
	403, 1116,
	404, 1116,
	405, 1116,
	406, 1116,
	407, 1116,
	408, 1116,
	410, 1116,
	412, 1116,
	413, 1116,
	414, 1116,
	415, 1116,
	416, 1116,
	417, 1116,
	418, 1116,
	419, 1116,
	420, 1116,
	421, 1116,
	422, 1116,
	423, 1116,
	424, 1116,
	426, 1116,
	427, 1116,
	429, 1116,
	431, 1116,
	432, 1116,
	433, 1116,
	434, 1116,
	435, 1116,
	436, 1116,
	437, 1116,
	438, 1116,
	440, 1116,
	441, 1116,
	442, 1116,
	443, 1116,
	444, 1116,
	446, 1116,
	448, 1116,
	449, 1116,
	450, 1116,
	451, 1116,
	452, 1116,
	454, 1116,
	455, 1116,
	456, 1116,
	458, 1116,
	459, 1116,
	462, 1116,
	463, 1116,
	464, 1116,
	465, 1116,
	466, 1116,
	467, 1116,
	468, 1116,
	470, 1116,
	473, 1116,
	474, 1116,
	475, 1116,
	476, 1116,
	477, 1116,
	478, 1116,
	480, 1116,
	481, 1116,
	482, 1116,
	487, 1116,
	488, 1116,
	489, 1116,
	490, 1116,
	491, 1116,
	492, 1116,
	-2, 0,
	-1, 838,
	339, 767,
	394, 767,
	-2, 0,
	-1, 839,
	339, 766,
	394, 766,
	-2, 710,
	-1, 843,
	1, 807,
	515, 807,
	517, 807,
	519, 807,
	-2, 0,
	-1, 844,
	1, 745,
	515, 745,
	517, 745,
	519, 745,
	-2, 0,
	-1, 845,
	1, 850,
	171, 850,
	515, 850,
	517, 850,
	519, 850,
	-2, 0,
	-1, 853,
	1, 770,
	515, 770,
	517, 770,
	519, 770,
	-2, 0,
	-1, 859,
	1, 807,
	515, 807,
	517, 807,
	519, 807,
	-2, 0,
	-1, 860,
	1, 809,
	515, 809,
	517, 809,
	519, 809,
	-2, 0,
	-1, 861,
	1, 812,
	515, 812,
	517, 812,
	519, 812,
	-2, 0,
	-1, 867,
	1, 829,
	515, 829,
	517, 829,
	519, 829,
	-2, 0,
	-1, 868,
	1, 831,
	515, 831,
	517, 831,
	519, 831,
	-2, 0,
	-1, 917,
	158, 1326,
	171, 1326,
	251, 1326,
	295, 1326,
	-2, 1264,
	-1, 932,
	158, 1325,
	171, 1325,
	251, 1325,
	295, 1325,
	-2, 1261,
	-1, 958,
	518, 1971,
	-2, 622,
	-1, 986,
	5, 1963,
	516, 1961,
	-2, 1952,
	-1, 994,
	5, 1984,
	516, 1981,
	-2, 1972,
	-1, 995,
	5, 1985,
	516, 1982,
	-2, 1973,
	-1, 1003,
	518, 1969,
	-2, 1951,
	-1, 1004,
	516, 2335,
	-2, 1970,
	-1, 1027,
	516, 2334,
	-2, 1986,
	-1, 1028,
	5, 1491,
	-2, 2305,
	-1, 1029,
	5, 1492,
	-2, 2306,
	-1, 1030,
	5, 1493,
	-2, 2320,
	-1, 1031,
	5, 1494,
	-2, 2284,
	-1, 1032,
	5, 1495,
	-2, 2318,
	-1, 1033,
	5, 1503,
	-2, 2297,
	-1, 1034,
	5, 1490,
	-2, 2293,
	-1, 1035,
	5, 1490,
	-2, 2292,
	-1, 1036,
	5, 1490,
	-2, 2311,
	-1, 1037,
	5, 1501,
	-2, 2286,
	-1, 1038,
	5, 1506,
	-2, 2285,
	-1, 1039,
	5, 1508,
	-2, 2330,
	-1, 1042,
	5, 1530,
	-2, 2323,
	-1, 1043,
	5, 1522,
	-2, 2324,
	-1, 1044,
	5, 1530,
	-2, 2325,
	-1, 1045,
	5, 1526,
	-2, 2326,
	-1, 1046,
	5, 1476,
	-2, 2298,
	-1, 1047,
	5, 1477,
	-2, 2299,
	-1, 1048,
	5, 1478,
	-2, 2287,
	-1, 1075,
	5, 1513,
	-2, 2331,
	-1, 1076,
	5, 1514,
	-2, 2321,
	-1, 1077,
	5, 1515,
	481, 1515,
	-2, 2288,
	-1, 1078,
	5, 1516,
	481, 1516,
	-2, 2289,
	-1, 1115,
	516, 1981,
	-2, 1972,
	-1, 1116,
	516, 1982,
	-2, 1973,
	-1, 1146,
	174, 2256,
	445, 2256,
	499, 2256,
	518, 2256,
	-2, 0,
	-1, 1149,
	1, 600,
	519, 600,
	-2, 1199,
	-1, 1274,
	357, 1947,
	396, 1947,
	509, 1947,
	-2, 1945,
	-1, 1286,
	520, 1947,
	-2, 1948,
	-1, 1293,
	1, 1092,
	515, 1092,
	517, 1092,
	519, 1092,
	-2, 1313,
	-1, 1347,
	345, 912,
	480, 912,
	-2, 336,
	-1, 1368,
	1, 1092,
	515, 1092,
	517, 1092,
	519, 1092,
	-2, 1313,
	-1, 1375,
	4, 1116,
	21, 1116,
	22, 1116,
	23, 1116,
	24, 1116,
	25, 1116,
	26, 1116,
	28, 1116,
	29, 1116,
	35, 1116,
	40, 1116,
	41, 1116,
	42, 1116,
	43, 1116,
	44, 1116,
	45, 1116,
	46, 1116,
	47, 1116,
	48, 1116,
	49, 1116,
	51, 1116,
	52, 1116,
	53, 1116,
	54, 1116,
	56, 1116,
	57, 1116,
	58, 1116,
	59, 1116,
	60, 1116,
	61, 1116,
	65, 1116,
	66, 1116,
	67, 1116,
	68, 1116,
	70, 1116,
	71, 1116,
	72, 1116,
	76, 1116,
	77, 1116,
	78, 1116,
	79, 1116,
	80, 1116,
	81, 1116,
	82, 1116,
	85, 1116,
	86, 1116,
	87, 1116,
	88, 1116,
	90, 1116,
	92, 1116,
	93, 1116,
	94, 1116,
	95, 1116,
	96, 1116,
	98, 1116,
	100, 1116,
	101, 1116,
	109, 1116,
	110, 1116,
	111, 1116,
	112, 1116,
	114, 1116,
	115, 1116,
	116, 1116,
	118, 1116,
	119, 1116,
	120, 1116,
	122, 1116,
	123, 1116,
	125, 1116,
	126, 1116,
	127, 1116,
	130, 1116,
	131, 1116,
	132, 1116,
	134, 1116,
	135, 1116,
	137, 1116,
	138, 1116,
	139, 1116,
	141, 1116,
	142, 1116,
	143, 1116,
	144, 1116,
	145, 1116,
	146, 1116,
	147, 1116,
	148, 1116,
	149, 1116,
	150, 1116,
	151, 1116,
	152, 1116,
	153, 1116,
	154, 1116,
	155, 1116,
	163, 1116,
	164, 1116,
	165, 1116,
	166, 1116,
	170, 1116,
	172, 1116,
	176, 1116,
	177, 1116,
	178, 1116,
	179, 1116,
	180, 1116,
	181, 1116,
	183, 1116,
	184, 1116,
	186, 1116,
	187, 1116,
	189, 1116,
	190, 1116,
	191, 1116,
	192, 1116,
	193, 1116,
	194, 1116,
	195, 1116,
	196, 1116,
	197, 1116,
	199, 1116,
	200, 1116,
	202, 1116,
	203, 1116,
	204, 1116,
	205, 1116,
	210, 1116,
	211, 1116,
	212, 1116,
	215, 1116,
	216, 1116,
	217, 1116,
	219, 1116,
	221, 1116,
	222, 1116,
	224, 1116,
	226, 1116,
	227, 1116,
	228, 1116,
	230, 1116,
	234, 1116,
	235, 1116,
	236, 1116,
	237, 1116,
	238, 1116,
	239, 1116,
	241, 1116,
	242, 1116,
	243, 1116,
	245, 1116,
	246, 1116,
	248, 1116,
	249, 1116,
	252, 1116,
	253, 1116,
	254, 1116,
	257, 1116,
	258, 1116,
	259, 1116,
	260, 1116,
	262, 1116,
	263, 1116,
	264, 1116,
	265, 1116,
	266, 1116,
	267, 1116,
	268, 1116,
	269, 1116,
	270, 1116,
	271, 1116,
	272, 1116,
	274, 1116,
	276, 1116,
	277, 1116,
	278, 1116,
	279, 1116,
	280, 1116,
	281, 1116,
	282, 1116,
	284, 1116,
	288, 1116,
	290, 1116,
	291, 1116,
	292, 1116,
	293, 1116,
	294, 1116,
	297, 1116,
	299, 1116,
	301, 1116,
	302, 1116,
	303, 1116,
	306, 1116,
	307, 1116,
	308, 1116,
	310, 1116,
	312, 1116,
	313, 1116,
	314, 1116,
	315, 1116,
	316, 1116,
	317, 1116,
	318, 1116,
	319, 1116,
	320, 1116,
	321, 1116,
	322, 1116,
	323, 1116,
	325, 1116,
	326, 1116,
	327, 1116,
	328, 1116,
	329, 1116,
	330, 1116,
	331, 1116,
	332, 1116,
	333, 1116,
	335, 1116,
	337, 1116,
	338, 1116,
	339, 1116,
	340, 1116,
	341, 1116,
	342, 1116,
	343, 1116,
	344, 1116,
	345, 1116,
	346, 1116,
	347, 1116,
	349, 1116,
	355, 1116,
	357, 1116,
	358, 1116,
	359, 1116,
	360, 1116,
	361, 1116,
	362, 1116,
	363, 1116,
	364, 1116,
	366, 1116,
	367, 1116,
	368, 1116,
	370, 1116,
	371, 1116,
	372, 1116,
	373, 1116,
	374, 1116,
	375, 1116,
	377, 1116,
	378, 1116,
	379, 1116,
	380, 1116,
	381, 1116,
	382, 1116,
	383, 1116,
	384, 1116,
	385, 1116,
	386, 1116,
	387, 1116,
	389, 1116,
	390, 1116,
	391, 1116,
	392, 1116,
	393, 1116,
	394, 1116,
	396, 1116,
	397, 1116,
	398, 1116,
	399, 1116,
	400, 1116,
	402, 1116,
	403, 1116,
	404, 1116,
	405, 1116,
	406, 1116,
	407, 1116,
	408, 1116,
	410, 1116,
	412, 1116,
	413, 1116,
	414, 1116,
	415, 1116,
	416, 1116,
	417, 1116,
	418, 1116,
	419, 1116,
	420, 1116,
	421, 1116,
	422, 1116,
	423, 1116,
	424, 1116,
	426, 1116,
	427, 1116,
	429, 1116,
	431, 1116,
	432, 1116,
	433, 1116,
	434, 1116,
	435, 1116,
	436, 1116,
	437, 1116,
	438, 1116,
	440, 1116,
	441, 1116,
	442, 1116,
	443, 1116,
	444, 1116,
	446, 1116,
	448, 1116,
	449, 1116,
	450, 1116,
	451, 1116,
	452, 1116,
	454, 1116,
	455, 1116,
	456, 1116,
	458, 1116,
	459, 1116,
	462, 1116,
	463, 1116,
	464, 1116,
	465, 1116,
	466, 1116,
	467, 1116,
	468, 1116,
	470, 1116,
	473, 1116,
	474, 1116,
	475, 1116,
	476, 1116,
	477, 1116,
	478, 1116,
	480, 1116,
	481, 1116,
	482, 1116,
	487, 1116,
	488, 1116,
	489, 1116,
	490, 1116,
	491, 1116,
	492, 1116,
	-2, 0,
	-1, 1448,
	1, 475,
	515, 475,
	517, 475,
	519, 475,
	-2, 1284,
	-1, 1451,
	4, 2329,
	11, 2329,
	12, 2329,
	14, 2329,
	15, 2329,
	16, 2329,
	17, 2329,
	18, 2329,
	19, 2329,
	21, 2329,
	22, 2329,
	23, 2329,
	24, 2329,
	25, 2329,
	26, 2329,
	28, 2329,
	29, 2329,
	32, 2329,
	33, 2329,
	35, 2329,
	37, 2329,
	40, 2329,
	41, 2329,
	42, 2329,
	43, 2329,
	44, 2329,
	45, 2329,
	46, 2329,
	47, 2329,
	48, 2329,
	49, 2329,
	51, 2329,
	52, 2329,
	53, 2329,
	54, 2329,
	56, 2329,
	57, 2329,
	58, 2329,
	59, 2329,
	60, 2329,
	61, 2329,
	65, 2329,
	66, 2329,
	67, 2329,
	68, 2329,
	70, 2329,
	71, 2329,
	72, 2329,
	73, 2329,
	76, 2329,
	77, 2329,
	78, 2329,
	79, 2329,
	80, 2329,
	81, 2329,
	82, 2329,
	83, 2329,
	85, 2329,
	86, 2329,
	87, 2329,
	88, 2329,
	90, 2329,
	91, 2329,
	92, 2329,
	93, 2329,
	94, 2329,
	95, 2329,
	96, 2329,
	98, 2329,
	99, 2329,
	100, 2329,
	101, 2329,
	109, 2329,
	110, 2329,
	111, 2329,
	112, 2329,
	114, 2329,
	115, 2329,
	116, 2329,
	118, 2329,
	119, 2329,
	120, 2329,
	122, 2329,
	123, 2329,
	125, 2329,
	126, 2329,
	127, 2329,
	130, 2329,
	131, 2329,
	132, 2329,
	134, 2329,
	135, 2329,
	137, 2329,
	138, 2329,
	139, 2329,
	141, 2329,
	142, 2329,
	143, 2329,
	144, 2329,
	145, 2329,
	146, 2329,
	147, 2329,
	148, 2329,
	149, 2329,
	150, 2329,
	151, 2329,
	152, 2329,
	153, 2329,
	154, 2329,
	155, 2329,
	159, 2329,
	160, 2329,
	161, 2329,
	162, 2329,
	163, 2329,
	164, 2329,
	165, 2329,
	166, 2329,
	169, 2329,
	170, 2329,
	172, 2329,
	175, 2329,
	176, 2329,
	177, 2329,
	178, 2329,
	179, 2329,
	180, 2329,
	181, 2329,
	183, 2329,
	184, 2329,
	186, 2329,
	187, 2329,
	189, 2329,
	190, 2329,
	191, 2329,
	192, 2329,
	193, 2329,
	194, 2329,
	195, 2329,
	196, 2329,
	197, 2329,
	198, 2329,
	199, 2329,
	200, 2329,
	201, 2329,
	202, 2329,
	203, 2329,
	204, 2329,
	205, 2329,
	207, 2329,
	208, 2329,
	210, 2329,
	211, 2329,
	212, 2329,
	214, 2329,
	215, 2329,
	216, 2329,
	217, 2329,
	219, 2329,
	221, 2329,
	222, 2329,
	223, 2329,
	224, 2329,
	225, 2329,
	226, 2329,
	227, 2329,
	228, 2329,
	229, 2329,
	230, 2329,
	232, 2329,
	233, 2329,
	234, 2329,
	235, 2329,
	236, 2329,
	237, 2329,
	238, 2329,
	239, 2329,
	241, 2329,
	242, 2329,
	243, 2329,
	245, 2329,
	246, 2329,
	247, 2329,
	248, 2329,
	249, 2329,
	250, 2329,
	252, 2329,
	253, 2329,
	254, 2329,
	257, 2329,
	258, 2329,
	259, 2329,
	260, 2329,
	261, 2329,
	262, 2329,
	263, 2329,
	264, 2329,
	265, 2329,
	266, 2329,
	267, 2329,
	268, 2329,
	269, 2329,
	270, 2329,
	271, 2329,
	272, 2329,
	274, 2329,
	275, 2329,
	276, 2329,
	277, 2329,
	278, 2329,
	279, 2329,
	280, 2329,
	281, 2329,
	282, 2329,
	284, 2329,
	287, 2329,
	288, 2329,
	290, 2329,
	291, 2329,
	292, 2329,
	293, 2329,
	294, 2329,
	297, 2329,
	301, 2329,
	302, 2329,
	303, 2329,
	304, 2329,
	306, 2329,
	307, 2329,
	308, 2329,
	310, 2329,
	312, 2329,
	313, 2329,
	314, 2329,
	315, 2329,
	316, 2329,
	317, 2329,
	318, 2329,
	319, 2329,
	320, 2329,
	321, 2329,
	322, 2329,
	323, 2329,
	325, 2329,
	326, 2329,
	327, 2329,
	328, 2329,
	329, 2329,
	330, 2329,
	331, 2329,
	332, 2329,
	333, 2329,
	335, 2329,
	337, 2329,
	338, 2329,
	339, 2329,
	340, 2329,
	341, 2329,
	342, 2329,
	343, 2329,
	344, 2329,
	345, 2329,
	346, 2329,
	347, 2329,
	349, 2329,
	355, 2329,
	356, 2329,
	357, 2329,
	358, 2329,
	359, 2329,
	360, 2329,
	361, 2329,
	362, 2329,
	363, 2329,
	364, 2329,
	366, 2329,
	367, 2329,
	368, 2329,
	369, 2329,
	370, 2329,
	371, 2329,
	372, 2329,
	373, 2329,
	374, 2329,
	375, 2329,
	376, 2329,
	377, 2329,
	378, 2329,
	379, 2329,
	380, 2329,
	381, 2329,
	382, 2329,
	383, 2329,
	384, 2329,
	385, 2329,
	386, 2329,
	387, 2329,
	389, 2329,
	390, 2329,
	391, 2329,
	392, 2329,
	393, 2329,
	394, 2329,
	396, 2329,
	397, 2329,
	398, 2329,
	399, 2329,
	400, 2329,
	401, 2329,
	402, 2329,
	403, 2329,
	404, 2329,
	405, 2329,
	406, 2329,
	407, 2329,
	408, 2329,
	410, 2329,
	412, 2329,
	413, 2329,
	414, 2329,
	415, 2329,
	416, 2329,
	417, 2329,
	418, 2329,
	419, 2329,
	420, 2329,
	421, 2329,
	422, 2329,
	423, 2329,
	424, 2329,
	426, 2329,
	427, 2329,
	429, 2329,
	431, 2329,
	432, 2329,
	433, 2329,
	434, 2329,
	435, 2329,
	436, 2329,
	437, 2329,
	438, 2329,
	440, 2329,
	441, 2329,
	442, 2329,
	443, 2329,
	444, 2329,
	446, 2329,
	448, 2329,
	449, 2329,
	450, 2329,
	451, 2329,
	452, 2329,
	454, 2329,
	455, 2329,
	456, 2329,
	458, 2329,
	459, 2329,
	462, 2329,
	463, 2329,
	464, 2329,
	465, 2329,
	466, 2329,
	467, 2329,
	468, 2329,
	470, 2329,
	473, 2329,
	474, 2329,
	475, 2329,
	476, 2329,
	477, 2329,
	478, 2329,
	480, 2329,
	481, 2329,
	482, 2329,
	487, 2329,
	488, 2329,
	489, 2329,
	490, 2329,
	491, 2329,
	492, 2329,
	493, 2329,
	494, 2329,
	497, 2329,
	498, 2329,
	499, 2329,
	500, 2329,
	501, 2329,
	502, 2329,
	504, 2329,
	505, 2329,
	506, 2329,
	507, 2329,
	508, 2329,
	509, 2329,
	510, 2329,
	511, 2329,
	512, 2329,
	514, 2329,
	517, 2329,
	518, 2329,
	520, 2329,
	521, 2329,
	-2, 0,
	-1, 1456,
	174, 2222,
	445, 2222,
	499, 2222,
	518, 2222,
	-2, 0,
	-1, 1505,
	339, 767,
	394, 767,
	-2, 0,
	-1, 1530,
	1, 762,
	515, 762,
	517, 762,
	519, 762,
	-2, 0,
	-1, 1531,
	1, 798,
	515, 798,
	517, 798,
	519, 798,
	-2, 0,
	-1, 1532,
	1, 769,
	515, 769,
	517, 769,
	519, 769,
	-2, 0,
	-1, 1534,
	1, 773,
	515, 773,
	517, 773,
	519, 773,
	-2, 0,
	-1, 1540,
	1, 780,
	515, 780,
	517, 780,
	519, 780,
	-2, 0,
	-1, 1568,
	1, 2276,
	515, 2276,
	517, 2276,
	518, 2276,
	519, 2276,
	-2, 827,
	-1, 1569,
	1, 2219,
	515, 2219,
	517, 2219,
	518, 2219,
	519, 2219,
	-2, 828,
	-1, 1584,
	1, 1194,
	519, 1194,
	-2, 1199,
	-1, 1587,
	158, 1325,
	171, 1325,
	251, 1325,
	295, 1325,
	-2, 1265,
	-1, 1681,
	140, 1286,
	158, 1286,
	171, 1286,
	218, 1286,
	251, 1286,
	295, 1286,
	305, 1286,
	460, 1286,
	-2, 1691,
	-1, 1741,
	517, 1841,
	-2, 0,
	-1, 1776,
	140, 1286,
	158, 1286,
	171, 1286,
	218, 1286,
	251, 1286,
	295, 1286,
	305, 1286,
	460, 1286,
	-2, 1406,
	-1, 1824,
	516, 1518,
	-2, 1506,
	-1, 1860,
	1, 602,
	519, 602,
	-2, 1199,
	-1, 1972,
	201, 214,
	-2, 1980,
	-1, 1973,
	201, 215,
	-2, 257,
	-1, 2100,
	1, 764,
	515, 764,
	517, 764,
	519, 764,
	-2, 0,
	-1, 2101,
	1, 800,
	515, 800,
	517, 800,
	519, 800,
	-2, 0,
	-1, 2131,
	1, 782,
	515, 782,
	517, 782,
	519, 782,
	-2, 0,
	-1, 2177,
	374, 1352,
	375, 1352,
	-2, 1551,
	-1, 2208,
	14, 0,
	15, 0,
	16, 0,
	497, 0,
	498, 0,
	499, 0,
	-2, 1571,
	-1, 2209,
	14, 0,
	15, 0,
	16, 0,
	497, 0,
	498, 0,
	499, 0,
	-2, 1572,
	-1, 2210,
	91, 0,
	232, 0,
	233, 0,
	501, 0,
	502, 0,
	-2, 1573,
	-1, 2211,
	91, 0,
	232, 0,
	233, 0,
	501, 0,
	502, 0,
	-2, 1574,
	-1, 2212,
	91, 0,
	232, 0,
	233, 0,
	501, 0,
	502, 0,
	-2, 1575,
	-1, 2213,
	91, 0,
	232, 0,
	233, 0,
	501, 0,
	502, 0,
	-2, 1576,
	-1, 2214,
	91, 0,
	232, 0,
	233, 0,
	501, 0,
	502, 0,
	-2, 1577,
	-1, 2215,
	14, 0,
	15, 0,
	16, 0,
	497, 0,
	498, 0,
	499, 0,
	-2, 1578,
	-1, 2227,
	14, 0,
	15, 0,
	16, 0,
	497, 0,
	498, 0,
	499, 0,
	-2, 1590,
	-1, 2228,
	14, 0,
	15, 0,
	16, 0,
	497, 0,
	498, 0,
	499, 0,
	-2, 1591,
	-1, 2229,
	14, 0,
	15, 0,
	16, 0,
	497, 0,
	498, 0,
	499, 0,
	-2, 1592,
	-1, 2232,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	198, 0,
	201, 0,
	250, 0,
	401, 0,
	493, 0,
	500, 0,
	-2, 1597,
	-1, 2238,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	198, 0,
	201, 0,
	250, 0,
	401, 0,
	493, 0,
	500, 0,
	-2, 1601,
	-1, 2240,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	198, 0,
	201, 0,
	250, 0,
	401, 0,
	493, 0,
	500, 0,
	-2, 1609,
	-1, 2241,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	198, 0,
	201, 0,
	250, 0,
	401, 0,
	493, 0,
	500, 0,
	-2, 1610,
	-1, 2242,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	198, 0,
	201, 0,
	250, 0,
	401, 0,
	493, 0,
	500, 0,
	-2, 1611,
	-1, 2243,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	198, 0,
	201, 0,
	250, 0,
	401, 0,
	493, 0,
	500, 0,
	-2, 1612,
	-1, 2355,
	5, 1984,
	174, 1852,
	516, 1981,
	-2, 1972,
	-1, 2356,
	174, 1853,
	-2, 2280,
	-1, 2357,
	174, 1854,
	-2, 2136,
	-1, 2358,
	174, 1855,
	-2, 2046,
	-1, 2359,
	174, 1856,
	-2, 2090,
	-1, 2360,
	174, 1857,
	-2, 2131,
	-1, 2361,
	174, 1858,
	-2, 2217,
	-1, 2362,
	174, 1859,
	-2, 1674,
	-1, 2431,
	1, 1407,
	2, 1407,
	99, 1407,
	140, 1407,
	158, 1407,
	171, 1407,
	175, 1407,
	185, 1407,
	188, 1407,
	214, 1407,
	218, 1407,
	229, 1407,
	247, 1407,
	251, 1407,
	275, 1407,
	295, 1407,
	299, 1407,
	305, 1407,
	365, 1407,
	369, 1407,
	460, 1407,
	471, 1407,
	484, 1407,
	485, 1407,
	486, 1407,
	495, 1407,
	515, 1407,
	517, 1407,
	519, 1407,
	521, 1407,
	-2, 1406,
	-1, 2444,
	516, 1953,
	-2, 1967,
	-1, 2446,
	1, 273,
	-2, 1313,
	-1, 2470,
	516, 1517,
	-2, 1507,
	-1, 2594,
	1, 1092,
	515, 1092,
	517, 1092,
	519, 1092,
	-2, 1313,
	-1, 2766,
	300, 1355,
	-2, 2319,
	-1, 2767,
	300, 1356,
	-2, 2203,
	-1, 2771,
	374, 1918,
	375, 1918,
	-2, 1672,
	-1, 2772,
	374, 1922,
	375, 1922,
	-2, 1673,
	-1, 2773,
	374, 1919,
	375, 1919,
	-2, 1672,
	-1, 2774,
	374, 1923,
	375, 1923,
	-2, 1673,
	-1, 2787,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	198, 0,
	201, 0,
	250, 0,
	401, 0,
	493, 0,
	500, 0,
	-2, 1599,
	-1, 2788,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	198, 0,
	201, 0,
	250, 0,
	401, 0,
	493, 0,
	500, 0,
	-2, 1603,
	-1, 2794,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	198, 0,
	201, 0,
	250, 0,
	401, 0,
	493, 0,
	500, 0,
	-2, 1605,
	-1, 2994,
	226, 1199,
	335, 1199,
	343, 1199,
	495, 1199,
	-2, 599,
	-1, 3128,
	1, 1092,
	515, 1092,
	517, 1092,
	519, 1092,
	-2, 1313,
	-1, 3236,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	198, 0,
	201, 0,
	250, 0,
	401, 0,
	493, 0,
	500, 0,
	-2, 1607,
	-1, 3243,
	223, 0,
	225, 0,
	287, 0,
	-2, 1626,
	-1, 3310,
	14, 0,
	15, 0,
	16, 0,
	497, 0,
	498, 0,
	499, 0,
	-2, 1655,
	-1, 3311,
	14, 0,
	15, 0,
	16, 0,
	497, 0,
	498, 0,
	499, 0,
	-2, 1656,
	-1, 3312,
	14, 0,
	15, 0,
	16, 0,
	497, 0,
	498, 0,
	499, 0,
	-2, 1657,
	-1, 3316,
	14, 0,
	15, 0,
	16, 0,
	497, 0,
	498, 0,
	499, 0,
	-2, 1661,
	-1, 3317,
	14, 0,
	15, 0,
	16, 0,
	497, 0,
	498, 0,
	499, 0,
	-2, 1662,
	-1, 3318,
	14, 0,
	15, 0,
	16, 0,
	497, 0,
	498, 0,
	499, 0,
	-2, 1663,
	-1, 3364,
	516, 1954,
	-2, 1968,
	-1, 3497,
	518, 2435,
	-2, 1243,
	-1, 3555,
	223, 0,
	225, 0,
	287, 0,
	-2, 1627,
	-1, 3558,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	198, 0,
	201, 0,
	250, 0,
	401, 0,
	493, 0,
	500, 0,
	-2, 1630,
	-1, 3559,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	198, 0,
	201, 0,
	250, 0,
	401, 0,
	493, 0,
	500, 0,
	-2, 1632,
	-1, 3769,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	198, 0,
	201, 0,
	250, 0,
	401, 0,
	493, 0,
	500, 0,
	-2, 1631,
	-1, 3770,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	198, 0,
	201, 0,
	250, 0,
	401, 0,
	493, 0,
	500, 0,
	-2, 1633,
	-1, 3781,
	223, 0,
	-2, 1664,
	-1, 3931,
	223, 0,
	-2, 1665,
	-1, 4081,
	48, 0,
	198, 0,
	250, 0,
	401, 0,
	493, 0,
	500, 0,
	-2, 2283,
}

const sqlPrivate = 57344

const sqlLast = 105502

var sqlAct = [...]int{

	244, 3974, 3953, 3694, 3813, 2921, 4091, 3859, 2685, 4080,
	4189, 1969, 4055, 4036, 3113, 3816, 3538, 4092, 3114, 4021,
	4093, 4039, 3392, 3866, 2069, 2655, 1119, 3801, 2505, 1313,
	3275, 2922, 4139, 4079, 3935, 3721, 3726, 3012, 2187, 3145,
	3676, 3758, 3489, 3875, 1434, 3708, 3431, 2078, 942, 3624,
	3898, 2255, 1296, 1811, 2053, 997, 933, 3140, 3731, 3466,
	1596, 3138, 3109, 3449, 37, 3451, 3099, 2195, 1471, 1913,
	674, 3228, 1040, 2569, 3393, 3786, 2707, 1812, 1782, 1178,
	2387, 2188, 3191, 2694, 2626, 3193, 1439, 2644, 2780, 3366,
	2617, 2964, 2696, 1108, 674, 1271, 2936, 2944, 2927, 3537,
	4, 2904, 2076, 2925, 1923, 1513, 2704, 2693, 3594, 1963,
	2656, 2507, 988, 773, 1751, 1964, 2424, 3335, 2687, 2192,
	2639, 2014, 2641, 941, 163, 2544, 2903, 1727, 2051, 669,
	3936, 2297, 2268, 1470, 2764, 3031, 1689, 2423, 2583, 1099,
	990, 2703, 1958, 1438, 2426, 238, 1942, 1949, 2040, 237,
	1896, 1899, 2405, 1279, 1162, 1584, 639, 1752, 2252, 2288,
	2627, 2176, 2157, 2971, 1414, 2384, 1886, 2159, 3111, 1435,
	1449, 2456, 1771, 1425, 1366, 2649, 995, 2003, 675, 676,
	2697, 2543, 2496, 605, 2455, 3860, 1151, 767, 2413, 2291,
	1102, 1081, 591, 2395, 1722, 1276, 613, 1298, 2269, 2351,
	1761, 1597, 1674, 2158, 2160, 2341, 1598, 172, 671, 173,
	163, 1540, 2002, 1116, 2026, 680, 101, 621, 633, 683,
	1390, 746, 1308, 1912, 719, 2181, 971, 608, 2299, 42,
	41, 39, 1104, 30, 28, 26, 616, 1079, 832, 680,
	1603, 1447, 1583, 683, 2815, 1319, 851, 3349, 2811, 3350,
	2042, 1611, 1612, 986, 1644, 1645, 1646, 1654, 1655, 1656,
	4252, 4246, 2042, 2923, 2404, 3172, 1768, 2042, 2042, 2042,
	4231, 4230, 1647, 1642, 2404, 2404, 937, 1098, 4206, 4204,
	1614, 4200, 3640, 3640, 3155, 1977, 4121, 4115, 1660, 4113,
	4122, 2404, 993, 2404, 4110, 1479, 2992, 4107, 4111, 4102,
	3154, 4108, 788, 1977, 4077, 4076, 4075, 937, 1977, 1977,
	2062, 1096, 4070, 1613, 4069, 4064, 2062, 4062, 2062, 3640,
	992, 3640, 4034, 1633, 4015, 969, 3640, 1159, 2461, 2397,
	1130, 1630, 3172, 1312, 1533, 1611, 1612, 4008, 4007, 4002,
	4001, 2404, 2404, 3640, 3640, 1135, 2779, 3995, 3967, 1082,
	1082, 1977, 3686, 2077, 3933, 3915, 3912, 1642, 2461, 3526,
	1977, 3909, 3868, 3833, 1614, 3640, 3869, 1977, 3832, 1159,
	3824, 918, 1977, 917, 1977, 2404, 3823, 3792, 2876, 2877,
	3640, 1977, 3771, 236, 3750, 3739, 2461, 2824, 2062, 3172,
	3671, 938, 3659, 2825, 2404, 3339, 2404, 1613, 4016, 1636,
	1637, 1638, 1639, 3639, 3557, 3928, 1131, 3640, 2461, 1619,
	927, 3505, 3916, 3499, 2565, 3188, 768, 3188, 932, 3464,
	3359, 3357, 3342, 3465, 3360, 3358, 2404, 3259, 3255, 3187,
	3179, 1977, 2404, 3188, 3180, 2920, 2915, 2062, 1651, 2404,
	2404, 1661, 68, 1083, 771, 770, 2914, 1641, 1643, 2867,
	2404, 2865, 2857, 2868, 2457, 2866, 2858, 2855, 69, 3339,
	1085, 2404, 1086, 1657, 1321, 1658, 1114, 2826, 2396, 3720,
	210, 2404, 1628, 1629, 73, 2710, 86, 2683, 2682, 2062,
	2480, 2065, 2065, 2460, 2404, 3686, 3660, 2461, 1977, 1977,
	1649, 2453, 2404, 1619, 3526, 2404, 2447, 1465, 1320, 3180,
	1977, 1634, 2403, 1321, 2064, 1111, 2404, 2560, 2065, 2495,
	1333, 79, 212, 1917, 1866, 2041, 2623, 1327, 2057, 1976,
	2577, 1611, 1612, 2814, 2493, 1747, 1307, 1659, 3422, 3231,
	3209, 1641, 1643, 1110, 1769, 1952, 2882, 3156, 1112, 2440,
	1515, 2439, 2438, 1642, 1648, 2437, 85, 2436, 1087, 1084,
	1614, 926, 2043, 925, 924, 923, 3157, 210, 211, 922,
	100, 921, 920, 916, 2043, 86, 97, 915, 204, 2043,
	2043, 2043, 2744, 1312, 914, 913, 205, 912, 911, 910,
	210, 909, 908, 1613, 907, 1634, 906, 905, 904, 903,
	902, 901, 900, 1633, 882, 830, 1640, 829, 174, 212,
	828, 1483, 827, 826, 825, 824, 823, 822, 68, 821,
	820, 819, 818, 817, 87, 816, 1635, 815, 814, 813,
	812, 811, 212, 810, 69, 1611, 1612, 809, 2892, 4098,
	808, 3154, 807, 806, 805, 804, 803, 802, 995, 801,
	73, 1652, 995, 1131, 791, 211, 790, 786, 785, 779,
	778, 737, 736, 696, 1614, 204, 695, 1181, 694, 686,
	685, 1181, 684, 205, 653, 1301, 1321, 1321, 211, 1636,
	1637, 1638, 1639, 645, 4078, 644, 2396, 79, 643, 1619,
	627, 210, 1155, 232, 2652, 174, 1161, 1613, 3610, 995,
	1166, 995, 1131, 995, 231, 230, 229, 228, 1301, 227,
	1635, 226, 1332, 225, 224, 223, 222, 1287, 174, 1326,
	2671, 3569, 85, 210, 221, 220, 1282, 1641, 1643, 219,
	210, 1301, 2041, 212, 218, 136, 100, 2060, 2057, 2152,
	217, 86, 97, 1650, 2294, 90, 216, 1625, 1626, 1632,
	1653, 1631, 1627, 2893, 1624, 1622, 1623, 1615, 1616, 1617,
	1618, 1620, 1621, 1469, 1318, 212, 1325, 1311, 1331, 3375,
	1446, 3577, 212, 215, 1301, 995, 214, 1372, 1374, 211,
	1301, 1634, 213, 3353, 1301, 171, 93, 3189, 96, 204,
	87, 2967, 995, 1619, 995, 2837, 2820, 205, 1301, 2635,
	1149, 2604, 2465, 2445, 995, 1174, 995, 1268, 1273, 1772,
	1730, 211, 210, 2430, 2324, 1894, 1729, 1290, 211, 174,
	772, 204, 2295, 940, 136, 1535, 2310, 2308, 204, 205,
	2918, 2529, 1610, 680, 1795, 1700, 205, 683, 1733, 1315,
	1445, 1615, 1616, 1617, 1618, 1620, 1621, 1730, 1301, 2072,
	1168, 174, 2919, 1729, 212, 1118, 3981, 1463, 174, 1468,
	3925, 1144, 3785, 3919, 3740, 995, 1310, 1309, 995, 1477,
	3719, 1482, 1362, 1691, 3917, 1728, 1640, 3811, 138, 1611,
	1612, 1452, 1454, 2886, 2878, 2879, 2880, 2881, 2883, 2884,
	3735, 2459, 175, 210, 210, 3617, 1635, 2296, 2293, 3592,
	211, 3591, 2876, 2877, 163, 163, 210, 3585, 1614, 3584,
	204, 90, 3583, 210, 3576, 2876, 2877, 3575, 205, 2876,
	2877, 1484, 3573, 3568, 3565, 3564, 2071, 3463, 1534, 2876,
	2877, 1377, 1419, 1422, 3469, 212, 212, 3379, 3378, 3377,
	769, 1613, 3363, 1431, 1155, 3330, 3329, 1155, 212, 3328,
	3251, 171, 93, 3183, 96, 212, 3420, 3247, 995, 995,
	995, 995, 995, 995, 995, 210, 1428, 2962, 2911, 2902,
	2875, 2872, 2871, 2869, 210, 1549, 2864, 1450, 210, 2863,
	2862, 211, 211, 2859, 1588, 2856, 772, 2891, 2836, 995,
	136, 204, 204, 2819, 211, 995, 938, 210, 2812, 205,
	205, 211, 2684, 2637, 204, 2431, 1698, 212, 2281, 1610,
	1095, 204, 205, 1692, 2017, 1690, 212, 2298, 1609, 205,
	212, 174, 174, 1393, 1624, 1622, 1623, 1615, 1616, 1617,
	1618, 1620, 1621, 1582, 174, 4245, 2984, 1619, 1464, 212,
	4198, 174, 1691, 4197, 138, 3470, 4131, 4129, 1984, 1982,
	1478, 4120, 1274, 211, 1120, 1286, 1289, 3277, 175, 3973,
	2882, 3963, 211, 204, 3960, 1680, 211, 3959, 1611, 1612,
	3958, 205, 204, 2882, 3952, 3945, 204, 2882, 3913, 3897,
	205, 3896, 1489, 2916, 205, 211, 2258, 2882, 3884, 3881,
	1642, 3937, 2959, 2651, 3829, 204, 1506, 1614, 3807, 995,
	995, 995, 174, 205, 3783, 995, 174, 3734, 3766, 1536,
	3765, 3747, 1116, 3746, 1116, 3711, 1289, 1289, 3687, 1749,
	3609, 2292, 3590, 3527, 3521, 174, 3518, 3410, 3409, 1181,
	1613, 1615, 1616, 1617, 1618, 1620, 1621, 995, 3396, 3395,
	674, 3345, 1585, 3333, 1829, 674, 2474, 1593, 1592, 210,
	3242, 1678, 2892, 3470, 995, 1289, 210, 3190, 1301, 918,
	1798, 917, 3173, 3131, 3071, 2892, 3044, 3015, 3014, 2986,
	1808, 2841, 1587, 995, 2840, 1854, 2835, 1589, 2636, 1181,
	1786, 2803, 1732, 2616, 2264, 1758, 1606, 1607, 1736, 1803,
	1735, 212, 1734, 1731, 1723, 1611, 1612, 1721, 212, 1823,
	2472, 2471, 2442, 2435, 1155, 938, 2402, 2306, 1794, 210,
	1863, 1750, 1779, 1745, 1755, 1756, 1826, 1805, 1744, 1743,
	1742, 1892, 1741, 1740, 1614, 1739, 1619, 1738, 1737, 1718,
	1717, 1716, 1715, 1714, 1858, 1082, 1713, 211, 1712, 163,
	1724, 1725, 1711, 1710, 211, 1709, 1708, 204, 1707, 1706,
	1705, 212, 1704, 1693, 204, 205, 1817, 1613, 1679, 1677,
	3015, 1672, 205, 1143, 1641, 1643, 1133, 2893, 2073, 1126,
	3714, 3613, 3561, 3374, 1801, 3356, 3796, 174, 3348, 2823,
	2893, 2433, 2463, 3615, 174, 680, 3373, 1780, 1692, 683,
	680, 2876, 2877, 2982, 683, 1675, 1883, 211, 1885, 1790,
	3662, 1885, 4195, 1165, 1777, 4188, 3961, 204, 1857, 3141,
	3871, 3876, 1860, 3870, 3738, 205, 1301, 1301, 1634, 3689,
	1580, 3688, 1856, 1159, 1772, 3661, 1181, 1799, 1748, 2323,
	938, 3612, 3530, 3529, 3528, 1156, 3351, 174, 1885, 3175,
	3174, 2309, 2307, 2861, 1774, 1789, 1788, 1787, 1806, 1785,
	1784, 1783, 3920, 1852, 1505, 3473, 1938, 1164, 2860, 1941,
	1159, 1872, 1946, 3918, 1159, 1114, 1730, 1114, 2785, 1809,
	1905, 2531, 1729, 1861, 1160, 3408, 1770, 1617, 1618, 1620,
	1621, 3116, 4074, 3115, 1970, 1974, 1550, 1802, 2548, 1702,
	1514, 3810, 2470, 2070, 3787, 898, 1888, 1878, 2878, 2879,
	2880, 2881, 2883, 2884, 1111, 3867, 1111, 2092, 2887, 2885,
	2886, 2878, 2879, 2880, 2881, 2883, 2884, 2880, 2881, 2883,
	2884, 1713, 1713, 954, 3047, 2878, 2879, 2880, 2881, 2883,
	2884, 4118, 1110, 1635, 1110, 899, 4103, 1112, 1917, 1112,
	4090, 1163, 1922, 3100, 1157, 2708, 1515, 1965, 3428, 3427,
	3413, 3206, 1158, 2923, 1967, 3279, 2289, 1746, 3107, 4099,
	1726, 2011, 2829, 680, 1301, 1418, 1301, 683, 1301, 1371,
	1304, 2007, 1138, 4112, 4109, 2574, 3150, 2571, 1950, 3387,
	3954, 3722, 4033, 3942, 1301, 1301, 3018, 3403, 2012, 2691,
	2648, 732, 3093, 2018, 4155, 1301, 1310, 1309, 4156, 3223,
	3441, 2996, 3994, 2023, 3850, 3650, 1339, 1301, 2167, 1301,
	1301, 1301, 2481, 1150, 1493, 2137, 1945, 1699, 1286, 4100,
	1349, 896, 936, 2135, 1094, 2499, 4240, 3843, 894, 3835,
	674, 1547, 2091, 1305, 3684, 3437, 2499, 878, 892, 2497,
	1975, 3436, 890, 2983, 887, 3430, 3426, 2031, 2167, 2645,
	2497, 1873, 2165, 3424, 2998, 3384, 3383, 3096, 1548, 2020,
	3440, 1624, 1622, 1623, 1615, 1616, 1617, 1618, 1620, 1621,
	2079, 2978, 2834, 2833, 2832, 2831, 2789, 2581, 2047, 2580,
	1995, 2049, 1994, 733, 2075, 2576, 2567, 2054, 2337, 2559,
	2056, 2558, 2165, 2045, 2059, 2557, 2556, 1156, 1350, 2535,
	935, 2522, 1877, 1876, 1159, 2454, 1885, 1887, 2239, 1586,
	995, 2336, 995, 2029, 2197, 2025, 1404, 2163, 2080, 995,
	1546, 3207, 1829, 1829, 1181, 1345, 995, 995, 995, 995,
	995, 995, 995, 995, 995, 995, 995, 995, 995, 995,
	995, 995, 995, 995, 995, 995, 995, 995, 995, 995,
	995, 995, 995, 995, 995, 995, 995, 995, 995, 995,
	995, 1450, 995, 1450, 995, 995, 995, 995, 2169, 2096,
	2033, 2034, 1393, 2166, 2028, 680, 2028, 1823, 1823, 683,
	938, 3993, 938, 1491, 2150, 1144, 995, 937, 2088, 995,
	995, 884, 2070, 2084, 1826, 1826, 1621, 995, 946, 2193,
	2194, 995, 1357, 995, 995, 2066, 1157, 2067, 2083, 2488,
	3764, 1181, 1165, 2166, 1158, 1880, 2533, 995, 995, 995,
	995, 2446, 995, 995, 995, 995, 995, 995, 995, 995,
	2521, 1914, 2141, 2146, 1817, 1817, 2762, 1156, 2114, 2164,
	2151, 1993, 1165, 1383, 1559, 1382, 2509, 651, 995, 995,
	995, 995, 995, 995, 995, 995, 995, 2156, 1306, 2010,
	2464, 995, 2254, 1910, 2131, 2294, 1164, 3636, 3046, 2270,
	2271, 2254, 1381, 1116, 1380, 1507, 2552, 2777, 2180, 2164,
	1181, 1486, 1760, 2270, 2286, 1503, 3399, 1915, 1916, 1116,
	2104, 4067, 2884, 3818, 2520, 2030, 1164, 2545, 2546, 3632,
	2545, 2546, 2155, 2154, 3214, 995, 1181, 3663, 2168, 2332,
	1579, 2161, 2289, 2100, 2153, 1911, 2149, 1882, 3390, 1286,
	3447, 918, 1472, 2184, 918, 918, 2185, 2186, 2354, 2354,
	2368, 1545, 2270, 735, 734, 2388, 2390, 2545, 2546, 2285,
	4155, 2394, 934, 2295, 2262, 650, 1157, 3633, 603, 3061,
	2512, 2260, 1881, 2418, 1158, 2099, 799, 3054, 1764, 3446,
	1790, 1924, 3213, 1591, 1142, 3646, 1159, 1123, 2101, 2741,
	1515, 2410, 2298, 598, 1515, 1301, 1367, 2876, 2877, 2573,
	2995, 3683, 3268, 1928, 1542, 2443, 2266, 1779, 3060, 4199,
	1487, 3265, 2776, 3425, 4209, 3411, 3053, 1767, 4172, 3820,
	3423, 2283, 1082, 1121, 938, 1181, 2498, 4144, 2596, 2572,
	2107, 2570, 1762, 938, 2148, 3412, 1563, 938, 2296, 2293,
	1365, 2458, 3095, 1155, 2409, 4171, 3065, 1863, 2432, 1530,
	1765, 3763, 4192, 1925, 2452, 1829, 1403, 2532, 2876, 2877,
	2575, 2894, 2895, 2896, 163, 1344, 1917, 2595, 2363, 2392,
	2379, 2417, 2350, 2422, 2145, 2747, 2428, 2429, 1763, 2400,
	2401, 2136, 2334, 1181, 2415, 2416, 3266, 2335, 888, 2134,
	2338, 1900, 2339, 2340, 2411, 888, 1901, 1301, 2555, 1777,
	2588, 1732, 2938, 1492, 1531, 888, 2584, 2528, 2478, 889,
	1823, 888, 995, 995, 2501, 995, 2534, 730, 3543, 729,
	1936, 1124, 2298, 4096, 2500, 938, 1159, 1826, 2108, 873,
	2891, 2511, 2538, 1981, 1980, 3628, 2568, 2250, 2370, 3629,
	2564, 2421, 2479, 4183, 2769, 2770, 1114, 2473, 1929, 1920,
	3542, 3147, 931, 3644, 4222, 2882, 1962, 2537, 2298, 1935,
	2553, 2620, 1114, 1724, 1725, 2248, 1347, 1817, 2476, 2477,
	3400, 2633, 1766, 2750, 2466, 2605, 3955, 2042, 2608, 2524,
	2610, 3969, 2482, 652, 3631, 1111, 649, 2484, 1919, 2659,
	1367, 2536, 1908, 1301, 1301, 929, 1301, 873, 3634, 1961,
	1902, 1111, 2486, 2599, 2554, 1557, 2298, 2601, 1301, 1930,
	1931, 2504, 2997, 1110, 2514, 2517, 2882, 1904, 1112, 766,
	931, 2650, 1926, 1301, 2650, 1889, 1890, 4184, 1490, 1110,
	873, 3074, 2674, 2705, 1112, 2487, 874, 2713, 2714, 885,
	3819, 2547, 2549, 2550, 2551, 1719, 2980, 2892, 2720, 2721,
	2722, 3703, 680, 931, 2485, 2147, 683, 1927, 2510, 995,
	1560, 3148, 2292, 2629, 930, 4097, 2586, 4012, 2791, 4190,
	2897, 2730, 1908, 2731, 2937, 3454, 2709, 2253, 1558, 1906,
	2679, 2244, 2749, 3029, 3452, 1310, 2602, 2589, 2585, 2587,
	3645, 4143, 599, 2728, 2245, 2680, 800, 1908, 2246, 2614,
	1502, 1504, 2251, 995, 874, 2746, 2103, 2661, 2892, 995,
	995, 3630, 2624, 2711, 3035, 2690, 3760, 2715, 163, 2716,
	4186, 1289, 2738, 3539, 2666, 3776, 2643, 3147, 2592, 1488,
	2670, 2752, 3028, 2754, 2676, 2654, 1948, 874, 4165, 2665,
	4044, 2725, 1122, 2668, 3972, 2669, 3637, 3037, 2261, 2106,
	4095, 2732, 3669, 2734, 4191, 2736, 600, 2280, 1932, 1947,
	2675, 2677, 2893, 1671, 995, 995, 2681, 1289, 2839, 1561,
	995, 2098, 2692, 2414, 2745, 792, 4210, 687, 1590, 1141,
	2427, 2673, 1907, 995, 995, 3455, 1908, 4193, 2236, 995,
	995, 1943, 3454, 1450, 2748, 995, 937, 3281, 601, 875,
	602, 3452, 3036, 4220, 995, 995, 995, 2876, 2877, 4124,
	995, 3713, 1953, 780, 3533, 1915, 1916, 1960, 4125, 2792,
	995, 4010, 2757, 2893, 2800, 3001, 1933, 3544, 3704, 1764,
	3370, 1136, 1760, 2727, 3225, 2760, 3759, 995, 3975, 4094,
	2822, 2768, 2733, 1944, 2735, 4154, 2737, 2758, 1274, 4152,
	1562, 4142, 2798, 2759, 3990, 4011, 4223, 3883, 2813, 3487,
	2499, 3134, 2247, 2001, 2763, 1286, 1757, 875, 1767, 2180,
	1134, 2249, 1129, 1518, 2515, 2755, 590, 3468, 2778, 2043,
	3319, 2593, 4185, 2412, 1601, 2817, 2818, 3540, 1600, 3588,
	2821, 2885, 2886, 2878, 2879, 2880, 2881, 2883, 2884, 2183,
	875, 1765, 3455, 995, 995, 995, 1600, 1918, 1764, 1874,
	3229, 2972, 995, 995, 995, 3941, 3453, 995, 3826, 1595,
	876, 1959, 1683, 4215, 1917, 2790, 1688, 995, 1116, 1181,
	3825, 1939, 3805, 995, 2946, 995, 2930, 2931, 2234, 2173,
	3488, 2237, 1903, 1116, 2888, 2889, 2890, 1767, 1871, 3434,
	3761, 2887, 2885, 2886, 2878, 2879, 2880, 2881, 2883, 2884,
	3386, 1181, 1762, 3135, 3127, 2882, 877, 3010, 2795, 3450,
	3006, 1289, 1289, 1116, 2634, 3649, 1181, 2828, 2628, 2618,
	1765, 1599, 3648, 2952, 2024, 2796, 928, 2013, 876, 2801,
	2233, 2006, 1829, 1989, 3976, 3264, 1181, 2913, 626, 1599,
	793, 794, 688, 689, 3334, 938, 4022, 1293, 1763, 2539,
	995, 3226, 2142, 2932, 2977, 1867, 1600, 2615, 1869, 4123,
	2947, 876, 1286, 1766, 995, 1601, 3490, 3545, 2942, 3727,
	2966, 1671, 1406, 3453, 877, 2990, 1829, 3320, 781, 782,
	1336, 2940, 1870, 1601, 2961, 3321, 3865, 1823, 3863, 3806,
	3021, 2174, 995, 1301, 3589, 3002, 3003, 2892, 2993, 1155,
	1286, 3017, 1286, 1368, 1826, 3016, 2965, 877, 2945, 2981,
	2783, 2089, 2999, 3019, 2761, 3347, 3023, 2908, 2909, 2910,
	2935, 2958, 2934, 3020, 2924, 2941, 3025, 3026, 1301, 1532,
	2950, 1823, 2970, 2949, 2939, 4214, 2953, 2954, 1181, 2451,
	2951, 3546, 1766, 1956, 1817, 3032, 1442, 1301, 1826, 1599,
	2450, 2449, 1301, 3011, 691, 690, 1458, 3007, 3049, 2516,
	3041, 3042, 2448, 1301, 3043, 1389, 3814, 3459, 2622, 1301,
	3077, 1301, 935, 3080, 2956, 1181, 2957, 3085, 3087, 2406,
	3032, 2235, 674, 2974, 2975, 2976, 1954, 1387, 1817, 2797,
	3647, 1937, 798, 1301, 795, 796, 3068, 3069, 2799, 3032,
	3070, 3948, 3977, 1301, 3032, 2540, 2541, 2994, 692, 693,
	1519, 3072, 2893, 3695, 3005, 3112, 3121, 3000, 2948, 1116,
	1497, 1114, 3063, 3143, 3184, 1955, 3126, 3052, 1375, 2022,
	3103, 3744, 783, 784, 1940, 2973, 1114, 3098, 1179, 3101,
	4162, 1376, 1280, 3861, 2712, 3038, 4025, 2600, 3051, 2408,
	2705, 1905, 2598, 3056, 2407, 1496, 3045, 4030, 3815, 2705,
	1111, 1301, 1301, 3064, 3152, 4019, 1114, 3595, 3336, 3062,
	2987, 2988, 3949, 2989, 3094, 1111, 3803, 2305, 3067, 3171,
	1905, 4048, 3082, 1301, 3059, 3073, 3075, 3089, 1110, 3081,
	3083, 3090, 3743, 1112, 3088, 4164, 3164, 4114, 2304, 625,
	3057, 3962, 2537, 1110, 3058, 1111, 3782, 3097, 1112, 3587,
	3458, 3105, 1577, 3804, 3208, 2905, 1950, 1181, 3241, 3204,
	1181, 1575, 3144, 4026, 1950, 3066, 1554, 680, 1552, 2991,
	2870, 683, 1529, 1110, 3136, 3907, 1527, 2906, 1112, 3124,
	2887, 2885, 2886, 2878, 2879, 2880, 2881, 2883, 2884, 3950,
	995, 1525, 2802, 3169, 3170, 1523, 995, 995, 3202, 2133,
	995, 995, 995, 3149, 995, 2619, 1802, 2566, 3151, 1521,
	1512, 3165, 3158, 995, 1829, 3220, 163, 163, 2530, 1510,
	1385, 2475, 995, 1388, 3160, 995, 3899, 3162, 3163, 1797,
	3182, 1181, 3166, 1793, 3167, 3186, 3168, 3201, 3900, 3219,
	995, 1578, 3161, 1474, 3222, 1386, 3194, 3221, 1181, 3210,
	797, 3211, 3142, 3212, 1595, 2743, 3203, 2742, 1829, 1829,
	995, 995, 2718, 995, 995, 995, 3901, 3244, 2162, 1823,
	2144, 3227, 1541, 2111, 1986, 1855, 1703, 1485, 938, 1361,
	4089, 995, 3670, 3253, 3254, 995, 1826, 1829, 1829, 995,
	995, 995, 995, 995, 995, 995, 995, 995, 995, 995,
	995, 995, 995, 995, 995, 995, 995, 995, 3224, 995,
	3216, 3658, 1114, 1823, 1823, 3076, 995, 995, 1829, 4166,
	4018, 2349, 2345, 995, 1576, 3903, 1817, 1286, 3725, 3675,
	1826, 1826, 3196, 1574, 995, 2193, 3284, 3621, 1553, 3486,
	1551, 3902, 1823, 1823, 1528, 1116, 1116, 3195, 1526, 995,
	2010, 1111, 3478, 3217, 3249, 3439, 3406, 886, 3904, 1826,
	1826, 4140, 3404, 1524, 2193, 3299, 3385, 1522, 2132, 3130,
	1817, 1817, 3260, 1823, 3267, 3269, 3270, 3283, 1181, 1110,
	3276, 1520, 1511, 3125, 1112, 3117, 2672, 2667, 3352, 2646,
	1826, 1509, 1384, 2632, 2343, 3327, 2625, 3291, 2612, 1817,
	1817, 3292, 3293, 3331, 3294, 2597, 3298, 2063, 2061, 995,
	3296, 2347, 2348, 2346, 3192, 3323, 2058, 2055, 3369, 2050,
	2048, 2044, 2035, 1985, 1983, 995, 995, 3332, 1966, 1951,
	1817, 3380, 3381, 1934, 1921, 1909, 3261, 3139, 3338, 1091,
	3084, 3324, 3890, 3343, 3344, 1960, 1604, 1804, 3368, 4156,
	163, 2781, 4058, 3749, 3742, 995, 995, 3741, 3340, 3341,
	3682, 2706, 3201, 1893, 1092, 1286, 1286, 1341, 3892, 2342,
	2344, 3194, 2519, 2499, 3271, 2499, 3498, 1917, 2102, 1900,
	1572, 1573, 995, 3354, 1901, 1427, 2128, 2497, 2021, 2518,
	2127, 664, 3651, 1900, 4057, 2263, 3677, 3290, 1901, 891,
	893, 895, 2109, 1508, 1301, 3355, 3927, 1426, 3596, 3574,
	1683, 1611, 1612, 1611, 1612, 3197, 3198, 3199, 3200, 2542,
	2523, 1608, 3367, 1829, 4158, 4150, 4119, 604, 3419, 3421,
	1864, 3433, 3435, 2611, 3389, 3414, 233, 2782, 2130, 2571,
	1796, 2563, 1614, 2527, 1286, 2579, 4017, 1605, 2578, 1959,
	2561, 1301, 3432, 2525, 2562, 3985, 2526, 3196, 995, 3982,
	3947, 3879, 3429, 3905, 2375, 1093, 1116, 995, 3906, 3500,
	1427, 720, 3195, 1613, 2537, 1613, 3474, 763, 1823, 3457,
	615, 587, 3405, 3858, 3407, 1301, 1301, 1301, 1902, 1427,
	1895, 3477, 3509, 2659, 3467, 1826, 3495, 3362, 1114, 1114,
	3011, 1301, 1902, 3492, 3480, 1904, 3129, 3491, 2653, 3475,
	3494, 3448, 3513, 3418, 3456, 2393, 1859, 1810, 4187, 1904,
	1181, 3812, 2979, 4213, 3984, 3376, 4201, 2705, 3445, 2876,
	2877, 3476, 1611, 1612, 1312, 1817, 4050, 1111, 1111, 3461,
	1003, 4051, 1181, 3566, 3438, 995, 995, 2300, 3479, 3444,
	4050, 995, 995, 1829, 3372, 4051, 995, 995, 1495, 995,
	4168, 2491, 3481, 995, 1494, 1110, 1110, 1906, 3493, 3502,
	1112, 1112, 3496, 2489, 995, 3501, 2491, 2492, 2333, 3532,
	2068, 1906, 2489, 2490, 240, 240, 240, 3525, 593, 594,
	995, 609, 593, 609, 619, 624, 1442, 2081, 3516, 642,
	2177, 3508, 3514, 3515, 648, 3523, 3556, 2082, 1823, 1556,
	240, 3522, 1555, 3880, 3519, 3548, 3531, 3520, 3844, 2090,
	3506, 2093, 2094, 2095, 3507, 1826, 3678, 3674, 777, 3547,
	3541, 3536, 3673, 3562, 240, 3484, 3371, 1978, 3272, 3560,
	3197, 3198, 3199, 3200, 3078, 1697, 1696, 4173, 3938, 3839,
	1116, 3797, 3794, 3706, 3614, 3524, 3504, 3462, 1116, 3460,
	3402, 3397, 1181, 3159, 1181, 1817, 3133, 3132, 2740, 2724,
	1907, 1116, 2723, 2663, 1908, 2638, 2613, 2468, 2467, 2265,
	2129, 2126, 2125, 2124, 1907, 3601, 1181, 2123, 1908, 2038,
	2037, 2036, 2019, 1996, 1992, 1991, 1990, 1988, 1987, 1571,
	1570, 1516, 1413, 1412, 1411, 1410, 995, 1409, 3586, 1408,
	1407, 1405, 1400, 3039, 1399, 1398, 1397, 1396, 1356, 1114,
	1355, 1354, 3618, 3619, 1353, 1352, 1351, 1897, 3642, 1346,
	1340, 1338, 1337, 1181, 1172, 3604, 3643, 1171, 1170, 2371,
	1169, 1181, 1140, 3652, 3593, 593, 593, 3607, 3597, 3654,
	3655, 3600, 3040, 240, 3653, 1139, 3602, 3603, 1111, 3598,
	3599, 1074, 3608, 1865, 2965, 3611, 1898, 163, 897, 1301,
	1301, 1289, 883, 3817, 3635, 1565, 3679, 84, 3680, 3620,
	1348, 708, 78, 1957, 3401, 856, 1110, 4047, 1334, 3968,
	715, 1112, 4032, 3641, 3027, 3681, 2582, 1181, 3693, 2110,
	1517, 2112, 1301, 2960, 3696, 2434, 4009, 3570, 2838, 3934,
	3775, 2303, 1701, 2917, 3672, 80, 979, 1025, 3718, 2010,
	3702, 3701, 3622, 3388, 2695, 3685, 3699, 3698, 1814, 995,
	1903, 1816, 3668, 3690, 945, 1184, 1875, 985, 3692, 1301,
	1301, 1301, 3705, 1891, 1903, 1884, 2469, 2353, 1002, 999,
	1181, 3745, 3716, 1818, 3729, 3691, 3666, 1820, 3728, 1001,
	1000, 3748, 995, 995, 995, 3732, 3657, 3737, 3697, 1819,
	3723, 3715, 3712, 1720, 3736, 998, 1813, 3665, 3483, 3667,
	1181, 3482, 2621, 2657, 1392, 995, 858, 1879, 995, 995,
	2259, 3730, 2287, 2827, 1694, 960, 2375, 981, 995, 2284,
	1132, 1829, 970, 1114, 959, 2943, 995, 995, 3754, 3146,
	3717, 1114, 3361, 3733, 2172, 724, 2873, 2290, 3756, 1125,
	3752, 1181, 3751, 1301, 1114, 2376, 2369, 2365, 2647, 3762,
	3772, 1581, 1673, 2658, 1167, 2196, 1181, 963, 2257, 1685,
	2807, 2182, 1111, 3153, 995, 2963, 2462, 3767, 4054, 3280,
	1111, 995, 2000, 1090, 3784, 1089, 1823, 1088, 4038, 995,
	4035, 1829, 3517, 1111, 3110, 1868, 3778, 2483, 1663, 995,
	1110, 3799, 995, 1826, 3118, 1112, 2375, 2375, 1110, 975,
	1285, 995, 2928, 1112, 3790, 3791, 3185, 3789, 1181, 1358,
	647, 1110, 987, 1662, 3793, 2591, 1112, 2590, 3944, 1301,
	1301, 1154, 1153, 3800, 1152, 3009, 4221, 3398, 209, 2775,
	1602, 1594, 206, 1817, 208, 3798, 1823, 207, 3707, 3365,
	3838, 2969, 2301, 3822, 4117, 3821, 3416, 3102, 21, 20,
	1611, 1612, 3849, 1826, 19, 105, 1181, 3873, 3828, 1301,
	40, 3864, 18, 119, 3840, 135, 134, 133, 132, 131,
	3112, 137, 1642, 130, 3878, 3846, 129, 995, 995, 1614,
	124, 3854, 3853, 128, 127, 126, 3862, 125, 3856, 3857,
	123, 3877, 122, 1817, 3891, 3895, 995, 995, 121, 3910,
	3911, 3889, 120, 118, 3872, 3914, 117, 116, 115, 2594,
	114, 3887, 1613, 995, 1829, 3886, 2375, 2375, 2375, 113,
	3894, 112, 3888, 111, 110, 3908, 3893, 109, 3732, 3885,
	108, 3830, 3831, 107, 106, 638, 3852, 2444, 995, 635,
	2010, 995, 57, 56, 104, 103, 17, 3836, 38, 3922,
	3951, 14, 1611, 1612, 1289, 3845, 1127, 3851, 3847, 3848,
	995, 3940, 3926, 61, 62, 16, 13, 3932, 33, 1823,
	83, 95, 94, 34, 1642, 92, 3923, 3924, 91, 3939,
	32, 1614, 3957, 15, 1137, 89, 1826, 88, 31, 29,
	11, 2765, 9, 642, 8, 3841, 35, 1781, 12, 3956,
	5, 995, 995, 168, 3971, 2678, 1442, 167, 1619, 170,
	166, 169, 995, 82, 1613, 995, 240, 1301, 240, 240,
	1277, 3964, 240, 240, 1292, 3966, 1817, 1301, 1301, 165,
	164, 81, 27, 10, 3987, 2719, 2494, 3989, 240, 160,
	1314, 3874, 4000, 3472, 1301, 3978, 1641, 1643, 3983, 3979,
	3980, 76, 3877, 3970, 162, 161, 159, 158, 995, 995,
	3996, 3992, 157, 3997, 77, 1343, 74, 156, 155, 3991,
	75, 2371, 2371, 154, 3986, 25, 6, 1360, 4005, 1292,
	4006, 60, 7, 240, 240, 3757, 1277, 4029, 4004, 4027,
	3205, 995, 995, 98, 995, 99, 240, 4014, 36, 72,
	1634, 71, 70, 4052, 1402, 4037, 4040, 24, 59, 23,
	1619, 4049, 4028, 3998, 3999, 4059, 240, 197, 240, 240,
	196, 1277, 240, 1292, 195, 194, 193, 192, 3965, 187,
	4003, 186, 4056, 642, 4072, 240, 240, 4046, 4013, 191,
	4042, 995, 995, 995, 189, 188, 4071, 190, 1641, 1643,
	185, 4073, 200, 199, 4063, 201, 198, 4068, 777, 4066,
	203, 184, 4101, 182, 995, 178, 177, 4106, 181, 183,
	180, 4041, 179, 176, 4045, 4085, 4086, 4060, 4088, 202,
	4061, 4087, 152, 153, 67, 151, 150, 149, 4104, 148,
	147, 2371, 2371, 2371, 146, 4128, 145, 4126, 66, 22,
	2, 1, 1634, 0, 0, 4135, 0, 0, 0, 4137,
	4130, 0, 995, 0, 4127, 1635, 0, 0, 4136, 0,
	0, 4141, 0, 4132, 4133, 4134, 2659, 240, 0, 0,
	4138, 0, 0, 0, 0, 0, 0, 4157, 0, 0,
	4160, 4153, 0, 4151, 240, 0, 0, 4149, 4147, 4148,
	0, 0, 4161, 0, 4159, 4037, 0, 0, 4040, 4175,
	995, 4167, 995, 4163, 4178, 4170, 0, 0, 4180, 0,
	4182, 4174, 0, 4181, 4176, 0, 0, 0, 1286, 0,
	4169, 4056, 4177, 0, 4179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4196, 4194, 0, 0,
	0, 0, 0, 0, 0, 0, 4202, 0, 0, 0,
	4203, 0, 0, 0, 0, 0, 4205, 1635, 995, 995,
	4208, 0, 0, 242, 0, 4116, 995, 4211, 995, 995,
	4207, 4217, 0, 0, 2375, 2375, 0, 4225, 0, 0,
	0, 4224, 0, 4228, 1622, 1623, 1615, 1616, 1617, 1618,
	1620, 1621, 4227, 0, 4226, 0, 0, 4229, 0, 4232,
	0, 4237, 4236, 0, 1289, 4238, 0, 0, 4239, 4243,
	4242, 4235, 4241, 4234, 0, 4244, 995, 0, 0, 0,
	0, 4247, 0, 0, 4251, 0, 4253, 0, 0, 0,
	4254, 2804, 2805, 4248, 0, 0, 4250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4218, 4219,
	0, 0, 0, 0, 0, 0, 0, 654, 0, 0,
	0, 0, 2375, 2375, 2375, 2375, 2375, 2375, 2375, 2375,
	2375, 2375, 2375, 2375, 2375, 2375, 2375, 2375, 2375, 2375,
	2375, 593, 2375, 0, 0, 1611, 1612, 1623, 1615, 1616,
	1617, 1618, 1620, 1621, 0, 0, 4249, 0, 0, 0,
	0, 0, 240, 0, 240, 0, 0, 1642, 240, 0,
	0, 0, 3636, 0, 1614, 0, 0, 0, 0, 0,
	0, 1314, 1277, 240, 0, 240, 0, 0, 0, 0,
	240, 1314, 609, 0, 0, 240, 1314, 0, 0, 958,
	0, 0, 642, 0, 3632, 0, 0, 1613, 3625, 0,
	0, 2899, 2900, 2901, 0, 0, 0, 1633, 0, 0,
	0, 0, 0, 0, 3623, 1630, 659, 0, 0, 0,
	0, 0, 3627, 0, 0, 3091, 0, 0, 0, 0,
	2929, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3633, 0, 0, 0, 0, 0, 2876, 2877,
	0, 2894, 2895, 2896, 0, 3122, 0, 0, 0, 0,
	0, 0, 2955, 3551, 0, 3128, 0, 0, 0, 3553,
	0, 0, 0, 0, 0, 0, 0, 2968, 0, 0,
	0, 0, 3626, 1636, 1637, 1638, 1639, 0, 0, 0,
	667, 0, 0, 1619, 0, 0, 0, 2985, 0, 2371,
	2371, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 661, 0, 0, 0, 0, 0,
	2891, 0, 0, 3177, 3178, 0, 0, 0, 0, 0,
	0, 1641, 1643, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 1628, 1629, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 665, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1634, 0, 2371, 2371, 2371,
	2371, 2371, 2371, 2371, 2371, 2371, 2371, 2371, 2371, 2371,
	2371, 2371, 2371, 2371, 2371, 2371, 2882, 2371, 240, 0,
	3628, 0, 240, 0, 3629, 0, 240, 0, 0, 0,
	0, 0, 240, 656, 0, 0, 0, 0, 0, 2876,
	2877, 0, 2894, 2895, 2896, 240, 2968, 240, 0, 240,
	0, 0, 0, 593, 0, 0, 660, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2039, 0, 3631,
	2897, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 3634, 0, 666, 240, 0, 0, 0,
	1640, 0, 0, 0, 0, 0, 0, 0, 663, 0,
	0, 0, 0, 0, 658, 0, 0, 0, 2892, 0,
	1635, 2891, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 777, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 655, 240, 0, 1277, 240,
	0, 0, 0, 1611, 1612, 0, 1644, 1645, 1646, 1654,
	1655, 1656, 0, 642, 0, 0, 0, 0, 0, 0,
	240, 662, 0, 0, 1647, 1642, 0, 0, 0, 0,
	240, 240, 1614, 240, 668, 240, 0, 240, 1280, 240,
	1660, 1179, 0, 0, 0, 657, 3630, 2882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2138,
	0, 0, 2139, 0, 2140, 1613, 0, 0, 0, 0,
	0, 0, 0, 2893, 0, 1633, 240, 0, 0, 3237,
	3238, 3637, 0, 1630, 0, 1631, 1627, 0, 1624, 1622,
	1623, 1615, 1616, 1617, 1618, 1620, 1621, 624, 0, 0,
	0, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 958, 3257, 0, 0, 958, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1759, 0, 0, 0, 3273,
	1265, 0, 0, 0, 1265, 0, 0, 0, 0, 2892,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1636, 1637, 1638, 1639, 0, 0, 0, 0, 0,
	0, 1619, 0, 0, 0, 0, 0, 3300, 3301, 3302,
	3303, 3304, 3305, 3306, 3307, 3308, 3309, 3310, 3311, 3312,
	3313, 3314, 3315, 3316, 3317, 3318, 3442, 3322, 0, 0,
	1651, 0, 0, 1661, 2888, 2889, 2890, 0, 0, 1641,
	1643, 2887, 2885, 2886, 2878, 2879, 2880, 2881, 2883, 2884,
	0, 0, 0, 0, 0, 1657, 0, 1658, 0, 0,
	0, 0, 1611, 1612, 1628, 1629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1649, 0, 1642, 0, 0, 0, 0, 0,
	0, 1614, 0, 1634, 2893, 0, 0, 0, 593, 3364,
	0, 0, 0, 0, 0, 0, 0, 3510, 3511, 3512,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 1659,
	0, 2375, 593, 1442, 1613, 0, 0, 0, 0, 240,
	0, 593, 0, 0, 1633, 0, 1648, 0, 0, 0,
	0, 944, 1630, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 2375, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1640, 0,
	3240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 609, 240, 1635, 0,
	1636, 1637, 1638, 1639, 0, 2888, 2889, 2890, 0, 0,
	1619, 0, 2887, 2885, 2886, 2878, 2879, 2880, 2881, 2883,
	2884, 0, 0, 1652, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 68, 0, 0, 0,
	0, 2508, 0, 0, 0, 0, 0, 0, 1641, 1643,
	240, 0, 69, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 73, 0,
	0, 0, 0, 1628, 1629, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1634, 0, 0, 79, 2375, 0, 0, 0,
	0, 0, 0, 0, 0, 1650, 0, 240, 2603, 1625,
	1626, 1632, 1653, 1631, 1627, 0, 1624, 1622, 1623, 1615,
	1616, 1617, 1618, 1620, 1621, 0, 0, 0, 0, 3579,
	85, 0, 1314, 3578, 0, 240, 0, 0, 0, 0,
	0, 0, 240, 0, 100, 0, 0, 0, 0, 86,
	97, 2642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2508, 0, 593, 0, 0, 2662, 0, 0, 0,
	0, 1442, 240, 0, 0, 240, 2371, 0, 0, 240,
	0, 240, 0, 0, 0, 0, 1277, 1640, 240, 240,
	0, 1292, 1292, 0, 0, 0, 0, 0, 87, 0,
	0, 2688, 777, 0, 2508, 2508, 0, 1635, 0, 0,
	0, 0, 1265, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 2371, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 1277, 240,
	0, 3753, 1314, 3755, 1314, 0, 0, 1277, 0, 1277,
	0, 1277, 0, 0, 0, 0, 958, 0, 0, 0,
	0, 0, 1265, 0, 0, 3606, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 240, 240, 240,
	1277, 240, 0, 240, 0, 0, 0, 3616, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 90,
	0, 0, 240, 0, 0, 3795, 0, 0, 0, 0,
	0, 0, 1631, 1627, 0, 1624, 1622, 1623, 1615, 1616,
	1617, 1618, 1620, 1621, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 171,
	93, 0, 96, 0, 0, 0, 0, 0, 0, 0,
	0, 2371, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 944, 0, 0, 210, 944, 0, 0,
	0, 0, 0, 0, 772, 0, 0, 0, 136, 0,
	0, 3855, 0, 0, 0, 0, 0, 0, 0, 1265,
	0, 1314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 212, 0,
	0, 0, 0, 0, 1316, 0, 1322, 0, 1328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1179, 138, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 175, 0, 0, 0,
	0, 0, 0, 0, 211, 0, 0, 0, 0, 0,
	0, 3773, 0, 0, 204, 0, 0, 0, 0, 0,
	0, 0, 205, 0, 0, 0, 3781, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1443, 0, 0, 0, 174, 0, 0, 0, 0, 0,
	0, 0, 3773, 0, 0, 0, 0, 1461, 240, 1466,
	0, 0, 0, 0, 0, 0, 0, 2196, 0, 1475,
	0, 1480, 3808, 240, 0, 0, 0, 0, 593, 0,
	68, 0, 0, 593, 0, 0, 593, 0, 0, 593,
	593, 0, 0, 0, 0, 593, 69, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 73, 0, 0, 1314, 0, 0, 0, 2196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1537, 0, 0, 1543, 0, 0, 1314, 0, 0, 1442,
	1442, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 1442, 2508, 2508, 240,
	0, 1292, 0, 0, 2508, 0, 0, 3013, 0, 0,
	0, 0, 0, 0, 0, 2508, 3013, 0, 2508, 3013,
	3013, 0, 0, 0, 85, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 240, 1292, 240, 0, 100, 0,
	0, 0, 0, 86, 97, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1292, 240, 0, 0,
	1277, 3931, 0, 1664, 1665, 1666, 1667, 1668, 1669, 1670,
	68, 0, 2508, 0, 3079, 2508, 1292, 1265, 0, 2508,
	2508, 1292, 0, 0, 0, 0, 69, 0, 0, 0,
	0, 0, 87, 0, 1682, 0, 0, 0, 240, 0,
	1695, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 3106, 0, 0, 3108, 2508, 0, 0,
	240, 0, 0, 0, 240, 0, 1292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 2642, 0, 0, 1277, 0, 240,
	0, 0, 2508, 0, 593, 0, 0, 0, 0, 0,
	0, 2508, 0, 0, 1265, 0, 0, 0, 240, 0,
	0, 0, 240, 240, 85, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 100, 0,
	0, 0, 0, 86, 97, 0, 0, 0, 0, 240,
	2642, 1611, 1612, 2642, 1753, 1753, 1753, 1654, 1655, 1656,
	0, 0, 0, 90, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1642, 0, 0, 0, 0, 0, 0,
	1614, 0, 0, 1265, 0, 0, 0, 0, 1660, 0,
	0, 0, 87, 0, 0, 3215, 0, 0, 1277, 240,
	0, 240, 0, 171, 93, 0, 96, 0, 0, 1265,
	0, 0, 0, 1613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1633, 0, 0, 0, 0, 944, 0,
	210, 1630, 0, 0, 240, 0, 0, 0, 772, 0,
	0, 0, 136, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3278, 0, 0, 0, 0, 0, 138, 0, 0, 1636,
	1637, 1638, 1639, 0, 0, 0, 0, 0, 1265, 1619,
	175, 0, 0, 90, 0, 0, 0, 0, 211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 0,
	0, 0, 0, 0, 0, 0, 205, 0, 1651, 0,
	0, 1661, 0, 0, 0, 0, 0, 1641, 1643, 0,
	0, 0, 0, 171, 93, 0, 96, 0, 1455, 0,
	0, 0, 0, 0, 0, 0, 1265, 0, 0, 0,
	0, 0, 1628, 1629, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 240, 240, 0, 772, 0,
	1649, 0, 136, 0, 0, 0, 0, 0, 0, 0,
	0, 1634, 0, 0, 1611, 1612, 0, 593, 593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 212, 0, 0, 0, 1642, 0, 0, 1314,
	0, 0, 0, 1614, 0, 0, 0, 0, 0, 0,
	0, 0, 1314, 1314, 0, 0, 138, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	175, 0, 0, 0, 0, 0, 1613, 0, 211, 0,
	0, 0, 0, 0, 0, 0, 1633, 0, 204, 0,
	0, 0, 0, 0, 1630, 0, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1640, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1453, 0,
	0, 0, 0, 0, 0, 0, 1635, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 3235, 0, 0, 0, 0, 0, 0, 0,
	0, 1652, 0, 0, 0, 0, 1292, 240, 0, 0,
	0, 0, 1636, 1637, 1638, 1639, 0, 0, 240, 0,
	0, 0, 1619, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 240, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1641, 1643, 0, 0, 0, 2508, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2688, 2688, 1628, 1629, 0, 0, 777,
	777, 2508, 0, 1650, 2642, 2642, 0, 0, 777, 2508,
	1653, 1631, 1627, 0, 1624, 1622, 1623, 1615, 1616, 1617,
	1618, 1620, 1621, 0, 1634, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 2171, 0, 2175, 0, 0,
	0, 0, 0, 0, 2189, 0, 0, 0, 0, 0,
	0, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206,
	2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216,
	2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226,
	2227, 2228, 2229, 2230, 2231, 2232, 0, 2238, 0, 2240,
	2241, 2242, 2243, 0, 0, 0, 0, 0, 3571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2267, 0, 0, 0, 0, 0, 0, 0, 1640,
	0, 0, 1682, 0, 0, 0, 2282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1635,
	0, 0, 2312, 2315, 2318, 2321, 0, 2325, 2326, 2327,
	2328, 2329, 2330, 2331, 0, 0, 0, 0, 0, 0,
	240, 0, 1611, 1612, 0, 0, 1314, 0, 240, 0,
	0, 0, 0, 0, 0, 2367, 0, 2378, 2380, 2385,
	0, 240, 1265, 0, 1642, 0, 0, 0, 0, 0,
	0, 1614, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2508, 2508, 2508, 0, 0, 1004,
	0, 0, 0, 0, 1265, 0, 0, 1314, 0, 0,
	0, 0, 0, 0, 1613, 2508, 0, 3013, 0, 1265,
	1314, 1314, 240, 1292, 1633, 0, 0, 0, 0, 0,
	0, 0, 1630, 0, 1292, 240, 1292, 240, 0, 1265,
	0, 0, 0, 241, 241, 241, 0, 0, 2508, 0,
	2508, 240, 0, 958, 1631, 1627, 0, 1624, 1622, 1623,
	1615, 1616, 1617, 1618, 1620, 1621, 0, 958, 0, 241,
	0, 0, 0, 0, 0, 0, 2508, 0, 0, 0,
	3234, 3709, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 241, 0, 0, 0, 0, 240, 0,
	1636, 1637, 1638, 1639, 0, 0, 0, 0, 0, 0,
	1619, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1314, 0, 0, 0, 0, 0, 0, 0,
	0, 1265, 1611, 1612, 0, 0, 0, 0, 1641, 1643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1642, 0, 0, 0, 0, 0,
	0, 1614, 0, 1628, 1629, 0, 0, 0, 1265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2876, 2877, 0, 2894, 2895, 2896,
	0, 0, 1634, 0, 1613, 0, 0, 2606, 2607, 0,
	2609, 0, 0, 0, 1633, 3552, 0, 0, 0, 0,
	0, 0, 1630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2508, 0, 3013, 0, 0, 3802, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2891, 0, 0, 0,
	2793, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	1277, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1636, 1637, 1638, 1639, 1292, 240, 0, 1640, 0, 0,
	1619, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3802, 0, 0, 1635, 0, 0,
	1265, 0, 2508, 1265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3882, 0, 0, 0, 0, 1641, 1643,
	0, 0, 0, 0, 0, 1314, 0, 0, 0, 0,
	0, 0, 2882, 0, 2739, 0, 0, 0, 0, 0,
	0, 0, 0, 1628, 1629, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1634, 0, 1265, 1611, 1612, 0, 3278, 0,
	0, 0, 0, 0, 1664, 1665, 2897, 0, 0, 0,
	0, 1265, 0, 0, 3802, 0, 0, 1642, 0, 0,
	0, 0, 0, 0, 1614, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1631, 1627, 2892, 1624, 1622, 1623, 1615, 1616,
	1617, 1618, 1620, 1621, 0, 0, 0, 1613, 0, 2787,
	2788, 240, 0, 0, 0, 2794, 0, 1633, 0, 0,
	0, 0, 0, 0, 0, 1630, 0, 0, 0, 0,
	3709, 0, 0, 0, 2808, 2809, 0, 1640, 0, 0,
	2282, 0, 0, 0, 240, 0, 0, 0, 0, 2816,
	0, 0, 0, 3013, 0, 0, 0, 1635, 0, 0,
	0, 0, 0, 0, 0, 2830, 0, 0, 0, 0,
	0, 0, 0, 2786, 0, 0, 0, 0, 0, 1314,
	0, 1314, 2842, 0, 0, 0, 0, 0, 0, 0,
	0, 1265, 0, 1636, 1637, 1638, 1639, 0, 0, 0,
	0, 0, 0, 1619, 0, 0, 4023, 0, 0, 2893,
	0, 0, 0, 1314, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 2508, 0, 0, 0, 0, 0,
	0, 1641, 1643, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 2385, 2385, 2385,
	0, 0, 0, 0, 0, 0, 1628, 1629, 0, 0,
	0, 0, 1753, 0, 0, 0, 0, 3278, 0, 0,
	2933, 0, 1631, 1627, 0, 1624, 1622, 1623, 1615, 1616,
	1617, 1618, 1620, 1621, 0, 1634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 1185, 241, 241, 0,
	1185, 241, 241, 0, 1185, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 2508, 0,
	2888, 2889, 2890, 0, 0, 0, 0, 2887, 2885, 2886,
	2878, 2879, 2880, 2881, 2883, 2884, 0, 1185, 0, 0,
	3802, 0, 0, 0, 0, 944, 0, 0, 0, 2876,
	2877, 0, 2894, 2895, 2896, 0, 0, 0, 0, 944,
	1185, 0, 241, 241, 0, 0, 0, 0, 0, 0,
	3246, 1314, 0, 2508, 0, 241, 0, 0, 0, 0,
	1640, 0, 0, 0, 0, 0, 0, 3030, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 241, 241, 0,
	1635, 241, 0, 1185, 0, 0, 0, 0, 0, 1185,
	0, 0, 0, 1185, 241, 241, 0, 0, 0, 0,
	0, 2891, 0, 1265, 0, 0, 0, 1185, 1611, 1612,
	0, 1644, 1645, 1646, 1654, 1655, 1656, 0, 0, 0,
	0, 0, 0, 0, 0, 1265, 0, 0, 0, 1647,
	1642, 0, 0, 0, 0, 0, 0, 1614, 0, 0,
	0, 0, 0, 0, 0, 1660, 0, 0, 0, 0,
	0, 2688, 0, 0, 0, 2876, 2877, 1185, 2894, 2895,
	2896, 0, 0, 0, 2688, 0, 0, 0, 0, 0,
	1613, 0, 0, 0, 0, 0, 3245, 0, 0, 0,
	1633, 0, 0, 0, 0, 0, 241, 2882, 1630, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 1631, 1627, 0, 1624, 1622,
	1623, 1615, 1616, 1617, 1618, 1620, 1621, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2891, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2897, 0, 0, 0, 1265, 0, 1265, 0, 0,
	0, 0, 0, 0, 0, 0, 1636, 1637, 1638, 1639,
	0, 0, 0, 0, 0, 0, 1619, 0, 0, 1265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2892,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1651, 0, 0, 1661, 0,
	0, 0, 0, 0, 1641, 1643, 0, 0, 0, 0,
	0, 0, 0, 2882, 0, 0, 1265, 0, 0, 0,
	1657, 0, 1658, 0, 1265, 2189, 0, 0, 0, 1628,
	1629, 3232, 3233, 0, 0, 3236, 0, 0, 0, 3239,
	0, 0, 0, 0, 0, 0, 0, 1649, 3243, 0,
	0, 0, 0, 0, 0, 0, 0, 3250, 1634, 0,
	2933, 0, 0, 0, 0, 0, 0, 2897, 0, 0,
	0, 0, 0, 0, 0, 3262, 0, 0, 0, 0,
	1265, 0, 0, 0, 1659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2893, 3285, 3286, 0, 3287, 3288,
	3289, 1648, 0, 0, 0, 2892, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3295, 0, 0, 0,
	3297, 0, 0, 0, 0, 2876, 2877, 241, 2894, 2895,
	2896, 0, 0, 1265, 0, 0, 0, 0, 1185, 0,
	0, 0, 241, 241, 241, 0, 0, 0, 0, 241,
	0, 3325, 3326, 1640, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 1265, 0, 0, 0, 1185, 0, 3337,
	0, 0, 0, 1635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3346, 0, 0, 0, 1185, 0,
	0, 0, 0, 0, 0, 0, 0, 2891, 1652, 0,
	0, 0, 0, 0, 1265, 0, 0, 0, 0, 0,
	0, 0, 0, 1611, 1612, 2888, 2889, 2890, 0, 1265,
	2893, 0, 2887, 2885, 2886, 2878, 2879, 2880, 2881, 2883,
	2884, 0, 0, 0, 0, 1642, 0, 0, 0, 0,
	0, 0, 1614, 0, 3382, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 958, 0, 0, 0, 0,
	3391, 3394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1265, 0, 0, 0, 1613, 0, 0, 0, 0,
	0, 0, 0, 2882, 0, 1633, 0, 0, 0, 0,
	1650, 3415, 0, 1630, 1625, 1626, 1632, 1653, 1631, 1627,
	0, 1624, 1622, 1623, 1615, 1616, 1617, 1618, 1620, 1621,
	0, 0, 0, 0, 2851, 2898, 0, 0, 2852, 1265,
	0, 0, 0, 0, 241, 1185, 1185, 241, 0, 0,
	0, 0, 0, 0, 0, 1185, 0, 2897, 0, 0,
	0, 2888, 2889, 2890, 0, 0, 0, 0, 2887, 2885,
	2886, 2878, 2879, 2880, 2881, 2883, 2884, 0, 0, 0,
	0, 1636, 1637, 1638, 1639, 0, 0, 0, 0, 0,
	0, 1619, 0, 0, 0, 2892, 0, 241, 0, 0,
	0, 241, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 241, 0, 1753, 0, 0, 0, 0, 0, 0,
	0, 0, 3503, 0, 241, 0, 241, 0, 241, 1641,
	1643, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1106, 0, 0, 0, 0,
	0, 0, 0, 0, 1628, 1629, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1634, 958, 958, 0, 0, 0, 235,
	235, 589, 0, 1185, 0, 1185, 0, 1185, 0, 0,
	3549, 3550, 0, 0, 0, 0, 3554, 3555, 0, 0,
	2893, 3558, 3559, 1185, 1185, 0, 0, 0, 3563, 0,
	0, 0, 0, 0, 1185, 241, 0, 0, 241, 3567,
	0, 0, 0, 0, 0, 0, 1185, 0, 1185, 1185,
	1185, 0, 0, 0, 0, 3572, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	241, 0, 241, 0, 241, 0, 241, 0, 241, 0,
	0, 0, 0, 0, 0, 958, 0, 0, 1640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1635, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2888, 2889, 2890, 0, 0, 0, 0, 2887, 2885,
	2886, 2878, 2879, 2880, 2881, 2883, 2884, 0, 0, 0,
	0, 0, 0, 1185, 0, 0, 0, 0, 0, 0,
	0, 3394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 980, 102, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1631, 1627, 0, 1624, 1622, 1623, 1615,
	1616, 1617, 1618, 1620, 1621, 0, 0, 0, 0, 0,
	1185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 991, 0, 0,
	0, 1611, 1612, 0, 1644, 1645, 1646, 1654, 1655, 1656,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1647, 1642, 3394, 0, 0, 0, 0, 0,
	1614, 0, 0, 0, 0, 0, 0, 0, 1660, 102,
	0, 239, 239, 239, 0, 0, 0, 0, 0, 1185,
	0, 0, 0, 0, 0, 0, 0, 3768, 3769, 3770,
	0, 0, 0, 1613, 0, 0, 0, 681, 0, 0,
	0, 0, 241, 1633, 0, 1185, 0, 0, 0, 0,
	2189, 1630, 0, 3779, 3780, 0, 0, 241, 0, 0,
	0, 681, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3788, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 919, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 939, 0, 0,
	0, 0, 0, 241, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 1185, 0, 3394, 0, 0, 1636,
	1637, 1638, 1639, 0, 3827, 0, 0, 0, 0, 1619,
	0, 0, 0, 0, 3834, 1100, 0, 944, 0, 0,
	0, 0, 0, 0, 1185, 0, 3842, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1651, 241,
	0, 1661, 0, 0, 0, 0, 0, 1641, 1643, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	1113, 0, 0, 1657, 241, 1658, 0, 0, 0, 0,
	0, 0, 1628, 1629, 0, 0, 0, 0, 0, 0,
	0, 241, 1185, 0, 0, 0, 0, 0, 0, 0,
	1649, 0, 0, 0, 0, 0, 1185, 0, 0, 0,
	0, 1634, 3394, 3394, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1659, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 1648, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3943, 0, 0, 3946, 0, 0, 0,
	0, 241, 0, 0, 241, 0, 0, 0, 241, 0,
	241, 0, 0, 0, 0, 3394, 0, 241, 241, 0,
	0, 1176, 1185, 1185, 0, 1185, 1640, 1284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1185, 0, 0,
	0, 0, 0, 0, 0, 0, 1635, 0, 241, 0,
	0, 0, 1185, 0, 0, 0, 944, 944, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 3394, 241, 0,
	3394, 1652, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1394, 0, 0, 0, 241, 241, 241, 241, 0,
	241, 0, 241, 0, 2189, 0, 0, 0, 0, 0,
	0, 1417, 0, 1417, 1417, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1459, 1460, 0, 241, 0, 0, 0, 944, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1650, 0, 0, 0, 1625, 1626, 1632,
	1653, 1631, 1627, 0, 1624, 1622, 1623, 1615, 1616, 1617,
	1618, 1620, 1621, 0, 0, 0, 0, 2278, 0, 0,
	0, 2279, 0, 0, 0, 0, 4084, 4084, 4084, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4105,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4084, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3394, 0, 3394, 0, 0,
	0, 0, 102, 0, 102, 0, 102, 0, 0, 0,
	0, 0, 0, 239, 0, 239, 239, 0, 0, 239,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 681, 0, 0, 1185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4084, 4212, 0, 0, 0, 0, 0,
	0, 4216, 0, 0, 0, 0, 0, 0, 0, 0,
	1185, 0, 0, 0, 0, 0, 0, 0, 102, 0,
	239, 239, 939, 102, 102, 1185, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 102, 0, 102, 0, 0,
	0, 0, 0, 0, 0, 1185, 0, 102, 0, 102,
	0, 0, 0, 239, 0, 239, 239, 0, 0, 239,
	0, 0, 754, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 239, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 738, 0, 0, 0,
	0, 0, 0, 1791, 0, 0, 0, 0, 0, 0,
	0, 0, 1185, 0, 0, 0, 102, 0, 1800, 0,
	1284, 0, 241, 241, 0, 241, 0, 0, 0, 0,
	0, 0, 241, 739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 740, 0, 241, 1185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1185, 0, 0,
	0, 0, 0, 741, 0, 0, 1185, 0, 0, 0,
	0, 1185, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 760, 1185, 0, 0, 0, 0, 241, 1185, 0,
	1185, 239, 0, 0, 1185, 0, 0, 0, 0, 0,
	742, 241, 0, 0, 919, 0, 0, 0, 0, 241,
	0, 0, 1185, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 1185, 743, 1676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1681, 0, 744, 0, 1687, 745, 0, 0, 0,
	0, 0, 0, 0, 0, 667, 0, 241, 0, 0,
	0, 241, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 759,
	1185, 1185, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1185, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 756, 0, 0, 1185, 0, 241, 1185,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1998, 0, 0, 0, 2005, 0, 0,
	0, 0, 0, 0, 1773, 0, 1776, 2016, 102, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	1394, 0, 2027, 0, 2027, 747, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1611, 1612, 0, 1644,
	1645, 1646, 1654, 1655, 1656, 0, 766, 0, 748, 1775,
	1185, 1113, 0, 0, 1417, 239, 0, 1647, 1642, 0,
	0, 1284, 0, 0, 0, 1614, 0, 1185, 0, 0,
	239, 1775, 239, 1660, 0, 0, 0, 681, 0, 0,
	666, 0, 681, 0, 0, 0, 0, 749, 0, 0,
	0, 764, 765, 762, 0, 0, 0, 0, 1613, 757,
	0, 0, 750, 0, 0, 0, 0, 0, 1633, 0,
	0, 0, 0, 0, 0, 0, 1630, 0, 0, 0,
	0, 2005, 0, 0, 2086, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 751,
	758, 0, 0, 0, 0, 2105, 0, 0, 752, 0,
	0, 0, 0, 0, 0, 0, 2115, 0, 2117, 0,
	2119, 753, 2121, 0, 2122, 0, 761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 668,
	0, 0, 0, 0, 1636, 1637, 1638, 1639, 0, 0,
	755, 0, 0, 0, 1619, 0, 0, 1185, 0, 0,
	0, 2143, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1651, 0, 0, 1661, 0, 0, 0,
	0, 0, 1641, 1643, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1657, 0,
	1658, 0, 239, 0, 0, 681, 0, 1628, 1629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1649, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1634, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 241, 0, 239,
	0, 0, 1659, 239, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 1185, 0, 0, 241, 0, 0, 1648,
	0, 0, 239, 0, 239, 0, 239, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	1027, 0, 0, 0, 0, 241, 939, 0, 939, 0,
	241, 0, 0, 0, 241, 0, 239, 0, 0, 0,
	1185, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 1640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1635, 0, 0, 1185, 1185, 1185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1185, 0, 0, 0, 0, 0, 1652, 0, 2441, 0,
	0, 0, 0, 239, 0, 0, 239, 241, 0, 1185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 1185, 0, 0, 0, 0, 0, 681, 239, 0,
	239, 0, 239, 0, 239, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2016, 0, 0, 698, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 919, 0, 0, 919,
	919, 0, 0, 239, 0, 0, 0, 0, 1650, 699,
	0, 0, 1625, 1626, 1632, 1653, 1631, 1627, 0, 1624,
	1622, 1623, 1615, 1616, 1617, 1618, 1620, 1621, 0, 0,
	0, 0, 0, 0, 0, 0, 3248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 700, 0, 717, 0,
	0, 0, 0, 1117, 2256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	939, 1185, 701, 1185, 0, 0, 702, 1284, 0, 1681,
	0, 0, 0, 1681, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 725, 1185, 0, 0, 0, 0,
	703, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 723, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2005, 241, 0, 0, 0, 0, 704, 2016, 0, 0,
	0, 0, 1185, 0, 241, 0, 241, 0, 0, 0,
	1185, 0, 0, 0, 0, 1100, 705, 0, 0, 706,
	241, 0, 0, 0, 727, 0, 0, 2664, 667, 0,
	1417, 1776, 0, 0, 1417, 0, 1417, 0, 1185, 1185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	1113, 0, 0, 102, 0, 0, 1185, 241, 0, 0,
	0, 1185, 0, 0, 2717, 0, 1113, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 2726, 0, 2729, 0, 0, 726, 0, 0,
	0, 0, 0, 0, 0, 239, 721, 0, 1185, 1185,
	1185, 0, 0, 0, 0, 0, 0, 0, 0, 1185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2751, 1284, 2753, 1284, 0, 2756, 0, 1611, 1612,
	0, 1644, 1645, 1646, 1654, 1655, 1656, 707, 0, 1185,
	0, 239, 0, 0, 239, 0, 0, 0, 709, 1647,
	1642, 0, 0, 0, 0, 102, 0, 1614, 0, 1417,
	0, 0, 0, 0, 0, 1660, 0, 2784, 0, 0,
	0, 710, 0, 0, 0, 0, 0, 0, 0, 0,
	1185, 0, 1185, 0, 0, 0, 0, 0, 102, 0,
	1613, 0, 0, 0, 0, 1185, 0, 239, 0, 0,
	1633, 0, 0, 666, 241, 0, 0, 0, 1630, 239,
	0, 0, 0, 0, 697, 0, 718, 0, 0, 0,
	0, 0, 239, 102, 0, 711, 102, 0, 102, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 1185, 716, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 1185, 1185,
	0, 0, 712, 0, 681, 730, 0, 729, 0, 102,
	0, 713, 102, 0, 0, 0, 1636, 1637, 1638, 1639,
	0, 0, 0, 0, 714, 0, 1619, 0, 0, 722,
	0, 0, 239, 0, 731, 1185, 728, 0, 1185, 239,
	0, 0, 668, 0, 0, 0, 0, 102, 0, 0,
	0, 0, 0, 0, 0, 1651, 0, 0, 1661, 0,
	0, 0, 0, 0, 1641, 1643, 0, 0, 0, 239,
	0, 0, 239, 241, 241, 0, 239, 0, 239, 0,
	1657, 0, 1658, 0, 0, 239, 239, 1117, 0, 1628,
	1629, 1117, 0, 0, 0, 1117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1649, 0, 245,
	102, 0, 0, 0, 0, 0, 239, 0, 1634, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1117, 0,
	0, 0, 0, 0, 239, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 1659, 0, 0, 0, 0, 0,
	0, 1117, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 1648, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 239, 239, 239, 0, 239, 673,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 1117, 0, 1185, 0, 0, 0,
	1117, 0, 0, 673, 1117, 0, 1185, 1185, 0, 0,
	0, 239, 0, 1640, 3004, 0, 0, 0, 1117, 239,
	2256, 0, 0, 1185, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1635, 0, 0, 0, 0, 0, 0,
	0, 1681, 0, 0, 0, 0, 0, 0, 3048, 3050,
	0, 2016, 0, 0, 0, 0, 0, 0, 1652, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 1117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 831, 0, 873, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 996,
	0, 0, 0, 0, 0, 0, 0, 0, 839, 0,
	0, 0, 0, 0, 0, 3119, 0, 0, 0, 3123,
	0, 0, 0, 0, 852, 837, 836, 0, 0, 0,
	1650, 0, 0, 0, 1625, 1626, 1632, 1653, 1631, 1627,
	0, 1624, 1622, 1623, 1615, 1616, 1617, 1618, 1620, 1621,
	0, 0, 838, 0, 0, 0, 0, 841, 2854, 0,
	1100, 0, 881, 1417, 0, 0, 0, 1284, 1284, 0,
	849, 850, 0, 0, 0, 1100, 0, 0, 866, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 874, 843, 3181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1113, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 844,
	1113, 0, 0, 0, 0, 0, 0, 0, 872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3218, 0, 1284, 0, 0, 0,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 845, 0, 0, 0, 0, 0,
	0, 0, 835, 0, 0, 0, 0, 0, 0, 3230,
	0, 0, 0, 0, 0, 0, 0, 0, 102, 102,
	846, 847, 102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 854, 853,
	0, 0, 1117, 0, 1117, 0, 848, 0, 0, 0,
	863, 0, 0, 0, 102, 102, 0, 0, 102, 1117,
	0, 0, 0, 0, 0, 878, 0, 0, 0, 0,
	239, 239, 0, 239, 1830, 0, 0, 0, 0, 0,
	1775, 0, 0, 0, 0, 875, 0, 0, 1117, 0,
	0, 0, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	842, 0, 0, 880, 0, 239, 0, 0, 0, 0,
	0, 1100, 0, 0, 939, 0, 0, 0, 840, 681,
	0, 0, 870, 871, 0, 0, 0, 239, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 102, 102, 0, 0, 0,
	0, 0, 868, 0, 0, 0, 1113, 0, 0, 879,
	864, 0, 857, 855, 0, 860, 0, 0, 0, 0,
	0, 861, 0, 0, 833, 239, 876, 0, 0, 239,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 834, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 862, 0, 0,
	0, 0, 859, 0, 0, 0, 1117, 1117, 0, 0,
	0, 0, 877, 0, 0, 0, 1117, 0, 0, 0,
	865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1182, 0, 0, 0,
	1182, 867, 0, 0, 1302, 0, 239, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 869, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1302, 0, 0,
	0, 239, 2016, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2016, 0, 0, 0, 0, 0, 0,
	1302, 0, 0, 3471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2016, 0, 0, 0,
	3485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1302, 0, 0, 0, 0, 0, 1302,
	0, 0, 0, 1302, 1117, 0, 1117, 0, 1117, 0,
	0, 0, 0, 0, 0, 0, 0, 1302, 0, 102,
	0, 0, 0, 0, 1117, 1117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1117, 0, 1100, 1100, 0,
	0, 0, 0, 3534, 0, 0, 0, 1117, 0, 1117,
	1117, 1117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1113, 1113, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1183, 0, 0, 0,
	1183, 0, 0, 0, 1303, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1303, 0, 1830, 1830, 1117, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1303, 0, 0, 0, 0, 0, 1303,
	0, 0, 0, 1303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 1303, 0, 0,
	0, 0, 102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 3656, 0, 0,
	0, 1117, 0, 0, 0, 239, 0, 0, 1100, 0,
	2016, 0, 0, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 1303, 239, 0,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1113, 0, 0, 0, 102, 0, 0,
	0, 0, 0, 1117, 2016, 0, 0, 0, 0, 0,
	1117, 0, 0, 3724, 0, 0, 0, 0, 0, 1117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1117, 0, 1182, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 0, 673,
	0, 0, 0, 0, 673, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 102, 0, 0, 0,
	0, 0, 1100, 0, 0, 1117, 0, 0, 0, 0,
	1100, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3809, 0, 0, 0, 0, 1830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1113, 0, 0,
	0, 0, 0, 0, 0, 1113, 0, 0, 0, 0,
	0, 0, 0, 1117, 0, 0, 0, 0, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 1117, 0, 0,
	2016, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1302, 1302, 0, 0, 0,
	0, 0, 0, 0, 0, 1182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1183, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	102, 0, 239, 0, 239, 0, 0, 0, 0, 0,
	102, 0, 0, 0, 0, 0, 0, 1303, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3921,
	1284, 0, 102, 0, 0, 0, 0, 0, 1183, 0,
	0, 0, 0, 1117, 1117, 0, 1117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 1117, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 1117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1302, 0, 1302, 0, 1302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1302, 1302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1302, 0, 0, 0, 0, 3988,
	0, 0, 0, 0, 0, 0, 1302, 0, 1302, 1302,
	1302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1303, 1303, 0, 0, 673,
	0, 0, 0, 0, 0, 1183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 4031, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4053, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4065, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 2256, 0, 1182, 0, 0, 0, 144, 0, 0,
	0, 0, 0, 0, 68, 0, 44, 43, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	69, 0, 0, 139, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 73, 0, 0, 0,
	0, 0, 0, 1303, 0, 1303, 63, 1303, 0, 0,
	0, 0, 0, 46, 0, 141, 0, 0, 0, 0,
	0, 239, 239, 1303, 1303, 0, 0, 0, 0, 0,
	0, 45, 0, 79, 1303, 0, 0, 0, 0, 0,
	1182, 0, 0, 0, 0, 0, 1303, 0, 1303, 1303,
	1303, 0, 0, 0, 0, 48, 64, 0, 1117, 1117,
	0, 0, 0, 49, 0, 0, 0, 0, 85, 0,
	0, 102, 142, 1117, 0, 0, 0, 0, 0, 0,
	47, 0, 100, 0, 0, 0, 0, 86, 97, 0,
	0, 1117, 102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1117, 0, 0, 1117, 0, 239, 1182,
	0, 0, 0, 0, 0, 0, 0, 0, 50, 0,
	0, 0, 1830, 0, 0, 0, 1117, 0, 0, 0,
	0, 0, 0, 0, 0, 1182, 87, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1183, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 102, 0, 0, 102, 0,
	0, 0, 0, 0, 1302, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 1117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1117, 0,
	239, 0, 0, 0, 1182, 0, 0, 1117, 0, 0,
	0, 0, 1117, 0, 0, 0, 0, 0, 239, 0,
	1183, 0, 0, 1117, 0, 0, 0, 90, 0, 1117,
	0, 1117, 0, 0, 0, 1117, 0, 0, 51, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1117, 0, 55, 0, 0, 0, 0,
	0, 65, 1182, 1117, 0, 0, 54, 171, 93, 0,
	96, 0, 0, 0, 52, 0, 1302, 0, 143, 1117,
	0, 0, 0, 0, 0, 53, 0, 0, 0, 1183,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 58, 0, 0, 0, 136, 0, 0, 0,
	0, 0, 0, 0, 0, 1183, 0, 0, 0, 0,
	140, 1117, 1117, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 0, 0, 0,
	0, 0, 0, 1117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1302, 1302, 175, 1302, 0, 1117, 0, 0,
	1117, 0, 211, 0, 1303, 0, 0, 1302, 0, 0,
	0, 0, 204, 0, 0, 0, 0, 0, 0, 0,
	205, 0, 1302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1183, 0, 0, 0, 0, 0,
	0, 0, 174, 0, 0, 3, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1117, 0,
	0, 0, 1183, 0, 0, 0, 0, 0, 1830, 1830,
	0, 0, 0, 0, 0, 0, 1303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1830, 1830, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 1611,
	1612, 0, 1644, 1645, 1646, 1654, 1655, 1656, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1647, 1642, 0, 0, 0, 1117, 1117, 0, 1614, 0,
	0, 0, 0, 0, 0, 0, 1660, 0, 0, 0,
	0, 0, 1303, 1303, 0, 1303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1303, 1117, 0,
	0, 1613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1633, 1303, 0, 0, 0, 0, 0, 0, 1630,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1636, 1637, 1638,
	1639, 0, 0, 0, 0, 0, 0, 1619, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1117, 0, 1651, 0, 0, 1661,
	0, 0, 0, 0, 0, 1641, 1643, 0, 0, 0,
	1182, 0, 0, 1830, 0, 0, 0, 0, 0, 0,
	0, 1657, 0, 1658, 0, 1182, 0, 0, 0, 0,
	1628, 1629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1117, 0, 0, 0, 1182, 0, 0, 1649, 0,
	0, 0, 0, 0, 0, 0, 1117, 0, 0, 1634,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1117, 1117, 1117, 0, 0,
	0, 0, 0, 0, 0, 1659, 0, 0, 0, 0,
	0, 1117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1302, 0, 0, 0, 0, 0, 0, 0,
	1117, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1117, 0, 0, 0, 0, 1302, 0, 0,
	0, 0, 0, 1830, 0, 0, 0, 1182, 0, 0,
	0, 0, 0, 0, 1640, 0, 1302, 0, 0, 0,
	0, 1302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1302, 0, 1635, 0, 0, 0, 1302, 0,
	1302, 0, 0, 0, 1182, 0, 0, 0, 1183, 0,
	0, 673, 0, 0, 0, 0, 0, 0, 0, 1652,
	0, 0, 1302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1302, 0, 0, 0, 0, 0, 0, 0,
	1183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1183, 0, 0, 0, 0,
	1117, 0, 0, 0, 0, 0, 0, 0, 1117, 0,
	0, 0, 1117, 0, 1117, 1183, 0, 0, 0, 0,
	0, 1117, 0, 0, 0, 0, 0, 0, 0, 0,
	1302, 1302, 0, 0, 0, 0, 1117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1650, 1302, 0, 0, 1625, 1626, 1632, 1653, 1631,
	1627, 0, 1624, 1622, 1623, 1615, 1616, 1617, 1618, 1620,
	1621, 0, 1303, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1117, 0, 0, 1182, 0, 0, 1182,
	0, 1117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1303, 1611, 1612,
	0, 1644, 1645, 1646, 1654, 1655, 1656, 1183, 0, 1117,
	1117, 0, 0, 0, 0, 0, 1303, 0, 0, 1647,
	1642, 1303, 0, 0, 0, 0, 0, 1614, 0, 0,
	0, 0, 1303, 0, 0, 1660, 0, 1117, 1303, 0,
	1303, 0, 1117, 0, 1183, 0, 0, 0, 0, 0,
	1182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1613, 0, 1303, 0, 0, 0, 0, 1182, 0, 0,
	1633, 0, 1303, 0, 0, 0, 0, 0, 1630, 1117,
	1117, 1117, 0, 0, 0, 0, 0, 0, 0, 0,
	1117, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1117, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1303, 1303, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1830, 0, 0, 0, 0, 1636, 1637, 1638, 1639,
	0, 0, 1303, 0, 0, 0, 1619, 0, 0, 0,
	0, 1117, 0, 1117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1117, 0, 0, 0,
	0, 0, 0, 0, 0, 1651, 1183, 0, 1661, 1183,
	0, 0, 0, 0, 1641, 1643, 0, 1182, 0, 0,
	0, 1830, 0, 0, 0, 0, 0, 0, 0, 0,
	1657, 0, 1658, 0, 0, 0, 0, 0, 0, 1628,
	1629, 0, 0, 0, 0, 0, 0, 0, 1117, 0,
	0, 0, 0, 0, 0, 0, 0, 1649, 0, 1117,
	1117, 0, 0, 0, 0, 0, 0, 0, 1634, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1659, 0, 1117, 1183, 0, 1117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1648, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 0, 0, 0, 0, 0,
	0, 0, 0, 1640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1635, 0, 0, 0, 0, 0, 0,
	1302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1652, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1302, 1302, 1302, 1183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1117, 0, 1182,
	0, 0, 0, 0, 0, 0, 0, 1117, 1117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1182, 0, 0, 1117, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1650, 0, 0, 0, 1625, 1626, 1632, 1653, 1631, 1627,
	0, 1624, 1622, 1623, 1615, 1616, 1617, 1618, 1620, 1621,
	0, 0, 0, 0, 0, 0, 0, 0, 2853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1303, 1182, 0, 1182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1182, 0, 0, 0, 0,
	0, 0, 0, 0, 1303, 1303, 1303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1303, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1183,
	0, 0, 1182, 0, 0, 0, 0, 0, 0, 0,
	1182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1302, 1302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1182, 0, 0, 0,
	0, 1302, 0, 0, 1611, 1612, 0, 1644, 1645, 1646,
	1654, 1655, 1656, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1647, 1642, 0, 0, 0,
	0, 0, 0, 1614, 0, 0, 0, 0, 1302, 1302,
	1302, 1660, 0, 0, 0, 0, 0, 0, 0, 1182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1613, 0, 0, 0,
	0, 1183, 0, 1183, 0, 0, 1633, 0, 0, 1182,
	0, 0, 0, 0, 1630, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1182, 0, 1302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1182, 0, 0, 0, 0,
	0, 0, 1183, 0, 0, 0, 0, 0, 0, 0,
	1183, 0, 1636, 1637, 1638, 1639, 0, 0, 0, 0,
	0, 0, 1619, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1303, 1303,
	0, 0, 0, 0, 0, 0, 0, 1182, 0, 0,
	0, 1651, 0, 0, 1661, 0, 0, 0, 1302, 1302,
	1641, 1643, 0, 0, 0, 0, 1183, 0, 0, 0,
	0, 1303, 0, 0, 0, 0, 1657, 0, 1658, 0,
	0, 0, 0, 0, 0, 1628, 1629, 0, 0, 0,
	0, 0, 0, 0, 0, 1182, 0, 0, 1302, 0,
	0, 0, 0, 1649, 0, 0, 0, 0, 1303, 1303,
	1303, 0, 0, 0, 1634, 0, 0, 0, 0, 1183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1659, 0, 0, 0, 0, 0, 0, 0, 0, 1183,
	0, 0, 0, 0, 0, 0, 0, 1648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1183, 0, 1303, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1183, 0, 0, 0, 1640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1652, 0, 1302, 1183, 0, 0,
	0, 0, 0, 0, 0, 0, 1302, 1302, 1303, 1303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1183, 0, 0, 1303, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1650, 0, 0, 0,
	1625, 1626, 1632, 1653, 1631, 1627, 0, 1624, 1622, 1623,
	1615, 1616, 1617, 1618, 1620, 1621, 0, 0, 0, 0,
	0, 0, 0, 0, 2850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1180, 0, 1303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1303, 1303, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 1186, 255, 256,
	1187, 1188, 1189, 1303, 1190, 535, 1191, 1192, 1193, 1194,
	257, 258, 260, 259, 261, 262, 263, 264, 536, 537,
	0, 265, 538, 266, 539, 1195, 540, 267, 268, 269,
	270, 271, 1196, 1197, 0, 272, 541, 542, 543, 1198,
	273, 274, 544, 1199, 1266, 1200, 275, 276, 277, 278,
	279, 280, 281, 0, 1201, 283, 284, 285, 282, 1202,
	286, 0, 287, 288, 289, 290, 291, 1203, 292, 1058,
	293, 294, 1204, 1205, 1207, 1206, 1208, 1209, 1210, 295,
	296, 297, 298, 0, 299, 545, 546, 1211, 303, 300,
	301, 1212, 304, 302, 1213, 305, 306, 307, 1214, 1215,
	308, 309, 310, 1216, 311, 312, 1217, 313, 314, 315,
	1218, 316, 317, 547, 318, 319, 320, 322, 324, 321,
	325, 326, 327, 328, 548, 549, 1219, 246, 1220, 0,
	0, 0, 0, 329, 330, 331, 550, 0, 0, 0,
	332, 1221, 333, 1222, 1223, 1059, 334, 335, 551, 552,
	336, 337, 1224, 338, 553, 1225, 554, 339, 1226, 340,
	341, 342, 343, 344, 555, 556, 557, 402, 1061, 345,
	346, 1227, 347, 348, 349, 350, 0, 0, 0, 247,
	351, 352, 354, 1228, 1060, 353, 558, 559, 1229, 560,
	1230, 355, 356, 1062, 561, 1063, 357, 358, 359, 1064,
	360, 0, 0, 0, 361, 362, 363, 364, 365, 366,
	1231, 367, 369, 368, 1232, 370, 562, 1065, 371, 372,
	1066, 1233, 373, 374, 375, 1234, 1235, 376, 377, 378,
	379, 0, 380, 381, 383, 385, 382, 384, 389, 386,
	387, 388, 391, 0, 390, 1067, 392, 393, 394, 398,
	397, 399, 396, 1068, 395, 1236, 248, 1069, 400, 1237,
	563, 401, 564, 403, 404, 1238, 0, 405, 0, 1239,
	1240, 407, 408, 409, 1241, 1242, 410, 411, 565, 1070,
	412, 1071, 566, 413, 414, 406, 415, 416, 417, 418,
	419, 420, 421, 422, 1243, 423, 424, 567, 568, 569,
	425, 570, 426, 427, 1244, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 571, 437, 436, 438, 1245, 439,
	0, 0, 0, 0, 0, 440, 0, 442, 443, 444,
	441, 445, 446, 447, 448, 1246, 449, 450, 451, 1072,
	452, 453, 454, 455, 572, 456, 0, 457, 458, 464,
	465, 459, 460, 466, 467, 468, 469, 470, 1247, 472,
	473, 471, 474, 475, 476, 1248, 477, 461, 462, 478,
	479, 1073, 480, 481, 482, 483, 484, 485, 573, 0,
	486, 1249, 487, 488, 489, 490, 463, 491, 496, 574,
	492, 493, 494, 495, 575, 1250, 498, 499, 0, 497,
	1251, 500, 501, 502, 503, 504, 505, 323, 506, 1252,
	507, 576, 577, 578, 579, 1253, 514, 1254, 508, 509,
	580, 510, 581, 1255, 511, 512, 513, 0, 515, 516,
	1256, 1257, 517, 518, 519, 521, 522, 520, 523, 1258,
	524, 1259, 0, 525, 526, 527, 582, 583, 584, 1260,
	529, 528, 585, 1261, 1262, 1263, 1264, 530, 531, 586,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1180, 0, 0, 0,
	0, 0, 0, 0, 2419, 0, 0, 0, 0, 0,
	0, 0, 2420, 249, 250, 251, 252, 253, 254, 1186,
	255, 256, 1187, 1188, 1189, 0, 1190, 535, 1191, 1192,
	1193, 1194, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 537, 0, 265, 538, 266, 539, 1195, 540, 267,
	268, 269, 270, 271, 1196, 1197, 0, 272, 541, 542,
	543, 1198, 273, 274, 544, 1199, 1266, 1200, 275, 276,
	277, 278, 279, 280, 281, 0, 1201, 283, 284, 285,
	282, 1202, 286, 0, 287, 288, 289, 290, 291, 1203,
	292, 1058, 293, 294, 1204, 1205, 1207, 1206, 1208, 1209,
	1210, 295, 296, 297, 298, 0, 299, 545, 546, 1211,
	303, 300, 301, 1212, 304, 302, 1213, 305, 306, 307,
	1214, 1215, 308, 309, 310, 1216, 311, 312, 1217, 313,
	314, 315, 1218, 316, 317, 547, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 548, 549, 1219, 246,
	1220, 0, 0, 0, 0, 329, 330, 331, 550, 0,
	0, 0, 332, 1221, 333, 1222, 1223, 1059, 334, 335,
	551, 552, 336, 337, 1224, 338, 553, 1225, 554, 339,
	1226, 340, 341, 342, 343, 344, 555, 556, 557, 402,
	1061, 345, 346, 1227, 347, 348, 349, 350, 0, 0,
	0, 247, 351, 352, 354, 1228, 1060, 353, 558, 559,
	1229, 560, 1230, 355, 356, 1062, 561, 1063, 357, 358,
	359, 1064, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 1231, 367, 369, 368, 1232, 370, 562, 1065,
	371, 372, 1066, 1233, 373, 374, 375, 1234, 1235, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 1067, 392, 393,
	394, 398, 397, 399, 396, 1068, 395, 1236, 248, 1069,
	400, 1237, 563, 401, 564, 403, 404, 1238, 0, 405,
	0, 1239, 1240, 407, 408, 409, 1241, 1242, 410, 411,
	565, 1070, 412, 1071, 566, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 1243, 423, 424, 567,
	568, 569, 425, 570, 426, 427, 1244, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 571, 437, 436, 438,
	1245, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 1246, 449, 450,
	451, 1072, 452, 453, 454, 455, 572, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	1247, 472, 473, 471, 474, 475, 476, 1248, 477, 461,
	462, 478, 479, 1073, 480, 481, 482, 483, 484, 485,
	573, 0, 486, 1249, 487, 488, 489, 490, 463, 491,
	496, 574, 492, 493, 494, 495, 575, 1250, 498, 499,
	0, 497, 1251, 500, 501, 502, 503, 504, 505, 323,
	506, 1252, 507, 576, 577, 578, 579, 1253, 514, 1254,
	508, 509, 580, 510, 581, 1255, 511, 512, 513, 0,
	515, 516, 1256, 1257, 517, 518, 519, 521, 522, 520,
	523, 1258, 524, 1259, 0, 525, 526, 527, 582, 583,
	584, 1260, 529, 528, 585, 1261, 1262, 1263, 1264, 530,
	531, 586, 532, 533, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1180, 0, 0, 0,
	0, 3256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3258, 249, 250, 251, 252, 253, 254, 1186,
	255, 256, 1187, 1188, 1189, 0, 1190, 535, 1191, 1192,
	1193, 1194, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 537, 0, 265, 538, 266, 539, 1195, 540, 267,
	268, 269, 270, 271, 1196, 1197, 0, 272, 541, 542,
	543, 1198, 273, 274, 544, 1199, 1266, 1200, 275, 276,
	277, 278, 279, 280, 281, 0, 1201, 283, 284, 285,
	282, 1202, 286, 0, 287, 288, 289, 290, 291, 1203,
	292, 1058, 293, 294, 1204, 1205, 1207, 1206, 1208, 1209,
	1210, 295, 296, 297, 298, 0, 299, 545, 546, 1211,
	303, 300, 301, 1212, 304, 302, 1213, 305, 306, 307,
	1214, 1215, 308, 309, 310, 1216, 311, 312, 1217, 313,
	314, 315, 1218, 316, 317, 547, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 548, 549, 1219, 246,
	1220, 0, 0, 0, 0, 329, 330, 331, 550, 0,
	0, 0, 332, 1221, 333, 1222, 1223, 1059, 334, 335,
	551, 552, 336, 337, 1224, 338, 553, 1225, 554, 339,
	1226, 340, 341, 342, 343, 344, 555, 556, 557, 402,
	1061, 345, 346, 1227, 347, 348, 349, 350, 0, 0,
	0, 247, 351, 352, 354, 1228, 1060, 353, 558, 559,
	1229, 560, 1230, 355, 356, 1062, 561, 1063, 357, 358,
	359, 1064, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 1231, 367, 369, 368, 1232, 370, 562, 1065,
	371, 372, 1066, 1233, 373, 374, 375, 1234, 1235, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 1067, 392, 393,
	394, 398, 397, 399, 396, 1068, 395, 1236, 248, 1069,
	400, 1237, 563, 401, 564, 403, 404, 1238, 0, 405,
	0, 1239, 1240, 407, 408, 409, 1241, 1242, 410, 411,
	565, 1070, 412, 1071, 566, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 1243, 423, 424, 567,
	568, 569, 425, 570, 426, 427, 1244, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 571, 437, 436, 438,
	1245, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 1246, 449, 450,
	451, 1072, 452, 453, 454, 455, 572, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	1247, 472, 473, 471, 474, 475, 476, 1248, 477, 461,
	462, 478, 479, 1073, 480, 481, 482, 483, 484, 485,
	573, 0, 486, 1249, 487, 488, 489, 490, 463, 491,
	496, 574, 492, 493, 494, 495, 575, 1250, 498, 499,
	0, 497, 1251, 500, 501, 502, 503, 504, 505, 323,
	506, 1252, 507, 576, 577, 578, 579, 1253, 514, 1254,
	508, 509, 580, 510, 581, 1255, 511, 512, 513, 0,
	515, 516, 1256, 1257, 517, 518, 519, 521, 522, 520,
	523, 1258, 524, 1259, 0, 525, 526, 527, 582, 583,
	584, 1260, 529, 528, 585, 1261, 1262, 1263, 1264, 530,
	531, 586, 532, 533, 534, 0, 0, 0, 0, 0,
	1180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3605, 249, 250, 251,
	252, 253, 254, 1186, 255, 256, 1187, 1188, 1189, 0,
	1190, 535, 1191, 1192, 1193, 1194, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 537, 0, 265, 538, 266,
	539, 1195, 540, 267, 268, 269, 270, 271, 1196, 1197,
	0, 272, 541, 542, 543, 1198, 273, 274, 544, 1199,
	1266, 1200, 275, 276, 277, 278, 279, 280, 281, 0,
	1201, 283, 284, 285, 282, 1202, 286, 0, 287, 288,
	289, 290, 291, 1203, 292, 1058, 293, 294, 1204, 1205,
	1207, 1206, 1208, 1209, 1210, 295, 296, 297, 298, 0,
	299, 545, 546, 1211, 303, 300, 301, 1212, 304, 302,
	1213, 305, 306, 307, 1214, 1215, 308, 309, 310, 1216,
	311, 312, 1217, 313, 314, 315, 1218, 316, 317, 547,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	548, 549, 1219, 246, 1220, 0, 0, 0, 0, 329,
	330, 331, 550, 0, 0, 0, 332, 1221, 333, 1222,
	1223, 1059, 334, 335, 551, 552, 336, 337, 1224, 338,
	553, 1225, 554, 339, 1226, 340, 341, 342, 343, 344,
	555, 556, 557, 402, 1061, 345, 346, 1227, 347, 348,
	349, 350, 0, 0, 0, 247, 351, 352, 354, 1228,
	1060, 353, 558, 559, 1229, 560, 1230, 355, 356, 1062,
	561, 1063, 357, 358, 359, 1064, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 1231, 367, 369, 368,
	1232, 370, 562, 1065, 371, 372, 1066, 1233, 373, 374,
	375, 1234, 1235, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 1067, 392, 393, 394, 398, 397, 399, 396, 1068,
	395, 1236, 248, 1069, 400, 1237, 563, 401, 564, 403,
	404, 1238, 0, 405, 0, 1239, 1240, 407, 408, 409,
	1241, 1242, 410, 411, 565, 1070, 412, 1071, 566, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	1243, 423, 424, 567, 568, 569, 425, 570, 426, 427,
	1244, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	571, 437, 436, 438, 1245, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 1246, 449, 450, 451, 1072, 452, 453, 454, 455,
	572, 456, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 1247, 472, 473, 471, 474, 475,
	476, 1248, 477, 461, 462, 478, 479, 1073, 480, 481,
	482, 483, 484, 485, 573, 0, 486, 1249, 487, 488,
	489, 490, 463, 491, 496, 574, 492, 493, 494, 495,
	575, 1250, 498, 499, 0, 497, 1251, 500, 501, 502,
	503, 504, 505, 323, 506, 1252, 507, 576, 577, 578,
	579, 1253, 514, 1254, 508, 509, 580, 510, 581, 1255,
	511, 512, 513, 0, 515, 516, 1256, 1257, 517, 518,
	519, 521, 522, 520, 523, 1258, 524, 1259, 0, 525,
	526, 527, 582, 583, 584, 1260, 529, 528, 585, 1261,
	1262, 1263, 1264, 530, 531, 586, 532, 533, 534, 1180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3774, 249, 250, 251, 252,
	253, 254, 1186, 255, 256, 1187, 1188, 1189, 0, 1190,
	535, 1191, 1192, 1193, 1194, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 537, 0, 265, 538, 266, 539,
	1195, 540, 267, 268, 269, 270, 271, 1196, 1197, 0,
	272, 541, 542, 543, 1198, 273, 274, 544, 1199, 1266,
	1200, 275, 276, 277, 278, 279, 280, 281, 0, 1201,
	283, 284, 285, 282, 1202, 286, 0, 287, 288, 289,
	290, 291, 1203, 292, 1058, 293, 294, 1204, 1205, 1207,
	1206, 1208, 1209, 1210, 295, 296, 297, 298, 0, 299,
	545, 546, 1211, 303, 300, 301, 1212, 304, 302, 1213,
	305, 306, 307, 1214, 1215, 308, 309, 310, 1216, 311,
	312, 1217, 313, 314, 315, 1218, 316, 317, 547, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 548,
	549, 1219, 246, 1220, 0, 0, 0, 0, 329, 330,
	331, 550, 0, 0, 0, 332, 1221, 333, 1222, 1223,
	1059, 334, 335, 551, 552, 336, 337, 1224, 338, 553,
	1225, 554, 339, 1226, 340, 341, 342, 343, 344, 555,
	556, 557, 402, 1061, 345, 346, 1227, 347, 348, 349,
	350, 0, 0, 0, 247, 351, 352, 354, 1228, 1060,
	353, 558, 559, 1229, 560, 1230, 355, 356, 1062, 561,
	1063, 357, 358, 359, 1064, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 1231, 367, 369, 368, 1232,
	370, 562, 1065, 371, 372, 1066, 1233, 373, 374, 375,
	1234, 1235, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	1067, 392, 393, 394, 398, 397, 399, 396, 1068, 395,
	1236, 248, 1069, 400, 1237, 563, 401, 564, 403, 404,
	1238, 0, 405, 0, 1239, 1240, 407, 408, 409, 1241,
	1242, 410, 411, 565, 1070, 412, 1071, 566, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 1243,
	423, 424, 567, 568, 569, 425, 570, 426, 427, 1244,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 571,
	437, 436, 438, 1245, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	1246, 449, 450, 451, 1072, 452, 453, 454, 455, 572,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 1247, 472, 473, 471, 474, 475, 476,
	1248, 477, 461, 462, 478, 479, 1073, 480, 481, 482,
	483, 484, 485, 573, 0, 486, 1249, 487, 488, 489,
	490, 463, 491, 496, 574, 492, 493, 494, 495, 575,
	1250, 498, 499, 0, 497, 1251, 500, 501, 502, 503,
	504, 505, 323, 506, 1252, 507, 576, 577, 578, 579,
	1253, 514, 1254, 508, 509, 580, 510, 581, 1255, 511,
	512, 513, 0, 515, 516, 1256, 1257, 517, 518, 519,
	521, 522, 520, 523, 1258, 524, 1259, 0, 525, 526,
	527, 582, 583, 584, 1260, 529, 528, 585, 1261, 1262,
	1263, 1264, 530, 531, 586, 532, 533, 534, 1180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3664, 249, 250, 251, 252, 253,
	254, 1186, 255, 256, 1187, 1188, 1189, 0, 1190, 535,
	1191, 1192, 1193, 1194, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 1195,
	540, 267, 268, 269, 270, 271, 1196, 1197, 0, 272,
	541, 542, 543, 1198, 273, 274, 544, 1199, 1266, 1200,
	275, 276, 277, 278, 279, 280, 281, 0, 1201, 283,
	284, 285, 282, 1202, 286, 0, 287, 288, 289, 290,
	291, 1203, 292, 1058, 293, 294, 1204, 1205, 1207, 1206,
	1208, 1209, 1210, 295, 296, 297, 298, 0, 299, 545,
	546, 1211, 303, 300, 301, 1212, 304, 302, 1213, 305,
	306, 307, 1214, 1215, 308, 309, 310, 1216, 311, 312,
	1217, 313, 314, 315, 1218, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	1219, 246, 1220, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 1221, 333, 1222, 1223, 1059,
	334, 335, 551, 552, 336, 337, 1224, 338, 553, 1225,
	554, 339, 1226, 340, 341, 342, 343, 344, 555, 556,
	557, 402, 1061, 345, 346, 1227, 347, 348, 349, 350,
	0, 0, 0, 247, 351, 352, 354, 1228, 1060, 353,
	558, 559, 1229, 560, 1230, 355, 356, 1062, 561, 1063,
	357, 358, 359, 1064, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 1231, 367, 369, 368, 1232, 370,
	562, 1065, 371, 372, 1066, 1233, 373, 374, 375, 1234,
	1235, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 1067,
	392, 393, 394, 398, 397, 399, 396, 1068, 395, 1236,
	248, 1069, 400, 1237, 563, 401, 564, 403, 404, 1238,
	0, 405, 0, 1239, 1240, 407, 408, 409, 1241, 1242,
	410, 411, 565, 1070, 412, 1071, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 1243, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 1244, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 1245, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 1246,
	449, 450, 451, 1072, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 1247, 472, 473, 471, 474, 475, 476, 1248,
	477, 461, 462, 478, 479, 1073, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 1249, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 1250,
	498, 499, 0, 497, 1251, 500, 501, 502, 503, 504,
	505, 323, 506, 1252, 507, 576, 577, 578, 579, 1253,
	514, 1254, 508, 509, 580, 510, 581, 1255, 511, 512,
	513, 0, 515, 516, 1256, 1257, 517, 518, 519, 521,
	522, 520, 523, 1258, 524, 1259, 0, 525, 526, 527,
	582, 583, 584, 1260, 529, 528, 585, 1261, 1262, 1263,
	1264, 530, 531, 586, 532, 533, 534, 1180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3535, 249, 250, 251, 252, 253, 254,
	1186, 255, 256, 1187, 1188, 1189, 0, 1190, 535, 1191,
	1192, 1193, 1194, 257, 258, 260, 259, 261, 262, 263,
	264, 536, 537, 0, 265, 538, 266, 539, 1195, 540,
	267, 268, 269, 270, 271, 1196, 1197, 0, 272, 541,
	542, 543, 1198, 273, 274, 544, 1199, 1266, 1200, 275,
	276, 277, 278, 279, 280, 281, 0, 1201, 283, 284,
	285, 282, 1202, 286, 0, 287, 288, 289, 290, 291,
	1203, 292, 1058, 293, 294, 1204, 1205, 1207, 1206, 1208,
	1209, 1210, 295, 296, 297, 298, 0, 299, 545, 546,
	1211, 303, 300, 301, 1212, 304, 302, 1213, 305, 306,
	307, 1214, 1215, 308, 309, 310, 1216, 311, 312, 1217,
	313, 314, 315, 1218, 316, 317, 547, 318, 319, 320,
	322, 324, 321, 325, 326, 327, 328, 548, 549, 1219,
	246, 1220, 0, 0, 0, 0, 329, 330, 331, 550,
	0, 0, 0, 332, 1221, 333, 1222, 1223, 1059, 334,
	335, 551, 552, 336, 337, 1224, 338, 553, 1225, 554,
	339, 1226, 340, 341, 342, 343, 344, 555, 556, 557,
	402, 1061, 345, 346, 1227, 347, 348, 349, 350, 0,
	0, 0, 247, 351, 352, 354, 1228, 1060, 353, 558,
	559, 1229, 560, 1230, 355, 356, 1062, 561, 1063, 357,
	358, 359, 1064, 360, 0, 0, 0, 361, 362, 363,
	364, 365, 366, 1231, 367, 369, 368, 1232, 370, 562,
	1065, 371, 372, 1066, 1233, 373, 374, 375, 1234, 1235,
	376, 377, 378, 379, 0, 380, 381, 383, 385, 382,
	384, 389, 386, 387, 388, 391, 0, 390, 1067, 392,
	393, 394, 398, 397, 399, 396, 1068, 395, 1236, 248,
	1069, 400, 1237, 563, 401, 564, 403, 404, 1238, 0,
	405, 0, 1239, 1240, 407, 408, 409, 1241, 1242, 410,
	411, 565, 1070, 412, 1071, 566, 413, 414, 406, 415,
	416, 417, 418, 419, 420, 421, 422, 1243, 423, 424,
	567, 568, 569, 425, 570, 426, 427, 1244, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 571, 437, 436,
	438, 1245, 439, 0, 0, 0, 0, 0, 440, 0,
	442, 443, 444, 441, 445, 446, 447, 448, 1246, 449,
	450, 451, 1072, 452, 453, 454, 455, 572, 456, 0,
	457, 458, 464, 465, 459, 460, 466, 467, 468, 469,
	470, 1247, 472, 473, 471, 474, 475, 476, 1248, 477,
	461, 462, 478, 479, 1073, 480, 481, 482, 483, 484,
	485, 573, 0, 486, 1249, 487, 488, 489, 490, 463,
	491, 496, 574, 492, 493, 494, 495, 575, 1250, 498,
	499, 0, 497, 1251, 500, 501, 502, 503, 504, 505,
	323, 506, 1252, 507, 576, 577, 578, 579, 1253, 514,
	1254, 508, 509, 580, 510, 581, 1255, 511, 512, 513,
	0, 515, 516, 1256, 1257, 517, 518, 519, 521, 522,
	520, 523, 1258, 524, 1259, 0, 525, 526, 527, 582,
	583, 584, 1260, 529, 528, 585, 1261, 1262, 1263, 1264,
	530, 531, 586, 532, 533, 534, 1180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3274, 249, 250, 251, 252, 253, 254, 1186,
	255, 256, 1187, 1188, 1189, 0, 1190, 535, 1191, 1192,
	1193, 1194, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 537, 0, 265, 538, 266, 539, 1195, 540, 267,
	268, 269, 270, 271, 1196, 1197, 0, 272, 541, 542,
	543, 1198, 273, 274, 544, 1199, 1266, 1200, 275, 276,
	277, 278, 279, 280, 281, 0, 1201, 283, 284, 285,
	282, 1202, 286, 0, 287, 288, 289, 290, 291, 1203,
	292, 1058, 293, 294, 1204, 1205, 1207, 1206, 1208, 1209,
	1210, 295, 296, 297, 298, 0, 299, 545, 546, 1211,
	303, 300, 301, 1212, 304, 302, 1213, 305, 306, 307,
	1214, 1215, 308, 309, 310, 1216, 311, 312, 1217, 313,
	314, 315, 1218, 316, 317, 547, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 548, 549, 1219, 246,
	1220, 0, 0, 0, 0, 329, 330, 331, 550, 0,
	0, 0, 332, 1221, 333, 1222, 1223, 1059, 334, 335,
	551, 552, 336, 337, 1224, 338, 553, 1225, 554, 339,
	1226, 340, 341, 342, 343, 344, 555, 556, 557, 402,
	1061, 345, 346, 1227, 347, 348, 349, 350, 0, 0,
	0, 247, 351, 352, 354, 1228, 1060, 353, 558, 559,
	1229, 560, 1230, 355, 356, 1062, 561, 1063, 357, 358,
	359, 1064, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 1231, 367, 369, 368, 1232, 370, 562, 1065,
	371, 372, 1066, 1233, 373, 374, 375, 1234, 1235, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 1067, 392, 393,
	394, 398, 397, 399, 396, 1068, 395, 1236, 248, 1069,
	400, 1237, 563, 401, 564, 403, 404, 1238, 0, 405,
	0, 1239, 1240, 407, 408, 409, 1241, 1242, 410, 411,
	565, 1070, 412, 1071, 566, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 1243, 423, 424, 567,
	568, 569, 425, 570, 426, 427, 1244, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 571, 437, 436, 438,
	1245, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 1246, 449, 450,
	451, 1072, 452, 453, 454, 455, 572, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	1247, 472, 473, 471, 474, 475, 476, 1248, 477, 461,
	462, 478, 479, 1073, 480, 481, 482, 483, 484, 485,
	573, 0, 486, 1249, 487, 488, 489, 490, 463, 491,
	496, 574, 492, 493, 494, 495, 575, 1250, 498, 499,
	0, 497, 1251, 500, 501, 502, 503, 504, 505, 323,
	506, 1252, 507, 576, 577, 578, 579, 1253, 514, 1254,
	508, 509, 580, 510, 581, 1255, 511, 512, 513, 0,
	515, 516, 1256, 1257, 517, 518, 519, 521, 522, 520,
	523, 1258, 524, 1259, 0, 525, 526, 527, 582, 583,
	584, 1260, 529, 528, 585, 1261, 1262, 1263, 1264, 530,
	531, 586, 532, 533, 534, 1180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3104, 249, 250, 251, 252, 253, 254, 1186, 255,
	256, 1187, 1188, 1189, 0, 1190, 535, 1191, 1192, 1193,
	1194, 257, 258, 260, 259, 261, 262, 263, 264, 536,
	537, 0, 265, 538, 266, 539, 1195, 540, 267, 268,
	269, 270, 271, 1196, 1197, 0, 272, 541, 542, 543,
	1198, 273, 274, 544, 1199, 1266, 1200, 275, 276, 277,
	278, 279, 280, 281, 0, 1201, 283, 284, 285, 282,
	1202, 286, 0, 287, 288, 289, 290, 291, 1203, 292,
	1058, 293, 294, 1204, 1205, 1207, 1206, 1208, 1209, 1210,
	295, 296, 297, 298, 0, 299, 545, 546, 1211, 303,
	300, 301, 1212, 304, 302, 1213, 305, 306, 307, 1214,
	1215, 308, 309, 310, 1216, 311, 312, 1217, 313, 314,
	315, 1218, 316, 317, 547, 318, 319, 320, 322, 324,
	321, 325, 326, 327, 328, 548, 549, 1219, 246, 1220,
	0, 0, 0, 0, 329, 330, 331, 550, 0, 0,
	0, 332, 1221, 333, 1222, 1223, 1059, 334, 335, 551,
	552, 336, 337, 1224, 338, 553, 1225, 554, 339, 1226,
	340, 341, 342, 343, 344, 555, 556, 557, 402, 1061,
	345, 346, 1227, 347, 348, 349, 350, 0, 0, 0,
	247, 351, 352, 354, 1228, 1060, 353, 558, 559, 1229,
	560, 1230, 355, 356, 1062, 561, 1063, 357, 358, 359,
	1064, 360, 0, 0, 0, 361, 362, 363, 364, 365,
	366, 1231, 367, 369, 368, 1232, 370, 562, 1065, 371,
	372, 1066, 1233, 373, 374, 375, 1234, 1235, 376, 377,
	378, 379, 0, 380, 381, 383, 385, 382, 384, 389,
	386, 387, 388, 391, 0, 390, 1067, 392, 393, 394,
	398, 397, 399, 396, 1068, 395, 1236, 248, 1069, 400,
	1237, 563, 401, 564, 403, 404, 1238, 0, 405, 0,
	1239, 1240, 407, 408, 409, 1241, 1242, 410, 411, 565,
	1070, 412, 1071, 566, 413, 414, 406, 415, 416, 417,
	418, 419, 420, 421, 422, 1243, 423, 424, 567, 568,
	569, 425, 570, 426, 427, 1244, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 571, 437, 436, 438, 1245,
	439, 0, 0, 0, 0, 0, 440, 0, 442, 443,
	444, 441, 445, 446, 447, 448, 1246, 449, 450, 451,
	1072, 452, 453, 454, 455, 572, 456, 0, 457, 458,
	464, 465, 459, 460, 466, 467, 468, 469, 470, 1247,
	472, 473, 471, 474, 475, 476, 1248, 477, 461, 462,
	478, 479, 1073, 480, 481, 482, 483, 484, 485, 573,
	0, 486, 1249, 487, 488, 489, 490, 463, 491, 496,
	574, 492, 493, 494, 495, 575, 1250, 498, 499, 0,
	497, 1251, 500, 501, 502, 503, 504, 505, 323, 506,
	1252, 507, 576, 577, 578, 579, 1253, 514, 1254, 508,
	509, 580, 510, 581, 1255, 511, 512, 513, 0, 515,
	516, 1256, 1257, 517, 518, 519, 521, 522, 520, 523,
	1258, 524, 1259, 0, 525, 526, 527, 582, 583, 584,
	1260, 529, 528, 585, 1261, 1262, 1263, 1264, 530, 531,
	586, 532, 533, 534, 1180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2302, 249, 250, 251, 252, 253, 254, 1186, 255, 256,
	1187, 1188, 1189, 0, 1190, 535, 1191, 1192, 1193, 1194,
	257, 258, 260, 259, 261, 262, 263, 264, 536, 537,
	0, 265, 538, 266, 539, 1195, 540, 267, 268, 269,
	270, 271, 1196, 1197, 0, 272, 541, 542, 543, 1198,
	273, 274, 544, 1199, 1266, 1200, 275, 276, 277, 278,
	279, 280, 281, 0, 1201, 283, 284, 285, 282, 1202,
	286, 0, 287, 288, 289, 290, 291, 1203, 292, 1058,
	293, 294, 1204, 1205, 1207, 1206, 1208, 1209, 1210, 295,
	296, 297, 298, 0, 299, 545, 546, 1211, 303, 300,
	301, 1212, 304, 302, 1213, 305, 306, 307, 1214, 1215,
	308, 309, 310, 1216, 311, 312, 1217, 313, 314, 315,
	1218, 316, 317, 547, 318, 319, 320, 322, 324, 321,
	325, 326, 327, 328, 548, 549, 1219, 246, 1220, 0,
	0, 0, 0, 329, 330, 331, 550, 0, 0, 0,
	332, 1221, 333, 1222, 1223, 1059, 334, 335, 551, 552,
	336, 337, 1224, 338, 553, 1225, 554, 339, 1226, 340,
	341, 342, 343, 344, 555, 556, 557, 402, 1061, 345,
	346, 1227, 347, 348, 349, 350, 0, 0, 0, 247,
	351, 352, 354, 1228, 1060, 353, 558, 559, 1229, 560,
	1230, 355, 356, 1062, 561, 1063, 357, 358, 359, 1064,
	360, 0, 0, 0, 361, 362, 363, 364, 365, 366,
	1231, 367, 369, 368, 1232, 370, 562, 1065, 371, 372,
	1066, 1233, 373, 374, 375, 1234, 1235, 376, 377, 378,
	379, 0, 380, 381, 383, 385, 382, 384, 389, 386,
	387, 388, 391, 0, 390, 1067, 392, 393, 394, 398,
	397, 399, 396, 1068, 395, 1236, 248, 1069, 400, 1237,
	563, 401, 564, 403, 404, 1238, 0, 405, 0, 1239,
	1240, 407, 408, 409, 1241, 1242, 410, 411, 565, 1070,
	412, 1071, 566, 413, 414, 406, 415, 416, 417, 418,
	419, 420, 421, 422, 1243, 423, 424, 567, 568, 569,
	425, 570, 426, 427, 1244, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 571, 437, 436, 438, 1245, 439,
	0, 0, 0, 0, 0, 440, 0, 442, 443, 444,
	441, 445, 446, 447, 448, 1246, 449, 450, 451, 1072,
	452, 453, 454, 455, 572, 456, 0, 457, 458, 464,
	465, 459, 460, 466, 467, 468, 469, 470, 1247, 472,
	473, 471, 474, 475, 476, 1248, 477, 461, 462, 478,
	479, 1073, 480, 481, 482, 483, 484, 485, 573, 0,
	486, 1249, 487, 488, 489, 490, 463, 491, 496, 574,
	492, 493, 494, 495, 575, 1250, 498, 499, 0, 497,
	1251, 500, 501, 502, 503, 504, 505, 323, 506, 1252,
	507, 576, 577, 578, 579, 1253, 514, 1254, 508, 509,
	580, 510, 581, 1255, 511, 512, 513, 0, 515, 516,
	1256, 1257, 517, 518, 519, 521, 522, 520, 523, 1258,
	524, 1259, 0, 525, 526, 527, 582, 583, 584, 1260,
	529, 528, 585, 1261, 1262, 1263, 1264, 530, 531, 586,
	532, 533, 534, 1278, 0, 1180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1979,
	0, 0, 249, 250, 251, 252, 253, 254, 1186, 255,
	256, 1187, 1188, 1189, 0, 1190, 535, 1191, 1192, 1193,
	1194, 257, 258, 260, 259, 261, 262, 263, 264, 536,
	537, 0, 265, 538, 266, 539, 1195, 540, 267, 268,
	269, 270, 271, 1196, 1197, 0, 272, 541, 542, 543,
	1198, 273, 274, 544, 1199, 1266, 1200, 275, 276, 277,
	278, 279, 280, 281, 0, 1201, 283, 284, 285, 282,
	1202, 286, 0, 287, 288, 289, 290, 291, 1203, 292,
	1058, 293, 294, 1204, 1205, 1207, 1206, 1208, 1209, 1210,
	295, 296, 297, 298, 0, 299, 545, 546, 1211, 303,
	300, 301, 1212, 304, 302, 1213, 305, 306, 307, 1214,
	1215, 308, 309, 310, 1216, 311, 312, 1217, 313, 314,
	315, 1218, 316, 317, 547, 318, 319, 320, 322, 324,
	321, 325, 326, 327, 328, 548, 549, 1219, 246, 1220,
	0, 0, 0, 0, 329, 330, 331, 550, 0, 0,
	0, 332, 1221, 333, 1222, 1223, 1059, 334, 335, 551,
	552, 336, 337, 1224, 338, 553, 1225, 554, 339, 1226,
	340, 341, 342, 343, 344, 555, 556, 557, 402, 1061,
	345, 346, 1227, 347, 348, 349, 350, 0, 0, 0,
	247, 351, 352, 354, 1228, 1060, 353, 558, 559, 1229,
	560, 1230, 355, 356, 1062, 561, 1063, 357, 358, 359,
	1064, 360, 0, 0, 0, 361, 362, 363, 364, 365,
	366, 1231, 367, 369, 368, 1232, 370, 562, 1065, 371,
	372, 1066, 1233, 373, 374, 375, 1234, 1235, 376, 377,
	378, 379, 0, 380, 381, 383, 385, 382, 384, 389,
	386, 387, 388, 391, 0, 390, 1067, 392, 393, 394,
	398, 397, 399, 396, 1068, 395, 1236, 248, 1069, 400,
	1237, 563, 401, 564, 403, 404, 1238, 0, 405, 0,
	1239, 1240, 407, 408, 409, 1241, 1242, 410, 411, 565,
	1070, 412, 1071, 566, 413, 414, 406, 415, 416, 417,
	418, 419, 420, 421, 422, 1243, 423, 424, 567, 568,
	569, 425, 570, 426, 427, 1244, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 571, 437, 436, 438, 1245,
	439, 0, 0, 0, 0, 0, 440, 0, 442, 443,
	444, 441, 445, 446, 447, 448, 1246, 449, 450, 451,
	1072, 452, 453, 454, 455, 572, 456, 0, 457, 458,
	464, 465, 459, 460, 466, 467, 468, 469, 470, 1247,
	472, 473, 471, 474, 475, 476, 1248, 477, 461, 462,
	478, 479, 1073, 480, 481, 482, 483, 484, 485, 573,
	0, 486, 1249, 487, 488, 489, 490, 463, 491, 496,
	574, 492, 493, 494, 495, 575, 1250, 498, 499, 0,
	497, 1251, 500, 501, 502, 503, 504, 505, 323, 506,
	1252, 507, 576, 577, 578, 579, 1253, 514, 1254, 508,
	509, 580, 510, 581, 1255, 511, 512, 513, 0, 515,
	516, 1256, 1257, 517, 518, 519, 521, 522, 520, 523,
	1258, 524, 1259, 0, 525, 526, 527, 582, 583, 584,
	1260, 529, 528, 585, 1261, 1262, 1263, 1264, 530, 531,
	586, 532, 533, 534, 1177, 0, 1180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 1186,
	255, 256, 1187, 1188, 1189, 0, 1190, 535, 1191, 1192,
	1193, 1194, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 537, 0, 265, 538, 266, 539, 1195, 540, 267,
	268, 269, 270, 271, 1196, 1197, 0, 272, 541, 542,
	543, 1198, 273, 274, 544, 1199, 1266, 1200, 275, 276,
	277, 278, 279, 280, 281, 0, 1201, 283, 284, 285,
	282, 1202, 286, 0, 287, 288, 289, 290, 291, 1203,
	292, 1058, 293, 294, 1204, 1205, 1207, 1206, 1208, 1209,
	1210, 295, 296, 297, 298, 0, 299, 545, 546, 1211,
	303, 300, 301, 1212, 304, 302, 1213, 305, 306, 307,
	1214, 1215, 308, 309, 310, 1216, 311, 312, 1217, 313,
	314, 315, 1218, 316, 317, 547, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 548, 549, 1219, 246,
	1220, 0, 0, 0, 0, 329, 330, 331, 550, 0,
	0, 0, 332, 1221, 333, 1222, 1223, 1059, 334, 335,
	551, 552, 336, 337, 1224, 338, 553, 1225, 554, 339,
	1226, 340, 341, 342, 343, 344, 555, 556, 557, 402,
	1061, 345, 346, 1227, 347, 348, 349, 350, 0, 0,
	0, 247, 351, 352, 354, 1228, 1060, 353, 558, 559,
	1229, 560, 1230, 355, 356, 1062, 561, 1063, 357, 358,
	359, 1064, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 1231, 367, 369, 368, 1232, 370, 562, 1065,
	371, 372, 1066, 1233, 373, 374, 375, 1234, 1235, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 1067, 392, 393,
	394, 398, 397, 399, 396, 1068, 395, 1236, 248, 1069,
	400, 1237, 563, 401, 564, 403, 404, 1238, 0, 405,
	0, 1239, 1240, 407, 408, 409, 1241, 1242, 410, 411,
	565, 1070, 412, 1071, 566, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 1243, 423, 424, 567,
	568, 569, 425, 570, 426, 427, 1244, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 571, 437, 436, 438,
	1245, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 1246, 449, 450,
	451, 1072, 452, 453, 454, 455, 572, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	1247, 472, 473, 471, 474, 475, 476, 1248, 477, 461,
	462, 478, 479, 1073, 480, 481, 482, 483, 484, 485,
	573, 0, 486, 1249, 487, 488, 489, 490, 463, 491,
	496, 574, 492, 493, 494, 495, 575, 1250, 498, 499,
	0, 497, 1251, 500, 501, 502, 503, 504, 505, 323,
	506, 1252, 507, 576, 577, 578, 579, 1253, 514, 1254,
	508, 509, 580, 510, 581, 1255, 511, 512, 513, 0,
	515, 516, 1256, 1257, 517, 518, 519, 521, 522, 520,
	523, 1258, 524, 1259, 0, 525, 526, 527, 582, 583,
	584, 1260, 529, 528, 585, 1261, 1262, 1263, 1264, 530,
	531, 586, 532, 533, 534, 1180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 1186, 255,
	256, 1187, 1188, 1189, 0, 1190, 535, 1191, 1192, 1193,
	1194, 257, 258, 260, 259, 261, 262, 263, 264, 536,
	537, 0, 265, 538, 266, 539, 1195, 540, 267, 268,
	269, 270, 271, 1196, 1197, 0, 272, 541, 542, 543,
	1198, 273, 274, 544, 1199, 1266, 1200, 275, 276, 277,
	278, 279, 280, 281, 0, 1201, 283, 284, 285, 282,
	1202, 286, 0, 287, 288, 289, 290, 291, 1203, 292,
	1058, 293, 294, 1204, 1205, 1207, 1206, 1208, 1209, 1210,
	295, 296, 297, 298, 0, 299, 545, 546, 1211, 303,
	300, 301, 1212, 304, 302, 1213, 305, 306, 307, 1214,
	1215, 308, 309, 310, 1216, 311, 312, 1217, 313, 314,
	315, 1218, 316, 317, 547, 318, 319, 320, 322, 324,
	321, 325, 326, 327, 328, 548, 549, 1219, 246, 1220,
	0, 0, 0, 0, 329, 330, 331, 550, 0, 0,
	0, 332, 1221, 333, 1222, 1223, 1059, 334, 335, 551,
	552, 336, 337, 1224, 338, 553, 1225, 554, 339, 1226,
	340, 341, 342, 343, 344, 555, 556, 557, 402, 1061,
	345, 346, 1227, 347, 348, 349, 350, 0, 0, 0,
	247, 351, 352, 354, 1228, 1060, 353, 558, 559, 1229,
	560, 1230, 355, 356, 1062, 561, 1063, 357, 358, 359,
	1064, 360, 0, 0, 0, 361, 362, 363, 364, 365,
	366, 1231, 367, 369, 368, 1232, 370, 562, 1065, 371,
	372, 1066, 1233, 373, 374, 375, 1234, 1235, 376, 377,
	378, 379, 0, 380, 381, 383, 385, 382, 384, 389,
	386, 387, 388, 391, 0, 390, 1067, 392, 393, 394,
	398, 397, 399, 396, 1068, 395, 1236, 248, 1069, 400,
	1237, 563, 401, 564, 403, 404, 1238, 0, 405, 0,
	1239, 1240, 407, 408, 409, 1241, 1242, 410, 411, 565,
	1070, 412, 1071, 566, 413, 414, 406, 415, 416, 417,
	418, 419, 420, 421, 422, 1243, 423, 424, 567, 568,
	569, 425, 570, 426, 427, 1244, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 571, 437, 436, 438, 1245,
	439, 0, 0, 0, 0, 0, 440, 0, 442, 443,
	444, 441, 445, 446, 447, 448, 1246, 449, 450, 451,
	1072, 452, 453, 454, 455, 572, 456, 0, 457, 458,
	464, 465, 459, 460, 466, 467, 468, 469, 470, 1247,
	472, 473, 471, 474, 475, 476, 1248, 477, 461, 462,
	478, 479, 1073, 480, 481, 482, 483, 484, 485, 573,
	0, 486, 1249, 487, 488, 489, 490, 463, 491, 496,
	574, 492, 493, 494, 495, 575, 1250, 498, 499, 0,
	497, 1251, 500, 501, 502, 503, 504, 505, 323, 506,
	1252, 507, 576, 577, 578, 579, 1253, 514, 1254, 508,
	509, 580, 510, 581, 1255, 511, 512, 513, 0, 515,
	516, 1256, 1257, 517, 518, 519, 521, 522, 520, 523,
	1258, 524, 1259, 0, 525, 526, 527, 582, 583, 584,
	1260, 529, 528, 585, 1261, 1262, 1263, 1264, 530, 531,
	586, 532, 533, 534, 2277, 0, 994, 966, 967, 968,
	964, 965, 977, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 2274,
	255, 256, 0, 0, 0, 0, 0, 1018, 982, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 1031, 0, 265, 1038, 266, 1037, 0, 1048, 267,
	268, 269, 270, 271, 984, 1017, 951, 272, 1077, 1078,
	543, 0, 273, 274, 1024, 0, 1005, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 1058, 293, 294, 1008, 1006, 1007, 1014, 1010, 1009,
	1013, 295, 296, 297, 298, 1041, 299, 1035, 1034, 955,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	2275, 0, 308, 1026, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 961, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 1049, 1050, 973, 246,
	0, 0, 0, 0, 0, 329, 330, 331, 1033, 0,
	0, 0, 332, 0, 333, 0, 0, 1059, 334, 335,
	1046, 1047, 336, 337, 0, 338, 1056, 0, 983, 339,
	0, 340, 341, 342, 343, 344, 1019, 1020, 1023, 402,
	1061, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 247, 351, 352, 354, 0, 1060, 353, 1028, 1029,
	0, 989, 0, 355, 356, 1062, 1021, 1063, 357, 358,
	359, 1064, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 1057, 1065,
	371, 372, 1066, 0, 373, 374, 375, 1012, 1011, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 1067, 392, 393,
	394, 398, 397, 399, 396, 1068, 395, 952, 248, 1069,
	400, 974, 1022, 401, 1036, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 1070, 412, 1071, 1051, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 1052, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 1032, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 1072, 452, 453, 454, 455, 962, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 1015, 477, 461,
	462, 478, 479, 1073, 480, 481, 482, 483, 484, 485,
	1030, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 1076, 492, 493, 494, 495, 1053, 0, 498, 499,
	950, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 1042, 1043, 1044, 1045, 0, 514, 0,
	508, 509, 1054, 510, 1055, 972, 511, 512, 513, 0,
	515, 516, 0, 956, 517, 518, 519, 521, 522, 520,
	523, 1016, 524, 0, 0, 525, 526, 527, 582, 1039,
	1075, 2273, 529, 528, 585, 0, 0, 0, 0, 530,
	531, 586, 532, 533, 534, 953, 0, 0, 0, 0,
	0, 0, 949, 0, 0, 0, 0, 0, 0, 947,
	948, 2276, 0, 0, 0, 0, 0, 0, 978, 2272,
	0, 940, 976, 994, 966, 967, 968, 964, 965, 977,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 1018, 982, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 1031, 0,
	265, 1038, 266, 1037, 0, 1048, 267, 268, 269, 270,
	271, 984, 1017, 951, 272, 1077, 1078, 543, 0, 273,
	274, 1024, 0, 1005, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 1058, 293,
	294, 1008, 1006, 1007, 1014, 1010, 1009, 1013, 295, 296,
	297, 298, 1041, 299, 1035, 1034, 955, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	1026, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 961, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 1049, 1050, 973, 246, 0, 0, 0,
	0, 0, 329, 330, 331, 1033, 0, 0, 0, 332,
	0, 333, 0, 0, 1059, 334, 335, 1046, 1047, 336,
	337, 0, 338, 1056, 0, 983, 339, 0, 340, 341,
	342, 343, 344, 1019, 1020, 1023, 402, 1061, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 247, 351,
	352, 354, 0, 1060, 353, 1028, 1029, 0, 989, 0,
	355, 356, 1062, 1021, 1063, 357, 358, 359, 1064, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 1057, 1065, 371, 372, 1066,
	0, 373, 374, 375, 1012, 1011, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 1067, 392, 393, 394, 398, 397,
	399, 396, 1068, 395, 952, 248, 1069, 400, 974, 1022,
	401, 1036, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 1070, 412,
	1071, 1051, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 1052, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 1032, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 1072, 452,
	453, 454, 455, 962, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 210, 472, 473,
	471, 474, 475, 476, 1015, 477, 461, 462, 478, 479,
	1073, 480, 481, 482, 483, 484, 485, 1030, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 1076, 492,
	493, 494, 495, 1053, 0, 498, 499, 950, 497, 212,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	1042, 1043, 1044, 1045, 0, 514, 0, 508, 509, 1054,
	510, 1055, 972, 511, 512, 513, 0, 515, 516, 0,
	956, 517, 518, 519, 521, 522, 520, 523, 1016, 524,
	0, 0, 525, 526, 527, 1451, 1039, 1075, 0, 529,
	528, 585, 0, 0, 0, 204, 530, 531, 586, 532,
	533, 534, 953, 205, 0, 0, 0, 0, 0, 949,
	0, 0, 0, 0, 0, 0, 947, 948, 994, 966,
	967, 968, 964, 965, 977, 1686, 1684, 0, 0, 976,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1018,
	982, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 1031, 0, 265, 1038, 266, 1037, 0,
	1048, 267, 268, 269, 270, 271, 984, 1017, 951, 272,
	1077, 1078, 543, 0, 273, 274, 1024, 0, 1005, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 1058, 293, 294, 1008, 1006, 1007, 1014,
	1010, 1009, 1013, 295, 296, 297, 298, 1041, 299, 1035,
	1034, 955, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 1026, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 961, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 1049, 1050,
	973, 246, 0, 0, 0, 0, 0, 329, 330, 331,
	1033, 0, 0, 0, 332, 0, 333, 0, 0, 1059,
	334, 335, 1046, 1047, 336, 337, 0, 338, 1056, 0,
	983, 339, 0, 340, 341, 342, 343, 344, 1019, 1020,
	1023, 402, 1061, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 247, 351, 352, 354, 0, 1060, 353,
	1028, 1029, 0, 989, 0, 355, 356, 1062, 1021, 1063,
	357, 358, 359, 1064, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	1057, 1065, 371, 372, 1066, 0, 373, 374, 375, 1012,
	1011, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 1067,
	392, 393, 394, 398, 397, 399, 396, 1068, 395, 952,
	248, 1069, 400, 974, 1022, 401, 1036, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 1070, 412, 1071, 1051, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 1052, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 1032, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 1072, 452, 453, 454, 455, 962, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 210, 472, 473, 471, 474, 475, 476, 1015,
	477, 461, 462, 478, 479, 1073, 480, 481, 482, 483,
	484, 485, 1030, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 1076, 492, 493, 494, 495, 1053, 0,
	498, 499, 950, 497, 212, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 1042, 1043, 1044, 1045, 0,
	514, 0, 508, 509, 1054, 510, 1055, 972, 511, 512,
	513, 0, 515, 516, 0, 956, 517, 518, 519, 521,
	522, 520, 523, 1016, 524, 0, 0, 525, 526, 527,
	1451, 1039, 1075, 0, 529, 528, 585, 0, 0, 0,
	204, 530, 531, 586, 532, 533, 534, 953, 205, 0,
	0, 0, 0, 0, 949, 0, 0, 0, 0, 0,
	0, 947, 948, 994, 966, 967, 968, 964, 965, 977,
	1686, 2806, 0, 0, 976, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 1018, 982, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 1031, 0,
	265, 1038, 266, 1037, 0, 1048, 267, 268, 269, 270,
	271, 984, 1017, 951, 272, 1077, 1078, 543, 0, 273,
	274, 1024, 0, 1005, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 1058, 293,
	294, 1008, 1006, 1007, 1014, 1010, 1009, 1013, 295, 296,
	297, 298, 1041, 299, 1035, 1034, 955, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	1026, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 961, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 1049, 1050, 973, 246, 0, 0, 0,
	0, 0, 329, 330, 331, 1033, 0, 0, 0, 332,
	0, 333, 0, 0, 1059, 334, 335, 1046, 1047, 336,
	337, 0, 338, 1056, 0, 983, 339, 0, 340, 341,
	342, 343, 344, 1019, 1020, 1023, 402, 1061, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 247, 351,
	352, 354, 0, 1060, 353, 1028, 1029, 0, 989, 0,
	355, 356, 1062, 1021, 1063, 357, 358, 359, 1064, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 1057, 1065, 371, 372, 1066,
	0, 373, 374, 375, 1012, 1011, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 1067, 392, 393, 394, 398, 397,
	399, 396, 1068, 395, 952, 248, 1069, 400, 974, 1022,
	401, 1036, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 1070, 412,
	1071, 1051, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 1052, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 1032, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 1072, 452,
	453, 454, 455, 962, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 210, 472, 473,
	471, 474, 475, 476, 1015, 477, 461, 462, 478, 479,
	1073, 480, 481, 482, 483, 484, 485, 1030, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 1076, 492,
	493, 494, 495, 1053, 0, 498, 499, 950, 497, 212,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	1042, 1043, 1044, 1045, 0, 514, 0, 508, 509, 1054,
	510, 1055, 972, 511, 512, 513, 0, 515, 516, 0,
	956, 517, 518, 519, 521, 522, 520, 523, 1016, 524,
	0, 0, 525, 526, 527, 1451, 1039, 1075, 0, 529,
	528, 585, 0, 0, 0, 204, 530, 531, 586, 532,
	533, 534, 953, 205, 0, 0, 0, 0, 0, 949,
	0, 0, 0, 0, 0, 0, 947, 948, 994, 966,
	967, 968, 964, 965, 977, 1686, 1684, 0, 0, 976,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1018,
	982, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 1031, 0, 265, 1038, 266, 1037, 2381,
	1048, 267, 268, 269, 270, 271, 984, 1017, 951, 272,
	1077, 1078, 543, 0, 273, 274, 1024, 0, 1005, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 1058, 293, 294, 1008, 1006, 1007, 1014,
	1010, 1009, 1013, 295, 296, 297, 298, 1041, 299, 1035,
	1034, 955, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 1026, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 961, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 1049, 1050,
	973, 246, 0, 0, 0, 0, 0, 329, 330, 331,
	1033, 0, 0, 0, 332, 0, 333, 0, 2386, 1059,
	334, 335, 1046, 1047, 336, 337, 0, 338, 1056, 0,
	983, 339, 0, 340, 341, 342, 343, 344, 1019, 1020,
	1023, 402, 1061, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 247, 351, 352, 354, 0, 1060, 353,
	1028, 1029, 0, 989, 0, 355, 356, 1062, 1021, 1063,
	357, 358, 359, 1064, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 2382, 370,
	1057, 1065, 371, 372, 1066, 0, 373, 374, 375, 1012,
	1011, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 1067,
	392, 393, 394, 398, 397, 399, 396, 1068, 395, 952,
	248, 1069, 400, 974, 1022, 401, 1036, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 1070, 412, 1071, 1051, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 1052, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 1032, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 1072, 452, 453, 454, 455, 962, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 1015,
	477, 461, 462, 478, 479, 1073, 480, 481, 482, 483,
	484, 485, 1030, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 1076, 492, 493, 494, 495, 1053, 0,
	498, 499, 950, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 1042, 1043, 1044, 1045, 0,
	514, 2383, 508, 509, 1054, 510, 1055, 972, 511, 512,
	513, 0, 515, 516, 0, 956, 517, 518, 519, 521,
	522, 520, 523, 1016, 524, 0, 0, 525, 526, 527,
	582, 1039, 1075, 0, 529, 528, 585, 0, 0, 0,
	0, 530, 531, 586, 532, 533, 534, 953, 0, 0,
	0, 0, 0, 0, 949, 0, 0, 0, 0, 0,
	0, 947, 948, 0, 0, 0, 0, 0, 0, 0,
	978, 0, 0, 2322, 976, 994, 966, 967, 968, 964,
	965, 977, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1018, 982, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 536,
	1031, 0, 265, 1038, 266, 1037, 0, 1048, 267, 268,
	269, 270, 271, 984, 1017, 951, 272, 1077, 1078, 543,
	0, 273, 274, 1024, 0, 1005, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 0, 292,
	1058, 293, 294, 1008, 1006, 1007, 1014, 1010, 1009, 1013,
	295, 296, 297, 298, 1041, 299, 1035, 1034, 955, 303,
	300, 301, 0, 304, 302, 0, 305, 306, 307, 0,
	0, 308, 1026, 310, 0, 311, 312, 0, 313, 314,
	315, 0, 316, 317, 961, 318, 319, 320, 322, 324,
	321, 325, 326, 327, 328, 1049, 1050, 973, 246, 0,
	0, 0, 0, 0, 329, 330, 331, 1033, 0, 0,
	0, 332, 0, 333, 0, 0, 1059, 334, 335, 1046,
	1047, 336, 337, 0, 338, 1056, 0, 983, 339, 0,
	340, 341, 342, 343, 344, 1019, 1020, 1023, 402, 1061,
	345, 346, 0, 347, 348, 349, 350, 0, 0, 0,
	247, 351, 352, 354, 0, 1060, 353, 1028, 1029, 0,
	989, 0, 355, 356, 1062, 1021, 1063, 357, 358, 359,
	1064, 360, 0, 0, 0, 361, 362, 363, 364, 365,
	366, 0, 367, 369, 368, 0, 370, 1057, 1065, 371,
	372, 1066, 0, 373, 374, 375, 1012, 1011, 376, 377,
	378, 379, 0, 380, 381, 383, 385, 382, 384, 389,
	386, 387, 388, 391, 0, 390, 1067, 392, 393, 394,
	398, 397, 399, 396, 1068, 395, 952, 248, 1069, 400,
	974, 1022, 401, 1036, 403, 404, 0, 0, 405, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 411, 565,
	1070, 412, 1071, 1051, 413, 414, 406, 415, 416, 417,
	418, 419, 420, 421, 422, 0, 423, 424, 567, 568,
	1052, 425, 570, 426, 427, 0, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 1032, 437, 436, 438, 0,
	439, 0, 0, 0, 0, 0, 440, 0, 442, 443,
	444, 441, 445, 446, 447, 448, 0, 449, 450, 451,
	1072, 452, 453, 454, 455, 962, 456, 0, 457, 458,
	464, 465, 459, 460, 466, 467, 468, 469, 470, 0,
	472, 473, 471, 474, 475, 476, 1015, 477, 461, 462,
	478, 479, 1073, 480, 481, 482, 483, 484, 485, 1030,
	0, 486, 0, 487, 488, 489, 490, 463, 491, 496,
	1076, 492, 493, 494, 495, 1053, 0, 498, 499, 950,
	497, 0, 500, 501, 502, 503, 504, 505, 323, 506,
	0, 507, 1042, 1043, 1044, 1045, 0, 514, 0, 508,
	509, 1054, 510, 1055, 972, 511, 512, 513, 0, 515,
	516, 0, 956, 517, 518, 519, 521, 522, 520, 523,
	1016, 524, 0, 0, 525, 526, 527, 582, 1039, 1075,
	0, 529, 528, 585, 0, 0, 0, 0, 530, 531,
	586, 532, 533, 534, 953, 0, 0, 0, 0, 0,
	0, 949, 0, 0, 0, 0, 0, 0, 947, 948,
	0, 0, 0, 0, 0, 0, 0, 978, 2320, 0,
	2319, 976, 994, 966, 967, 968, 964, 965, 977, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 1018, 982, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 536, 1031, 0, 265,
	1038, 266, 1037, 0, 1048, 267, 268, 269, 270, 271,
	984, 1017, 951, 272, 1077, 1078, 543, 0, 273, 274,
	1024, 0, 1005, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 0, 292, 1058, 293, 294,
	1008, 1006, 1007, 1014, 1010, 1009, 1013, 295, 296, 297,
	298, 1041, 299, 1035, 1034, 955, 303, 300, 301, 0,
	304, 302, 0, 305, 306, 307, 0, 0, 308, 1026,
	310, 0, 311, 312, 0, 313, 314, 315, 0, 316,
	317, 961, 318, 319, 320, 322, 324, 321, 325, 326,
	327, 328, 1049, 1050, 973, 246, 0, 0, 0, 0,
	0, 329, 330, 331, 1033, 0, 0, 0, 332, 0,
	333, 0, 0, 1059, 334, 335, 1046, 1047, 336, 337,
	0, 338, 1056, 0, 983, 339, 0, 340, 341, 342,
	343, 344, 1019, 1020, 1023, 402, 1061, 345, 346, 0,
	347, 348, 349, 350, 0, 0, 0, 247, 351, 352,
	354, 0, 1060, 353, 1028, 1029, 0, 989, 0, 355,
	356, 1062, 1021, 1063, 357, 358, 359, 1064, 360, 0,
	0, 0, 361, 362, 363, 364, 365, 366, 0, 367,
	369, 368, 0, 370, 1057, 1065, 371, 372, 1066, 0,
	373, 374, 375, 1012, 1011, 376, 377, 378, 379, 0,
	380, 381, 383, 385, 382, 384, 389, 386, 387, 388,
	391, 0, 390, 1067, 392, 393, 394, 398, 397, 399,
	396, 1068, 395, 952, 248, 1069, 400, 974, 1022, 401,
	1036, 403, 404, 0, 0, 405, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 411, 565, 1070, 412, 1071,
	1051, 413, 414, 406, 415, 416, 417, 418, 419, 420,
	421, 422, 0, 423, 424, 567, 568, 1052, 425, 570,
	426, 427, 0, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 1032, 437, 436, 438, 0, 439, 0, 0,
	0, 0, 0, 440, 0, 442, 443, 444, 441, 445,
	446, 447, 448, 0, 449, 450, 451, 1072, 452, 453,
	454, 455, 962, 456, 0, 457, 458, 464, 465, 459,
	460, 466, 467, 468, 469, 470, 0, 472, 473, 471,
	474, 475, 476, 1015, 477, 461, 462, 478, 479, 1073,
	480, 481, 482, 483, 484, 485, 1030, 0, 486, 0,
	487, 488, 489, 490, 463, 491, 496, 1076, 492, 493,
	494, 495, 1053, 0, 498, 499, 950, 497, 0, 500,
	501, 502, 503, 504, 505, 323, 506, 0, 507, 1042,
	1043, 1044, 1045, 0, 514, 0, 508, 509, 1054, 510,
	1055, 972, 511, 512, 513, 0, 515, 516, 0, 956,
	517, 518, 519, 521, 522, 520, 523, 1016, 524, 0,
	0, 525, 526, 527, 582, 1039, 1075, 0, 529, 528,
	585, 0, 0, 0, 0, 530, 531, 586, 532, 533,
	534, 953, 0, 0, 0, 0, 0, 0, 949, 0,
	0, 0, 0, 0, 0, 947, 948, 0, 0, 0,
	0, 0, 0, 0, 978, 2317, 0, 2316, 976, 994,
	966, 967, 968, 964, 965, 977, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1018, 982, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 1031, 0, 265, 1038, 266, 1037,
	0, 1048, 267, 268, 269, 270, 271, 984, 1017, 951,
	272, 1077, 1078, 543, 0, 273, 274, 1024, 0, 1005,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 0, 292, 1058, 293, 294, 1008, 1006, 1007,
	1014, 1010, 1009, 1013, 295, 296, 297, 298, 1041, 299,
	1035, 1034, 955, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 0, 0, 308, 1026, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 316, 317, 961, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 1049,
	1050, 973, 246, 0, 0, 0, 0, 0, 329, 330,
	331, 1033, 0, 0, 0, 332, 0, 333, 0, 0,
	1059, 334, 335, 1046, 1047, 336, 337, 0, 338, 1056,
	0, 983, 339, 0, 340, 341, 342, 343, 344, 1019,
	1020, 1023, 402, 1061, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 247, 351, 352, 354, 0, 1060,
	353, 1028, 1029, 0, 989, 0, 355, 356, 1062, 1021,
	1063, 357, 358, 359, 1064, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 0, 367, 369, 368, 0,
	370, 1057, 1065, 371, 372, 1066, 0, 373, 374, 375,
	1012, 1011, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	1067, 392, 393, 394, 398, 397, 399, 396, 1068, 395,
	952, 248, 1069, 400, 974, 1022, 401, 1036, 403, 404,
	0, 0, 405, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 411, 565, 1070, 412, 1071, 1051, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 1052, 425, 570, 426, 427, 0,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 1032,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 1072, 452, 453, 454, 455, 962,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 0, 472, 473, 471, 474, 475, 476,
	1015, 477, 461, 462, 478, 479, 1073, 480, 481, 482,
	483, 484, 485, 1030, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 1076, 492, 493, 494, 495, 1053,
	0, 498, 499, 950, 497, 0, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 1042, 1043, 1044, 1045,
	0, 514, 0, 508, 509, 1054, 510, 1055, 972, 511,
	512, 513, 0, 515, 516, 0, 956, 517, 518, 519,
	521, 522, 520, 523, 1016, 524, 0, 0, 525, 526,
	527, 582, 1039, 1075, 0, 529, 528, 585, 0, 0,
	0, 0, 530, 531, 586, 532, 533, 534, 953, 0,
	0, 0, 0, 0, 0, 949, 0, 0, 0, 0,
	0, 0, 947, 948, 0, 0, 0, 0, 0, 0,
	0, 978, 2314, 0, 2313, 976, 994, 966, 967, 968,
	964, 965, 977, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1018, 982, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 1031, 0, 265, 1038, 266, 1037, 0, 1048, 267,
	268, 269, 270, 271, 984, 1017, 951, 272, 1077, 1078,
	543, 0, 273, 274, 1024, 0, 1005, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 1058, 293, 294, 1008, 1006, 1007, 1014, 1010, 1009,
	1013, 295, 296, 297, 298, 1041, 299, 1035, 1034, 955,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 1026, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 961, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 1049, 1050, 973, 246,
	0, 0, 0, 0, 0, 329, 330, 331, 1033, 0,
	0, 0, 332, 0, 333, 0, 0, 1059, 334, 335,
	1046, 1047, 336, 337, 0, 338, 1056, 0, 983, 339,
	0, 340, 341, 342, 343, 344, 1019, 1020, 1023, 402,
	1061, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 247, 351, 352, 354, 0, 1060, 353, 1028, 1029,
	0, 989, 0, 355, 356, 1062, 1021, 1063, 357, 358,
	359, 1064, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 1057, 1065,
	371, 372, 1066, 0, 373, 374, 375, 1012, 1011, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 1067, 392, 393,
	394, 398, 397, 399, 396, 1068, 395, 952, 248, 1069,
	400, 974, 1022, 401, 1036, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 1070, 412, 1071, 1051, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 1052, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 1032, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 1072, 452, 453, 454, 455, 962, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 1015, 477, 461,
	462, 478, 479, 1073, 480, 481, 482, 483, 484, 485,
	1030, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 1076, 492, 493, 494, 495, 1053, 0, 498, 499,
	950, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 1042, 1043, 1044, 1045, 0, 514, 0,
	508, 509, 1054, 510, 1055, 972, 511, 512, 513, 0,
	515, 516, 0, 956, 517, 518, 519, 521, 522, 520,
	523, 1016, 524, 0, 0, 525, 526, 527, 582, 1039,
	1075, 0, 529, 528, 585, 0, 0, 0, 0, 530,
	531, 586, 532, 533, 534, 953, 0, 0, 0, 0,
	0, 0, 949, 0, 0, 0, 0, 0, 0, 947,
	948, 0, 0, 0, 0, 0, 0, 0, 978, 2311,
	0, 1539, 976, 994, 966, 967, 968, 964, 965, 977,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 1018, 982, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 1031, 0,
	265, 1038, 266, 1037, 0, 1048, 267, 268, 269, 270,
	271, 984, 1017, 951, 272, 1077, 1078, 543, 0, 273,
	274, 1024, 0, 1005, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 1058, 293,
	294, 1008, 1006, 1007, 1014, 1010, 1009, 1013, 295, 296,
	297, 298, 1041, 299, 1035, 1034, 955, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	1026, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 961, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 1049, 1050, 973, 246, 0, 0, 0,
	0, 0, 329, 330, 331, 1033, 0, 0, 0, 332,
	0, 333, 0, 0, 1059, 334, 335, 1046, 1047, 336,
	337, 0, 338, 1056, 0, 983, 339, 0, 340, 341,
	342, 343, 344, 1019, 1020, 1023, 402, 1061, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 247, 351,
	352, 354, 0, 1060, 353, 1028, 1029, 0, 989, 0,
	355, 356, 1062, 1021, 1063, 357, 358, 359, 1064, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 1057, 1065, 371, 372, 1066,
	0, 373, 374, 375, 1012, 1011, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 1067, 392, 393, 394, 398, 397,
	399, 396, 1068, 395, 952, 248, 1069, 400, 974, 1022,
	401, 1036, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 1070, 412,
	1071, 1051, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 1052, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 1032, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 1072, 452,
	453, 454, 455, 962, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 1015, 477, 461, 462, 478, 479,
	1073, 480, 481, 482, 483, 484, 485, 1030, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 1076, 492,
	493, 494, 495, 1053, 0, 498, 499, 950, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	1042, 1043, 1044, 1045, 0, 514, 0, 508, 509, 1054,
	510, 1055, 972, 511, 512, 513, 0, 515, 516, 0,
	956, 517, 518, 519, 521, 522, 520, 523, 1016, 524,
	0, 0, 525, 526, 527, 582, 1039, 1075, 0, 529,
	528, 585, 1538, 0, 0, 0, 530, 531, 586, 532,
	533, 534, 953, 0, 0, 0, 0, 0, 0, 949,
	0, 0, 0, 0, 0, 0, 947, 948, 0, 0,
	0, 0, 0, 0, 0, 978, 0, 0, 943, 976,
	994, 966, 967, 968, 964, 965, 977, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1018, 982, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 1031, 0, 265, 1038, 266,
	1037, 0, 1048, 267, 268, 269, 270, 271, 984, 1017,
	951, 272, 1077, 1078, 543, 0, 273, 274, 1024, 0,
	1005, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 0, 292, 1058, 293, 294, 1008, 1006,
	1007, 1014, 1010, 1009, 1013, 295, 296, 297, 298, 1041,
	299, 1035, 1034, 955, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 1026, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 961,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	1049, 1050, 973, 246, 0, 0, 0, 0, 0, 329,
	330, 331, 1033, 0, 0, 0, 332, 0, 333, 0,
	0, 1059, 334, 335, 1046, 1047, 336, 337, 0, 338,
	1056, 0, 983, 339, 0, 340, 341, 342, 343, 344,
	1019, 1020, 1023, 402, 1061, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 247, 351, 352, 354, 0,
	1060, 353, 1028, 1029, 0, 989, 0, 355, 356, 1062,
	1021, 1063, 357, 358, 359, 1064, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 0, 367, 369, 368,
	0, 370, 1057, 1065, 371, 372, 1066, 0, 373, 374,
	375, 1012, 1011, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 1067, 392, 393, 394, 398, 397, 399, 396, 1068,
	395, 952, 248, 1069, 400, 974, 1022, 401, 1036, 403,
	404, 0, 0, 405, 0, 957, 0, 407, 408, 409,
	0, 0, 410, 411, 565, 1070, 412, 1071, 1051, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 1052, 425, 570, 426, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	1032, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 1072, 452, 453, 454, 455,
	962, 456, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 1015, 477, 461, 462, 478, 479, 1073, 480, 481,
	482, 483, 484, 485, 1030, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 1076, 492, 493, 494, 495,
	1053, 0, 498, 499, 950, 497, 0, 500, 501, 502,
	503, 504, 505, 323, 506, 0, 507, 1042, 1043, 1044,
	1045, 0, 514, 0, 508, 509, 1054, 510, 1055, 972,
	511, 512, 513, 0, 515, 516, 0, 956, 517, 518,
	519, 521, 522, 520, 523, 1016, 524, 0, 0, 525,
	526, 527, 582, 1039, 1075, 0, 529, 528, 585, 0,
	0, 0, 0, 530, 531, 586, 532, 533, 534, 953,
	0, 0, 0, 0, 0, 0, 949, 0, 0, 0,
	0, 0, 0, 947, 948, 994, 966, 967, 968, 964,
	965, 977, 978, 0, 0, 0, 976, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1018, 982, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 536,
	1031, 0, 265, 1038, 266, 1037, 0, 1048, 267, 268,
	269, 270, 271, 984, 1017, 951, 272, 1077, 1078, 543,
	0, 273, 274, 1024, 0, 1005, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 4043, 291, 0, 292,
	1058, 293, 294, 1008, 1006, 1007, 1014, 1010, 1009, 1013,
	295, 296, 297, 298, 1041, 299, 1035, 1034, 955, 303,
	300, 301, 0, 304, 302, 0, 305, 306, 307, 0,
	0, 308, 1026, 310, 0, 311, 312, 0, 313, 314,
	315, 0, 316, 317, 961, 318, 319, 320, 322, 324,
	321, 325, 326, 327, 328, 1049, 1050, 973, 246, 0,
	0, 0, 0, 0, 329, 330, 331, 1033, 0, 0,
	0, 332, 0, 333, 0, 0, 1059, 334, 335, 1046,
	1047, 336, 337, 0, 338, 1056, 0, 983, 339, 0,
	340, 341, 342, 343, 344, 1019, 1020, 1023, 402, 1061,
	345, 346, 0, 347, 348, 349, 350, 0, 0, 0,
	247, 351, 352, 354, 0, 1060, 353, 1028, 1029, 0,
	989, 0, 355, 356, 1062, 1021, 1063, 357, 358, 359,
	1064, 360, 0, 0, 0, 361, 362, 363, 364, 365,
	366, 0, 367, 369, 368, 0, 370, 1057, 1065, 371,
	372, 1066, 0, 373, 374, 375, 1012, 1011, 376, 377,
	378, 379, 0, 380, 381, 383, 385, 382, 384, 389,
	386, 387, 388, 391, 0, 390, 1067, 392, 393, 394,
	398, 397, 399, 396, 1068, 395, 952, 248, 1069, 400,
	974, 1022, 401, 1036, 403, 404, 0, 0, 405, 0,
	957, 0, 407, 408, 409, 0, 0, 410, 411, 565,
	1070, 412, 1071, 1051, 413, 414, 406, 415, 416, 417,
	418, 419, 420, 421, 422, 0, 423, 424, 567, 568,
	1052, 425, 570, 426, 427, 0, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 1032, 437, 436, 438, 0,
	439, 0, 0, 0, 0, 0, 440, 0, 442, 443,
	444, 441, 445, 446, 447, 448, 0, 449, 450, 451,
	1072, 452, 453, 454, 455, 962, 456, 0, 457, 458,
	464, 465, 459, 460, 466, 467, 468, 469, 470, 0,
	472, 473, 471, 474, 475, 476, 1015, 477, 461, 462,
	478, 479, 1073, 480, 481, 482, 483, 484, 485, 1030,
	0, 486, 0, 487, 488, 489, 490, 463, 491, 496,
	1076, 492, 493, 494, 495, 1053, 0, 498, 499, 950,
	497, 0, 500, 501, 502, 503, 504, 505, 323, 506,
	0, 507, 1042, 1043, 1044, 1045, 0, 514, 0, 508,
	509, 1054, 510, 1055, 972, 511, 512, 513, 0, 515,
	516, 0, 956, 517, 518, 519, 521, 522, 520, 523,
	1016, 524, 0, 0, 525, 526, 527, 582, 1039, 1075,
	0, 529, 528, 585, 0, 0, 0, 0, 530, 531,
	586, 532, 533, 534, 953, 0, 0, 0, 0, 0,
	0, 949, 0, 0, 0, 0, 0, 0, 947, 948,
	994, 966, 967, 968, 964, 965, 977, 978, 0, 0,
	0, 976, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1018, 982, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 1031, 0, 265, 1038, 266,
	1037, 0, 1048, 267, 268, 269, 270, 271, 984, 1017,
	951, 272, 1077, 1078, 543, 0, 273, 274, 1024, 0,
	1005, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 0, 292, 1058, 293, 294, 1008, 1006,
	1007, 1014, 1010, 1009, 1013, 295, 296, 297, 298, 1041,
	299, 1035, 1034, 955, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 1026, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 961,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	1049, 1050, 973, 246, 0, 0, 0, 0, 0, 329,
	330, 331, 1033, 0, 0, 0, 332, 0, 333, 0,
	0, 1059, 334, 335, 1046, 1047, 336, 337, 0, 338,
	1056, 0, 983, 339, 0, 340, 341, 342, 343, 344,
	1019, 1020, 1023, 402, 1061, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 2191, 351, 352, 354, 0,
	1060, 353, 1028, 1029, 0, 989, 0, 355, 356, 1062,
	1021, 1063, 357, 358, 359, 1064, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 0, 367, 369, 368,
	0, 370, 1057, 1065, 371, 372, 1066, 0, 373, 374,
	375, 1012, 1011, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 1067, 392, 393, 394, 398, 397, 399, 396, 1068,
	395, 952, 248, 1069, 400, 974, 1022, 401, 1036, 403,
	404, 0, 0, 405, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 411, 565, 1070, 412, 1071, 1051, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 1052, 425, 570, 426, 427,
	2190, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	1032, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 1072, 452, 453, 454, 455,
	962, 456, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 1015, 477, 461, 462, 478, 479, 1073, 480, 481,
	482, 483, 484, 485, 1030, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 1076, 492, 493, 494, 495,
	1053, 0, 498, 499, 950, 497, 0, 500, 501, 502,
	503, 504, 505, 323, 506, 0, 507, 1042, 1043, 1044,
	1045, 0, 514, 0, 508, 509, 1054, 510, 1055, 972,
	511, 512, 513, 0, 515, 516, 0, 956, 517, 518,
	519, 521, 522, 520, 523, 1016, 524, 0, 0, 525,
	526, 527, 582, 1039, 1075, 0, 529, 528, 585, 0,
	0, 0, 0, 530, 531, 586, 532, 533, 534, 953,
	0, 0, 0, 0, 0, 0, 949, 0, 0, 0,
	0, 0, 0, 947, 948, 994, 966, 967, 968, 964,
	965, 977, 978, 0, 0, 0, 976, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1018, 982, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 536,
	1031, 0, 265, 1038, 266, 1037, 0, 1048, 267, 268,
	269, 270, 271, 984, 1017, 951, 272, 1077, 1078, 543,
	0, 273, 274, 1024, 0, 1005, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 0, 292,
	1058, 293, 294, 1008, 1006, 1007, 1014, 1010, 1009, 1013,
	295, 296, 297, 298, 1041, 299, 1035, 1034, 955, 303,
	300, 301, 0, 304, 302, 0, 305, 306, 307, 0,
	0, 308, 1026, 310, 0, 311, 312, 0, 313, 314,
	315, 0, 316, 317, 961, 318, 319, 320, 322, 324,
	321, 325, 326, 327, 328, 1049, 1050, 973, 246, 0,
	0, 0, 0, 0, 329, 330, 331, 1033, 0, 0,
	0, 332, 0, 333, 0, 0, 1059, 334, 335, 1046,
	1047, 336, 337, 0, 338, 1056, 0, 983, 339, 0,
	340, 341, 342, 343, 344, 1019, 1020, 1023, 402, 1061,
	345, 346, 0, 347, 348, 349, 350, 0, 0, 0,
	247, 351, 352, 354, 0, 1060, 353, 1028, 1029, 0,
	989, 0, 355, 356, 1062, 1021, 1063, 357, 358, 359,
	1064, 360, 0, 0, 0, 361, 362, 363, 364, 365,
	366, 0, 367, 369, 368, 0, 370, 1057, 1065, 371,
	372, 1066, 0, 373, 374, 375, 1012, 1011, 376, 377,
	378, 379, 0, 380, 381, 383, 385, 382, 384, 389,
	386, 387, 388, 391, 0, 390, 1067, 392, 393, 394,
	398, 397, 399, 396, 1068, 395, 952, 248, 1069, 400,
	974, 1022, 401, 1036, 403, 404, 0, 0, 405, 0,
	957, 0, 407, 408, 409, 0, 0, 410, 411, 565,
	1070, 412, 1071, 1051, 413, 414, 406, 415, 416, 417,
	418, 419, 420, 421, 422, 0, 423, 424, 567, 568,
	1052, 425, 570, 426, 427, 0, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 1032, 437, 436, 438, 0,
	439, 0, 0, 0, 0, 0, 440, 0, 442, 443,
	444, 441, 445, 446, 447, 448, 0, 449, 450, 451,
	1072, 452, 453, 454, 455, 962, 456, 0, 457, 458,
	464, 465, 459, 460, 466, 467, 468, 469, 470, 0,
	472, 473, 471, 474, 475, 476, 1015, 477, 461, 462,
	478, 479, 1073, 480, 481, 482, 483, 484, 485, 1030,
	0, 486, 0, 487, 488, 489, 490, 463, 491, 496,
	1076, 492, 493, 494, 495, 1053, 0, 498, 499, 950,
	497, 0, 500, 501, 502, 503, 504, 505, 323, 506,
	0, 507, 1042, 1043, 1044, 1045, 0, 514, 0, 508,
	509, 1054, 510, 1055, 972, 511, 512, 513, 0, 515,
	516, 0, 956, 517, 518, 519, 521, 522, 520, 523,
	1016, 524, 0, 0, 525, 526, 527, 582, 1039, 1075,
	0, 529, 528, 585, 0, 0, 0, 0, 530, 531,
	586, 532, 533, 534, 953, 0, 0, 0, 0, 0,
	0, 949, 0, 0, 0, 0, 0, 0, 947, 948,
	994, 966, 967, 968, 964, 965, 977, 978, 0, 0,
	0, 976, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1018, 982, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 1031, 0, 265, 1038, 266,
	1037, 0, 1048, 267, 268, 269, 270, 271, 984, 1017,
	951, 272, 1077, 1078, 543, 0, 273, 274, 1024, 0,
	1005, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 3837, 291, 0, 292, 1058, 293, 294, 1008, 1006,
	1007, 1014, 1010, 1009, 1013, 295, 296, 297, 298, 1041,
	299, 1035, 1034, 955, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 1026, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 961,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	1049, 1050, 973, 246, 0, 0, 0, 0, 0, 329,
	330, 331, 1033, 0, 0, 0, 332, 0, 333, 0,
	0, 1059, 334, 335, 1046, 1047, 336, 337, 0, 338,
	1056, 0, 983, 339, 0, 340, 341, 342, 343, 344,
	1019, 1020, 1023, 402, 1061, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 247, 351, 352, 354, 0,
	1060, 353, 1028, 1029, 0, 989, 0, 355, 356, 1062,
	1021, 1063, 357, 358, 359, 1064, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 0, 367, 369, 368,
	0, 370, 1057, 1065, 371, 372, 1066, 0, 373, 374,
	375, 1012, 1011, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 1067, 392, 393, 394, 398, 397, 399, 396, 1068,
	395, 952, 248, 1069, 400, 974, 1022, 401, 1036, 403,
	404, 0, 0, 405, 0, 957, 0, 407, 408, 409,
	0, 0, 410, 411, 565, 1070, 412, 1071, 1051, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 1052, 425, 570, 426, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	1032, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 1072, 452, 453, 454, 455,
	962, 456, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 1015, 477, 461, 462, 478, 479, 1073, 480, 481,
	482, 483, 484, 485, 1030, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 1076, 492, 493, 494, 495,
	1053, 0, 498, 499, 950, 497, 0, 500, 501, 502,
	503, 504, 505, 323, 506, 0, 507, 1042, 1043, 1044,
	1045, 0, 514, 0, 508, 509, 1054, 510, 1055, 972,
	511, 512, 513, 0, 515, 516, 0, 956, 517, 518,
	519, 521, 522, 520, 523, 1016, 524, 0, 0, 525,
	526, 527, 582, 1039, 1075, 0, 529, 528, 585, 0,
	0, 0, 0, 530, 531, 586, 532, 533, 534, 953,
	0, 0, 0, 0, 0, 0, 949, 0, 0, 0,
	0, 0, 0, 947, 948, 994, 966, 967, 968, 964,
	965, 977, 978, 0, 0, 0, 976, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1018, 982, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 536,
	1031, 0, 265, 1038, 266, 1037, 0, 1048, 267, 268,
	269, 270, 271, 984, 1017, 951, 272, 1077, 1078, 543,
	0, 273, 274, 1024, 0, 1005, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 0, 292,
	1058, 293, 294, 1008, 1006, 1007, 1014, 1010, 1009, 1013,
	295, 296, 297, 298, 1041, 299, 1035, 1034, 955, 303,
	300, 301, 0, 304, 302, 0, 305, 306, 307, 0,
	0, 308, 1026, 310, 0, 311, 312, 0, 313, 314,
	315, 0, 316, 317, 961, 318, 319, 320, 322, 324,
	321, 325, 326, 327, 328, 1049, 1050, 973, 246, 0,
	0, 0, 0, 0, 329, 330, 331, 1033, 0, 0,
	0, 332, 0, 333, 0, 0, 1059, 334, 335, 1046,
	1047, 336, 337, 0, 338, 1056, 0, 983, 339, 0,
	340, 341, 342, 343, 344, 1019, 1020, 1023, 402, 1061,
	345, 346, 0, 347, 348, 349, 350, 0, 0, 0,
	247, 351, 352, 354, 0, 1060, 353, 1028, 1029, 0,
	989, 0, 355, 356, 1062, 1021, 1063, 357, 358, 359,
	1064, 360, 0, 0, 0, 361, 362, 363, 364, 365,
	366, 0, 367, 369, 368, 0, 370, 1057, 1065, 371,
	372, 1066, 0, 373, 374, 375, 1012, 1011, 376, 377,
	378, 379, 0, 380, 381, 383, 385, 382, 384, 389,
	386, 387, 388, 391, 0, 390, 1067, 392, 393, 394,
	398, 397, 399, 396, 1068, 395, 952, 3497, 1069, 400,
	974, 1022, 401, 1036, 403, 404, 0, 0, 405, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 411, 565,
	1070, 412, 1071, 1051, 413, 414, 406, 415, 416, 417,
	418, 419, 420, 421, 422, 0, 423, 424, 567, 568,
	1052, 425, 570, 426, 427, 0, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 1032, 437, 436, 438, 0,
	439, 0, 0, 0, 0, 0, 440, 0, 442, 443,
	444, 441, 445, 446, 447, 448, 0, 449, 450, 451,
	1072, 452, 453, 454, 455, 962, 456, 0, 457, 458,
	464, 465, 459, 460, 466, 467, 468, 469, 470, 0,
	472, 473, 471, 474, 475, 476, 1015, 477, 461, 462,
	478, 479, 1073, 480, 481, 482, 483, 484, 485, 1030,
	0, 486, 0, 487, 488, 489, 490, 463, 491, 496,
	1076, 492, 493, 494, 495, 1053, 0, 498, 499, 950,
	497, 0, 500, 501, 502, 503, 504, 505, 323, 506,
	0, 507, 1042, 1043, 1044, 1045, 0, 514, 0, 508,
	509, 1054, 510, 1055, 972, 511, 512, 513, 0, 515,
	516, 0, 956, 517, 518, 519, 521, 522, 520, 523,
	1016, 524, 0, 0, 525, 526, 527, 582, 1039, 1075,
	0, 529, 528, 585, 0, 0, 0, 0, 530, 531,
	586, 532, 533, 534, 953, 0, 0, 0, 0, 0,
	0, 949, 0, 0, 0, 0, 0, 0, 947, 948,
	1754, 0, 0, 0, 0, 0, 0, 978, 0, 0,
	0, 976, 994, 966, 967, 968, 964, 965, 977, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 1018, 982, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 536, 1031, 0, 265,
	1038, 266, 1037, 0, 1048, 267, 268, 269, 270, 271,
	984, 1017, 951, 272, 1077, 1078, 543, 0, 273, 274,
	1024, 0, 1005, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 0, 292, 1058, 293, 294,
	1008, 1006, 1007, 1014, 1010, 1009, 1013, 295, 296, 297,
	298, 1041, 299, 1035, 1034, 955, 303, 300, 301, 0,
	304, 302, 0, 305, 306, 307, 0, 0, 308, 1026,
	310, 0, 311, 312, 0, 313, 314, 315, 0, 316,
	317, 961, 318, 319, 320, 322, 324, 321, 325, 326,
	327, 328, 1049, 1050, 973, 246, 0, 0, 0, 0,
	0, 329, 330, 331, 1033, 0, 0, 0, 332, 0,
	333, 0, 0, 1059, 334, 335, 1046, 1047, 336, 337,
	0, 338, 1056, 0, 983, 339, 0, 340, 341, 342,
	343, 344, 1019, 1020, 1023, 402, 1061, 345, 346, 0,
	347, 348, 349, 350, 0, 0, 0, 247, 351, 352,
	354, 0, 1060, 353, 1028, 1029, 0, 989, 0, 355,
	356, 1062, 1021, 1063, 357, 358, 359, 1064, 360, 0,
	0, 0, 361, 362, 363, 364, 365, 366, 0, 367,
	369, 368, 0, 370, 1057, 1065, 371, 372, 1066, 0,
	373, 374, 375, 1012, 1011, 376, 377, 378, 379, 0,
	380, 381, 383, 385, 382, 384, 389, 386, 387, 388,
	391, 0, 390, 1067, 392, 393, 394, 398, 397, 399,
	396, 1068, 395, 952, 248, 1069, 400, 974, 1022, 401,
	1036, 403, 404, 0, 0, 405, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 411, 565, 1070, 412, 1071,
	1051, 413, 414, 406, 415, 416, 417, 418, 419, 420,
	421, 422, 0, 423, 424, 567, 568, 1052, 425, 570,
	426, 427, 0, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 1032, 437, 436, 438, 0, 439, 0, 0,
	0, 0, 0, 440, 0, 442, 443, 444, 441, 445,
	446, 447, 448, 0, 449, 450, 451, 1072, 452, 453,
	454, 455, 962, 456, 0, 457, 458, 464, 465, 459,
	460, 466, 467, 468, 469, 470, 0, 472, 473, 471,
	474, 475, 476, 1015, 477, 461, 462, 478, 479, 1073,
	480, 481, 482, 483, 484, 485, 1030, 0, 486, 0,
	487, 488, 489, 490, 463, 491, 496, 1076, 492, 493,
	494, 495, 1053, 0, 498, 499, 950, 497, 0, 500,
	501, 502, 503, 504, 505, 323, 506, 0, 507, 1042,
	1043, 1044, 1045, 0, 514, 0, 508, 509, 1054, 510,
	1055, 972, 511, 512, 513, 0, 515, 516, 0, 956,
	517, 518, 519, 521, 522, 520, 523, 1016, 524, 0,
	0, 525, 526, 527, 582, 1039, 1075, 3252, 529, 528,
	585, 0, 0, 0, 0, 530, 531, 586, 532, 533,
	534, 953, 0, 0, 0, 0, 0, 0, 949, 0,
	0, 0, 0, 0, 0, 947, 948, 994, 966, 967,
	968, 964, 965, 977, 978, 0, 0, 0, 976, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 1018, 982,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 536, 1031, 0, 265, 1038, 266, 1037, 0, 1048,
	267, 268, 269, 270, 271, 984, 1017, 951, 272, 1077,
	1078, 543, 0, 273, 274, 1024, 0, 1005, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	0, 292, 1058, 293, 294, 1008, 1006, 1007, 1014, 1010,
	1009, 1013, 295, 296, 297, 298, 1041, 299, 1035, 1034,
	955, 303, 300, 301, 0, 304, 302, 0, 305, 306,
	307, 0, 0, 308, 1026, 310, 0, 311, 312, 0,
	313, 314, 315, 0, 316, 317, 961, 318, 319, 320,
	322, 324, 321, 325, 326, 327, 328, 1049, 1050, 973,
	246, 0, 0, 0, 0, 0, 329, 330, 331, 1033,
	0, 0, 0, 332, 0, 333, 0, 0, 1059, 334,
	335, 1046, 1047, 336, 337, 0, 338, 1056, 0, 983,
	339, 0, 340, 341, 342, 343, 344, 1019, 1020, 1023,
	402, 1061, 345, 346, 0, 347, 348, 349, 350, 0,
	0, 0, 247, 351, 352, 354, 0, 1060, 353, 1028,
	1029, 0, 989, 0, 355, 356, 1062, 1021, 1063, 357,
	358, 359, 1064, 360, 0, 0, 0, 361, 362, 363,
	364, 365, 366, 0, 367, 369, 368, 0, 370, 1057,
	1065, 371, 372, 1066, 0, 373, 374, 375, 1012, 1011,
	376, 377, 378, 379, 0, 380, 381, 383, 385, 382,
	384, 389, 386, 387, 388, 391, 0, 390, 1067, 392,
	393, 394, 398, 397, 399, 396, 1068, 395, 952, 248,
	1069, 400, 974, 1022, 401, 1036, 403, 404, 0, 0,
	405, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	411, 565, 1070, 412, 1071, 1051, 413, 414, 406, 415,
	416, 417, 418, 419, 420, 421, 422, 0, 423, 424,
	567, 568, 1052, 425, 570, 426, 427, 0, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 1032, 437, 436,
	438, 0, 439, 0, 0, 0, 0, 0, 440, 0,
	442, 443, 444, 441, 445, 446, 447, 448, 0, 449,
	450, 451, 1072, 452, 453, 454, 455, 962, 456, 0,
	457, 458, 464, 465, 459, 460, 466, 467, 468, 469,
	470, 0, 472, 473, 471, 474, 475, 476, 1015, 477,
	461, 462, 478, 479, 1073, 480, 481, 482, 483, 484,
	485, 1030, 0, 486, 0, 487, 488, 489, 490, 463,
	491, 496, 1076, 492, 493, 494, 495, 1053, 0, 498,
	499, 950, 497, 0, 500, 501, 502, 503, 504, 505,
	323, 506, 0, 507, 1042, 1043, 1044, 1045, 0, 514,
	0, 508, 509, 1054, 510, 1055, 972, 511, 512, 513,
	0, 515, 516, 0, 956, 517, 518, 519, 521, 522,
	520, 523, 1016, 524, 0, 0, 525, 526, 527, 582,
	1039, 1075, 0, 529, 528, 585, 0, 0, 0, 0,
	530, 531, 586, 532, 533, 534, 953, 0, 0, 0,
	0, 0, 0, 949, 0, 0, 0, 0, 0, 0,
	947, 948, 1754, 0, 0, 0, 0, 0, 0, 978,
	0, 0, 0, 976, 994, 966, 967, 968, 964, 965,
	977, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 1018, 982, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 536, 1031,
	0, 265, 1038, 266, 1037, 0, 1048, 267, 268, 269,
	270, 271, 984, 1017, 951, 272, 1077, 1078, 543, 0,
	273, 274, 1024, 0, 1005, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 0, 292, 1058,
	293, 294, 1008, 1006, 1007, 1014, 1010, 1009, 1013, 295,
	296, 297, 298, 1041, 299, 1035, 1034, 955, 303, 300,
	301, 0, 304, 302, 0, 305, 306, 307, 0, 0,
	308, 1026, 310, 0, 311, 312, 0, 313, 314, 315,
	0, 316, 317, 961, 318, 319, 320, 322, 324, 321,
	325, 326, 327, 328, 1049, 1050, 973, 246, 0, 0,
	0, 0, 0, 329, 330, 331, 1033, 0, 0, 0,
	332, 0, 333, 0, 2386, 1059, 334, 335, 1046, 1047,
	336, 337, 0, 338, 1056, 0, 983, 339, 0, 340,
	341, 342, 343, 344, 1019, 1020, 1023, 402, 1061, 345,
	346, 0, 347, 348, 349, 350, 0, 0, 0, 247,
	351, 352, 354, 0, 1060, 353, 1028, 1029, 0, 989,
	0, 355, 356, 1062, 1021, 1063, 357, 358, 359, 1064,
	360, 0, 0, 0, 361, 362, 363, 364, 365, 366,
	0, 367, 369, 368, 0, 370, 1057, 1065, 371, 372,
	1066, 0, 373, 374, 375, 1012, 1011, 376, 377, 378,
	379, 0, 380, 381, 383, 385, 382, 384, 389, 386,
	387, 388, 391, 0, 390, 1067, 392, 393, 394, 398,
	397, 399, 396, 1068, 395, 952, 248, 1069, 400, 974,
	1022, 401, 1036, 403, 404, 0, 0, 405, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 411, 565, 1070,
	412, 1071, 1051, 413, 414, 406, 415, 416, 417, 418,
	419, 420, 421, 422, 0, 423, 424, 567, 568, 1052,
	425, 570, 426, 427, 0, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 1032, 437, 436, 438, 0, 439,
	0, 0, 0, 0, 0, 440, 0, 442, 443, 444,
	441, 445, 446, 447, 448, 0, 449, 450, 451, 1072,
	452, 453, 454, 455, 962, 456, 0, 457, 458, 464,
	465, 459, 460, 466, 467, 468, 469, 470, 0, 472,
	473, 471, 474, 475, 476, 1015, 477, 461, 462, 478,
	479, 1073, 480, 481, 482, 483, 484, 485, 1030, 0,
	486, 0, 487, 488, 489, 490, 463, 491, 496, 1076,
	492, 493, 494, 495, 1053, 0, 498, 499, 950, 497,
	0, 500, 501, 502, 503, 504, 505, 323, 506, 0,
	507, 1042, 1043, 1044, 1045, 0, 514, 0, 508, 509,
	1054, 510, 1055, 972, 511, 512, 513, 0, 515, 516,
	0, 956, 517, 518, 519, 521, 522, 520, 523, 1016,
	524, 0, 0, 525, 526, 527, 582, 1039, 1075, 0,
	529, 528, 585, 0, 0, 0, 0, 530, 531, 586,
	532, 533, 534, 953, 0, 0, 0, 0, 0, 0,
	949, 0, 0, 0, 0, 0, 0, 947, 948, 994,
	966, 967, 968, 964, 965, 977, 978, 0, 0, 0,
	976, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1018, 982, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 1031, 0, 265, 1038, 266, 1037,
	0, 1048, 267, 268, 269, 270, 271, 984, 1017, 951,
	272, 1077, 1078, 543, 0, 273, 274, 1024, 0, 1005,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 0, 292, 1058, 293, 294, 1008, 1006, 1007,
	1014, 1010, 1009, 1013, 295, 296, 297, 298, 1041, 299,
	1035, 1034, 955, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 0, 0, 308, 1026, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 316, 317, 961, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 1049,
	1050, 973, 246, 0, 0, 0, 0, 0, 329, 330,
	331, 1033, 0, 0, 0, 332, 0, 333, 0, 0,
	1059, 334, 335, 1046, 1047, 336, 337, 0, 338, 1056,
	0, 983, 339, 0, 340, 341, 342, 343, 344, 1019,
	1020, 1023, 402, 1061, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 247, 351, 352, 354, 0, 1060,
	353, 1028, 1029, 0, 989, 0, 355, 356, 1062, 1021,
	1063, 357, 358, 359, 1064, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 0, 367, 369, 368, 0,
	370, 1057, 1065, 371, 372, 1066, 0, 373, 374, 375,
	1012, 1011, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	1067, 392, 393, 394, 398, 397, 399, 396, 1068, 395,
	952, 248, 1069, 400, 974, 1022, 401, 1036, 403, 404,
	0, 0, 405, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 411, 565, 1070, 412, 1071, 1051, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 1052, 425, 570, 426, 427, 0,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 1032,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 1072, 452, 453, 454, 455, 962,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 0, 472, 473, 471, 474, 475, 476,
	1015, 477, 461, 462, 478, 479, 1073, 480, 481, 482,
	483, 484, 485, 1030, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 1076, 492, 493, 494, 495, 1053,
	0, 498, 499, 950, 497, 0, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 1042, 1043, 1044, 1045,
	0, 514, 0, 508, 509, 1054, 510, 1055, 972, 511,
	512, 513, 0, 515, 516, 0, 956, 517, 518, 519,
	521, 522, 520, 523, 1016, 524, 0, 0, 525, 526,
	527, 582, 1039, 1075, 0, 529, 528, 585, 0, 0,
	0, 0, 530, 531, 586, 532, 533, 534, 953, 0,
	0, 0, 0, 0, 0, 949, 0, 0, 0, 0,
	0, 0, 947, 948, 0, 0, 0, 0, 0, 0,
	0, 978, 1684, 0, 2391, 976, 994, 966, 967, 968,
	964, 965, 977, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1018, 982, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 1031, 0, 265, 1038, 266, 1037, 0, 1048, 267,
	268, 269, 270, 271, 984, 1017, 951, 272, 1077, 1078,
	543, 0, 273, 274, 1024, 0, 1005, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 1058, 293, 294, 1008, 1006, 1007, 1014, 1010, 1009,
	1013, 295, 296, 297, 298, 1041, 299, 1035, 1034, 955,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 1026, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 961, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 1049, 1050, 973, 246,
	0, 0, 0, 0, 0, 329, 330, 331, 1033, 0,
	0, 0, 332, 0, 333, 0, 0, 1059, 334, 335,
	1046, 1047, 336, 337, 0, 338, 1056, 0, 983, 339,
	0, 340, 341, 342, 343, 344, 1019, 1020, 1023, 402,
	1061, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 247, 351, 352, 354, 0, 1060, 353, 1028, 1029,
	0, 989, 0, 355, 356, 1062, 1021, 1063, 357, 358,
	359, 1064, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 1057, 1065,
	371, 372, 1066, 0, 373, 374, 375, 1012, 1011, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 1067, 392, 393,
	394, 398, 397, 399, 396, 1068, 395, 952, 248, 1069,
	400, 974, 1022, 401, 1036, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 1070, 412, 1071, 1051, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 1052, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 1032, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 1072, 452, 453, 454, 455, 962, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 1015, 477, 461,
	462, 478, 479, 1073, 480, 481, 482, 483, 484, 485,
	1030, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 1076, 492, 493, 494, 495, 1053, 0, 498, 499,
	950, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 1042, 1043, 1044, 1045, 0, 514, 0,
	508, 509, 1054, 510, 1055, 972, 511, 512, 513, 0,
	515, 516, 0, 956, 517, 518, 519, 521, 522, 520,
	523, 1016, 524, 0, 0, 525, 526, 527, 582, 1039,
	1075, 0, 529, 528, 585, 0, 0, 0, 0, 530,
	531, 586, 532, 533, 534, 953, 0, 0, 0, 0,
	0, 0, 949, 0, 0, 0, 0, 0, 0, 947,
	948, 0, 0, 0, 0, 0, 0, 0, 978, 0,
	0, 2389, 976, 994, 966, 967, 968, 964, 965, 977,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 1018, 982, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 1031, 0,
	265, 1038, 266, 1037, 0, 1048, 267, 268, 269, 270,
	271, 984, 1017, 951, 272, 1077, 1078, 543, 0, 273,
	274, 1024, 0, 1005, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 1058, 293,
	294, 1008, 1006, 1007, 1014, 1010, 1009, 1013, 295, 296,
	297, 298, 1041, 299, 1035, 1034, 955, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	1026, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 961, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 1049, 1050, 973, 246, 0, 0, 0,
	0, 0, 329, 330, 331, 1033, 0, 0, 0, 332,
	0, 333, 0, 0, 1059, 334, 335, 1046, 1047, 336,
	337, 0, 338, 1056, 0, 983, 339, 0, 340, 341,
	342, 343, 344, 1019, 1020, 1023, 402, 1061, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 247, 351,
	352, 354, 0, 1060, 353, 1028, 1029, 0, 989, 0,
	355, 356, 1062, 1021, 1063, 357, 358, 359, 1064, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 1057, 1065, 371, 372, 1066,
	0, 373, 374, 375, 1012, 1011, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 1067, 392, 393, 394, 398, 397,
	399, 396, 1068, 395, 952, 248, 1069, 400, 974, 1022,
	401, 1036, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 1070, 412,
	1071, 1051, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 1052, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 1032, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 1072, 452,
	453, 454, 455, 962, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 1015, 477, 461, 462, 478, 479,
	1073, 480, 481, 482, 483, 484, 485, 1030, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 1076, 492,
	493, 494, 495, 1053, 0, 498, 499, 950, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	1042, 1043, 1044, 1045, 0, 514, 0, 508, 509, 1054,
	510, 1055, 972, 511, 512, 513, 0, 515, 516, 0,
	956, 517, 518, 519, 521, 522, 520, 523, 1016, 524,
	0, 0, 525, 526, 527, 582, 1039, 1075, 0, 529,
	528, 585, 0, 0, 0, 0, 530, 531, 586, 532,
	533, 534, 953, 0, 0, 0, 0, 0, 0, 949,
	0, 0, 0, 0, 0, 0, 947, 948, 0, 0,
	0, 0, 0, 0, 0, 978, 0, 0, 2377, 976,
	994, 966, 967, 968, 964, 965, 977, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1018, 982, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 1031, 0, 265, 1038, 266,
	1037, 0, 1048, 267, 268, 269, 270, 271, 984, 1017,
	951, 272, 1077, 1078, 543, 0, 273, 274, 1024, 0,
	1005, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 0, 292, 1058, 293, 294, 1008, 1006,
	1007, 1014, 1010, 1009, 1013, 295, 296, 297, 298, 1041,
	299, 1035, 1034, 955, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 1026, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 961,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	1049, 1050, 973, 246, 0, 0, 0, 0, 0, 329,
	330, 331, 1033, 0, 0, 0, 332, 0, 333, 0,
	0, 1059, 334, 335, 1046, 1047, 336, 337, 0, 338,
	1056, 0, 983, 339, 0, 340, 341, 342, 343, 344,
	1019, 1020, 1023, 402, 1061, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 247, 351, 352, 354, 0,
	1060, 353, 1028, 1029, 0, 989, 0, 355, 356, 1062,
	1021, 1063, 357, 358, 359, 1064, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 0, 367, 369, 368,
	0, 370, 1057, 1065, 371, 372, 1066, 0, 373, 374,
	375, 1012, 1011, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 1067, 392, 393, 394, 398, 397, 399, 396, 1068,
	395, 952, 248, 1069, 400, 974, 1022, 401, 1036, 403,
	404, 0, 0, 405, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 411, 565, 1070, 412, 1071, 1051, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 1052, 425, 570, 426, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	1032, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 1072, 452, 453, 454, 455,
	962, 456, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 1015, 477, 461, 462, 478, 479, 1073, 480, 481,
	482, 483, 484, 485, 1030, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 1076, 492, 493, 494, 495,
	1053, 0, 498, 499, 950, 497, 0, 500, 501, 502,
	503, 504, 505, 323, 506, 0, 507, 1042, 1043, 1044,
	1045, 0, 514, 0, 508, 509, 1054, 510, 1055, 972,
	511, 512, 513, 0, 515, 516, 0, 956, 517, 518,
	519, 521, 522, 520, 523, 1016, 524, 0, 0, 525,
	526, 527, 582, 1039, 1075, 0, 529, 528, 585, 0,
	0, 0, 0, 530, 531, 586, 532, 533, 534, 953,
	0, 0, 0, 0, 0, 0, 949, 0, 0, 0,
	0, 0, 0, 947, 948, 0, 0, 0, 0, 0,
	0, 0, 978, 0, 0, 2366, 976, 994, 966, 967,
	968, 964, 965, 977, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 1018, 982,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 536, 1031, 0, 265, 1038, 266, 1037, 0, 1048,
	267, 268, 269, 270, 271, 984, 1017, 951, 272, 1077,
	1078, 543, 0, 273, 274, 1024, 0, 1005, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	0, 292, 1058, 293, 294, 1008, 1006, 1007, 1014, 1010,
	1009, 1013, 295, 296, 297, 298, 1041, 299, 1035, 1034,
	955, 303, 300, 301, 0, 304, 302, 0, 305, 306,
	307, 0, 0, 308, 1026, 310, 0, 311, 312, 0,
	313, 314, 315, 0, 316, 317, 961, 318, 319, 320,
	322, 324, 321, 325, 326, 327, 328, 1049, 1050, 973,
	246, 0, 0, 0, 0, 0, 329, 330, 331, 1033,
	0, 0, 0, 332, 0, 333, 0, 0, 1059, 334,
	335, 1046, 1047, 336, 337, 0, 338, 1056, 0, 983,
	339, 0, 340, 341, 342, 343, 344, 1019, 1020, 1023,
	402, 1061, 345, 346, 0, 347, 348, 349, 350, 0,
	0, 0, 247, 351, 352, 354, 0, 1060, 353, 1028,
	1029, 0, 989, 0, 355, 356, 1062, 1021, 1063, 357,
	358, 359, 1064, 360, 0, 0, 0, 361, 362, 363,
	364, 365, 366, 0, 367, 369, 368, 0, 370, 1057,
	1065, 371, 372, 1066, 0, 373, 374, 375, 1012, 1011,
	376, 377, 378, 379, 0, 380, 381, 383, 385, 382,
	384, 389, 386, 387, 388, 391, 0, 390, 1067, 392,
	393, 394, 398, 397, 399, 396, 1068, 395, 952, 248,
	1069, 400, 974, 1022, 401, 1036, 403, 404, 0, 0,
	405, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	411, 565, 1070, 412, 1071, 1051, 413, 414, 406, 415,
	416, 417, 418, 419, 420, 421, 422, 0, 423, 424,
	567, 568, 1052, 425, 570, 426, 427, 0, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 1032, 437, 436,
	438, 0, 439, 0, 0, 0, 0, 0, 440, 0,
	442, 443, 444, 441, 445, 446, 447, 448, 0, 449,
	450, 451, 1072, 452, 453, 454, 455, 962, 456, 0,
	457, 458, 464, 465, 459, 460, 466, 467, 468, 469,
	470, 0, 472, 473, 471, 474, 475, 476, 1015, 477,
	461, 462, 478, 479, 1073, 480, 481, 482, 483, 484,
	485, 1030, 0, 486, 0, 487, 488, 489, 490, 463,
	491, 496, 1076, 492, 493, 494, 495, 1053, 0, 498,
	499, 950, 497, 0, 500, 501, 502, 503, 504, 505,
	323, 506, 0, 507, 1042, 1043, 1044, 1045, 0, 514,
	0, 508, 509, 1054, 510, 1055, 972, 511, 512, 513,
	0, 515, 516, 0, 956, 517, 518, 519, 521, 522,
	520, 523, 1016, 524, 0, 0, 525, 526, 527, 582,
	1039, 1075, 0, 529, 528, 585, 0, 0, 0, 0,
	530, 531, 586, 532, 533, 534, 953, 0, 0, 0,
	0, 0, 0, 949, 0, 0, 0, 0, 0, 0,
	947, 948, 0, 0, 0, 0, 0, 0, 0, 978,
	0, 0, 2364, 976, 2355, 2362, 967, 968, 964, 965,
	977, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 1018, 982, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 536, 1031,
	0, 265, 1038, 266, 1037, 0, 1048, 267, 268, 269,
	270, 271, 984, 1017, 951, 272, 1077, 1078, 543, 0,
	273, 274, 1024, 0, 1005, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 0, 292, 1058,
	293, 294, 1008, 1006, 1007, 1014, 1010, 1009, 1013, 295,
	296, 297, 298, 1041, 2358, 1035, 1034, 955, 303, 300,
	301, 0, 304, 302, 0, 305, 306, 307, 0, 0,
	308, 1026, 310, 0, 311, 312, 0, 313, 314, 315,
	0, 316, 317, 961, 318, 319, 320, 322, 324, 321,
	325, 326, 327, 328, 1049, 1050, 973, 246, 0, 0,
	0, 0, 0, 329, 330, 331, 1033, 0, 0, 0,
	332, 0, 333, 0, 0, 1059, 334, 335, 1046, 1047,
	336, 337, 0, 338, 1056, 0, 983, 339, 0, 340,
	341, 342, 2359, 344, 1019, 1020, 1023, 402, 1061, 345,
	346, 0, 347, 348, 349, 350, 0, 0, 0, 247,
	351, 352, 354, 0, 1060, 353, 1028, 1029, 0, 989,
	0, 355, 356, 1062, 1021, 1063, 357, 358, 359, 1064,
	360, 0, 0, 0, 361, 362, 363, 364, 365, 366,
	0, 367, 369, 368, 0, 370, 1057, 1065, 371, 372,
	1066, 0, 373, 374, 375, 1012, 1011, 376, 377, 378,
	379, 0, 380, 381, 383, 385, 382, 2360, 2357, 386,
	387, 388, 391, 0, 390, 1067, 392, 393, 394, 398,
	397, 399, 396, 1068, 395, 952, 248, 1069, 400, 974,
	1022, 401, 1036, 403, 404, 0, 0, 405, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 411, 565, 1070,
	412, 1071, 1051, 413, 414, 406, 415, 416, 417, 418,
	419, 420, 421, 422, 0, 423, 424, 567, 568, 1052,
	425, 570, 426, 427, 0, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 1032, 437, 436, 438, 0, 439,
	0, 0, 0, 0, 0, 440, 0, 442, 443, 444,
	441, 445, 446, 447, 448, 0, 449, 450, 451, 1072,
	452, 453, 454, 455, 962, 456, 0, 457, 458, 464,
	465, 459, 460, 466, 467, 468, 469, 2361, 0, 472,
	473, 471, 474, 475, 476, 1015, 477, 461, 462, 478,
	479, 1073, 480, 481, 482, 483, 484, 485, 1030, 0,
	486, 0, 487, 488, 489, 490, 463, 491, 496, 1076,
	492, 493, 494, 495, 1053, 0, 498, 499, 950, 497,
	0, 500, 501, 502, 503, 504, 505, 323, 506, 0,
	507, 1042, 1043, 1044, 1045, 0, 514, 0, 508, 509,
	1054, 510, 1055, 972, 511, 512, 513, 0, 515, 516,
	0, 956, 517, 518, 519, 521, 522, 520, 523, 1016,
	524, 0, 0, 525, 526, 527, 582, 1039, 1075, 0,
	529, 528, 585, 0, 0, 0, 0, 530, 531, 586,
	532, 2356, 534, 953, 0, 0, 0, 0, 0, 0,
	949, 0, 0, 0, 0, 0, 0, 947, 948, 0,
	0, 0, 0, 0, 0, 0, 978, 0, 0, 2352,
	976, 2355, 2362, 967, 968, 964, 965, 977, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 1018, 982, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 1031, 0, 265, 1038,
	266, 1037, 0, 1048, 267, 268, 269, 270, 271, 984,
	1017, 951, 272, 1077, 1078, 543, 0, 273, 274, 1024,
	0, 1005, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 1058, 293, 294, 1008,
	1006, 1007, 1014, 1010, 1009, 1013, 295, 296, 297, 298,
	1041, 2358, 1035, 1034, 955, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 1026, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	961, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 1049, 1050, 973, 246, 0, 0, 0, 0, 0,
	329, 330, 331, 1033, 0, 0, 0, 332, 0, 333,
	0, 0, 1059, 334, 335, 1046, 1047, 336, 337, 0,
	338, 1056, 0, 983, 339, 0, 340, 341, 342, 2359,
	344, 1019, 1020, 1023, 402, 1061, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 247, 351, 352, 354,
	0, 1060, 353, 1028, 1029, 0, 989, 0, 355, 356,
	1062, 1021, 1063, 357, 358, 359, 1064, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 1057, 1065, 371, 372, 1066, 0, 373,
	374, 375, 1012, 1011, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 2360, 2357, 386, 387, 388, 391,
	0, 390, 1067, 392, 393, 394, 398, 397, 399, 396,
	1068, 395, 952, 248, 1069, 400, 974, 1022, 401, 1036,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 1070, 412, 1071, 1051,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 1052, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 1032, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 1072, 452, 453, 454,
	455, 962, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 2361, 0, 472, 473, 471, 474,
	475, 476, 1015, 477, 461, 462, 478, 479, 1073, 480,
	481, 482, 483, 484, 485, 1030, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 1076, 492, 493, 494,
	495, 1053, 0, 498, 499, 950, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 1042, 1043,
	1044, 1045, 0, 514, 0, 508, 509, 1054, 510, 1055,
	972, 511, 512, 513, 0, 515, 516, 0, 956, 517,
	518, 519, 521, 522, 520, 523, 1016, 524, 0, 0,
	525, 526, 527, 582, 1039, 1075, 0, 529, 528, 585,
	0, 0, 0, 0, 530, 531, 586, 532, 2356, 534,
	953, 0, 0, 0, 0, 0, 0, 949, 0, 0,
	0, 0, 0, 0, 947, 948, 994, 966, 967, 968,
	964, 965, 977, 978, 0, 0, 0, 976, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1018, 982, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 1031, 0, 265, 1038, 266, 1037, 0, 1048, 267,
	268, 269, 270, 271, 984, 1017, 951, 272, 1077, 1078,
	543, 0, 273, 274, 1024, 0, 1005, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 1058, 293, 294, 1008, 1006, 1007, 1014, 1010, 1009,
	1013, 295, 296, 297, 298, 1041, 299, 1035, 1034, 955,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 1026, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 961, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 1049, 1050, 973, 246,
	0, 0, 0, 0, 0, 329, 330, 331, 1033, 0,
	0, 0, 332, 0, 333, 0, 0, 1059, 334, 335,
	1046, 1047, 336, 337, 0, 338, 1056, 0, 983, 339,
	0, 340, 341, 342, 343, 344, 1019, 1020, 1023, 402,
	1061, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 247, 351, 352, 354, 0, 1060, 353, 1028, 1029,
	0, 989, 0, 355, 356, 1062, 1021, 1063, 357, 358,
	359, 1064, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 1057, 1065,
	371, 372, 1066, 0, 373, 374, 375, 1012, 1011, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 1067, 392, 393,
	394, 398, 397, 399, 396, 1068, 395, 952, 248, 1069,
	400, 974, 1022, 401, 1036, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 1070, 412, 1071, 1051, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 1052, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 1032, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 1072, 452, 453, 454, 455, 962, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 1015, 477, 461,
	462, 478, 479, 1073, 480, 481, 482, 483, 484, 485,
	1030, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 1076, 492, 493, 494, 495, 1053, 0, 498, 499,
	950, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 1042, 1043, 1044, 1045, 0, 514, 0,
	508, 509, 1054, 510, 1055, 972, 511, 512, 513, 0,
	515, 516, 0, 956, 517, 518, 519, 521, 522, 520,
	523, 1016, 524, 0, 0, 525, 526, 527, 582, 1039,
	1075, 0, 529, 528, 585, 0, 0, 0, 0, 530,
	531, 586, 532, 533, 534, 953, 0, 0, 0, 0,
	0, 0, 949, 0, 0, 0, 0, 0, 0, 947,
	948, 0, 0, 0, 0, 0, 1692, 0, 978, 0,
	0, 0, 976, 994, 966, 967, 968, 964, 965, 977,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 2170, 255, 256, 0,
	0, 0, 0, 0, 1018, 982, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 1031, 0,
	265, 1038, 266, 1037, 0, 1048, 267, 268, 269, 270,
	271, 984, 1017, 951, 272, 1077, 1078, 543, 0, 273,
	274, 1024, 0, 1005, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 1058, 293,
	294, 1008, 1006, 1007, 1014, 1010, 1009, 1013, 295, 296,
	297, 298, 1041, 299, 1035, 1034, 955, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	1026, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 961, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 1049, 1050, 973, 246, 0, 0, 0,
	0, 0, 329, 330, 331, 1033, 0, 0, 0, 332,
	0, 333, 0, 0, 1059, 334, 335, 1046, 1047, 336,
	337, 0, 338, 1056, 0, 983, 339, 0, 340, 341,
	342, 343, 344, 1019, 1020, 1023, 402, 1061, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 247, 351,
	352, 354, 0, 1060, 353, 1028, 1029, 0, 989, 0,
	355, 356, 1062, 1021, 1063, 357, 358, 359, 1064, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 1057, 1065, 371, 372, 1066,
	0, 373, 374, 375, 1012, 1011, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 1067, 392, 393, 394, 398, 397,
	399, 396, 1068, 395, 952, 248, 1069, 400, 974, 1022,
	401, 1036, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 1070, 412,
	1071, 1051, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 1052, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 1032, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 1072, 452,
	453, 454, 455, 962, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 1015, 477, 461, 462, 478, 479,
	1073, 480, 481, 482, 483, 484, 485, 1030, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 1076, 492,
	493, 494, 495, 1053, 0, 498, 499, 950, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	1042, 1043, 1044, 1045, 0, 514, 0, 508, 509, 1054,
	510, 1055, 972, 511, 512, 513, 0, 515, 516, 0,
	956, 517, 518, 519, 521, 522, 520, 523, 1016, 524,
	0, 0, 525, 526, 527, 582, 1039, 1075, 0, 529,
	528, 585, 0, 0, 0, 0, 530, 531, 586, 532,
	533, 534, 953, 0, 0, 0, 0, 0, 0, 949,
	0, 0, 0, 0, 0, 0, 947, 948, 0, 0,
	0, 0, 0, 0, 0, 978, 0, 0, 1544, 976,
	994, 966, 967, 968, 964, 965, 977, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1018, 982, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 1031, 0, 265, 1038, 266,
	1037, 0, 1048, 267, 268, 269, 270, 271, 984, 1017,
	951, 272, 1077, 1078, 543, 0, 273, 274, 1024, 0,
	1005, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 0, 292, 1058, 293, 294, 1008, 1006,
	1007, 1014, 1010, 1009, 1013, 295, 296, 297, 298, 1041,
	299, 1035, 1034, 955, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 1026, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 961,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	1049, 1050, 973, 246, 0, 0, 0, 0, 0, 329,
	330, 331, 1033, 0, 0, 0, 332, 0, 333, 0,
	0, 1059, 334, 335, 1046, 1047, 336, 337, 0, 338,
	1056, 0, 983, 339, 0, 340, 341, 342, 343, 344,
	1019, 1020, 1023, 402, 1061, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 247, 351, 352, 354, 0,
	1060, 353, 1028, 1029, 0, 989, 0, 355, 356, 1062,
	1021, 1063, 357, 358, 359, 1064, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 0, 367, 369, 368,
	0, 370, 1057, 1065, 371, 372, 1066, 0, 373, 374,
	375, 1012, 1011, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 1067, 392, 393, 394, 398, 397, 399, 396, 1068,
	395, 952, 248, 1069, 400, 974, 1022, 401, 1036, 403,
	404, 0, 0, 405, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 411, 565, 1070, 412, 1071, 1051, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 1052, 425, 570, 426, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	1032, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 1072, 452, 453, 454, 455,
	962, 456, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 1015, 477, 461, 462, 478, 479, 1073, 480, 481,
	482, 483, 484, 485, 1030, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 1076, 492, 493, 494, 495,
	1053, 0, 498, 499, 950, 497, 0, 500, 501, 502,
	503, 504, 505, 323, 506, 0, 507, 1042, 1043, 1044,
	1045, 0, 514, 0, 508, 509, 1054, 510, 1055, 972,
	511, 512, 513, 0, 515, 516, 0, 956, 517, 518,
	519, 521, 522, 520, 523, 1016, 524, 0, 0, 525,
	526, 527, 582, 1039, 1075, 0, 529, 528, 585, 0,
	0, 0, 0, 530, 531, 586, 532, 533, 534, 953,
	0, 0, 0, 0, 0, 0, 949, 0, 0, 0,
	0, 0, 0, 947, 948, 0, 0, 0, 0, 0,
	0, 0, 978, 0, 0, 1481, 976, 994, 966, 967,
	968, 964, 965, 977, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 1018, 982,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 536, 1031, 0, 265, 1038, 266, 1037, 0, 1048,
	267, 268, 269, 270, 271, 984, 1017, 951, 272, 1077,
	1078, 543, 0, 273, 274, 1024, 0, 1005, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	0, 292, 1058, 293, 294, 1008, 1006, 1007, 1014, 1010,
	1009, 1013, 295, 296, 297, 298, 1041, 299, 1035, 1034,
	955, 303, 300, 301, 0, 304, 302, 0, 305, 306,
	307, 0, 0, 308, 1026, 310, 0, 311, 312, 0,
	313, 314, 315, 0, 316, 317, 961, 318, 319, 320,
	322, 324, 321, 325, 326, 327, 328, 1049, 1050, 973,
	246, 0, 0, 0, 0, 0, 329, 330, 331, 1033,
	0, 0, 0, 332, 0, 333, 0, 0, 1059, 334,
	335, 1046, 1047, 336, 337, 0, 338, 1056, 0, 983,
	339, 0, 340, 341, 342, 343, 344, 1019, 1020, 1023,
	402, 1061, 345, 346, 0, 347, 348, 349, 350, 0,
	0, 0, 247, 351, 352, 354, 0, 1060, 353, 1028,
	1029, 0, 989, 0, 355, 356, 1062, 1021, 1063, 357,
	358, 359, 1064, 360, 0, 0, 0, 361, 362, 363,
	364, 365, 366, 0, 367, 369, 368, 0, 370, 1057,
	1065, 371, 372, 1066, 0, 373, 374, 375, 1012, 1011,
	376, 377, 378, 379, 0, 380, 381, 383, 385, 382,
	384, 389, 386, 387, 388, 391, 0, 390, 1067, 392,
	393, 394, 398, 397, 399, 396, 1068, 395, 952, 248,
	1069, 400, 974, 1022, 401, 1036, 403, 404, 0, 0,
	405, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	411, 565, 1070, 412, 1071, 1051, 413, 414, 406, 415,
	416, 417, 418, 419, 420, 421, 422, 0, 423, 424,
	567, 568, 1052, 425, 570, 426, 427, 0, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 1032, 437, 436,
	438, 0, 439, 0, 0, 0, 0, 0, 440, 0,
	442, 443, 444, 441, 445, 446, 447, 448, 0, 449,
	450, 451, 1072, 452, 453, 454, 455, 962, 456, 0,
	457, 458, 464, 465, 459, 460, 466, 467, 468, 469,
	470, 0, 472, 473, 471, 474, 475, 476, 1015, 477,
	461, 462, 478, 479, 1073, 480, 481, 482, 483, 484,
	485, 1030, 0, 486, 0, 487, 488, 489, 490, 463,
	491, 496, 1076, 492, 493, 494, 495, 1053, 0, 498,
	499, 950, 497, 0, 500, 501, 502, 503, 504, 505,
	323, 506, 0, 507, 1042, 1043, 1044, 1045, 0, 514,
	0, 508, 509, 1054, 510, 1055, 972, 511, 512, 513,
	0, 515, 516, 0, 956, 517, 518, 519, 521, 522,
	520, 523, 1016, 524, 0, 0, 525, 526, 527, 582,
	1039, 1075, 0, 529, 528, 585, 0, 0, 0, 0,
	530, 531, 586, 532, 533, 534, 953, 0, 0, 0,
	0, 0, 0, 949, 0, 0, 0, 0, 0, 0,
	947, 948, 0, 0, 0, 0, 0, 0, 0, 978,
	0, 0, 1476, 976, 994, 966, 967, 968, 964, 965,
	977, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 1018, 982, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 536, 1031,
	0, 265, 1038, 266, 1037, 0, 1048, 267, 268, 269,
	270, 271, 984, 1017, 951, 272, 1077, 1078, 543, 0,
	273, 274, 1024, 0, 1005, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 0, 292, 1058,
	293, 294, 1008, 1006, 1007, 1014, 1010, 1009, 1013, 295,
	296, 297, 298, 1041, 299, 1035, 1034, 955, 303, 300,
	301, 0, 304, 302, 0, 305, 306, 307, 0, 0,
	308, 1026, 310, 0, 311, 312, 0, 313, 314, 315,
	0, 316, 317, 961, 318, 319, 320, 322, 324, 321,
	325, 326, 327, 328, 1049, 1050, 973, 246, 0, 0,
	0, 0, 0, 329, 330, 331, 1033, 0, 0, 0,
	332, 0, 333, 0, 0, 1059, 334, 335, 1046, 1047,
	336, 337, 0, 338, 1056, 0, 983, 339, 0, 340,
	341, 342, 343, 344, 1019, 1020, 1023, 402, 1061, 345,
	346, 0, 347, 348, 349, 350, 0, 0, 0, 247,
	351, 352, 354, 0, 1060, 353, 1028, 1029, 0, 989,
	0, 355, 356, 1062, 1021, 1063, 357, 358, 359, 1064,
	360, 0, 0, 0, 361, 362, 363, 364, 365, 366,
	0, 367, 369, 368, 0, 370, 1057, 1065, 371, 372,
	1066, 0, 373, 374, 375, 1012, 1011, 376, 377, 378,
	379, 0, 380, 381, 383, 385, 382, 384, 389, 386,
	387, 388, 391, 0, 390, 1067, 392, 393, 394, 398,
	397, 399, 396, 1068, 395, 952, 248, 1069, 400, 974,
	1022, 401, 1036, 403, 404, 0, 0, 405, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 411, 565, 1070,
	412, 1071, 1051, 413, 414, 406, 415, 416, 417, 418,
	419, 420, 421, 422, 0, 423, 424, 567, 568, 1052,
	425, 570, 426, 427, 0, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 1032, 437, 436, 438, 0, 439,
	0, 0, 0, 0, 0, 440, 0, 442, 443, 444,
	441, 445, 446, 447, 448, 0, 449, 450, 451, 1072,
	452, 453, 454, 455, 962, 456, 0, 457, 458, 464,
	465, 459, 460, 466, 467, 468, 469, 470, 0, 472,
	473, 471, 474, 475, 476, 1015, 477, 461, 462, 478,
	479, 1073, 480, 481, 482, 483, 484, 485, 1030, 0,
	486, 0, 487, 488, 489, 490, 463, 491, 496, 1076,
	492, 493, 494, 495, 1053, 0, 498, 499, 950, 497,
	0, 500, 501, 502, 503, 504, 505, 323, 506, 0,
	507, 1042, 1043, 1044, 1045, 0, 514, 0, 508, 509,
	1054, 510, 1055, 972, 511, 512, 513, 0, 515, 516,
	0, 956, 517, 518, 519, 521, 522, 520, 523, 1016,
	524, 0, 0, 525, 526, 527, 582, 1039, 1075, 0,
	529, 528, 585, 0, 0, 0, 0, 530, 531, 586,
	532, 533, 534, 953, 0, 0, 0, 0, 0, 0,
	949, 0, 0, 0, 0, 0, 0, 947, 948, 0,
	0, 0, 0, 0, 0, 0, 978, 0, 0, 1467,
	976, 994, 966, 967, 968, 964, 965, 977, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 1018, 982, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 1031, 0, 265, 1038,
	266, 1037, 0, 1048, 267, 268, 269, 270, 271, 984,
	1017, 951, 272, 1077, 1078, 543, 0, 273, 274, 1024,
	0, 1005, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 1058, 293, 294, 1008,
	1006, 1007, 1014, 1010, 1009, 1013, 295, 296, 297, 298,
	1041, 299, 1035, 1034, 955, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 1026, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	961, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 1049, 1050, 973, 246, 0, 0, 0, 0, 0,
	329, 330, 331, 1033, 0, 0, 0, 332, 0, 333,
	0, 0, 1059, 334, 335, 1046, 1047, 336, 337, 0,
	338, 1056, 0, 983, 339, 0, 340, 341, 342, 343,
	344, 1019, 1020, 1023, 402, 1061, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 247, 351, 352, 354,
	0, 1060, 353, 1028, 1029, 0, 989, 0, 355, 356,
	1062, 1021, 1063, 357, 358, 359, 1064, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 1057, 1065, 371, 372, 1066, 0, 373,
	374, 375, 1012, 1011, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 1067, 392, 393, 394, 398, 397, 399, 396,
	1068, 395, 952, 248, 1069, 400, 974, 1022, 401, 1036,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 1070, 412, 1071, 1051,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 1052, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 1032, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 1072, 452, 453, 454,
	455, 962, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 1015, 477, 461, 462, 478, 479, 1073, 480,
	481, 482, 483, 484, 485, 1030, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 1076, 492, 493, 494,
	495, 1053, 0, 498, 499, 950, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 1042, 1043,
	1044, 1045, 0, 514, 0, 508, 509, 1054, 510, 1055,
	972, 511, 512, 513, 0, 515, 516, 0, 956, 517,
	518, 519, 521, 522, 520, 523, 1016, 524, 0, 0,
	525, 526, 527, 582, 1039, 1075, 0, 529, 528, 585,
	0, 0, 0, 0, 530, 531, 586, 532, 533, 534,
	953, 0, 0, 0, 0, 0, 0, 949, 0, 0,
	0, 0, 0, 0, 947, 948, 0, 0, 0, 0,
	0, 0, 0, 978, 0, 0, 1462, 976, 994, 966,
	967, 968, 964, 965, 977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1018,
	982, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 1031, 0, 265, 1038, 266, 1037, 0,
	1048, 267, 268, 269, 270, 271, 984, 1017, 951, 272,
	1077, 1078, 543, 0, 273, 274, 1024, 0, 1005, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 1058, 293, 294, 1008, 1006, 1007, 1014,
	1010, 1009, 1013, 295, 296, 297, 298, 1041, 299, 1035,
	1034, 955, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 1026, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 961, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 1049, 1050,
	973, 246, 0, 0, 0, 0, 0, 329, 330, 331,
	1033, 0, 0, 0, 332, 0, 333, 0, 0, 1059,
	334, 335, 1046, 1047, 336, 337, 0, 338, 1056, 0,
	983, 339, 0, 340, 341, 342, 343, 344, 1019, 1020,
	1023, 402, 1061, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 247, 351, 352, 354, 0, 1060, 353,
	1028, 1029, 0, 989, 0, 355, 356, 1062, 1021, 1063,
	357, 358, 359, 1064, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	1057, 1065, 371, 372, 1066, 0, 373, 374, 375, 1012,
	1011, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 1067,
	392, 393, 394, 398, 397, 399, 396, 1068, 395, 952,
	248, 1069, 400, 974, 1022, 401, 1036, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 1070, 412, 1071, 1051, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 1052, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 1032, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 1072, 452, 453, 454, 455, 962, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 1015,
	477, 461, 462, 478, 479, 1073, 480, 481, 482, 483,
	484, 485, 1030, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 1076, 492, 493, 494, 495, 1053, 0,
	498, 499, 950, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 1042, 1043, 1044, 1045, 0,
	514, 0, 508, 509, 1054, 510, 1055, 972, 511, 512,
	513, 0, 515, 516, 0, 956, 517, 518, 519, 521,
	522, 520, 523, 1016, 524, 0, 0, 525, 526, 527,
	582, 1039, 1075, 0, 529, 528, 585, 0, 0, 0,
	0, 530, 531, 586, 532, 533, 534, 953, 0, 0,
	0, 0, 0, 0, 949, 0, 0, 0, 0, 0,
	0, 947, 948, 0, 0, 0, 0, 0, 0, 0,
	978, 0, 0, 1444, 976, 994, 966, 967, 968, 964,
	965, 977, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1018, 982, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 536,
	1031, 0, 265, 1038, 266, 1037, 0, 1048, 267, 268,
	269, 270, 271, 984, 1017, 951, 272, 1077, 1078, 543,
	0, 273, 274, 1024, 0, 1005, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 0, 292,
	1058, 293, 294, 1008, 1006, 1007, 1014, 1010, 1009, 1013,
	295, 296, 297, 298, 1041, 299, 1035, 1034, 955, 303,
	300, 301, 0, 304, 302, 0, 305, 306, 307, 0,
	0, 308, 1026, 310, 0, 311, 312, 0, 313, 314,
	315, 0, 316, 317, 961, 318, 319, 320, 322, 324,
	321, 325, 326, 327, 328, 1049, 1050, 973, 246, 0,
	0, 0, 0, 0, 329, 330, 331, 1033, 0, 0,
	0, 332, 0, 333, 0, 0, 1059, 334, 335, 1046,
	1047, 336, 337, 0, 338, 1056, 0, 983, 339, 0,
	340, 341, 342, 343, 344, 1019, 1020, 1023, 402, 1061,
	345, 346, 0, 347, 348, 349, 350, 0, 0, 0,
	247, 351, 352, 354, 0, 1060, 353, 1028, 1029, 0,
	989, 0, 355, 356, 1062, 1021, 1063, 357, 358, 359,
	1064, 360, 0, 0, 0, 361, 362, 363, 364, 365,
	366, 0, 367, 369, 368, 0, 370, 1057, 1065, 371,
	372, 1066, 0, 373, 374, 375, 1012, 1011, 376, 377,
	378, 379, 0, 380, 381, 383, 385, 382, 384, 389,
	386, 387, 388, 391, 0, 390, 1067, 392, 393, 394,
	398, 397, 399, 396, 1068, 395, 952, 248, 1069, 400,
	974, 1022, 401, 1036, 403, 404, 0, 0, 405, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 411, 565,
	1070, 412, 1071, 1051, 413, 414, 406, 415, 416, 417,
	418, 419, 420, 421, 422, 0, 423, 424, 567, 568,
	1052, 425, 570, 426, 427, 0, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 1032, 437, 436, 438, 0,
	439, 0, 0, 0, 0, 0, 440, 0, 442, 443,
	444, 441, 445, 446, 447, 448, 0, 449, 450, 451,
	1072, 452, 453, 454, 455, 962, 456, 0, 457, 458,
	464, 465, 459, 460, 466, 467, 468, 469, 470, 0,
	472, 473, 471, 474, 475, 476, 1015, 477, 461, 462,
	478, 479, 1073, 480, 481, 482, 483, 484, 485, 1030,
	0, 486, 0, 487, 488, 489, 490, 463, 491, 496,
	1076, 492, 493, 494, 495, 1053, 0, 498, 499, 950,
	497, 0, 500, 501, 502, 503, 504, 505, 323, 506,
	0, 507, 1042, 1043, 1044, 1045, 0, 514, 0, 508,
	509, 1054, 510, 1055, 972, 511, 512, 513, 0, 515,
	516, 0, 956, 517, 518, 519, 521, 522, 520, 523,
	1016, 524, 0, 0, 525, 526, 527, 582, 1039, 1075,
	0, 529, 528, 585, 0, 0, 0, 0, 530, 531,
	586, 532, 533, 534, 953, 0, 0, 0, 0, 0,
	0, 949, 0, 0, 0, 0, 0, 0, 947, 948,
	0, 0, 0, 0, 0, 0, 0, 978, 0, 0,
	1330, 976, 994, 966, 967, 968, 964, 965, 977, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 1018, 982, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 536, 1031, 0, 265,
	1038, 266, 1037, 0, 1048, 267, 268, 269, 270, 271,
	984, 1017, 951, 272, 1077, 1078, 543, 0, 273, 274,
	1024, 0, 1005, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 0, 292, 1058, 293, 294,
	1008, 1006, 1007, 1014, 1010, 1009, 1013, 295, 296, 297,
	298, 1041, 299, 1035, 1034, 955, 303, 300, 301, 0,
	304, 302, 0, 305, 306, 307, 0, 0, 308, 1026,
	310, 0, 311, 312, 0, 313, 314, 315, 0, 316,
	317, 961, 318, 319, 320, 322, 324, 321, 325, 326,
	327, 328, 1049, 1050, 973, 246, 0, 0, 0, 0,
	0, 329, 330, 331, 1033, 0, 0, 0, 332, 0,
	333, 0, 0, 1059, 334, 335, 1046, 1047, 336, 337,
	0, 338, 1056, 0, 983, 339, 0, 340, 341, 342,
	343, 344, 1329, 1020, 1023, 402, 1061, 345, 346, 0,
	347, 348, 349, 350, 0, 0, 0, 247, 351, 352,
	354, 0, 1060, 353, 1028, 1029, 0, 989, 0, 355,
	356, 1062, 1021, 1063, 357, 358, 359, 1064, 360, 0,
	0, 0, 361, 362, 363, 364, 365, 366, 0, 367,
	369, 368, 0, 370, 1057, 1065, 371, 372, 1066, 0,
	373, 374, 375, 1012, 1011, 376, 377, 378, 379, 0,
	380, 381, 383, 385, 382, 384, 389, 386, 387, 388,
	391, 0, 390, 1067, 392, 393, 394, 398, 397, 399,
	396, 1068, 395, 952, 248, 1069, 400, 974, 1022, 401,
	1036, 403, 404, 0, 0, 405, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 411, 565, 1070, 412, 1071,
	1051, 413, 414, 406, 415, 416, 417, 418, 419, 420,
	421, 422, 0, 423, 424, 567, 568, 1052, 425, 570,
	426, 427, 0, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 1032, 437, 436, 438, 0, 439, 0, 0,
	0, 0, 0, 440, 0, 442, 443, 444, 441, 445,
	446, 447, 448, 0, 449, 450, 451, 1072, 452, 453,
	454, 455, 962, 456, 0, 457, 458, 464, 465, 459,
	460, 466, 467, 468, 469, 470, 0, 472, 473, 471,
	474, 475, 476, 1015, 477, 461, 462, 478, 479, 1073,
	480, 481, 482, 483, 484, 485, 1030, 0, 486, 0,
	487, 488, 489, 490, 463, 491, 496, 1076, 492, 493,
	494, 495, 1053, 0, 498, 499, 950, 497, 0, 500,
	501, 502, 503, 504, 505, 323, 506, 0, 507, 1042,
	1043, 1044, 1045, 0, 514, 0, 508, 509, 1054, 510,
	1055, 972, 511, 512, 513, 0, 515, 516, 0, 956,
	517, 518, 519, 521, 522, 520, 523, 1016, 524, 0,
	0, 525, 526, 527, 582, 1039, 1075, 0, 529, 528,
	585, 0, 0, 0, 0, 530, 531, 586, 532, 533,
	534, 953, 0, 0, 0, 0, 0, 0, 949, 0,
	0, 0, 0, 0, 0, 947, 948, 0, 0, 0,
	0, 0, 0, 0, 978, 0, 0, 1324, 976, 994,
	966, 967, 968, 964, 965, 977, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1018, 982, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 1031, 0, 265, 1038, 266, 1037,
	0, 1048, 267, 268, 269, 270, 271, 984, 1017, 951,
	272, 1077, 1078, 543, 0, 273, 274, 1024, 0, 1005,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 0, 292, 1058, 293, 294, 1008, 1006, 1007,
	1014, 1010, 1009, 1013, 295, 296, 297, 298, 1041, 299,
	1035, 1034, 955, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 0, 0, 308, 1026, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 316, 317, 961, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 1049,
	1050, 973, 246, 0, 0, 0, 0, 0, 329, 330,
	331, 1033, 0, 0, 0, 332, 0, 333, 0, 0,
	1059, 334, 335, 1046, 1047, 336, 337, 0, 338, 1056,
	0, 983, 339, 0, 340, 341, 342, 343, 344, 1323,
	1020, 1023, 402, 1061, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 247, 351, 352, 354, 0, 1060,
	353, 1028, 1029, 0, 989, 0, 355, 356, 1062, 1021,
	1063, 357, 358, 359, 1064, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 0, 367, 369, 368, 0,
	370, 1057, 1065, 371, 372, 1066, 0, 373, 374, 375,
	1012, 1011, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	1067, 392, 393, 394, 398, 397, 399, 396, 1068, 395,
	952, 248, 1069, 400, 974, 1022, 401, 1036, 403, 404,
	0, 0, 405, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 411, 565, 1070, 412, 1071, 1051, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 1052, 425, 570, 426, 427, 0,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 1032,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 1072, 452, 453, 454, 455, 962,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 0, 472, 473, 471, 474, 475, 476,
	1015, 477, 461, 462, 478, 479, 1073, 480, 481, 482,
	483, 484, 485, 1030, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 1076, 492, 493, 494, 495, 1053,
	0, 498, 499, 950, 497, 0, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 1042, 1043, 1044, 1045,
	0, 514, 0, 508, 509, 1054, 510, 1055, 972, 511,
	512, 513, 0, 515, 516, 0, 956, 517, 518, 519,
	521, 522, 520, 523, 1016, 524, 0, 0, 525, 526,
	527, 582, 1039, 1075, 0, 529, 528, 585, 0, 0,
	0, 0, 530, 531, 586, 532, 533, 534, 953, 0,
	0, 0, 0, 0, 0, 949, 0, 0, 0, 0,
	0, 0, 947, 948, 0, 0, 0, 0, 0, 0,
	0, 978, 0, 0, 1317, 976, 994, 966, 967, 968,
	964, 965, 977, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1018, 982, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 1031, 0, 265, 1038, 266, 1037, 0, 1048, 267,
	268, 269, 270, 271, 984, 1017, 951, 272, 1077, 1078,
	543, 0, 273, 274, 1024, 0, 1005, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 1058, 293, 294, 1008, 1006, 1007, 1014, 1010, 1009,
	1013, 295, 296, 297, 298, 1041, 299, 1035, 1034, 955,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 1026, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 961, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 1049, 1050, 973, 246,
	0, 0, 0, 0, 0, 329, 330, 331, 1033, 0,
	0, 0, 332, 0, 333, 0, 0, 1059, 334, 335,
	1046, 1047, 336, 337, 0, 338, 1056, 0, 983, 339,
	0, 340, 341, 342, 343, 344, 1019, 1020, 1023, 402,
	1061, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 247, 351, 352, 354, 0, 1060, 353, 1028, 1029,
	0, 989, 0, 355, 356, 1062, 1021, 1063, 357, 358,
	359, 1064, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 1057, 1065,
	371, 372, 1066, 0, 373, 374, 375, 1012, 1011, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 1067, 392, 393,
	394, 398, 397, 399, 396, 1068, 395, 952, 248, 1069,
	400, 974, 1022, 401, 1036, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 1070, 412, 1071, 1051, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 1052, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 1032, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 1072, 452, 453, 454, 455, 962, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 1015, 477, 461,
	462, 478, 479, 1073, 480, 481, 482, 483, 484, 485,
	1030, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 1076, 492, 493, 494, 495, 1053, 0, 498, 499,
	950, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 1042, 1043, 1044, 1045, 0, 514, 0,
	508, 509, 1054, 510, 1055, 972, 511, 512, 513, 0,
	515, 516, 0, 956, 517, 518, 519, 521, 522, 520,
	523, 1016, 524, 0, 0, 525, 526, 527, 582, 1039,
	1075, 0, 529, 528, 585, 0, 0, 0, 0, 530,
	531, 586, 532, 533, 534, 953, 0, 0, 0, 0,
	0, 0, 949, 0, 0, 0, 0, 0, 0, 947,
	948, 994, 966, 967, 968, 964, 965, 977, 978, 0,
	0, 0, 976, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 1018, 982, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 1031, 0, 265, 1038,
	266, 1037, 0, 1048, 267, 268, 269, 270, 271, 984,
	1017, 951, 272, 1077, 1078, 543, 0, 273, 274, 1024,
	0, 1005, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 1058, 293, 294, 1008,
	1006, 1007, 1014, 1010, 1009, 1013, 295, 296, 297, 298,
	1041, 299, 1035, 1034, 955, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 1026, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	961, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 1049, 1050, 973, 246, 0, 0, 0, 0, 0,
	329, 330, 331, 1033, 0, 0, 0, 332, 0, 333,
	0, 0, 1059, 334, 335, 1046, 1047, 336, 337, 0,
	338, 1056, 0, 983, 339, 0, 340, 341, 342, 343,
	344, 1019, 1020, 1023, 402, 1061, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 247, 351, 352, 354,
	0, 1060, 353, 1028, 1029, 0, 989, 0, 355, 356,
	1062, 1021, 1063, 357, 358, 359, 1064, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 1057, 1065, 371, 372, 1066, 0, 373,
	374, 375, 1012, 1011, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 1067, 392, 393, 394, 398, 397, 399, 396,
	1068, 395, 952, 248, 1069, 400, 974, 1022, 401, 1036,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 1070, 412, 1071, 1051,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 1052, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 1032, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 1072, 452, 453, 454,
	455, 962, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 1015, 477, 461, 462, 478, 479, 1073, 480,
	481, 482, 483, 484, 485, 1030, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 1076, 492, 493, 494,
	495, 1053, 0, 498, 499, 950, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 1042, 1043,
	1044, 1045, 0, 514, 0, 508, 509, 1054, 510, 1055,
	972, 511, 512, 513, 0, 515, 516, 0, 956, 517,
	518, 519, 521, 522, 520, 523, 1016, 524, 0, 0,
	525, 526, 527, 582, 1039, 1075, 0, 529, 528, 585,
	0, 0, 0, 0, 530, 531, 586, 532, 533, 534,
	953, 0, 0, 0, 0, 0, 0, 949, 0, 0,
	0, 0, 0, 0, 947, 948, 994, 966, 967, 968,
	964, 965, 977, 978, 0, 0, 0, 976, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1018, 982, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 1031, 0, 265, 1038, 266, 1037, 0, 1048, 267,
	268, 269, 270, 271, 984, 1017, 951, 272, 1077, 1078,
	543, 0, 273, 274, 1024, 0, 1005, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 1058, 293, 4083, 1008, 1006, 1007, 1014, 1010, 1009,
	1013, 295, 296, 297, 298, 1041, 299, 1035, 1034, 955,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 1026, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 961, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 1049, 1050, 973, 246,
	0, 0, 0, 0, 0, 329, 330, 331, 1033, 0,
	0, 0, 332, 0, 333, 0, 0, 1059, 334, 335,
	1046, 1047, 336, 337, 0, 338, 1056, 0, 983, 339,
	0, 340, 341, 342, 343, 344, 1019, 1020, 1023, 402,
	1061, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 247, 351, 352, 354, 0, 1060, 353, 1028, 1029,
	0, 989, 0, 355, 356, 1062, 1021, 1063, 357, 358,
	359, 1064, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 1057, 1065,
	371, 372, 1066, 0, 373, 374, 375, 1012, 1011, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 1067, 392, 393,
	394, 398, 397, 399, 396, 1068, 395, 952, 248, 1069,
	400, 974, 1022, 401, 1036, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 1070, 412, 1071, 1051, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 1052, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 1032, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 1072, 452, 453, 454, 455, 962, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 1015, 477, 461,
	462, 478, 479, 1073, 480, 481, 482, 483, 484, 485,
	1030, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 1076, 492, 493, 494, 495, 1053, 0, 498, 499,
	950, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 1042, 1043, 1044, 1045, 0, 514, 0,
	508, 509, 1054, 510, 1055, 972, 511, 512, 513, 0,
	4082, 516, 0, 956, 517, 518, 519, 521, 522, 520,
	523, 1016, 524, 0, 0, 525, 526, 527, 582, 1039,
	1075, 0, 529, 528, 585, 0, 0, 0, 0, 530,
	531, 586, 532, 533, 534, 953, 0, 0, 0, 0,
	0, 0, 949, 0, 0, 0, 0, 0, 0, 947,
	948, 994, 966, 967, 968, 964, 965, 977, 978, 0,
	0, 0, 976, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 1018, 982, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 4081, 1031, 0, 265, 1038,
	266, 1037, 0, 1048, 267, 268, 269, 270, 271, 984,
	1017, 951, 272, 1077, 1078, 543, 0, 273, 274, 1024,
	0, 1005, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 1058, 293, 4083, 1008,
	1006, 1007, 1014, 1010, 1009, 1013, 295, 296, 297, 298,
	1041, 299, 1035, 1034, 955, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 1026, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	961, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 1049, 1050, 973, 246, 0, 0, 0, 0, 0,
	329, 330, 331, 1033, 0, 0, 0, 332, 0, 333,
	0, 0, 1059, 334, 335, 1046, 1047, 336, 337, 0,
	338, 1056, 0, 983, 339, 0, 340, 341, 342, 343,
	344, 1019, 1020, 1023, 402, 1061, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 247, 351, 352, 354,
	0, 1060, 353, 1028, 1029, 0, 989, 0, 355, 356,
	1062, 1021, 1063, 357, 358, 359, 1064, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 1057, 1065, 371, 372, 1066, 0, 373,
	374, 375, 1012, 1011, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 1067, 392, 393, 394, 398, 397, 399, 396,
	1068, 395, 952, 248, 1069, 400, 974, 1022, 401, 1036,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 1070, 412, 1071, 1051,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 1052, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 1032, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 1072, 452, 453, 454,
	455, 962, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 1015, 477, 461, 462, 478, 479, 1073, 480,
	481, 482, 483, 484, 485, 1030, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 1076, 492, 493, 494,
	495, 1053, 0, 498, 499, 950, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 1042, 1043,
	1044, 1045, 0, 514, 0, 508, 509, 1054, 510, 1055,
	972, 511, 512, 513, 0, 4082, 516, 0, 956, 517,
	518, 519, 521, 522, 520, 523, 1016, 524, 0, 0,
	525, 526, 527, 582, 1039, 1075, 0, 529, 528, 585,
	0, 0, 0, 0, 530, 531, 586, 532, 533, 534,
	953, 0, 0, 0, 0, 0, 0, 949, 0, 0,
	0, 0, 0, 0, 947, 948, 994, 966, 967, 968,
	2773, 2774, 977, 978, 0, 0, 0, 976, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1018, 982, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 1031, 0, 265, 1038, 266, 1037, 0, 1048, 267,
	268, 269, 270, 271, 984, 1017, 951, 272, 1077, 1078,
	543, 0, 273, 274, 1024, 0, 1005, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 1058, 293, 294, 1008, 1006, 1007, 1014, 1010, 1009,
	1013, 295, 296, 297, 298, 1041, 299, 1035, 1034, 955,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 1026, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 961, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 1049, 1050, 973, 246,
	0, 0, 0, 0, 0, 329, 330, 331, 1033, 0,
	0, 0, 332, 0, 333, 0, 0, 1059, 334, 335,
	1046, 1047, 336, 337, 0, 338, 1056, 0, 983, 339,
	0, 340, 341, 342, 343, 344, 1019, 1020, 1023, 402,
	1061, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 247, 351, 352, 354, 0, 1060, 353, 1028, 1029,
	0, 989, 0, 355, 356, 1062, 1021, 1063, 357, 358,
	359, 1064, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 1057, 1065,
	371, 372, 1066, 0, 373, 374, 375, 1012, 1011, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 1067, 392, 393,
	394, 398, 397, 399, 396, 1068, 395, 952, 248, 1069,
	400, 974, 1022, 401, 1036, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 1070, 412, 1071, 1051, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 1052, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 1032, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 1072, 452, 453, 454, 455, 962, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 1015, 477, 461,
	462, 478, 479, 1073, 480, 481, 482, 483, 484, 485,
	1030, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 1076, 492, 493, 494, 495, 1053, 0, 498, 499,
	950, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 1042, 1043, 1044, 1045, 0, 514, 0,
	508, 509, 1054, 510, 1055, 972, 511, 512, 513, 0,
	515, 516, 0, 956, 517, 518, 519, 521, 522, 520,
	523, 1016, 524, 0, 0, 525, 526, 527, 582, 1039,
	1075, 0, 529, 528, 585, 0, 0, 0, 0, 530,
	531, 586, 532, 533, 534, 953, 0, 0, 0, 0,
	0, 0, 949, 0, 0, 0, 0, 0, 0, 947,
	948, 994, 966, 967, 968, 2771, 2772, 977, 978, 0,
	0, 0, 976, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 1018, 982, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 1031, 0, 265, 1038,
	266, 1037, 0, 1048, 267, 268, 269, 270, 271, 984,
	1017, 951, 272, 1077, 1078, 543, 0, 273, 274, 1024,
	0, 1005, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 1058, 293, 294, 1008,
	1006, 1007, 1014, 1010, 1009, 1013, 295, 296, 297, 298,
	1041, 299, 1035, 1034, 955, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 1026, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	961, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 1049, 1050, 973, 246, 0, 0, 0, 0, 0,
	329, 330, 331, 1033, 0, 0, 0, 332, 0, 333,
	0, 0, 1059, 334, 335, 1046, 1047, 336, 337, 0,
	338, 1056, 0, 983, 339, 0, 340, 341, 342, 343,
	344, 1019, 1020, 1023, 402, 1061, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 247, 351, 352, 354,
	0, 1060, 353, 1028, 1029, 0, 989, 0, 355, 356,
	1062, 1021, 1063, 357, 358, 359, 1064, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 1057, 1065, 371, 372, 1066, 0, 373,
	374, 375, 1012, 1011, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 1067, 392, 393, 394, 398, 397, 399, 396,
	1068, 395, 952, 248, 1069, 400, 974, 1022, 401, 1036,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 1070, 412, 1071, 1051,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 1052, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 1032, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 1072, 452, 453, 454,
	455, 962, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 1015, 477, 461, 462, 478, 479, 1073, 480,
	481, 482, 483, 484, 485, 1030, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 1076, 492, 493, 494,
	495, 1053, 0, 498, 499, 950, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 1042, 1043,
	1044, 1045, 0, 514, 0, 508, 509, 1054, 510, 1055,
	972, 511, 512, 513, 0, 515, 516, 0, 956, 517,
	518, 519, 521, 522, 520, 523, 1016, 524, 0, 0,
	525, 526, 527, 582, 1039, 1075, 0, 529, 528, 585,
	0, 0, 0, 0, 530, 531, 586, 532, 533, 534,
	953, 0, 0, 0, 0, 0, 0, 949, 0, 0,
	0, 0, 0, 0, 947, 948, 994, 966, 967, 968,
	964, 965, 977, 978, 0, 0, 0, 976, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1018, 982, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 1031, 0, 265, 1038, 266, 1037, 0, 1048, 267,
	268, 269, 270, 271, 984, 1017, 951, 272, 1077, 1078,
	543, 0, 273, 274, 1024, 0, 1005, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 1058, 293, 294, 1008, 1006, 1007, 1014, 1010, 1009,
	1013, 295, 296, 297, 298, 1041, 299, 1035, 1034, 955,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 1026, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 961, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 1049, 1050, 973, 246,
	0, 0, 0, 0, 0, 329, 330, 331, 1033, 0,
	0, 0, 332, 0, 333, 0, 0, 1059, 334, 335,
	1046, 1047, 336, 337, 0, 338, 1056, 0, 983, 339,
	0, 340, 341, 342, 343, 344, 1019, 1020, 1023, 402,
	1061, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 247, 351, 352, 354, 0, 1060, 353, 1028, 1029,
	0, 989, 0, 355, 356, 1062, 1021, 1063, 357, 358,
	359, 1064, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 1057, 1065,
	371, 372, 1066, 0, 373, 374, 375, 1012, 1011, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 1067, 392, 393,
	394, 398, 397, 399, 396, 1068, 395, 952, 248, 1069,
	400, 974, 1022, 401, 1036, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 1070, 412, 1071, 1051, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 1052, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 1032, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 1072, 452, 453, 454, 455, 962, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 1015, 477, 461,
	462, 478, 479, 1073, 480, 481, 482, 483, 484, 485,
	1030, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 1076, 492, 493, 494, 495, 1053, 0, 498, 499,
	950, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 1042, 1043, 1044, 1045, 0, 514, 0,
	508, 509, 1054, 510, 1055, 972, 511, 512, 513, 0,
	515, 516, 0, 956, 517, 518, 519, 521, 522, 520,
	523, 1016, 524, 0, 0, 525, 526, 527, 582, 1039,
	1075, 0, 529, 528, 585, 0, 0, 0, 0, 530,
	531, 586, 532, 533, 534, 953, 0, 0, 0, 0,
	0, 0, 949, 0, 0, 0, 0, 0, 0, 2178,
	2179, 994, 966, 967, 968, 964, 965, 977, 978, 0,
	0, 0, 976, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 1018, 982, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 1031, 0, 265, 1038,
	266, 1037, 0, 1048, 267, 268, 269, 270, 271, 984,
	1017, 0, 272, 1077, 1078, 543, 0, 273, 274, 1024,
	0, 1005, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 1058, 293, 294, 1008,
	1006, 1007, 1014, 1010, 1009, 1013, 295, 296, 297, 298,
	1041, 299, 1035, 1034, 0, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 1026, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	961, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 1049, 1050, 973, 246, 0, 0, 0, 0, 0,
	329, 330, 331, 1033, 0, 0, 0, 332, 0, 333,
	0, 0, 1059, 334, 335, 1046, 1047, 336, 337, 0,
	338, 1056, 0, 983, 339, 0, 340, 341, 342, 343,
	344, 1019, 1020, 1023, 402, 1061, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 247, 351, 352, 354,
	0, 1060, 353, 1028, 1029, 0, 989, 0, 355, 356,
	1062, 1021, 1063, 357, 358, 359, 1064, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 1057, 1065, 371, 372, 1066, 0, 373,
	374, 375, 1012, 1011, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 1067, 392, 393, 394, 398, 397, 399, 396,
	1068, 395, 0, 248, 1069, 400, 974, 1022, 401, 1036,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 1070, 412, 1071, 1051,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 1052, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 1032, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 1072, 452, 453, 454,
	455, 962, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 1015, 477, 461, 462, 478, 479, 1073, 480,
	481, 482, 483, 484, 485, 1030, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 1076, 492, 493, 494,
	495, 1053, 0, 498, 499, 0, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 1042, 1043,
	1044, 1045, 0, 514, 0, 508, 509, 1054, 510, 1055,
	972, 511, 512, 513, 0, 515, 516, 0, 0, 517,
	518, 519, 521, 522, 520, 523, 1016, 524, 0, 0,
	525, 526, 527, 582, 1039, 1075, 0, 529, 528, 585,
	0, 0, 0, 0, 530, 531, 586, 532, 533, 534,
	994, 966, 967, 968, 964, 965, 977, 2374, 0, 0,
	0, 0, 0, 0, 2372, 2373, 0, 249, 250, 251,
	252, 253, 254, 978, 255, 256, 0, 976, 0, 0,
	0, 1018, 982, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 1031, 0, 265, 1038, 266,
	1037, 0, 1048, 267, 268, 269, 270, 271, 984, 1017,
	0, 272, 1077, 1078, 543, 0, 273, 274, 1024, 0,
	1005, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 0, 292, 1058, 293, 294, 1008, 1006,
	1007, 1014, 1010, 1009, 1013, 295, 296, 297, 298, 1041,
	299, 1035, 1034, 0, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 1026, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 961,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	1049, 1050, 973, 246, 0, 0, 0, 0, 0, 329,
	330, 331, 1033, 0, 0, 0, 332, 0, 333, 0,
	0, 1059, 334, 335, 1046, 1047, 336, 337, 0, 338,
	1056, 0, 983, 339, 0, 340, 341, 342, 343, 344,
	1019, 1020, 1023, 402, 1061, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 247, 351, 352, 354, 0,
	1060, 353, 1028, 1029, 0, 989, 0, 355, 356, 1062,
	1021, 1063, 357, 358, 359, 1064, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 0, 367, 369, 368,
	0, 370, 1057, 1065, 371, 372, 1066, 0, 373, 374,
	375, 1012, 1011, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 1067, 392, 393, 394, 398, 397, 399, 396, 1068,
	395, 0, 248, 1069, 400, 974, 1022, 401, 1036, 403,
	404, 0, 0, 405, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 411, 565, 1070, 412, 1071, 1051, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 1052, 425, 570, 426, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	1032, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 1072, 452, 453, 454, 455,
	2766, 2767, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 1015, 477, 461, 462, 478, 479, 1073, 480, 481,
	482, 483, 484, 485, 1030, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 1076, 492, 493, 494, 495,
	1053, 0, 498, 499, 0, 497, 0, 500, 501, 502,
	503, 504, 505, 323, 506, 0, 507, 1042, 1043, 1044,
	1045, 0, 514, 0, 508, 509, 1054, 510, 1055, 972,
	511, 512, 513, 0, 515, 516, 0, 0, 517, 518,
	519, 521, 522, 520, 523, 1016, 524, 0, 0, 525,
	526, 527, 582, 1039, 1075, 0, 529, 528, 585, 0,
	0, 0, 0, 530, 531, 586, 532, 533, 534, 994,
	966, 967, 968, 964, 965, 977, 0, 0, 0, 0,
	0, 0, 0, 1889, 1890, 0, 249, 250, 251, 252,
	253, 254, 978, 255, 256, 0, 976, 0, 0, 0,
	1018, 982, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 0, 1031, 0, 265, 1038, 266, 1037,
	0, 1048, 267, 268, 269, 270, 271, 984, 1017, 951,
	272, 1077, 1078, 543, 0, 273, 274, 1024, 0, 1005,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 0, 292, 1058, 293, 4083, 1008, 1006, 1007,
	1014, 1010, 1009, 1013, 295, 296, 297, 298, 1041, 299,
	1035, 1034, 955, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 0, 0, 308, 1026, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 316, 317, 961, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 1049,
	1050, 973, 246, 0, 0, 0, 0, 0, 329, 330,
	331, 1033, 0, 0, 0, 332, 0, 333, 0, 0,
	1059, 334, 335, 1046, 1047, 336, 337, 0, 338, 1056,
	0, 983, 339, 0, 340, 341, 342, 343, 344, 1019,
	1020, 1023, 402, 0, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 247, 351, 352, 354, 0, 1060,
	353, 1028, 1029, 0, 989, 0, 355, 356, 0, 1021,
	0, 357, 358, 359, 1064, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 0, 367, 369, 368, 0,
	370, 1057, 1065, 371, 372, 0, 0, 373, 374, 375,
	1012, 1011, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	1067, 392, 393, 394, 398, 397, 399, 396, 1068, 395,
	952, 248, 0, 400, 974, 1022, 401, 1036, 403, 404,
	0, 0, 405, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 411, 565, 1070, 412, 1071, 1051, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 1052, 425, 570, 426, 427, 0,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 1032,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 1072, 452, 453, 454, 455, 962,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 0, 472, 473, 471, 474, 475, 476,
	1015, 477, 461, 462, 478, 479, 0, 480, 481, 482,
	483, 484, 485, 1030, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 1076, 492, 493, 494, 495, 1053,
	0, 498, 499, 950, 497, 0, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 1042, 1043, 1044, 1045,
	0, 514, 0, 508, 509, 1054, 510, 1055, 972, 511,
	512, 513, 0, 4082, 516, 0, 956, 517, 518, 519,
	521, 522, 520, 523, 1016, 524, 0, 0, 525, 526,
	527, 582, 1039, 1075, 0, 529, 528, 585, 0, 0,
	0, 0, 530, 531, 586, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 940, 0, 1115,
	0, 0, 947, 948, 0, 0, 0, 0, 0, 0,
	0, 978, 0, 0, 0, 976, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1018, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 537, 0, 265, 538, 266, 539,
	0, 540, 267, 268, 269, 270, 271, 0, 1017, 0,
	272, 541, 542, 543, 0, 273, 274, 1024, 0, 1005,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 0, 292, 1058, 293, 294, 1008, 1006, 1007,
	1014, 1010, 1009, 1013, 295, 296, 297, 298, 0, 299,
	545, 546, 0, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 0, 0, 308, 309, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 316, 317, 547, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 1049,
	1050, 0, 246, 0, 0, 0, 0, 0, 329, 330,
	331, 550, 0, 0, 0, 332, 0, 333, 0, 0,
	1059, 334, 335, 551, 552, 336, 337, 0, 338, 1056,
	0, 554, 339, 0, 340, 341, 342, 343, 344, 1019,
	1020, 1023, 402, 1061, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 247, 351, 352, 354, 0, 1060,
	353, 558, 559, 0, 560, 0, 355, 356, 1062, 1021,
	1063, 357, 358, 359, 1064, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 1101, 367, 369, 368, 0,
	370, 1057, 1065, 371, 372, 1066, 0, 373, 374, 375,
	1012, 1011, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	1067, 392, 393, 394, 398, 397, 399, 396, 1068, 395,
	0, 248, 1069, 400, 0, 1022, 401, 564, 403, 404,
	0, 0, 405, 0, 0, 1107, 407, 408, 409, 0,
	0, 410, 411, 565, 1070, 412, 1071, 1051, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 1052, 425, 570, 426, 427, 0,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 571,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 1072, 452, 453, 454, 455, 572,
	1109, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 210, 472, 473, 471, 474, 475, 476,
	1015, 477, 461, 462, 478, 479, 1073, 480, 481, 482,
	483, 484, 485, 573, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 574, 492, 493, 494, 495, 1053,
	0, 498, 499, 0, 497, 212, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 576, 577, 578, 579,
	0, 514, 0, 508, 509, 1054, 510, 1055, 0, 511,
	512, 513, 0, 515, 516, 0, 0, 517, 518, 519,
	521, 522, 520, 523, 1016, 524, 0, 0, 525, 526,
	527, 1451, 583, 584, 0, 529, 528, 585, 0, 1115,
	0, 204, 530, 531, 586, 532, 533, 534, 0, 205,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 1105,
	1018, 1778, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 537, 0, 265, 538, 266, 539,
	0, 540, 267, 268, 269, 270, 271, 0, 1017, 0,
	272, 541, 542, 543, 0, 273, 274, 1024, 0, 1005,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 0, 292, 1058, 293, 294, 1008, 1006, 1007,
	1014, 1010, 1009, 1013, 295, 296, 297, 298, 0, 299,
	545, 546, 0, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 0, 0, 308, 309, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 316, 317, 547, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 1049,
	1050, 0, 246, 0, 0, 0, 0, 0, 329, 330,
	331, 550, 0, 0, 0, 332, 0, 333, 0, 0,
	1059, 334, 335, 551, 552, 336, 337, 0, 338, 1056,
	0, 554, 339, 0, 340, 341, 342, 343, 344, 1019,
	1020, 1023, 402, 1061, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 247, 351, 352, 354, 0, 1060,
	353, 558, 559, 0, 560, 0, 355, 356, 1062, 1021,
	1063, 357, 358, 359, 1064, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 1101, 367, 369, 368, 0,
	370, 1057, 1065, 371, 372, 1066, 0, 373, 374, 375,
	1012, 1011, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	1067, 392, 393, 394, 398, 397, 399, 396, 1068, 395,
	0, 248, 1069, 400, 0, 1022, 401, 564, 403, 404,
	0, 0, 405, 0, 0, 1107, 407, 408, 409, 0,
	0, 410, 411, 565, 1070, 412, 1071, 1051, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 1052, 425, 570, 426, 427, 0,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 571,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 1072, 452, 453, 454, 455, 572,
	1109, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 210, 472, 473, 471, 474, 475, 476,
	1015, 477, 461, 462, 478, 479, 1073, 480, 481, 482,
	483, 484, 485, 573, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 574, 492, 493, 494, 495, 1053,
	0, 498, 499, 0, 497, 212, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 576, 577, 578, 579,
	0, 514, 0, 508, 509, 1054, 510, 1055, 0, 511,
	512, 513, 0, 515, 516, 0, 0, 517, 518, 519,
	521, 522, 520, 523, 1016, 524, 0, 0, 525, 526,
	527, 1451, 583, 584, 0, 529, 528, 585, 0, 0,
	0, 204, 530, 531, 586, 532, 533, 534, 0, 205,
	0, 0, 0, 2926, 0, 1115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1105,
	0, 1778, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1018, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 536,
	537, 0, 265, 538, 266, 539, 0, 540, 267, 268,
	269, 270, 271, 0, 1017, 0, 272, 541, 542, 543,
	0, 273, 274, 1024, 0, 1005, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 0, 292,
	1058, 293, 294, 1008, 1006, 1007, 1014, 1010, 1009, 1013,
	295, 296, 297, 298, 0, 299, 545, 546, 0, 303,
	300, 301, 0, 304, 302, 0, 305, 306, 307, 0,
	0, 308, 309, 310, 0, 311, 312, 0, 313, 314,
	315, 0, 316, 317, 547, 318, 319, 320, 322, 324,
	321, 325, 326, 327, 328, 1049, 1050, 0, 246, 0,
	0, 0, 0, 0, 329, 330, 331, 550, 0, 0,
	0, 332, 0, 333, 0, 0, 1059, 334, 335, 551,
	552, 336, 337, 0, 338, 1056, 0, 554, 339, 0,
	340, 341, 342, 343, 344, 1019, 1020, 1023, 402, 1061,
	345, 346, 0, 347, 348, 349, 350, 0, 0, 0,
	247, 351, 352, 354, 0, 1060, 353, 558, 559, 0,
	560, 0, 355, 356, 1062, 1021, 1063, 357, 358, 359,
	1064, 360, 0, 0, 0, 361, 362, 363, 364, 365,
	366, 1101, 367, 369, 368, 0, 370, 1057, 1065, 371,
	372, 1066, 0, 373, 374, 375, 1012, 1011, 376, 377,
	378, 379, 0, 380, 381, 383, 385, 382, 384, 389,
	386, 387, 388, 391, 0, 390, 1067, 392, 393, 394,
	398, 397, 399, 396, 1068, 395, 0, 248, 1069, 400,
	0, 1022, 401, 564, 403, 404, 0, 0, 405, 0,
	0, 1107, 407, 408, 409, 0, 0, 410, 411, 565,
	1070, 412, 1071, 1051, 413, 414, 406, 415, 416, 417,
	418, 419, 420, 421, 422, 0, 423, 424, 567, 568,
	1052, 425, 570, 426, 427, 0, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 571, 437, 436, 438, 0,
	439, 0, 0, 0, 0, 0, 440, 0, 442, 443,
	444, 441, 445, 446, 447, 448, 0, 449, 450, 451,
	1072, 452, 453, 454, 455, 572, 1109, 0, 457, 458,
	464, 465, 459, 460, 466, 467, 468, 469, 470, 0,
	472, 473, 471, 474, 475, 476, 1015, 477, 461, 462,
	478, 479, 1073, 480, 481, 482, 483, 484, 485, 573,
	0, 486, 0, 487, 488, 489, 490, 463, 491, 496,
	574, 492, 493, 494, 495, 1053, 0, 498, 499, 0,
	497, 0, 500, 501, 502, 503, 504, 505, 323, 506,
	0, 507, 576, 577, 578, 579, 0, 514, 0, 508,
	509, 1054, 510, 1055, 0, 511, 512, 513, 0, 515,
	516, 0, 0, 517, 518, 519, 521, 522, 520, 523,
	1016, 524, 0, 0, 525, 526, 527, 582, 583, 584,
	0, 529, 528, 585, 0, 1097, 0, 1115, 530, 531,
	586, 532, 533, 534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 1105, 0, 1103, 1018, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 536, 537, 0, 265, 538, 266, 539, 0, 540,
	267, 268, 269, 270, 271, 0, 1017, 0, 272, 541,
	542, 543, 0, 273, 274, 1024, 0, 1005, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	0, 292, 1058, 293, 294, 1008, 1006, 1007, 1014, 1010,
	1009, 1013, 295, 296, 297, 298, 0, 299, 545, 546,
	0, 303, 300, 301, 0, 304, 302, 0, 305, 306,
	307, 0, 0, 308, 309, 310, 0, 311, 312, 0,
	313, 314, 315, 0, 316, 317, 547, 318, 319, 320,
	322, 324, 321, 325, 326, 327, 328, 1049, 1050, 0,
	246, 0, 0, 0, 0, 0, 329, 330, 331, 550,
	0, 0, 0, 332, 0, 333, 0, 0, 1059, 334,
	335, 551, 552, 336, 337, 0, 338, 1056, 0, 554,
	339, 0, 340, 341, 342, 343, 344, 1019, 1020, 1023,
	402, 1061, 345, 346, 0, 347, 348, 349, 350, 0,
	0, 0, 247, 351, 352, 354, 0, 1060, 353, 558,
	559, 0, 560, 0, 355, 356, 1062, 1021, 1063, 357,
	358, 359, 1064, 360, 0, 0, 0, 361, 362, 363,
	364, 365, 366, 1101, 367, 369, 368, 0, 370, 1057,
	1065, 371, 372, 1066, 0, 373, 374, 375, 1012, 1011,
	376, 377, 378, 379, 0, 380, 381, 383, 385, 382,
	384, 389, 386, 387, 388, 391, 0, 390, 1067, 392,
	393, 394, 398, 397, 399, 396, 1068, 395, 0, 248,
	1069, 400, 0, 1022, 401, 564, 403, 404, 0, 0,
	405, 0, 0, 1107, 407, 408, 409, 0, 0, 410,
	411, 565, 1070, 412, 1071, 1051, 413, 414, 406, 415,
	416, 417, 418, 419, 420, 421, 422, 0, 423, 424,
	567, 568, 1052, 425, 570, 426, 427, 0, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 571, 437, 436,
	438, 0, 439, 0, 0, 0, 0, 0, 440, 0,
	442, 443, 444, 441, 445, 446, 447, 448, 0, 449,
	450, 451, 1072, 452, 453, 454, 455, 572, 1109, 0,
	457, 458, 464, 465, 459, 460, 466, 467, 468, 469,
	470, 0, 472, 473, 471, 474, 475, 476, 1015, 477,
	461, 462, 478, 479, 1073, 480, 481, 482, 483, 484,
	485, 573, 0, 486, 0, 487, 488, 489, 490, 463,
	491, 496, 574, 492, 493, 494, 495, 1053, 0, 498,
	499, 0, 497, 0, 500, 501, 502, 503, 504, 505,
	323, 506, 0, 507, 576, 577, 578, 579, 0, 514,
	0, 508, 509, 1054, 510, 1055, 0, 511, 512, 513,
	0, 515, 516, 0, 0, 517, 518, 519, 521, 522,
	520, 523, 1016, 524, 0, 0, 525, 526, 527, 582,
	583, 584, 0, 529, 528, 585, 0, 1115, 0, 0,
	530, 531, 586, 532, 533, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 1105, 1018, 1103,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 536, 537, 0, 265, 538, 266, 539, 0, 540,
	267, 268, 269, 270, 271, 0, 1017, 0, 272, 541,
	542, 543, 0, 273, 274, 1024, 0, 1005, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	0, 292, 1058, 293, 294, 1008, 1006, 1007, 1014, 1010,
	1009, 1013, 295, 296, 297, 298, 0, 299, 545, 546,
	0, 303, 300, 301, 0, 304, 302, 0, 305, 306,
	307, 0, 0, 308, 309, 310, 0, 311, 312, 0,
	313, 314, 315, 0, 316, 317, 547, 318, 319, 320,
	322, 324, 321, 325, 326, 327, 328, 1049, 1050, 0,
	246, 0, 0, 0, 0, 0, 329, 330, 331, 550,
	0, 0, 0, 332, 0, 333, 0, 0, 1059, 334,
	335, 551, 552, 336, 337, 0, 338, 1056, 0, 554,
	339, 0, 340, 341, 342, 343, 344, 1019, 1020, 1023,
	402, 1061, 345, 346, 0, 347, 348, 349, 350, 0,
	0, 0, 247, 351, 352, 354, 0, 1060, 353, 558,
	559, 0, 560, 0, 355, 356, 1062, 1021, 1063, 357,
	358, 359, 1064, 360, 0, 0, 0, 361, 362, 363,
	364, 365, 366, 1101, 367, 369, 368, 0, 370, 1057,
	1065, 371, 372, 1066, 0, 373, 374, 375, 1012, 1011,
	376, 377, 378, 379, 0, 380, 381, 383, 385, 382,
	384, 389, 386, 387, 388, 391, 0, 390, 1067, 392,
	393, 394, 398, 397, 399, 396, 1068, 395, 0, 248,
	1069, 400, 0, 1022, 401, 564, 403, 404, 0, 0,
	405, 0, 0, 1107, 407, 408, 409, 0, 0, 410,
	411, 565, 1070, 412, 1071, 1051, 413, 414, 406, 415,
	416, 417, 418, 419, 420, 421, 422, 0, 423, 424,
	567, 568, 1052, 425, 570, 426, 427, 0, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 571, 437, 436,
	438, 0, 439, 0, 0, 0, 0, 0, 440, 0,
	442, 443, 444, 441, 445, 446, 447, 448, 0, 449,
	450, 451, 1072, 452, 453, 454, 455, 572, 1109, 0,
	457, 458, 464, 465, 459, 460, 466, 467, 468, 469,
	470, 0, 472, 473, 471, 474, 475, 476, 1015, 477,
	461, 462, 478, 479, 1073, 480, 481, 482, 483, 484,
	485, 573, 0, 486, 0, 487, 488, 489, 490, 463,
	491, 496, 574, 492, 493, 494, 495, 1053, 0, 498,
	499, 0, 497, 0, 500, 501, 502, 503, 504, 505,
	323, 506, 0, 507, 576, 577, 578, 579, 0, 514,
	0, 508, 509, 1054, 510, 1055, 0, 511, 512, 513,
	0, 515, 516, 0, 0, 517, 518, 519, 521, 522,
	520, 523, 1016, 524, 0, 0, 525, 526, 527, 582,
	583, 584, 0, 529, 528, 585, 0, 1115, 0, 0,
	530, 531, 586, 532, 533, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 1105, 1018, 1103,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 536, 537, 0, 265, 538, 266, 539, 0, 540,
	267, 268, 269, 270, 271, 0, 1017, 0, 272, 541,
	542, 543, 0, 273, 274, 1024, 0, 1005, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	0, 292, 1058, 293, 294, 1008, 1006, 1007, 1014, 1010,
	1009, 1013, 295, 296, 297, 298, 0, 299, 545, 546,
	0, 303, 300, 301, 0, 304, 302, 0, 305, 306,
	307, 0, 0, 308, 309, 310, 0, 311, 312, 0,
	313, 314, 315, 0, 316, 317, 547, 318, 319, 320,
	322, 324, 321, 325, 326, 327, 328, 1049, 1050, 0,
	246, 0, 0, 0, 0, 0, 329, 330, 331, 550,
	0, 0, 0, 332, 0, 333, 0, 0, 1059, 334,
	335, 551, 552, 336, 337, 0, 338, 1056, 0, 554,
	339, 0, 340, 341, 342, 343, 344, 1019, 1020, 1023,
	402, 1061, 345, 346, 0, 347, 348, 349, 350, 0,
	0, 0, 247, 351, 352, 354, 0, 1060, 353, 558,
	559, 0, 560, 0, 355, 356, 1062, 1021, 1063, 357,
	358, 359, 1064, 360, 0, 0, 0, 361, 362, 363,
	364, 365, 366, 0, 367, 369, 368, 0, 370, 1057,
	1065, 371, 372, 1066, 0, 373, 374, 375, 1012, 1011,
	376, 377, 378, 379, 0, 380, 381, 383, 385, 382,
	384, 389, 386, 387, 388, 391, 0, 390, 1067, 392,
	393, 394, 398, 397, 399, 396, 1068, 395, 0, 248,
	1069, 400, 0, 1022, 401, 564, 403, 404, 0, 0,
	405, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	411, 565, 1070, 412, 1071, 1051, 413, 414, 406, 415,
	416, 417, 418, 419, 420, 421, 422, 0, 423, 424,
	567, 568, 1052, 425, 570, 426, 427, 0, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 571, 437, 436,
	438, 0, 439, 0, 0, 0, 0, 0, 440, 0,
	442, 443, 444, 441, 445, 446, 447, 448, 0, 449,
	450, 451, 1072, 452, 453, 454, 455, 572, 1109, 0,
	457, 458, 464, 465, 459, 460, 466, 467, 468, 469,
	470, 0, 472, 473, 471, 474, 475, 476, 1015, 477,
	461, 462, 478, 479, 1073, 480, 481, 482, 483, 484,
	485, 573, 0, 486, 0, 487, 488, 489, 490, 463,
	491, 496, 574, 492, 493, 494, 495, 1053, 0, 498,
	499, 0, 497, 0, 500, 501, 502, 503, 504, 505,
	323, 506, 0, 507, 576, 577, 578, 579, 0, 514,
	0, 508, 509, 1054, 510, 1055, 0, 511, 512, 513,
	0, 515, 516, 0, 0, 517, 518, 519, 521, 522,
	520, 523, 1016, 524, 0, 0, 525, 526, 527, 582,
	583, 584, 0, 529, 528, 585, 0, 940, 0, 1300,
	530, 531, 586, 532, 533, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 1677,
	535, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 537, 0, 265, 538, 266, 539,
	0, 540, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 541, 542, 543, 0, 273, 274, 544, 0, 1266,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 0, 292, 1058, 293, 294, 0, 0, 0,
	0, 0, 0, 0, 295, 296, 297, 298, 0, 299,
	545, 546, 0, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 0, 0, 308, 309, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 316, 317, 547, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 548,
	549, 0, 246, 0, 0, 0, 0, 0, 329, 330,
	331, 550, 0, 0, 0, 332, 0, 333, 0, 0,
	1059, 334, 335, 551, 552, 336, 337, 0, 338, 553,
	0, 554, 339, 0, 340, 341, 342, 343, 344, 555,
	556, 557, 402, 1061, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 0, 351, 352, 354, 0, 1060,
	353, 558, 559, 0, 560, 0, 355, 356, 1062, 561,
	1063, 357, 358, 359, 1064, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 0, 367, 369, 368, 0,
	370, 562, 1065, 371, 372, 1066, 0, 373, 374, 375,
	0, 0, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	1067, 392, 393, 394, 398, 397, 399, 396, 1068, 395,
	0, 0, 1069, 400, 0, 563, 401, 564, 403, 404,
	0, 0, 405, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 411, 565, 1070, 412, 1071, 566, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 569, 425, 570, 426, 427, 0,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 571,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 1072, 452, 453, 454, 455, 572,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 210, 472, 473, 471, 474, 475, 476,
	0, 477, 461, 462, 478, 479, 1073, 480, 481, 482,
	483, 484, 485, 573, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 574, 492, 493, 494, 495, 575,
	0, 498, 499, 0, 497, 212, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 576, 577, 578, 579,
	0, 514, 0, 508, 509, 580, 510, 581, 0, 511,
	512, 513, 0, 515, 516, 0, 0, 517, 518, 519,
	521, 522, 520, 523, 0, 524, 0, 0, 525, 526,
	527, 1451, 583, 584, 0, 529, 528, 585, 0, 0,
	0, 204, 530, 531, 586, 532, 533, 534, 0, 205,
	0, 0, 0, 1448, 0, 1300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 174, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 535, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 536,
	537, 0, 265, 538, 266, 539, 0, 540, 267, 268,
	269, 270, 271, 0, 0, 0, 272, 541, 542, 543,
	0, 273, 274, 544, 0, 1266, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 0, 292,
	1058, 293, 294, 0, 0, 0, 0, 0, 0, 0,
	295, 296, 297, 298, 0, 299, 545, 546, 0, 303,
	300, 301, 0, 304, 302, 0, 305, 306, 307, 0,
	0, 308, 309, 310, 0, 311, 312, 0, 313, 314,
	315, 0, 316, 317, 547, 318, 319, 320, 322, 324,
	321, 325, 326, 327, 328, 548, 549, 0, 246, 0,
	0, 0, 0, 0, 329, 330, 331, 550, 0, 0,
	0, 332, 0, 333, 0, 0, 1059, 334, 335, 551,
	552, 336, 337, 0, 338, 553, 0, 554, 339, 0,
	340, 341, 342, 343, 344, 555, 556, 557, 402, 1061,
	345, 346, 0, 347, 348, 349, 350, 0, 0, 0,
	0, 351, 352, 354, 0, 1060, 353, 558, 559, 0,
	560, 0, 355, 356, 1062, 561, 1063, 357, 358, 359,
	1064, 360, 0, 0, 0, 361, 362, 363, 364, 365,
	366, 0, 367, 369, 368, 0, 370, 562, 1065, 371,
	372, 1066, 0, 373, 374, 375, 0, 0, 376, 377,
	378, 379, 0, 380, 381, 383, 385, 382, 384, 389,
	386, 387, 388, 391, 0, 390, 1067, 392, 393, 394,
	398, 397, 399, 396, 1068, 395, 0, 0, 1069, 400,
	0, 563, 401, 564, 403, 404, 0, 0, 405, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 411, 565,
	1070, 412, 1071, 566, 413, 414, 406, 415, 416, 417,
	418, 419, 420, 421, 422, 0, 423, 424, 567, 568,
	569, 425, 570, 426, 427, 0, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 571, 437, 436, 438, 0,
	439, 0, 0, 0, 0, 0, 440, 0, 442, 443,
	444, 441, 445, 446, 447, 448, 0, 449, 450, 451,
	1072, 452, 453, 454, 455, 572, 456, 0, 457, 458,
	464, 465, 459, 460, 466, 467, 468, 469, 470, 210,
	472, 473, 471, 474, 475, 476, 0, 477, 461, 462,
	478, 479, 1073, 480, 481, 482, 483, 484, 485, 573,
	0, 486, 0, 487, 488, 489, 490, 463, 491, 496,
	574, 492, 493, 494, 495, 575, 0, 498, 499, 0,
	497, 212, 500, 501, 502, 503, 504, 505, 323, 506,
	0, 507, 576, 577, 578, 579, 0, 514, 0, 508,
	509, 580, 510, 581, 0, 511, 512, 513, 0, 515,
	516, 0, 0, 517, 518, 519, 521, 522, 520, 523,
	0, 524, 0, 0, 525, 526, 527, 1451, 583, 584,
	0, 529, 528, 585, 0, 0, 0, 204, 530, 531,
	586, 532, 533, 534, 0, 205, 0, 0, 0, 0,
	0, 1300, 1299, 0, 0, 0, 0, 1297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 174, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 537, 0, 265, 538,
	266, 539, 0, 540, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 541, 542, 543, 0, 273, 274, 544,
	0, 1266, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 1058, 293, 294, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 297, 298,
	0, 299, 545, 546, 0, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 309, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	547, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 548, 549, 0, 246, 0, 0, 0, 0, 0,
	329, 330, 331, 550, 0, 0, 0, 332, 0, 333,
	0, 0, 1059, 334, 335, 551, 552, 336, 337, 0,
	338, 553, 0, 554, 339, 0, 340, 341, 342, 343,
	344, 555, 556, 557, 402, 1061, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 0, 351, 352, 354,
	0, 1060, 353, 558, 559, 0, 560, 0, 355, 356,
	1062, 561, 1063, 357, 358, 359, 1064, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 562, 1065, 371, 372, 1066, 0, 373,
	374, 375, 0, 0, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 1067, 392, 393, 394, 398, 397, 399, 396,
	1068, 395, 0, 0, 1069, 400, 0, 563, 401, 564,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 1070, 412, 1071, 566,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 569, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 571, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 1072, 452, 453, 454,
	455, 572, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 0, 477, 461, 462, 478, 479, 1073, 480,
	481, 482, 483, 484, 485, 573, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 574, 492, 493, 494,
	495, 575, 0, 498, 499, 0, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 576, 577,
	578, 579, 0, 514, 0, 508, 509, 580, 510, 581,
	0, 511, 512, 513, 0, 515, 516, 0, 0, 517,
	518, 519, 521, 522, 520, 523, 0, 524, 0, 0,
	525, 526, 527, 582, 583, 584, 0, 529, 528, 585,
	0, 0, 0, 0, 530, 531, 586, 532, 533, 534,
	1300, 1299, 0, 0, 0, 0, 1297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 1473, 255, 256, 0, 0, 0, 0,
	0, 535, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 537, 0, 265, 538, 266,
	539, 0, 540, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 541, 542, 543, 0, 273, 274, 544, 0,
	1266, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 0, 292, 1058, 293, 294, 0, 0,
	0, 0, 0, 0, 0, 295, 296, 297, 298, 0,
	299, 545, 546, 0, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 309, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 547,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	548, 549, 0, 246, 0, 0, 0, 0, 0, 329,
	330, 331, 550, 0, 0, 0, 332, 0, 333, 0,
	0, 1059, 334, 335, 551, 552, 336, 337, 0, 338,
	553, 0, 554, 339, 0, 340, 341, 342, 343, 344,
	555, 556, 557, 402, 1061, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 0, 351, 352, 354, 0,
	1060, 353, 558, 559, 0, 560, 0, 355, 356, 1062,
	561, 1063, 357, 358, 359, 1064, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 0, 367, 369, 368,
	0, 370, 562, 1065, 371, 372, 1066, 0, 373, 374,
	375, 0, 0, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 1067, 392, 393, 394, 398, 397, 399, 396, 1068,
	395, 0, 0, 1069, 400, 0, 563, 401, 564, 403,
	404, 0, 0, 405, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 411, 565, 1070, 412, 1071, 566, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 569, 425, 570, 426, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	571, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 1072, 452, 453, 454, 455,
	572, 456, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 0, 477, 461, 462, 478, 479, 1073, 480, 481,
	482, 483, 484, 485, 573, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 574, 492, 493, 494, 495,
	575, 0, 498, 499, 0, 497, 0, 500, 501, 502,
	503, 504, 505, 323, 506, 0, 507, 576, 577, 578,
	579, 0, 514, 0, 508, 509, 580, 510, 581, 0,
	511, 512, 513, 0, 515, 516, 0, 0, 517, 518,
	519, 521, 522, 520, 523, 0, 524, 0, 0, 525,
	526, 527, 582, 583, 584, 0, 529, 528, 585, 0,
	0, 0, 0, 530, 531, 586, 532, 533, 534, 1300,
	1972, 0, 0, 0, 0, 1973, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 3176, 255, 256, 0, 0, 0, 0, 0,
	535, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 537, 0, 265, 538, 266, 539,
	0, 540, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 541, 542, 543, 0, 273, 274, 544, 0, 1266,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 0, 292, 1058, 293, 294, 0, 0, 0,
	0, 0, 0, 0, 295, 296, 297, 298, 0, 299,
	545, 546, 0, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 0, 0, 308, 309, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 316, 317, 547, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 548,
	549, 0, 246, 0, 0, 0, 0, 0, 329, 330,
	331, 550, 0, 0, 0, 332, 0, 333, 0, 0,
	1059, 334, 335, 551, 552, 336, 337, 0, 338, 553,
	0, 554, 339, 0, 340, 341, 342, 343, 344, 555,
	556, 557, 402, 1061, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 0, 351, 352, 354, 0, 1060,
	353, 558, 559, 0, 560, 0, 355, 356, 1062, 561,
	1063, 357, 358, 359, 1064, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 0, 1971, 369, 368, 0,
	370, 562, 1065, 371, 372, 1066, 0, 373, 374, 375,
	0, 0, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	1067, 392, 393, 394, 398, 397, 399, 396, 1068, 395,
	0, 0, 1069, 400, 0, 563, 401, 564, 403, 404,
	0, 0, 405, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 411, 565, 1070, 412, 1071, 566, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 569, 425, 570, 426, 427, 0,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 571,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 1072, 452, 453, 454, 455, 572,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 0, 472, 473, 471, 474, 475, 476,
	0, 477, 461, 462, 478, 479, 1073, 480, 481, 482,
	483, 484, 485, 573, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 574, 492, 493, 494, 495, 575,
	0, 498, 499, 0, 497, 0, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 576, 577, 578, 579,
	0, 514, 0, 508, 509, 580, 510, 581, 0, 511,
	512, 513, 0, 515, 516, 0, 0, 517, 518, 519,
	521, 522, 520, 523, 0, 524, 0, 0, 525, 526,
	527, 582, 583, 584, 0, 529, 528, 585, 0, 0,
	0, 0, 530, 531, 586, 532, 533, 534, 1300, 1299,
	0, 0, 0, 0, 1297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 1473, 255, 256, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 274, 544, 0, 1266, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 1058, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 297, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 246, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 1059,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 555, 556,
	557, 402, 1061, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 0, 351, 352, 354, 0, 1060, 353,
	558, 559, 0, 560, 0, 355, 356, 1062, 561, 1063,
	357, 358, 359, 1064, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 1065, 371, 372, 1066, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 1067,
	392, 393, 394, 398, 397, 399, 396, 1068, 395, 0,
	0, 1069, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 1070, 412, 1071, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 1072, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 1073, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	582, 583, 584, 0, 529, 528, 585, 1115, 0, 0,
	0, 530, 531, 586, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 1018, 0,
	1457, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 536, 537, 0, 265, 538, 266, 539, 0, 540,
	267, 268, 269, 270, 271, 0, 1017, 0, 272, 541,
	542, 543, 0, 273, 274, 1024, 0, 1005, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	0, 292, 1058, 293, 294, 1008, 1006, 1007, 1014, 1010,
	1009, 1013, 295, 296, 297, 298, 0, 299, 545, 546,
	0, 303, 300, 301, 0, 304, 302, 0, 305, 306,
	307, 0, 0, 308, 309, 310, 0, 311, 312, 0,
	313, 314, 315, 0, 316, 317, 547, 318, 319, 320,
	322, 324, 321, 325, 326, 327, 328, 1049, 1050, 0,
	246, 0, 0, 0, 0, 0, 329, 330, 331, 550,
	0, 0, 0, 332, 0, 333, 0, 0, 1059, 334,
	335, 551, 552, 336, 337, 0, 338, 1056, 0, 554,
	339, 0, 340, 341, 342, 343, 344, 1019, 1020, 1023,
	402, 1061, 345, 346, 0, 347, 348, 349, 350, 0,
	0, 0, 247, 351, 352, 354, 0, 1060, 353, 558,
	559, 0, 560, 0, 355, 356, 1062, 1021, 1063, 357,
	358, 359, 1064, 360, 0, 0, 0, 361, 362, 363,
	364, 365, 366, 0, 367, 369, 368, 0, 370, 1057,
	1065, 371, 372, 1066, 0, 373, 374, 375, 1012, 1011,
	376, 377, 378, 379, 0, 380, 381, 383, 385, 382,
	384, 389, 386, 387, 388, 391, 0, 390, 1067, 392,
	393, 394, 398, 397, 399, 396, 1068, 395, 0, 248,
	1069, 400, 0, 1022, 401, 564, 403, 404, 0, 0,
	405, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	411, 565, 1070, 412, 1071, 1051, 413, 414, 406, 415,
	416, 417, 418, 419, 420, 421, 422, 0, 423, 424,
	567, 568, 1052, 425, 570, 426, 427, 0, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 571, 437, 436,
	438, 0, 439, 0, 0, 0, 0, 0, 440, 0,
	442, 443, 444, 441, 445, 446, 447, 448, 0, 449,
	450, 451, 1072, 452, 453, 454, 455, 572, 456, 0,
	457, 458, 464, 465, 459, 460, 466, 467, 468, 469,
	470, 0, 472, 473, 471, 474, 475, 476, 1015, 477,
	461, 462, 478, 479, 1073, 480, 481, 482, 483, 484,
	485, 573, 0, 486, 0, 487, 488, 489, 490, 463,
	491, 496, 574, 492, 493, 494, 495, 1053, 0, 498,
	499, 0, 497, 0, 500, 501, 502, 503, 504, 505,
	323, 506, 0, 507, 576, 577, 578, 579, 0, 514,
	0, 508, 509, 1054, 510, 1055, 0, 511, 512, 513,
	0, 515, 516, 0, 0, 517, 518, 519, 521, 522,
	520, 523, 1016, 524, 0, 0, 525, 526, 527, 582,
	583, 584, 0, 529, 528, 585, 940, 0, 243, 0,
	530, 531, 586, 532, 533, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 274, 544, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 0, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 297, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 0,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 555, 556,
	557, 402, 0, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 0, 351, 352, 354, 0, 0, 353,
	558, 559, 0, 560, 0, 355, 356, 0, 561, 0,
	357, 358, 359, 0, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 0, 371, 372, 0, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 0,
	392, 393, 394, 398, 397, 399, 396, 0, 395, 0,
	0, 0, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 0, 412, 0, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 0, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 210, 472, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 0, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 212, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	1451, 583, 584, 0, 529, 528, 585, 243, 0, 0,
	204, 530, 531, 586, 532, 533, 534, 0, 205, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 535, 0,
	174, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 536, 537, 0, 265, 538, 266, 539, 0, 540,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 541,
	542, 543, 0, 273, 274, 544, 0, 0, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	0, 292, 0, 293, 294, 0, 0, 0, 0, 0,
	0, 0, 295, 296, 297, 298, 0, 299, 545, 546,
	0, 303, 300, 301, 0, 304, 302, 0, 305, 306,
	307, 0, 0, 308, 309, 310, 0, 311, 312, 0,
	313, 314, 315, 0, 316, 317, 547, 318, 319, 320,
	322, 324, 321, 325, 326, 327, 328, 548, 549, 0,
	246, 0, 0, 0, 0, 0, 329, 330, 331, 550,
	0, 0, 0, 332, 0, 333, 0, 0, 0, 334,
	335, 551, 552, 336, 337, 0, 338, 553, 0, 554,
	339, 0, 340, 341, 342, 343, 344, 555, 556, 557,
	402, 0, 345, 346, 0, 347, 348, 349, 350, 0,
	0, 0, 247, 351, 352, 354, 0, 0, 353, 558,
	559, 0, 560, 0, 355, 356, 0, 561, 0, 357,
	358, 359, 0, 360, 0, 0, 0, 361, 362, 363,
	364, 365, 366, 0, 367, 369, 368, 0, 370, 562,
	0, 371, 372, 0, 0, 373, 374, 375, 0, 0,
	376, 377, 378, 379, 0, 380, 381, 383, 385, 382,
	384, 389, 386, 387, 388, 391, 0, 390, 0, 392,
	393, 394, 398, 397, 399, 396, 0, 395, 0, 248,
	0, 400, 0, 563, 401, 564, 403, 404, 0, 0,
	405, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	411, 565, 0, 412, 0, 566, 413, 414, 406, 415,
	416, 417, 418, 419, 420, 421, 422, 0, 423, 424,
	567, 568, 569, 425, 570, 426, 427, 0, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 571, 437, 436,
	438, 0, 439, 0, 0, 0, 0, 0, 440, 0,
	442, 443, 444, 441, 445, 446, 447, 448, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 572, 456, 0,
	457, 458, 464, 465, 459, 460, 466, 467, 468, 469,
	470, 0, 472, 473, 471, 474, 475, 476, 0, 477,
	461, 462, 478, 479, 0, 480, 481, 482, 483, 484,
	485, 573, 0, 486, 0, 487, 488, 489, 490, 463,
	491, 496, 574, 492, 493, 494, 495, 575, 0, 498,
	499, 0, 497, 0, 500, 501, 502, 503, 504, 505,
	323, 506, 0, 507, 576, 577, 578, 579, 0, 514,
	0, 508, 509, 580, 510, 581, 0, 511, 512, 513,
	0, 515, 516, 0, 0, 517, 518, 519, 521, 522,
	520, 523, 0, 524, 0, 0, 525, 526, 527, 582,
	583, 584, 0, 529, 528, 585, 0, 1391, 0, 243,
	530, 531, 586, 532, 533, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 1792,
	535, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 537, 0, 265, 538, 266, 539,
	0, 540, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 541, 542, 543, 0, 273, 274, 544, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 0, 292, 0, 293, 294, 0, 0, 0,
	0, 0, 0, 0, 295, 296, 297, 298, 0, 299,
	545, 546, 0, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 0, 0, 308, 309, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 316, 317, 547, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 548,
	549, 0, 246, 0, 0, 0, 0, 0, 329, 330,
	331, 550, 0, 0, 0, 332, 0, 333, 0, 0,
	0, 334, 335, 551, 552, 336, 337, 0, 338, 553,
	0, 554, 339, 0, 340, 341, 342, 343, 344, 555,
	556, 557, 402, 0, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 247, 351, 352, 354, 0, 0,
	353, 558, 559, 0, 560, 0, 355, 356, 0, 561,
	0, 357, 358, 359, 0, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 0, 367, 369, 368, 0,
	370, 562, 0, 371, 372, 0, 0, 373, 374, 375,
	0, 0, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	0, 392, 393, 394, 398, 397, 399, 396, 0, 395,
	0, 248, 0, 400, 0, 563, 401, 564, 403, 404,
	0, 0, 405, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 411, 565, 0, 412, 0, 566, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 569, 425, 570, 426, 427, 0,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 571,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 572,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 0, 472, 473, 471, 474, 475, 476,
	0, 477, 461, 462, 478, 479, 0, 480, 481, 482,
	483, 484, 485, 573, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 574, 492, 493, 494, 495, 575,
	0, 498, 499, 0, 497, 0, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 576, 577, 578, 579,
	0, 514, 0, 508, 509, 580, 510, 581, 0, 511,
	512, 513, 0, 515, 516, 0, 0, 517, 518, 519,
	521, 522, 520, 523, 0, 524, 0, 0, 525, 526,
	527, 582, 583, 584, 0, 529, 528, 585, 0, 243,
	2689, 0, 530, 531, 586, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 1395,
	535, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 537, 0, 265, 538, 266, 539,
	0, 540, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 541, 542, 543, 0, 273, 274, 544, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 0, 292, 0, 293, 294, 0, 0, 0,
	0, 0, 0, 0, 295, 296, 297, 298, 0, 299,
	545, 546, 0, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 0, 0, 308, 309, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 316, 317, 547, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 548,
	549, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	331, 550, 0, 0, 0, 332, 0, 333, 0, 0,
	0, 334, 335, 551, 552, 336, 337, 0, 338, 553,
	0, 554, 339, 0, 340, 341, 342, 343, 344, 555,
	556, 557, 402, 0, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 0, 351, 352, 354, 0, 0,
	353, 558, 559, 0, 560, 0, 355, 356, 0, 561,
	0, 357, 358, 359, 0, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 0, 367, 369, 368, 0,
	370, 562, 0, 371, 372, 0, 0, 373, 374, 375,
	0, 0, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	0, 392, 393, 394, 398, 397, 399, 396, 0, 395,
	0, 0, 0, 400, 0, 563, 401, 564, 403, 404,
	0, 0, 405, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 411, 565, 0, 412, 0, 566, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 569, 425, 570, 426, 427, 0,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 571,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 572,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 0, 472, 473, 471, 474, 475, 476,
	0, 477, 461, 462, 478, 479, 0, 480, 481, 482,
	483, 484, 485, 573, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 574, 492, 493, 494, 495, 575,
	0, 498, 499, 0, 497, 0, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 576, 577, 578, 579,
	0, 514, 0, 508, 509, 580, 510, 581, 0, 511,
	512, 513, 0, 515, 516, 0, 0, 517, 518, 519,
	521, 522, 520, 523, 0, 524, 0, 0, 525, 526,
	527, 582, 583, 584, 0, 529, 528, 585, 243, 0,
	0, 0, 530, 531, 586, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 535,
	0, 4233, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 274, 544, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 0, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 297, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 246, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 0,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 555, 556,
	557, 402, 0, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 247, 351, 352, 354, 0, 0, 353,
	558, 559, 0, 560, 0, 355, 356, 0, 561, 0,
	357, 358, 359, 0, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 0, 371, 372, 0, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 0,
	392, 393, 394, 398, 397, 399, 396, 0, 395, 0,
	248, 0, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 0, 412, 0, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 0, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 0, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	582, 583, 584, 243, 529, 528, 585, 0, 0, 0,
	0, 530, 531, 586, 532, 533, 534, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 535, 0, 0, 0, 3120, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 537, 0,
	265, 538, 266, 539, 0, 540, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 541, 542, 543, 0, 273,
	274, 544, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 0, 293,
	294, 0, 0, 0, 0, 0, 0, 0, 295, 296,
	297, 298, 0, 299, 545, 546, 0, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	309, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 547, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 548, 549, 0, 246, 0, 0, 0,
	0, 0, 329, 330, 331, 550, 0, 0, 0, 332,
	0, 333, 0, 0, 0, 334, 335, 551, 552, 336,
	337, 0, 338, 553, 0, 554, 339, 0, 340, 341,
	342, 343, 344, 555, 556, 557, 402, 0, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 247, 351,
	352, 354, 0, 0, 353, 558, 559, 0, 560, 0,
	355, 356, 0, 561, 0, 357, 358, 359, 0, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 562, 0, 371, 372, 0,
	0, 373, 374, 375, 0, 0, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 0, 392, 393, 394, 398, 397,
	399, 396, 0, 395, 0, 248, 0, 400, 0, 563,
	401, 564, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 0, 412,
	0, 566, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 569, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 571, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 572, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 0, 477, 461, 462, 478, 479,
	0, 480, 481, 482, 483, 484, 485, 573, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 574, 492,
	493, 494, 495, 575, 0, 498, 499, 0, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	576, 577, 578, 579, 0, 514, 0, 508, 509, 580,
	510, 581, 0, 511, 512, 513, 0, 515, 516, 0,
	0, 517, 518, 519, 521, 522, 520, 523, 0, 524,
	0, 0, 525, 526, 527, 582, 583, 584, 243, 529,
	528, 585, 0, 0, 0, 0, 530, 531, 586, 532,
	533, 534, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 1395, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 274, 544, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 0, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 297, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 0,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 555, 556,
	557, 402, 0, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 0, 351, 352, 354, 0, 0, 353,
	558, 559, 0, 560, 0, 355, 356, 0, 561, 0,
	357, 358, 359, 0, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 0, 371, 372, 0, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 0,
	392, 393, 394, 398, 397, 399, 396, 0, 395, 0,
	0, 0, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 0, 412, 0, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 0, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 0, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	582, 583, 584, 0, 529, 528, 585, 243, 0, 0,
	0, 530, 531, 586, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 535, 0,
	2660, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 536, 537, 0, 265, 538, 266, 539, 0, 540,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 541,
	542, 543, 0, 273, 274, 544, 0, 0, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	0, 292, 0, 293, 294, 0, 0, 0, 0, 0,
	0, 0, 295, 296, 297, 298, 0, 299, 545, 546,
	0, 303, 300, 301, 0, 304, 302, 0, 305, 306,
	307, 0, 0, 308, 309, 310, 0, 311, 312, 0,
	313, 314, 315, 0, 316, 317, 547, 318, 319, 320,
	322, 324, 321, 325, 326, 327, 328, 548, 549, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 550,
	0, 0, 0, 332, 0, 333, 0, 0, 0, 334,
	335, 551, 552, 336, 337, 0, 338, 553, 0, 554,
	339, 0, 340, 341, 342, 343, 344, 555, 556, 557,
	402, 0, 345, 346, 0, 347, 348, 349, 350, 0,
	0, 0, 0, 351, 352, 354, 0, 0, 353, 558,
	559, 0, 560, 0, 355, 356, 0, 561, 0, 357,
	358, 359, 0, 360, 0, 0, 0, 361, 362, 363,
	364, 365, 366, 0, 367, 369, 368, 0, 370, 562,
	0, 371, 372, 0, 0, 373, 374, 375, 0, 0,
	376, 377, 378, 379, 0, 380, 381, 383, 385, 382,
	384, 389, 386, 387, 388, 391, 0, 390, 0, 392,
	393, 394, 398, 397, 399, 396, 0, 395, 0, 0,
	0, 400, 0, 563, 401, 564, 403, 404, 0, 0,
	405, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	411, 565, 0, 412, 0, 566, 413, 414, 406, 415,
	416, 417, 418, 419, 420, 421, 422, 0, 423, 424,
	567, 568, 569, 425, 570, 426, 427, 0, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 571, 437, 436,
	438, 0, 439, 0, 0, 0, 0, 0, 440, 0,
	442, 443, 444, 441, 445, 446, 447, 448, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 572, 456, 0,
	457, 458, 464, 465, 459, 460, 466, 467, 468, 469,
	470, 0, 472, 473, 471, 474, 475, 476, 0, 477,
	461, 462, 478, 479, 0, 480, 481, 482, 483, 484,
	485, 573, 0, 486, 0, 487, 488, 489, 490, 463,
	491, 496, 574, 492, 493, 494, 495, 575, 0, 498,
	499, 0, 497, 0, 500, 501, 502, 503, 504, 505,
	323, 506, 0, 507, 576, 577, 578, 579, 0, 514,
	0, 508, 509, 580, 510, 581, 0, 511, 512, 513,
	0, 515, 516, 0, 0, 517, 518, 519, 521, 522,
	520, 523, 0, 524, 0, 0, 525, 526, 527, 582,
	583, 584, 0, 529, 528, 585, 243, 0, 0, 0,
	530, 531, 586, 532, 533, 534, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 535, 0, 3277,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 537, 0, 265, 538, 266, 539, 0, 540, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 541, 542,
	543, 0, 273, 274, 544, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 0, 293, 294, 0, 0, 0, 0, 0, 0,
	0, 295, 296, 297, 298, 0, 299, 545, 546, 0,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 309, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 547, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 548, 549, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 550, 0,
	0, 0, 332, 0, 333, 0, 0, 0, 334, 335,
	551, 552, 336, 337, 0, 338, 553, 0, 554, 339,
	0, 340, 341, 342, 343, 344, 555, 556, 557, 402,
	0, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 0, 351, 352, 354, 0, 0, 353, 558, 559,
	0, 560, 0, 355, 356, 0, 561, 0, 357, 358,
	359, 0, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 562, 0,
	371, 372, 0, 0, 373, 374, 375, 0, 0, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 0, 392, 393,
	394, 398, 397, 399, 396, 0, 395, 0, 0, 0,
	400, 0, 563, 401, 564, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 0, 412, 0, 566, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 569, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 571, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 0, 452, 453, 454, 455, 572, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 0, 477, 461,
	462, 478, 479, 0, 480, 481, 482, 483, 484, 485,
	573, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 574, 492, 493, 494, 495, 575, 0, 498, 499,
	0, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 576, 577, 578, 579, 0, 514, 0,
	508, 509, 580, 510, 581, 0, 511, 512, 513, 0,
	515, 516, 0, 0, 517, 518, 519, 521, 522, 520,
	523, 0, 524, 0, 0, 525, 526, 527, 582, 583,
	584, 0, 529, 528, 585, 0, 789, 0, 672, 530,
	531, 586, 532, 533, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 2074, 535,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 274, 544, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 0, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 679, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 246, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 787, 0,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 555, 556,
	557, 402, 0, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 247, 351, 352, 354, 0, 0, 353,
	558, 559, 0, 560, 0, 355, 356, 0, 561, 0,
	357, 358, 359, 0, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 0, 371, 372, 0, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 0,
	392, 393, 394, 398, 397, 399, 396, 0, 395, 0,
	248, 0, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 0, 412, 0, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 0, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 0, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 677, 500, 501, 502, 503, 678,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	582, 583, 584, 0, 529, 528, 585, 0, 670, 0,
	672, 530, 531, 586, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 682, 255, 256, 0, 0, 0, 0,
	0, 535, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 537, 0, 265, 538, 266,
	539, 0, 540, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 541, 542, 543, 0, 273, 274, 544, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 0, 292, 0, 293, 294, 0, 0,
	0, 0, 0, 0, 0, 295, 296, 679, 298, 0,
	299, 545, 546, 0, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 309, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 547,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	548, 549, 0, 246, 0, 0, 0, 0, 0, 329,
	330, 331, 550, 0, 0, 0, 332, 0, 333, 0,
	0, 0, 334, 335, 551, 552, 336, 337, 0, 338,
	553, 0, 554, 339, 0, 340, 341, 342, 343, 344,
	555, 556, 557, 402, 0, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 247, 351, 352, 354, 0,
	0, 353, 558, 559, 0, 560, 0, 355, 356, 0,
	561, 0, 357, 358, 359, 0, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 0, 367, 369, 368,
	0, 370, 562, 0, 371, 372, 0, 0, 373, 374,
	375, 0, 0, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 0, 392, 393, 394, 398, 397, 399, 396, 0,
	395, 0, 248, 0, 400, 0, 563, 401, 564, 403,
	404, 0, 0, 405, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 411, 565, 0, 412, 0, 566, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 569, 425, 570, 426, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	571, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 0, 452, 453, 454, 455,
	572, 456, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 0, 477, 461, 462, 478, 479, 0, 480, 481,
	482, 483, 484, 485, 573, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 574, 492, 493, 494, 495,
	575, 0, 498, 499, 0, 497, 677, 500, 501, 502,
	503, 678, 505, 323, 506, 0, 507, 576, 577, 578,
	579, 0, 514, 0, 508, 509, 580, 510, 581, 0,
	511, 512, 513, 0, 515, 516, 0, 0, 517, 518,
	519, 521, 522, 520, 523, 0, 524, 0, 0, 525,
	526, 527, 582, 583, 584, 672, 529, 528, 585, 0,
	0, 0, 0, 530, 531, 586, 532, 533, 534, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 682, 535, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 536,
	537, 0, 265, 538, 266, 539, 0, 540, 267, 268,
	269, 270, 271, 0, 0, 0, 272, 541, 542, 543,
	0, 273, 274, 544, 0, 0, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 0, 292,
	0, 293, 294, 0, 0, 0, 0, 0, 0, 0,
	295, 296, 679, 298, 0, 299, 545, 546, 0, 303,
	300, 301, 0, 304, 302, 0, 305, 306, 307, 0,
	0, 308, 309, 310, 0, 311, 312, 0, 313, 314,
	315, 0, 316, 317, 547, 318, 319, 320, 322, 324,
	321, 325, 326, 327, 328, 548, 549, 0, 246, 0,
	0, 0, 0, 0, 329, 330, 331, 550, 0, 0,
	0, 332, 0, 333, 0, 0, 0, 334, 335, 551,
	552, 336, 337, 0, 338, 553, 0, 554, 339, 0,
	340, 341, 342, 343, 344, 555, 556, 557, 402, 0,
	345, 346, 0, 347, 348, 349, 350, 0, 0, 0,
	247, 351, 352, 354, 0, 0, 353, 558, 559, 0,
	560, 0, 355, 356, 0, 561, 0, 357, 358, 359,
	0, 360, 0, 0, 0, 361, 362, 363, 364, 365,
	366, 0, 367, 369, 368, 0, 370, 562, 0, 371,
	372, 0, 0, 373, 374, 375, 0, 0, 376, 377,
	378, 379, 0, 380, 381, 383, 385, 382, 384, 389,
	386, 387, 388, 391, 0, 390, 0, 392, 393, 394,
	398, 397, 399, 396, 0, 395, 0, 248, 0, 400,
	0, 563, 401, 564, 403, 404, 0, 0, 405, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 411, 565,
	0, 412, 0, 566, 413, 414, 406, 415, 416, 417,
	418, 419, 420, 421, 422, 0, 423, 424, 567, 568,
	569, 425, 570, 426, 427, 0, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 571, 437, 436, 438, 0,
	439, 0, 0, 0, 0, 0, 440, 0, 442, 443,
	444, 441, 445, 446, 447, 448, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 572, 456, 0, 457, 458,
	464, 465, 459, 460, 466, 467, 468, 469, 470, 0,
	472, 473, 471, 474, 475, 476, 0, 477, 461, 462,
	478, 479, 0, 480, 481, 482, 483, 484, 485, 573,
	0, 486, 0, 487, 488, 489, 490, 463, 491, 496,
	574, 492, 493, 494, 495, 575, 0, 498, 499, 0,
	497, 677, 500, 501, 502, 503, 678, 505, 323, 506,
	0, 507, 576, 577, 578, 579, 0, 514, 0, 508,
	509, 580, 510, 581, 0, 511, 512, 513, 0, 515,
	516, 0, 0, 517, 518, 519, 521, 522, 520, 523,
	0, 524, 0, 0, 525, 526, 527, 582, 583, 584,
	672, 529, 528, 585, 0, 0, 0, 0, 530, 531,
	586, 532, 533, 534, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	682, 535, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 537, 0, 265, 538, 266,
	539, 0, 540, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 541, 542, 543, 0, 273, 274, 544, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 0, 292, 0, 293, 294, 0, 0,
	0, 0, 0, 0, 0, 295, 296, 679, 298, 0,
	299, 545, 546, 0, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 309, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 547,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	548, 549, 0, 246, 0, 0, 0, 0, 0, 329,
	330, 331, 550, 0, 0, 0, 332, 0, 333, 0,
	0, 0, 334, 335, 551, 552, 336, 337, 0, 338,
	553, 0, 554, 339, 0, 340, 341, 342, 343, 344,
	555, 556, 557, 402, 0, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 247, 351, 352, 354, 0,
	0, 353, 558, 559, 0, 560, 0, 355, 356, 0,
	561, 0, 357, 358, 359, 0, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 0, 367, 369, 368,
	0, 370, 562, 0, 371, 372, 0, 0, 373, 374,
	375, 0, 0, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 0, 392, 393, 394, 398, 397, 399, 396, 0,
	395, 0, 248, 0, 400, 0, 563, 401, 564, 403,
	404, 0, 0, 405, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 411, 565, 0, 412, 0, 566, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 569, 425, 570, 426, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	571, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 0, 2113, 453, 454, 455,
	572, 456, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 0, 477, 461, 462, 478, 479, 0, 480, 481,
	482, 483, 484, 485, 573, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 574, 492, 493, 494, 495,
	575, 0, 498, 499, 0, 497, 677, 500, 501, 502,
	503, 678, 505, 323, 506, 0, 507, 576, 577, 578,
	579, 0, 514, 0, 508, 509, 580, 510, 581, 0,
	511, 512, 513, 0, 515, 516, 0, 0, 517, 518,
	519, 521, 522, 520, 523, 0, 524, 0, 0, 525,
	526, 527, 582, 583, 584, 672, 529, 528, 585, 0,
	0, 0, 0, 530, 531, 586, 532, 533, 534, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 682, 535, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 536,
	537, 0, 265, 538, 266, 539, 0, 540, 267, 268,
	269, 270, 271, 0, 0, 0, 272, 541, 542, 543,
	0, 273, 274, 544, 0, 0, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 0, 292,
	0, 293, 294, 0, 0, 0, 0, 0, 0, 0,
	295, 296, 679, 298, 0, 299, 545, 546, 0, 303,
	300, 301, 0, 304, 302, 0, 305, 306, 307, 0,
	0, 308, 309, 310, 0, 311, 312, 0, 313, 314,
	315, 0, 316, 317, 547, 318, 319, 320, 322, 324,
	321, 325, 326, 327, 328, 548, 549, 0, 246, 0,
	0, 0, 0, 0, 329, 330, 331, 550, 0, 0,
	0, 332, 0, 333, 0, 0, 0, 334, 335, 551,
	552, 336, 337, 0, 338, 553, 0, 554, 339, 0,
	340, 341, 342, 343, 344, 555, 556, 557, 402, 0,
	345, 346, 0, 347, 348, 349, 350, 0, 0, 0,
	247, 351, 352, 354, 0, 0, 353, 558, 559, 0,
	560, 0, 355, 356, 0, 561, 0, 357, 358, 359,
	0, 360, 0, 0, 0, 361, 362, 363, 364, 365,
	366, 0, 367, 369, 368, 0, 370, 562, 0, 371,
	372, 0, 0, 373, 374, 375, 0, 0, 376, 377,
	378, 379, 0, 380, 381, 383, 385, 382, 384, 389,
	386, 387, 388, 391, 0, 390, 0, 392, 393, 394,
	398, 397, 399, 396, 0, 395, 0, 248, 0, 400,
	0, 563, 401, 564, 403, 404, 0, 0, 405, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 411, 565,
	0, 412, 0, 566, 413, 414, 406, 415, 416, 417,
	418, 419, 420, 421, 422, 0, 423, 424, 567, 568,
	569, 425, 570, 426, 427, 0, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 571, 437, 436, 438, 0,
	439, 0, 0, 0, 0, 0, 440, 0, 442, 443,
	444, 441, 445, 446, 447, 448, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 572, 456, 0, 457, 458,
	464, 465, 459, 460, 466, 467, 468, 469, 470, 0,
	472, 473, 471, 474, 475, 476, 0, 477, 461, 462,
	478, 479, 0, 480, 481, 482, 483, 484, 485, 573,
	0, 486, 0, 487, 488, 489, 490, 463, 491, 496,
	574, 492, 493, 494, 495, 575, 0, 498, 499, 0,
	497, 677, 500, 501, 502, 503, 678, 505, 323, 506,
	0, 507, 576, 577, 578, 579, 0, 514, 0, 508,
	509, 580, 510, 581, 0, 511, 512, 1853, 0, 515,
	516, 0, 0, 517, 518, 519, 521, 522, 520, 523,
	0, 524, 0, 0, 525, 526, 527, 582, 583, 584,
	672, 529, 528, 585, 0, 0, 0, 0, 530, 531,
	586, 532, 533, 534, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	682, 535, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 537, 0, 265, 538, 266,
	539, 0, 540, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 541, 542, 543, 0, 273, 274, 544, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 0, 292, 0, 293, 294, 0, 0,
	0, 0, 0, 0, 0, 295, 296, 679, 298, 0,
	299, 545, 546, 0, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 309, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 547,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	548, 549, 0, 246, 0, 0, 0, 0, 0, 329,
	330, 331, 550, 0, 0, 0, 332, 0, 333, 0,
	0, 0, 334, 335, 551, 552, 336, 337, 0, 338,
	553, 0, 554, 339, 0, 340, 341, 342, 343, 344,
	555, 556, 557, 402, 0, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 247, 351, 352, 354, 0,
	0, 353, 558, 559, 0, 560, 0, 355, 356, 0,
	561, 0, 357, 358, 359, 0, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 0, 367, 369, 368,
	0, 370, 562, 0, 371, 372, 0, 0, 373, 374,
	375, 0, 0, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 0, 392, 393, 394, 398, 397, 399, 396, 0,
	395, 0, 248, 0, 400, 0, 563, 401, 564, 403,
	404, 0, 0, 405, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 411, 565, 0, 412, 0, 566, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 569, 425, 570, 426, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	571, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 0, 452, 453, 454, 455,
	572, 456, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 0, 477, 461, 462, 478, 479, 0, 480, 481,
	482, 483, 484, 485, 573, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 574, 492, 493, 494, 495,
	575, 0, 498, 499, 0, 497, 677, 500, 501, 502,
	503, 678, 505, 323, 506, 0, 507, 576, 577, 578,
	579, 0, 514, 0, 508, 509, 580, 510, 581, 0,
	511, 512, 1807, 0, 515, 516, 0, 0, 517, 518,
	519, 521, 522, 520, 523, 0, 524, 0, 0, 525,
	526, 527, 582, 583, 584, 1828, 529, 528, 585, 0,
	0, 0, 0, 530, 531, 586, 532, 533, 534, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 682, 0, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 0,
	1834, 0, 265, 1824, 266, 1840, 0, 1847, 267, 268,
	269, 270, 271, 0, 0, 0, 272, 1850, 1851, 0,
	0, 273, 274, 0, 0, 1266, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 0, 292,
	1058, 293, 294, 0, 0, 0, 0, 0, 0, 0,
	295, 296, 297, 298, 1041, 299, 1838, 1837, 0, 303,
	300, 301, 0, 304, 302, 0, 305, 306, 307, 0,
	0, 308, 1026, 310, 0, 311, 312, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 322, 324,
	321, 325, 326, 327, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 331, 1836, 0, 0,
	0, 332, 0, 333, 0, 0, 1059, 334, 335, 1845,
	1846, 336, 337, 0, 338, 0, 0, 0, 339, 0,
	340, 341, 342, 343, 344, 0, 0, 0, 402, 1061,
	345, 346, 0, 347, 348, 349, 350, 0, 0, 0,
	0, 351, 352, 354, 0, 1060, 353, 1831, 1832, 0,
	1827, 0, 355, 356, 1062, 0, 1063, 357, 358, 359,
	1064, 360, 0, 0, 0, 361, 362, 363, 364, 365,
	366, 0, 367, 369, 368, 0, 370, 0, 1065, 371,
	372, 1066, 0, 373, 374, 375, 0, 0, 376, 377,
	378, 379, 0, 380, 381, 383, 385, 382, 384, 389,
	386, 387, 388, 391, 0, 390, 1067, 392, 393, 394,
	398, 397, 399, 396, 1068, 395, 0, 0, 1069, 400,
	0, 0, 401, 1839, 403, 404, 0, 0, 405, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 411, 0,
	1070, 412, 1071, 0, 413, 414, 406, 415, 416, 417,
	418, 419, 420, 421, 422, 0, 423, 424, 1821, 1822,
	0, 425, 0, 426, 427, 0, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 1835, 437, 436, 438, 0,
	439, 0, 0, 0, 0, 0, 440, 0, 442, 443,
	444, 441, 445, 446, 447, 448, 0, 449, 450, 451,
	1072, 452, 453, 454, 455, 0, 456, 0, 457, 458,
	464, 465, 459, 460, 466, 467, 468, 469, 470, 0,
	472, 473, 471, 474, 475, 476, 0, 477, 461, 462,
	478, 479, 1073, 480, 481, 482, 483, 484, 485, 1833,
	0, 486, 0, 487, 488, 489, 490, 463, 491, 496,
	1849, 492, 493, 494, 495, 0, 0, 498, 499, 0,
	497, 0, 500, 501, 502, 503, 504, 505, 323, 506,
	0, 507, 1841, 1842, 1843, 1844, 0, 514, 0, 508,
	509, 0, 510, 0, 0, 511, 512, 513, 0, 515,
	516, 0, 0, 517, 518, 519, 521, 522, 520, 523,
	0, 524, 0, 0, 525, 526, 527, 0, 1825, 1848,
	0, 529, 528, 0, 0, 0, 0, 0, 530, 531,
	0, 532, 533, 534, 1300, 1299, 0, 0, 0, 0,
	1297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 1815, 0, 0, 0, 535, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 536, 537,
	0, 265, 538, 266, 539, 0, 540, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 541, 542, 543, 0,
	273, 274, 544, 0, 1266, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 0, 292, 1058,
	293, 294, 0, 0, 0, 0, 0, 0, 0, 295,
	296, 297, 298, 0, 299, 545, 546, 0, 303, 300,
	301, 0, 304, 302, 0, 305, 306, 307, 0, 0,
	308, 309, 310, 0, 311, 312, 0, 313, 314, 315,
	0, 316, 317, 547, 318, 319, 320, 322, 324, 321,
	325, 326, 327, 328, 548, 549, 0, 246, 0, 0,
	0, 0, 0, 329, 330, 331, 550, 0, 0, 0,
	332, 0, 333, 0, 0, 1059, 334, 335, 551, 552,
	336, 337, 0, 338, 553, 0, 554, 339, 0, 340,
	341, 342, 343, 344, 555, 556, 557, 402, 1061, 345,
	346, 0, 347, 348, 349, 350, 0, 0, 0, 0,
	351, 352, 354, 0, 1060, 353, 558, 559, 0, 560,
	0, 355, 356, 1062, 561, 1063, 357, 358, 359, 1064,
	360, 0, 0, 0, 361, 362, 363, 364, 365, 366,
	0, 367, 369, 368, 0, 370, 562, 1065, 371, 372,
	1066, 0, 373, 374, 375, 0, 0, 376, 377, 378,
	379, 0, 380, 381, 383, 385, 382, 384, 389, 386,
	387, 388, 391, 0, 390, 1067, 392, 393, 394, 398,
	397, 399, 396, 1068, 395, 0, 0, 1069, 400, 3443,
	563, 401, 564, 403, 404, 0, 0, 405, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 411, 565, 1070,
	412, 1071, 566, 413, 414, 406, 415, 416, 417, 418,
	419, 420, 421, 422, 0, 423, 424, 567, 568, 569,
	425, 570, 426, 427, 0, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 571, 437, 436, 438, 0, 439,
	0, 0, 0, 0, 0, 440, 0, 442, 443, 444,
	441, 445, 446, 447, 448, 0, 449, 450, 451, 1072,
	452, 453, 454, 455, 572, 456, 0, 457, 458, 464,
	465, 459, 460, 466, 467, 468, 469, 470, 0, 472,
	473, 471, 474, 475, 476, 0, 477, 461, 462, 478,
	479, 1073, 480, 481, 482, 483, 484, 485, 573, 0,
	486, 0, 487, 488, 489, 490, 463, 491, 496, 574,
	492, 493, 494, 495, 575, 0, 498, 499, 0, 497,
	0, 500, 501, 502, 503, 504, 505, 323, 506, 0,
	507, 576, 577, 578, 579, 0, 514, 0, 508, 509,
	580, 510, 581, 0, 511, 512, 513, 0, 515, 516,
	0, 0, 517, 518, 519, 521, 522, 520, 523, 0,
	524, 0, 0, 525, 526, 527, 582, 583, 584, 0,
	529, 528, 585, 0, 0, 0, 0, 530, 531, 586,
	532, 533, 534, 1300, 1299, 0, 0, 0, 0, 1297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 535, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 537, 0,
	265, 538, 266, 539, 0, 540, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 541, 542, 543, 0, 273,
	274, 544, 0, 1266, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 1058, 293,
	294, 0, 0, 0, 0, 0, 0, 0, 295, 296,
	297, 298, 0, 299, 545, 546, 0, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	309, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 547, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 548, 549, 0, 246, 0, 0, 0,
	0, 0, 329, 330, 331, 550, 0, 0, 0, 332,
	0, 333, 0, 0, 1059, 334, 335, 551, 552, 336,
	337, 0, 338, 553, 0, 554, 339, 0, 340, 341,
	342, 343, 344, 555, 556, 557, 402, 1061, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 0, 351,
	352, 354, 0, 1060, 353, 558, 559, 0, 560, 0,
	355, 356, 1062, 561, 1063, 357, 358, 359, 1064, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 562, 1065, 371, 372, 1066,
	0, 373, 374, 375, 0, 0, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 1067, 392, 393, 394, 398, 397,
	399, 396, 1068, 395, 0, 0, 1069, 400, 3092, 563,
	401, 564, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 1070, 412,
	1071, 566, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 569, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 571, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 1072, 452,
	453, 454, 455, 572, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 0, 477, 461, 462, 478, 479,
	1073, 480, 481, 482, 483, 484, 485, 573, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 574, 492,
	493, 494, 495, 575, 0, 498, 499, 0, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	576, 577, 578, 579, 0, 514, 0, 508, 509, 580,
	510, 581, 0, 511, 512, 513, 0, 515, 516, 0,
	0, 517, 518, 519, 521, 522, 520, 523, 0, 524,
	0, 0, 525, 526, 527, 582, 583, 584, 0, 529,
	528, 585, 1300, 1299, 0, 0, 530, 531, 586, 532,
	533, 534, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 536, 537, 0, 265,
	538, 266, 539, 0, 540, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 541, 542, 543, 0, 273, 274,
	544, 0, 1266, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 0, 292, 1058, 293, 294,
	0, 0, 0, 0, 0, 0, 3033, 295, 296, 297,
	298, 0, 299, 545, 546, 0, 303, 300, 301, 0,
	304, 302, 0, 305, 306, 307, 0, 0, 308, 309,
	310, 0, 311, 312, 0, 313, 314, 315, 0, 316,
	317, 547, 318, 319, 320, 322, 324, 321, 325, 326,
	327, 328, 548, 549, 0, 246, 0, 0, 0, 0,
	0, 329, 330, 331, 550, 0, 0, 0, 332, 0,
	333, 0, 0, 1059, 334, 335, 551, 552, 336, 337,
	0, 338, 553, 0, 554, 339, 0, 340, 341, 342,
	343, 344, 555, 556, 557, 402, 1061, 345, 346, 0,
	347, 348, 349, 350, 0, 0, 0, 0, 351, 352,
	354, 0, 1060, 353, 558, 559, 0, 560, 0, 355,
	356, 1062, 561, 1063, 357, 358, 359, 1064, 360, 0,
	0, 0, 361, 362, 363, 364, 365, 366, 0, 367,
	369, 368, 0, 370, 562, 1065, 371, 372, 1066, 0,
	373, 374, 375, 0, 0, 376, 377, 378, 379, 0,
	380, 381, 383, 385, 382, 384, 389, 386, 387, 388,
	391, 0, 390, 1067, 392, 393, 394, 398, 397, 399,
	396, 1068, 395, 0, 0, 1069, 400, 0, 563, 401,
	564, 403, 404, 0, 0, 405, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 411, 565, 1070, 412, 1071,
	566, 413, 414, 406, 415, 416, 417, 418, 419, 420,
	421, 422, 0, 423, 424, 567, 568, 569, 425, 570,
	426, 427, 0, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 571, 437, 436, 438, 0, 439, 0, 0,
	0, 0, 0, 440, 0, 442, 443, 444, 441, 445,
	446, 447, 448, 0, 449, 450, 451, 1072, 452, 453,
	454, 455, 572, 456, 0, 457, 458, 464, 465, 459,
	460, 466, 467, 468, 469, 470, 0, 472, 473, 471,
	474, 475, 476, 3034, 477, 461, 462, 478, 479, 1073,
	480, 481, 482, 483, 484, 485, 573, 0, 486, 0,
	487, 488, 489, 490, 463, 491, 496, 574, 492, 493,
	494, 495, 575, 0, 498, 499, 0, 497, 0, 500,
	501, 502, 503, 504, 505, 323, 506, 0, 507, 576,
	577, 578, 579, 0, 514, 0, 508, 509, 580, 510,
	581, 0, 511, 512, 513, 0, 515, 516, 0, 0,
	517, 518, 519, 521, 522, 520, 523, 0, 524, 0,
	0, 525, 526, 527, 582, 583, 584, 243, 529, 528,
	585, 0, 0, 0, 0, 530, 531, 586, 532, 533,
	534, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 535, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 536, 537, 0, 265, 538, 266, 539, 0, 540,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 541,
	542, 543, 0, 273, 274, 544, 0, 0, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	0, 292, 0, 293, 294, 0, 0, 0, 0, 0,
	0, 0, 295, 296, 297, 298, 0, 299, 545, 546,
	0, 303, 300, 301, 0, 304, 302, 0, 305, 306,
	307, 0, 0, 308, 309, 310, 0, 311, 312, 0,
	313, 314, 315, 0, 316, 317, 547, 318, 319, 320,
	322, 324, 321, 325, 326, 327, 328, 548, 549, 0,
	246, 0, 0, 0, 0, 0, 329, 330, 331, 550,
	0, 0, 0, 332, 0, 333, 0, 0, 0, 334,
	335, 551, 552, 336, 337, 0, 338, 553, 0, 554,
	339, 0, 340, 341, 342, 343, 344, 555, 556, 557,
	402, 0, 345, 346, 0, 347, 348, 349, 350, 0,
	0, 0, 247, 351, 352, 354, 0, 0, 353, 558,
	559, 0, 560, 0, 355, 356, 0, 561, 0, 357,
	358, 359, 0, 360, 0, 0, 0, 361, 362, 363,
	364, 365, 366, 0, 367, 369, 368, 0, 370, 562,
	0, 371, 372, 0, 0, 373, 374, 375, 0, 0,
	376, 377, 378, 379, 0, 380, 381, 383, 385, 382,
	384, 389, 386, 387, 388, 391, 0, 390, 0, 392,
	393, 394, 398, 397, 399, 396, 0, 395, 0, 248,
	0, 400, 0, 563, 401, 564, 403, 404, 0, 0,
	405, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	411, 565, 0, 412, 0, 566, 413, 414, 406, 415,
	416, 417, 418, 419, 420, 421, 422, 0, 423, 424,
	567, 568, 569, 425, 570, 426, 427, 0, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 571, 437, 436,
	438, 0, 439, 0, 0, 0, 0, 0, 440, 0,
	442, 443, 444, 441, 445, 446, 447, 448, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 572, 456, 0,
	457, 458, 464, 465, 459, 460, 466, 467, 468, 469,
	470, 0, 472, 473, 471, 474, 475, 476, 0, 477,
	461, 462, 478, 479, 0, 480, 481, 482, 483, 484,
	485, 573, 0, 486, 0, 487, 488, 489, 490, 463,
	491, 496, 574, 492, 493, 494, 495, 575, 0, 498,
	499, 0, 497, 0, 500, 501, 502, 503, 504, 505,
	323, 506, 0, 507, 576, 577, 578, 579, 0, 514,
	0, 508, 509, 580, 510, 581, 0, 511, 512, 513,
	0, 515, 516, 0, 0, 517, 518, 519, 521, 522,
	520, 523, 0, 524, 0, 0, 525, 526, 527, 582,
	583, 584, 0, 529, 528, 585, 0, 0, 0, 0,
	530, 531, 586, 532, 533, 534, 1501, 0, 1300, 1299,
	0, 0, 0, 0, 1297, 0, 0, 0, 0, 0,
	0, 0, 682, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 274, 544, 0, 1266, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 1058, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 297, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 246, 0, 0, 0, 0, 0, 1500, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 1059,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 555, 556,
	557, 402, 1061, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 0, 351, 352, 354, 0, 1060, 353,
	558, 559, 0, 560, 0, 355, 356, 1062, 561, 1063,
	357, 358, 359, 1064, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 1065, 371, 372, 1066, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 1067,
	392, 393, 394, 398, 397, 399, 396, 1068, 395, 0,
	0, 1069, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 1070, 412, 1071, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 1499, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 1072, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 1498, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 1073, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	582, 583, 584, 0, 529, 528, 585, 0, 0, 0,
	0, 530, 531, 586, 532, 533, 534, 1441, 0, 1300,
	1299, 0, 0, 0, 0, 1297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	535, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 537, 0, 265, 538, 266, 539,
	0, 540, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 541, 542, 543, 0, 273, 274, 544, 0, 1266,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 0, 292, 1058, 293, 294, 0, 0, 0,
	0, 0, 0, 0, 295, 296, 297, 298, 0, 299,
	545, 546, 0, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 0, 0, 308, 309, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 316, 317, 547, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 548,
	549, 0, 246, 0, 0, 0, 0, 0, 329, 330,
	331, 550, 0, 0, 0, 332, 0, 333, 0, 0,
	1059, 334, 335, 551, 552, 336, 337, 0, 338, 553,
	0, 554, 339, 0, 340, 341, 342, 343, 344, 1440,
	556, 557, 402, 1061, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 0, 351, 352, 354, 0, 1060,
	353, 558, 559, 0, 560, 0, 355, 356, 1062, 561,
	1063, 357, 358, 359, 1064, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 0, 367, 369, 368, 0,
	370, 562, 1065, 371, 372, 1066, 0, 373, 374, 375,
	0, 0, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	1067, 392, 393, 394, 398, 397, 399, 396, 1068, 395,
	0, 0, 1069, 400, 0, 563, 401, 564, 403, 404,
	0, 0, 405, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 411, 565, 1070, 412, 1071, 566, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 569, 425, 570, 426, 427, 0,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 571,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 1072, 452, 453, 454, 455, 572,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 0, 472, 473, 471, 474, 475, 476,
	0, 477, 461, 462, 478, 479, 1073, 480, 481, 482,
	483, 484, 485, 573, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 574, 492, 493, 494, 495, 575,
	0, 498, 499, 0, 497, 0, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 576, 577, 578, 579,
	0, 514, 0, 508, 509, 580, 510, 581, 0, 511,
	512, 513, 0, 515, 516, 0, 0, 517, 518, 519,
	521, 522, 520, 523, 0, 524, 0, 0, 525, 526,
	527, 582, 583, 584, 0, 529, 528, 585, 0, 0,
	0, 0, 530, 531, 586, 532, 533, 534, 1370, 0,
	1300, 1299, 0, 0, 0, 0, 1297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 535, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 537, 0, 265, 538, 266,
	539, 0, 540, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 541, 542, 543, 0, 273, 274, 544, 0,
	1266, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 0, 292, 1058, 293, 294, 0, 0,
	0, 0, 0, 0, 0, 295, 296, 297, 298, 0,
	299, 545, 546, 0, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 309, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 547,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	548, 549, 0, 246, 0, 0, 0, 0, 0, 329,
	330, 331, 550, 0, 0, 0, 332, 0, 333, 0,
	0, 1059, 334, 335, 551, 552, 336, 337, 0, 338,
	553, 0, 554, 339, 0, 340, 341, 342, 343, 344,
	1369, 556, 557, 402, 1061, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 0, 351, 352, 354, 0,
	1060, 353, 558, 559, 0, 560, 0, 355, 356, 1062,
	561, 1063, 357, 358, 359, 1064, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 0, 367, 369, 368,
	0, 370, 562, 1065, 371, 372, 1066, 0, 373, 374,
	375, 0, 0, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 1067, 392, 393, 394, 398, 397, 399, 396, 1068,
	395, 0, 0, 1069, 400, 0, 563, 401, 564, 403,
	404, 0, 0, 405, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 411, 565, 1070, 412, 1071, 566, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 569, 425, 570, 426, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	571, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 1072, 452, 453, 454, 455,
	572, 456, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 0, 477, 461, 462, 478, 479, 1073, 480, 481,
	482, 483, 484, 485, 573, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 574, 492, 493, 494, 495,
	575, 0, 498, 499, 0, 497, 0, 500, 501, 502,
	503, 504, 505, 323, 506, 0, 507, 576, 577, 578,
	579, 0, 514, 0, 508, 509, 580, 510, 581, 0,
	511, 512, 513, 0, 515, 516, 0, 0, 517, 518,
	519, 521, 522, 520, 523, 0, 524, 0, 0, 525,
	526, 527, 582, 583, 584, 0, 529, 528, 585, 0,
	0, 0, 0, 530, 531, 586, 532, 533, 534, 1335,
	0, 1300, 1299, 0, 0, 0, 0, 1297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 537, 0, 265, 538,
	266, 539, 0, 540, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 541, 542, 543, 0, 273, 274, 544,
	0, 1266, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 1058, 293, 294, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 297, 298,
	0, 299, 545, 546, 0, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 309, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	547, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 548, 549, 0, 246, 0, 0, 0, 0, 0,
	329, 330, 331, 550, 0, 0, 0, 332, 0, 333,
	0, 0, 1059, 334, 335, 551, 552, 336, 337, 0,
	338, 553, 0, 554, 339, 0, 340, 341, 342, 343,
	344, 555, 556, 557, 402, 1061, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 0, 351, 352, 354,
	0, 1060, 353, 558, 559, 0, 560, 0, 355, 356,
	1062, 561, 1063, 357, 358, 359, 1064, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 562, 1065, 371, 372, 1066, 0, 373,
	374, 375, 0, 0, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 1067, 392, 393, 394, 398, 397, 399, 396,
	1068, 395, 0, 0, 1069, 400, 0, 563, 401, 564,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 1070, 412, 1071, 566,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 569, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 571, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 1072, 452, 453, 454,
	455, 572, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 0, 477, 461, 462, 478, 479, 1073, 480,
	481, 482, 483, 484, 485, 573, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 574, 492, 493, 494,
	495, 575, 0, 498, 499, 0, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 576, 577,
	578, 579, 0, 514, 0, 508, 509, 580, 510, 581,
	0, 511, 512, 513, 0, 515, 516, 0, 0, 517,
	518, 519, 521, 522, 520, 523, 0, 524, 0, 0,
	525, 526, 527, 582, 583, 584, 0, 529, 528, 585,
	0, 0, 0, 0, 530, 531, 586, 532, 533, 534,
	1295, 0, 1300, 1299, 0, 0, 0, 0, 1297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 536, 537, 0, 265,
	538, 266, 539, 0, 540, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 541, 542, 543, 0, 273, 274,
	544, 0, 1266, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 0, 292, 1058, 293, 294,
	0, 0, 0, 0, 0, 0, 0, 295, 296, 297,
	298, 0, 299, 545, 546, 0, 303, 300, 301, 0,
	304, 302, 0, 305, 306, 307, 0, 0, 308, 309,
	310, 0, 311, 312, 0, 313, 314, 315, 0, 316,
	317, 547, 318, 319, 320, 322, 324, 321, 325, 326,
	327, 328, 548, 549, 0, 246, 0, 0, 0, 0,
	0, 329, 330, 331, 550, 0, 0, 0, 332, 0,
	333, 0, 0, 1059, 334, 335, 551, 552, 336, 337,
	0, 338, 553, 0, 554, 339, 0, 340, 341, 342,
	343, 344, 1294, 556, 557, 402, 1061, 345, 346, 0,
	347, 348, 349, 350, 0, 0, 0, 0, 351, 352,
	354, 0, 1060, 353, 558, 559, 0, 560, 0, 355,
	356, 1062, 561, 1063, 357, 358, 359, 1064, 360, 0,
	0, 0, 361, 362, 363, 364, 365, 366, 0, 367,
	369, 368, 0, 370, 562, 1065, 371, 372, 1066, 0,
	373, 374, 375, 0, 0, 376, 377, 378, 379, 0,
	380, 381, 383, 385, 382, 384, 389, 386, 387, 388,
	391, 0, 390, 1067, 392, 393, 394, 398, 397, 399,
	396, 1068, 395, 0, 0, 1069, 400, 0, 563, 401,
	564, 403, 404, 0, 0, 405, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 411, 565, 1070, 412, 1071,
	566, 413, 414, 406, 415, 416, 417, 418, 419, 420,
	421, 422, 0, 423, 424, 567, 568, 569, 425, 570,
	426, 427, 0, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 571, 437, 436, 438, 0, 439, 0, 0,
	0, 0, 0, 440, 0, 442, 443, 444, 441, 445,
	446, 447, 448, 0, 449, 450, 451, 1072, 452, 453,
	454, 455, 572, 456, 0, 457, 458, 464, 465, 459,
	460, 466, 467, 468, 469, 470, 0, 472, 473, 471,
	474, 475, 476, 0, 477, 461, 462, 478, 479, 1073,
	480, 481, 482, 483, 484, 485, 573, 0, 486, 0,
	487, 488, 489, 490, 463, 491, 496, 574, 492, 493,
	494, 495, 575, 0, 498, 499, 0, 497, 0, 500,
	501, 502, 503, 504, 505, 323, 506, 0, 507, 576,
	577, 578, 579, 0, 514, 0, 508, 509, 580, 510,
	581, 0, 511, 512, 513, 0, 515, 516, 0, 0,
	517, 518, 519, 521, 522, 520, 523, 0, 524, 0,
	0, 525, 526, 527, 582, 583, 584, 0, 529, 528,
	585, 0, 0, 0, 0, 530, 531, 586, 532, 533,
	534, 1300, 1299, 0, 0, 0, 0, 1297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 537, 0, 265, 538,
	266, 539, 0, 540, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 541, 542, 543, 0, 273, 274, 544,
	0, 1266, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 1058, 293, 294, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 297, 298,
	0, 299, 545, 546, 0, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 309, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	547, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 548, 549, 0, 246, 0, 0, 0, 0, 0,
	329, 330, 331, 550, 0, 0, 0, 332, 0, 333,
	0, 0, 1059, 334, 335, 551, 552, 336, 337, 0,
	338, 553, 0, 554, 339, 0, 340, 341, 342, 343,
	344, 555, 556, 557, 402, 1061, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 0, 351, 352, 354,
	0, 1060, 353, 558, 559, 0, 560, 0, 355, 356,
	1062, 561, 1063, 357, 358, 359, 1064, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 562, 1065, 371, 372, 1066, 0, 373,
	374, 375, 0, 0, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 1067, 392, 393, 394, 398, 397, 399, 396,
	1068, 395, 0, 0, 1069, 400, 0, 563, 401, 564,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 1070, 412, 1071, 566,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 569, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 571, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 1072, 452, 453, 454,
	455, 572, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 0, 477, 461, 462, 478, 479, 1073, 480,
	481, 482, 483, 484, 485, 573, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 574, 492, 493, 494,
	495, 575, 0, 498, 499, 0, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 576, 577,
	578, 579, 0, 514, 0, 508, 509, 580, 510, 581,
	0, 511, 512, 513, 0, 515, 516, 0, 0, 517,
	518, 519, 521, 522, 520, 523, 0, 524, 0, 0,
	525, 526, 527, 582, 583, 584, 0, 529, 528, 585,
	1300, 1299, 0, 0, 530, 531, 586, 532, 533, 534,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 535, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 537, 0, 265, 538, 266,
	539, 0, 540, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 541, 542, 543, 0, 273, 274, 544, 0,
	1266, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 0, 292, 1058, 293, 294, 0, 0,
	0, 0, 0, 0, 0, 295, 296, 297, 298, 0,
	299, 545, 546, 1862, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 309, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 547,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	548, 549, 0, 246, 0, 0, 0, 0, 0, 329,
	330, 331, 550, 0, 0, 0, 332, 0, 333, 0,
	0, 1059, 334, 335, 551, 552, 336, 337, 0, 338,
	553, 0, 554, 339, 0, 340, 341, 342, 343, 344,
	555, 556, 557, 402, 1061, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 0, 351, 352, 354, 0,
	1060, 353, 558, 559, 0, 560, 0, 355, 356, 1062,
	561, 1063, 357, 358, 359, 1064, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 0, 367, 369, 368,
	0, 370, 562, 1065, 371, 372, 1066, 0, 373, 374,
	375, 0, 0, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 1067, 392, 393, 394, 398, 397, 399, 396, 1068,
	395, 0, 0, 1069, 400, 0, 563, 401, 564, 403,
	404, 0, 0, 405, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 411, 565, 1070, 412, 1071, 566, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 569, 425, 570, 426, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	571, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 1072, 452, 453, 454, 455,
	572, 456, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 0, 477, 461, 462, 478, 479, 1073, 480, 481,
	482, 483, 484, 485, 573, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 574, 492, 493, 494, 495,
	575, 0, 498, 499, 0, 497, 0, 500, 501, 502,
	503, 504, 505, 323, 506, 0, 507, 576, 577, 578,
	579, 0, 514, 0, 508, 509, 580, 510, 581, 0,
	511, 512, 513, 0, 515, 516, 0, 0, 517, 518,
	519, 521, 522, 520, 523, 0, 524, 0, 0, 525,
	526, 527, 582, 583, 584, 0, 529, 528, 585, 1300,
	1299, 0, 0, 530, 531, 586, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	535, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 537, 0, 265, 538, 266, 539,
	0, 540, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 541, 542, 543, 0, 273, 274, 544, 0, 1266,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 0, 292, 1058, 293, 294, 0, 0, 0,
	0, 0, 0, 0, 295, 296, 297, 298, 0, 299,
	545, 546, 0, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 0, 0, 308, 309, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 316, 317, 547, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 548,
	549, 0, 246, 0, 0, 0, 0, 0, 329, 330,
	331, 550, 0, 0, 0, 332, 0, 333, 0, 0,
	1059, 334, 335, 551, 552, 336, 337, 0, 338, 553,
	0, 554, 339, 0, 340, 341, 342, 343, 344, 555,
	556, 557, 402, 1061, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 0, 351, 352, 354, 0, 1060,
	353, 558, 559, 0, 560, 0, 355, 356, 1062, 561,
	1063, 357, 358, 359, 1064, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 0, 367, 369, 368, 0,
	370, 562, 1065, 371, 372, 1066, 0, 373, 374, 375,
	0, 0, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	1067, 392, 393, 394, 398, 397, 399, 396, 1068, 395,
	0, 0, 1069, 400, 0, 563, 401, 564, 403, 404,
	0, 0, 405, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 411, 565, 1070, 412, 1071, 566, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 569, 425, 570, 426, 427, 0,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 571,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 1072, 452, 453, 454, 455, 572,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 0, 472, 473, 471, 474, 475, 476,
	0, 477, 461, 462, 478, 479, 1073, 480, 481, 482,
	483, 484, 485, 573, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 574, 492, 493, 494, 495, 575,
	0, 498, 499, 0, 497, 0, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 576, 577, 578, 579,
	0, 514, 0, 508, 509, 580, 510, 581, 0, 511,
	512, 513, 0, 515, 516, 0, 0, 517, 518, 519,
	521, 522, 520, 523, 0, 524, 0, 0, 525, 526,
	527, 582, 583, 584, 1300, 529, 528, 585, 0, 0,
	0, 0, 530, 531, 586, 532, 533, 534, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 535, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 536, 537,
	0, 265, 538, 266, 539, 0, 540, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 541, 542, 543, 0,
	273, 274, 544, 0, 1266, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 0, 292, 1058,
	293, 294, 0, 0, 0, 0, 0, 0, 0, 295,
	296, 297, 298, 0, 299, 545, 546, 0, 303, 300,
	301, 0, 304, 302, 0, 305, 306, 307, 0, 0,
	308, 309, 310, 0, 311, 312, 0, 313, 314, 315,
	0, 316, 317, 547, 318, 319, 320, 322, 324, 321,
	325, 326, 327, 328, 548, 549, 0, 246, 0, 0,
	0, 0, 0, 329, 330, 331, 550, 0, 0, 0,
	332, 0, 333, 0, 0, 1059, 334, 335, 551, 552,
	336, 337, 0, 338, 553, 0, 554, 339, 0, 340,
	341, 342, 343, 344, 555, 556, 557, 402, 1061, 345,
	346, 0, 347, 348, 349, 350, 0, 0, 0, 0,
	351, 352, 354, 0, 1060, 353, 558, 559, 0, 560,
	0, 355, 356, 1062, 561, 1063, 357, 358, 359, 1064,
	360, 0, 0, 0, 361, 362, 363, 364, 365, 366,
	0, 367, 369, 368, 0, 370, 562, 1065, 371, 372,
	1066, 0, 373, 374, 375, 0, 0, 376, 377, 378,
	379, 0, 380, 381, 383, 385, 382, 384, 389, 386,
	387, 388, 391, 0, 390, 1067, 392, 393, 394, 398,
	397, 399, 396, 1068, 395, 0, 0, 1069, 400, 0,
	563, 401, 564, 403, 404, 0, 0, 405, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 411, 565, 1070,
	412, 1071, 566, 413, 414, 406, 415, 416, 417, 418,
	419, 420, 421, 422, 0, 423, 424, 567, 568, 569,
	425, 570, 426, 427, 0, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 571, 437, 436, 438, 0, 439,
	0, 0, 0, 0, 0, 440, 0, 442, 443, 444,
	441, 445, 446, 447, 448, 0, 449, 450, 451, 1072,
	452, 453, 454, 455, 572, 456, 0, 457, 458, 464,
	465, 459, 460, 466, 467, 468, 469, 470, 0, 472,
	473, 471, 474, 475, 476, 0, 477, 461, 462, 478,
	479, 1073, 480, 481, 482, 483, 484, 485, 573, 0,
	486, 0, 487, 488, 489, 490, 463, 491, 496, 574,
	492, 493, 494, 495, 575, 0, 498, 499, 0, 497,
	0, 500, 501, 502, 503, 504, 505, 323, 506, 0,
	507, 576, 577, 578, 579, 0, 514, 0, 508, 509,
	580, 510, 581, 0, 511, 512, 513, 0, 515, 516,
	0, 0, 517, 518, 519, 521, 522, 520, 523, 0,
	524, 0, 0, 525, 526, 527, 582, 583, 584, 243,
	529, 528, 585, 0, 0, 0, 0, 530, 531, 586,
	532, 533, 534, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	535, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 537, 0, 265, 538, 266, 539,
	0, 540, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 541, 542, 543, 2509, 273, 274, 544, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 2506, 286, 0, 287, 288, 289,
	290, 291, 0, 292, 0, 293, 294, 0, 0, 0,
	0, 0, 0, 0, 295, 296, 297, 298, 0, 299,
	545, 546, 0, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 0, 0, 308, 309, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 2513, 317, 547, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 548,
	549, 0, 2702, 0, 0, 0, 0, 0, 329, 330,
	331, 550, 0, 0, 0, 332, 0, 333, 2512, 0,
	0, 334, 335, 551, 552, 336, 337, 0, 338, 553,
	0, 554, 339, 0, 340, 341, 342, 343, 344, 555,
	556, 557, 402, 0, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 2699, 351, 352, 354, 0, 0,
	353, 558, 559, 0, 560, 0, 355, 2701, 0, 561,
	0, 357, 358, 359, 0, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 0, 367, 369, 368, 0,
	370, 562, 0, 371, 372, 2698, 0, 373, 374, 375,
	0, 0, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	0, 392, 393, 394, 398, 397, 399, 396, 0, 395,
	0, 0, 0, 400, 0, 563, 401, 564, 403, 404,
	0, 0, 405, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 411, 565, 0, 412, 0, 566, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 569, 425, 570, 426, 427, 2511,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 571,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 572,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 0, 472, 473, 471, 474, 475, 476,
	0, 477, 461, 462, 478, 479, 0, 480, 481, 482,
	483, 484, 485, 573, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 574, 492, 493, 494, 495, 575,
	0, 498, 499, 0, 497, 0, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 576, 577, 578, 579,
	0, 514, 0, 508, 509, 580, 510, 581, 0, 511,
	512, 513, 0, 515, 516, 0, 2700, 517, 518, 519,
	521, 522, 520, 523, 0, 524, 0, 0, 525, 526,
	527, 582, 583, 584, 243, 529, 528, 585, 0, 0,
	0, 0, 530, 531, 586, 532, 533, 534, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 535, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 536, 537,
	0, 265, 538, 266, 539, 0, 540, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 541, 542, 543, 2509,
	273, 274, 544, 0, 0, 2503, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 2506,
	286, 0, 287, 288, 289, 290, 291, 0, 292, 0,
	293, 294, 0, 0, 0, 0, 0, 0, 0, 295,
	296, 297, 298, 0, 299, 545, 546, 0, 303, 300,
	301, 0, 304, 302, 0, 305, 306, 307, 0, 0,
	308, 309, 310, 0, 311, 312, 0, 313, 314, 315,
	0, 2513, 317, 547, 318, 319, 320, 322, 324, 321,
	325, 326, 327, 328, 548, 549, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 331, 550, 0, 0, 0,
	332, 0, 333, 2512, 0, 0, 334, 335, 551, 552,
	336, 337, 0, 338, 553, 0, 554, 339, 0, 340,
	341, 342, 343, 344, 2502, 556, 557, 402, 0, 345,
	346, 0, 347, 348, 349, 350, 0, 0, 0, 0,
	351, 352, 354, 0, 0, 353, 558, 559, 0, 560,
	0, 355, 356, 0, 561, 0, 357, 358, 359, 0,
	360, 0, 0, 0, 361, 362, 363, 364, 365, 366,
	0, 367, 369, 368, 0, 370, 562, 0, 371, 372,
	0, 0, 373, 374, 375, 0, 0, 376, 377, 378,
	379, 0, 380, 381, 383, 385, 382, 384, 389, 386,
	387, 388, 391, 0, 390, 0, 392, 393, 394, 398,
	397, 399, 396, 0, 395, 0, 0, 0, 400, 0,
	563, 401, 564, 403, 404, 0, 0, 405, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 411, 565, 0,
	412, 0, 566, 413, 414, 406, 415, 416, 417, 418,
	419, 420, 421, 422, 0, 423, 424, 567, 568, 569,
	425, 570, 426, 427, 2511, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 571, 437, 436, 438, 0, 439,
	0, 0, 0, 0, 0, 440, 0, 442, 443, 444,
	441, 445, 446, 447, 448, 0, 449, 450, 451, 0,
	452, 453, 454, 455, 572, 456, 0, 457, 458, 464,
	465, 459, 460, 466, 467, 468, 469, 470, 0, 472,
	473, 471, 474, 475, 476, 0, 477, 461, 462, 478,
	479, 0, 480, 481, 482, 483, 484, 485, 573, 0,
	486, 0, 487, 488, 489, 490, 463, 491, 496, 574,
	492, 493, 494, 495, 575, 0, 498, 499, 0, 497,
	0, 500, 501, 502, 503, 504, 505, 323, 506, 0,
	507, 576, 577, 578, 579, 0, 514, 0, 508, 509,
	580, 510, 581, 0, 511, 512, 513, 0, 515, 516,
	0, 2510, 517, 518, 519, 521, 522, 520, 523, 0,
	524, 0, 0, 525, 526, 527, 582, 583, 584, 0,
	529, 528, 585, 1566, 0, 243, 0, 530, 531, 586,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 535, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 536,
	537, 0, 265, 538, 266, 539, 0, 540, 267, 268,
	269, 270, 271, 0, 0, 0, 272, 541, 542, 543,
	0, 273, 274, 544, 0, 0, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 0, 292,
	0, 293, 294, 0, 0, 0, 0, 0, 0, 0,
	295, 296, 297, 298, 0, 299, 545, 546, 0, 303,
	300, 301, 0, 304, 302, 0, 305, 306, 307, 0,
	0, 308, 309, 310, 0, 311, 312, 0, 313, 314,
	315, 0, 316, 317, 547, 318, 319, 320, 322, 324,
	321, 325, 326, 327, 328, 548, 549, 0, 246, 0,
	0, 0, 0, 0, 329, 330, 331, 550, 0, 0,
	0, 332, 0, 333, 0, 0, 0, 334, 335, 551,
	552, 336, 337, 0, 338, 553, 0, 554, 339, 0,
	340, 341, 342, 343, 344, 555, 556, 557, 402, 0,
	345, 346, 0, 347, 348, 349, 350, 0, 0, 0,
	247, 351, 352, 354, 0, 0, 353, 558, 559, 0,
	560, 0, 355, 356, 0, 561, 0, 357, 358, 359,
	0, 360, 0, 0, 0, 361, 362, 363, 364, 365,
	366, 0, 367, 369, 368, 0, 370, 562, 0, 371,
	372, 0, 0, 373, 374, 375, 0, 0, 376, 377,
	378, 379, 0, 380, 381, 383, 385, 382, 384, 389,
	386, 387, 388, 391, 0, 390, 0, 392, 393, 394,
	398, 397, 399, 396, 0, 395, 0, 248, 0, 400,
	0, 563, 401, 564, 403, 404, 0, 0, 405, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 411, 565,
	0, 412, 0, 566, 413, 414, 406, 415, 416, 417,
	418, 419, 420, 421, 422, 0, 423, 424, 567, 568,
	569, 425, 570, 426, 427, 0, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 571, 437, 436, 438, 0,
	439, 0, 0, 0, 0, 0, 440, 0, 442, 443,
	444, 441, 445, 446, 447, 448, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 572, 456, 0, 457, 458,
	464, 465, 459, 460, 466, 467, 468, 469, 470, 0,
	1569, 473, 471, 474, 475, 476, 0, 477, 461, 462,
	478, 479, 0, 480, 481, 482, 483, 484, 485, 573,
	0, 486, 0, 487, 488, 489, 490, 463, 491, 496,
	574, 492, 493, 494, 495, 575, 0, 498, 499, 0,
	497, 1567, 500, 501, 502, 503, 504, 505, 323, 506,
	0, 507, 576, 577, 578, 579, 0, 514, 0, 508,
	509, 580, 510, 581, 0, 511, 512, 513, 0, 515,
	516, 0, 0, 517, 518, 519, 521, 522, 520, 523,
	0, 524, 0, 0, 525, 526, 527, 582, 583, 584,
	0, 1568, 528, 585, 1270, 0, 243, 0, 530, 531,
	586, 532, 533, 534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 535, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 537, 0, 265, 538, 266, 539, 0, 540, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 541, 542,
	543, 0, 273, 274, 544, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 0, 293, 294, 0, 0, 0, 0, 0, 0,
	0, 295, 296, 297, 298, 0, 299, 545, 546, 0,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 309, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 547, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 548, 549, 0, 246,
	0, 0, 0, 0, 0, 329, 330, 331, 550, 0,
	0, 0, 332, 0, 333, 0, 0, 0, 334, 335,
	551, 552, 336, 337, 0, 338, 553, 0, 554, 339,
	0, 340, 341, 342, 343, 344, 1272, 556, 557, 402,
	0, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 247, 351, 352, 354, 0, 0, 353, 558, 559,
	0, 560, 0, 355, 356, 0, 561, 0, 357, 358,
	359, 0, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 562, 0,
	371, 372, 0, 0, 373, 374, 375, 0, 0, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 0, 392, 393,
	394, 398, 397, 399, 396, 0, 395, 0, 248, 0,
	400, 0, 563, 401, 564, 403, 404, 0, 0, 405,
	0, 0, 1107, 407, 408, 409, 0, 0, 410, 411,
	565, 0, 412, 0, 566, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 569, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 571, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 0, 452, 453, 454, 455, 572, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 0, 477, 461,
	462, 478, 479, 0, 480, 481, 482, 483, 484, 485,
	573, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 574, 492, 493, 494, 495, 575, 0, 498, 499,
	0, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 576, 577, 578, 579, 0, 514, 0,
	508, 509, 580, 510, 581, 0, 511, 512, 513, 0,
	515, 516, 0, 0, 517, 518, 519, 521, 522, 520,
	523, 0, 524, 0, 0, 525, 526, 527, 582, 583,
	584, 0, 529, 528, 585, 1267, 0, 243, 0, 530,
	531, 586, 532, 533, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 535, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 536, 537, 0, 265, 538, 266, 539, 0, 540,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 541,
	542, 543, 0, 273, 274, 544, 0, 0, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	0, 292, 0, 293, 294, 0, 0, 0, 0, 0,
	0, 0, 295, 296, 297, 298, 0, 299, 545, 546,
	0, 303, 300, 301, 0, 304, 302, 0, 305, 306,
	307, 0, 0, 308, 309, 310, 0, 311, 312, 0,
	313, 314, 315, 0, 316, 317, 547, 318, 319, 320,
	322, 324, 321, 325, 326, 327, 328, 548, 549, 0,
	246, 0, 0, 0, 0, 0, 329, 330, 331, 550,
	0, 0, 0, 332, 0, 333, 0, 0, 0, 334,
	335, 551, 552, 336, 337, 0, 338, 553, 0, 554,
	339, 0, 340, 341, 342, 343, 344, 1269, 556, 557,
	402, 0, 345, 346, 0, 347, 348, 349, 350, 0,
	0, 0, 247, 351, 352, 354, 0, 0, 353, 558,
	559, 0, 560, 0, 355, 356, 0, 561, 0, 357,
	358, 359, 0, 360, 0, 0, 0, 361, 362, 363,
	364, 365, 366, 0, 367, 369, 368, 0, 370, 562,
	0, 371, 372, 0, 0, 373, 374, 375, 0, 0,
	376, 377, 378, 379, 0, 380, 381, 383, 385, 382,
	384, 389, 386, 387, 388, 391, 0, 390, 0, 392,
	393, 394, 398, 397, 399, 396, 0, 395, 0, 248,
	0, 400, 0, 563, 401, 564, 403, 404, 0, 0,
	405, 0, 0, 1107, 407, 408, 409, 0, 0, 410,
	411, 565, 0, 412, 0, 566, 413, 414, 406, 415,
	416, 417, 418, 419, 420, 421, 422, 0, 423, 424,
	567, 568, 569, 425, 570, 426, 427, 0, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 571, 437, 436,
	438, 0, 439, 0, 0, 0, 0, 0, 440, 0,
	442, 443, 444, 441, 445, 446, 447, 448, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 572, 456, 0,
	457, 458, 464, 465, 459, 460, 466, 467, 468, 469,
	470, 0, 472, 473, 471, 474, 475, 476, 0, 477,
	461, 462, 478, 479, 0, 480, 481, 482, 483, 484,
	485, 573, 0, 486, 0, 487, 488, 489, 490, 463,
	491, 496, 574, 492, 493, 494, 495, 575, 0, 498,
	499, 0, 497, 0, 500, 501, 502, 503, 504, 505,
	323, 506, 0, 507, 576, 577, 578, 579, 0, 514,
	0, 508, 509, 580, 510, 581, 0, 511, 512, 513,
	0, 515, 516, 0, 0, 517, 518, 519, 521, 522,
	520, 523, 0, 524, 0, 0, 525, 526, 527, 582,
	583, 584, 0, 529, 528, 585, 1173, 0, 243, 0,
	530, 531, 586, 532, 533, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 274, 544, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 0, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 297, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 246, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 0,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 1175, 556,
	557, 402, 0, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 247, 351, 352, 354, 0, 0, 353,
	558, 559, 0, 560, 0, 355, 356, 0, 561, 0,
	357, 358, 359, 0, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 0, 371, 372, 0, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 0,
	392, 393, 394, 398, 397, 399, 396, 0, 395, 0,
	248, 0, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 1107, 407, 408, 409, 0, 0,
	410, 411, 565, 0, 412, 0, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 0, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 0, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	582, 583, 584, 0, 529, 528, 585, 618, 0, 243,
	0, 530, 531, 586, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 617,
	253, 254, 607, 255, 256, 0, 0, 0, 0, 0,
	535, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 537, 0, 265, 538, 266, 539,
	0, 540, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 541, 542, 543, 0, 273, 274, 544, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 610, 292, 0, 293, 294, 0, 0, 0,
	0, 0, 0, 0, 295, 296, 297, 298, 0, 299,
	545, 546, 0, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 0, 0, 308, 309, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 316, 317, 547, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 548,
	549, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	331, 550, 0, 0, 0, 332, 0, 333, 0, 0,
	0, 334, 335, 551, 552, 336, 337, 611, 338, 553,
	0, 554, 339, 0, 340, 341, 342, 343, 344, 555,
	556, 557, 402, 0, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 0, 351, 352, 354, 0, 0,
	353, 558, 559, 0, 560, 0, 355, 356, 0, 561,
	0, 357, 358, 359, 0, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 0, 367, 369, 368, 0,
	370, 562, 0, 371, 372, 0, 0, 373, 374, 375,
	0, 0, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	0, 392, 393, 394, 398, 397, 399, 396, 0, 395,
	0, 0, 0, 400, 0, 563, 401, 564, 403, 404,
	0, 0, 405, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 411, 565, 0, 412, 0, 566, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 569, 425, 570, 426, 427, 0,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 571,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 572,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 612, 472, 473, 471, 474, 475, 476,
	0, 477, 461, 462, 478, 479, 0, 480, 481, 482,
	483, 484, 485, 573, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 574, 492, 493, 494, 495, 575,
	0, 498, 499, 0, 497, 0, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 576, 577, 578, 579,
	0, 514, 0, 508, 509, 580, 510, 581, 0, 511,
	512, 513, 0, 515, 516, 0, 0, 517, 518, 519,
	521, 522, 520, 523, 0, 524, 0, 0, 525, 526,
	527, 582, 583, 584, 0, 529, 528, 585, 606, 0,
	243, 0, 530, 531, 586, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 607, 255, 256, 0, 0, 0, 0,
	0, 535, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 537, 0, 265, 538, 266,
	539, 0, 540, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 541, 542, 543, 0, 273, 274, 544, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 610, 292, 0, 293, 294, 0, 0,
	0, 0, 0, 0, 0, 295, 296, 297, 298, 0,
	299, 545, 546, 0, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 309, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 547,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	548, 549, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 331, 550, 0, 0, 0, 332, 0, 333, 0,
	0, 0, 334, 335, 551, 552, 336, 337, 611, 338,
	553, 0, 554, 339, 0, 340, 341, 342, 343, 344,
	555, 556, 557, 402, 0, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 0, 351, 352, 354, 0,
	0, 353, 558, 559, 0, 560, 0, 355, 356, 0,
	561, 0, 357, 358, 359, 0, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 0, 367, 369, 368,
	0, 370, 562, 0, 371, 372, 0, 0, 373, 374,
	375, 0, 0, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 0, 392, 393, 394, 398, 397, 399, 396, 0,
	395, 0, 0, 0, 400, 0, 563, 401, 564, 403,
	404, 0, 0, 405, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 411, 565, 0, 412, 0, 566, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 569, 425, 570, 426, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	571, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 0, 452, 453, 454, 455,
	572, 456, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 612, 472, 473, 471, 474, 475,
	476, 0, 477, 461, 462, 478, 479, 0, 480, 481,
	482, 483, 484, 485, 573, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 574, 492, 493, 494, 495,
	575, 0, 498, 499, 0, 497, 0, 500, 501, 502,
	503, 504, 505, 323, 506, 0, 507, 576, 577, 578,
	579, 0, 514, 0, 508, 509, 580, 510, 581, 0,
	511, 512, 513, 0, 515, 516, 0, 0, 517, 518,
	519, 521, 522, 520, 523, 0, 524, 0, 0, 525,
	526, 527, 582, 583, 584, 243, 529, 528, 585, 0,
	0, 0, 0, 530, 531, 586, 532, 533, 534, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 535, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 536,
	537, 0, 265, 538, 266, 539, 0, 540, 267, 268,
	269, 270, 271, 0, 0, 0, 272, 541, 542, 543,
	0, 273, 274, 544, 0, 0, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 0, 292,
	0, 293, 294, 0, 0, 0, 0, 0, 0, 0,
	295, 296, 297, 298, 0, 299, 545, 546, 0, 303,
	300, 301, 0, 304, 302, 0, 305, 306, 307, 0,
	0, 308, 309, 310, 0, 311, 312, 0, 313, 314,
	315, 0, 316, 317, 547, 318, 319, 320, 322, 324,
	321, 325, 326, 327, 328, 548, 549, 0, 246, 0,
	0, 0, 0, 0, 329, 330, 331, 550, 0, 0,
	0, 332, 0, 333, 0, 0, 0, 334, 335, 551,
	552, 336, 337, 0, 338, 553, 0, 554, 339, 0,
	340, 341, 342, 343, 344, 555, 556, 557, 402, 0,
	345, 346, 0, 347, 348, 349, 350, 0, 0, 0,
	247, 351, 352, 354, 0, 0, 353, 558, 559, 0,
	560, 0, 355, 356, 0, 561, 0, 357, 358, 359,
	0, 360, 0, 0, 0, 361, 362, 363, 364, 365,
	366, 0, 367, 369, 368, 0, 370, 562, 0, 371,
	372, 0, 0, 373, 374, 375, 0, 0, 376, 377,
	378, 379, 0, 380, 381, 383, 385, 382, 384, 389,
	386, 387, 388, 391, 0, 390, 0, 392, 393, 394,
	398, 397, 399, 396, 0, 395, 0, 248, 0, 400,
	0, 563, 401, 564, 403, 404, 0, 0, 405, 0,
	0, 1107, 407, 408, 409, 0, 0, 410, 411, 565,
	0, 412, 0, 566, 413, 414, 406, 415, 416, 417,
	418, 419, 420, 421, 422, 0, 423, 424, 567, 568,
	569, 425, 570, 426, 427, 0, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 571, 437, 436, 438, 0,
	439, 0, 0, 0, 0, 0, 440, 0, 442, 443,
	444, 441, 445, 446, 447, 448, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 572, 456, 0, 457, 458,
	464, 465, 459, 460, 466, 467, 468, 469, 470, 0,
	472, 473, 471, 474, 475, 476, 0, 477, 461, 462,
	478, 479, 0, 480, 481, 482, 483, 484, 485, 573,
	0, 486, 0, 487, 488, 489, 490, 463, 491, 496,
	574, 492, 493, 494, 495, 575, 0, 498, 499, 0,
	497, 0, 500, 501, 502, 503, 504, 505, 323, 506,
	0, 507, 576, 577, 578, 579, 0, 514, 0, 508,
	509, 580, 510, 581, 0, 511, 512, 513, 0, 515,
	516, 0, 0, 517, 518, 519, 521, 522, 520, 523,
	0, 524, 0, 0, 525, 526, 527, 582, 583, 584,
	243, 529, 528, 585, 0, 0, 0, 0, 530, 531,
	586, 532, 533, 534, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 535, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 537, 0, 265, 538, 266,
	539, 0, 540, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 541, 542, 543, 0, 273, 274, 544, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 0, 292, 0, 293, 294, 0, 0,
	0, 0, 0, 0, 0, 295, 296, 297, 298, 0,
	299, 545, 546, 0, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 309, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 547,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	548, 549, 0, 246, 0, 0, 0, 0, 0, 329,
	330, 331, 550, 0, 0, 0, 332, 0, 333, 0,
	0, 0, 334, 335, 551, 552, 336, 337, 0, 338,
	553, 0, 554, 339, 0, 340, 341, 342, 343, 344,
	555, 556, 557, 402, 0, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 247, 351, 352, 354, 0,
	0, 353, 558, 559, 0, 560, 0, 355, 356, 0,
	561, 0, 357, 358, 359, 0, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 0, 367, 369, 368,
	0, 370, 562, 0, 371, 372, 0, 0, 373, 374,
	375, 0, 0, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 0, 392, 393, 394, 398, 397, 399, 396, 3055,
	395, 0, 248, 0, 400, 0, 563, 401, 564, 403,
	404, 0, 0, 405, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 411, 565, 0, 412, 0, 566, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 569, 425, 570, 426, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	571, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 0, 452, 453, 454, 455,
	572, 456, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 0, 477, 461, 462, 478, 479, 0, 480, 481,
	482, 483, 484, 485, 573, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 574, 492, 493, 494, 495,
	575, 0, 498, 499, 0, 497, 0, 500, 501, 502,
	503, 504, 505, 323, 506, 0, 507, 576, 577, 578,
	579, 0, 514, 0, 508, 509, 580, 510, 581, 0,
	511, 512, 513, 0, 515, 516, 0, 0, 517, 518,
	519, 521, 522, 520, 523, 0, 524, 0, 0, 525,
	526, 527, 582, 583, 584, 0, 529, 528, 585, 2631,
	0, 243, 0, 530, 531, 586, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 537, 0, 265, 538,
	266, 539, 0, 540, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 541, 542, 543, 0, 273, 274, 544,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 0, 293, 294, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 297, 298,
	0, 299, 545, 546, 0, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 309, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	547, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 548, 549, 0, 246, 0, 0, 0, 0, 0,
	329, 330, 331, 550, 0, 0, 0, 332, 0, 333,
	0, 0, 0, 334, 335, 551, 552, 336, 337, 0,
	338, 553, 0, 554, 339, 0, 340, 341, 342, 343,
	344, 2630, 556, 557, 402, 0, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 247, 351, 352, 354,
	0, 0, 353, 558, 559, 0, 560, 0, 355, 356,
	0, 561, 0, 357, 358, 359, 0, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 562, 0, 371, 372, 0, 0, 373,
	374, 375, 0, 0, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 0, 392, 393, 394, 398, 397, 399, 396,
	0, 395, 0, 248, 0, 400, 0, 563, 401, 564,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 0, 412, 0, 566,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 569, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 571, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 572, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 0, 477, 461, 462, 478, 479, 0, 480,
	481, 482, 483, 484, 485, 573, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 574, 492, 493, 494,
	495, 575, 0, 498, 499, 0, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 576, 577,
	578, 579, 0, 514, 0, 508, 509, 580, 510, 581,
	0, 511, 512, 513, 0, 515, 516, 0, 0, 517,
	518, 519, 521, 522, 520, 523, 0, 524, 0, 0,
	525, 526, 527, 582, 583, 584, 0, 529, 528, 585,
	2087, 0, 243, 0, 530, 531, 586, 532, 533, 534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 536, 537, 0, 265,
	538, 266, 539, 0, 540, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 541, 542, 543, 0, 273, 274,
	544, 0, 0, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 0, 292, 0, 293, 294,
	0, 0, 0, 0, 0, 0, 0, 295, 296, 297,
	298, 0, 299, 545, 546, 0, 303, 300, 301, 0,
	304, 302, 0, 305, 306, 307, 0, 0, 308, 309,
	310, 0, 311, 312, 0, 313, 314, 315, 0, 316,
	317, 547, 318, 319, 320, 322, 324, 321, 325, 326,
	327, 328, 548, 549, 0, 246, 0, 0, 0, 0,
	0, 329, 330, 331, 550, 0, 0, 0, 332, 0,
	333, 0, 0, 0, 334, 335, 551, 552, 336, 337,
	0, 338, 553, 0, 554, 339, 0, 340, 341, 342,
	343, 344, 555, 556, 557, 402, 0, 345, 346, 0,
	347, 348, 349, 350, 0, 0, 0, 247, 351, 352,
	354, 0, 0, 353, 558, 559, 0, 560, 0, 355,
	356, 0, 561, 0, 357, 358, 359, 0, 360, 0,
	0, 0, 361, 362, 363, 364, 365, 366, 0, 367,
	369, 368, 0, 370, 562, 0, 371, 372, 0, 0,
	373, 374, 375, 0, 0, 376, 377, 378, 379, 0,
	380, 381, 383, 385, 382, 384, 389, 386, 387, 388,
	391, 0, 390, 0, 392, 393, 394, 398, 397, 399,
	396, 0, 395, 0, 248, 0, 400, 0, 563, 401,
	564, 403, 404, 0, 0, 405, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 411, 565, 0, 412, 0,
	566, 413, 414, 406, 415, 416, 417, 418, 419, 420,
	421, 422, 0, 423, 424, 567, 568, 569, 425, 570,
	426, 427, 0, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 571, 437, 436, 438, 0, 439, 0, 0,
	0, 0, 0, 440, 0, 442, 443, 444, 441, 445,
	446, 447, 448, 0, 449, 450, 451, 0, 452, 453,
	454, 455, 572, 456, 0, 457, 458, 464, 465, 459,
	460, 466, 467, 468, 469, 470, 0, 472, 473, 471,
	474, 475, 476, 0, 477, 461, 462, 478, 479, 0,
	480, 481, 482, 483, 484, 485, 573, 0, 486, 0,
	487, 488, 489, 490, 463, 491, 496, 574, 492, 493,
	494, 495, 575, 0, 498, 499, 0, 497, 0, 500,
	501, 502, 503, 504, 505, 323, 506, 0, 507, 576,
	577, 578, 579, 0, 514, 0, 508, 509, 580, 510,
	581, 0, 511, 512, 513, 0, 515, 516, 0, 0,
	517, 518, 519, 521, 522, 520, 523, 0, 524, 0,
	0, 525, 526, 527, 582, 583, 584, 243, 529, 528,
	585, 0, 0, 0, 0, 530, 531, 586, 532, 533,
	534, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 535, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 536, 537, 0, 265, 538, 266, 539, 0, 540,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 541,
	542, 543, 0, 273, 274, 544, 0, 0, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	0, 292, 0, 293, 294, 0, 0, 0, 0, 0,
	0, 0, 295, 296, 297, 298, 0, 299, 545, 546,
	0, 303, 300, 301, 0, 304, 302, 0, 305, 306,
	307, 0, 0, 308, 309, 310, 0, 311, 312, 0,
	313, 314, 315, 0, 316, 317, 547, 318, 319, 320,
	322, 324, 321, 325, 326, 327, 328, 548, 549, 0,
	246, 0, 0, 0, 0, 0, 329, 330, 331, 550,
	0, 0, 0, 332, 0, 333, 0, 0, 0, 334,
	335, 551, 552, 336, 337, 0, 338, 553, 0, 554,
	339, 0, 340, 341, 342, 343, 344, 555, 556, 557,
	402, 0, 345, 346, 0, 347, 348, 349, 350, 0,
	0, 0, 247, 351, 352, 354, 0, 0, 353, 558,
	559, 0, 560, 0, 355, 356, 0, 561, 0, 357,
	358, 359, 0, 360, 0, 0, 0, 361, 362, 363,
	364, 365, 366, 0, 367, 369, 368, 0, 370, 562,
	0, 371, 372, 0, 0, 373, 374, 375, 0, 0,
	376, 377, 378, 379, 0, 380, 381, 383, 385, 382,
	384, 389, 386, 387, 388, 391, 0, 390, 0, 392,
	393, 394, 398, 397, 399, 396, 0, 395, 0, 248,
	0, 400, 0, 563, 401, 564, 403, 404, 0, 0,
	405, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	411, 565, 0, 412, 0, 566, 413, 414, 406, 415,
	416, 417, 418, 419, 420, 421, 422, 0, 423, 424,
	567, 568, 569, 425, 570, 426, 427, 0, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 571, 437, 436,
	438, 0, 439, 0, 0, 0, 0, 0, 440, 0,
	442, 443, 444, 441, 445, 446, 447, 448, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 572, 456, 0,
	457, 458, 464, 465, 459, 460, 466, 467, 468, 469,
	470, 0, 472, 473, 471, 474, 475, 476, 0, 477,
	461, 462, 478, 479, 0, 480, 481, 482, 483, 484,
	485, 573, 0, 486, 0, 487, 488, 489, 490, 463,
	491, 496, 574, 492, 493, 494, 495, 575, 0, 498,
	499, 0, 497, 2004, 500, 501, 502, 503, 504, 505,
	323, 506, 0, 507, 576, 577, 578, 579, 0, 514,
	0, 508, 509, 580, 510, 581, 0, 511, 512, 513,
	0, 515, 516, 0, 0, 517, 518, 519, 521, 522,
	520, 523, 0, 524, 0, 0, 525, 526, 527, 582,
	583, 584, 0, 529, 528, 585, 2009, 0, 243, 0,
	530, 531, 586, 532, 533, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 274, 544, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 0, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 297, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 246, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 0,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 2008, 556,
	557, 402, 0, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 247, 351, 352, 354, 0, 0, 353,
	558, 559, 0, 560, 0, 355, 356, 0, 561, 0,
	357, 358, 359, 0, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 0, 371, 372, 0, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 0,
	392, 393, 394, 398, 397, 399, 396, 0, 395, 0,
	248, 0, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 0, 412, 0, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 0, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 0, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	582, 583, 584, 0, 529, 528, 585, 1997, 0, 243,
	0, 530, 531, 586, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	535, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 537, 0, 265, 538, 266, 539,
	0, 540, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 541, 542, 543, 0, 273, 274, 544, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 0, 292, 0, 293, 294, 0, 0, 0,
	0, 0, 0, 0, 295, 296, 297, 298, 0, 299,
	545, 546, 0, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 0, 0, 308, 309, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 316, 317, 547, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 548,
	549, 0, 246, 0, 0, 0, 0, 0, 329, 330,
	331, 550, 0, 0, 0, 332, 0, 333, 0, 0,
	0, 334, 335, 551, 552, 336, 337, 0, 338, 553,
	0, 554, 339, 0, 340, 341, 342, 343, 344, 1999,
	556, 557, 402, 0, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 247, 351, 352, 354, 0, 0,
	353, 558, 559, 0, 560, 0, 355, 356, 0, 561,
	0, 357, 358, 359, 0, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 0, 367, 369, 368, 0,
	370, 562, 0, 371, 372, 0, 0, 373, 374, 375,
	0, 0, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	0, 392, 393, 394, 398, 397, 399, 396, 0, 395,
	0, 248, 0, 400, 0, 563, 401, 564, 403, 404,
	0, 0, 405, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 411, 565, 0, 412, 0, 566, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 569, 425, 570, 426, 427, 0,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 571,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 572,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 0, 472, 473, 471, 474, 475, 476,
	0, 477, 461, 462, 478, 479, 0, 480, 481, 482,
	483, 484, 485, 573, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 574, 492, 493, 494, 495, 575,
	0, 498, 499, 0, 497, 0, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 576, 577, 578, 579,
	0, 514, 0, 508, 509, 580, 510, 581, 0, 511,
	512, 513, 0, 515, 516, 0, 0, 517, 518, 519,
	521, 522, 520, 523, 0, 524, 0, 0, 525, 526,
	527, 582, 583, 584, 243, 529, 528, 585, 0, 0,
	0, 0, 530, 531, 586, 532, 533, 534, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 535, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 536, 537,
	0, 265, 538, 266, 539, 0, 540, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 541, 542, 543, 0,
	273, 274, 544, 0, 0, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 0, 292, 0,
	293, 294, 0, 0, 0, 0, 0, 0, 0, 295,
	296, 297, 298, 0, 299, 545, 546, 0, 303, 300,
	301, 0, 304, 302, 0, 305, 306, 307, 0, 0,
	308, 309, 310, 0, 311, 312, 0, 313, 314, 315,
	0, 316, 317, 547, 318, 319, 320, 322, 324, 321,
	325, 326, 327, 328, 548, 549, 0, 246, 0, 0,
	0, 0, 0, 329, 330, 331, 550, 0, 0, 0,
	332, 0, 333, 0, 0, 0, 334, 335, 551, 552,
	336, 337, 0, 338, 553, 0, 554, 339, 0, 340,
	341, 342, 343, 344, 1968, 556, 557, 402, 0, 345,
	346, 0, 347, 348, 349, 350, 0, 0, 0, 247,
	351, 352, 354, 0, 0, 353, 558, 559, 0, 560,
	0, 355, 356, 0, 561, 0, 357, 358, 359, 0,
	360, 0, 0, 0, 361, 362, 363, 364, 365, 366,
	0, 367, 369, 368, 0, 370, 562, 0, 371, 372,
	0, 0, 373, 374, 375, 0, 0, 376, 377, 378,
	379, 0, 380, 381, 383, 385, 382, 384, 389, 386,
	387, 388, 391, 0, 390, 0, 392, 393, 394, 398,
	397, 399, 396, 0, 395, 0, 248, 0, 400, 0,
	563, 401, 564, 403, 404, 0, 0, 405, 0, 0,
	1107, 407, 408, 409, 0, 0, 410, 411, 565, 0,
	412, 0, 566, 413, 414, 406, 415, 416, 417, 418,
	419, 420, 421, 422, 0, 423, 424, 567, 568, 569,
	425, 570, 426, 427, 0, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 571, 437, 436, 438, 0, 439,
	0, 0, 0, 0, 0, 440, 0, 442, 443, 444,
	441, 445, 446, 447, 448, 0, 449, 450, 451, 0,
	452, 453, 454, 455, 572, 456, 0, 457, 458, 464,
	465, 459, 460, 466, 467, 468, 469, 470, 0, 472,
	473, 471, 474, 475, 476, 0, 477, 461, 462, 478,
	479, 0, 480, 481, 482, 483, 484, 485, 573, 0,
	486, 0, 487, 488, 489, 490, 463, 491, 496, 574,
	492, 493, 494, 495, 575, 0, 498, 499, 0, 497,
	0, 500, 501, 502, 503, 504, 505, 323, 506, 0,
	507, 576, 577, 578, 579, 0, 514, 0, 508, 509,
	580, 510, 581, 0, 511, 512, 513, 0, 515, 516,
	0, 0, 517, 518, 519, 521, 522, 520, 523, 0,
	524, 0, 0, 525, 526, 527, 582, 583, 584, 0,
	529, 528, 585, 1433, 0, 243, 0, 530, 531, 586,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 535, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 536,
	537, 0, 265, 538, 266, 539, 0, 540, 267, 268,
	269, 270, 271, 0, 0, 0, 272, 541, 542, 543,
	0, 273, 274, 544, 0, 0, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 0, 292,
	0, 293, 294, 0, 0, 0, 0, 0, 0, 0,
	295, 296, 297, 298, 0, 299, 545, 546, 0, 303,
	300, 301, 0, 304, 302, 0, 305, 306, 307, 0,
	0, 308, 309, 310, 0, 311, 312, 0, 313, 314,
	315, 0, 316, 317, 547, 318, 319, 320, 322, 324,
	321, 325, 326, 327, 328, 548, 549, 0, 246, 0,
	0, 0, 0, 0, 329, 330, 331, 550, 0, 0,
	0, 332, 0, 333, 0, 0, 0, 334, 335, 551,
	552, 336, 337, 0, 338, 553, 0, 554, 339, 0,
	340, 341, 342, 343, 344, 1432, 556, 557, 402, 0,
	345, 346, 0, 347, 348, 349, 350, 0, 0, 0,
	247, 351, 352, 354, 0, 0, 353, 558, 559, 0,
	560, 0, 355, 356, 0, 561, 0, 357, 358, 359,
	0, 360, 0, 0, 0, 361, 362, 363, 364, 365,
	366, 0, 367, 369, 368, 0, 370, 562, 0, 371,
	372, 0, 0, 373, 374, 375, 0, 0, 376, 377,
	378, 379, 0, 380, 381, 383, 385, 382, 384, 389,
	386, 387, 388, 391, 0, 390, 0, 392, 393, 394,
	398, 397, 399, 396, 0, 395, 0, 248, 0, 400,
	0, 563, 401, 564, 403, 404, 0, 0, 405, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 411, 565,
	0, 412, 0, 566, 413, 414, 406, 415, 416, 417,
	418, 419, 420, 421, 422, 0, 423, 424, 567, 568,
	569, 425, 570, 426, 427, 0, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 571, 437, 436, 438, 0,
	439, 0, 0, 0, 0, 0, 440, 0, 442, 443,
	444, 441, 445, 446, 447, 448, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 572, 456, 0, 457, 458,
	464, 465, 459, 460, 466, 467, 468, 469, 470, 0,
	472, 473, 471, 474, 475, 476, 0, 477, 461, 462,
	478, 479, 0, 480, 481, 482, 483, 484, 485, 573,
	0, 486, 0, 487, 488, 489, 490, 463, 491, 496,
	574, 492, 493, 494, 495, 575, 0, 498, 499, 0,
	497, 0, 500, 501, 502, 503, 504, 505, 323, 506,
	0, 507, 576, 577, 578, 579, 0, 514, 0, 508,
	509, 580, 510, 581, 0, 511, 512, 513, 0, 515,
	516, 0, 0, 517, 518, 519, 521, 522, 520, 523,
	0, 524, 0, 0, 525, 526, 527, 582, 583, 584,
	0, 529, 528, 585, 1424, 0, 243, 0, 530, 531,
	586, 532, 533, 534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 535, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 537, 0, 265, 538, 266, 539, 0, 540, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 541, 542,
	543, 0, 273, 274, 544, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 0, 293, 294, 0, 0, 0, 0, 0, 0,
	0, 295, 296, 297, 298, 0, 299, 545, 546, 0,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 309, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 547, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 548, 549, 0, 246,
	0, 0, 0, 0, 0, 329, 330, 331, 550, 0,
	0, 0, 332, 0, 333, 0, 0, 0, 334, 335,
	551, 552, 336, 337, 0, 338, 553, 0, 554, 339,
	0, 340, 341, 342, 343, 344, 1423, 556, 557, 402,
	0, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 247, 351, 352, 354, 0, 0, 353, 558, 559,
	0, 560, 0, 355, 356, 0, 561, 0, 357, 358,
	359, 0, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 562, 0,
	371, 372, 0, 0, 373, 374, 375, 0, 0, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 0, 392, 393,
	394, 398, 397, 399, 396, 0, 395, 0, 248, 0,
	400, 0, 563, 401, 564, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 0, 412, 0, 566, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 569, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 571, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 0, 452, 453, 454, 455, 572, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 0, 477, 461,
	462, 478, 479, 0, 480, 481, 482, 483, 484, 485,
	573, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 574, 492, 493, 494, 495, 575, 0, 498, 499,
	0, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 576, 577, 578, 579, 0, 514, 0,
	508, 509, 580, 510, 581, 0, 511, 512, 513, 0,
	515, 516, 0, 0, 517, 518, 519, 521, 522, 520,
	523, 0, 524, 0, 0, 525, 526, 527, 582, 583,
	584, 0, 529, 528, 585, 1421, 0, 243, 0, 530,
	531, 586, 532, 533, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 535, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 536, 537, 0, 265, 538, 266, 539, 0, 540,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 541,
	542, 543, 0, 273, 274, 544, 0, 0, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	0, 292, 0, 293, 294, 0, 0, 0, 0, 0,
	0, 0, 295, 296, 297, 298, 0, 299, 545, 546,
	0, 303, 300, 301, 0, 304, 302, 0, 305, 306,
	307, 0, 0, 308, 309, 310, 0, 311, 312, 0,
	313, 314, 315, 0, 316, 317, 547, 318, 319, 320,
	322, 324, 321, 325, 326, 327, 328, 548, 549, 0,
	246, 0, 0, 0, 0, 0, 329, 330, 331, 550,
	0, 0, 0, 332, 0, 333, 0, 0, 0, 334,
	335, 551, 552, 336, 337, 0, 338, 553, 0, 554,
	339, 0, 340, 341, 342, 343, 344, 1420, 556, 557,
	402, 0, 345, 346, 0, 347, 348, 349, 350, 0,
	0, 0, 247, 351, 352, 354, 0, 0, 353, 558,
	559, 0, 560, 0, 355, 356, 0, 561, 0, 357,
	358, 359, 0, 360, 0, 0, 0, 361, 362, 363,
	364, 365, 366, 0, 367, 369, 368, 0, 370, 562,
	0, 371, 372, 0, 0, 373, 374, 375, 0, 0,
	376, 377, 378, 379, 0, 380, 381, 383, 385, 382,
	384, 389, 386, 387, 388, 391, 0, 390, 0, 392,
	393, 394, 398, 397, 399, 396, 0, 395, 0, 248,
	0, 400, 0, 563, 401, 564, 403, 404, 0, 0,
	405, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	411, 565, 0, 412, 0, 566, 413, 414, 406, 415,
	416, 417, 418, 419, 420, 421, 422, 0, 423, 424,
	567, 568, 569, 425, 570, 426, 427, 0, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 571, 437, 436,
	438, 0, 439, 0, 0, 0, 0, 0, 440, 0,
	442, 443, 444, 441, 445, 446, 447, 448, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 572, 456, 0,
	457, 458, 464, 465, 459, 460, 466, 467, 468, 469,
	470, 0, 472, 473, 471, 474, 475, 476, 0, 477,
	461, 462, 478, 479, 0, 480, 481, 482, 483, 484,
	485, 573, 0, 486, 0, 487, 488, 489, 490, 463,
	491, 496, 574, 492, 493, 494, 495, 575, 0, 498,
	499, 0, 497, 0, 500, 501, 502, 503, 504, 505,
	323, 506, 0, 507, 576, 577, 578, 579, 0, 514,
	0, 508, 509, 580, 510, 581, 0, 511, 512, 513,
	0, 515, 516, 0, 0, 517, 518, 519, 521, 522,
	520, 523, 0, 524, 0, 0, 525, 526, 527, 582,
	583, 584, 0, 529, 528, 585, 1416, 0, 243, 0,
	530, 531, 586, 532, 533, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 274, 544, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 0, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 297, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 246, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 0,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 1415, 556,
	557, 402, 0, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 247, 351, 352, 354, 0, 0, 353,
	558, 559, 0, 560, 0, 355, 356, 0, 561, 0,
	357, 358, 359, 0, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 0, 371, 372, 0, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 0,
	392, 393, 394, 398, 397, 399, 396, 0, 395, 0,
	248, 0, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 0, 412, 0, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 0, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 0, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	582, 583, 584, 0, 529, 528, 585, 1373, 0, 243,
	0, 530, 531, 586, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	535, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 537, 0, 265, 538, 266, 539,
	0, 540, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 541, 542, 543, 0, 273, 274, 544, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 0, 292, 0, 293, 294, 0, 0, 0,
	0, 0, 0, 0, 295, 296, 297, 298, 0, 299,
	545, 546, 0, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 0, 0, 308, 309, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 316, 317, 547, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 548,
	549, 0, 246, 0, 0, 0, 0, 0, 329, 330,
	331, 550, 0, 0, 0, 332, 0, 333, 0, 0,
	0, 334, 335, 551, 552, 336, 337, 0, 338, 553,
	0, 554, 339, 0, 340, 341, 342, 343, 344, 555,
	556, 557, 402, 0, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 247, 351, 352, 354, 0, 0,
	353, 558, 559, 0, 560, 0, 355, 356, 0, 561,
	0, 357, 358, 359, 0, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 0, 367, 369, 368, 0,
	370, 562, 0, 371, 372, 0, 0, 373, 374, 375,
	0, 0, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	0, 392, 393, 394, 398, 397, 399, 396, 0, 395,
	0, 248, 0, 400, 0, 563, 401, 564, 403, 404,
	0, 0, 405, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 411, 565, 0, 412, 0, 566, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 569, 425, 570, 426, 427, 0,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 571,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 572,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 0, 472, 473, 471, 474, 475, 476,
	0, 477, 461, 462, 478, 479, 0, 480, 481, 482,
	483, 484, 485, 573, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 574, 492, 493, 494, 495, 575,
	0, 498, 499, 0, 497, 0, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 576, 577, 578, 579,
	0, 514, 0, 508, 509, 580, 510, 581, 0, 511,
	512, 513, 0, 515, 516, 0, 0, 517, 518, 519,
	521, 522, 520, 523, 0, 524, 0, 0, 525, 526,
	527, 582, 583, 584, 0, 529, 528, 585, 1288, 0,
	243, 0, 530, 531, 586, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 535, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 537, 0, 265, 538, 266,
	539, 0, 540, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 541, 542, 543, 0, 273, 274, 544, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 0, 292, 0, 293, 294, 0, 0,
	0, 0, 0, 0, 0, 295, 296, 297, 298, 0,
	299, 545, 546, 0, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 309, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 547,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	548, 549, 0, 246, 0, 0, 0, 0, 0, 329,
	330, 331, 550, 0, 0, 0, 332, 0, 333, 0,
	0, 0, 334, 335, 551, 552, 336, 337, 0, 338,
	553, 0, 554, 339, 0, 340, 341, 342, 343, 344,
	555, 556, 557, 402, 0, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 247, 351, 352, 354, 0,
	0, 353, 558, 559, 0, 560, 0, 355, 356, 0,
	561, 0, 357, 358, 359, 0, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 0, 367, 369, 368,
	0, 370, 562, 0, 371, 372, 0, 0, 373, 374,
	375, 0, 0, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 0, 392, 393, 394, 398, 397, 399, 396, 0,
	395, 0, 248, 0, 400, 0, 563, 401, 564, 403,
	404, 0, 0, 405, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 411, 565, 0, 412, 0, 566, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 569, 425, 570, 426, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	571, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 0, 452, 453, 454, 455,
	572, 456, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 0, 477, 461, 462, 478, 479, 0, 480, 481,
	482, 483, 484, 485, 573, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 574, 492, 493, 494, 495,
	575, 0, 498, 499, 0, 497, 0, 500, 501, 502,
	503, 504, 505, 323, 506, 0, 507, 576, 577, 578,
	579, 0, 514, 0, 508, 509, 580, 510, 581, 0,
	511, 512, 513, 0, 515, 516, 0, 0, 517, 518,
	519, 521, 522, 520, 523, 0, 524, 0, 0, 525,
	526, 527, 582, 583, 584, 0, 529, 528, 585, 1281,
	0, 243, 0, 530, 531, 586, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 537, 0, 265, 538,
	266, 539, 0, 540, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 541, 542, 543, 0, 273, 274, 544,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 0, 293, 294, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 297, 298,
	0, 299, 545, 546, 0, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 309, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	547, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 548, 549, 0, 246, 0, 0, 0, 0, 0,
	329, 330, 331, 550, 0, 0, 0, 332, 0, 333,
	0, 0, 0, 334, 335, 551, 552, 336, 337, 0,
	338, 553, 0, 554, 339, 0, 340, 341, 342, 343,
	344, 1283, 556, 557, 402, 0, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 247, 351, 352, 354,
	0, 0, 353, 558, 559, 0, 560, 0, 355, 356,
	0, 561, 0, 357, 358, 359, 0, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 562, 0, 371, 372, 0, 0, 373,
	374, 375, 0, 0, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 0, 392, 393, 394, 398, 397, 399, 396,
	0, 395, 0, 248, 0, 400, 0, 563, 401, 564,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 0, 412, 0, 566,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 569, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 571, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 572, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 0, 477, 461, 462, 478, 479, 0, 480,
	481, 482, 483, 484, 485, 573, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 574, 492, 493, 494,
	495, 575, 0, 498, 499, 0, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 576, 577,
	578, 579, 0, 514, 0, 508, 509, 580, 510, 581,
	0, 511, 512, 513, 0, 515, 516, 0, 0, 517,
	518, 519, 521, 522, 520, 523, 0, 524, 0, 0,
	525, 526, 527, 582, 583, 584, 0, 529, 528, 585,
	588, 0, 243, 0, 530, 531, 586, 532, 533, 534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 536, 537, 0, 265,
	538, 266, 539, 0, 540, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 541, 542, 543, 0, 273, 274,
	544, 0, 0, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 0, 292, 0, 293, 294,
	0, 0, 0, 0, 0, 0, 0, 295, 296, 297,
	298, 0, 299, 545, 546, 0, 303, 300, 301, 0,
	304, 302, 0, 305, 306, 307, 0, 0, 308, 309,
	310, 0, 311, 312, 0, 313, 314, 315, 0, 316,
	317, 547, 318, 319, 320, 322, 324, 321, 325, 326,
	327, 328, 548, 549, 0, 246, 0, 0, 0, 0,
	0, 329, 330, 331, 550, 0, 0, 0, 332, 0,
	333, 0, 0, 0, 334, 335, 551, 552, 336, 337,
	0, 338, 553, 0, 554, 339, 0, 340, 341, 342,
	343, 344, 555, 556, 557, 402, 0, 345, 346, 0,
	347, 348, 349, 350, 0, 0, 0, 247, 351, 352,
	354, 0, 0, 353, 558, 559, 0, 560, 0, 355,
	356, 0, 561, 0, 357, 358, 359, 0, 360, 0,
	0, 0, 361, 362, 363, 364, 365, 366, 0, 367,
	369, 368, 0, 370, 562, 0, 371, 372, 0, 0,
	373, 374, 375, 0, 0, 376, 377, 378, 379, 0,
	380, 381, 383, 385, 382, 384, 389, 386, 387, 388,
	391, 0, 390, 0, 392, 393, 394, 398, 397, 399,
	396, 0, 395, 0, 248, 0, 400, 0, 563, 401,
	564, 403, 404, 0, 0, 405, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 411, 565, 0, 412, 0,
	566, 413, 414, 406, 415, 416, 417, 418, 419, 420,
	421, 422, 0, 423, 424, 567, 568, 569, 425, 570,
	426, 427, 0, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 571, 437, 436, 438, 0, 439, 0, 0,
	0, 0, 0, 440, 0, 442, 443, 444, 441, 445,
	446, 447, 448, 0, 449, 450, 451, 0, 452, 453,
	454, 455, 572, 456, 0, 457, 458, 464, 465, 459,
	460, 466, 467, 468, 469, 470, 0, 472, 473, 471,
	474, 475, 476, 0, 477, 461, 462, 478, 479, 0,
	480, 481, 482, 483, 484, 485, 573, 0, 486, 0,
	487, 488, 489, 490, 463, 491, 496, 574, 492, 493,
	494, 495, 575, 0, 498, 499, 0, 497, 0, 500,
	501, 502, 503, 504, 505, 323, 506, 0, 507, 576,
	577, 578, 579, 0, 514, 0, 508, 509, 580, 510,
	581, 0, 511, 512, 513, 0, 515, 516, 0, 0,
	517, 518, 519, 521, 522, 520, 523, 0, 524, 0,
	0, 525, 526, 527, 582, 583, 584, 0, 529, 528,
	585, 234, 0, 243, 0, 530, 531, 586, 532, 533,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 535, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 537, 0,
	265, 538, 266, 539, 0, 540, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 541, 542, 543, 0, 273,
	274, 544, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 0, 293,
	294, 0, 0, 0, 0, 0, 0, 0, 295, 296,
	297, 298, 0, 299, 545, 546, 0, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	309, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 547, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 548, 549, 0, 246, 0, 0, 0,
	0, 0, 329, 330, 331, 550, 0, 0, 0, 332,
	0, 333, 0, 0, 0, 334, 335, 551, 552, 336,
	337, 0, 338, 553, 0, 554, 339, 0, 340, 341,
	342, 343, 344, 555, 556, 557, 402, 0, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 247, 351,
	352, 354, 0, 0, 353, 558, 559, 0, 560, 0,
	355, 356, 0, 561, 0, 357, 358, 359, 0, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 562, 0, 371, 372, 0,
	0, 373, 374, 375, 0, 0, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 0, 392, 393, 394, 398, 397,
	399, 396, 0, 395, 0, 248, 0, 400, 0, 563,
	401, 564, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 0, 412,
	0, 566, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 569, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 571, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 572, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 0, 477, 461, 462, 478, 479,
	0, 480, 481, 482, 483, 484, 485, 573, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 574, 492,
	493, 494, 495, 575, 0, 498, 499, 0, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	576, 577, 578, 579, 0, 514, 0, 508, 509, 580,
	510, 581, 0, 511, 512, 513, 0, 515, 516, 0,
	0, 517, 518, 519, 521, 522, 520, 523, 0, 524,
	0, 0, 525, 526, 527, 582, 583, 584, 243, 529,
	528, 585, 0, 0, 0, 0, 530, 531, 586, 532,
	533, 534, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 274, 544, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 0, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 297, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 246, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 0,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 555, 556,
	557, 402, 0, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 247, 351, 352, 354, 0, 0, 353,
	558, 559, 0, 560, 0, 355, 356, 0, 561, 0,
	357, 358, 359, 0, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 0, 371, 372, 0, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 0,
	392, 393, 394, 398, 397, 399, 396, 0, 395, 0,
	248, 0, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 0, 412, 0, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 0, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 0, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	582, 583, 584, 243, 529, 528, 585, 0, 0, 0,
	0, 530, 531, 586, 532, 533, 534, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 535, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 537, 0,
	265, 538, 266, 539, 0, 540, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 541, 542, 543, 0, 273,
	274, 544, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 610, 292, 0, 293,
	294, 0, 0, 0, 0, 0, 0, 0, 295, 296,
	297, 298, 0, 299, 545, 546, 0, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	309, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 547, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 548, 549, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 550, 0, 0, 0, 332,
	0, 333, 0, 0, 0, 334, 335, 551, 552, 336,
	337, 611, 338, 553, 0, 554, 339, 0, 340, 341,
	342, 343, 344, 555, 556, 557, 402, 0, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 0, 351,
	352, 354, 0, 0, 353, 558, 559, 0, 560, 0,
	355, 356, 0, 561, 0, 357, 358, 359, 0, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 562, 0, 371, 372, 0,
	0, 373, 374, 375, 0, 0, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 0, 392, 393, 394, 398, 397,
	399, 396, 0, 395, 0, 0, 0, 400, 0, 563,
	401, 564, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 0, 412,
	0, 566, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 569, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 571, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 572, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 612, 472, 473,
	471, 474, 475, 476, 0, 477, 461, 462, 478, 479,
	0, 480, 481, 482, 483, 484, 485, 573, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 574, 492,
	493, 494, 495, 575, 0, 498, 499, 0, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	576, 577, 578, 579, 0, 514, 0, 508, 509, 580,
	510, 581, 0, 511, 512, 513, 0, 515, 516, 0,
	0, 517, 518, 519, 521, 522, 520, 523, 0, 524,
	0, 0, 525, 526, 527, 582, 583, 584, 243, 529,
	528, 585, 0, 0, 0, 0, 530, 531, 586, 532,
	533, 534, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 274, 544, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 0, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 2120, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 246, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 0,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 555, 556,
	557, 402, 0, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 247, 351, 352, 354, 0, 0, 353,
	558, 559, 0, 560, 0, 355, 356, 0, 561, 0,
	357, 358, 359, 0, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 0, 371, 372, 0, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 0,
	392, 393, 394, 398, 397, 399, 396, 0, 395, 0,
	248, 0, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 0, 412, 0, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 0, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 0, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	582, 583, 584, 243, 529, 528, 585, 0, 0, 0,
	0, 530, 531, 586, 532, 533, 534, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 535, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 537, 0,
	265, 538, 266, 539, 0, 540, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 541, 542, 543, 0, 273,
	274, 544, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 0, 293,
	294, 0, 0, 0, 0, 0, 0, 0, 295, 296,
	2118, 298, 0, 299, 545, 546, 0, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	309, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 547, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 548, 549, 0, 246, 0, 0, 0,
	0, 0, 329, 330, 331, 550, 0, 0, 0, 332,
	0, 333, 0, 0, 0, 334, 335, 551, 552, 336,
	337, 0, 338, 553, 0, 554, 339, 0, 340, 341,
	342, 343, 344, 555, 556, 557, 402, 0, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 247, 351,
	352, 354, 0, 0, 353, 558, 559, 0, 560, 0,
	355, 356, 0, 561, 0, 357, 358, 359, 0, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 562, 0, 371, 372, 0,
	0, 373, 374, 375, 0, 0, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 0, 392, 393, 394, 398, 397,
	399, 396, 0, 395, 0, 248, 0, 400, 0, 563,
	401, 564, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 0, 412,
	0, 566, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 569, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 571, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 572, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 0, 477, 461, 462, 478, 479,
	0, 480, 481, 482, 483, 484, 485, 573, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 574, 492,
	493, 494, 495, 575, 0, 498, 499, 0, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	576, 577, 578, 579, 0, 514, 0, 508, 509, 580,
	510, 581, 0, 511, 512, 513, 0, 515, 516, 0,
	0, 517, 518, 519, 521, 522, 520, 523, 0, 524,
	0, 0, 525, 526, 527, 582, 583, 584, 243, 529,
	528, 585, 0, 0, 0, 0, 530, 531, 586, 532,
	533, 534, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 274, 544, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 0, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 2116, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 246, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 0,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 555, 556,
	557, 402, 0, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 247, 351, 352, 354, 0, 0, 353,
	558, 559, 0, 560, 0, 355, 356, 0, 561, 0,
	357, 358, 359, 0, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 0, 371, 372, 0, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 0,
	392, 393, 394, 398, 397, 399, 396, 0, 395, 0,
	248, 0, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 0, 412, 0, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 0, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 0, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	582, 583, 584, 243, 529, 528, 585, 0, 0, 0,
	0, 530, 531, 586, 532, 533, 534, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 535, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 537, 0,
	265, 538, 266, 539, 0, 540, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 541, 542, 543, 0, 273,
	274, 544, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 0, 293,
	294, 0, 0, 0, 0, 0, 0, 0, 295, 296,
	297, 298, 0, 299, 545, 546, 0, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	309, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 547, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 548, 549, 0, 246, 0, 0, 0,
	0, 0, 329, 330, 331, 550, 0, 0, 0, 332,
	0, 333, 0, 0, 0, 334, 335, 551, 552, 336,
	337, 0, 338, 553, 0, 554, 339, 0, 340, 341,
	342, 343, 344, 2052, 556, 557, 402, 0, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 247, 351,
	352, 354, 0, 0, 353, 558, 559, 0, 560, 0,
	355, 356, 0, 561, 0, 357, 358, 359, 0, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 562, 0, 371, 372, 0,
	0, 373, 374, 375, 0, 0, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 0, 392, 393, 394, 398, 397,
	399, 396, 0, 395, 0, 248, 0, 400, 0, 563,
	401, 564, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 0, 412,
	0, 566, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 569, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 571, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 572, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 0, 477, 461, 462, 478, 479,
	0, 480, 481, 482, 483, 484, 485, 573, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 574, 492,
	493, 494, 495, 575, 0, 498, 499, 0, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	576, 577, 578, 579, 0, 514, 0, 508, 509, 580,
	510, 581, 0, 511, 512, 513, 0, 515, 516, 0,
	0, 517, 518, 519, 521, 522, 520, 523, 0, 524,
	0, 0, 525, 526, 527, 582, 583, 584, 243, 529,
	528, 585, 0, 0, 0, 0, 530, 531, 586, 532,
	533, 534, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 274, 544, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 0, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 297, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 246, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 0,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 2046, 556,
	557, 402, 0, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 247, 351, 352, 354, 0, 0, 353,
	558, 559, 0, 560, 0, 355, 356, 0, 561, 0,
	357, 358, 359, 0, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 0, 371, 372, 0, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 0,
	392, 393, 394, 398, 397, 399, 396, 0, 395, 0,
	248, 0, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 0, 412, 0, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 0, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 0, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	582, 583, 584, 243, 529, 528, 585, 0, 0, 0,
	0, 530, 531, 586, 532, 533, 534, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 535, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 537, 0,
	265, 538, 266, 539, 0, 540, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 541, 542, 543, 0, 273,
	274, 544, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 0, 293,
	294, 0, 0, 0, 0, 0, 0, 0, 295, 296,
	297, 298, 0, 299, 545, 546, 0, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	309, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 547, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 548, 549, 0, 246, 0, 0, 0,
	0, 0, 329, 330, 331, 550, 0, 0, 0, 332,
	0, 333, 0, 0, 0, 334, 335, 551, 552, 336,
	337, 0, 338, 553, 0, 554, 339, 0, 340, 341,
	342, 343, 344, 2015, 556, 557, 402, 0, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 247, 351,
	352, 354, 0, 0, 353, 558, 559, 0, 560, 0,
	355, 356, 0, 561, 0, 357, 358, 359, 0, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 562, 0, 371, 372, 0,
	0, 373, 374, 375, 0, 0, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 0, 392, 393, 394, 398, 397,
	399, 396, 0, 395, 0, 248, 0, 400, 0, 563,
	401, 564, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 0, 412,
	0, 566, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 569, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 571, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 572, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 0, 477, 461, 462, 478, 479,
	0, 480, 481, 482, 483, 484, 485, 573, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 574, 492,
	493, 494, 495, 575, 0, 498, 499, 0, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	576, 577, 578, 579, 0, 514, 0, 508, 509, 580,
	510, 581, 0, 511, 512, 513, 0, 515, 516, 0,
	0, 517, 518, 519, 521, 522, 520, 523, 0, 524,
	0, 0, 525, 526, 527, 582, 583, 584, 0, 529,
	528, 585, 776, 0, 243, 0, 530, 531, 586, 532,
	533, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 535, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 536, 537,
	0, 265, 538, 266, 539, 0, 540, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 541, 542, 543, 0,
	273, 274, 544, 0, 0, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 0, 292, 0,
	293, 294, 0, 0, 0, 0, 0, 0, 0, 295,
	296, 297, 298, 0, 299, 545, 546, 0, 303, 300,
	301, 0, 304, 302, 0, 305, 306, 307, 0, 0,
	308, 309, 310, 0, 311, 312, 0, 313, 314, 315,
	0, 316, 317, 547, 318, 319, 320, 322, 324, 321,
	325, 326, 327, 328, 548, 549, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 331, 550, 0, 0, 0,
	332, 0, 333, 0, 0, 0, 334, 335, 551, 552,
	336, 337, 0, 338, 553, 0, 554, 339, 0, 340,
	341, 342, 343, 344, 555, 556, 557, 402, 0, 345,
	346, 0, 347, 348, 349, 350, 0, 0, 0, 0,
	351, 352, 354, 0, 0, 353, 558, 559, 0, 560,
	775, 355, 356, 0, 561, 0, 357, 358, 359, 0,
	360, 0, 0, 0, 361, 362, 363, 364, 365, 366,
	0, 367, 369, 368, 0, 370, 562, 0, 371, 372,
	0, 0, 373, 374, 375, 0, 0, 376, 377, 378,
	379, 0, 380, 381, 383, 385, 382, 384, 389, 386,
	387, 388, 391, 0, 390, 0, 392, 393, 394, 398,
	397, 399, 396, 0, 395, 0, 0, 0, 400, 0,
	563, 401, 564, 403, 404, 0, 0, 405, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 411, 565, 0,
	412, 0, 566, 413, 414, 406, 415, 416, 417, 418,
	419, 420, 421, 422, 0, 423, 424, 567, 568, 569,
	425, 570, 426, 427, 0, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 571, 437, 436, 438, 0, 439,
	0, 0, 0, 0, 0, 440, 0, 442, 443, 444,
	441, 445, 446, 447, 448, 0, 449, 450, 451, 0,
	452, 453, 454, 455, 572, 456, 0, 457, 458, 464,
	465, 459, 460, 466, 467, 468, 469, 470, 0, 472,
	473, 471, 474, 475, 476, 0, 477, 461, 462, 478,
	479, 0, 480, 481, 482, 483, 484, 485, 573, 0,
	486, 0, 487, 488, 489, 490, 463, 491, 496, 574,
	492, 493, 494, 495, 575, 0, 498, 499, 0, 497,
	774, 500, 501, 502, 503, 504, 505, 323, 506, 0,
	507, 576, 577, 578, 579, 0, 514, 0, 508, 509,
	580, 510, 581, 0, 511, 512, 513, 0, 515, 516,
	0, 0, 517, 518, 519, 521, 522, 520, 523, 0,
	524, 0, 0, 525, 526, 527, 582, 583, 584, 243,
	529, 528, 585, 0, 0, 0, 0, 530, 531, 586,
	532, 533, 534, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	535, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 537, 0, 265, 538, 266, 539,
	0, 540, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 541, 542, 543, 0, 273, 274, 544, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 0, 292, 0, 293, 294, 0, 0, 0,
	0, 0, 0, 0, 295, 296, 297, 298, 0, 299,
	545, 546, 0, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 0, 0, 308, 309, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 316, 317, 547, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 548,
	549, 0, 2702, 0, 0, 0, 0, 0, 329, 330,
	331, 550, 0, 0, 0, 332, 0, 333, 0, 0,
	0, 334, 335, 551, 552, 336, 337, 0, 338, 553,
	0, 554, 339, 0, 340, 341, 342, 343, 344, 555,
	556, 557, 402, 0, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 0, 351, 352, 354, 0, 0,
	353, 558, 559, 0, 560, 0, 355, 356, 0, 561,
	0, 357, 358, 359, 0, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 0, 367, 369, 368, 0,
	370, 562, 0, 371, 372, 0, 0, 373, 374, 375,
	0, 0, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	0, 392, 393, 394, 398, 397, 399, 396, 0, 395,
	0, 0, 0, 400, 0, 563, 401, 564, 403, 404,
	0, 0, 405, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 411, 565, 0, 412, 0, 566, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 569, 425, 570, 426, 427, 3700,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 571,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 572,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 0, 472, 473, 471, 474, 475, 476,
	0, 477, 461, 462, 478, 479, 0, 480, 481, 482,
	483, 484, 485, 573, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 574, 492, 493, 494, 495, 575,
	0, 498, 499, 0, 497, 0, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 576, 577, 578, 579,
	0, 514, 0, 508, 509, 580, 510, 581, 0, 511,
	512, 513, 0, 515, 516, 0, 0, 517, 518, 519,
	521, 522, 520, 523, 0, 524, 0, 0, 525, 526,
	527, 582, 583, 584, 0, 529, 528, 585, 597, 0,
	243, 0, 530, 531, 586, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 596, 255, 256, 0, 0, 0, 0,
	0, 535, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 537, 0, 265, 538, 266,
	539, 0, 540, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 541, 542, 543, 0, 273, 274, 544, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 0, 292, 0, 293, 294, 0, 0,
	0, 0, 0, 0, 0, 295, 296, 297, 298, 0,
	299, 545, 546, 0, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 309, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 547,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	548, 549, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 331, 550, 0, 0, 0, 332, 0, 333, 0,
	0, 0, 334, 335, 551, 552, 336, 337, 0, 338,
	553, 0, 554, 339, 0, 340, 341, 342, 343, 344,
	555, 556, 557, 402, 0, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 0, 351, 352, 354, 0,
	0, 353, 558, 559, 0, 560, 0, 355, 356, 0,
	561, 0, 357, 358, 359, 0, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 0, 367, 369, 368,
	0, 370, 562, 0, 371, 372, 0, 0, 373, 374,
	375, 0, 0, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 0, 392, 393, 394, 398, 397, 399, 396, 0,
	395, 0, 0, 0, 400, 0, 563, 401, 564, 403,
	404, 0, 0, 405, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 411, 565, 0, 412, 0, 566, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 569, 425, 570, 595, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	571, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 0, 452, 453, 454, 455,
	572, 456, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 0, 477, 461, 462, 478, 479, 0, 480, 481,
	482, 483, 484, 485, 573, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 574, 492, 493, 494, 495,
	575, 0, 498, 499, 0, 497, 0, 500, 501, 502,
	503, 504, 505, 323, 506, 0, 507, 576, 577, 578,
	579, 0, 514, 0, 508, 509, 580, 510, 581, 0,
	511, 512, 513, 0, 515, 516, 0, 0, 517, 518,
	519, 521, 522, 520, 523, 0, 524, 0, 0, 525,
	526, 527, 582, 583, 584, 0, 529, 528, 585, 243,
	2689, 0, 0, 530, 531, 586, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	535, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 537, 0, 265, 538, 266, 539,
	0, 540, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 541, 542, 543, 0, 273, 274, 544, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 0, 292, 0, 293, 294, 0, 0, 0,
	0, 0, 0, 0, 295, 296, 297, 298, 0, 299,
	545, 546, 0, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 0, 0, 308, 309, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 316, 317, 547, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 548,
	549, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	331, 550, 0, 0, 0, 332, 0, 333, 0, 0,
	0, 334, 335, 551, 552, 336, 337, 0, 338, 553,
	0, 554, 339, 0, 340, 341, 342, 343, 344, 555,
	556, 557, 402, 0, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 0, 351, 352, 354, 0, 0,
	353, 558, 559, 0, 560, 0, 355, 356, 0, 561,
	0, 357, 358, 359, 0, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 0, 367, 369, 368, 0,
	370, 562, 0, 371, 372, 0, 0, 373, 374, 375,
	0, 0, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	0, 392, 393, 394, 398, 397, 399, 396, 0, 395,
	0, 0, 0, 400, 0, 563, 401, 564, 403, 404,
	0, 0, 405, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 411, 565, 0, 412, 0, 566, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 569, 425, 570, 426, 427, 0,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 571,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 572,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 0, 472, 473, 471, 474, 475, 476,
	0, 477, 461, 462, 478, 479, 0, 480, 481, 482,
	483, 484, 485, 573, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 574, 492, 493, 494, 495, 575,
	0, 498, 499, 0, 497, 0, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 576, 577, 578, 579,
	0, 514, 0, 508, 509, 580, 510, 581, 0, 511,
	512, 513, 0, 515, 516, 0, 0, 517, 518, 519,
	521, 522, 520, 523, 0, 524, 0, 0, 525, 526,
	527, 582, 583, 584, 0, 529, 528, 585, 243, 3710,
	0, 0, 530, 531, 586, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 274, 544, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 0, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 297, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 0,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 555, 556,
	557, 402, 0, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 0, 351, 352, 354, 0, 0, 353,
	558, 559, 0, 560, 0, 355, 356, 0, 561, 0,
	357, 358, 359, 0, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 0, 371, 372, 0, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 0,
	392, 393, 394, 398, 397, 399, 396, 0, 395, 0,
	0, 0, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 0, 412, 0, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 0, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 0, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	582, 583, 584, 243, 529, 528, 585, 0, 0, 0,
	0, 530, 531, 586, 532, 533, 534, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 535, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 537, 0,
	265, 538, 266, 539, 0, 540, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 541, 542, 543, 0, 273,
	274, 544, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 0, 293,
	294, 0, 0, 0, 0, 0, 0, 0, 295, 296,
	297, 298, 0, 299, 545, 546, 3417, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	309, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 547, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 548, 549, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 550, 0, 0, 0, 332,
	0, 333, 0, 0, 0, 334, 335, 551, 552, 336,
	337, 0, 338, 553, 0, 554, 339, 0, 340, 341,
	342, 343, 344, 555, 556, 557, 402, 0, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 0, 351,
	352, 354, 0, 0, 353, 558, 559, 0, 560, 0,
	355, 356, 0, 561, 0, 357, 358, 359, 0, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 562, 0, 371, 372, 0,
	0, 373, 374, 375, 0, 0, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 0, 392, 393, 394, 398, 397,
	399, 396, 0, 395, 0, 0, 0, 400, 0, 563,
	401, 564, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 0, 412,
	0, 566, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 569, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 571, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 572, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 0, 477, 461, 462, 478, 479,
	0, 480, 481, 482, 483, 484, 485, 573, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 574, 492,
	493, 494, 495, 575, 0, 498, 499, 0, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	576, 577, 578, 579, 0, 514, 0, 508, 509, 580,
	510, 581, 0, 511, 512, 513, 0, 515, 516, 0,
	0, 517, 518, 519, 521, 522, 520, 523, 0, 524,
	0, 0, 525, 526, 527, 582, 583, 584, 243, 529,
	528, 585, 0, 0, 0, 0, 530, 531, 586, 532,
	533, 534, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 535,
	0, 2425, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 274, 544, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 0, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 297, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 0,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 555, 556,
	557, 402, 0, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 0, 351, 352, 354, 0, 0, 353,
	558, 559, 0, 560, 0, 355, 356, 0, 561, 0,
	357, 358, 359, 0, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 0, 371, 372, 0, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 0,
	392, 393, 394, 398, 397, 399, 396, 0, 395, 0,
	0, 0, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 0, 412, 0, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 0, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 0, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	582, 583, 584, 0, 529, 528, 585, 243, 2689, 0,
	0, 530, 531, 586, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 535, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 536, 537, 0, 265, 538, 266, 539, 0, 540,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 541,
	542, 543, 0, 273, 274, 544, 0, 0, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	0, 292, 0, 293, 294, 0, 0, 0, 0, 0,
	0, 0, 295, 296, 297, 298, 0, 299, 545, 546,
	0, 303, 300, 301, 0, 304, 302, 0, 305, 306,
	307, 0, 0, 308, 309, 310, 0, 311, 312, 0,
	313, 314, 315, 0, 316, 317, 547, 318, 319, 320,
	322, 324, 321, 325, 326, 327, 328, 548, 549, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 550,
	0, 0, 0, 332, 0, 333, 0, 0, 0, 334,
	335, 551, 552, 336, 337, 0, 338, 553, 0, 554,
	339, 0, 340, 341, 342, 343, 344, 555, 556, 557,
	402, 0, 345, 346, 0, 347, 348, 349, 350, 0,
	0, 0, 0, 351, 352, 354, 0, 0, 353, 558,
	559, 0, 560, 0, 355, 356, 0, 561, 0, 357,
	358, 359, 0, 360, 0, 0, 0, 361, 362, 363,
	364, 365, 366, 0, 367, 369, 368, 0, 370, 562,
	0, 371, 372, 0, 0, 373, 374, 375, 0, 0,
	376, 377, 378, 379, 0, 380, 381, 383, 385, 382,
	384, 389, 386, 387, 388, 391, 0, 390, 0, 392,
	393, 394, 398, 397, 399, 396, 0, 395, 0, 0,
	0, 400, 0, 563, 401, 564, 403, 404, 0, 0,
	405, 0, 0, 0, 407, 408, 2686, 0, 0, 410,
	411, 565, 0, 412, 0, 566, 413, 414, 406, 415,
	416, 417, 418, 419, 420, 421, 422, 0, 423, 424,
	567, 568, 569, 425, 570, 426, 427, 0, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 571, 437, 436,
	438, 0, 439, 0, 0, 0, 0, 0, 440, 0,
	442, 443, 444, 441, 445, 446, 447, 448, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 572, 456, 0,
	457, 458, 464, 465, 459, 460, 466, 467, 468, 469,
	470, 0, 472, 473, 471, 474, 475, 476, 0, 477,
	461, 462, 478, 479, 0, 480, 481, 482, 483, 484,
	485, 573, 0, 486, 0, 487, 488, 489, 490, 463,
	491, 496, 574, 492, 493, 494, 495, 575, 0, 498,
	499, 0, 497, 0, 500, 501, 502, 503, 504, 505,
	323, 506, 0, 507, 576, 577, 578, 579, 0, 514,
	0, 508, 509, 580, 510, 581, 0, 511, 512, 513,
	0, 515, 516, 0, 0, 517, 518, 519, 521, 522,
	520, 523, 0, 524, 0, 0, 525, 526, 527, 582,
	583, 584, 243, 529, 528, 585, 0, 0, 0, 0,
	530, 531, 586, 532, 533, 534, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 2097, 255, 256, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 536, 537, 0, 265,
	538, 266, 539, 0, 540, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 541, 542, 543, 0, 273, 274,
	544, 0, 0, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 0, 292, 0, 293, 294,
	0, 0, 0, 0, 0, 0, 0, 295, 296, 297,
	298, 0, 299, 545, 546, 0, 303, 300, 301, 0,
	304, 302, 0, 305, 306, 307, 0, 0, 308, 309,
	310, 0, 311, 312, 0, 313, 314, 315, 0, 316,
	317, 547, 318, 319, 320, 322, 324, 321, 325, 326,
	327, 328, 548, 549, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 331, 550, 0, 0, 0, 332, 0,
	333, 0, 0, 0, 334, 335, 551, 552, 336, 337,
	0, 338, 553, 0, 554, 339, 0, 340, 341, 342,
	343, 344, 555, 556, 557, 402, 0, 345, 346, 0,
	347, 348, 349, 350, 0, 0, 0, 0, 351, 352,
	354, 0, 0, 353, 558, 559, 0, 560, 0, 355,
	356, 0, 561, 0, 357, 358, 359, 0, 360, 0,
	0, 0, 361, 362, 363, 364, 365, 366, 0, 367,
	369, 368, 0, 370, 562, 0, 371, 372, 0, 0,
	373, 374, 375, 0, 0, 376, 377, 378, 379, 0,
	380, 381, 383, 385, 382, 384, 389, 386, 387, 388,
	391, 0, 390, 0, 392, 393, 394, 398, 397, 399,
	396, 0, 395, 0, 0, 0, 400, 0, 563, 401,
	564, 403, 404, 0, 0, 405, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 411, 565, 0, 412, 0,
	566, 413, 414, 406, 415, 416, 417, 418, 419, 420,
	421, 422, 0, 423, 424, 567, 568, 569, 425, 570,
	426, 427, 0, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 571, 437, 436, 438, 0, 439, 0, 0,
	0, 0, 0, 440, 0, 442, 443, 444, 441, 445,
	446, 447, 448, 0, 449, 450, 451, 0, 452, 453,
	454, 455, 572, 456, 0, 457, 458, 464, 465, 459,
	460, 466, 467, 468, 469, 470, 0, 472, 473, 471,
	474, 475, 476, 0, 477, 461, 462, 478, 479, 0,
	480, 481, 482, 483, 484, 485, 573, 0, 486, 0,
	487, 488, 489, 490, 463, 491, 496, 574, 492, 493,
	494, 495, 575, 0, 498, 499, 0, 497, 0, 500,
	501, 502, 503, 504, 505, 323, 506, 0, 507, 576,
	577, 578, 579, 0, 514, 0, 508, 509, 580, 510,
	581, 0, 511, 512, 513, 0, 515, 516, 0, 0,
	517, 518, 519, 521, 522, 520, 523, 0, 524, 0,
	0, 525, 526, 527, 582, 583, 584, 0, 529, 528,
	585, 2085, 0, 243, 0, 530, 531, 586, 532, 533,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 535, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 537, 0,
	265, 538, 266, 539, 0, 540, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 541, 542, 543, 0, 273,
	274, 544, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 0, 293,
	294, 0, 0, 0, 0, 0, 0, 0, 295, 296,
	297, 298, 0, 299, 545, 546, 0, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	309, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 547, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 548, 549, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 550, 0, 0, 0, 332,
	0, 333, 0, 0, 0, 334, 335, 551, 552, 336,
	337, 0, 338, 553, 0, 554, 339, 0, 340, 341,
	342, 343, 344, 555, 556, 557, 402, 0, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 0, 351,
	352, 354, 0, 0, 353, 558, 559, 0, 560, 0,
	355, 356, 0, 561, 0, 357, 358, 359, 0, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 562, 0, 371, 372, 0,
	0, 373, 374, 375, 0, 0, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 0, 392, 393, 394, 398, 397,
	399, 396, 0, 395, 0, 0, 0, 400, 0, 563,
	401, 564, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 0, 412,
	0, 566, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 569, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 571, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 572, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 0, 477, 461, 462, 478, 479,
	0, 480, 481, 482, 483, 484, 485, 573, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 574, 492,
	493, 494, 495, 575, 0, 498, 499, 0, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	576, 577, 578, 579, 0, 514, 0, 508, 509, 580,
	510, 581, 0, 511, 512, 513, 0, 515, 516, 0,
	0, 517, 518, 519, 521, 522, 520, 523, 0, 524,
	0, 0, 525, 526, 527, 582, 583, 584, 0, 529,
	528, 585, 640, 0, 243, 0, 530, 531, 586, 532,
	533, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 535, 0, 0, 0, 0,
	257, 258, 1147, 259, 261, 262, 263, 264, 536, 537,
	0, 265, 538, 266, 539, 0, 540, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 541, 542, 1145, 0,
	273, 274, 544, 0, 0, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 0, 292, 0,
	293, 294, 0, 0, 0, 0, 0, 0, 0, 295,
	296, 297, 298, 0, 299, 545, 546, 0, 303, 300,
	301, 0, 304, 302, 0, 305, 306, 307, 0, 0,
	308, 309, 310, 0, 311, 312, 0, 313, 314, 315,
	0, 316, 317, 547, 318, 319, 320, 322, 324, 321,
	325, 326, 327, 328, 548, 549, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 331, 550, 0, 0, 0,
	332, 0, 333, 0, 0, 0, 334, 335, 551, 552,
	336, 337, 0, 338, 553, 0, 554, 339, 0, 340,
	341, 342, 343, 344, 555, 556, 557, 402, 0, 345,
	346, 0, 347, 348, 349, 350, 0, 0, 0, 0,
	351, 352, 354, 0, 0, 353, 558, 559, 0, 560,
	0, 355, 356, 0, 561, 0, 357, 358, 359, 0,
	360, 0, 0, 0, 361, 362, 363, 364, 365, 366,
	0, 367, 369, 368, 0, 370, 562, 0, 371, 372,
	0, 0, 373, 374, 375, 0, 0, 376, 377, 378,
	379, 0, 380, 381, 383, 385, 382, 384, 389, 386,
	387, 388, 391, 0, 641, 0, 392, 393, 394, 398,
	397, 399, 396, 0, 395, 0, 0, 0, 400, 0,
	563, 401, 564, 403, 404, 0, 0, 405, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 411, 565, 0,
	412, 0, 566, 413, 414, 406, 415, 416, 417, 418,
	419, 420, 421, 422, 0, 423, 424, 567, 568, 569,
	425, 570, 426, 427, 0, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 571, 437, 436, 438, 0, 439,
	0, 0, 0, 0, 0, 440, 0, 442, 443, 444,
	441, 445, 446, 447, 448, 0, 449, 450, 451, 0,
	452, 453, 454, 455, 572, 456, 0, 457, 458, 464,
	465, 459, 460, 637, 467, 468, 469, 470, 0, 472,
	473, 471, 474, 1148, 476, 0, 477, 461, 462, 478,
	479, 0, 480, 481, 482, 483, 484, 485, 573, 0,
	486, 0, 487, 488, 489, 490, 463, 491, 496, 574,
	492, 493, 494, 495, 575, 0, 498, 499, 0, 497,
	0, 500, 501, 502, 503, 504, 505, 323, 506, 0,
	507, 636, 577, 578, 579, 0, 514, 0, 508, 509,
	580, 510, 581, 0, 511, 512, 513, 0, 515, 516,
	0, 0, 517, 518, 519, 521, 522, 520, 523, 0,
	524, 0, 0, 525, 526, 527, 582, 583, 584, 0,
	529, 528, 585, 640, 0, 243, 0, 530, 531, 586,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 535, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 536,
	537, 0, 265, 538, 266, 539, 0, 540, 267, 268,
	269, 270, 271, 0, 0, 0, 272, 541, 542, 543,
	0, 273, 630, 544, 0, 0, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 0, 292,
	0, 293, 294, 0, 0, 0, 0, 0, 0, 0,
	295, 296, 297, 298, 0, 299, 545, 546, 0, 303,
	300, 301, 0, 304, 302, 0, 305, 306, 307, 0,
	0, 308, 309, 310, 0, 311, 312, 0, 313, 314,
	315, 0, 316, 317, 547, 318, 319, 320, 322, 324,
	321, 325, 326, 327, 328, 548, 549, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 331, 550, 0, 0,
	0, 332, 0, 333, 0, 0, 0, 334, 335, 551,
	552, 336, 337, 0, 338, 553, 0, 554, 339, 0,
	340, 341, 342, 343, 344, 555, 556, 557, 402, 0,
	345, 346, 0, 347, 348, 349, 350, 0, 0, 0,
	0, 351, 352, 354, 0, 0, 353, 558, 559, 0,
	560, 0, 355, 356, 0, 561, 0, 357, 358, 359,
	0, 360, 0, 0, 0, 361, 362, 363, 364, 365,
	366, 0, 367, 369, 368, 0, 370, 562, 0, 371,
	372, 0, 0, 373, 374, 375, 0, 0, 376, 377,
	378, 379, 0, 380, 381, 383, 385, 382, 384, 389,
	386, 387, 388, 391, 0, 641, 0, 392, 393, 394,
	398, 397, 399, 396, 0, 395, 0, 0, 0, 400,
	0, 563, 401, 564, 403, 404, 0, 0, 405, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 411, 565,
	0, 412, 0, 566, 413, 414, 406, 415, 416, 417,
	418, 419, 420, 421, 422, 0, 423, 424, 567, 568,
	569, 425, 570, 426, 427, 0, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 571, 437, 436, 438, 0,
	439, 0, 0, 0, 0, 0, 440, 0, 442, 443,
	444, 441, 445, 446, 447, 448, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 572, 456, 0, 457, 458,
	464, 465, 459, 460, 637, 467, 468, 469, 470, 0,
	472, 473, 471, 474, 1456, 476, 0, 477, 461, 462,
	478, 479, 0, 480, 481, 482, 483, 484, 485, 573,
	0, 486, 0, 487, 488, 489, 490, 463, 491, 496,
	574, 492, 493, 494, 495, 575, 0, 498, 499, 0,
	497, 0, 500, 501, 502, 503, 504, 505, 323, 506,
	0, 507, 636, 577, 578, 579, 0, 514, 0, 508,
	509, 580, 510, 581, 0, 511, 512, 513, 0, 515,
	516, 0, 0, 517, 518, 519, 521, 522, 520, 523,
	0, 524, 0, 0, 525, 526, 527, 582, 583, 584,
	0, 529, 528, 585, 1437, 0, 243, 0, 530, 531,
	586, 532, 533, 534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 535, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 537, 0, 265, 538, 266, 539, 0, 540, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 541, 542,
	543, 0, 273, 274, 544, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 0, 293, 294, 0, 0, 0, 0, 0, 0,
	0, 295, 296, 297, 298, 0, 299, 545, 546, 0,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 309, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 547, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 548, 549, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 550, 0,
	0, 0, 332, 0, 333, 0, 0, 0, 334, 335,
	551, 552, 336, 337, 0, 338, 553, 0, 554, 339,
	0, 340, 341, 342, 343, 344, 1436, 556, 557, 402,
	0, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 0, 351, 352, 354, 0, 0, 353, 558, 559,
	0, 560, 0, 355, 356, 0, 561, 0, 357, 358,
	359, 0, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 562, 0,
	371, 372, 0, 0, 373, 374, 375, 0, 0, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 0, 392, 393,
	394, 398, 397, 399, 396, 0, 395, 0, 0, 0,
	400, 0, 563, 401, 564, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 0, 412, 0, 566, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 569, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 571, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 0, 452, 453, 454, 455, 572, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 0, 477, 461,
	462, 478, 479, 0, 480, 481, 482, 483, 484, 485,
	573, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 574, 492, 493, 494, 495, 575, 0, 498, 499,
	0, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 576, 577, 578, 579, 0, 514, 0,
	508, 509, 580, 510, 581, 0, 511, 512, 513, 0,
	515, 516, 0, 0, 517, 518, 519, 521, 522, 520,
	523, 0, 524, 0, 0, 525, 526, 527, 582, 583,
	584, 0, 529, 528, 585, 1430, 0, 243, 0, 530,
	531, 586, 532, 533, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 535, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 536, 537, 0, 265, 538, 266, 539, 0, 540,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 541,
	542, 543, 0, 273, 274, 544, 0, 0, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	0, 292, 0, 293, 294, 0, 0, 0, 0, 0,
	0, 0, 295, 296, 297, 298, 0, 299, 545, 546,
	0, 303, 300, 301, 0, 304, 302, 0, 305, 306,
	307, 0, 0, 308, 309, 310, 0, 311, 312, 0,
	313, 314, 315, 0, 316, 317, 547, 318, 319, 320,
	322, 324, 321, 325, 326, 327, 328, 548, 549, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 550,
	0, 0, 0, 332, 0, 333, 0, 0, 0, 334,
	335, 551, 552, 336, 337, 0, 338, 553, 0, 554,
	339, 0, 340, 341, 342, 343, 344, 1429, 556, 557,
	402, 0, 345, 346, 0, 347, 348, 349, 350, 0,
	0, 0, 0, 351, 352, 354, 0, 0, 353, 558,
	559, 0, 560, 0, 355, 356, 0, 561, 0, 357,
	358, 359, 0, 360, 0, 0, 0, 361, 362, 363,
	364, 365, 366, 0, 367, 369, 368, 0, 370, 562,
	0, 371, 372, 0, 0, 373, 374, 375, 0, 0,
	376, 377, 378, 379, 0, 380, 381, 383, 385, 382,
	384, 389, 386, 387, 388, 391, 0, 390, 0, 392,
	393, 394, 398, 397, 399, 396, 0, 395, 0, 0,
	0, 400, 0, 563, 401, 564, 403, 404, 0, 0,
	405, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	411, 565, 0, 412, 0, 566, 413, 414, 406, 415,
	416, 417, 418, 419, 420, 421, 422, 0, 423, 424,
	567, 568, 569, 425, 570, 426, 427, 0, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 571, 437, 436,
	438, 0, 439, 0, 0, 0, 0, 0, 440, 0,
	442, 443, 444, 441, 445, 446, 447, 448, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 572, 456, 0,
	457, 458, 464, 465, 459, 460, 466, 467, 468, 469,
	470, 0, 472, 473, 471, 474, 475, 476, 0, 477,
	461, 462, 478, 479, 0, 480, 481, 482, 483, 484,
	485, 573, 0, 486, 0, 487, 488, 489, 490, 463,
	491, 496, 574, 492, 493, 494, 495, 575, 0, 498,
	499, 0, 497, 0, 500, 501, 502, 503, 504, 505,
	323, 506, 0, 507, 576, 577, 578, 579, 0, 514,
	0, 508, 509, 580, 510, 581, 0, 511, 512, 513,
	0, 515, 516, 0, 0, 517, 518, 519, 521, 522,
	520, 523, 0, 524, 0, 0, 525, 526, 527, 582,
	583, 584, 0, 529, 528, 585, 1379, 0, 243, 0,
	530, 531, 586, 532, 533, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 274, 544, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 0, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 297, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 0,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 1378, 556,
	557, 402, 0, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 0, 351, 352, 354, 0, 0, 353,
	558, 559, 0, 560, 0, 355, 356, 0, 561, 0,
	357, 358, 359, 0, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 0, 371, 372, 0, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 0,
	392, 393, 394, 398, 397, 399, 396, 0, 395, 0,
	0, 0, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 0, 412, 0, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 0, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 0, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	582, 583, 584, 0, 529, 528, 585, 1364, 0, 243,
	0, 530, 531, 586, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	535, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 536, 537, 0, 265, 538, 266, 539,
	0, 540, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 541, 542, 543, 0, 273, 274, 544, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 0, 292, 0, 293, 294, 0, 0, 0,
	0, 0, 0, 0, 295, 296, 297, 298, 0, 299,
	545, 546, 0, 303, 300, 301, 0, 304, 302, 0,
	305, 306, 307, 0, 0, 308, 309, 310, 0, 311,
	312, 0, 313, 314, 315, 0, 316, 317, 547, 318,
	319, 320, 322, 324, 321, 325, 326, 327, 328, 548,
	549, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	331, 550, 0, 0, 0, 332, 0, 333, 0, 0,
	0, 334, 335, 551, 552, 336, 337, 0, 338, 553,
	0, 554, 339, 0, 340, 341, 342, 343, 344, 1363,
	556, 557, 402, 0, 345, 346, 0, 347, 348, 349,
	350, 0, 0, 0, 0, 351, 352, 354, 0, 0,
	353, 558, 559, 0, 560, 0, 355, 356, 0, 561,
	0, 357, 358, 359, 0, 360, 0, 0, 0, 361,
	362, 363, 364, 365, 366, 0, 367, 369, 368, 0,
	370, 562, 0, 371, 372, 0, 0, 373, 374, 375,
	0, 0, 376, 377, 378, 379, 0, 380, 381, 383,
	385, 382, 384, 389, 386, 387, 388, 391, 0, 390,
	0, 392, 393, 394, 398, 397, 399, 396, 0, 395,
	0, 0, 0, 400, 0, 563, 401, 564, 403, 404,
	0, 0, 405, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 411, 565, 0, 412, 0, 566, 413, 414,
	406, 415, 416, 417, 418, 419, 420, 421, 422, 0,
	423, 424, 567, 568, 569, 425, 570, 426, 427, 0,
	428, 0, 429, 430, 431, 432, 433, 434, 435, 571,
	437, 436, 438, 0, 439, 0, 0, 0, 0, 0,
	440, 0, 442, 443, 444, 441, 445, 446, 447, 448,
	0, 449, 450, 451, 0, 452, 453, 454, 455, 572,
	456, 0, 457, 458, 464, 465, 459, 460, 466, 467,
	468, 469, 470, 0, 472, 473, 471, 474, 475, 476,
	0, 477, 461, 462, 478, 479, 0, 480, 481, 482,
	483, 484, 485, 573, 0, 486, 0, 487, 488, 489,
	490, 463, 491, 496, 574, 492, 493, 494, 495, 575,
	0, 498, 499, 0, 497, 0, 500, 501, 502, 503,
	504, 505, 323, 506, 0, 507, 576, 577, 578, 579,
	0, 514, 0, 508, 509, 580, 510, 581, 0, 511,
	512, 513, 0, 515, 516, 0, 0, 517, 518, 519,
	521, 522, 520, 523, 0, 524, 0, 0, 525, 526,
	527, 582, 583, 584, 0, 529, 528, 585, 1359, 0,
	243, 0, 530, 531, 586, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 535, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 536, 537, 0, 265, 538, 266,
	539, 0, 540, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 541, 542, 543, 0, 273, 274, 544, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 0, 292, 0, 293, 294, 0, 0,
	0, 0, 0, 0, 0, 295, 296, 297, 298, 0,
	299, 545, 546, 0, 303, 300, 301, 0, 304, 302,
	0, 305, 306, 307, 0, 0, 308, 309, 310, 0,
	311, 312, 0, 313, 314, 315, 0, 316, 317, 547,
	318, 319, 320, 322, 324, 321, 325, 326, 327, 328,
	548, 549, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 331, 550, 0, 0, 0, 332, 0, 333, 0,
	0, 0, 334, 335, 551, 552, 336, 337, 0, 338,
	553, 0, 554, 339, 0, 340, 341, 342, 343, 344,
	555, 556, 557, 402, 0, 345, 346, 0, 347, 348,
	349, 350, 0, 0, 0, 0, 351, 352, 354, 0,
	0, 353, 558, 559, 0, 560, 0, 355, 356, 0,
	561, 0, 357, 358, 359, 0, 360, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 0, 367, 369, 368,
	0, 370, 562, 0, 371, 372, 0, 0, 373, 374,
	375, 0, 0, 376, 377, 378, 379, 0, 380, 381,
	383, 385, 382, 384, 389, 386, 387, 388, 391, 0,
	390, 0, 392, 393, 394, 398, 397, 399, 396, 0,
	395, 0, 0, 0, 400, 0, 563, 401, 564, 403,
	404, 0, 0, 405, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 411, 565, 0, 412, 0, 566, 413,
	414, 406, 415, 416, 417, 418, 419, 420, 421, 422,
	0, 423, 424, 567, 568, 569, 425, 570, 426, 427,
	0, 428, 0, 429, 430, 431, 432, 433, 434, 435,
	571, 437, 436, 438, 0, 439, 0, 0, 0, 0,
	0, 440, 0, 442, 443, 444, 441, 445, 446, 447,
	448, 0, 449, 450, 451, 0, 452, 453, 454, 455,
	572, 456, 0, 457, 458, 464, 465, 459, 460, 466,
	467, 468, 469, 470, 0, 472, 473, 471, 474, 475,
	476, 0, 477, 461, 462, 478, 479, 0, 480, 481,
	482, 483, 484, 485, 573, 0, 486, 0, 487, 488,
	489, 490, 463, 491, 496, 574, 492, 493, 494, 495,
	575, 0, 498, 499, 0, 497, 0, 500, 501, 502,
	503, 504, 505, 323, 506, 0, 507, 576, 577, 578,
	579, 0, 514, 0, 508, 509, 580, 510, 581, 0,
	511, 512, 513, 0, 515, 516, 0, 0, 517, 518,
	519, 521, 522, 520, 523, 0, 524, 0, 0, 525,
	526, 527, 582, 583, 584, 0, 529, 528, 585, 1291,
	0, 243, 0, 530, 531, 586, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 536, 537, 0, 265, 538,
	266, 539, 0, 540, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 541, 542, 543, 0, 273, 274, 544,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 0, 292, 0, 293, 294, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 297, 298,
	0, 299, 545, 546, 0, 303, 300, 301, 0, 304,
	302, 0, 305, 306, 307, 0, 0, 308, 309, 310,
	0, 311, 312, 0, 313, 314, 315, 0, 316, 317,
	547, 318, 319, 320, 322, 324, 321, 325, 326, 327,
	328, 548, 549, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 550, 0, 0, 0, 332, 0, 333,
	0, 0, 0, 334, 335, 551, 552, 336, 337, 0,
	338, 553, 0, 554, 339, 0, 340, 341, 342, 343,
	344, 555, 556, 557, 402, 0, 345, 346, 0, 347,
	348, 349, 350, 0, 0, 0, 0, 351, 352, 354,
	0, 0, 353, 558, 559, 0, 560, 0, 355, 356,
	0, 561, 0, 357, 358, 359, 0, 360, 0, 0,
	0, 361, 362, 363, 364, 365, 366, 0, 367, 369,
	368, 0, 370, 562, 0, 371, 372, 0, 0, 373,
	374, 375, 0, 0, 376, 377, 378, 379, 0, 380,
	381, 383, 385, 382, 384, 389, 386, 387, 388, 391,
	0, 390, 0, 392, 393, 394, 398, 397, 399, 396,
	0, 395, 0, 0, 0, 400, 0, 563, 401, 564,
	403, 404, 0, 0, 405, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 411, 565, 0, 412, 0, 566,
	413, 414, 406, 415, 416, 417, 418, 419, 420, 421,
	422, 0, 423, 424, 567, 568, 569, 425, 570, 426,
	427, 0, 428, 0, 429, 430, 431, 432, 433, 434,
	435, 571, 437, 436, 438, 0, 439, 0, 0, 0,
	0, 0, 440, 0, 442, 443, 444, 441, 445, 446,
	447, 448, 0, 449, 450, 451, 0, 452, 453, 454,
	455, 572, 456, 0, 457, 458, 464, 465, 459, 460,
	466, 467, 468, 469, 470, 0, 472, 473, 471, 474,
	475, 476, 0, 477, 461, 462, 478, 479, 0, 480,
	481, 482, 483, 484, 485, 573, 0, 486, 0, 487,
	488, 489, 490, 463, 491, 496, 574, 492, 493, 494,
	495, 575, 0, 498, 499, 0, 497, 0, 500, 501,
	502, 503, 504, 505, 323, 506, 0, 507, 576, 577,
	578, 579, 0, 514, 0, 508, 509, 580, 510, 581,
	0, 511, 512, 513, 0, 515, 516, 0, 0, 517,
	518, 519, 521, 522, 520, 523, 0, 524, 0, 0,
	525, 526, 527, 582, 583, 584, 0, 529, 528, 585,
	1275, 0, 243, 0, 530, 531, 586, 532, 533, 534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 536, 537, 0, 265,
	538, 266, 539, 0, 540, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 541, 542, 543, 0, 273, 274,
	544, 0, 0, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 0, 292, 0, 293, 294,
	0, 0, 0, 0, 0, 0, 0, 295, 296, 297,
	298, 0, 299, 545, 546, 0, 303, 300, 301, 0,
	304, 302, 0, 305, 306, 307, 0, 0, 308, 309,
	310, 0, 311, 312, 0, 313, 314, 315, 0, 316,
	317, 547, 318, 319, 320, 322, 324, 321, 325, 326,
	327, 328, 548, 549, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 331, 550, 0, 0, 0, 332, 0,
	333, 0, 0, 0, 334, 335, 551, 552, 336, 337,
	0, 338, 553, 0, 554, 339, 0, 340, 341, 342,
	343, 344, 555, 556, 557, 402, 0, 345, 346, 0,
	347, 348, 349, 350, 0, 0, 0, 0, 351, 352,
	354, 0, 0, 353, 558, 559, 0, 560, 0, 355,
	356, 0, 561, 0, 357, 358, 359, 0, 360, 0,
	0, 0, 361, 362, 363, 364, 365, 366, 0, 367,
	369, 368, 0, 370, 562, 0, 371, 372, 0, 0,
	373, 374, 375, 0, 0, 376, 377, 378, 379, 0,
	380, 381, 383, 385, 382, 384, 389, 386, 387, 388,
	391, 0, 390, 0, 392, 393, 394, 398, 397, 399,
	396, 0, 395, 0, 0, 0, 400, 0, 563, 401,
	564, 403, 404, 0, 0, 405, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 411, 565, 0, 412, 0,
	566, 413, 414, 406, 415, 416, 417, 418, 419, 420,
	421, 422, 0, 423, 424, 567, 568, 569, 425, 570,
	426, 427, 0, 428, 0, 429, 430, 431, 432, 433,
	434, 435, 571, 437, 436, 438, 0, 439, 0, 0,
	0, 0, 0, 440, 0, 442, 443, 444, 441, 445,
	446, 447, 448, 0, 449, 450, 451, 0, 452, 453,
	454, 455, 572, 456, 0, 457, 458, 464, 465, 459,
	460, 466, 467, 468, 469, 470, 0, 472, 473, 471,
	474, 475, 476, 0, 477, 461, 462, 478, 479, 0,
	480, 481, 482, 483, 484, 485, 573, 0, 486, 0,
	487, 488, 489, 490, 463, 491, 496, 574, 492, 493,
	494, 495, 575, 0, 498, 499, 0, 497, 0, 500,
	501, 502, 503, 504, 505, 323, 506, 0, 507, 576,
	577, 578, 579, 0, 514, 0, 508, 509, 580, 510,
	581, 0, 511, 512, 513, 0, 515, 516, 0, 0,
	517, 518, 519, 521, 522, 520, 523, 0, 524, 0,
	0, 525, 526, 527, 582, 583, 584, 0, 529, 528,
	585, 640, 0, 243, 0, 530, 531, 586, 532, 533,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 535, 0, 0, 0, 0, 257,
	258, 1147, 259, 261, 262, 263, 264, 536, 537, 0,
	265, 538, 266, 539, 0, 540, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 541, 542, 1145, 0, 273,
	274, 544, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 0, 293,
	294, 0, 0, 0, 0, 0, 0, 0, 295, 296,
	297, 298, 0, 299, 545, 546, 0, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	309, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 547, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 548, 549, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 550, 0, 0, 0, 332,
	0, 333, 0, 0, 0, 334, 335, 551, 552, 336,
	337, 0, 338, 553, 0, 554, 339, 0, 340, 341,
	342, 343, 344, 555, 556, 557, 402, 0, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 0, 351,
	352, 354, 0, 0, 353, 558, 559, 0, 560, 0,
	355, 356, 0, 561, 0, 357, 358, 359, 0, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 562, 0, 371, 372, 0,
	0, 373, 374, 375, 0, 0, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 641, 0, 392, 393, 394, 398, 397,
	399, 396, 0, 395, 0, 0, 0, 400, 0, 563,
	401, 564, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 0, 412,
	0, 566, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 569, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 571, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 572, 456, 0, 457, 458, 464, 465,
	459, 460, 637, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 1148, 476, 0, 477, 461, 462, 478, 479,
	0, 480, 481, 482, 483, 484, 485, 573, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 574, 492,
	493, 494, 495, 575, 0, 498, 499, 0, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	636, 577, 578, 579, 0, 514, 0, 508, 1146, 580,
	510, 581, 0, 511, 512, 513, 0, 515, 516, 0,
	0, 517, 518, 519, 521, 522, 520, 523, 0, 524,
	0, 0, 525, 526, 527, 582, 583, 584, 243, 529,
	528, 585, 0, 0, 0, 0, 530, 531, 586, 532,
	533, 534, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 1128, 255, 256, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 274, 544, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 0, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 297, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 0,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 555, 556,
	557, 402, 0, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 0, 351, 352, 354, 0, 0, 353,
	558, 559, 0, 560, 0, 355, 356, 0, 561, 0,
	357, 358, 359, 0, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 0, 371, 372, 0, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 0,
	392, 393, 394, 398, 397, 399, 396, 0, 395, 0,
	0, 0, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 0, 412, 0, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 0, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 0, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	582, 583, 584, 243, 529, 528, 585, 0, 0, 0,
	0, 530, 531, 586, 532, 533, 534, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 646, 255, 256, 0,
	0, 0, 0, 0, 535, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 537, 0,
	265, 538, 266, 539, 0, 540, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 541, 542, 543, 0, 273,
	274, 544, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 0, 293,
	294, 0, 0, 0, 0, 0, 0, 0, 295, 296,
	297, 298, 0, 299, 545, 546, 0, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	309, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 547, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 548, 549, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 550, 0, 0, 0, 332,
	0, 333, 0, 0, 0, 334, 335, 551, 552, 336,
	337, 0, 338, 553, 0, 554, 339, 0, 340, 341,
	342, 343, 344, 555, 556, 557, 402, 0, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 0, 351,
	352, 354, 0, 0, 353, 558, 559, 0, 560, 0,
	355, 356, 0, 561, 0, 357, 358, 359, 0, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 562, 0, 371, 372, 0,
	0, 373, 374, 375, 0, 0, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 0, 392, 393, 394, 398, 397,
	399, 396, 0, 395, 0, 0, 0, 400, 0, 563,
	401, 564, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 0, 412,
	0, 566, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 569, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 571, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 572, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 0, 477, 461, 462, 478, 479,
	0, 480, 481, 482, 483, 484, 485, 573, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 574, 492,
	493, 494, 495, 575, 0, 498, 499, 0, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	576, 577, 578, 579, 0, 514, 0, 508, 509, 580,
	510, 581, 0, 511, 512, 513, 0, 515, 516, 0,
	0, 517, 518, 519, 521, 522, 520, 523, 0, 524,
	0, 0, 525, 526, 527, 582, 583, 584, 0, 529,
	528, 585, 640, 0, 243, 0, 530, 531, 586, 532,
	533, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 535, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 536, 537,
	0, 265, 538, 266, 539, 0, 540, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 541, 542, 543, 0,
	273, 630, 544, 0, 0, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	628, 0, 287, 288, 289, 290, 291, 0, 292, 0,
	293, 294, 0, 0, 0, 0, 0, 0, 0, 295,
	296, 297, 298, 0, 299, 545, 546, 0, 303, 300,
	301, 0, 304, 302, 0, 305, 306, 307, 0, 0,
	308, 309, 310, 0, 311, 312, 0, 313, 314, 315,
	0, 316, 317, 547, 318, 319, 320, 322, 324, 321,
	325, 326, 327, 328, 548, 549, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 331, 550, 0, 0, 0,
	332, 0, 333, 0, 0, 0, 334, 335, 551, 552,
	336, 337, 0, 338, 553, 0, 554, 339, 0, 340,
	341, 342, 343, 344, 555, 556, 557, 402, 0, 345,
	346, 0, 347, 348, 349, 350, 0, 0, 0, 0,
	351, 352, 354, 0, 0, 353, 558, 559, 0, 560,
	0, 355, 356, 0, 561, 0, 357, 358, 359, 0,
	360, 0, 0, 0, 361, 362, 363, 364, 365, 366,
	0, 367, 369, 368, 0, 370, 562, 0, 371, 372,
	0, 0, 373, 374, 629, 0, 0, 376, 377, 378,
	379, 0, 380, 381, 383, 385, 382, 384, 389, 386,
	387, 388, 391, 0, 641, 0, 392, 393, 394, 398,
	397, 399, 396, 0, 395, 0, 0, 0, 400, 0,
	563, 401, 564, 403, 404, 0, 0, 405, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 411, 565, 0,
	412, 0, 566, 413, 414, 406, 415, 416, 417, 418,
	419, 420, 421, 422, 0, 423, 424, 567, 568, 569,
	425, 570, 426, 427, 0, 428, 0, 429, 430, 431,
	432, 433, 434, 435, 571, 437, 436, 438, 0, 439,
	0, 0, 0, 0, 0, 440, 0, 442, 443, 444,
	441, 445, 446, 447, 448, 0, 449, 450, 451, 0,
	452, 453, 454, 455, 631, 456, 0, 457, 458, 464,
	465, 459, 460, 637, 467, 468, 469, 470, 0, 472,
	473, 471, 474, 632, 476, 0, 477, 461, 462, 478,
	479, 0, 480, 481, 482, 483, 484, 485, 573, 0,
	486, 0, 487, 488, 489, 490, 463, 491, 496, 574,
	492, 493, 494, 495, 575, 0, 498, 499, 0, 497,
	0, 500, 501, 502, 503, 504, 505, 323, 506, 0,
	507, 636, 577, 578, 579, 0, 514, 0, 508, 634,
	580, 510, 581, 0, 511, 512, 513, 0, 515, 516,
	0, 0, 517, 518, 519, 521, 522, 520, 523, 0,
	524, 0, 0, 525, 526, 527, 582, 583, 584, 0,
	529, 528, 585, 622, 0, 243, 0, 530, 531, 586,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 535, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 536,
	537, 0, 265, 538, 266, 539, 0, 540, 267, 268,
	269, 270, 271, 0, 0, 0, 272, 541, 542, 543,
	0, 273, 274, 544, 0, 0, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 0, 292,
	0, 293, 294, 0, 0, 0, 0, 0, 0, 0,
	295, 296, 297, 298, 0, 299, 545, 546, 0, 303,
	300, 301, 0, 304, 302, 0, 305, 306, 307, 0,
	0, 308, 309, 310, 0, 311, 312, 0, 313, 314,
	315, 0, 316, 317, 547, 318, 319, 320, 322, 324,
	321, 325, 326, 327, 328, 548, 549, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 331, 550, 0, 0,
	0, 332, 0, 333, 0, 0, 0, 334, 335, 551,
	552, 336, 337, 0, 338, 553, 0, 554, 339, 0,
	340, 341, 342, 343, 344, 555, 556, 557, 402, 0,
	345, 346, 0, 347, 348, 349, 350, 0, 0, 0,
	0, 351, 352, 354, 0, 0, 353, 558, 559, 0,
	560, 0, 355, 356, 0, 561, 0, 357, 358, 359,
	0, 360, 0, 0, 0, 361, 362, 363, 364, 365,
	366, 0, 367, 369, 368, 0, 370, 562, 0, 371,
	372, 0, 0, 373, 374, 375, 0, 0, 376, 377,
	378, 379, 0, 380, 381, 383, 385, 382, 384, 389,
	386, 387, 388, 391, 0, 390, 0, 392, 393, 394,
	398, 397, 399, 396, 0, 395, 0, 0, 0, 400,
	0, 563, 401, 564, 403, 404, 0, 0, 405, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 411, 565,
	0, 412, 0, 566, 413, 414, 406, 415, 416, 417,
	418, 419, 420, 421, 422, 0, 423, 424, 567, 568,
	569, 425, 570, 426, 427, 0, 428, 0, 429, 430,
	431, 432, 433, 434, 435, 571, 437, 436, 438, 0,
	439, 0, 0, 0, 0, 0, 440, 0, 442, 443,
	444, 441, 445, 446, 447, 448, 0, 449, 450, 451,
	0, 452, 453, 454, 455, 572, 456, 0, 457, 458,
	623, 465, 459, 460, 466, 467, 468, 469, 470, 0,
	472, 473, 471, 474, 475, 476, 0, 477, 461, 462,
	478, 479, 0, 480, 481, 482, 483, 484, 485, 573,
	0, 486, 0, 487, 488, 489, 490, 463, 491, 496,
	574, 492, 493, 494, 495, 575, 0, 498, 499, 0,
	497, 0, 500, 501, 502, 503, 504, 505, 323, 506,
	0, 507, 576, 577, 578, 579, 0, 514, 0, 508,
	509, 580, 510, 581, 0, 511, 512, 513, 0, 515,
	516, 0, 0, 517, 518, 519, 521, 522, 520, 523,
	0, 524, 0, 0, 525, 526, 527, 582, 583, 584,
	0, 529, 528, 585, 620, 0, 243, 0, 530, 531,
	586, 532, 533, 534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 535, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	536, 537, 0, 265, 538, 266, 539, 0, 540, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 541, 542,
	543, 0, 273, 274, 544, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 0,
	292, 0, 293, 294, 0, 0, 0, 0, 0, 0,
	0, 295, 296, 297, 298, 0, 299, 545, 546, 0,
	303, 300, 301, 0, 304, 302, 0, 305, 306, 307,
	0, 0, 308, 309, 310, 0, 311, 312, 0, 313,
	314, 315, 0, 316, 317, 547, 318, 319, 320, 322,
	324, 321, 325, 326, 327, 328, 548, 549, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 550, 0,
	0, 0, 332, 0, 333, 0, 0, 0, 334, 335,
	551, 552, 336, 337, 0, 338, 553, 0, 554, 339,
	0, 340, 341, 342, 343, 344, 555, 556, 557, 402,
	0, 345, 346, 0, 347, 348, 349, 350, 0, 0,
	0, 0, 351, 352, 354, 0, 0, 353, 558, 559,
	0, 560, 0, 355, 356, 0, 561, 0, 357, 358,
	359, 0, 360, 0, 0, 0, 361, 362, 363, 364,
	365, 366, 0, 367, 369, 368, 0, 370, 562, 0,
	371, 372, 0, 0, 373, 374, 375, 0, 0, 376,
	377, 378, 379, 0, 380, 381, 383, 385, 382, 384,
	389, 386, 387, 388, 391, 0, 390, 0, 392, 393,
	394, 398, 397, 399, 396, 0, 395, 0, 0, 0,
	400, 0, 563, 401, 564, 403, 404, 0, 0, 405,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 411,
	565, 0, 412, 0, 566, 413, 414, 406, 415, 416,
	417, 418, 419, 420, 421, 422, 0, 423, 424, 567,
	568, 569, 425, 570, 426, 427, 0, 428, 0, 429,
	430, 431, 432, 433, 434, 435, 571, 437, 436, 438,
	0, 439, 0, 0, 0, 0, 0, 440, 0, 442,
	443, 444, 441, 445, 446, 447, 448, 0, 449, 450,
	451, 0, 452, 453, 454, 455, 572, 456, 0, 457,
	458, 464, 465, 459, 460, 466, 467, 468, 469, 470,
	0, 472, 473, 471, 474, 475, 476, 0, 477, 461,
	462, 478, 479, 0, 480, 481, 482, 483, 484, 485,
	573, 0, 486, 0, 487, 488, 489, 490, 463, 491,
	496, 574, 492, 493, 494, 495, 575, 0, 498, 499,
	0, 497, 0, 500, 501, 502, 503, 504, 505, 323,
	506, 0, 507, 576, 577, 578, 579, 0, 514, 0,
	508, 509, 580, 510, 581, 0, 511, 512, 513, 0,
	515, 516, 0, 0, 517, 518, 519, 521, 522, 520,
	523, 0, 524, 0, 0, 525, 526, 527, 582, 583,
	584, 0, 529, 528, 585, 614, 0, 243, 0, 530,
	531, 586, 532, 533, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 535, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 536, 537, 0, 265, 538, 266, 539, 0, 540,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 541,
	542, 543, 0, 273, 274, 544, 0, 0, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	0, 292, 0, 293, 294, 0, 0, 0, 0, 0,
	0, 0, 295, 296, 297, 298, 0, 299, 545, 546,
	0, 303, 300, 301, 0, 304, 302, 0, 305, 306,
	307, 0, 0, 308, 309, 310, 0, 311, 312, 0,
	313, 314, 315, 0, 316, 317, 547, 318, 319, 320,
	322, 324, 321, 325, 326, 327, 328, 548, 549, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 550,
	0, 0, 0, 332, 0, 333, 0, 0, 0, 334,
	335, 551, 552, 336, 337, 0, 338, 553, 0, 554,
	339, 0, 340, 341, 342, 343, 344, 555, 556, 557,
	402, 0, 345, 346, 0, 347, 348, 349, 350, 0,
	0, 0, 0, 351, 352, 354, 0, 0, 353, 558,
	559, 0, 560, 0, 355, 356, 0, 561, 0, 357,
	358, 359, 0, 360, 0, 0, 0, 361, 362, 363,
	364, 365, 366, 0, 367, 369, 368, 0, 370, 562,
	0, 371, 372, 0, 0, 373, 374, 375, 0, 0,
	376, 377, 378, 379, 0, 380, 381, 383, 385, 382,
	384, 389, 386, 387, 388, 391, 0, 390, 0, 392,
	393, 394, 398, 397, 399, 396, 0, 395, 0, 0,
	0, 400, 0, 563, 401, 564, 403, 404, 0, 0,
	405, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	411, 565, 0, 412, 0, 566, 413, 414, 406, 415,
	416, 417, 418, 419, 420, 421, 422, 0, 423, 424,
	567, 568, 569, 425, 570, 426, 427, 0, 428, 0,
	429, 430, 431, 432, 433, 434, 435, 571, 437, 436,
	438, 0, 439, 0, 0, 0, 0, 0, 440, 0,
	442, 443, 444, 441, 445, 446, 447, 448, 0, 449,
	450, 451, 0, 452, 453, 454, 455, 572, 456, 0,
	457, 458, 464, 465, 459, 460, 466, 467, 468, 469,
	470, 0, 472, 473, 471, 474, 475, 476, 0, 477,
	461, 462, 478, 479, 0, 480, 481, 482, 483, 484,
	485, 573, 0, 486, 0, 487, 488, 489, 490, 463,
	491, 496, 574, 492, 493, 494, 495, 575, 0, 498,
	499, 0, 497, 0, 500, 501, 502, 503, 504, 505,
	323, 506, 0, 507, 576, 577, 578, 579, 0, 514,
	0, 508, 509, 580, 510, 581, 0, 511, 512, 513,
	0, 515, 516, 0, 0, 517, 518, 519, 521, 522,
	520, 523, 0, 524, 0, 0, 525, 526, 527, 582,
	583, 584, 0, 529, 528, 585, 592, 0, 243, 0,
	530, 531, 586, 532, 533, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 274, 544, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 0, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 297, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 0,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 555, 556,
	557, 402, 0, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 0, 351, 352, 354, 0, 0, 353,
	558, 559, 0, 560, 0, 355, 356, 0, 561, 0,
	357, 358, 359, 0, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 0, 371, 372, 0, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 0,
	392, 393, 394, 398, 397, 399, 396, 0, 395, 0,
	0, 0, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 0, 412, 0, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 0, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 0, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	582, 583, 584, 243, 529, 528, 585, 0, 0, 0,
	0, 530, 531, 586, 532, 533, 534, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 535, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 537, 0,
	265, 538, 266, 539, 0, 540, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 541, 542, 543, 0, 273,
	274, 544, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 0, 293,
	294, 0, 0, 0, 0, 0, 0, 0, 295, 296,
	297, 298, 0, 299, 545, 546, 0, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	309, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 547, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 548, 549, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 550, 0, 0, 0, 332,
	0, 333, 0, 0, 0, 334, 335, 551, 552, 336,
	337, 0, 338, 553, 0, 554, 339, 0, 340, 341,
	342, 343, 344, 555, 556, 557, 402, 0, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 0, 351,
	352, 354, 0, 0, 353, 558, 559, 0, 560, 0,
	355, 356, 0, 561, 0, 357, 358, 359, 0, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 562, 0, 371, 372, 0,
	0, 373, 374, 375, 0, 0, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 0, 392, 393, 394, 398, 397,
	399, 396, 0, 395, 0, 0, 0, 400, 0, 563,
	401, 564, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 0, 412,
	0, 566, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 569, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 571, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 572, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 0, 477, 461, 462, 478, 479,
	0, 480, 481, 482, 483, 484, 485, 573, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 574, 492,
	493, 494, 495, 575, 0, 498, 499, 0, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	576, 577, 578, 579, 0, 514, 0, 508, 509, 580,
	510, 581, 0, 511, 512, 513, 0, 515, 516, 0,
	0, 517, 518, 519, 521, 522, 520, 523, 0, 524,
	0, 0, 525, 526, 527, 582, 583, 584, 243, 529,
	528, 585, 0, 0, 0, 0, 530, 531, 586, 532,
	533, 534, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 274, 544, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 0, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 297, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 0,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 3137, 556,
	557, 402, 0, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 0, 351, 352, 354, 0, 0, 353,
	558, 559, 0, 560, 0, 355, 356, 0, 561, 0,
	357, 358, 359, 0, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 0, 371, 372, 0, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 0,
	392, 393, 394, 398, 397, 399, 396, 0, 395, 0,
	0, 0, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 0, 412, 0, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 0, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 0, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	582, 583, 584, 243, 529, 528, 585, 0, 0, 0,
	0, 530, 531, 586, 532, 533, 534, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 535, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 537, 0,
	265, 538, 266, 539, 0, 540, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 541, 542, 543, 0, 273,
	274, 544, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 0, 293,
	294, 0, 0, 0, 0, 0, 0, 0, 295, 296,
	297, 298, 0, 299, 545, 546, 0, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	309, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 547, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 548, 549, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 550, 0, 0, 0, 332,
	0, 333, 0, 0, 0, 334, 335, 551, 552, 336,
	337, 0, 338, 553, 0, 554, 339, 0, 340, 341,
	342, 343, 344, 3086, 556, 557, 402, 0, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 0, 351,
	352, 354, 0, 0, 353, 558, 559, 0, 560, 0,
	355, 356, 0, 561, 0, 357, 358, 359, 0, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 562, 0, 371, 372, 0,
	0, 373, 374, 375, 0, 0, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 0, 392, 393, 394, 398, 397,
	399, 396, 0, 395, 0, 0, 0, 400, 0, 563,
	401, 564, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 0, 412,
	0, 566, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 569, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 571, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 572, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 0, 477, 461, 462, 478, 479,
	0, 480, 481, 482, 483, 484, 485, 573, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 574, 492,
	493, 494, 495, 575, 0, 498, 499, 0, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	576, 577, 578, 579, 0, 514, 0, 508, 509, 580,
	510, 581, 0, 511, 512, 513, 0, 515, 516, 0,
	0, 517, 518, 519, 521, 522, 520, 523, 0, 524,
	0, 0, 525, 526, 527, 582, 583, 584, 243, 529,
	528, 585, 0, 0, 0, 0, 530, 531, 586, 532,
	533, 534, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 274, 544, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 0, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 297, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 0,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 3024, 556,
	557, 402, 0, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 0, 351, 352, 354, 0, 0, 353,
	558, 559, 0, 560, 0, 355, 356, 0, 561, 0,
	357, 358, 359, 0, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 0, 371, 372, 0, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 0,
	392, 393, 394, 398, 397, 399, 396, 0, 395, 0,
	0, 0, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 0, 412, 0, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 0, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 0, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	582, 583, 584, 243, 529, 528, 585, 0, 0, 0,
	0, 530, 531, 586, 532, 533, 534, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 535, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 537, 0,
	265, 538, 266, 539, 0, 540, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 541, 542, 543, 0, 273,
	274, 544, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 0, 293,
	294, 0, 0, 0, 0, 0, 0, 0, 295, 296,
	297, 298, 0, 299, 545, 546, 0, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	309, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 547, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 548, 549, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 550, 0, 0, 0, 332,
	0, 333, 0, 0, 0, 334, 335, 551, 552, 336,
	337, 0, 338, 553, 0, 554, 339, 0, 340, 341,
	342, 343, 344, 3022, 556, 557, 402, 0, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 0, 351,
	352, 354, 0, 0, 353, 558, 559, 0, 560, 0,
	355, 356, 0, 561, 0, 357, 358, 359, 0, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 562, 0, 371, 372, 0,
	0, 373, 374, 375, 0, 0, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 0, 392, 393, 394, 398, 397,
	399, 396, 0, 395, 0, 0, 0, 400, 0, 563,
	401, 564, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 0, 412,
	0, 566, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 569, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 571, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 572, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 0, 477, 461, 462, 478, 479,
	0, 480, 481, 482, 483, 484, 485, 573, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 574, 492,
	493, 494, 495, 575, 0, 498, 499, 0, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	576, 577, 578, 579, 0, 514, 0, 508, 509, 580,
	510, 581, 0, 511, 512, 513, 0, 515, 516, 0,
	0, 517, 518, 519, 521, 522, 520, 523, 0, 524,
	0, 0, 525, 526, 527, 582, 583, 584, 243, 529,
	528, 585, 0, 0, 0, 0, 530, 531, 586, 532,
	533, 534, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 274, 544, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 0, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 297, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 0,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 3008, 556,
	557, 402, 0, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 0, 351, 352, 354, 0, 0, 353,
	558, 559, 0, 560, 0, 355, 356, 0, 561, 0,
	357, 358, 359, 0, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 0, 371, 372, 0, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 0,
	392, 393, 394, 398, 397, 399, 396, 0, 395, 0,
	0, 0, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 0, 412, 0, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 0, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 0, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	582, 583, 584, 243, 529, 528, 585, 0, 0, 0,
	0, 530, 531, 586, 532, 533, 534, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 535, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 537, 0,
	265, 538, 266, 539, 0, 540, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 541, 542, 543, 0, 273,
	274, 544, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 0, 293,
	294, 0, 0, 0, 0, 0, 0, 0, 295, 296,
	297, 298, 0, 299, 545, 546, 0, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	309, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 547, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 548, 549, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 550, 0, 0, 0, 332,
	0, 333, 0, 0, 0, 334, 335, 551, 552, 336,
	337, 0, 338, 553, 0, 554, 339, 0, 340, 341,
	342, 343, 344, 2640, 556, 557, 402, 0, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 0, 351,
	352, 354, 0, 0, 353, 558, 559, 0, 560, 0,
	355, 356, 0, 561, 0, 357, 358, 359, 0, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 562, 0, 371, 372, 0,
	0, 373, 374, 375, 0, 0, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 0, 392, 393, 394, 398, 397,
	399, 396, 0, 395, 0, 0, 0, 400, 0, 563,
	401, 564, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 0, 412,
	0, 566, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 569, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 571, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 572, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 0, 477, 461, 462, 478, 479,
	0, 480, 481, 482, 483, 484, 485, 573, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 574, 492,
	493, 494, 495, 575, 0, 498, 499, 0, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	576, 577, 578, 579, 0, 514, 0, 508, 509, 580,
	510, 581, 0, 511, 512, 513, 0, 515, 516, 0,
	0, 517, 518, 519, 521, 522, 520, 523, 0, 524,
	0, 0, 525, 526, 527, 582, 583, 584, 243, 529,
	528, 585, 0, 0, 0, 0, 530, 531, 586, 532,
	533, 534, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 274, 544, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 0, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 297, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 0,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 555, 556,
	557, 402, 0, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 0, 351, 352, 354, 0, 0, 353,
	558, 559, 0, 560, 0, 355, 356, 0, 561, 0,
	357, 358, 359, 0, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 0, 371, 372, 0, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 0,
	392, 393, 394, 398, 397, 399, 396, 0, 395, 0,
	0, 0, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 0, 412, 0, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 0, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 623, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 0, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	582, 583, 584, 243, 529, 528, 585, 0, 0, 0,
	0, 530, 531, 586, 532, 533, 534, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 535, 0, 2032, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 537, 0,
	265, 538, 266, 539, 0, 540, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 541, 542, 543, 0, 273,
	274, 544, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 0, 293,
	294, 0, 0, 0, 0, 0, 0, 0, 295, 296,
	297, 298, 0, 299, 545, 546, 0, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	309, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 547, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 548, 549, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 550, 0, 0, 0, 332,
	0, 333, 0, 0, 0, 334, 335, 551, 552, 336,
	337, 0, 338, 553, 0, 554, 339, 0, 340, 341,
	342, 343, 344, 555, 556, 557, 402, 0, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 0, 351,
	352, 354, 0, 0, 353, 558, 559, 0, 560, 0,
	355, 356, 0, 561, 0, 357, 358, 359, 0, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 562, 0, 371, 372, 0,
	0, 373, 374, 375, 0, 0, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 0, 392, 393, 394, 398, 397,
	399, 396, 0, 395, 0, 0, 0, 400, 0, 563,
	401, 564, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 0, 412,
	0, 566, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 569, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 571, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 572, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 0, 0, 461, 462, 478, 479,
	0, 480, 481, 482, 483, 484, 485, 573, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 574, 492,
	493, 494, 495, 575, 0, 498, 499, 0, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	576, 577, 578, 579, 0, 514, 0, 508, 509, 580,
	510, 581, 0, 511, 512, 513, 0, 515, 516, 0,
	0, 517, 518, 519, 521, 522, 520, 523, 0, 524,
	0, 0, 525, 526, 527, 582, 583, 584, 243, 529,
	528, 585, 0, 0, 0, 0, 530, 531, 586, 532,
	533, 534, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 274, 544, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 0, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 297, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 0,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 1401, 556,
	557, 402, 0, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 0, 351, 352, 354, 0, 0, 353,
	558, 559, 0, 560, 0, 355, 356, 0, 561, 0,
	357, 358, 359, 0, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 0, 371, 372, 0, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 0,
	392, 393, 394, 398, 397, 399, 396, 0, 395, 0,
	0, 0, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 0, 412, 0, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 437,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 0, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 0, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	582, 583, 584, 243, 529, 528, 585, 0, 0, 0,
	0, 530, 531, 586, 532, 533, 534, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 535, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 537, 0,
	265, 538, 266, 539, 0, 540, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 541, 542, 543, 0, 273,
	274, 544, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 0, 293,
	294, 0, 0, 0, 0, 0, 0, 0, 295, 296,
	297, 298, 0, 299, 545, 546, 0, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	309, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 547, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 548, 549, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 550, 0, 0, 0, 332,
	0, 333, 0, 0, 0, 334, 335, 551, 552, 336,
	337, 0, 338, 553, 0, 554, 339, 0, 340, 341,
	342, 343, 344, 1342, 556, 557, 402, 0, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 0, 351,
	352, 354, 0, 0, 353, 558, 559, 0, 560, 0,
	355, 356, 0, 561, 0, 357, 358, 359, 0, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 562, 0, 371, 372, 0,
	0, 373, 374, 375, 0, 0, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 0, 392, 393, 394, 398, 397,
	399, 396, 0, 395, 0, 0, 0, 400, 0, 563,
	401, 564, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 0, 412,
	0, 566, 413, 414, 406, 415, 416, 417, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 569, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	433, 434, 435, 571, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 572, 456, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 0, 477, 461, 462, 478, 479,
	0, 480, 481, 482, 483, 484, 485, 573, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 574, 492,
	493, 494, 495, 575, 0, 498, 499, 0, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	576, 577, 578, 579, 0, 514, 0, 508, 509, 580,
	510, 581, 0, 511, 512, 513, 0, 515, 516, 0,
	0, 517, 518, 519, 521, 522, 520, 523, 0, 524,
	0, 0, 525, 526, 527, 582, 583, 584, 243, 529,
	528, 585, 0, 0, 0, 0, 530, 531, 586, 532,
	533, 534, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 536, 537, 0, 265, 538, 266, 539, 0,
	540, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	541, 542, 543, 0, 273, 274, 544, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 0, 292, 0, 293, 294, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 297, 298, 0, 299, 545,
	546, 0, 303, 300, 301, 0, 304, 302, 0, 305,
	306, 307, 0, 0, 308, 309, 310, 0, 311, 312,
	0, 313, 314, 315, 0, 316, 317, 547, 318, 319,
	320, 322, 324, 321, 325, 326, 327, 328, 548, 549,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	550, 0, 0, 0, 332, 0, 333, 0, 0, 0,
	334, 335, 551, 552, 336, 337, 0, 338, 553, 0,
	554, 339, 0, 340, 341, 342, 343, 344, 555, 556,
	557, 402, 0, 345, 346, 0, 347, 348, 349, 350,
	0, 0, 0, 0, 351, 352, 354, 0, 0, 353,
	558, 559, 0, 560, 0, 355, 356, 0, 561, 0,
	357, 358, 359, 0, 360, 0, 0, 0, 361, 362,
	363, 364, 365, 366, 0, 367, 369, 368, 0, 370,
	562, 0, 371, 372, 0, 0, 373, 374, 375, 0,
	0, 376, 377, 378, 379, 0, 380, 381, 383, 385,
	382, 384, 389, 386, 387, 388, 391, 0, 390, 0,
	392, 393, 394, 398, 397, 399, 396, 0, 395, 0,
	0, 0, 400, 0, 563, 401, 564, 403, 404, 0,
	0, 405, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 411, 565, 0, 412, 0, 566, 413, 414, 406,
	415, 416, 417, 418, 419, 420, 421, 422, 0, 423,
	424, 567, 568, 569, 425, 570, 426, 427, 0, 428,
	0, 429, 430, 431, 432, 433, 434, 435, 571, 1080,
	436, 438, 0, 439, 0, 0, 0, 0, 0, 440,
	0, 442, 443, 444, 441, 445, 446, 447, 448, 0,
	449, 450, 451, 0, 452, 453, 454, 455, 572, 456,
	0, 457, 458, 464, 465, 459, 460, 466, 467, 468,
	469, 470, 0, 472, 473, 471, 474, 475, 476, 0,
	477, 461, 462, 478, 479, 0, 480, 481, 482, 483,
	484, 485, 573, 0, 486, 0, 487, 488, 489, 490,
	463, 491, 496, 574, 492, 493, 494, 495, 575, 0,
	498, 499, 0, 497, 0, 500, 501, 502, 503, 504,
	505, 323, 506, 0, 507, 576, 577, 578, 579, 0,
	514, 0, 508, 509, 580, 510, 581, 0, 511, 512,
	513, 0, 515, 516, 0, 0, 517, 518, 519, 521,
	522, 520, 523, 0, 524, 0, 0, 525, 526, 527,
	582, 583, 584, 243, 529, 528, 585, 0, 0, 0,
	0, 530, 531, 586, 532, 533, 534, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 535, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 536, 537, 0,
	265, 538, 266, 539, 0, 540, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 541, 542, 543, 0, 273,
	274, 544, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 0, 292, 0, 293,
	294, 0, 0, 0, 0, 0, 0, 0, 295, 296,
	297, 298, 0, 299, 545, 546, 0, 303, 300, 301,
	0, 304, 302, 0, 305, 306, 307, 0, 0, 308,
	309, 310, 0, 311, 312, 0, 313, 314, 315, 0,
	316, 317, 547, 318, 319, 320, 322, 324, 321, 325,
	326, 327, 328, 548, 549, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 550, 0, 0, 0, 332,
	0, 333, 0, 0, 0, 334, 335, 551, 552, 336,
	337, 0, 338, 553, 0, 554, 0, 0, 340, 341,
	342, 343, 344, 555, 556, 557, 402, 0, 345, 346,
	0, 347, 348, 349, 350, 0, 0, 0, 0, 351,
	352, 354, 0, 0, 353, 558, 559, 0, 560, 0,
	355, 356, 0, 561, 0, 357, 358, 359, 0, 360,
	0, 0, 0, 361, 362, 363, 364, 365, 366, 0,
	367, 369, 368, 0, 370, 562, 0, 371, 372, 0,
	0, 373, 374, 375, 0, 0, 376, 377, 378, 379,
	0, 380, 381, 383, 385, 382, 384, 389, 386, 387,
	388, 391, 0, 390, 0, 392, 393, 394, 398, 397,
	399, 396, 0, 395, 0, 0, 0, 400, 0, 563,
	401, 564, 403, 404, 0, 0, 405, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 411, 565, 0, 412,
	0, 566, 413, 414, 406, 415, 416, 0, 418, 419,
	420, 421, 422, 0, 423, 424, 567, 568, 569, 425,
	570, 426, 427, 0, 428, 0, 429, 430, 431, 432,
	0, 434, 435, 571, 437, 436, 438, 0, 439, 0,
	0, 0, 0, 0, 440, 0, 442, 443, 444, 441,
	445, 446, 447, 448, 0, 449, 450, 451, 0, 452,
	453, 454, 455, 572, 0, 0, 457, 458, 464, 465,
	459, 460, 466, 467, 468, 469, 470, 0, 472, 473,
	471, 474, 475, 476, 0, 477, 461, 462, 478, 479,
	0, 480, 481, 482, 483, 484, 485, 573, 0, 486,
	0, 487, 488, 489, 490, 463, 491, 496, 574, 492,
	493, 494, 495, 575, 0, 498, 499, 0, 497, 0,
	500, 501, 502, 503, 504, 505, 323, 506, 0, 507,
	576, 577, 578, 579, 0, 514, 0, 508, 509, 580,
	510, 581, 0, 511, 512, 513, 0, 515, 516, 0,
	0, 517, 518, 519, 521, 522, 520, 523, 0, 524,
	0, 0, 525, 526, 527, 582, 583, 584, 0, 529,
	528, 585, 0, 0, 0, 0, 530, 531, 586, 532,
	533, 534, 1611, 1612, 0, 1644, 1645, 1646, 1654, 1655,
	1656, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1647, 1642, 0, 0, 0, 0, 0,
	0, 1614, 0, 0, 0, 0, 0, 0, 0, 1660,
	0, 0, 0, 0, 0, 0, 1611, 1612, 0, 1644,
	1645, 1646, 1654, 1655, 1656, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1613, 0, 0, 1647, 1642, 0,
	0, 0, 0, 0, 1633, 1614, 0, 0, 0, 0,
	0, 0, 1630, 1660, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1613, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1633, 0,
	0, 0, 0, 0, 0, 0, 1630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1611, 1612, 0, 1644, 1645, 1646, 1654, 1655, 1656, 0,
	1636, 1637, 1638, 1639, 0, 0, 0, 0, 0, 0,
	1619, 1647, 1642, 0, 0, 0, 0, 0, 0, 1614,
	0, 0, 0, 0, 0, 0, 0, 1660, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1651,
	0, 0, 1661, 0, 1636, 1637, 1638, 1639, 1641, 1643,
	0, 0, 1613, 0, 1619, 0, 0, 0, 0, 0,
	0, 0, 1633, 0, 1657, 0, 1658, 0, 0, 0,
	1630, 0, 0, 1628, 1629, 0, 0, 0, 0, 0,
	0, 0, 0, 1651, 0, 0, 1661, 0, 0, 0,
	0, 1649, 1641, 1643, 0, 0, 0, 0, 0, 0,
	0, 0, 1634, 0, 0, 0, 0, 0, 1657, 0,
	1658, 0, 0, 0, 0, 0, 0, 1628, 1629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1659, 0,
	0, 0, 0, 0, 0, 1649, 0, 0, 1636, 1637,
	1638, 1639, 0, 0, 0, 1648, 1634, 0, 1619, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1659, 0, 0, 0, 0, 1651, 0, 0,
	1661, 0, 0, 0, 0, 0, 1641, 1643, 0, 1648,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	0, 0, 1657, 0, 1658, 0, 0, 0, 0, 0,
	0, 1628, 1629, 0, 0, 0, 0, 1635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1649,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1634, 1640, 1652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1635, 0, 0, 0, 0, 1659, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1648, 0, 0, 1652, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1650, 1640, 0, 0, 1625, 1626,
	1632, 1653, 1631, 1627, 0, 1624, 1622, 1623, 1615, 1616,
	1617, 1618, 1620, 1621, 0, 1635, 0, 0, 0, 0,
	0, 0, 2849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1650, 0,
	1652, 0, 1625, 1626, 1632, 1653, 1631, 1627, 0, 1624,
	1622, 1623, 1615, 1616, 1617, 1618, 1620, 1621, 0, 0,
	0, 0, 0, 0, 0, 0, 2848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1611, 1612, 0, 1644, 1645, 1646, 1654, 1655, 1656, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1647, 1642, 0, 0, 0, 0, 0, 0, 1614,
	0, 0, 0, 0, 0, 0, 0, 1660, 0, 0,
	0, 0, 1650, 0, 0, 0, 1625, 1626, 1632, 1653,
	1631, 1627, 0, 1624, 1622, 1623, 1615, 1616, 1617, 1618,
	1620, 1621, 1613, 0, 0, 0, 0, 0, 0, 0,
	2279, 0, 1633, 0, 0, 0, 0, 0, 0, 0,
	1630, 0, 1611, 1612, 0, 1644, 1645, 1646, 1654, 1655,
	1656, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1647, 1642, 0, 0, 0, 0, 0,
	0, 1614, 0, 0, 0, 0, 0, 0, 0, 1660,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1613, 0, 0, 0, 1636, 1637,
	1638, 1639, 0, 0, 1633, 0, 0, 0, 1619, 0,
	0, 0, 1630, 0, 1611, 1612, 0, 1644, 1645, 1646,
	1654, 1655, 1656, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1647, 1642, 1651, 0, 0,
	1661, 0, 0, 1614, 0, 0, 1641, 1643, 0, 0,
	0, 1660, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1657, 0, 1658, 0, 0, 0, 0, 0,
	0, 1628, 1629, 0, 0, 0, 1613, 0, 0, 0,
	1636, 1637, 1638, 1639, 0, 0, 1633, 0, 0, 1649,
	1619, 0, 0, 0, 1630, 0, 0, 0, 0, 0,
	1634, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1651,
	0, 0, 1661, 0, 0, 0, 1659, 0, 1641, 1643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1648, 1657, 0, 1658, 0, 0, 0,
	0, 0, 0, 1628, 1629, 0, 0, 0, 0, 0,
	0, 0, 1636, 1637, 1638, 1639, 0, 0, 0, 0,
	0, 1649, 1619, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1640, 0, 0, 0, 0,
	0, 1651, 0, 0, 1661, 0, 0, 0, 1659, 0,
	1641, 1643, 0, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1648, 1657, 0, 1658, 0,
	0, 0, 0, 0, 0, 1628, 1629, 0, 0, 0,
	1652, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1649, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1634, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1659, 0, 0, 0, 0, 0, 0, 1635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1650, 0, 0, 0, 1625, 1626, 1632, 1653,
	1631, 1627, 0, 1624, 1622, 1623, 1615, 1616, 1617, 1618,
	1620, 1621, 0, 0, 0, 0, 4024, 0, 0, 1640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1635,
	1611, 1612, 0, 1644, 1645, 1646, 1654, 1655, 1656, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1647, 1642, 0, 1652, 0, 0, 0, 0, 1614,
	0, 0, 0, 0, 1650, 0, 0, 1660, 1625, 1626,
	1632, 1653, 1631, 1627, 0, 1624, 1622, 1623, 1615, 1616,
	1617, 1618, 1620, 1621, 0, 0, 0, 0, 4020, 0,
	0, 0, 1613, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1633, 0, 0, 0, 0, 0, 0, 0,
	1630, 0, 1611, 1612, 0, 1644, 1645, 1646, 1654, 1655,
	1656, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1647, 1642, 0, 0, 0, 0, 0,
	0, 1614, 0, 0, 0, 0, 1650, 0, 0, 1660,
	1625, 1626, 1632, 1653, 1631, 1627, 0, 1624, 1622, 1623,
	1615, 1616, 1617, 1618, 1620, 1621, 0, 0, 0, 0,
	3930, 0, 0, 0, 1613, 0, 0, 0, 1636, 1637,
	1638, 1639, 0, 0, 1633, 0, 0, 0, 1619, 0,
	0, 0, 1630, 0, 1611, 1612, 0, 1644, 1645, 1646,
	1654, 1655, 1656, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1647, 1642, 1651, 0, 0,
	1661, 0, 0, 1614, 0, 0, 1641, 1643, 0, 0,
	0, 1660, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1657, 0, 1658, 0, 0, 0, 0, 0,
	0, 1628, 1629, 0, 0, 0, 1613, 0, 0, 0,
	1636, 1637, 1638, 1639, 0, 0, 1633, 0, 0, 1649,
	1619, 0, 0, 0, 1630, 0, 0, 0, 0, 0,
	1634, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1651,
	0, 0, 1661, 0, 0, 0, 1659, 0, 1641, 1643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1648, 1657, 0, 1658, 0, 0, 0,
	0, 0, 0, 1628, 1629, 0, 0, 0, 0, 0,
	0, 0, 1636, 1637, 1638, 1639, 0, 0, 0, 0,
	0, 1649, 1619, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1640, 0, 0, 0, 0,
	0, 1651, 0, 0, 1661, 0, 0, 0, 1659, 0,
	1641, 1643, 0, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1648, 1657, 0, 1658, 0,
	0, 0, 0, 0, 0, 1628, 1629, 0, 0, 0,
	1652, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1649, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1634, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1659, 0, 0, 0, 0, 0, 0, 1635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1650, 0, 0, 0, 1625, 1626, 1632, 1653,
	1631, 1627, 0, 1624, 1622, 1623, 1615, 1616, 1617, 1618,
	1620, 1621, 0, 0, 0, 0, 3929, 0, 0, 1640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1635,
	1611, 1612, 0, 1644, 1645, 1646, 1654, 1655, 1656, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1647, 1642, 0, 1652, 0, 0, 0, 0, 1614,
	0, 0, 0, 0, 1650, 0, 0, 1660, 1625, 1626,
	1632, 1653, 1631, 1627, 0, 1624, 1622, 1623, 1615, 1616,
	1617, 1618, 1620, 1621, 0, 0, 0, 0, 3777, 0,
	0, 0, 1613, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1633, 0, 0, 0, 0, 0, 0, 0,
	1630, 0, 1611, 1612, 0, 1644, 1645, 1646, 1654, 1655,
	1656, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1647, 1642, 0, 0, 0, 0, 0,
	0, 1614, 0, 0, 0, 0, 1650, 0, 0, 1660,
	1625, 1626, 1632, 1653, 1631, 1627, 0, 1624, 1622, 1623,
	1615, 1616, 1617, 1618, 1620, 1621, 0, 0, 0, 0,
	3638, 0, 0, 0, 1613, 0, 0, 0, 1636, 1637,
	1638, 1639, 0, 0, 1633, 0, 0, 0, 1619, 0,
	0, 0, 1630, 0, 1611, 1612, 0, 1644, 1645, 1646,
	1654, 1655, 1656, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1647, 1642, 1651, 0, 0,
	1661, 0, 0, 1614, 0, 0, 1641, 1643, 0, 0,
	0, 1660, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1657, 0, 1658, 0, 0, 0, 0, 0,
	0, 1628, 1629, 0, 0, 0, 1613, 0, 0, 0,
	1636, 1637, 1638, 1639, 0, 0, 1633, 0, 0, 1649,
	1619, 0, 0, 0, 1630, 0, 0, 0, 0, 0,
	1634, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1651,
	0, 0, 1661, 0, 0, 0, 1659, 0, 1641, 1643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1648, 1657, 0, 1658, 0, 0, 0,
	0, 0, 0, 1628, 1629, 0, 0, 0, 0, 0,
	0, 0, 1636, 1637, 1638, 1639, 0, 0, 0, 0,
	0, 1649, 1619, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1640, 0, 0, 0, 0,
	0, 1651, 0, 0, 1661, 0, 0, 0, 1659, 0,
	1641, 1643, 0, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1648, 1657, 0, 1658, 0,
	0, 0, 0, 0, 0, 1628, 1629, 0, 0, 0,
	1652, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1649, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1634, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1659, 0, 0, 0, 0, 0, 0, 1635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1650, 0, 0, 0, 1625, 1626, 1632, 1653,
	1631, 1627, 0, 1624, 1622, 1623, 1615, 1616, 1617, 1618,
	1620, 1621, 0, 0, 0, 0, 3582, 0, 0, 1640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1635,
	1611, 1612, 0, 1644, 1645, 1646, 1654, 1655, 1656, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1647, 1642, 0, 1652, 0, 0, 0, 0, 1614,
	0, 0, 0, 0, 1650, 0, 0, 1660, 1625, 1626,
	1632, 1653, 1631, 1627, 0, 1624, 1622, 1623, 1615, 1616,
	1617, 1618, 1620, 1621, 0, 0, 0, 0, 3581, 0,
	0, 0, 1613, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1633, 0, 0, 0, 0, 0, 0, 0,
	1630, 0, 1611, 1612, 0, 1644, 1645, 1646, 1654, 1655,
	1656, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1647, 1642, 0, 0, 0, 0, 0,
	0, 1614, 0, 0, 0, 0, 1650, 0, 0, 1660,
	1625, 1626, 1632, 1653, 1631, 1627, 0, 1624, 1622, 1623,
	1615, 1616, 1617, 1618, 1620, 1621, 0, 0, 0, 0,
	3580, 0, 0, 0, 1613, 0, 0, 0, 1636, 1637,
	1638, 1639, 0, 0, 1633, 0, 0, 0, 1619, 0,
	0, 0, 1630, 0, 1611, 1612, 0, 1644, 1645, 1646,
	1654, 1655, 1656, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1647, 1642, 1651, 0, 0,
	1661, 0, 0, 1614, 0, 0, 1641, 1643, 0, 0,
	0, 1660, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1657, 0, 1658, 0, 0, 0, 0, 0,
	0, 1628, 1629, 0, 0, 0, 1613, 0, 0, 0,
	1636, 1637, 1638, 1639, 0, 0, 1633, 0, 0, 1649,
	1619, 0, 0, 0, 1630, 0, 0, 0, 0, 0,
	1634, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1651,
	0, 0, 1661, 0, 0, 0, 1659, 0, 1641, 1643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1648, 1657, 0, 1658, 0, 0, 0,
	0, 0, 0, 1628, 1629, 0, 0, 0, 0, 0,
	0, 0, 1636, 1637, 1638, 1639, 0, 0, 0, 0,
	0, 1649, 1619, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1640, 0, 0, 0, 0,
	0, 1651, 0, 0, 1661, 0, 0, 0, 1659, 0,
	1641, 1643, 0, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1648, 1657, 0, 1658, 0,
	0, 0, 0, 0, 0, 1628, 1629, 0, 0, 0,
	1652, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1649, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1634, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1659, 0, 0, 0, 0, 0, 0, 1635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1650, 0, 0, 0, 1625, 1626, 1632, 1653,
	1631, 1627, 0, 1624, 1622, 1623, 1615, 1616, 1617, 1618,
	1620, 1621, 0, 0, 0, 0, 3282, 0, 0, 1640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1635,
	1611, 1612, 0, 1644, 1645, 1646, 1654, 1655, 1656, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1647, 1642, 0, 1652, 0, 0, 0, 0, 1614,
	0, 0, 0, 0, 1650, 0, 0, 1660, 1625, 1626,
	1632, 1653, 1631, 1627, 0, 1624, 1622, 1623, 1615, 1616,
	1617, 1618, 1620, 1621, 0, 0, 0, 0, 2846, 0,
	0, 0, 1613, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1633, 0, 0, 0, 0, 0, 0, 0,
	1630, 0, 1611, 1612, 0, 1644, 1645, 1646, 1654, 1655,
	1656, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1647, 1642, 0, 0, 0, 0, 0,
	0, 1614, 0, 0, 0, 0, 1650, 0, 0, 1660,
	1625, 1626, 1632, 1653, 1631, 1627, 0, 1624, 1622, 1623,
	1615, 1616, 1617, 1618, 1620, 1621, 0, 0, 0, 0,
	2845, 0, 0, 0, 1613, 0, 0, 0, 1636, 1637,
	1638, 1639, 0, 0, 1633, 0, 0, 0, 1619, 0,
	0, 0, 1630, 0, 1611, 1612, 0, 1644, 1645, 1646,
	1654, 1655, 1656, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1647, 1642, 1651, 0, 0,
	1661, 0, 0, 1614, 0, 0, 1641, 1643, 0, 0,
	0, 1660, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1657, 0, 1658, 0, 0, 0, 0, 0,
	0, 1628, 1629, 0, 0, 0, 1613, 0, 0, 0,
	1636, 1637, 1638, 1639, 0, 0, 1633, 0, 0, 1649,
	1619, 0, 0, 0, 1630, 0, 0, 0, 0, 0,
	1634, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1651,
	0, 0, 1661, 0, 0, 0, 1659, 0, 1641, 1643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1648, 1657, 0, 1658, 0, 0, 0,
	0, 0, 0, 1628, 1629, 0, 0, 0, 0, 0,
	0, 0, 1636, 1637, 1638, 1639, 0, 0, 0, 0,
	0, 1649, 1619, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1640, 0, 0, 0, 0,
	0, 1651, 0, 0, 1661, 0, 0, 0, 1659, 0,
	1641, 1643, 0, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1648, 1657, 0, 1658, 0,
	0, 0, 0, 0, 0, 1628, 1629, 0, 0, 0,
	1652, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1649, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1634, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1659, 0, 0, 0, 0, 0, 0, 1635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1650, 0, 0, 0, 1625, 1626, 1632, 1653,
	1631, 1627, 0, 1624, 1622, 1623, 1615, 1616, 1617, 1618,
	1620, 1621, 0, 0, 0, 0, 2844, 0, 0, 1640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1635,
	1611, 1612, 0, 1644, 1645, 1646, 1654, 1655, 1656, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1647, 1642, 0, 1652, 0, 0, 0, 0, 1614,
	0, 0, 0, 0, 1650, 0, 0, 1660, 1625, 1626,
	1632, 1653, 1631, 1627, 0, 1624, 1622, 1623, 1615, 1616,
	1617, 1618, 1620, 1621, 0, 0, 0, 0, 2843, 0,
	0, 0, 1613, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1633, 0, 0, 0, 0, 0, 0, 0,
	1630, 0, 1611, 1612, 0, 1644, 1645, 1646, 1654, 1655,
	1656, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1647, 1642, 0, 0, 0, 0, 2781,
	0, 1614, 0, 0, 0, 0, 1650, 0, 0, 1660,
	1625, 1626, 1632, 1653, 1631, 1627, 0, 1624, 1622, 1623,
	1615, 1616, 1617, 1618, 1620, 1621, 0, 0, 2810, 0,
	0, 0, 0, 0, 1613, 0, 0, 0, 1636, 1637,
	1638, 1639, 0, 0, 1633, 0, 0, 0, 1619, 4146,
	0, 0, 1630, 0, 1611, 1612, 0, 1644, 1645, 1646,
	1654, 1655, 1656, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1647, 1642, 1651, 0, 0,
	1661, 0, 0, 1614, 0, 2782, 1641, 1643, 0, 0,
	0, 1660, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1657, 0, 1658, 0, 0, 0, 0, 0,
	0, 1628, 1629, 0, 0, 0, 1613, 0, 0, 0,
	1636, 1637, 1638, 1639, 0, 0, 1633, 0, 0, 1649,
	1619, 0, 0, 0, 1630, 0, 0, 0, 0, 0,
	1634, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1651,
	0, 0, 1661, 0, 0, 0, 1659, 0, 1641, 1643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1648, 1657, 0, 1658, 0, 0, 0,
	0, 0, 0, 1628, 1629, 0, 0, 0, 0, 0,
	0, 0, 1636, 1637, 1638, 1639, 0, 0, 0, 4145,
	0, 1649, 1619, 0, 2906, 0, 0, 2905, 0, 0,
	0, 0, 1634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1640, 0, 0, 0, 0,
	0, 1651, 0, 0, 1661, 0, 0, 0, 1659, 0,
	1641, 1643, 0, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1648, 1657, 0, 1658, 0,
	0, 0, 0, 0, 0, 1628, 1629, 0, 0, 0,
	1652, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1649, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1634, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1659, 0, 0, 0, 0, 0, 0, 1635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1650, 0, 0, 0, 1625, 1626, 1632, 1653,
	1631, 1627, 0, 1624, 1622, 1623, 1615, 1616, 1617, 1618,
	1620, 1621, 0, 0, 0, 0, 0, 0, 0, 1640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2399, 0, 0, 0, 0, 0, 1635,
	1611, 1612, 0, 1644, 1645, 1646, 1654, 1655, 1656, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1647, 1642, 0, 1652, 0, 2398, 0, 0, 1614,
	0, 0, 0, 0, 1650, 0, 0, 1660, 1625, 1626,
	1632, 1653, 1631, 1627, 0, 1624, 1622, 1623, 1615, 1616,
	1617, 1618, 1620, 1621, 0, 0, 0, 0, 0, 0,
	0, 0, 1613, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1633, 0, 0, 0, 0, 0, 0, 0,
	1630, 0, 1611, 1612, 0, 1644, 1645, 1646, 1654, 1655,
	1656, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1647, 1642, 0, 0, 0, 0, 0,
	0, 1614, 0, 0, 0, 0, 1650, 0, 0, 1660,
	1625, 1626, 1632, 1653, 1631, 1627, 0, 1624, 1622, 1623,
	1615, 1616, 1617, 1618, 1620, 1621, 0, 0, 0, 0,
	0, 0, 0, 0, 1613, 0, 0, 0, 1636, 1637,
	1638, 1639, 0, 0, 1633, 0, 0, 0, 1619, 0,
	0, 0, 1630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1651, 0, 0,
	1661, 0, 0, 0, 0, 0, 1641, 1643, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1657, 0, 1658, 0, 0, 0, 0, 0,
	0, 1628, 1629, 0, 0, 0, 0, 0, 0, 0,
	1636, 1637, 1638, 1639, 0, 0, 0, 0, 0, 1649,
	1619, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1634, 0, 0, 1611, 1612, 0, 1644, 1645, 1646, 1654,
	1655, 1656, 0, 0, 0, 0, 0, 0, 0, 1651,
	0, 0, 1661, 0, 1647, 1642, 1659, 0, 1641, 1643,
	0, 0, 1614, 0, 0, 0, 0, 0, 0, 0,
	1660, 0, 0, 1648, 1657, 0, 1658, 0, 0, 0,
	0, 0, 0, 1628, 1629, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1613, 0, 0, 0, 0,
	0, 1649, 0, 0, 0, 1633, 0, 0, 0, 0,
	0, 0, 1634, 1630, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1659, 0,
	0, 0, 0, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1648, 937, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1652, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1636, 1637, 1638, 1639, 0, 0, 0, 0, 0,
	0, 1619, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1651, 0, 0, 1661, 0, 0, 0, 1635, 0, 1641,
	1643, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1657, 0, 1658, 0, 0,
	0, 0, 1652, 0, 1628, 1629, 0, 0, 0, 0,
	0, 0, 1650, 0, 0, 0, 1625, 1626, 1632, 1653,
	1631, 1627, 1649, 1624, 1622, 1623, 1615, 1616, 1617, 1618,
	1620, 1621, 0, 1634, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1659,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1648, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1650, 0, 0, 0, 1625, 1626,
	1632, 1653, 1631, 1627, 0, 1624, 1622, 1623, 1615, 1616,
	1617, 1618, 1620, 1621, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1640, 0,
	0, 0, 0, 0, 0, 0, 0, 1611, 1612, 0,
	1644, 1645, 1646, 1654, 1655, 1656, 0, 0, 1635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1647, 1642,
	0, 0, 0, 0, 0, 0, 1614, 0, 0, 0,
	0, 0, 0, 1652, 1660, 0, 0, 0, 0, 0,
	0, 1611, 1612, 0, 1644, 1645, 1646, 1654, 1655, 1656,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1613,
	0, 0, 1647, 1642, 0, 0, 0, 2907, 0, 1633,
	1614, 3263, 0, 0, 0, 0, 0, 1630, 1660, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1633, 0, 0, 0, 0, 0, 0,
	0, 1630, 0, 0, 0, 1650, 0, 0, 0, 1625,
	1626, 1632, 1653, 1631, 1627, 0, 1624, 1622, 1623, 1615,
	1616, 1617, 1618, 1620, 1621, 1636, 1637, 1638, 1639, 0,
	0, 0, 0, 0, 0, 1619, 0, 0, 0, 0,
	2912, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1651, 0, 0, 1661, 0, 1636,
	1637, 1638, 1639, 1641, 1643, 0, 0, 0, 0, 1619,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1657,
	0, 1658, 0, 0, 0, 0, 0, 0, 1628, 1629,
	0, 0, 0, 0, 0, 0, 0, 0, 1651, 0,
	0, 1661, 0, 0, 0, 0, 1649, 1641, 1643, 0,
	0, 0, 0, 0, 0, 0, 0, 1634, 0, 0,
	0, 0, 0, 1657, 0, 1658, 0, 0, 0, 0,
	0, 0, 1628, 1629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1659, 0, 0, 0, 0, 0, 0,
	1649, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1648, 1634, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1659, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1648, 0, 0, 0, 0, 0,
	0, 0, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1611, 1612, 1635, 1644, 1645, 1646, 1654, 1655, 1656, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1647, 1642, 0, 0, 0, 1640, 1652, 0, 1614,
	0, 0, 0, 0, 0, 0, 0, 1660, 0, 0,
	0, 0, 0, 0, 0, 0, 1635, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1613, 0, 0, 0, 0, 0, 0, 0,
	0, 1652, 1633, 0, 0, 0, 0, 0, 0, 0,
	1630, 0, 0, 0, 1611, 1612, 0, 1644, 1645, 1646,
	1654, 1655, 1656, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1647, 1642, 0, 0, 0,
	2847, 0, 0, 1614, 0, 0, 0, 0, 0, 1650,
	0, 1660, 0, 1625, 1626, 1632, 1653, 1631, 1627, 0,
	1624, 1622, 1623, 1615, 1616, 1617, 1618, 1620, 1621, 0,
	0, 0, 0, 0, 0, 0, 1613, 0, 1636, 1637,
	1638, 1639, 0, 0, 0, 0, 1633, 0, 1619, 0,
	0, 0, 0, 1650, 1630, 0, 0, 1625, 1626, 1632,
	1653, 1631, 1627, 0, 1624, 1622, 1623, 1615, 1616, 1617,
	1618, 1620, 1621, 0, 0, 0, 0, 1651, 0, 0,
	1661, 0, 0, 0, 0, 0, 1641, 1643, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1657, 0, 1658, 0, 0, 0, 0, 0,
	0, 1628, 1629, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1636, 1637, 1638, 1639, 0, 0, 0, 1649,
	0, 0, 1619, 0, 0, 0, 0, 0, 0, 0,
	1634, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1651, 0, 0, 1661, 0, 1659, 0, 0, 0,
	1641, 1643, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1648, 0, 0, 1657, 0, 1658, 0,
	0, 0, 0, 0, 0, 1628, 1629, 0, 0, 0,
	0, 0, 0, 2874, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1649, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1634, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1659, 0, 0, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1652, 0, 0, 0, 0, 0, 0, 0, 0, 1611,
	1612, 0, 1644, 1645, 1646, 1654, 1655, 1656, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1647, 1642, 0, 0, 0, 0, 0, 0, 1614, 1640,
	0, 0, 0, 0, 0, 0, 1660, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1633, 0, 0, 1652, 0, 0, 0, 0, 1630,
	0, 0, 1650, 0, 0, 0, 1625, 1626, 1632, 1653,
	1631, 1627, 0, 1624, 1622, 1623, 1615, 1616, 1617, 1618,
	1620, 1621, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1636, 1637, 1638,
	1639, 0, 0, 0, 0, 0, 0, 1619, 0, 0,
	0, 0, 0, 0, 0, 0, 1650, 0, 0, 0,
	1625, 1626, 1632, 1653, 1631, 1627, 0, 1624, 1622, 1623,
	1615, 1616, 1617, 1618, 1620, 1621, 1651, 0, 0, 1661,
	0, 0, 0, 0, 0, 1641, 1643, 1611, 1612, 0,
	1644, 1645, 1646, 1654, 1655, 1656, 0, 0, 0, 0,
	0, 1657, 0, 1658, 0, 0, 0, 0, 0, 1642,
	1628, 1629, 0, 0, 0, 0, 1614, 0, 0, 0,
	0, 0, 0, 0, 1660, 0, 0, 0, 1649, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1634,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1613,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1633,
	0, 0, 0, 0, 0, 1659, 0, 1630, 0, 0,
	1611, 1612, 0, 1644, 1645, 1646, 1654, 1655, 1656, 0,
	0, 0, 1648, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1642, 0, 0, 0, 0, 0, 0, 1614,
	0, 0, 0, 0, 0, 0, 0, 1660, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1613, 0, 1640, 1636, 1637, 1638, 1639, 0,
	0, 0, 1633, 0, 0, 1619, 0, 0, 0, 0,
	1630, 0, 0, 0, 1635, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1651, 0, 0, 1661, 0, 1652,
	0, 0, 0, 1641, 1643, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1657,
	0, 1658, 0, 0, 0, 0, 0, 0, 1628, 1629,
	0, 0, 0, 0, 0, 0, 0, 0, 1636, 1637,
	1638, 1639, 0, 0, 0, 0, 1649, 0, 1619, 0,
	0, 0, 0, 0, 0, 0, 0, 1634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1651, 0, 0,
	1661, 0, 0, 1659, 0, 0, 1641, 1643, 0, 0,
	0, 1650, 0, 0, 0, 1625, 1626, 1632, 1653, 1631,
	1627, 0, 1624, 1622, 1623, 1615, 1616, 1617, 1618, 1620,
	1621, 1628, 1629, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1649,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1634, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1652, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1652, 0, 0, 0, 0, 0, 0, 0, 0, 1650,
	0, 0, 0, 1625, 1626, 1632, 1653, 1631, 1627, 0,
	1624, 1622, 1623, 1615, 1616, 1617, 1618, 1620, 1621, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1650, 0, 0, 0, 1625, 1626, 1632, 1653,
	1631, 1627, 0, 1624, 1622, 1623, 1615, 1616, 1617, 1618,
	1620, 1621,
}
var sqlPact = [...]int{

	12016, -1000, -1000, -1000, -1000, 253, -1000, -1000, 247, 244,
	217, 211, 205, 200, 196, 195, 187, -1000, -1000, -1000,
	-1000, -1000, -1000, 186, -1000, -1000, 185, -1000, 184, 182,
	180, -1000, -1000, 178, -1000, 177, -1000, -1000, -1000, -1000,
	176, 175, 164, 76179, 75698, 76654, 2047, 92924, 81416, 1836,
	68026, 92443, 67545, 91962, 91481, 2466, 161, -1000, 91000, 159,
	156, 154, -1000, 90519, -1000, 1626, -1000, 145, 4285, 55506,
	143, 141, 140, 2245, 139, -1000, 137, 134, -1000, 9883,
	1358, -1000, 133, 132, -1000, 9100, 414, 80460, 131, 130,
	2281, 129, 128, 55024, 127, 125, 2243, 2620, -1000, -1000,
	1781, -1000, -1000, 120, 118, 117, 116, 115, 114, 113,
	111, 108, 104, -1000, 102, 101, 100, 99, 98, 96,
	94, 93, -1000, 92, 91, 90, 88, 87, 86, 85,
	84, 83, 81, 78, 76, -1000, 10611, 75, 1679, 1532,
	1530, 1526, 1516, 1509, 936, 73, 72, 71, 70, 69,
	68, 67, 65, 63, -1000, 62, 60, 59, 58, 56,
	55, 48, 44, 192, 43, 42, 40, 36, 35, 34,
	32, 2063, -1000, 1372, 811, 26036, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 98624, 93399, 30, -59, 29, -1000,
	3027, 998, 45853, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 327,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 528,
	1782, 743, -1000, -1000, -1000, 90044, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2043, -115, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 740, -1000, 2041, 171, 1999, -1000, -1000,
	-1000, -1000, -1000, 93399, -1000, 982, -1000, -1000, 3443, 3430,
	1852, 737, 89569, -1000, 1501, -1000, 872, 27551, -1000, 1257,
	-1000, 27551, 322, -1000, -1000, -1000, -1000, -1000, -1000, 3428,
	3426, 3425, 3422, -1000, -1000, 67064, 19922, 66583, 66102, 89088,
	19431, 75217, 74736, 88607, 62268, 980, -1000, -1000, -1000, 1303,
	-1000, -1000, -1000, -1000, -1000, -1000, 5, 59813, 3216, 93399,
	-1000, 311, -1000, -1000, -1000, -1000, -1000, -1000, 39382, 496,
	38865, 515, 38348, 508, -1000, -1000, -1000, 61777, -1000, 3420,
	3419, 1045, 3418, 2964, 98149, 1505, 3417, 1677, 1133, 3414,
	3413, 3412, 3409, 3408, 3406, 1262, 88126, 2698, 87645, 1521,
	61286, 979, 74255, 76654, 2449, 87164, 1330, 1301, -1000, -1000,
	-1000, -1000, 2808, 2615, 2593, 51675, -1000, -1000, 3405, 3404,
	3403, 3402, 3400, 97674, 1496, 3399, 2264, 3398, 3397, 3395,
	3393, 3392, 3391, 3390, -1000, 73774, 975, 73293, 72812, 3095,
	86683, 72331, 86202, 60795, 37831, 758, -1000, -1000, -1000, 47791,
	5772, 5622, 85721, 49754, 76654, 76654, -1000, -1000, -1000, -1000,
	-1000, 37314, 495, 36797, 751, -1000, -1000, 48287, 2659, -1000,
	-1000, -1000, -1000, 36280, 293, 35763, 599, 93399, -1000, 2696,
	1769, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2096, 1502, 3246, 2484, 60304, 1773, 1273,
	3022, 2807, 2798, 1378, 3389, 2341, 2797, 2783, 2779, 2764,
	2760, 1580, 2331, 332, 25519, 2691, 1492, 35246, 1373, 1374,
	2756, 2754, 3297, 1735, 1732, 1904, 65621, 3388, 3387, 2985,
	2749, 2740, 2657, -1000, -1000, -1000, -1000, 1308, -1000, -1000,
	-1000, -1000, -1000, 68501, -1000, -1000, 1099, -1000, -1000, 1099,
	-1000, -1000, -1000, -1000, -1000, 1154, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1372, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1995, -1000,
	1851, -1000, -1000, 2218, 3009, 3009, 3009, 3053, 491, 482,
	-1000, 192, -1000, -1000, 104708, -1000, -1000, 39887, 39887, 39887,
	39887, 39887, 39887, 39887, 1922, -1000, 735, -1000, -1000, 771,
	-1000, 733, 625, -1000, -1000, -1000, -1000, -1000, -1000, 732,
	-1000, -1000, -1000, -1000, -1000, -1000, 3216, -1000, 22429, -1000,
	-1000, -1000, 489, 727, 39887, -1000, -1000, 3331, 3330, 991,
	-1000, 307, 892, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2695, 726, 724, -1000, 723,
	722, 720, 719, 717, -1000, -1000, -1000, 716, 712, 710,
	707, 706, 705, 704, 703, -1000, 1784, -1000, -1000, -1000,
	-1000, -1000, -1000, 671, 668, 668, 668, -1000, 969, -1000,
	-1000, -1000, 349, 667, 312, 666, 664, 662, -1000, 702,
	701, 699, 697, 696, 694, 693, 692, 687, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 966, -1000, -1000, -1000, -1000, 4,
	93399, -1000, 528, 4, -1000, -1000, 685, -1000, 29583, 29583,
	29583, -1000, -1000, 2037, 39887, -1000, 2203, -1000, 14, 14,
	820, 46813, -1000, 44875, 820, 325, 780, 51193, -1000, 2649,
	-1000, -1000, 682, 306, -1000, -1000, -1000, -1000, 20411, 2645,
	93399, 93399, 76654, 76654, 76654, 2910, 39887, -1000, -1000, 57406,
	93399, 77129, 3170, 57881, 56931, 93399, 2694, -1000, 2991, -1000,
	-1000, 93399, -1000, 39887, -1000, 3169, 1361, 63236, 3078, -7,
	-1000, -1000, -1000, -1000, -1000, -1000, 2236, 2228, 1051, 2086,
	1588, -1000, 27551, 2952, -1000, -1000, -1000, 287, 20411, -1000,
	-1000, -1000, -1000, -1000, 3060, 2882, 1341, -1000, 2084, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1662, 2881,
	-1000, 1814, 2880, 1633, -1000, -1000, 2307, -1000, -1000, 2980,
	-1000, -1000, 1849, 2876, 15, -1000, -1000, 2259, -1000, -1000,
	1712, -1000, -1000, 951, 2875, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 71850, 49265, 48287, 59813, -2, -1000,
	-1000, -1000, -1000, -33, -1000, 18940, 104708, -1000, -1000, -1000,
	-1000, 1622, 104708, 896, -1000, -1000, 2871, -1000, 104708, 895,
	-1000, -1000, 2870, -1000, 2693, -1000, -1000, -1000, -1000, 3386,
	-1000, 3385, 2178, 3384, 3383, 3382, -1000, 1555, 1753, 3381,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 71375, 2034, -1000,
	-1000, 70413, -1000, 2176, -1000, 70894, 971, -1000, 951, 2172,
	-1000, 79979, 967, -1000, 3380, 3076, 2450, 951, 2169, -1000,
	-1000, -1000, -1000, -1000, 53109, -1000, 53109, -1000, 53109, -1000,
	1389, -1000, 97199, 14, 14, 3216, -1000, -1000, -1000, -1000,
	-1000, 2869, 3379, 3378, 3377, -1000, 93399, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 201, 2868, -1000, -1000, 79504, 201,
	2867, -1000, 201, 2866, -1000, 79029, -1000, -1000, 1986, 2864,
	-1000, 207, 2863, -1000, -1000, 206, 2855, -1000, -1000, -84,
	2854, -1000, -1000, 104708, -1000, -1000, -1000, -13, -1000, -1000,
	-1000, 998, -1000, 47295, -1000, 47295, 85240, 62757, 897, 742,
	54542, 104708, -1000, -1000, -1000, -1000, 104708, -1000, -1000, -1000,
	-168, -1000, -1000, 62757, 48287, 104708, -1000, -1000, -1000, -1000,
	104708, -1000, -1000, -1000, 62757, 70413, -1000, 84759, 69938, -1000,
	-1000, 1248, 2311, -1000, -1000, -1000, 62757, 1196, 62757, 62757,
	62757, -1000, 84278, -1000, -1000, 1843, 1464, 2982, 1778, 76654,
	-1000, 1789, -1000, -1000, -1000, 3015, -1000, 2692, -1000, 56456,
	78554, -1000, 78079, -1000, 77604, -1000, 76654, -1000, 76654, -1000,
	3375, 3371, 3370, -1000, 3369, 2998, -1000, 104708, 2994, -1000,
	3368, 3084, 2691, 104708, -1000, 2787, 1511, 1503, 93399, -1000,
	-1000, 93399, -1000, 93399, -1000, -1000, -1000, 1307, -1000, -1000,
	2233, -1000, -1000, -1000, -1000, 76654, -1000, -1000, -1000, -1000,
	-1000, -1000, 2689, -1000, 1514, -1000, 1695, -1000, 1244, -1000,
	-1000, 208, -1000, -1000, -7, -1000, 96724, -1000, 2218, -1000,
	93399, -1000, 2200, 2673, 2687, 1264, 2059, 2328, -1000, 34729,
	2244, 42412, 2076, 192, -1000, -1000, 192, 192, 27046, -1000,
	-1000, 57881, 57881, 20411, 1163, 39887, 39887, 39887, 39887, 39887,
	39887, 39887, 39887, 39887, 39887, 39887, 39887, 39887, 39887, 39887,
	39887, 39887, 39887, 39887, 39887, 39887, 39887, 39887, 39887, 39887,
	39887, 39887, 39887, 39887, 39887, 39887, 39887, 39887, 39887, 39887,
	2210, 39887, 1153, 39887, 39887, 39887, 39887, 1879, -1000, -1000,
	1722, 560, 1807, -1000, 3211, 3211, 3211, 614, 614, 104906,
	104906, 658, 3367, 771, -1000, 39887, -1000, 82, 39887, 20902,
	-1000, 482, 8330, 2190, -1000, 481, 21419, -1000, -1000, -1000,
	22429, 625, 34212, 39887, 963, 104708, -1000, -1000, 1641, 3229,
	18451, 2564, 2522, 681, 815, 814, 25002, 24485, 23968, 23451,
	802, 39887, 39887, 39887, 39887, 39887, 39887, 39887, 39887, -1000,
	-1000, 3260, -1000, 3229, -1000, -1000, -1000, -1000, 3229, 1160,
	1137, 3229, -1000, 3229, 3229, 2732, 2732, 33707, 33190, 32673,
	42917, 32156, 39887, 22934, 31639, 31122, -1000, 93399, 4, 3168,
	39887, 155, -1000, 103339, -1000, 155, 155, 680, -15, 104708,
	2420, 2420, 46333, 2124, 1934, 1934, 1934, -1000, 820, 14510,
	820, 83324, 1944, 820, 820, 285, 305, 478, 44395, 2203,
	83324, 756, 677, 28, 26, 23, -1000, -1000, 22, 20,
	-1000, -1000, 76654, 676, 20902, 20411, 275, 1294, -21, 2369,
	2358, 2357, -1000, 2346, 1549, -26, 1150, 76654, -32, -1000,
	580, -34, -1000, 1236, 274, 3229, -1000, -1000, -1000, -1000,
	-1000, 3366, 3365, -1000, 901, 675, 674, 620, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 671, 668, 668, 668,
	-1000, 349, 667, 312, 666, 664, 662, -1000, -1000, -1000,
	-1000, -1000, 2637, 76654, -33, 77129, 76654, 848, -37, 1053,
	-7, -1000, -1000, -1000, 63236, 1099, -1000, 1714, -1000, -1000,
	-1000, -1000, -1000, -1000, 1272, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 991, -1000, -1000, -1000, -1000, -1000, -1000, 3264,
	3258, 3, -1000, -1000, 20411, -1000, -12, 1451, 1611, -1000,
	65140, 2255, 2990, 2973, 1388, -1000, 1305, 1146, 3052, 68501,
	3103, 3106, 576, -1000, 2634, -1000, -1000, 869, 1497, 1603,
	1144, 68501, 1814, -1000, 57881, -1000, 2370, 3051, 1283, 1320,
	1283, 1283, 1280, -1000, 68501, 1585, 1141, 1140, -1000, 1136,
	1134, -1000, -14, 3100, 3104, 169, -1000, 2623, 1131, -1000,
	-1000, 76654, 20411, 1426, 1424, 1547, 1130, -1, -1000, 3097,
	3094, 1124, 1122, -1000, 1878, -1000, 62757, 1541, 2852, 2481,
	818, 2476, -1000, -1000, 818, -2, 59813, 93399, 273, -1000,
	82, 39887, 39887, 82, 39887, 82, 3079, -1000, -1000, 2845,
	-1000, -1000, -1000, 3364, 1715, 2249, -1000, -1000, 657, 2164,
	2621, 93399, 2378, -5, 76654, -1000, 2843, 1814, 2163, -1000,
	-1000, 69457, -1000, 2840, 528, 2159, -1000, 652, 3363, -1000,
	96249, -1000, 2991, 1106, 2836, 1009, 567, 3161, -1000, 567,
	53584, -1000, 93399, -1000, -1000, 93399, -1000, -1000, -1000, 3361,
	-1000, 76654, -1000, -1000, 76654, 201, 2834, -1000, 76654, -1000,
	76654, 189, 2833, -1000, -1000, 93399, -1000, 76654, 76654, -1000,
	93399, 93399, 62757, 62757, 5098, 64190, -39, -40, 475, -1000,
	83803, 93399, 1008, 64665, 93399, 2941, 949, 48287, -1000, -42,
	-168, 2473, 897, 897, 818, -1000, 818, -1000, 76654, 2681,
	-1000, -1000, 62757, 897, 897, 897, -1000, -1000, -1000, -1000,
	3360, 3357, -1000, -1000, -1000, 950, 76654, 93399, 76654, -1000,
	-1000, 93399, -1000, 93399, -1000, 950, 93399, 950, 93399, 950,
	93399, -1000, -1000, -1000, -1000, -1000, -1000, 82, 39887, -1000,
	-1000, 3356, 1466, -1000, 2676, -1000, 2674, -1000, 54, -1000,
	-1000, -1000, -1000, -1000, 1834, 76654, 76654, 76654, 76654, 93399,
	76654, -1000, 68501, -1000, 2200, 2673, -1000, -1000, -1000, -1000,
	-1000, -1000, 1304, 2005, -1000, 2310, -1000, 1327, -1000, -1000,
	-1000, 104708, 43406, -1000, -1000, 104708, 1640, -1000, 41907, 41402,
	-1000, -1000, 1479, 76654, 2384, -1000, 2384, -175, -1000, 102891,
	2306, 76654, -1000, -1000, -1000, -1000, -1000, 866, 858, 858,
	1174, 1174, 1174, 1174, 3092, 3811, 324, 3709, 5920, 5920,
	510, 510, 510, 510, 510, 5920, 1047, 614, 614, 1047,
	1047, 1047, 1047, 1047, 614, 614, 614, 5920, 5920, 5920,
	104906, 12638, 7004, 39887, 39887, 1121, 1713, 560, 6751, 39887,
	7802, 7802, 7802, 7802, -1000, 2166, -1000, -1000, -1000, -1000,
	2608, 655, 42917, 42917, -1000, -1000, -1000, -1000, 21924, 39887,
	-1000, -1000, -1000, -1000, 30605, -1000, -1000, 102443, -276, 471,
	-146, 2, -1000, 39887, 39887, 39887, 466, -1000, 268, 39887,
	93399, -1000, 99719, 754, -128, -1000, -50, 1319, -1000, 39887,
	-1000, -1000, 1120, -1000, 1119, 1118, 1117, -1000, 650, 461,
	-1000, 267, -1000, 1928, 648, 645, 39887, -1000, -1000, -1000,
	-1000, -1000, 102361, -1000, -1000, 102279, -1000, -1000, 101913, -1000,
	-1000, 101831, -1000, -1000, -1000, 104393, 99625, 99581, 13903, 7397,
	13177, 10167, -60, 458, -65, 456, 856, 841, 453, 452,
	449, -66, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-68, 446, -1000, 2586, -146, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 445, -1000, 444, -1000, 104309, -146, 443,
	7714, -1000, 42917, 42917, 42917, -1000, 442, -1000, 102973, -1000,
	103990, 30100, 30100, 30100, 441, 103946, 39887, -146, -71, -1000,
	-81, -1000, -1000, 557, -82, 959, 29583, 45371, 20411, -1000,
	959, 959, 39887, -1000, 39887, 2323, -1000, -1000, -1000, 2321,
	1673, 2420, 46333, -1000, -1000, -1000, -1000, 83324, -1000, 3216,
	2366, -1000, 83324, -1000, -1000, 93399, 528, -1000, 83324, 83324,
	20411, 820, -1000, 820, 83324, 565, -1000, -1000, -1000, -1000,
	-1000, 440, 50233, 2, 263, 20411, 951, -1000, 2376, 2376,
	2376, 2376, -1000, -1000, 93399, 1116, -3, 3188, -1000, 1791,
	-1000, 57881, -1000, 769, 1018, 20411, -1000, -1000, -1000, 643,
	-1000, 3229, 3229, -1000, 3229, 93399, 2585, 122, -1000, 27551,
	-1000, 1099, -1000, -1000, 1411, -1000, 1739, -1000, 1103, -1000,
	-1000, -1000, -1000, 27551, -1000, 1938, 93399, 93399, 76654, -1000,
	93399, -1000, 2155, 95774, 2152, 57881, 93399, -1000, -1000, 642,
	641, 2301, 2297, 1005, 93399, 93399, 2286, 95299, 94824, 93399,
	1859, 39887, 59338, 1931, 3046, 82, 82, -1000, -1000, 82,
	640, 1287, 76654, 76654, 93399, 76654, 1490, -1000, -1000, -1000,
	-1000, -1000, 68976, -1000, -1000, 3255, 3243, -1000, 1283, -1000,
	-1000, -1000, 1283, 1814, 1482, 93399, 76654, 59338, 1533, 93399,
	1824, 82, 82, -1000, -1000, 82, 638, 20411, 1744, -1000,
	2711, 93399, 3329, 93399, 93399, 93399, 59338, 3007, 94349, 93399,
	93399, 59338, 1878, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 58859, 1015, 951, 1529, 1102, 68501, 48287, 947,
	48287, 2455, -1000, -1000, 17962, -1000, 104708, 104708, -1000, 104708,
	-1000, 55981, 93399, -1000, 968, 93399, 64665, 885, 2832, 52634,
	-33, 897, 62757, 76654, -5, 93399, -1000, 1814, 2830, 528,
	2149, -1000, 62757, 3159, 2816, 637, 3355, 3354, -1000, 2032,
	2148, -1000, -1000, 93874, 2893, 800, 93399, 959, 46333, 1832,
	-1000, 50714, 990, 93399, 1656, 110, -1000, -1000, -1000, 38,
	93399, -1000, 3351, -1000, -1000, 201, -1000, 76654, 201, 201,
	-1000, 76654, 76654, 1986, -1000, 207, -1000, 206, -1000, -84,
	-1000, -1000, 5098, 5098, 897, -189, 636, -1000, 831, 830,
	48776, 62757, -87, -1000, -1000, -1000, -1000, -1000, 76654, 93399,
	734, 2445, 93399, -88, -1000, 259, 631, -1000, 2701, -1000,
	-1000, 949, 48287, 2575, -1000, -1000, 955, -1000, 1181, 897,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 10,
	-33, -33, -1000, 950, -1000, 950, -1000, 950, -1000, 104708,
	-1000, -1000, 1459, 1401, 93399, -1000, 20411, 93399, 76654, 20411,
	76654, 2666, 2663, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1024, -1000, 1640, 2004, -1000, 625, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2224, -1000, -6, 27046,
	2089, -1000, -1000, 76654, 9, 39887, 39887, 6561, 6173, 39887,
	42917, 42917, -1000, 39887, 4931, -1000, -1000, -1000, -1000, -1000,
	2574, 624, 39887, 57881, 7444, 7318, -1000, 430, 9415, 1047,
	-1000, 39887, -1000, 423, 29078, -1000, 103421, -29, -89, -1000,
	15012, -146, -90, -1000, -1000, 764, -1000, 2890, -1000, 39887,
	103592, 2197, 1689, 1605, 1475, 3229, 3323, 17473, -1000, 54063,
	961, 1962, 101749, -1000, -1000, -1000, -1000, 57881, 57881, 39887,
	39887, -1000, 39887, 39887, 39887, -1000, -1000, -1000, 3229, 868,
	-1000, -1000, -1000, 868, -1000, -1000, 1283, -1000, 1283, -1000,
	39887, -1000, -1000, 2571, 39887, -1000, 57881, 57881, 42917, 42917,
	42917, 42917, 42917, 42917, 42917, 42917, 42917, 42917, 42917, 42917,
	42917, 42917, 42917, 42917, 42917, 42917, 42917, 2222, 42917, 3208,
	3208, 3208, -1000, 2596, 2571, 39887, 39887, 57881, 422, 419,
	418, -1000, 39887, -146, -1000, -1000, 5098, 617, -1000, 2211,
	-1000, 2513, -1000, 39887, -1000, -126, -1000, 2203, -1000, -1000,
	2513, 2513, -95, 104708, 46333, 46333, -1000, 615, 39887, 2316,
	-1000, -1000, 753, -274, -1000, 827, -1000, -1000, -1000, -1000,
	-1000, 528, -1000, -1000, -1000, 255, 83324, 83324, 750, -1000,
	-96, -1000, -1000, -97, -1000, 3150, 415, 20411, -1000, -1000,
	2987, -1000, -1000, -1000, -1000, -1000, -1000, -33, 93399, 1998,
	3321, -1000, 3236, 762, 748, 241, 3229, 412, 411, 410,
	-33, 93399, 93399, -1000, -7, -1000, -1000, -1000, 39887, -1000,
	-1000, 2988, 1101, 1100, -1000, -1000, 2813, -1000, 2145, -1000,
	996, -1000, 1667, -1000, 39887, 39887, 613, 612, 3349, 1644,
	3348, 1006, 2809, 1986, 2803, 1986, -1000, -1000, 875, -1000,
	104708, -1000, -1000, -1000, -1000, 602, 601, -1000, -12, 1440,
	1522, 954, -1000, -1000, 39887, 39887, 82849, -1000, 426, 2980,
	8, -1000, -1000, 1507, 1098, -1000, -1000, -1000, -1000, 1814,
	1500, 1091, -1000, -1000, -1000, 953, -1000, -1000, 952, -1000,
	-1000, 39887, -1000, -14, 1090, 3096, 2134, 76654, 1086, -1000,
	1080, -1000, -1000, -1000, 3088, 1986, 2802, 1094, -1000, -1000,
	-1000, -1000, -1000, 58370, -1000, 93399, 76654, 1453, 818, -1000,
	2136, 818, 947, 2566, -1000, 2377, 3347, 76654, 3345, 400,
	-98, -22, 57881, 3147, -1000, 2050, 627, 76654, 859, -1000,
	3216, -1000, -1000, -1000, -1000, 76654, 3144, 2799, 951, 82,
	76654, 3320, -1000, -1000, 76654, 2786, 2030, 2125, 2253, 800,
	63715, -1000, 951, 1961, -62, -1000, 1656, 28561, 2978, -104,
	-1000, -1000, -1000, 959, 53584, 46333, 39887, 3344, -106, -1000,
	-1000, 201, -1000, -1000, -1000, 189, -1000, -1000, -1000, -1000,
	-1000, -1000, 81895, 81895, 62757, 62757, 62757, 897, 93399, 93399,
	64665, -1000, 600, 93399, 93399, 598, -1000, 93399, 93399, 3343,
	62757, -27, 597, -1000, 825, 824, 823, -1000, -1000, -1000,
	-1000, -1000, -1000, -168, 82, -1000, 1981, 76654, -1000, 16984,
	-1000, -1000, -1000, -1000, -1000, 950, -1000, -1000, 1875, 2064,
	1875, 1646, 1614, -1000, 1997, -1000, -1000, -1000, -1000, 2332,
	3003, 20411, 3090, 7802, 39887, 39887, 4304, 6803, 4417, 7802,
	39887, 39887, 57881, 104989, -113, 39887, 39887, -1000, 39887, 747,
	104708, 3318, 39887, 398, 397, -1000, -1000, -1000, 3225, -1000,
	-1000, -1000, 104708, 39887, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 396, -1000, 193, -1000, -1000, -1000, 99099, -1000, 39887,
	395, 3041, -1000, 390, 387, 240, 4712, 101383, 101301, 101219,
	385, -1000, -1000, 382, 380, 104708, 2596, 104708, -1000, -1000,
	898, 898, 1270, 1270, 1270, 1270, 3208, 367, 881, 1856,
	894, 894, 894, 2266, 908, 908, 894, 894, 894, 2565,
	2231, 596, 1917, -1000, -1000, 104708, 104708, 374, -1000, -1000,
	-1000, -146, 372, 5098, -1000, 2509, 3040, 104708, -1000, 46333,
	2509, 2509, -1000, -1000, 1673, 93399, 104708, 46333, -1000, 2366,
	-1000, 15512, -1000, 20411, -1000, -1000, -1000, -1000, 3216, -1000,
	50233, -1000, 594, -1000, 170, 2987, -1000, 822, -1000, -33,
	-1000, -1000, 746, 3342, 759, 20411, 368, -1000, -1000, -1000,
	-33, -33, 104708, 93399, 93399, 93399, 2784, -1000, 4305, -1000,
	1005, 100853, -114, -1000, 102891, 39887, 93399, -1000, -1000, 1738,
	2335, 1039, -1000, 3006, 93399, -1000, 93399, -1000, -1000, 93399,
	93399, 76654, 93399, 2751, -125, 104708, -35, -1000, 816, -1000,
	1288, -1000, 16495, 93399, 76654, 93399, 76654, 1906, 2722, -127,
	20411, -1000, 3317, 3312, 2776, 3013, 3311, 93399, -1000, 93399,
	76654, 2940, -1000, -1000, -1000, -1000, 1488, 1079, 947, -36,
	592, -1000, 812, -1000, -1000, 810, 947, -1000, 62757, 48287,
	-1000, 528, -1000, 2431, -1000, 80935, 1964, 82, -1000, 3341,
	82374, 589, -1000, 1978, -1000, 745, 1814, 82, 76654, -1000,
	-1000, 528, 343, -52, -1000, 1000, 20411, 76654, 2775, 2257,
	800, 63715, -1000, 1106, 2328, -1000, -53, -1000, 581, 82,
	1961, -1000, -62, 104708, -1000, 805, -1000, -1000, -1000, -132,
	-1000, -1000, 337, -1000, 2937, 2934, -1000, 2519, 39887, 587,
	585, 93399, 2933, -1000, -1000, -133, 2926, 2926, 62757, 48287,
	62757, 949, -1000, 2097, -1000, -1000, -1000, -1000, -1000, 20411,
	1491, -1000, 584, 582, -1000, -1000, -1000, -1000, 3003, 7802,
	7802, 39887, 39887, 39887, 7802, 104989, -135, -1000, 7802, 7802,
	-146, -1000, -1000, 103421, -1000, -1000, -1000, 104708, -1000, 16006,
	1877, -1000, 100771, -1000, 27046, -1000, -1000, 39887, 39887, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 42917, 2562, 578,
	57881, -1000, -1000, 335, 899, 39887, 39887, 2203, 899, 899,
	-1000, -140, -1000, -1000, -1000, 3216, 170, -1000, -1000, 3340,
	20411, -1000, 62757, 752, -1000, 3339, -1000, -1000, -1000, -1000,
	-1000, 93399, -1000, 93399, -1000, 20411, 93399, 2549, 2113, -1000,
	-1000, 2285, 572, 42917, 76654, 865, -1000, 3182, 2475, 1687,
	39887, 2089, -141, -147, 2111, -1000, -1000, 2099, 39887, -1000,
	57881, 568, 1986, 1986, -149, -154, -1000, -1000, 39887, 1074,
	93399, 28056, -1000, 3337, 2980, -1000, -1000, -1000, -1000, 93399,
	39887, 1072, -1000, -1000, -1000, 3303, 1986, 20411, -1000, 1986,
	1986, 3013, 1038, 93399, 76654, -1000, 2019, 2019, 62757, 48287,
	-1000, -84, 947, 3136, 1824, 2472, -1000, -1000, -1000, -1000,
	2284, -1000, -1000, 93399, 2282, 909, -1000, -155, -1000, 804,
	801, 64665, 885, 855, -1000, -1000, -1000, 528, 3114, -1000,
	3298, 563, 93399, 2028, 562, 20411, -1000, 800, 63715, -1000,
	2893, 1656, -1000, 2903, 93399, 2969, -1000, 2328, 560, -1000,
	897, 555, 553, 2738, 2738, -156, 39887, 39887, -161, 552,
	897, -1000, -162, -1000, -1000, -1000, -1000, -109, -1000, 837,
	826, -1000, -1000, 76654, 76654, 39887, 39887, -1000, 7802, 7802,
	7802, -1000, 333, -1000, -1000, 1961, 3038, -1000, -116, 100689,
	100323, 4598, 42917, 57881, -163, -1000, -1000, 93399, 104708, -146,
	-1000, -1000, -1000, 566, -1000, -1000, 3336, -1000, -1000, 1720,
	-1000, -1000, -1000, 93399, 2100, -1000, 1002, 39887, 1917, 549,
	39887, -1000, 3113, -1000, 2418, 2580, 2431, 548, -1000, -1000,
	-1000, -1000, -1000, 999, 1698, -1000, -1000, 104708, 3013, 39887,
	-1000, -1000, 544, 541, 104708, 538, 797, 2557, -1000, -1000,
	-1000, -1000, 104708, 535, 3096, -1000, -1000, -1000, -1000, 1986,
	76654, -1000, -1000, -1000, -169, -1000, -1000, 1705, 82, 885,
	-1000, 1898, 1964, 533, -1000, -1000, 2009, 2354, -1000, 82374,
	27551, 27551, 329, 3112, 855, -1000, 3205, -1000, 3108, 82,
	-1000, 39887, -1000, 76654, 39887, 2025, 63715, -1000, 2253, -1000,
	1206, -170, 93399, 1656, -1000, -1000, 62757, 62757, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 999,
	-177, -178, -1000, 62757, -1000, -1000, 2097, -1000, 93399, -1000,
	93399, -1000, -1000, -179, -180, -1000, 1950, 39887, 27046, -1000,
	-1000, 4598, -193, -1000, -123, -1000, 3099, -1000, -1000, -1000,
	-1000, 2767, 2506, 100241, 2214, 93399, 100159, -1000, 2554, -1000,
	-1000, 1824, 93399, 2431, 2498, 76654, 1001, -195, 1875, 1875,
	39887, 26541, 1894, 39887, -1000, -1000, 3013, -1000, 2536, 3235,
	-1000, 2009, 76654, 93399, -1000, 3005, -1000, 2932, -1000, -1000,
	-1000, 2431, 82, -1000, -1000, 82, -1000, -200, 1000, -202,
	76654, -1000, 2257, 1385, -1000, 959, -1000, -1000, -203, -205,
	1687, 999, 886, -211, -1000, -212, -213, -1000, -1000, 157,
	40897, 40897, 40897, -146, -175, -1000, 93399, 531, 2713, 944,
	-1000, 2010, 1818, 112, 1027, -1000, -1000, 2475, -218, -1000,
	940, 528, -1000, 39887, 999, -220, -1000, 988, -223, -1000,
	987, -228, -1000, 2553, -1000, -230, 1986, 935, 3072, -1000,
	-1000, -1000, -1000, 525, -231, -1000, -1000, 2156, -1000, 1824,
	909, -1000, 999, 521, 1687, 520, -1000, 53584, -1000, 897,
	897, 2431, 1687, 959, 519, 897, -1000, -1000, -1000, 2810,
	-1000, 43895, 1991, 1523, 102809, 2810, 2810, -1000, -1000, 93399,
	3062, -1000, 2020, 2016, 1365, -1000, -1000, -1000, -1000, -1000,
	-1000, 959, -1000, 3061, 2214, 104708, 2431, -1000, 1875, 2469,
	-1000, 1875, 2551, -1000, 1892, -1000, -1000, -1000, 2763, 3221,
	93399, -1000, 93399, 1540, 1513, 3335, 885, 2009, 1687, 39887,
	2431, 39887, -221, -1000, -1000, 1824, 2431, -1000, -1000, -1000,
	1912, 3176, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	796, -1000, 2916, -1000, 1019, 1861, 1861, -1000, 793, 2010,
	-1000, -1000, 517, -1000, 514, -1000, 1498, -1000, -1000, -236,
	-1000, -1000, 3214, -1000, 2009, -1000, 2431, -238, 1824, -239,
	-1000, 886, 1824, 1510, -1000, -1000, 1939, 40392, 39887, -1000,
	3191, -1000, -1000, 2276, -1000, 39887, 2475, 39887, 39887, 1970,
	1963, -1000, -1000, 1824, 999, 886, 1687, 959, 886, -1000,
	-1000, -1000, 104708, -1000, -1000, -1000, 104708, -1000, -246, -247,
	52155, -1000, -1000, -1000, 886, 1687, 959, 2431, -1000, 959,
	1824, 1071, -189, 81895, 959, 2431, -1000, 1824, -1000, -1000,
	509, -256, -1000, 1824, 886, 39887, -1000, 886, 959, -257,
	959, -1000, 1824, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4071, 4070, 4069, 4068, 4066, 4064, 4060, 4059, 4057,
	4056, 4055, 4054, 4053, 4052, 4049, 4043, 4042, 4040, 4039,
	4038, 4036, 4035, 4033, 4031, 4030, 4026, 4025, 4023, 4022,
	4020, 4017, 4015, 4014, 4009, 4001, 3999, 3997, 3996, 3995,
	3994, 3990, 3987, 3979, 3978, 3977, 3972, 3971, 3969, 3968,
	3965, 3963, 3960, 3955, 41, 3952, 3951, 3946, 3945, 3943,
	3940, 3938, 3937, 3936, 3934, 3932, 3927, 3926, 3925, 3924,
	3921, 3913, 3911, 43, 3909, 235, 3903, 3902, 3901, 3900,
	3899, 3883, 3881, 3880, 3879, 3877, 3873, 3870, 234, 3868,
	100, 3867, 3866, 3864, 3862, 3860, 233, 3859, 3858, 3857,
	3855, 245, 3853, 3850, 3848, 3845, 3843, 3842, 3841, 3840,
	3838, 68, 133, 3836, 3835, 64, 3834, 3833, 3821, 3818,
	3816, 3815, 3814, 3813, 3812, 3809, 218, 3805, 231, 3804,
	3803, 3800, 3797, 3794, 3793, 3791, 3789, 3780, 3778, 3777,
	3776, 3773, 3772, 3768, 3762, 3760, 3757, 3755, 3754, 3753,
	3750, 3746, 3743, 3741, 3739, 3738, 3737, 3736, 3735, 3733,
	238, 163, 3732, 3730, 230, 229, 3725, 3724, 3719, 3718,
	3717, 118, 8, 24, 3716, 3714, 66, 65, 63, 76,
	85, 82, 3711, 89, 3709, 113, 45, 3708, 14, 18,
	216, 209, 8292, 207, 3707, 3704, 3702, 204, 167, 3701,
	206, 3700, 3699, 3698, 3697, 88, 71, 151, 150, 147,
	146, 148, 3696, 3695, 87, 61, 42, 36, 3694, 3692,
	3691, 3230, 122, 3688, 227, 217, 138, 3687, 3685, 3683,
	325, 3682, 40, 3680, 195, 73, 120, 28, 106, 3679,
	130, 27, 3676, 144, 37, 3672, 153, 79, 67, 8337,
	8025, 3670, 95, 44, 121, 383, 149, 145, 171, 143,
	169, 179, 178, 140, 253, 3669, 214, 3664, 3126, 54,
	128, 3658, 3657, 3655, 62, 168, 90, 3654, 3652, 50,
	1, 3, 7, 185, 16, 99, 13, 3650, 21, 3648,
	3647, 3645, 3643, 26, 141, 3642, 244, 3639, 56, 38,
	22, 3638, 29, 183, 3636, 193, 103, 3635, 3633, 222,
	177, 164, 3631, 80, 198, 3630, 3629, 3628, 3627, 3624,
	114, 25, 110, 3623, 3622, 117, 203, 162, 3621, 39,
	3618, 160, 84, 104, 240, 105, 188, 96, 200, 152,
	199, 3617, 3616, 3615, 165, 3609, 3607, 189, 131, 3606,
	3605, 173, 246, 35, 60, 201, 58, 161, 134, 3604,
	175, 3603, 3602, 3599, 242, 155, 186, 2, 15, 83,
	107, 31, 5, 202, 132, 266, 97, 3595, 4845, 2008,
	1688, 3594, 3592, 126, 101, 51, 108, 136, 226, 53,
	3590, 3589, 1413, 3587, 3585, 3584, 3583, 159, 3582, 3580,
	3577, 116, 137, 172, 3576, 81, 74, 12, 98, 277,
	232, 91, 190, 139, 220, 3574, 157, 3573, 47, 102,
	3572, 170, 241, 3571, 3568, 77, 3566, 119, 112, 46,
	127, 3565, 194, 3563, 3559, 3550, 3549, 3547, 3543, 3539,
	72, 205, 3538, 3537, 3536, 125, 166, 3535, 225, 228,
	181, 78, 48, 3533, 156, 2011, 3527, 55, 197, 52,
	135, 3526, 1812, 86, 0, 10629, 9740, 6619, 10419, 3525,
	4193, 3524, 3521, 3518, 180, 111, 3517, 3516, 3514, 92,
	3513, 59, 3512, 3511, 49, 3510, 19, 6, 10, 20,
	17, 320, 292, 3507, 3506, 93, 115, 123, 3505, 237,
	191, 3503, 3502, 3501, 3500, 75, 3499, 34, 3498, 30,
	3497, 3496, 33, 9, 32, 3495, 3493, 208, 3491, 184,
	212, 3490, 129, 3489, 3117, 109, 3486, 3484, 223, 69,
	3482, 224, 3480, 3081, 3479, 3478, 11, 3477, 3475, 211,
	154, 182, 3474, 3473, 142, 3472, 3471, 3470, 221, 3467,
	3465, 23, 3464, 4, 3463, 3462, 174, 2947, 3458, 3453,
	57, 3451, 158,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 11, 11, 7, 7, 7, 8,
	8, 8, 8, 41, 41, 9, 9, 9, 9, 9,
	29, 10, 10, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 16, 16, 30, 30, 17, 17, 32, 32,
	18, 18, 33, 33, 528, 528, 21, 35, 22, 36,
	15, 529, 529, 529, 529, 28, 23, 37, 25, 25,
	25, 25, 25, 174, 174, 174, 174, 20, 20, 31,
	31, 208, 208, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 527, 527, 210, 210,
	209, 204, 204, 530, 530, 211, 211, 211, 213, 213,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 429,
	429, 429, 460, 460, 460, 543, 543, 544, 544, 544,
	544, 544, 114, 114, 43, 43, 43, 43, 43, 522,
	522, 176, 176, 176, 178, 178, 177, 177, 177, 177,
	64, 64, 535, 535, 536, 536, 534, 537, 537, 537,
	175, 175, 175, 110, 110, 110, 110, 111, 111, 112,
	112, 179, 179, 179, 181, 181, 180, 180, 180, 180,
	180, 180, 180, 180, 185, 97, 97, 97, 97, 97,
	97, 97, 97, 97, 92, 92, 462, 462, 463, 463,
	170, 170, 171, 171, 171, 171, 172, 172, 173, 173,
	173, 57, 182, 182, 184, 184, 183, 183, 45, 45,
	45, 45, 45, 45, 45, 46, 46, 46, 46, 46,
	47, 47, 47, 47, 47, 47, 48, 48, 48, 48,
	48, 48, 55, 55, 55, 55, 161, 161, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 546, 546, 547, 547,
	548, 548, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 70, 70,
	295, 295, 267, 267, 71, 71, 71, 72, 72, 73,
	73, 59, 59, 520, 520, 310, 310, 420, 420, 75,
	75, 330, 330, 76, 76, 76, 76, 76, 76, 77,
	77, 77, 77, 77, 77, 77, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	85, 85, 85, 85, 85, 86, 86, 86, 83, 83,
	83, 80, 80, 80, 79, 79, 79, 84, 84, 84,
	519, 258, 258, 82, 82, 82, 260, 260, 81, 81,
	81, 311, 311, 87, 87, 87, 87, 268, 88, 88,
	88, 88, 88, 88, 88, 88, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 422,
	422, 89, 89, 89, 390, 390, 93, 93, 93, 345,
	345, 94, 94, 94, 94, 94, 95, 95, 95, 95,
	95, 113, 113, 113, 113, 113, 524, 524, 303, 303,
	224, 224, 224, 224, 103, 103, 103, 103, 104, 104,
	104, 105, 105, 166, 166, 120, 120, 120, 120, 120,
	119, 119, 119, 119, 119, 119, 49, 49, 49, 50,
	50, 51, 51, 52, 52, 53, 53, 54, 54, 54,
	54, 54, 122, 122, 540, 540, 124, 121, 121, 121,
	123, 123, 123, 123, 125, 126, 126, 126, 126, 126,
	126, 126, 126, 127, 127, 454, 454, 319, 319, 452,
	452, 471, 471, 453, 453, 272, 272, 272, 272, 272,
	273, 273, 273, 461, 461, 461, 461, 461, 461, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 167,
	167, 168, 169, 169, 169, 169, 148, 148, 148, 160,
	160, 160, 160, 160, 160, 160, 151, 151, 151, 138,
	138, 129, 129, 129, 129, 129, 129, 129, 133, 133,
	133, 133, 133, 133, 133, 133, 130, 130, 140, 140,
	140, 140, 140, 134, 134, 135, 135, 137, 137, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 131, 131,
	131, 131, 142, 142, 142, 142, 352, 352, 352, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	159, 159, 159, 159, 159, 159, 538, 538, 539, 539,
	155, 155, 155, 155, 155, 155, 404, 404, 149, 149,
	149, 149, 154, 154, 154, 154, 335, 335, 146, 146,
	146, 147, 147, 147, 152, 152, 153, 150, 150, 156,
	156, 156, 156, 132, 132, 132, 550, 550, 550, 157,
	157, 145, 145, 158, 158, 158, 158, 158, 158, 158,
	158, 144, 144, 144, 143, 143, 143, 143, 136, 521,
	521, 517, 517, 517, 517, 517, 517, 517, 517, 518,
	518, 523, 523, 98, 98, 98, 98, 98, 106, 106,
	106, 106, 106, 99, 99, 99, 99, 99, 101, 101,
	100, 100, 100, 100, 65, 65, 65, 14, 14, 14,
	66, 66, 188, 188, 188, 189, 189, 280, 280, 280,
	280, 186, 186, 187, 187, 67, 67, 551, 551, 551,
	531, 531, 531, 532, 532, 532, 532, 532, 532, 274,
	274, 275, 275, 370, 370, 370, 370, 370, 278, 278,
	278, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	281, 281, 212, 212, 212, 284, 285, 285, 282, 282,
	283, 283, 283, 287, 287, 286, 289, 289, 288, 369,
	480, 480, 482, 482, 482, 482, 482, 482, 482, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	552, 552, 478, 478, 478, 479, 474, 474, 475, 475,
	475, 475, 475, 276, 276, 277, 277, 277, 277, 476,
	477, 301, 301, 407, 481, 481, 483, 483, 485, 553,
	553, 553, 553, 553, 553, 554, 554, 554, 368, 368,
	367, 367, 293, 293, 486, 486, 486, 486, 487, 487,
	487, 487, 487, 490, 489, 488, 488, 488, 488, 488,
	69, 69, 69, 332, 332, 331, 331, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 163, 163, 227, 227, 63, 63, 63, 12,
	12, 12, 533, 533, 533, 68, 68, 68, 68, 68,
	68, 226, 226, 226, 226, 226, 226, 226, 226, 526,
	526, 525, 525, 228, 228, 556, 556, 74, 74, 74,
	74, 74, 74, 74, 423, 423, 424, 424, 62, 62,
	62, 62, 62, 353, 353, 351, 351, 350, 350, 300,
	300, 406, 232, 232, 205, 205, 205, 27, 26, 19,
	19, 24, 24, 39, 39, 39, 39, 42, 42, 38,
	38, 38, 38, 40, 40, 34, 34, 541, 541, 542,
	542, 102, 102, 107, 107, 107, 107, 107, 108, 108,
	108, 108, 109, 109, 109, 109, 118, 118, 162, 162,
	162, 162, 162, 162, 162, 44, 44, 44, 44, 56,
	56, 56, 56, 116, 558, 558, 558, 117, 117, 117,
	557, 557, 225, 225, 364, 364, 365, 365, 559, 559,
	366, 366, 366, 366, 219, 218, 220, 220, 61, 61,
	61, 214, 214, 215, 215, 216, 216, 217, 217, 560,
	560, 96, 96, 96, 165, 165, 266, 266, 266, 360,
	360, 360, 294, 294, 238, 238, 363, 363, 361, 361,
	361, 361, 329, 329, 329, 164, 164, 308, 308, 321,
	321, 322, 322, 417, 417, 323, 115, 115, 192, 192,
	190, 190, 190, 190, 190, 190, 190, 190, 197, 197,
	198, 198, 199, 199, 200, 201, 201, 201, 201, 312,
	312, 202, 202, 202, 191, 191, 191, 193, 193, 193,
	193, 193, 193, 193, 196, 196, 196, 196, 203, 203,
	203, 195, 195, 497, 497, 497, 499, 499, 501, 501,
	500, 500, 496, 496, 498, 498, 555, 555, 334, 334,
	334, 291, 292, 290, 290, 298, 298, 296, 297, 297,
	299, 299, 405, 405, 405, 206, 206, 206, 326, 326,
	326, 326, 327, 327, 356, 356, 354, 354, 354, 354,
	355, 355, 357, 357, 357, 358, 358, 359, 359, 325,
	325, 386, 386, 194, 194, 194, 305, 305, 305, 306,
	306, 376, 376, 376, 376, 376, 376, 377, 377, 375,
	375, 375, 375, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 409, 410, 410, 307, 307, 411, 362, 362,
	515, 515, 515, 516, 516, 403, 403, 412, 412, 412,
	412, 412, 412, 401, 401, 402, 402, 418, 419, 419,
	338, 338, 338, 338, 336, 336, 339, 339, 339, 339,
	337, 337, 413, 413, 413, 413, 328, 328, 414, 414,
	414, 414, 415, 371, 372, 372, 425, 425, 425, 425,
	427, 304, 304, 304, 304, 304, 473, 472, 472, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 441, 441,
	441, 441, 441, 441, 441, 441, 442, 442, 442, 442,
	442, 442, 442, 428, 428, 428, 428, 428, 432, 432,
	432, 431, 431, 431, 431, 431, 431, 431, 431, 431,
	431, 431, 433, 433, 438, 438, 439, 439, 439, 434,
	435, 440, 440, 440, 440, 561, 561, 444, 444, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 430, 430,
	430, 437, 437, 437, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 346, 346, 348,
	348, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 380, 380,
	380, 380, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 491, 491, 491,
	491, 491, 491, 491, 491, 382, 382, 494, 494, 495,
	495, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	502, 502, 503, 503, 505, 505, 506, 506, 507, 508,
	508, 508, 509, 510, 510, 504, 504, 511, 511, 511,
	511, 512, 512, 513, 513, 513, 513, 513, 514, 514,
	514, 514, 514, 392, 392, 393, 393, 399, 399, 399,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 229, 229, 229, 229,
	229, 317, 317, 315, 315, 315, 318, 318, 316, 316,
	314, 314, 313, 313, 389, 389, 387, 387, 391, 391,
	340, 340, 443, 443, 443, 443, 443, 443, 443, 443,
	341, 341, 341, 349, 342, 342, 343, 343, 343, 343,
	343, 383, 384, 344, 344, 344, 385, 385, 394, 398,
	398, 397, 396, 396, 395, 395, 373, 373, 374, 374,
	324, 324, 562, 562, 320, 320, 416, 416, 416, 416,
	270, 270, 309, 309, 269, 269, 261, 261, 262, 262,
	262, 262, 302, 302, 400, 400, 445, 445, 446, 446,
	447, 447, 448, 448, 449, 450, 451, 388, 388, 248,
	247, 235, 236, 246, 245, 244, 234, 237, 241, 242,
	243, 239, 240, 254, 253, 252, 259, 250, 251, 421,
	233, 263, 263, 264, 264, 264, 265, 265, 265, 265,
	230, 230, 231, 231, 255, 255, 256, 257, 257, 249,
	249, 249, 221, 221, 221, 222, 222, 223, 223, 459,
	459, 456, 456, 456, 457, 457, 457, 458, 458, 458,
	458, 455, 455, 455, 455, 455, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 465, 465, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 467, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 470, 470,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 3, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 3,
	6, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 6, 6, 9, 6, 9,
	6, 5, 6, 5, 1, 1, 5, 5, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	6, 5, 6, 6, 4, 8, 3, 4, 10, 3,
	6, 4, 3, 1, 3, 3, 2, 1, 1, 3,
	1, 3, 2, 2, 0, 1, 1, 0, 2, 0,
	7, 10, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 1, 1, 1, 3, 6, 4, 6,
	7, 9, 5, 2, 8, 6, 8, 7, 2, 0,
	1, 2, 5, 0, 1, 3, 3, 1, 1, 3,
	12, 3, 1, 0, 1, 1, 2, 3, 3, 0,
	5, 7, 0, 5, 6, 8, 2, 1, 3, 1,
	3, 2, 5, 0, 1, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 6, 4, 9, 7, 12,
	12, 12, 9, 2, 7, 2, 1, 1, 1, 3,
	3, 0, 3, 1, 3, 1, 1, 3, 2, 5,
	0, 6, 2, 0, 1, 2, 3, 1, 1, 2,
	1, 2, 1, 2, 2, 3, 3, 3, 3, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 6, 6, 6, 6, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 3, 3, 4,
	3, 4, 7, 4, 4, 4, 3, 5, 7, 3,
	3, 4, 3, 3, 3, 3, 2, 0, 1, 0,
	1, 0, 3, 3, 3, 3, 3, 6, 4, 4,
	4, 3, 5, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 1, 2, 1, 2, 1, 2, 7, 3,
	2, 0, 1, 3, 3, 1, 0, 1, 2, 2,
	1, 6, 5, 1, 2, 1, 3, 2, 0, 9,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 6, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	1, 1, 3, 4, 6, 3, 1, 3, 3, 5,
	3, 1, 3, 2, 2, 2, 2, 1, 2, 2,
	5, 3, 3, 6, 6, 3, 1, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	3, 5, 7, 2, 3, 0, 3, 5, 2, 3,
	0, 2, 3, 2, 3, 2, 6, 4, 7, 7,
	2, 6, 4, 7, 7, 2, 1, 1, 1, 3,
	1, 1, 1, 1, 1, 2, 1, 2, 2, 3,
	2, 4, 3, 2, 2, 1, 2, 1, 3, 3,
	1, 2, 1, 2, 1, 2, 1, 1, 3, 5,
	4, 6, 4, 3, 0, 1, 3, 2, 4, 2,
	4, 1, 6, 3, 1, 1, 5, 3, 2, 6,
	3, 3, 4, 4, 3, 1, 3, 2, 3, 3,
	1, 3, 1, 2, 1, 1, 2, 2, 3, 1,
	1, 1, 1, 1, 3, 2, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 2,
	2, 1, 3, 3, 3, 3, 2, 3, 3, 1,
	1, 1, 1, 1, 2, 2, 5, 7, 3, 3,
	3, 4, 4, 6, 5, 5, 5, 3, 4, 4,
	3, 4, 4, 3, 4, 4, 5, 3, 5, 5,
	5, 7, 3, 3, 3, 2, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 4, 3,
	4, 3, 3, 4, 4, 5, 0, 1, 1, 3,
	2, 4, 3, 3, 5, 3, 4, 3, 5, 3,
	3, 4, 4, 5, 3, 3, 1, 1, 0, 2,
	5, 4, 6, 4, 6, 4, 1, 0, 3, 4,
	4, 5, 7, 5, 3, 3, 2, 0, 4, 2,
	3, 4, 2, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 3, 3, 4, 3, 1, 1, 1, 2,
	3, 2, 3, 6, 6, 7, 9, 7, 9, 3,
	4, 10, 10, 3, 5, 5, 5, 3, 5, 2,
	0, 1, 1, 1, 1, 3, 2, 2, 2, 2,
	1, 2, 0, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 6, 3, 6, 6, 3,
	11, 14, 1, 2, 3, 0, 4, 0, 4, 5,
	4, 3, 3, 1, 3, 10, 13, 0, 2, 3,
	1, 1, 0, 1, 2, 2, 2, 2, 1, 1,
	0, 1, 3, 1, 1, 1, 1, 3, 3, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	8, 0, 1, 1, 0, 2, 1, 0, 1, 0,
	9, 9, 3, 1, 3, 7, 1, 3, 11, 3,
	2, 0, 3, 1, 2, 2, 3, 2, 6, 2,
	1, 1, 2, 8, 4, 2, 5, 5, 5, 2,
	1, 3, 11, 12, 8, 5, 3, 1, 5, 9,
	7, 11, 3, 3, 0, 2, 4, 3, 3, 1,
	5, 1, 3, 1, 2, 0, 1, 2, 2, 0,
	1, 3, 3, 2, 2, 1, 1, 1, 4, 0,
	6, 0, 3, 0, 2, 2, 2, 0, 1, 1,
	2, 2, 0, 3, 3, 2, 1, 1, 2, 2,
	5, 8, 4, 1, 0, 1, 2, 2, 1, 2,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 1, 4, 2, 2, 2, 4, 7, 3, 4,
	6, 3, 1, 1, 1, 8, 10, 11, 7, 10,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 3, 0, 1, 8, 3, 6,
	6, 5, 3, 4, 1, 0, 1, 3, 17, 20,
	16, 19, 4, 2, 0, 1, 0, 1, 0, 1,
	3, 3, 2, 0, 1, 1, 0, 9, 6, 6,
	8, 6, 8, 6, 7, 8, 9, 6, 8, 6,
	7, 8, 9, 6, 8, 6, 8, 1, 0, 2,
	0, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 0, 2, 4, 2,
	1, 0, 2, 1, 1, 0, 1, 3, 1, 0,
	1, 1, 1, 1, 2, 3, 2, 2, 8, 11,
	3, 3, 0, 3, 0, 3, 0, 3, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 8, 5, 3, 4,
	3, 0, 2, 2, 0, 10, 3, 2, 0, 1,
	3, 1, 1, 3, 3, 5, 1, 1, 3, 3,
	1, 2, 4, 4, 2, 3, 5, 5, 1, 3,
	1, 0, 1, 2, 3, 2, 4, 2, 3, 0,
	2, 0, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 8, 8, 8, 2, 4, 4,
	4, 2, 2, 2, 2, 3, 1, 3, 1, 2,
	6, 7, 1, 0, 1, 0, 1, 0, 1, 1,
	0, 1, 5, 1, 0, 1, 0, 3, 3, 5,
	1, 3, 3, 4, 5, 2, 2, 0, 2, 2,
	1, 1, 1, 0, 1, 0, 2, 2, 5, 4,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 2, 0, 4, 2, 5, 3, 2, 0, 1,
	3, 3, 5, 1, 1, 1, 1, 1, 3, 2,
	4, 4, 0, 4, 4, 3, 4, 1, 5, 3,
	4, 5, 5, 1, 5, 1, 3, 2, 0, 3,
	0, 2, 3, 1, 3, 2, 0, 3, 5, 6,
	4, 6, 4, 3, 2, 1, 0, 5, 1, 0,
	2, 2, 2, 1, 1, 0, 1, 1, 1, 0,
	4, 2, 1, 2, 2, 4, 1, 3, 1, 2,
	3, 2, 2, 2, 1, 0, 2, 5, 7, 2,
	1, 2, 4, 3, 5, 0, 1, 3, 5, 1,
	2, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 6, 6, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 3, 0, 5, 4, 1, 2, 1, 4,
	1, 1, 2, 1, 1, 1, 1, 1, 0, 1,
	2, 5, 1, 4, 2, 5, 1, 4, 3, 3,
	0, 1, 2, 4, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 1, 0, 1,
	4, 1, 3, 3, 3, 5, 2, 2, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 5, 4,
	6, 3, 5, 4, 6, 4, 6, 5, 7, 3,
	3, 3, 3, 3, 4, 3, 2, 4, 2, 3,
	3, 4, 3, 4, 3, 4, 5, 6, 6, 7,
	6, 7, 6, 7, 3, 4, 4, 1, 3, 1,
	3, 3, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 5, 6, 6, 7, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 6, 1, 1,
	1, 1, 1, 1, 2, 1, 5, 5, 6, 3,
	1, 1, 1, 2, 2, 2, 4, 3, 5, 6,
	8, 6, 5, 4, 3, 2, 2, 4, 1, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 6, 6, 8, 8, 6, 4, 6,
	6, 6, 4, 1, 3, 3, 3, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 4, 3, 4, 3, 4, 3, 4, 4,
	3, 6, 5, 5, 5, 4, 4, 3, 4, 3,
	5, 0, 5, 0, 2, 0, 1, 3, 3, 2,
	2, 0, 6, 1, 0, 3, 0, 3, 3, 3,
	0, 1, 4, 2, 2, 2, 2, 2, 3, 2,
	2, 3, 0, 4, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 1, 2, 3, 2, 3, 2, 3,
	1, 0, 1, 3, 1, 3, 3, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 3, 1, 2, 3, 0, 3, 3, 2, 2,
	1, 2, 2, 3, 2, 1, 1, 1, 5, 1,
	2, 4, 2, 0, 1, 0, 3, 5, 1, 0,
	1, 2, 1, 0, 1, 3, 3, 2, 1, 1,
	1, 3, 1, 3, 3, 1, 1, 1, 1, 5,
	3, 1, 1, 3, 1, 1, 1, 1, 2, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 7, 1, 7, 5, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 0, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 519, -90, -87, -57, -55, -93, -94,
	-76, -95, -89, -113, -118, -102, -114, -120, -162, -167,
	-168, -169, -3, -43, -45, -58, -75, -77, -88, -97,
	-96, -98, -103, -110, -106, -92, -49, -115, -119, -128,
	-163, -164, -165, 31, 30, 95, 77, 144, 119, 127,
	182, 332, 368, 379, 360, 349, -123, -124, 396, -44,
	-56, -117, -116, 70, 120, 355, -4, -12, 28, 44,
	-46, -47, -48, 60, -63, -60, -70, -64, -545, 97,
	-498, -78, -81, -109, -549, 132, 151, 200, -99, -100,
	321, -104, -105, 362, -107, -108, 364, 152, -51, -50,
	146, -190, -192, -121, -122, -166, -129, -130, -131, -132,
	-133, -134, -135, -136, -137, -138, -139, -140, -141, -159,
	-142, -143, -144, -145, -150, -146, -147, -148, -149, -151,
	-152, -154, -155, -156, -157, -158, 400, -153, 454, 47,
	414, 79, 136, 372, 21, -5, -6, -7, -8, -9,
	-10, -11, -14, -13, -59, -61, -62, -65, -66, -67,
	-74, -68, -69, -497, -79, -80, -83, -85, -86, -82,
	-84, 361, -193, -191, 516, 468, -16, -21, -22, -17,
	-18, -20, -23, -19, -24, -30, -35, -36, -32, -33,
	-31, -34, -37, -38, -39, -40, -41, -42, -26, -28,
	-29, -27, -15, -25, 486, 494, -196, -194, -195, -203,
	388, 476, 430, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, -268, 2, -250, -255, -256, -257, -249,
	-221, -467, -470, 4, -464, -468, 157, 209, 286, 21,
	22, 23, 24, 25, 26, 28, 29, 40, 41, 43,
	42, 44, 45, 46, 47, 51, 53, 57, 58, 59,
	60, 61, 65, 70, 71, 76, 77, 78, 79, 80,
	81, 82, 88, 85, 86, 87, 90, 92, 93, 94,
	95, 96, 98, 100, 101, 109, 110, 111, 112, 114,
	119, 120, 123, 118, 122, 125, 126, 127, 130, 131,
	132, 134, 135, 137, 138, 139, 141, 142, 144, 145,
	146, 149, 147, 437, 148, 150, 151, 152, 153, 163,
	164, 165, 170, 172, 176, 177, 180, 181, 183, 187,
	189, 190, 191, 192, 193, 199, 200, 202, 203, 204,
	205, 210, 211, 215, 212, 221, 222, 226, 227, 228,
	230, 234, 235, 236, 237, 238, 239, 241, 243, 242,
	245, 248, 249, 252, 253, 254, 257, 258, 259, 260,
	262, 263, 266, 264, 267, 265, 269, 270, 271, 268,
	274, 272, 276, 277, 278, 284, 282, 280, 279, 281,
	288, 291, 197, 293, 294, 297, 315, 301, 302, 303,
	306, 307, 310, 313, 314, 316, 317, 318, 319, 320,
	321, 322, 323, 325, 326, 330, 332, 333, 335, 337,
	338, 339, 340, 341, 342, 343, 346, 345, 347, 349,
	355, 360, 357, 358, 359, 361, 362, 363, 364, 366,
	367, 368, 370, 371, 372, 373, 375, 377, 378, 381,
	382, 397, 398, 416, 379, 380, 383, 384, 385, 386,
	387, 391, 389, 390, 392, 393, 394, 396, 399, 400,
	402, 403, 404, 405, 406, 407, 410, 412, 413, 414,
	415, 417, 420, 421, 422, 423, 418, 429, 426, 427,
	431, 432, 433, 434, 435, 436, 438, 440, 448, 449,
	451, 454, 455, 456, 446, 458, 459, 462, 463, 464,
	467, 465, 466, 468, 470, 473, 474, 475, 481, 480,
	487, 488, 490, 491, 492, 35, 48, 49, 52, 54,
	56, 66, 67, 68, 72, 115, 116, 143, 154, 155,
	166, 178, 179, 184, 186, 194, 195, 196, 216, 217,
	219, 224, 246, 290, 292, 308, 312, 327, 328, 329,
	331, 344, 374, 408, 419, 424, 441, 442, 443, 444,
	450, 452, 476, 477, 478, 482, 489, -268, 2, -250,
	299, -243, 2, -221, -221, 332, 27, 2, 27, 326,
	390, 432, 434, 2, -524, -303, 2, 27, -224, -221,
	97, 182, 388, -243, 2, -524, -303, 24, 2, -221,
	2, -225, 2, 379, -221, 263, 2, 519, 90, 254,
	71, 374, 393, -126, 449, -125, 441, 383, -127, -454,
	2, 274, -221, 519, 519, 519, 27, -233, -221, 430,
	209, 111, 427, 519, 2, 430, 318, 480, 389, 111,
	341, 209, 456, 383, -533, 263, 370, 185, 469, -522,
	2, -517, 4, -468, -464, -262, -261, 430, 435, 111,
	-257, -249, 509, -256, 519, 519, 519, 2, 227, 228,
	340, 339, 393, 394, 519, 519, 519, 381, 2, 26,
	63, 89, 93, 117, 153, 173, 176, 304, -546, 315,
	338, 392, 429, 438, 451, -532, 415, 65, 383, -531,
	-533, 263, 456, 130, -350, 111, 254, 181, 463, 434,
	432, 461, 123, 215, 466, 465, 519, 519, 26, 63,
	74, 93, 130, 153, 173, 176, -548, 315, 338, 377,
	392, 429, 438, 451, 2, 480, 263, 389, 430, 209,
	111, 456, 383, -533, 381, 382, 336, -90, 2, 516,
	31, 30, 396, -185, 430, 220, 2, -221, 519, 519,
	2, 227, 228, 381, 382, 519, 519, 174, -517, 2,
	519, 519, 2, 227, 228, 381, 382, 220, 2, 65,
	385, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 2, -160, 393, 415, 191, 45, 44, 71, 27,
	337, 76, 319, 112, 138, 183, 209, 210, 235, 89,
	90, -352, 43, 228, 227, 382, -538, 381, -404, 431,
	384, 390, 426, 239, 379, 449, 97, 470, 371, 492,
	341, 342, 147, 4, 111, 274, 395, 441, 254, 378,
	322, 81, 519, -555, 2, 430, -557, 2, 449, 449,
	2, -557, 2, -557, 2, -557, 2, -558, 449, 489,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, -191, -193, -192,
	519, 519, 519, 519, 519, 519, 519, -160, 393, 2,
	71, 27, -296, -298, 460, 218, 140, 305, -190, -192,
	2, -497, -452, 2, -378, -471, -380, 507, 508, 500,
	428, 64, 285, 493, -392, 117, 461, 299, -470, -381,
	-394, 143, 374, -318, 8, 9, 5, 6, 7, -230,
	-382, -388, 453, 156, 289, -265, 520, 10, 516, -494,
	-192, -393, 36, 186, 62, -456, -264, -231, -428, 219,
	-263, -249, -491, -492, 4, -464, -465, -457, -431, -439,
	-435, -436, -442, -221, -467, 74, 103, 104, 102, 107,
	106, 256, 255, 108, 105, 395, 469, 63, 35, 194,
	195, 224, 290, 196, 72, -493, 131, -466, 216, 217,
	408, 49, 344, 166, 116, 115, 292, 54, 52, 477,
	-440, 113, 441, 442, 443, 444, 178, 179, 56, 154,
	155, 312, 329, 424, 450, 452, 184, 246, 99, 175,
	214, 198, 223, 225, 229, 247, 250, 275, 283, 287,
	309, 311, 369, 401, -561, 478, 419, 66, 67, -499,
	345, -500, -243, -499, 519, 519, 521, 519, -290, -291,
	-292, 2, 27, 128, 516, 2, -408, 2, -409, -413,
	-192, 240, -412, 516, -410, 514, -250, 300, -495, 375,
	-491, -492, -230, -249, -264, 4, -464, -466, 518, -293,
	516, 111, 430, 75, 209, -345, 516, -221, 27, 299,
	445, 521, -390, 516, 299, 174, 302, -221, 480, 2,
	2, 397, 2, 516, -126, 68, 449, 42, 393, -365,
	2, -366, -218, -219, -220, -418, 226, 335, 343, 495,
	492, -452, -540, 174, 499, 445, -452, -319, 518, 2,
	2, 2, 2, 2, -413, 194, -250, 2, -247, -455,
	4, -464, -468, -465, -469, -467, 27, 30, 31, 32,
	34, 36, 37, 38, 39, 55, 62, 63, 69, 73,
	75, 84, 89, 97, 102, 103, 105, 104, 106, 107,
	108, 117, 121, 124, 128, 129, 133, 136, 140, 156,
	158, 171, 173, 174, 182, 185, 188, 201, 213, 218,
	220, 240, 244, 251, 255, 256, 285, 289, 295, 299,
	300, 304, 305, 324, 334, 348, 365, 388, 395, 411,
	425, 430, 439, 445, 447, 453, 460, 461, 469, 471,
	479, 483, 484, 485, 486, -470, 74, 2, -413, 194,
	2, -252, 194, -413, -255, 2, -234, -221, 2, -246,
	-455, 2, -269, 194, -250, -251, -255, -253, 2, -255,
	-259, 2, -221, -462, 194, 2, -459, 10, -458, 5,
	4, -464, -468, -465, 480, 220, 445, 521, -309, -261,
	-262, -451, 8, -302, -221, 518, -378, 2, -115, -101,
	2, 171, -378, 194, 2, -115, 194, 2, -378, 194,
	2, -115, 194, 2, -535, 2, -462, 2, 2, 451,
	2, 93, 194, -221, 430, 110, 2, 359, -547, 377,
	455, 2, 2, 2, 2, 2, 2, 430, -239, 2,
	-221, 171, -259, 194, 2, 389, -556, 345, -462, 194,
	2, 480, -253, 2, -253, 209, 222, -234, 194, 2,
	434, 432, 434, 432, 174, 2, 220, 2, 220, 2,
	-414, 2, -415, -409, -250, 514, 2, 2, 2, 2,
	2, 194, -221, 430, 110, 2, 238, 2, 2, 2,
	2, 2, 2, 2, -311, 194, 2, -250, 480, -311,
	194, 2, -311, 194, 2, -351, 2, 84, -234, 194,
	2, -258, 194, 2, -253, -260, 194, 2, -259, -463,
	194, 2, -462, -378, 2, -115, 2, -422, 2, -421,
	-458, 476, -90, 516, -90, 516, 393, 516, -462, -250,
	-250, -378, 2, -115, -101, 2, -378, 2, -115, 2,
	-112, -111, -462, 516, 174, -378, 2, -115, -101, 2,
	-378, 2, -115, 2, -185, 171, 2, 111, 430, -160,
	2, 171, 471, 2, 8, 2, 201, -462, 384, 342,
	163, 2, 397, 2, 398, 71, -352, 492, 71, 174,
	2, 174, 2, -335, 2, 486, 2, -521, 2, 299,
	174, 2, 174, 2, 174, 2, 174, 2, 174, 2,
	339, 394, 228, 2, -115, 483, -101, -378, 483, 2,
	-539, 171, 382, -378, 2, 448, 237, 148, 174, -335,
	2, 174, 2, 174, 2, 5, 2, 340, 416, 2,
	226, 335, 416, 2, -250, -550, 2, 430, 480, 389,
	2, 2, 85, 86, 174, 2, 174, 2, 174, 492,
	2, -328, -413, -364, -365, -364, 445, -296, -298, -160,
	397, 2, -197, -326, -199, 171, -354, -355, -200, 251,
	158, 295, -201, -334, 27, 128, -334, -334, 58, 517,
	517, 11, 12, 73, 40, 507, 508, 509, 510, 169,
	511, 512, 505, 506, 504, 497, 498, 502, 232, 233,
	91, 501, 499, 83, 261, 376, 159, 160, 161, 162,
	356, 207, 33, 208, 14, 15, 16, 32, 304, 250,
	493, 198, 401, 500, 17, 18, 19, 223, 225, 287,
	48, 201, -229, -271, -378, -378, -378, -378, -378, -378,
	-378, 311, 516, -324, -373, 514, -192, 516, 516, 516,
	-451, -192, -378, -392, 517, -316, 516, -192, -392, -387,
	516, 374, 514, 516, -395, -378, 5, 5, 5, 516,
	518, -502, 487, 171, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 331,
	-433, 516, -432, 516, -432, -432, 481, -430, 516, 494,
	488, 516, -430, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 481, 521, -499, -293,
	516, -320, -416, -378, 509, -320, -320, 299, -313, -378,
	99, -338, 229, 275, 175, 247, 369, 214, -375, 520,
	-375, -403, 494, -192, -410, -249, -192, -412, 516, -408,
	-403, -91, -451, -75, -88, -96, -115, -128, -164, -165,
	509, -250, 516, 174, 516, 518, -455, 174, -302, -234,
	-250, -263, -264, -269, 127, -313, -517, 456, -302, -224,
	37, -389, -425, -426, -473, 520, -472, -428, -438, -434,
	-437, 327, 328, -457, 52, 477, -440, 219, 4, -464,
	-466, 216, 217, 408, 49, 344, 166, 116, 115, 292,
	54, 441, 442, 443, 444, 178, 179, 56, 478, 419,
	66, 67, -517, 456, -302, 171, -351, -454, -313, 37,
	-365, 2, 117, -459, 42, -559, 521, 249, -273, 260,
	284, 190, 300, 490, 293, -461, 5, 4, -388, -400,
	117, 254, 219, -445, -447, 8, -446, 9, -448, 507,
	508, -453, -452, 101, 518, -455, -208, 357, 396, -207,
	23, 28, 132, 474, 149, -283, 211, 314, 318, 143,
	412, 464, -528, -529, 380, 436, 437, 87, 293, 396,
	357, 143, -331, -333, 37, 109, 278, 313, 59, 204,
	265, 266, 414, 482, 143, 396, 357, 314, -529, 94,
	357, -529, -210, 412, 464, -528, -529, 380, 357, -209,
	-283, 143, 520, 23, 357, 396, 314, -543, -544, 132,
	28, 357, 314, -525, -496, 486, 143, -413, 194, -536,
	-111, 241, 5, 10, -111, -309, 521, 521, -455, 509,
	382, 381, 143, 143, 143, 143, 171, 2, 2, 285,
	2, 2, 2, 176, -531, -548, 2, 2, -250, 194,
	-295, 299, -520, -310, 430, -250, 285, -252, 194, 2,
	-255, 480, -525, 285, -254, 194, -250, 37, 516, 2,
	-351, 2, 209, -496, 285, -414, -266, -250, -409, -266,
	396, -243, 37, -375, -375, 143, 2, 2, 2, -221,
	-211, 521, 61, 363, 143, -311, 194, -211, 143, -211,
	143, -270, 194, -269, -211, 143, -211, 521, 143, -211,
	521, 143, 521, 143, 517, 521, -422, -422, -462, -173,
	486, 174, 97, 516, 516, -185, -419, 521, -418, -463,
	-112, -462, -462, -520, -234, 2, -250, 2, 430, 230,
	-462, -173, 201, -462, -462, -462, -454, 27, 398, 2,
	339, 394, 86, 398, 2, -250, 430, 111, 209, 77,
	-523, 171, -518, 370, -517, -250, 111, -250, 111, -250,
	111, -250, -250, 2, 2, 2, 2, 82, 82, 2,
	44, -539, 171, 2, 448, 2, 448, 2, -221, -221,
	-221, 415, 249, -250, 171, 430, 209, 430, 209, 111,
	430, -211, 521, -225, -197, -326, -454, -327, -326, -198,
	-197, -200, 171, 343, 465, 278, 399, 234, -355, -354,
	27, -378, -359, 165, 277, -378, -357, -380, 507, 508,
	-446, -448, -312, 293, -191, -191, -191, -299, -405, -378,
	334, 209, -427, -425, -425, -248, -455, 441, -378, -378,
	-378, -378, -378, -378, -378, -378, -378, -378, -378, -378,
	-378, -378, -378, -378, -378, -378, -378, -378, -378, -378,
	-378, -378, -378, -378, -378, -378, -378, -378, -378, -378,
	-378, -378, -378, 250, 198, 401, 48, 201, -378, 445,
	-378, -378, -378, -378, 272, 285, 289, 453, 156, 462,
	128, 293, -562, 425, 39, -385, -192, -317, 516, -399,
	34, 411, 27, -392, 516, 2, -373, -378, -374, -314,
	-313, -313, 517, 479, 27, 128, 509, 2, 517, 521,
	37, 517, -378, -314, -391, -387, -313, -398, -397, 483,
	-346, -347, 491, 268, 114, 192, 267, -348, 387, -449,
	8, -455, 509, -503, 164, 185, 516, 517, 2, 517,
	2, 517, -378, 2, 517, -378, 2, 517, -378, 2,
	517, -378, 2, 517, 2, -378, -378, -378, -378, -378,
	-378, -378, -313, 8, -449, -449, 441, 441, -449, -449,
	-449, -441, 327, 252, 328, 180, 271, 269, 270, 179,
	-441, -340, 2, -443, -313, 4, 491, 268, 114, 192,
	267, 387, 5, -340, 2, -341, 2, -378, -313, -342,
	-379, -380, 507, 508, 500, -392, -343, 2, -378, -314,
	-378, 55, 244, 447, -344, -378, 174, -313, -313, 2,
	-313, 2, -500, 37, -313, -305, 521, 174, 37, 4,
	-305, -305, 516, 517, 521, -339, 189, 264, 259, -339,
	-408, -338, 229, -336, 309, -336, -336, -403, -235, 514,
	522, -455, -403, -402, -401, 37, -243, 306, -403, -403,
	518, 517, -402, 515, -515, 516, 519, 519, 519, 519,
	519, -250, 516, -313, -455, 518, 417, 517, 223, 223,
	223, 223, 375, 517, 445, -519, -258, 486, -90, 301,
	517, 521, -304, 36, 514, 518, -449, 2, 2, -444,
	481, 516, 516, -347, 516, 174, -519, -303, -254, -540,
	517, 449, -366, -272, 343, 410, 358, 391, 427, 8,
	9, 8, 9, 521, -455, 521, -541, 89, 445, 75,
	383, -369, 194, 75, -474, -237, 89, -475, -221, 69,
	461, 334, 173, 141, -541, 89, 334, -541, 89, 89,
	396, 415, 445, 58, -413, 40, 40, 27, -115, 245,
	174, 492, 430, 209, 383, 445, -413, -333, -425, 109,
	265, 266, 58, -450, -445, 507, 508, -450, 58, -450,
	-450, -450, 486, -252, -413, 383, 445, 445, 445, 445,
	521, 40, 40, 27, -115, 245, 174, 445, -269, -235,
	475, 41, 475, 445, 41, 383, 445, 521, 41, 41,
	445, 445, -526, -226, 98, 280, 258, 281, 92, 279,
	-227, -228, 320, 473, -462, 396, 357, 143, 201, -419,
	201, -419, -261, -221, 518, -115, -378, -378, -115, -378,
	-115, 44, 143, 2, -556, 238, 516, -276, 285, 174,
	-302, -420, 220, 521, -310, 143, -332, -331, 285, -254,
	194, 2, 143, -293, 285, 137, 516, 341, 2, -236,
	194, -222, -221, -351, -214, 433, 143, -330, 471, -360,
	-115, 516, 117, 37, -360, -321, -322, -417, -323, -237,
	516, -243, -221, 2, -250, -311, -211, 143, -311, -311,
	-211, 521, 143, -234, -253, -258, -259, -260, -462, -463,
	-90, -421, 517, 517, 517, -172, 303, -171, -221, 5,
	-185, 471, -275, -370, -369, -478, -479, -474, 250, 209,
	461, 222, 157, -294, -238, -237, 110, -179, 486, -111,
	517, -419, 201, -173, -173, -419, -419, -250, 171, -462,
	-173, -173, -173, 2, 2, -335, -250, -234, -269, -250,
	-302, -302, -335, -234, -335, -234, -335, -234, -115, -378,
	2, 393, 171, 171, 518, -335, 341, 111, 430, 318,
	209, -250, -269, -250, -269, -234, -250, -413, -327, -198,
	300, 234, 399, -357, -358, -380, 374, 375, -358, 374,
	375, 8, 9, 8, 9, -202, 403, 288, -311, 521,
	-205, 38, 124, 234, -250, 492, 139, -378, -378, 445,
	-562, 425, -385, 139, -378, 272, 289, 453, 156, 462,
	128, 293, 174, 516, -379, -379, 517, -315, -378, -378,
	515, 524, 517, -298, 521, -296, -378, -313, -313, 517,
	518, -313, -302, 515, 515, 521, 517, -396, -397, 133,
	-378, 445, 445, 445, 445, 516, 517, 518, -508, 310,
	516, 516, -378, 517, 517, 517, 517, 37, 521, 521,
	521, 517, 521, 521, 521, 517, 517, 517, 521, 517,
	492, 492, 517, 517, 517, 517, 521, 517, 521, 517,
	174, 517, 517, -349, 324, 517, 11, 12, 507, 508,
	509, 510, 169, 511, 512, 505, 506, 504, 497, 498,
	499, 83, 261, 376, 14, 15, 16, 223, 201, -379,
	-379, -379, 517, -383, -384, 174, 171, 37, -344, -344,
	-344, 517, 174, -313, 517, 517, 516, -501, 263, 285,
	517, -372, -371, 484, -416, -306, 2, -408, -245, -455,
	-372, -372, -313, -378, 229, 229, -337, 471, 299, -339,
	-408, -402, -451, -377, -376, 172, 38, 124, 282, 197,
	-402, -243, -293, -402, -402, -455, -403, -403, -401, 517,
	-516, -451, 517, -307, -411, -495, -298, 518, -455, -182,
	-496, -161, 5, 289, -161, -161, -161, -302, 445, 24,
	325, -425, 514, 515, 8, -455, 516, -449, -449, -449,
	-302, 174, 174, -452, -365, 459, 80, 343, 441, -452,
	-207, 357, -237, -237, -250, -259, 285, -369, 194, -213,
	285, -425, -244, -221, 516, 516, 234, 234, 471, -237,
	-244, 234, 194, -237, 194, -244, -244, -527, 343, 294,
	-378, -460, -459, 108, 395, 253, 341, 286, -208, 357,
	396, -115, -115, -115, 516, -540, 471, 127, -250, -269,
	-250, -259, -254, 396, 357, 283, -263, -450, -450, -331,
	396, 357, -259, -252, -460, 383, -234, -209, -115, -115,
	-115, 516, -235, -210, 357, 5, 194, -237, 5, -221,
	-237, -259, -460, -544, 23, -237, 194, -237, -259, -460,
	-226, -462, 289, 467, -525, 383, 445, -413, -111, -176,
	486, -111, -170, 205, 509, -522, -221, 480, -221, -274,
	-277, -275, -237, -188, -189, 488, 486, 143, -267, -250,
	514, -173, -462, -250, -259, 143, -293, 285, -462, 37,
	143, 516, 2, 2, 299, 285, -236, 194, -215, 134,
	-560, 499, -234, -372, -306, -329, -363, 365, 299, -294,
	476, -243, -329, -308, 521, 174, 499, 518, -294, 2,
	-211, -311, -211, -211, -269, -270, -211, -211, -211, -90,
	-90, -173, 521, 516, 499, 499, 516, -462, -462, 517,
	521, -250, -236, 209, 209, -242, -222, 517, 521, 518,
	516, -181, 303, -180, 135, 236, 221, 404, 405, 406,
	407, 126, -179, -112, 174, -52, 486, 430, -173, 520,
	-335, -335, -335, 393, 393, -221, -246, -234, -250, -247,
	-269, 171, 171, 465, -358, 300, 257, -405, -206, 291,
	-250, 520, -378, -378, 139, 139, -378, -379, -379, -378,
	139, 174, 516, -378, -389, 32, 32, 517, 521, -374,
	-378, 517, 479, -298, -298, 517, 509, -455, 520, 517,
	-387, 136, -378, 439, 268, 192, 267, -348, 267, -348,
	-348, -449, 5, -455, 509, -509, -240, 516, -221, 484,
	-297, 305, 517, -427, -425, -378, -378, -378, -378, -378,
	-449, -430, -430, -445, -445, -378, -383, -378, -427, -425,
	-379, -379, -379, -379, -379, -379, -379, -379, -379, -379,
	-379, -379, -379, -379, -379, -379, -379, -379, -379, 128,
	285, 293, -379, -384, -383, -378, -378, -425, 517, 517,
	517, -313, -90, 516, 263, -325, 185, -378, -419, 521,
	-325, -325, 517, -408, -408, 516, -378, 229, 515, 521,
	523, 499, -293, 518, -401, -402, 515, 517, 521, 517,
	521, -362, 37, 517, -455, -184, -183, 125, 51, -302,
	302, 5, 8, 514, 515, 518, -449, 517, 517, 517,
	-302, -302, -378, 445, 445, 143, 285, 473, -480, -475,
	141, -378, -300, -406, -378, 516, 516, 2, -204, 132,
	396, -542, 2, 471, 143, -211, 143, -211, 490, 516,
	516, 445, 383, 486, -313, -378, -174, 117, -454, -529,
	520, -529, 520, 383, 445, 383, 445, 486, 486, -313,
	445, -429, 46, 25, 285, -253, 445, 445, -211, 143,
	456, 396, -462, 289, -259, -254, 396, 357, -419, -178,
	303, -177, 135, 367, 126, 236, -419, -176, 174, 220,
	2, -254, 2, 517, 517, 521, -481, 37, 297, 297,
	516, -250, -71, 486, -418, -451, -252, 37, 143, -525,
	-115, -254, -423, -424, 5, -250, 143, 299, 285, -216,
	243, -560, -459, -496, -298, -329, -320, 286, 88, 517,
	-372, -322, -306, -378, 2, 517, -211, -211, -171, -172,
	-462, -462, -462, -173, -185, -185, -370, -278, 516, -236,
	-222, 516, -185, -238, 2, -463, 521, 516, 499, 499,
	499, -419, -115, 303, -250, 509, -335, -285, -284, 318,
	293, -285, 374, 374, 300, 165, 239, -205, -235, -378,
	-378, 139, 32, 32, -378, -378, -389, 517, -378, -378,
	-313, 515, 5, -378, 517, 517, 8, -378, 517, 518,
	-510, -221, -378, 517, 58, 517, 517, 521, 521, 517,
	517, 517, 517, 517, 517, 517, -384, 174, 128, 293,
	516, 517, 517, -90, -386, 188, 58, -408, -386, -386,
	-337, -302, -408, -376, -235, 514, -455, -451, -411, 516,
	518, -183, 499, 515, 2, 514, -455, 517, -237, -237,
	-369, 143, -482, 89, -484, 73, 157, 97, 285, 289,
	461, 334, 69, 117, 348, -552, 37, 496, 517, 517,
	521, -205, -300, -302, 285, 422, 117, 285, 117, 110,
	456, 76, -237, -244, -302, -302, -250, -259, 150, 517,
	521, 499, 2, 509, 509, -259, -254, -259, -252, 316,
	150, 517, -235, 5, 5, 143, -232, 73, 5, -237,
	-237, -253, 110, 383, 445, -176, 521, 516, 499, 499,
	-176, -463, -111, -293, -281, 212, -237, -479, -476, -477,
	334, -483, -485, 157, 334, -115, 2, -187, -186, -221,
	5, 516, -276, 303, 515, -332, -115, -254, -293, 517,
	521, -353, 471, -235, -250, 143, -217, 242, -560, -459,
	-214, -356, -354, -361, 516, 299, -115, -298, 499, 517,
	517, 110, 110, 203, 142, -300, 516, 516, -302, 110,
	517, -180, -181, -462, -111, -462, -179, -53, -54, 209,
	89, 323, -247, 430, 209, 516, 516, -205, -378, -378,
	-378, 517, -298, -455, 509, -504, 318, 517, -405, -378,
	-378, -379, 174, 516, -389, 517, -505, 485, -378, -313,
	-505, -505, 517, -451, 2, -462, 514, 2, -369, -244,
	-248, -241, -221, 157, 194, 289, 234, 516, -379, -250,
	516, 2, 29, -553, 121, 213, -368, -554, 96, 423,
	202, -406, -206, 517, 517, 289, 289, -378, -425, 516,
	-211, -211, 517, 517, -378, 445, -454, 95, -452, 2,
	-529, -234, -378, 445, 5, -211, -248, -211, -211, -232,
	456, -259, -254, -177, -178, -462, -111, -176, 37, -282,
	-283, 201, -481, 234, -241, 234, -551, 486, 517, 521,
	499, 499, -274, -188, -72, -73, 446, -418, -293, 37,
	5, 516, -221, 299, 516, -235, -560, -459, -215, -329,
	129, -302, 89, -356, -385, -173, 516, 516, -279, 78,
	90, 118, 193, 177, 210, 415, 420, 27, -279, 517,
	-300, -300, 517, 516, -173, 517, 521, 27, 516, 27,
	516, -250, -269, -313, -313, 517, -298, 58, 521, 517,
	517, -379, -389, 517, -506, -507, -240, 515, 2, -484,
	-241, 285, 471, -378, -223, 516, -378, 37, 213, 122,
	199, -281, 516, -367, 471, 348, -232, -300, 516, 516,
	516, 499, 174, 516, -429, -211, -253, 517, -534, 346,
	-115, -188, 316, 516, -280, 299, 110, 278, -186, -452,
	-452, 517, 37, -73, 9, 37, -115, -300, -250, -300,
	299, -459, -216, 465, 286, 517, -244, -329, -463, -463,
	-367, 517, 517, -463, -54, -302, -302, 517, 517, -511,
	341, 375, 187, -313, -299, 517, 521, 37, 143, 189,
	517, -486, 262, -221, 517, 122, 199, -282, -302, -281,
	189, -250, -530, 471, 517, -287, -286, -284, -289, -288,
	-284, -313, -452, 95, 316, -313, -232, -537, 175, -536,
	5, 10, -280, -250, -301, -407, -237, 79, 110, -281,
	-115, -115, 517, -353, 517, -250, -217, 396, -371, 517,
	517, -368, -367, -189, 486, 517, 517, 517, 517, -512,
	-513, 48, 458, 101, -378, -512, -512, -507, -509, 157,
	486, -487, -490, -489, 299, 402, 175, 317, 517, 422,
	482, -553, 517, 486, -293, -378, -367, 517, 521, 476,
	517, 521, 476, 517, 174, 517, -211, -175, 486, 44,
	516, 517, 521, 333, 123, 132, -282, -551, -367, 516,
	-368, 516, -321, -173, -173, -281, -368, -372, -173, -514,
	141, -513, 330, 170, 374, 330, 170, -514, -514, -241,
	53, -489, 299, -490, 299, 465, 123, -372, 53, -486,
	-281, -286, 201, -288, 174, 316, 146, -536, 29, -302,
	-407, 375, 375, 2, -188, -280, -368, -300, -281, -300,
	-372, -282, -281, 101, 185, 440, 278, 32, 499, -488,
	278, 363, 61, 396, -488, 499, -487, 516, 516, 381,
	517, 2, -280, -281, 517, -282, 517, -189, -282, 374,
	307, -513, -378, 22, 289, 117, -378, -553, -313, -313,
	303, -212, 61, 363, -282, -367, -189, -368, -372, -189,
	517, 517, -172, 516, -189, -368, -372, -281, -372, -282,
	445, -172, -372, -281, -282, 516, 517, -282, -189, -313,
	-189, -372, 517, -372, -282,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 27, 28,
	29, 30, 476, 477, 479, 480, 481, 483, 484, 486,
	488, 490, 491, 492, 494, 495, 497, 498, 499, 500,
	501, 503, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 565, 567, 0, 1168,
	1170, 1172, 1174, 0, 701, 0, 32, 33, 0, -2,
	278, 280, 282, 0, 308, 310, 311, 313, 315, -2,
	0, 409, 410, 412, 414, -2, -2, 0, 863, 865,
	0, 554, 556, 0, 868, 870, 0, 0, 576, 577,
	0, 1256, -2, 570, 572, 574, 639, 641, 643, 645,
	647, 649, 651, 653, 654, 656, 658, 660, 662, 664,
	666, 668, 670, 671, 673, 675, 677, 679, 681, 683,
	685, 687, 689, 691, 693, 695, -2, 697, -2, -2,
	0, -2, -2, -2, 1186, 36, 38, 40, 42, 44,
	46, 48, 50, 52, 360, 361, 363, 365, 367, 369,
	372, 374, 376, 1314, 416, 418, 420, 422, 424, 426,
	428, 0, -2, 1326, 0, 0, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 83, 84, 85, 86, 87,
	88, 89, 90, 66, 67, 69, 70, 71, 75, 76,
	77, 78, 81, 64, 0, 0, 1287, 1289, 1291, 1293,
	-2, 0, 0, 5, 9, 11, 13, 15, 17, 19,
	21, 23, 25, 478, 482, 485, 487, 489, 493, 496,
	502, 504, 506, 463, 464, 467, 1947, 1964, 1965, 1966,
	1969, 1970, 1971, 1972, 1973, 1974, 2353, 2434, 2435, 1996,
	1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006,
	2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016,
	2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026,
	2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036,
	2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046,
	2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056,
	2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066,
	2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076,
	2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086,
	2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096,
	2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106,
	2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116,
	2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126,
	2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136,
	2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146,
	2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156,
	2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166,
	2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176,
	2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186,
	2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196,
	2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206,
	2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216,
	2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226,
	2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236,
	2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246,
	2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256,
	2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266,
	2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276,
	2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286,
	2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296,
	2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306,
	2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316,
	2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326,
	2327, 2328, 2329, 2330, 2331, 2332, 2333, 465, 466, 1023,
	0, 530, 528, 1940, 531, 2173, 533, 535, 403, 404,
	405, 406, 407, 408, 0, 547, 540, 546, 548, 550,
	551, 552, 553, 525, 523, 0, 547, 1999, 545, 1166,
	1167, 1151, 1152, 2211, 1193, 0, 193, 566, -2, -2,
	-2, 2319, -2, 598, -2, 605, 2323, 2213, 610, 0,
	612, -2, 615, 1169, 1171, 1173, 699, 700, 1950, 0,
	0, 0, 0, 34, 35, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1072, 1073, 1074, 0,
	198, 200, -2, -2, -2, -2, 0, 0, 2251, 2044,
	1908, 1966, 1911, 1906, 279, 281, 283, 284, 0, 0,
	0, 0, 0, 0, 309, 312, 314, -2, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 918, 910,
	911, 1117, 0, 0, 0, 0, 411, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 415, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 0, 340, 468, 469, 0,
	1315, 1315, 0, 0, 0, 0, 253, 244, 864, 866,
	867, 0, 0, 0, 0, 555, 557, 0, 0, 226,
	869, 871, 872, 0, 0, 0, 0, 0, 255, 0,
	0, 571, 573, 575, 640, 642, 644, 646, 648, 650,
	652, 655, 657, 659, 661, 663, 665, 667, 669, 672,
	674, 676, 678, 680, 682, 684, 686, 688, 690, 692,
	694, 696, 706, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 788, 0, 0, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, 709, 711, 712, 713, 0, 768, 786,
	787, 796, 698, 0, 1063, 1316, 1195, 1176, 1190, 1195,
	1178, 1179, 1180, 1181, 1182, 1187, 1189, 1183, 1184, 1185,
	37, 39, 41, 43, 45, 47, 49, 51, 53, 362,
	364, 366, 368, 370, 373, 375, 377, -2, 1285, 1286,
	417, 419, 421, 423, 425, 427, 429, 558, 0, 560,
	0, 710, -2, 0, 1320, 1320, 1320, 0, 0, 1286,
	1284, 0, 563, 564, 619, 620, 1551, 0, 0, 0,
	0, 0, 0, 0, 1805, 1637, 0, 621, -2, 1668,
	1670, 2294, 2319, 1804, 1672, 1673, 1674, 1675, 1676, 0,
	1678, 1679, 1680, 1681, 1682, 1683, 0, 1685, 0, 1690,
	1691, 1692, 0, 2301, 1885, 1960, -2, 0, 0, 2307,
	1956, 0, 1771, 1708, -2, -2, 1983, 1962, 1483, 1484,
	1485, 1486, 1487, -2, -2, 2336, 1712, 1713, 1714, 1715,
	1716, 1717, 1718, 1719, 1720, 1721, 1722, 0, 2282, 2302,
	2303, 2308, 2310, 2304, 2291, 1733, 2056, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1510, 1519, -2, -2, -2, -2, -2, -2, -2, 2295,
	2296, 2313, 2316, 2322, 2327, 2328, 2300, 2309, 2337, 2338,
	2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348,
	2349, 2350, 2351, 2352, 1511, -2, -2, -2, -2, 1303,
	2184, 1306, 1023, 1304, 1288, 1290, 0, 1292, 0, 0,
	0, 1297, 1323, 1321, 0, 1364, 1301, 1302, 1382, 1382,
	1406, 0, 1387, 0, 1406, 1315, 1432, 0, 1393, 2203,
	1709, 1710, 0, 1966, 1961, -2, -2, 2334, 0, 0,
	0, 0, 0, 0, 0, 526, 0, 532, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 1192, 1116, 568,
	569, 0, 593, 0, 597, 2290, -2, 2007, 2222, -2,
	601, 1196, 1200, 1201, 1202, 1203, 0, 0, 0, 0,
	0, 607, 0, 0, 594, 595, 613, 616, 0, 702,
	703, 704, 705, 63, 0, 2302, 1432, 65, 0, 1930,
	1991, 1992, 1993, 1994, 1995, 2335, 2354, 2355, 2356, 2357,
	2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367,
	2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377,
	2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387,
	2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397,
	2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407,
	2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417,
	2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427,
	2428, 2429, 2430, 2431, 2432, 2433, 2336, 68, 0, 2302,
	72, 0, 2302, 0, -2, 79, 0, 1936, 82, 0,
	1933, 91, 0, 2302, 0, 1905, -2, 0, 178, 1944,
	0, 889, 1946, -2, 2302, 1071, 256, 257, 1979, 1980,
	1987, 1988, 1989, 1990, 0, 0, 0, 0, 856, 1902,
	1907, 857, 1926, 858, 1912, 0, 285, 286, 287, 288,
	289, 0, 290, 2302, 292, 293, 0, 295, 296, 2302,
	298, 299, 0, 301, 0, 211, 212, 317, 318, 0,
	320, 0, 2302, 0, 0, 0, 326, -2, 341, 0,
	338, 329, 330, 332, 333, 334, 335, 0, 381, 379,
	1941, 0, 884, 2302, 886, 0, 0, 1096, -2, 2302,
	1068, 0, 1102, 1098, 0, -2, 0, 1313, 2302, 1210,
	914, 915, 916, 917, 0, 400, 0, 1223, 0, 1225,
	0, 1246, 1438, 1382, 1382, 0, 342, 343, 344, 345,
	346, 2302, 0, 0, 0, 351, 0, 353, 354, 355,
	356, 357, 358, 359, 167, 2302, 434, 461, 0, 167,
	2302, 437, 167, 2302, 440, 0, 443, 1115, 167, 2302,
	446, 167, 2302, 449, 451, 167, 2302, 455, 456, 458,
	2302, 460, 258, 1162, 1163, 1164, 1165, 0, -2, 519,
	1949, -2, 471, 0, 472, 0, -2, 0, 270, 0,
	0, 873, 874, 875, 876, 877, 880, 881, 882, 883,
	1419, 229, 227, 0, 0, 1153, 1154, 1155, 1156, 1157,
	1158, 1159, 1160, 1161, 0, 0, 578, 0, 0, 707,
	708, 0, 0, 718, 719, 720, 0, 270, 2214, 2181,
	2076, 727, 0, 730, 733, -2, 0, 0, 0, 0,
	737, 0, 742, 743, 744, 0, 746, 862, 748, 0,
	0, 750, 0, 754, 0, 757, 0, 759, 0, 761,
	-2, -2, -2, 772, -2, 0, 775, 777, 0, 779,
	-2, 0, 788, 784, 785, 0, 0, 0, 0, 804,
	805, 0, 810, 0, 813, 814, 815, 0, 817, 818,
	0, 820, 821, 822, 823, 0, 825, 826, -2, -2,
	830, 832, 0, 839, 0, 843, 0, 847, 0, 714,
	715, 167, 1436, 1175, -2, 1177, 0, -2, 0, 559,
	0, 562, 1343, 1271, 1268, 0, 1340, 1341, 1272, 0,
	0, 0, 1279, 0, 1318, 1319, 0, 0, 0, 1258,
	1259, 0, 0, 0, 0, 1810, 1811, 1812, 1813, 1814,
	1815, 1818, 1819, 1816, 1817, 1820, 1821, 0, 0, 0,
	0, 0, 1822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1823, 1824, 1825, 0, 0, 1827,
	0, 1829, 0, 0, 0, 0, 0, 0, 1616, 1618,
	1893, 0, 0, 1826, 1556, 1557, 1558, 1559, 1560, 1595,
	1596, 0, 0, 1669, 1890, 1889, 1671, 0, 1841, 0,
	1684, -2, 0, 1805, 1836, 0, 0, 1693, 1694, 1695,
	0, 0, 1841, 0, 0, 1884, 1705, 1706, 1548, 0,
	0, 1773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1497,
	1496, 0, 1498, 0, 1499, 1500, 1507, 1520, 0, 0,
	0, 0, 1524, 0, 0, 0, 0, 0, 0, 0,
	1865, -2, 0, 0, 0, 0, 1512, 0, 1305, 0,
	0, 1368, 1894, 1898, 1899, 1368, 1368, 0, 0, 1842,
	1429, 1429, 0, 0, 1425, 1425, 1425, 1423, 1406, 0,
	1406, 1416, 0, 1406, 1406, 0, -2, 1387, 0, 0,
	1416, 0, 1400, 507, 509, 511, 513, 514, 515, 517,
	1433, 1434, 0, 0, 0, 0, 1967, 0, 0, 0,
	0, 0, 1952, 0, 0, 0, 0, 2260, 537, 549,
	1315, 0, 1844, 1455, 1459, 0, 1461, 1462, 1463, 1464,
	1465, 0, 0, 1456, -2, 1508, 1510, 1531, 1984, 1985,
	1986, 1491, 1492, 1493, 1494, 1495, 1503, 1490, 1490, 1490,
	1501, 1530, 1522, 1530, 1526, 1476, 1477, 1478, 1513, 1514,
	1515, 1516, 0, 2260, 542, 0, 0, 0, 0, 0,
	-2, 603, 608, 609, 0, 0, 1198, 0, 1204, 630,
	631, 632, 1206, 1207, 0, 606, 633, 634, 635, 636,
	637, 638, 0, 1914, 1915, 1916, 1917, 1920, 1921, 0,
	0, 604, 623, 611, 0, 617, 92, 1148, 0, 131,
	0, 1148, 1148, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 0, 116, 127, 104, 105, 0, 0, 0,
	0, 0, 73, 1045, 0, 1048, 0, 0, 0, 0,
	0, 0, 0, 1061, 0, 0, 0, 0, 115, 0,
	0, 110, 94, 0, 0, 0, 117, 129, 0, 158,
	160, 0, 0, 0, 0, 0, 0, 177, 185, 0,
	0, 0, 0, 1069, 0, 1312, 0, 0, 2302, 0,
	1419, 2114, -2, -2, 1419, 855, 0, 0, 1967, 1910,
	0, 0, 0, 0, 0, 0, 0, 319, 321, 0,
	323, 324, 325, 0, 1095, 0, 331, 371, 994, 2302,
	0, 0, 398, 393, 0, 395, 0, 1044, 2302, 1042,
	1945, 0, 1066, 0, 1023, 2302, 1943, 0, 0, 1103,
	1976, 1112, 1116, 1212, 0, 402, 0, 1226, 1228, 0,
	0, 1439, 0, 1441, 1442, 0, 348, 349, 350, 0,
	430, 0, 165, 166, 0, 167, 2302, 435, 0, 438,
	0, 167, 2302, 1900, 444, 0, 447, 0, 0, 453,
	0, 0, 0, 0, 1315, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 233, 0, 1418, 0,
	1419, 227, 270, 270, 1419, 580, 1419, 582, 0, 0,
	721, 722, 0, 270, 270, 270, 728, 729, 731, 732,
	-2, -2, 840, 734, 735, 807, 0, 0, 0, 806,
	747, 0, 849, 2199, 860, 807, 2044, 807, 2044, 807,
	2044, 758, 760, 763, 799, 771, 776, 0, 0, 781,
	789, -2, 0, 791, 0, 793, 0, 795, 807, 808,
	811, 816, 819, 824, 0, 0, 0, 0, 0, 0,
	0, 1062, 0, 1188, 1343, 1271, 561, 1262, 1342, 1263,
	1270, 1273, 0, 0, 1275, 0, 1277, 0, 1338, 1339,
	1346, 1347, 0, 1357, 1358, 1350, 0, -2, 0, 0,
	1353, 1354, 1281, 0, 1298, 1299, 1300, 1327, 1330, 1126,
	0, 2434, 1552, 1450, 1553, 1554, 1929, 0, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, -2, -2,
	-2, -2, -2, -2, -2, -2, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, -2, -2, -2,
	1593, 1594, -2, 1828, 1830, 0, 1893, 0, -2, 0,
	-2, -2, -2, -2, 1613, 0, 1615, 1620, 1622, 1624,
	0, 0, 0, 0, 1892, 1634, 1876, 1877, 0, 0,
	1807, 1808, 1809, 1619, 0, 1638, 1891, 1888, 0, 0,
	1840, 1326, 1697, 0, 0, 0, 0, 1704, 1689, 1838,
	0, 1837, 0, 0, 0, 1848, 0, 1883, 1879, 0,
	1927, 1547, 1534, 1535, 1536, 1537, 1538, 1539, 1549, 0,
	1924, 1953, 1959, 1781, 0, 0, 0, 1734, 1735, 1736,
	1737, 1738, 0, 1740, 1741, 0, 1743, 1744, 0, 1746,
	1747, 0, 1749, 1750, 1751, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	0, 0, 1753, 0, 1851, -2, -2, -2, -2, -2,
	-2, -2, -2, 0, 1755, 0, 1757, 1842, 1862, 0,
	0, 1639, 0, 0, 0, 1805, 0, 1760, 1842, 1870,
	0, 0, 0, 0, 0, 1842, 0, 1875, 0, 1767,
	0, 1769, 1307, 0, 0, 1445, 0, 0, 0, 1897,
	1445, 1445, 0, 1363, 0, 0, 1426, 1427, 1428, 0,
	0, 1429, 0, 1420, 1424, 1421, 1422, 1416, 1379, 0,
	0, 1931, 1416, 1385, 1415, 0, 1023, 1405, 1416, 1416,
	0, -2, 1389, 1406, 0, 0, 508, 510, 512, 516,
	518, 0, 0, 1326, -2, 0, -2, 1022, 0, 0,
	0, 0, 527, 529, 0, 0, 450, 0, 521, 0,
	524, 0, 1446, 1449, 0, 0, 1460, 1466, 1467, 0,
	-2, 0, 0, 1532, 0, 0, 0, 0, 192, 0,
	596, 0, 1197, 1205, 0, 627, 0, 629, 0, 1918,
	1922, 1919, 1923, 0, 618, 0, 0, 0, 0, 1147,
	0, 135, 2302, 0, 169, 0, 0, 987, 1937, 0,
	0, 0, 0, 2063, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 101, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 1046, 1047, 1049,
	1056, 1058, 0, 1052, 1925, 0, 0, 1053, 0, 1055,
	1057, 1059, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 103, 107, 0, 0, 0, 0, 1904,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1091, 1089, 1081, 1082, 1083, 1084, 1085, 1086,
	1087, 1088, 0, 0, -2, 0, 0, 0, 0, 203,
	0, 261, 1903, 1913, 0, 878, 879, 291, 294, 297,
	300, 199, 0, 327, 0, 0, 920, 895, 0, 0,
	380, 270, 0, 0, 394, 0, 1040, 1043, 0, 1023,
	2302, 1080, 0, 0, 0, 0, 0, 0, 1101, 0,
	2302, 1932, 1975, 1976, 1214, 1220, 0, 1445, 0, 1244,
	1229, 0, 0, 0, 1244, 1248, 1249, 1251, 1252, 0,
	0, 1440, 0, 352, 462, 167, 432, 0, 167, 167,
	441, 0, 0, 167, 452, 167, 457, 167, 259, 459,
	470, 520, 1315, 1315, 270, 268, 2156, 266, 263, 265,
	0, 0, 0, 921, 923, 924, 925, 926, 0, 1976,
	0, 2103, 1976, 0, 1232, 1234, 0, 223, 0, 230,
	228, 233, 0, 0, 392, 579, 584, 716, 0, 270,
	724, 725, 726, 765, 801, 736, 738, 739, 740, 0,
	861, 859, 749, 807, 752, 807, 755, 807, 774, 778,
	783, 790, 0, 0, 0, 803, 0, 0, 0, 0,
	0, 0, 0, 844, 845, 846, 848, 1437, 1266, 1267,
	1269, 0, 1278, 0, 0, 1352, -2, -2, 1351, 1355,
	1356, -2, -2, -2, -2, 1274, 0, 1283, 1280, 0,
	1337, 1124, 1125, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 1635, 0, -2, 1614, 1617, 1621, 1623, 1625,
	0, 0, 0, 0, 0, 0, 1831, 0, 1833, 1636,
	1886, 1889, 1803, 0, 0, 1325, 1326, 1326, 0, 1703,
	0, 1839, 0, 1846, 1847, 0, 1696, 0, 1880, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1707, 0,
	0, 0, 0, 1739, 1742, 1745, 1748, 0, 0, 0,
	0, 1728, 0, 0, 0, 1732, 1502, 1488, 0, 1530,
	1528, 1529, 1523, 1530, 1527, 1480, 0, 1479, 0, 1752,
	0, 1754, 1756, 0, 0, 1758, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1642,
	1643, 1644, 1759, 1868, 1869, 0, 0, 0, 0, 0,
	0, 1765, 0, 1874, 1766, 1768, 1315, 0, 1308, 0,
	1365, 1360, 1444, 0, 1895, 1419, 1367, 1369, 1896, 1934,
	1360, 1360, 0, 1843, 0, 0, 1410, 0, 0, 0,
	1412, 1383, 0, 0, 1377, 0, 1373, 1374, 1375, 1376,
	1384, 1023, 1414, 1386, 1390, 1953, 0, 1416, 0, 1401,
	0, 1403, 1435, 0, 1395, 1398, 0, 0, 1968, 271,
	0, 302, 306, 307, 303, 304, 305, 536, 0, 0,
	0, 1845, 0, 1451, 0, 1457, 0, 0, 0, 0,
	541, 0, 0, 592, -2, 625, 626, 628, 0, 624,
	132, 1148, 0, 0, 1129, 1131, 0, 137, 2302, 146,
	0, 961, 0, 1935, 0, 0, 0, 0, 0, 1150,
	0, 0, 2302, 167, 2302, 167, 149, 152, 0, 157,
	154, 155, 182, 183, 184, 0, 0, 952, 93, 1148,
	0, 96, 100, 108, 0, 0, 0, 114, 0, 0,
	0, 1133, 1139, 0, 0, 1050, 1051, 1054, 1060, 74,
	0, 0, 1137, 1143, 80, 0, 1128, 159, 98, 102,
	109, 0, 1145, 95, 0, 181, 0, 0, 0, 173,
	0, 174, 175, 186, 0, 167, 2302, 0, 887, 888,
	1090, 1064, 1065, 0, 1070, 0, 0, 0, 1419, 195,
	0, 1419, 203, 0, 1909, 0, 0, 0, 0, 0,
	0, 919, 1005, 0, 892, 0, 0, 0, 386, 382,
	0, 391, 397, 396, 885, 0, 0, 0, -2, 0,
	0, 1105, 1099, 1100, 0, 0, 0, 2302, 1216, 1220,
	0, 1219, 1313, 1326, 401, 1221, 1244, 0, 0, 0,
	1231, 1227, 1224, 1445, 0, 0, 0, 0, 0, 347,
	431, 167, 436, 439, 1901, 167, 445, 448, 454, 473,
	474, 245, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 930, 0, 1976, 1976, 0, 1939, 0, 0, 0,
	0, 231, 0, 234, 0, 0, 0, 239, 240, 241,
	242, 243, 224, 1419, 0, 581, 0, 0, 723, 0,
	751, 753, 756, 792, 794, 807, 833, 834, 947, 0,
	947, 0, 0, 1276, 0, 1349, 1282, 1331, 1332, 0,
	1126, 0, 1555, 1598, 0, 0, -2, 0, 0, 1602,
	0, 0, 0, -2, 0, 0, 0, 1832, 1834, 0,
	1888, 1698, 0, 0, 0, 1702, 1686, 1687, 0, 1806,
	1849, 1878, 1882, 0, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 0, 1928, 1954, 1958, 1779, 1780, 1784, 1942, 0,
	0, 0, 1711, 0, 0, 0, 0, 0, 0, 0,
	0, 1521, 1525, 0, 0, 1850, 1861, 1863, 1640, 1641,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	-2, -2, -2, 1658, 1659, 1660, -2, -2, -2, 0,
	0, 0, 1864, 1866, 1867, 1871, 1872, 0, 1762, 1763,
	1764, 1873, 0, 1315, 1309, 1362, 0, 1443, 1366, 0,
	1362, 1362, 1322, 1408, 0, 0, 1431, 0, 1380, 0,
	1381, 0, 1413, 0, 1388, 1391, 1392, 1402, 0, 1394,
	0, 1397, 0, 1698, -2, 272, 274, 0, 277, 539,
	538, 522, 0, 0, 1453, 0, 0, 1505, 1509, 1533,
	544, 543, 1417, 0, 0, 0, 0, 168, 959, 986,
	0, 0, 0, 1119, 1126, 0, 0, 992, 139, 0,
	0, 0, 147, 0, 0, 144, 0, 151, 156, 0,
	0, 0, 0, 0, 0, 111, 112, 113, 0, 118,
	0, 119, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 0, 0, 0, 1123, 0, 0, 188, 0,
	0, 0, 1093, 1094, 1134, 1140, 0, 0, 203, 201,
	0, 204, 0, 207, 208, 0, 203, 197, 0, 0,
	322, 1023, 328, 941, 993, 0, 995, 0, 893, 0,
	0, 994, 378, 0, 385, 0, 1044, 0, 0, 1067,
	1078, 1023, 0, 1104, 1106, 1114, 0, 0, 0, 1218,
	1220, 0, 1211, 1212, 1345, 1222, 1242, -2, 1241, 0,
	1326, 1250, 1247, 1253, 1254, 0, 433, 442, 267, 0,
	262, 264, 0, 248, 0, 0, 922, 927, 0, 0,
	0, 0, 0, 1233, 1235, 0, 0, 0, 0, 0,
	0, 233, 254, 0, 717, 741, 802, 835, 946, 0,
	0, 837, 0, 0, 1348, 1335, 1336, 1333, 1126, 1600,
	1604, 0, 0, 0, 1606, -2, 0, 1628, -2, -2,
	1835, 1887, 1677, 1326, 1699, 1701, 1688, 1881, 1550, 0,
	1786, 1783, 0, 1770, 0, 1723, 1724, 0, 0, 1727,
	1729, 1730, 1731, 1489, 1482, 1481, 1860, 0, 0, 0,
	0, 1761, 1310, 0, 1775, 0, 0, 1370, 1775, 1775,
	1409, 0, 1411, 1378, 1371, 0, 1954, 1404, 1396, 0,
	0, 275, 0, 1447, 1452, 0, 1458, 1504, 133, 134,
	136, 0, 960, 0, 963, 0, 0, 0, 0, 970,
	971, 0, 0, 0, 0, 0, 980, 0, 1009, 1019,
	0, 1337, 0, 0, 0, 141, 162, 0, 0, 1149,
	0, 0, 167, 167, 0, 0, 1130, 1132, 0, 0,
	0, 0, 121, 0, 0, 1135, 1141, 1138, 1144, 0,
	0, 0, 1146, 179, 180, 0, 167, 0, 172, 167,
	167, 1123, 0, 0, 0, 194, 0, 0, 0, 0,
	196, 260, 203, 0, 949, 0, 1005, 997, 998, 999,
	0, 1004, 1006, 0, 0, 907, 894, 0, 903, 0,
	0, 920, 895, 0, 383, 1041, 1075, 1023, 0, 1097,
	0, 0, 0, 0, 0, 0, 1208, 1220, 0, 1213,
	1214, 1244, 1344, 0, 0, 0, 1230, 1345, 0, 269,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 235, 0, 236, 237, 238, 225, 583, 585, 0,
	0, 591, 945, 0, 0, 0, 0, 1334, 1608, -2,
	-2, 1629, 0, 1955, 1957, 1326, 0, 1772, 1328, 0,
	0, -2, 0, 0, 0, 1311, 1294, 0, 1361, 1359,
	1295, 1296, 1430, 0, 1399, 276, 0, 1454, 138, 0,
	964, 965, 1938, 967, 0, 969, 972, 0, 975, 1978,
	0, 979, 0, 988, 1010, 0, 941, 0, 1015, 1016,
	1017, 1120, 1121, 1021, 0, 140, 142, 161, 1123, 0,
	143, 150, 0, 0, 97, 0, 0, 2037, 124, 122,
	120, 1127, 99, 0, 181, 187, 1122, 176, 189, 167,
	0, 1136, 1142, 205, 0, 206, 209, 0, 0, 895,
	948, 0, 996, 0, 1007, 1008, 897, 0, 896, 0,
	0, 0, 0, 0, 384, 387, 0, 390, 0, 0,
	1107, 0, 1113, 0, 0, 0, 0, 1215, 1216, 399,
	0, 0, 0, 1244, 1255, 247, 0, 0, 928, 931,
	932, 933, 934, 935, 936, 937, 938, 939, 929, 1021,
	0, 0, 985, 0, 252, 232, 0, 587, 0, 589,
	0, 836, 838, 0, 0, 1700, 1790, 0, 0, 1725,
	1726, -2, 0, 1666, 1774, 1776, 0, 1372, 1448, 962,
	966, 0, 0, 0, 1027, 0, 0, 981, 0, 1013,
	1014, 949, 0, 941, 0, 0, 164, 0, 0, 0,
	0, 0, 0, 0, 171, 190, 1123, 202, 219, 0,
	1076, 897, 0, 0, 905, 0, 908, 0, 904, 901,
	902, 941, 0, 388, 389, 0, 1079, 0, 1114, 0,
	0, 1217, 1218, 0, 1237, 1238, 1240, 1245, 0, 0,
	1019, 1021, 895, 0, 586, 0, 0, 841, 842, 0,
	0, 0, 0, 1785, 1329, 1667, 0, 0, 0, 0,
	974, 1032, 0, 0, 0, 1011, 1012, 1009, 0, 990,
	0, 1023, 145, 0, 1021, 0, 953, 0, 0, 956,
	0, 0, 125, 2037, 123, 0, 167, 222, 0, 216,
	214, 215, 890, 0, 0, 1001, 1003, 0, 909, 949,
	907, 1077, 1021, 0, 1019, 0, 1209, 0, 1239, 270,
	270, 941, 1019, 1445, 0, 270, 588, 590, 1782, 1802,
	1791, -2, 2262, 2041, 0, 1802, 1802, 1777, 1778, 0,
	0, 976, 1028, 1029, 0, 1024, 1025, 1026, 1977, 977,
	978, 1445, 1018, 0, 1027, 163, 941, 950, 0, 0,
	951, 0, 0, 128, 0, 130, 191, 210, 0, 0,
	0, 1000, 0, 0, 0, 0, 895, 897, 1019, 0,
	941, 0, 1445, 249, 250, 949, 941, 984, 251, 1787,
	0, 0, 1793, 1794, 1795, 1796, 1797, 1788, 1789, 968,
	0, 1030, 0, 1031, 0, 0, 0, 989, 0, 1032,
	148, 954, 0, 957, 0, 126, 0, 217, 218, 0,
	1002, 898, 0, 900, 897, 906, 941, 0, 949, 0,
	1236, 895, 949, 0, 1799, 1800, 0, 0, 0, 1033,
	0, 1036, 1037, 0, 1034, 0, 1009, 0, 0, 0,
	944, 899, 891, 949, 1021, 895, 1019, 1445, 895, 1798,
	1801, 1792, 973, 1035, 1038, 1039, 1020, 991, 0, 0,
	0, 940, 942, 943, 895, 1019, 1445, 941, 982, 1445,
	949, 0, 220, 0, 1445, 941, 1110, 949, 983, 955,
	0, 0, 1108, 949, 895, 0, 221, 895, 1445, 0,
	1445, 1111, 949, 1109, 958,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 505, 3, 511, 506, 3,
	516, 517, 509, 507, 521, 508, 518, 510, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 524, 3,
	497, 499, 498, 502, 520, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 514, 3, 515, 512, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 522, 504, 523, 500,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 501,
	57840, 503, 57841, 513, 57842, 519, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1211
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1216
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1218
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1221
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1222
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1223
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1224
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1225
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1226
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1227
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1228
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1229
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1236
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1245
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1246
		{
			return helpWith(sqllex, "ALTER")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1249
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1250
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1251
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1252
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1253
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1254
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1255
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1256
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1257
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1313
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1339
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1352
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1369
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1373
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 74:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1377
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1394
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 80:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1398
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].str}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1419
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1451
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1455
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1459
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1465
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1469
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1475
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1484
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1495
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1499
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1505
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1513
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1523
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1527
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1537
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1548
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1555
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1567
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1574
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1582
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1587
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1591
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1596
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1602
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1610
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1621
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1631
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 119:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1641
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 120:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1650
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 121:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1661
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1667
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1675
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1679
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1683
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1687
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1693
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1698
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1709
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1713
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1719
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1723
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1730
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1735
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1740
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1745
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1750
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1755
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1760
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1765
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1770
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1775
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1780
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1789
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1801
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1811
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1818
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 148:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1822
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1830
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1837
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1846
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1855
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1860
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1867
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1875
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].str,
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1882
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1883
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1887
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1891
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1897
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1905
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1909
		{
			sqlVAL.union.val = nil
		}
	case 163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1915
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1919
		{
			sqlVAL.union.val = nil
		}
	case 165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1926
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1930
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1934
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1940
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1944
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1969
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1980
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1991
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2001
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2010
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2019
		{
			return unimplementedWithIssueDetail(sqllex, 48700, "ALTER TYPE OWNER TO")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2023
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2027
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2030
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2034
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2041
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2048
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{Name: sqlDollar[5].union.unresolvedObjectName(), Concurrently: sqlDollar[4].union.bool()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2077
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2104
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2116
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2126
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2137
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2146
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2154
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2162
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2166
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2170
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2177
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2181
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2190
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2194
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2198
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2202
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2283
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2294
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2299
		{
			sqlVAL.union.val = nil
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2307
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2311
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2321
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2329
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2333
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2337
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 220:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2343
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 221:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2347
		{
			sqlVAL.union.val = sqlDollar[6].union.kvOptions()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2351
		{
			sqlVAL.union.val = nil
		}
	case 223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2382
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2391
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2400
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2409
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2413
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2417
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2423
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2427
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2434
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 232:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2442
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2449
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2453
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2462
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2466
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2470
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2474
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2478
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2482
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2486
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2490
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2496
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 245:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2533
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2538
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2542
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2548
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2553
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2558
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2563
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2568
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2572
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 254:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2588
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2591
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2595
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2599
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2607
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2611
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2617
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2621
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2627
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2631
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2635
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2639
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2645
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2649
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2655
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2659
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2663
		{
			sqlVAL.union.val = nil
		}
	case 271:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2675
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2687
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2691
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2697
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2701
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2709
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2713
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2721
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2722
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2723
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2724
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2734
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2742
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2744
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2748
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2751
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2761
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2770
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2778
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2780
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2784
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2787
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2797
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2806
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2814
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2816
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2820
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2823
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2827
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2831
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2835
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2848
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2854
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2859
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2871
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2873
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2874
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2875
		{
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2876
		{
			return helpWith(sqllex, "CREATE")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2879
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2880
		{
			return unimplemented(sqllex, "create cast")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2881
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2882
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2883
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2884
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2885
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2886
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2887
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2888
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2889
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2890
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2891
		{
			return unimplemented(sqllex, "create operator")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2892
		{
			return unimplemented(sqllex, "create publication")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2893
		{
			return unimplemented(sqllex, "create rule")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2894
		{
			return unimplemented(sqllex, "create server")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2895
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2896
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2897
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2900
		{
		}
	case 337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2901
		{
		}
	case 338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2904
		{
		}
	case 339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2905
		{
		}
	case 340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2908
		{
		}
	case 341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2909
		{
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2912
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2913
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2914
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2915
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2916
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2917
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2918
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2919
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2920
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2921
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2922
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2923
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2924
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2925
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2926
		{
			return unimplemented(sqllex, "drop server")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2927
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2928
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2929
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2933
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2934
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2935
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2936
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2937
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2939
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2940
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2941
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2942
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2960
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2964
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 381:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2968
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2974
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2978
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2987
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3000
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3006
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3010
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3021
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3033
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3041
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3049
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3059
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3063
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3069
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3073
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3080
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3084
		{

			sqlVAL.union.val = nil
		}
	case 399:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3098
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3108
		{
			return helpWith(sqllex, "DELETE")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3111
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3112
		{
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3120
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3123
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3124
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3125
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3126
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3127
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3136
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3137
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3138
		{
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3139
		{
			return helpWith(sqllex, "DROP")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3142
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3143
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3144
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3145
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3146
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3147
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3148
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3156
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3160
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3164
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3173
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3181
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3189
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3193
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3196
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3204
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3208
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3211
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3219
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3228
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3236
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3244
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3252
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3259
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3266
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3281
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3285
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3291
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3295
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3304
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3312
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3319
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3323
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3327
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3337
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3341
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3344
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3348
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3353
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3371
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3373
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3378
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3382
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3404
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3411
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3413
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3421
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3429
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3437
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3445
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3456
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3460
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3463
		{
			return helpWith(sqllex, "DELETE")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3465
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3466
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3467
		{
			return helpWith(sqllex, "INSERT")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3470
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3472
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3475
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3480
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3481
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3482
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3487
		{
			return helpWith(sqllex, "DELETE")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3488
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3489
		{
			return helpWith(sqllex, "INSERT")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3491
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3495
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3496
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3500
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3504
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 521:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3514
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3522
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3530
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3534
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 525:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3538
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3548
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3555
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3563
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3567
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 530:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3571
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3581
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3585
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3589
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3593
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3596
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3616
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3620
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3624
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3628
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3631
		{
			return helpWith(sqllex, "GRANT")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3651
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3655
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3659
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3663
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3666
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3671
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3675
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3685
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3689
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3703
		{
			return helpWith(sqllex, "RESET")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3704
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3712
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3716
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3719
		{
			return helpWith(sqllex, "RESET")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3727
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3730
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3741
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3744
		{
			return helpWith(sqllex, "USE")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3748
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3749
		{
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3750
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3751
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3755
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3756
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3757
		{
			return helpWith(sqllex, "USE")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3773
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3788
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3791
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3817
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3821
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 584:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3825
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3831
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3835
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3841
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3845
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3849
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3857
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3868
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3871
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3881
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3897
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3901
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 599:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3906
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3923
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3926
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3931
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3935
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3954
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3961
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3966
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3971
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3976
		{
			return unimplemented(sqllex, "set from current")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3977
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3985
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3990
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4001
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4007
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4011
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4018
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4039
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4043
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4049
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4053
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4057
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4061
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4065
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4071
		{
			sqlVAL.union.val = tree.Low
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4075
		{
			sqlVAL.union.val = tree.Normal
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4079
		{
			sqlVAL.union.val = tree.High
		}
	case 633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4090
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4094
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4098
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4103
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4107
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4121
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4122
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4123
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4124
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4125
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4126
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4127
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4129
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4130
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4131
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4132
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4133
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4134
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4135
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4136
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4138
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4139
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4140
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4141
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4142
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4143
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4145
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4146
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4147
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4148
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4149
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4151
		{
			return helpWith(sqllex, "SHOW")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4152
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4157
		{
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4158
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4161
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4165
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4170
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4175
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4180
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4190
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4191
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4192
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4203
		{
			sqlVAL.str = "client_encoding"
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4206
		{
			sqlVAL.str = "timezone"
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4207
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4221
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4225
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4229
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4240
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4248
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4256
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4262
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4270
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4279
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4288
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4297
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4305
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4315
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4319
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4322
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4324
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4327
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4329
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4333
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4336
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4344
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4347
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4355
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4359
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4363
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4367
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4370
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4378
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4381
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4388
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4391
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4404
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4412
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4420
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4423
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4425
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4429
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4433
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4436
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4438
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4442
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4445
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4456
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4458
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4461
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4469
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4472
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4474
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4477
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4481
		{
			sqlVAL.union.val = true
		}
	case 767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4483
		{
			sqlVAL.union.val = true
		}
	case 768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4485
		{
			sqlVAL.union.val = false
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4496
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4500
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4503
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4504
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4506
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4510
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4514
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4517
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4519
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4527
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4535
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4545
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4551
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4553
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4559
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4561
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4567
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4571
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 788:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4581
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4585
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4596
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4599
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4601
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4604
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4606
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4610
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4613
		{
			sqlVAL.union.val = true
		}
	case 797:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4614
		{
			sqlVAL.union.val = false
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4622
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4625
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4627
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4630
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4638
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4648
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4658
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4661
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4664
		{
			sqlVAL.union.val = true
		}
	case 807:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4665
		{
			sqlVAL.union.val = false
		}
	case 808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4672
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4676
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4679
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4686
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4690
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4693
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4700
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4704
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4711
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4721
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4724
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4732
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4737
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4742
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4746
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4754
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4758
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4762
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4775
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4778
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4789
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4793
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4797
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4801
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4809
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4817
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4824
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4831
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4835
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4846
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4854
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4860
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4869
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4874
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4878
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4881
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4885
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4892
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 850:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4897
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5017
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5021
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5025
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5064
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5068
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5073
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5077
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5085
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5094
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5101
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 862:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5105
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5118
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5119
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5120
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5130
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5131
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5132
		{
			return helpWith(sqllex, "RESUME")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5142
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5150
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5152
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5156
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5159
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5164
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5168
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5183
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5191
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5193
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5199
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5207
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5213
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5219
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5230
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5239
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5247
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5286
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5301
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5319
		{

			sqlVAL.union.val = nil
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5325
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5331
		{
			sqlVAL.union.val = nil
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5335
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 897:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5342
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5346
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 899:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5351
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5356
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5363
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5367
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5373
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5377
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 905:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5383
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5397
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5412
		{
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5413
		{
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5414
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5432
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5433
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 912:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5434
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5438
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5439
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5440
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5441
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5442
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 920:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5447
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5453
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5457
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5463
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5469
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5473
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5482
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5486
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 930:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5492
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5497
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5498
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5499
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5500
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5501
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5502
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5503
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5504
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5505
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5510
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5519
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5526
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5531
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 944:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5542
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 947:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5549
		{
			sqlVAL.str = ""
		}
	case 949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5556
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 950:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5562
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5569
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5576
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5582
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5586
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 955:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5592
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5602
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5606
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 958:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5612
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5626
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5637
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5641
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5647
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5651
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5655
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5659
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5663
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5667
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5671
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5689
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5693
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5697
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5701
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5705
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5712
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5716
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5720
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5730
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5734
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5738
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5745
		{
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5746
		{
		}
	case 982:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5751
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5764
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5779
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5791
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5803
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5808
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5814
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5820
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5832
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5844
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5855
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5862
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 994:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5866
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5872
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5882
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5893
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5897
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5904
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5910
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5921
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5925
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5931
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5937
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5941
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5947
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5951
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5957
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5962
		{
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5963
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5964
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5965
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5966
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5967
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5985
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5989
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5995
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6001
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6007
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6011
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6031
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6035
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6039
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6043
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6052
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6056
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6060
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6064
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6068
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6074
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6080
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6088
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6092
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6096
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6100
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6104
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6123
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6132
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6140
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6144
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6147
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6148
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6151
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6152
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6154
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6155
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6156
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6166
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6169
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6171
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6173
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6175
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6176
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6178
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6179
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6181
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6183
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6191
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6194
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6198
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6202
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6212
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6216
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6219
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6227
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6231
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6234
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6240
		{
			sqlVAL.union.val = true
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6244
		{

			sqlVAL.union.val = true
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6249
		{
			sqlVAL.union.val = false
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6259
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6273
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6285
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6297
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6307
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6317
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6321
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6325
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6329
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6333
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6337
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6341
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6350
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6354
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6360
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6364
		{
			sqlVAL.union.val = nil
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6370
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6374
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6379
		{
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6380
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6389
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6396
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6398
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6400
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6402
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6404
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6406
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6410
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6414
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6420
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6424
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6444
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6462
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6481
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6498
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6515
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6519
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6534
		{
			sqlVAL.union.val = false
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6540
		{
			sqlVAL.union.val = true
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6544
		{
			sqlVAL.union.val = false
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6550
		{
			sqlVAL.union.val = true
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6554
		{
			sqlVAL.union.val = false
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6560
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6564
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6573
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6595
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6596
		{
			sqlVAL.str = ""
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6600
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6608
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6614
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6620
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6626
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6632
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6640
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6646
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6654
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6660
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         sqlDollar[7].str,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6670
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6676
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         sqlDollar[9].str,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6688
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6694
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6702
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6708
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6720
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6726
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6740
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6746
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6754
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6758
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6763
		{
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6764
		{
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6767
		{
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6768
		{
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6779
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6789
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6797
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6799
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6803
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6806
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6827
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6829
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6835
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6856
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6858
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6864
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6872
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6875
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6879
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6880
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6881
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6900
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6902
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6905
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6915
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6918
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6920
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6923
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6927
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6932
		{
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6933
		{
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6934
		{
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6944
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6948
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6951
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6954
		{
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6955
		{
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6959
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6963
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6969
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6973
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6979
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6983
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6996
		{
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6998
		{
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7002
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7007
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7011
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7015
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7021
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7027
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7033
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7037
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7047
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7057
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7067
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7071
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7075
		{
			sqlVAL.str = ""
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7081
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7085
		{
			sqlVAL.str = ""
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7091
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7095
		{
			sqlVAL.str = ""
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7101
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7105
		{
			sqlVAL.str = ""
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7110
		{
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7111
		{
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7123
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7130
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7137
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7148
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7155
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7159
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7168
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7173
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7179
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7183
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7187
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7193
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7217
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7221
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7225
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7231
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7234
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7235
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7237
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7243
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7248
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7252
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7281
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7284
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7293
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7310
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7313
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7317
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7360
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7366
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7370
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7385
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7389
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7397
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7401
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7405
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7409
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7413
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7418
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7422
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7423
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7427
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7437
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7446
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7449
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7453
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7456
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7457
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7458
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7463
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7498
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7499
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7500
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7522
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7535
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7549
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7561
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7565
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7574
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7583
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7598
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7605
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7617
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7621
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7626
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7632
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7636
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7642
		{
			sqlVAL.union.val = true
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7646
		{
			sqlVAL.union.val = false
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7652
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7662
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7674
		{
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7675
		{
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7679
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7683
		{
			sqlVAL.union.val = nil
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7688
		{
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7689
		{
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7693
		{
			sqlVAL.union.val = true
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7697
		{
			sqlVAL.union.val = false
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7701
		{
			sqlVAL.union.val = false
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7707
		{
			sqlVAL.union.val = true
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7713
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7718
		{
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7719
		{
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7723
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7727
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7733
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7739
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7743
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7750
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7754
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7760
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7781
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7786
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7798
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7802
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7806
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7815
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7824
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7835
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7836
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7840
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7844
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7848
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7862
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7866
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7874
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7881
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7903
		{
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7904
		{
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7907
		{
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7908
		{
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7925
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7929
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7958
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7961
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7963
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7975
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7978
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7986
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7996
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8000
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8005
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8010
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8016
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8021
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8028
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8033
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8044
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8048
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8052
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8060
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8091
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8101
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8111
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8119
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8128
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8132
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8136
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8147
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8171
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8177
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8188
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8192
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8198
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8200
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8204
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8210
		{
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8212
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8215
		{
			sqlVAL.union.val = nil
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8216
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8217
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8221
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8225
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8231
		{
			sqlVAL.union.val = true
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8235
		{
			sqlVAL.union.val = false
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8255
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8259
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8263
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8267
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8271
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8275
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8281
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8285
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8292
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8305
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8311
		{
			sqlVAL.str = tree.AstFull
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8315
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8319
		{
			sqlVAL.str = tree.AstRight
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8323
		{
			sqlVAL.str = tree.AstInner
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8329
		{
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8330
		{
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.str = tree.AstHash
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8355
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8363
		{
			sqlVAL.str = ""
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8376
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8380
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8385
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8386
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8387
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8388
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8392
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8397
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8411
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8415
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8421
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8427
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8437
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8447
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8466
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8479
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8487
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8488
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8505
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8506
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8508
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8516
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8517
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8529
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8536
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8545
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8585
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8597
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8598
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8602
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8603
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8604
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8605
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8606
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8607
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8608
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8611
		{
			sqlVAL.union.val = types.Geography
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8612
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8613
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8615
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8619
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8623
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8631
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8657
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8665
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8673
		{
			sqlVAL.union.val = nil
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8684
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8688
		{
			sqlVAL.union.val = types.Int2
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8692
		{
			sqlVAL.union.val = types.Int
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8696
		{
			sqlVAL.union.val = types.Float4
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8700
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8704
		{
			sqlVAL.union.val = types.Float
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8708
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8716
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8724
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8732
		{
			sqlVAL.union.val = types.Bool
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8738
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8751
		{
			sqlVAL.union.val = types.Float
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8757
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8763
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8771
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8775
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8779
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8785
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8797
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8803
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8811
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8815
		{
			sqlVAL.union.val = types.String
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8824
		{
			sqlVAL.union.val = true
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8825
		{
			sqlVAL.union.val = false
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8830
		{
			sqlVAL.union.val = types.Date
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8834
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8842
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8854
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8856
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8865
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8873
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8886
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8890
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8900
		{
			sqlVAL.union.val = true
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8901
		{
			sqlVAL.union.val = false
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8902
		{
			sqlVAL.union.val = false
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8906
		{
			sqlVAL.union.val = types.Interval
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8910
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8914
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8925
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8933
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8957
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8965
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8971
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8980
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8989
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8998
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9004
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9013
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9029
		{
			sqlVAL.union.val = nil
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9035
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9043
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9080
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9084
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9088
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9103
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9112
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9116
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9120
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9124
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9128
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9136
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9152
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9160
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9164
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9168
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9172
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9176
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9180
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9184
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9192
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9200
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9204
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9208
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9212
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9216
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9220
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9224
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9228
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9232
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9236
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9240
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9244
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9248
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9252
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9256
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9260
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9264
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9268
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9272
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9276
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9280
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9284
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9288
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9292
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9296
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9300
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9304
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9308
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9312
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9316
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9320
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9324
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9328
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9332
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9336
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9340
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9344
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9348
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9355
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9361
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9369
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9373
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9377
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9381
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9385
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9393
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9397
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9401
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9405
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9409
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9413
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9417
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9421
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9438
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9443
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9455
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9459
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9471
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9475
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9491
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9495
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9499
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9503
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9507
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9511
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9515
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9519
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9523
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9527
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9531
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9535
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9539
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9543
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9547
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9555
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9559
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9563
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9577
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9585
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9621
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9629
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9633
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9637
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9642
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9644
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9648
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9652
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9656
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9660
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9664
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9668
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9677
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9684
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9688
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9692
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9698
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9703
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9707
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9711
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9715
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9719
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9722
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9733
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9734
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9742
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9749
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9758
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9811
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9824
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9836
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9845
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9846
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9851
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9855
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9859
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9865
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9869
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9873
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9885
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9895
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9899
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9903
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9907
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9911
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9915
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9919
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9923
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9927
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9931
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9935
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9939
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9946
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9949
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9951
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9954
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9960
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9963
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9965
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9969
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9972
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9978
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9981
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9983
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9987
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9990
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9992
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9995
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9997
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10000
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10002
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10005
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10010
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10012
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10019
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10020
		{
			return unimplemented(sqllex, "treat")
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10022
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10026
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10030
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10034
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10038
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10041
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10043
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10046
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10052
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10056
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10062
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10066
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10077
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10083
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10087
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10093
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10101
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10105
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10116
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10136
		{
			sqlVAL.str = ""
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10142
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10146
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10152
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10160
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10168
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10176
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10182
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10195
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10223
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10227
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10231
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10235
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10242
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10255
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10259
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10263
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10268
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10292
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10304
		{
			sqlVAL.union.val = tree.Any
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10308
		{
			sqlVAL.union.val = tree.Some
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10312
		{
			sqlVAL.union.val = tree.All
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10317
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10318
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10319
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10320
		{
			sqlVAL.union.val = tree.Div
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10321
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10323
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10324
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10325
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10327
		{
			sqlVAL.union.val = tree.LT
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10328
		{
			sqlVAL.union.val = tree.GT
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10329
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10330
		{
			sqlVAL.union.val = tree.LE
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10331
		{
			sqlVAL.union.val = tree.GE
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10332
		{
			sqlVAL.union.val = tree.NE
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10336
		{
			sqlVAL.union.val = tree.Like
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10337
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10338
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10366
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10372
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10376
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10418
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10428
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10432
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10442
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10448
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10452
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10458
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10462
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10485
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10489
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10493
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10499
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10510
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10549
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10555
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10561
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10565
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10569
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10575
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10598
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10604
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10610
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10621
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10627
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10631
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10644
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10648
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10653
		{
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10654
		{
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10668
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10677
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10681
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10697
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10703
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10707
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10726
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10734
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10757
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10766
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10770
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10774
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10778
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10788
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10803
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10807
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10823
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10832
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10843
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10852
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10860
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10872
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10973
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10980
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10984
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10988
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11002
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11006
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11010
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11032
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11050
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11063
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11070
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11095
		{
			sqlVAL.str = ""
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11101
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11105
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
