// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:73

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}

//line sql-gen.y:675
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11502

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 31,
	-2, 1297,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	217, 194,
	441, 194,
	-2, 0,
	-1, 79,
	206, 1105,
	219, 1105,
	235, 334,
	332, 334,
	341, 902,
	373, 334,
	385, 902,
	426, 902,
	451, 334,
	476, 902,
	-2, 0,
	-1, 85,
	235, 338,
	-2, 0,
	-1, 86,
	120, 1297,
	212, 1297,
	461, 1297,
	462, 1297,
	-2, 0,
	-1, 102,
	137, 1268,
	155, 1268,
	168, 1268,
	215, 1268,
	248, 1268,
	291, 1268,
	301, 1268,
	456, 1268,
	-2, 1239,
	-1, 136,
	145, 787,
	234, 787,
	335, 756,
	390, 756,
	444, 787,
	-2, 0,
	-1, 138,
	4, 1299,
	21, 1299,
	22, 1299,
	23, 1299,
	24, 1299,
	25, 1299,
	26, 1299,
	28, 1299,
	29, 1299,
	35, 1299,
	40, 1299,
	41, 1299,
	42, 1299,
	43, 1299,
	44, 1299,
	45, 1299,
	46, 1299,
	47, 1299,
	48, 1299,
	50, 1299,
	51, 1299,
	52, 1299,
	53, 1299,
	55, 1299,
	56, 1299,
	57, 1299,
	58, 1299,
	59, 1299,
	60, 1299,
	64, 1299,
	65, 1299,
	66, 1299,
	67, 1299,
	69, 1299,
	70, 1299,
	71, 1299,
	75, 1299,
	76, 1299,
	77, 1299,
	78, 1299,
	79, 1299,
	80, 1299,
	81, 1299,
	84, 1299,
	85, 1299,
	86, 1299,
	87, 1299,
	89, 1299,
	91, 1299,
	92, 1299,
	93, 1299,
	95, 1299,
	97, 1299,
	98, 1299,
	106, 1299,
	107, 1299,
	108, 1299,
	109, 1299,
	111, 1299,
	112, 1299,
	113, 1299,
	115, 1299,
	116, 1299,
	117, 1299,
	119, 1299,
	120, 1299,
	122, 1299,
	123, 1299,
	124, 1299,
	127, 1299,
	128, 1299,
	129, 1299,
	131, 1299,
	132, 1299,
	134, 1299,
	135, 1299,
	136, 1299,
	138, 1299,
	139, 1299,
	140, 1299,
	141, 1299,
	142, 1299,
	143, 1299,
	144, 1299,
	145, 1299,
	146, 1299,
	147, 1299,
	148, 1299,
	149, 1299,
	150, 1299,
	151, 1299,
	152, 1299,
	154, 1299,
	160, 1299,
	161, 1299,
	162, 1299,
	163, 1299,
	167, 1299,
	169, 1299,
	173, 1299,
	174, 1299,
	175, 1299,
	176, 1299,
	177, 1299,
	178, 1299,
	180, 1299,
	181, 1299,
	183, 1299,
	184, 1299,
	186, 1299,
	187, 1299,
	188, 1299,
	189, 1299,
	190, 1299,
	191, 1299,
	192, 1299,
	193, 1299,
	194, 1299,
	196, 1299,
	197, 1299,
	199, 1299,
	200, 1299,
	201, 1299,
	202, 1299,
	206, 1299,
	207, 1299,
	208, 1299,
	209, 1299,
	212, 1299,
	213, 1299,
	214, 1299,
	216, 1299,
	218, 1299,
	219, 1299,
	221, 1299,
	223, 1299,
	224, 1299,
	225, 1299,
	227, 1299,
	231, 1299,
	232, 1299,
	233, 1299,
	234, 1299,
	235, 1299,
	236, 1299,
	238, 1299,
	239, 1299,
	240, 1299,
	242, 1299,
	243, 1299,
	245, 1299,
	246, 1299,
	249, 1299,
	250, 1299,
	251, 1299,
	254, 1299,
	255, 1299,
	256, 1299,
	257, 1299,
	259, 1299,
	260, 1299,
	261, 1299,
	262, 1299,
	263, 1299,
	264, 1299,
	265, 1299,
	266, 1299,
	267, 1299,
	268, 1299,
	269, 1299,
	271, 1299,
	273, 1299,
	274, 1299,
	275, 1299,
	276, 1299,
	277, 1299,
	278, 1299,
	280, 1299,
	282, 1299,
	284, 1299,
	286, 1299,
	287, 1299,
	288, 1299,
	289, 1299,
	290, 1299,
	293, 1299,
	296, 1299,
	297, 1299,
	298, 1299,
	299, 1299,
	302, 1299,
	303, 1299,
	304, 1299,
	306, 1299,
	308, 1299,
	309, 1299,
	310, 1299,
	311, 1299,
	312, 1299,
	313, 1299,
	314, 1299,
	315, 1299,
	316, 1299,
	317, 1299,
	318, 1299,
	319, 1299,
	321, 1299,
	322, 1299,
	323, 1299,
	324, 1299,
	325, 1299,
	326, 1299,
	327, 1299,
	328, 1299,
	329, 1299,
	331, 1299,
	333, 1299,
	334, 1299,
	335, 1299,
	336, 1299,
	337, 1299,
	338, 1299,
	339, 1299,
	340, 1299,
	341, 1299,
	342, 1299,
	343, 1299,
	345, 1299,
	351, 1299,
	353, 1299,
	354, 1299,
	355, 1299,
	356, 1299,
	357, 1299,
	358, 1299,
	359, 1299,
	360, 1299,
	362, 1299,
	363, 1299,
	364, 1299,
	366, 1299,
	367, 1299,
	368, 1299,
	369, 1299,
	370, 1299,
	371, 1299,
	373, 1299,
	374, 1299,
	375, 1299,
	376, 1299,
	377, 1299,
	378, 1299,
	379, 1299,
	380, 1299,
	381, 1299,
	382, 1299,
	383, 1299,
	385, 1299,
	386, 1299,
	387, 1299,
	388, 1299,
	389, 1299,
	390, 1299,
	392, 1299,
	393, 1299,
	394, 1299,
	395, 1299,
	396, 1299,
	398, 1299,
	399, 1299,
	400, 1299,
	401, 1299,
	402, 1299,
	403, 1299,
	404, 1299,
	406, 1299,
	408, 1299,
	409, 1299,
	410, 1299,
	411, 1299,
	412, 1299,
	413, 1299,
	414, 1299,
	415, 1299,
	416, 1299,
	417, 1299,
	418, 1299,
	419, 1299,
	420, 1299,
	422, 1299,
	423, 1299,
	425, 1299,
	427, 1299,
	428, 1299,
	429, 1299,
	430, 1299,
	431, 1299,
	432, 1299,
	433, 1299,
	434, 1299,
	436, 1299,
	437, 1299,
	438, 1299,
	439, 1299,
	440, 1299,
	442, 1299,
	444, 1299,
	445, 1299,
	446, 1299,
	447, 1299,
	448, 1299,
	450, 1299,
	451, 1299,
	452, 1299,
	454, 1299,
	455, 1299,
	458, 1299,
	459, 1299,
	460, 1299,
	461, 1299,
	462, 1299,
	463, 1299,
	464, 1299,
	466, 1299,
	469, 1299,
	470, 1299,
	471, 1299,
	472, 1299,
	473, 1299,
	474, 1299,
	476, 1299,
	477, 1299,
	478, 1299,
	483, 1299,
	484, 1299,
	485, 1299,
	486, 1299,
	487, 1299,
	488, 1299,
	-2, 0,
	-1, 139,
	1, 1173,
	223, 1173,
	331, 1173,
	339, 1173,
	491, 1173,
	515, 1173,
	-2, 0,
	-1, 141,
	1, 1173,
	515, 1173,
	-2, 0,
	-1, 142,
	1, 1173,
	515, 1173,
	-2, 0,
	-1, 143,
	1, 1173,
	441, 1173,
	515, 1173,
	-2, 0,
	-1, 172,
	137, 1267,
	155, 1267,
	168, 1267,
	215, 1267,
	248, 1267,
	291, 1267,
	301, 1267,
	456, 1267,
	-2, 1242,
	-1, 208,
	4, 1306,
	5, 1306,
	6, 1306,
	7, 1306,
	8, 1306,
	9, 1306,
	10, 1306,
	21, 1306,
	22, 1306,
	23, 1306,
	24, 1306,
	25, 1306,
	26, 1306,
	28, 1306,
	29, 1306,
	35, 1306,
	36, 1306,
	40, 1306,
	41, 1306,
	42, 1306,
	43, 1306,
	44, 1306,
	45, 1306,
	46, 1306,
	47, 1306,
	48, 1306,
	50, 1306,
	51, 1306,
	52, 1306,
	53, 1306,
	55, 1306,
	56, 1306,
	57, 1306,
	58, 1306,
	59, 1306,
	60, 1306,
	61, 1306,
	62, 1306,
	63, 1306,
	64, 1306,
	65, 1306,
	66, 1306,
	67, 1306,
	69, 1306,
	70, 1306,
	71, 1306,
	73, 1306,
	75, 1306,
	76, 1306,
	77, 1306,
	78, 1306,
	79, 1306,
	80, 1306,
	81, 1306,
	84, 1306,
	85, 1306,
	86, 1306,
	87, 1306,
	89, 1306,
	91, 1306,
	92, 1306,
	93, 1306,
	95, 1306,
	96, 1306,
	97, 1306,
	98, 1306,
	99, 1306,
	100, 1306,
	101, 1306,
	102, 1306,
	103, 1306,
	104, 1306,
	105, 1306,
	106, 1306,
	107, 1306,
	108, 1306,
	109, 1306,
	110, 1306,
	111, 1306,
	112, 1306,
	113, 1306,
	114, 1306,
	115, 1306,
	116, 1306,
	117, 1306,
	119, 1306,
	120, 1306,
	122, 1306,
	123, 1306,
	124, 1306,
	127, 1306,
	128, 1306,
	129, 1306,
	131, 1306,
	132, 1306,
	134, 1306,
	135, 1306,
	136, 1306,
	138, 1306,
	139, 1306,
	140, 1306,
	141, 1306,
	142, 1306,
	143, 1306,
	144, 1306,
	145, 1306,
	146, 1306,
	147, 1306,
	148, 1306,
	149, 1306,
	150, 1306,
	151, 1306,
	152, 1306,
	153, 1306,
	154, 1306,
	160, 1306,
	161, 1306,
	162, 1306,
	163, 1306,
	167, 1306,
	169, 1306,
	172, 1306,
	173, 1306,
	174, 1306,
	175, 1306,
	176, 1306,
	177, 1306,
	178, 1306,
	180, 1306,
	181, 1306,
	183, 1306,
	184, 1306,
	186, 1306,
	187, 1306,
	188, 1306,
	189, 1306,
	190, 1306,
	191, 1306,
	192, 1306,
	193, 1306,
	194, 1306,
	195, 1306,
	196, 1306,
	197, 1306,
	199, 1306,
	200, 1306,
	201, 1306,
	202, 1306,
	206, 1306,
	207, 1306,
	208, 1306,
	209, 1306,
	211, 1306,
	212, 1306,
	213, 1306,
	214, 1306,
	216, 1306,
	218, 1306,
	219, 1306,
	220, 1306,
	221, 1306,
	222, 1306,
	223, 1306,
	224, 1306,
	225, 1306,
	226, 1306,
	227, 1306,
	231, 1306,
	232, 1306,
	233, 1306,
	234, 1306,
	235, 1306,
	236, 1306,
	238, 1306,
	239, 1306,
	240, 1306,
	242, 1306,
	243, 1306,
	244, 1306,
	245, 1306,
	246, 1306,
	247, 1306,
	249, 1306,
	250, 1306,
	251, 1306,
	252, 1306,
	253, 1306,
	254, 1306,
	255, 1306,
	256, 1306,
	257, 1306,
	259, 1306,
	260, 1306,
	261, 1306,
	262, 1306,
	263, 1306,
	264, 1306,
	265, 1306,
	266, 1306,
	267, 1306,
	268, 1306,
	269, 1306,
	271, 1306,
	272, 1306,
	273, 1306,
	274, 1306,
	275, 1306,
	276, 1306,
	277, 1306,
	278, 1306,
	279, 1306,
	280, 1306,
	281, 1306,
	282, 1306,
	283, 1306,
	284, 1306,
	285, 1306,
	286, 1306,
	287, 1306,
	288, 1306,
	289, 1306,
	290, 1306,
	293, 1306,
	297, 1306,
	298, 1306,
	299, 1306,
	302, 1306,
	303, 1306,
	304, 1306,
	305, 1306,
	306, 1306,
	307, 1306,
	308, 1306,
	309, 1306,
	310, 1306,
	311, 1306,
	312, 1306,
	313, 1306,
	314, 1306,
	315, 1306,
	316, 1306,
	317, 1306,
	318, 1306,
	319, 1306,
	321, 1306,
	322, 1306,
	323, 1306,
	324, 1306,
	325, 1306,
	326, 1306,
	327, 1306,
	328, 1306,
	329, 1306,
	331, 1306,
	333, 1306,
	334, 1306,
	335, 1306,
	336, 1306,
	337, 1306,
	338, 1306,
	339, 1306,
	340, 1306,
	341, 1306,
	342, 1306,
	343, 1306,
	345, 1306,
	351, 1306,
	353, 1306,
	354, 1306,
	355, 1306,
	356, 1306,
	357, 1306,
	358, 1306,
	359, 1306,
	360, 1306,
	362, 1306,
	363, 1306,
	364, 1306,
	365, 1306,
	366, 1306,
	367, 1306,
	368, 1306,
	369, 1306,
	370, 1306,
	371, 1306,
	373, 1306,
	374, 1306,
	375, 1306,
	376, 1306,
	377, 1306,
	378, 1306,
	379, 1306,
	380, 1306,
	381, 1306,
	382, 1306,
	383, 1306,
	385, 1306,
	386, 1306,
	387, 1306,
	388, 1306,
	389, 1306,
	390, 1306,
	391, 1306,
	392, 1306,
	393, 1306,
	394, 1306,
	395, 1306,
	396, 1306,
	397, 1306,
	398, 1306,
	399, 1306,
	400, 1306,
	401, 1306,
	402, 1306,
	403, 1306,
	404, 1306,
	406, 1306,
	408, 1306,
	409, 1306,
	410, 1306,
	411, 1306,
	412, 1306,
	413, 1306,
	414, 1306,
	415, 1306,
	416, 1306,
	417, 1306,
	418, 1306,
	419, 1306,
	420, 1306,
	422, 1306,
	423, 1306,
	424, 1306,
	425, 1306,
	427, 1306,
	428, 1306,
	429, 1306,
	430, 1306,
	431, 1306,
	432, 1306,
	433, 1306,
	434, 1306,
	436, 1306,
	437, 1306,
	438, 1306,
	439, 1306,
	440, 1306,
	442, 1306,
	444, 1306,
	445, 1306,
	446, 1306,
	447, 1306,
	448, 1306,
	449, 1306,
	450, 1306,
	451, 1306,
	452, 1306,
	454, 1306,
	455, 1306,
	457, 1306,
	458, 1306,
	459, 1306,
	460, 1306,
	461, 1306,
	462, 1306,
	463, 1306,
	464, 1306,
	465, 1306,
	466, 1306,
	469, 1306,
	470, 1306,
	471, 1306,
	472, 1306,
	473, 1306,
	474, 1306,
	476, 1306,
	477, 1306,
	478, 1306,
	483, 1306,
	484, 1306,
	485, 1306,
	486, 1306,
	487, 1306,
	488, 1306,
	489, 1306,
	496, 1306,
	503, 1306,
	504, 1306,
	505, 1306,
	512, 1306,
	516, 1306,
	-2, 0,
	-1, 622,
	171, 2014,
	441, 2014,
	495, 2014,
	514, 2014,
	-2, 0,
	-1, 623,
	171, 2101,
	441, 2101,
	495, 2101,
	514, 2101,
	-2, 0,
	-1, 624,
	171, 2002,
	441, 2002,
	495, 2002,
	514, 2002,
	-2, 0,
	-1, 626,
	171, 2200,
	441, 2200,
	495, 2200,
	514, 2200,
	-2, 0,
	-1, 628,
	171, 2234,
	441, 2234,
	495, 2234,
	514, 2234,
	-2, 0,
	-1, 635,
	171, 2116,
	441, 2116,
	495, 2116,
	514, 2116,
	-2, 606,
	-1, 665,
	514, 1954,
	517, 1954,
	-2, 841,
	-1, 666,
	514, 1956,
	517, 1956,
	-2, 842,
	-1, 667,
	514, 1955,
	517, 1955,
	-2, 843,
	-1, 668,
	517, 1889,
	-2, 844,
	-1, 690,
	168, 208,
	-2, 0,
	-1, 712,
	476, 1082,
	-2, 903,
	-1, 751,
	4, 1103,
	21, 1103,
	22, 1103,
	23, 1103,
	24, 1103,
	25, 1103,
	26, 1103,
	28, 1103,
	29, 1103,
	35, 1103,
	40, 1103,
	41, 1103,
	42, 1103,
	43, 1103,
	44, 1103,
	45, 1103,
	46, 1103,
	47, 1103,
	48, 1103,
	50, 1103,
	51, 1103,
	52, 1103,
	53, 1103,
	55, 1103,
	56, 1103,
	57, 1103,
	58, 1103,
	59, 1103,
	60, 1103,
	64, 1103,
	65, 1103,
	66, 1103,
	67, 1103,
	69, 1103,
	70, 1103,
	71, 1103,
	75, 1103,
	76, 1103,
	77, 1103,
	78, 1103,
	79, 1103,
	80, 1103,
	81, 1103,
	84, 1103,
	85, 1103,
	86, 1103,
	87, 1103,
	89, 1103,
	91, 1103,
	92, 1103,
	93, 1103,
	95, 1103,
	97, 1103,
	98, 1103,
	106, 1103,
	107, 1103,
	108, 1103,
	109, 1103,
	111, 1103,
	112, 1103,
	113, 1103,
	115, 1103,
	116, 1103,
	117, 1103,
	119, 1103,
	120, 1103,
	122, 1103,
	123, 1103,
	124, 1103,
	127, 1103,
	128, 1103,
	129, 1103,
	131, 1103,
	132, 1103,
	134, 1103,
	135, 1103,
	136, 1103,
	138, 1103,
	139, 1103,
	140, 1103,
	141, 1103,
	142, 1103,
	143, 1103,
	144, 1103,
	145, 1103,
	146, 1103,
	147, 1103,
	148, 1103,
	149, 1103,
	150, 1103,
	151, 1103,
	152, 1103,
	154, 1103,
	160, 1103,
	161, 1103,
	162, 1103,
	163, 1103,
	167, 1103,
	169, 1103,
	173, 1103,
	174, 1103,
	175, 1103,
	176, 1103,
	177, 1103,
	178, 1103,
	180, 1103,
	181, 1103,
	183, 1103,
	184, 1103,
	186, 1103,
	187, 1103,
	188, 1103,
	189, 1103,
	190, 1103,
	191, 1103,
	192, 1103,
	193, 1103,
	194, 1103,
	196, 1103,
	197, 1103,
	199, 1103,
	200, 1103,
	201, 1103,
	202, 1103,
	206, 1103,
	207, 1103,
	208, 1103,
	209, 1103,
	212, 1103,
	213, 1103,
	214, 1103,
	216, 1103,
	218, 1103,
	219, 1103,
	221, 1103,
	223, 1103,
	224, 1103,
	225, 1103,
	227, 1103,
	231, 1103,
	232, 1103,
	233, 1103,
	234, 1103,
	235, 1103,
	236, 1103,
	238, 1103,
	239, 1103,
	240, 1103,
	242, 1103,
	243, 1103,
	245, 1103,
	246, 1103,
	249, 1103,
	250, 1103,
	251, 1103,
	254, 1103,
	255, 1103,
	256, 1103,
	257, 1103,
	259, 1103,
	260, 1103,
	261, 1103,
	262, 1103,
	263, 1103,
	264, 1103,
	265, 1103,
	266, 1103,
	267, 1103,
	268, 1103,
	269, 1103,
	271, 1103,
	273, 1103,
	274, 1103,
	275, 1103,
	276, 1103,
	277, 1103,
	278, 1103,
	280, 1103,
	282, 1103,
	284, 1103,
	286, 1103,
	287, 1103,
	288, 1103,
	289, 1103,
	290, 1103,
	293, 1103,
	297, 1103,
	298, 1103,
	299, 1103,
	302, 1103,
	303, 1103,
	304, 1103,
	306, 1103,
	308, 1103,
	309, 1103,
	310, 1103,
	311, 1103,
	312, 1103,
	313, 1103,
	314, 1103,
	315, 1103,
	316, 1103,
	317, 1103,
	318, 1103,
	319, 1103,
	321, 1103,
	322, 1103,
	323, 1103,
	324, 1103,
	325, 1103,
	326, 1103,
	327, 1103,
	328, 1103,
	329, 1103,
	331, 1103,
	333, 1103,
	334, 1103,
	335, 1103,
	336, 1103,
	337, 1103,
	338, 1103,
	339, 1103,
	340, 1103,
	341, 1103,
	342, 1103,
	343, 1103,
	345, 1103,
	351, 1103,
	353, 1103,
	354, 1103,
	355, 1103,
	356, 1103,
	357, 1103,
	358, 1103,
	359, 1103,
	360, 1103,
	362, 1103,
	363, 1103,
	364, 1103,
	366, 1103,
	367, 1103,
	368, 1103,
	369, 1103,
	370, 1103,
	371, 1103,
	373, 1103,
	374, 1103,
	375, 1103,
	376, 1103,
	377, 1103,
	378, 1103,
	379, 1103,
	380, 1103,
	381, 1103,
	382, 1103,
	383, 1103,
	385, 1103,
	386, 1103,
	387, 1103,
	388, 1103,
	389, 1103,
	390, 1103,
	392, 1103,
	393, 1103,
	394, 1103,
	395, 1103,
	396, 1103,
	398, 1103,
	399, 1103,
	400, 1103,
	401, 1103,
	402, 1103,
	403, 1103,
	404, 1103,
	406, 1103,
	408, 1103,
	409, 1103,
	410, 1103,
	411, 1103,
	412, 1103,
	413, 1103,
	414, 1103,
	415, 1103,
	416, 1103,
	417, 1103,
	418, 1103,
	419, 1103,
	420, 1103,
	422, 1103,
	423, 1103,
	425, 1103,
	427, 1103,
	428, 1103,
	429, 1103,
	430, 1103,
	431, 1103,
	432, 1103,
	433, 1103,
	434, 1103,
	436, 1103,
	437, 1103,
	438, 1103,
	439, 1103,
	440, 1103,
	442, 1103,
	444, 1103,
	445, 1103,
	446, 1103,
	447, 1103,
	448, 1103,
	450, 1103,
	451, 1103,
	452, 1103,
	454, 1103,
	455, 1103,
	458, 1103,
	459, 1103,
	460, 1103,
	461, 1103,
	462, 1103,
	463, 1103,
	464, 1103,
	466, 1103,
	469, 1103,
	470, 1103,
	471, 1103,
	472, 1103,
	473, 1103,
	474, 1103,
	476, 1103,
	477, 1103,
	478, 1103,
	483, 1103,
	484, 1103,
	485, 1103,
	486, 1103,
	487, 1103,
	488, 1103,
	-2, 0,
	-1, 829,
	335, 757,
	390, 757,
	-2, 0,
	-1, 830,
	335, 756,
	390, 756,
	-2, 702,
	-1, 834,
	1, 797,
	511, 797,
	513, 797,
	515, 797,
	-2, 0,
	-1, 835,
	1, 735,
	511, 735,
	513, 735,
	515, 735,
	-2, 0,
	-1, 836,
	1, 840,
	168, 840,
	511, 840,
	513, 840,
	515, 840,
	-2, 0,
	-1, 844,
	1, 760,
	511, 760,
	513, 760,
	515, 760,
	-2, 0,
	-1, 850,
	1, 797,
	511, 797,
	513, 797,
	515, 797,
	-2, 0,
	-1, 851,
	1, 799,
	511, 799,
	513, 799,
	515, 799,
	-2, 0,
	-1, 852,
	1, 802,
	511, 802,
	513, 802,
	515, 802,
	-2, 0,
	-1, 858,
	1, 819,
	511, 819,
	513, 819,
	515, 819,
	-2, 0,
	-1, 859,
	1, 821,
	511, 821,
	513, 821,
	515, 821,
	-2, 0,
	-1, 908,
	155, 1308,
	168, 1308,
	248, 1308,
	291, 1308,
	-2, 1246,
	-1, 923,
	155, 1307,
	168, 1307,
	248, 1307,
	291, 1307,
	-2, 1243,
	-1, 949,
	514, 1953,
	-2, 614,
	-1, 977,
	5, 1945,
	512, 1943,
	-2, 1934,
	-1, 985,
	5, 1966,
	512, 1963,
	-2, 1954,
	-1, 986,
	5, 1967,
	512, 1964,
	-2, 1955,
	-1, 994,
	514, 1951,
	-2, 1933,
	-1, 995,
	512, 2313,
	-2, 1952,
	-1, 1018,
	512, 2312,
	-2, 1968,
	-1, 1019,
	5, 1473,
	-2, 2283,
	-1, 1020,
	5, 1474,
	-2, 2284,
	-1, 1021,
	5, 1475,
	-2, 2298,
	-1, 1022,
	5, 1476,
	-2, 2262,
	-1, 1023,
	5, 1477,
	-2, 2296,
	-1, 1024,
	5, 1485,
	-2, 2275,
	-1, 1025,
	5, 1472,
	-2, 2271,
	-1, 1026,
	5, 1472,
	-2, 2270,
	-1, 1027,
	5, 1472,
	-2, 2289,
	-1, 1028,
	5, 1483,
	-2, 2264,
	-1, 1029,
	5, 1488,
	-2, 2263,
	-1, 1030,
	5, 1490,
	-2, 2308,
	-1, 1033,
	5, 1512,
	-2, 2301,
	-1, 1034,
	5, 1504,
	-2, 2302,
	-1, 1035,
	5, 1512,
	-2, 2303,
	-1, 1036,
	5, 1508,
	-2, 2304,
	-1, 1037,
	5, 1458,
	-2, 2276,
	-1, 1038,
	5, 1459,
	-2, 2277,
	-1, 1039,
	5, 1460,
	-2, 2265,
	-1, 1066,
	5, 1495,
	-2, 2309,
	-1, 1067,
	5, 1496,
	-2, 2299,
	-1, 1068,
	5, 1497,
	477, 1497,
	-2, 2266,
	-1, 1069,
	5, 1498,
	477, 1498,
	-2, 2267,
	-1, 1106,
	512, 1963,
	-2, 1954,
	-1, 1107,
	512, 1964,
	-2, 1955,
	-1, 1137,
	171, 2234,
	441, 2234,
	495, 2234,
	514, 2234,
	-2, 0,
	-1, 1140,
	1, 592,
	515, 592,
	-2, 1181,
	-1, 1265,
	353, 1929,
	392, 1929,
	505, 1929,
	-2, 1927,
	-1, 1277,
	516, 1929,
	-2, 1930,
	-1, 1284,
	1, 1079,
	511, 1079,
	513, 1079,
	515, 1079,
	-2, 1295,
	-1, 1337,
	341, 902,
	476, 902,
	-2, 333,
	-1, 1358,
	1, 1079,
	511, 1079,
	513, 1079,
	515, 1079,
	-2, 1295,
	-1, 1365,
	4, 1103,
	21, 1103,
	22, 1103,
	23, 1103,
	24, 1103,
	25, 1103,
	26, 1103,
	28, 1103,
	29, 1103,
	35, 1103,
	40, 1103,
	41, 1103,
	42, 1103,
	43, 1103,
	44, 1103,
	45, 1103,
	46, 1103,
	47, 1103,
	48, 1103,
	50, 1103,
	51, 1103,
	52, 1103,
	53, 1103,
	55, 1103,
	56, 1103,
	57, 1103,
	58, 1103,
	59, 1103,
	60, 1103,
	64, 1103,
	65, 1103,
	66, 1103,
	67, 1103,
	69, 1103,
	70, 1103,
	71, 1103,
	75, 1103,
	76, 1103,
	77, 1103,
	78, 1103,
	79, 1103,
	80, 1103,
	81, 1103,
	84, 1103,
	85, 1103,
	86, 1103,
	87, 1103,
	89, 1103,
	91, 1103,
	92, 1103,
	93, 1103,
	95, 1103,
	97, 1103,
	98, 1103,
	106, 1103,
	107, 1103,
	108, 1103,
	109, 1103,
	111, 1103,
	112, 1103,
	113, 1103,
	115, 1103,
	116, 1103,
	117, 1103,
	119, 1103,
	120, 1103,
	122, 1103,
	123, 1103,
	124, 1103,
	127, 1103,
	128, 1103,
	129, 1103,
	131, 1103,
	132, 1103,
	134, 1103,
	135, 1103,
	136, 1103,
	138, 1103,
	139, 1103,
	140, 1103,
	141, 1103,
	142, 1103,
	143, 1103,
	144, 1103,
	145, 1103,
	146, 1103,
	147, 1103,
	148, 1103,
	149, 1103,
	150, 1103,
	151, 1103,
	152, 1103,
	160, 1103,
	161, 1103,
	162, 1103,
	163, 1103,
	167, 1103,
	169, 1103,
	173, 1103,
	174, 1103,
	175, 1103,
	176, 1103,
	177, 1103,
	178, 1103,
	180, 1103,
	181, 1103,
	183, 1103,
	184, 1103,
	186, 1103,
	187, 1103,
	188, 1103,
	189, 1103,
	190, 1103,
	191, 1103,
	192, 1103,
	193, 1103,
	194, 1103,
	196, 1103,
	197, 1103,
	199, 1103,
	200, 1103,
	201, 1103,
	202, 1103,
	207, 1103,
	208, 1103,
	209, 1103,
	212, 1103,
	213, 1103,
	214, 1103,
	216, 1103,
	218, 1103,
	219, 1103,
	221, 1103,
	223, 1103,
	224, 1103,
	225, 1103,
	227, 1103,
	231, 1103,
	232, 1103,
	233, 1103,
	234, 1103,
	235, 1103,
	236, 1103,
	238, 1103,
	239, 1103,
	240, 1103,
	242, 1103,
	243, 1103,
	245, 1103,
	246, 1103,
	249, 1103,
	250, 1103,
	251, 1103,
	254, 1103,
	255, 1103,
	256, 1103,
	257, 1103,
	259, 1103,
	260, 1103,
	261, 1103,
	262, 1103,
	263, 1103,
	264, 1103,
	265, 1103,
	266, 1103,
	267, 1103,
	268, 1103,
	269, 1103,
	271, 1103,
	273, 1103,
	274, 1103,
	275, 1103,
	276, 1103,
	277, 1103,
	278, 1103,
	280, 1103,
	284, 1103,
	286, 1103,
	287, 1103,
	288, 1103,
	289, 1103,
	290, 1103,
	293, 1103,
	295, 1103,
	297, 1103,
	298, 1103,
	299, 1103,
	302, 1103,
	303, 1103,
	304, 1103,
	306, 1103,
	308, 1103,
	309, 1103,
	310, 1103,
	311, 1103,
	312, 1103,
	313, 1103,
	314, 1103,
	315, 1103,
	316, 1103,
	317, 1103,
	318, 1103,
	319, 1103,
	321, 1103,
	322, 1103,
	323, 1103,
	324, 1103,
	325, 1103,
	326, 1103,
	327, 1103,
	328, 1103,
	329, 1103,
	331, 1103,
	333, 1103,
	334, 1103,
	335, 1103,
	336, 1103,
	337, 1103,
	338, 1103,
	339, 1103,
	340, 1103,
	341, 1103,
	342, 1103,
	343, 1103,
	345, 1103,
	351, 1103,
	353, 1103,
	354, 1103,
	355, 1103,
	356, 1103,
	357, 1103,
	358, 1103,
	359, 1103,
	360, 1103,
	362, 1103,
	363, 1103,
	364, 1103,
	366, 1103,
	367, 1103,
	368, 1103,
	369, 1103,
	370, 1103,
	371, 1103,
	373, 1103,
	374, 1103,
	375, 1103,
	376, 1103,
	377, 1103,
	378, 1103,
	379, 1103,
	380, 1103,
	381, 1103,
	382, 1103,
	383, 1103,
	385, 1103,
	386, 1103,
	387, 1103,
	388, 1103,
	389, 1103,
	390, 1103,
	392, 1103,
	393, 1103,
	394, 1103,
	395, 1103,
	396, 1103,
	398, 1103,
	399, 1103,
	400, 1103,
	401, 1103,
	402, 1103,
	403, 1103,
	404, 1103,
	406, 1103,
	408, 1103,
	409, 1103,
	410, 1103,
	411, 1103,
	412, 1103,
	413, 1103,
	414, 1103,
	415, 1103,
	416, 1103,
	417, 1103,
	418, 1103,
	419, 1103,
	420, 1103,
	422, 1103,
	423, 1103,
	425, 1103,
	427, 1103,
	428, 1103,
	429, 1103,
	430, 1103,
	431, 1103,
	432, 1103,
	433, 1103,
	434, 1103,
	436, 1103,
	437, 1103,
	438, 1103,
	439, 1103,
	440, 1103,
	442, 1103,
	444, 1103,
	445, 1103,
	446, 1103,
	447, 1103,
	448, 1103,
	450, 1103,
	451, 1103,
	452, 1103,
	454, 1103,
	455, 1103,
	458, 1103,
	459, 1103,
	460, 1103,
	461, 1103,
	462, 1103,
	463, 1103,
	464, 1103,
	466, 1103,
	469, 1103,
	470, 1103,
	471, 1103,
	472, 1103,
	473, 1103,
	474, 1103,
	476, 1103,
	477, 1103,
	478, 1103,
	483, 1103,
	484, 1103,
	485, 1103,
	486, 1103,
	487, 1103,
	488, 1103,
	-2, 0,
	-1, 1437,
	1, 469,
	511, 469,
	513, 469,
	515, 469,
	-2, 1266,
	-1, 1440,
	4, 2307,
	11, 2307,
	12, 2307,
	14, 2307,
	15, 2307,
	16, 2307,
	17, 2307,
	18, 2307,
	19, 2307,
	21, 2307,
	22, 2307,
	23, 2307,
	24, 2307,
	25, 2307,
	26, 2307,
	28, 2307,
	29, 2307,
	32, 2307,
	33, 2307,
	35, 2307,
	37, 2307,
	40, 2307,
	41, 2307,
	42, 2307,
	43, 2307,
	44, 2307,
	45, 2307,
	46, 2307,
	47, 2307,
	48, 2307,
	50, 2307,
	51, 2307,
	52, 2307,
	53, 2307,
	55, 2307,
	56, 2307,
	57, 2307,
	58, 2307,
	59, 2307,
	60, 2307,
	64, 2307,
	65, 2307,
	66, 2307,
	67, 2307,
	69, 2307,
	70, 2307,
	71, 2307,
	72, 2307,
	75, 2307,
	76, 2307,
	77, 2307,
	78, 2307,
	79, 2307,
	80, 2307,
	81, 2307,
	82, 2307,
	84, 2307,
	85, 2307,
	86, 2307,
	87, 2307,
	89, 2307,
	90, 2307,
	91, 2307,
	92, 2307,
	93, 2307,
	95, 2307,
	96, 2307,
	97, 2307,
	98, 2307,
	106, 2307,
	107, 2307,
	108, 2307,
	109, 2307,
	111, 2307,
	112, 2307,
	113, 2307,
	115, 2307,
	116, 2307,
	117, 2307,
	119, 2307,
	120, 2307,
	122, 2307,
	123, 2307,
	124, 2307,
	127, 2307,
	128, 2307,
	129, 2307,
	131, 2307,
	132, 2307,
	134, 2307,
	135, 2307,
	136, 2307,
	138, 2307,
	139, 2307,
	140, 2307,
	141, 2307,
	142, 2307,
	143, 2307,
	144, 2307,
	145, 2307,
	146, 2307,
	147, 2307,
	148, 2307,
	149, 2307,
	150, 2307,
	151, 2307,
	152, 2307,
	156, 2307,
	157, 2307,
	158, 2307,
	159, 2307,
	160, 2307,
	161, 2307,
	162, 2307,
	163, 2307,
	166, 2307,
	167, 2307,
	169, 2307,
	172, 2307,
	173, 2307,
	174, 2307,
	175, 2307,
	176, 2307,
	177, 2307,
	178, 2307,
	180, 2307,
	181, 2307,
	183, 2307,
	184, 2307,
	186, 2307,
	187, 2307,
	188, 2307,
	189, 2307,
	190, 2307,
	191, 2307,
	192, 2307,
	193, 2307,
	194, 2307,
	195, 2307,
	196, 2307,
	197, 2307,
	198, 2307,
	199, 2307,
	200, 2307,
	201, 2307,
	202, 2307,
	204, 2307,
	205, 2307,
	207, 2307,
	208, 2307,
	209, 2307,
	211, 2307,
	212, 2307,
	213, 2307,
	214, 2307,
	216, 2307,
	218, 2307,
	219, 2307,
	220, 2307,
	221, 2307,
	222, 2307,
	223, 2307,
	224, 2307,
	225, 2307,
	226, 2307,
	227, 2307,
	229, 2307,
	230, 2307,
	231, 2307,
	232, 2307,
	233, 2307,
	234, 2307,
	235, 2307,
	236, 2307,
	238, 2307,
	239, 2307,
	240, 2307,
	242, 2307,
	243, 2307,
	244, 2307,
	245, 2307,
	246, 2307,
	247, 2307,
	249, 2307,
	250, 2307,
	251, 2307,
	254, 2307,
	255, 2307,
	256, 2307,
	257, 2307,
	258, 2307,
	259, 2307,
	260, 2307,
	261, 2307,
	262, 2307,
	263, 2307,
	264, 2307,
	265, 2307,
	266, 2307,
	267, 2307,
	268, 2307,
	269, 2307,
	271, 2307,
	272, 2307,
	273, 2307,
	274, 2307,
	275, 2307,
	276, 2307,
	277, 2307,
	278, 2307,
	280, 2307,
	283, 2307,
	284, 2307,
	286, 2307,
	287, 2307,
	288, 2307,
	289, 2307,
	290, 2307,
	293, 2307,
	297, 2307,
	298, 2307,
	299, 2307,
	300, 2307,
	302, 2307,
	303, 2307,
	304, 2307,
	306, 2307,
	308, 2307,
	309, 2307,
	310, 2307,
	311, 2307,
	312, 2307,
	313, 2307,
	314, 2307,
	315, 2307,
	316, 2307,
	317, 2307,
	318, 2307,
	319, 2307,
	321, 2307,
	322, 2307,
	323, 2307,
	324, 2307,
	325, 2307,
	326, 2307,
	327, 2307,
	328, 2307,
	329, 2307,
	331, 2307,
	333, 2307,
	334, 2307,
	335, 2307,
	336, 2307,
	337, 2307,
	338, 2307,
	339, 2307,
	340, 2307,
	341, 2307,
	342, 2307,
	343, 2307,
	345, 2307,
	351, 2307,
	352, 2307,
	353, 2307,
	354, 2307,
	355, 2307,
	356, 2307,
	357, 2307,
	358, 2307,
	359, 2307,
	360, 2307,
	362, 2307,
	363, 2307,
	364, 2307,
	365, 2307,
	366, 2307,
	367, 2307,
	368, 2307,
	369, 2307,
	370, 2307,
	371, 2307,
	372, 2307,
	373, 2307,
	374, 2307,
	375, 2307,
	376, 2307,
	377, 2307,
	378, 2307,
	379, 2307,
	380, 2307,
	381, 2307,
	382, 2307,
	383, 2307,
	385, 2307,
	386, 2307,
	387, 2307,
	388, 2307,
	389, 2307,
	390, 2307,
	392, 2307,
	393, 2307,
	394, 2307,
	395, 2307,
	396, 2307,
	397, 2307,
	398, 2307,
	399, 2307,
	400, 2307,
	401, 2307,
	402, 2307,
	403, 2307,
	404, 2307,
	406, 2307,
	408, 2307,
	409, 2307,
	410, 2307,
	411, 2307,
	412, 2307,
	413, 2307,
	414, 2307,
	415, 2307,
	416, 2307,
	417, 2307,
	418, 2307,
	419, 2307,
	420, 2307,
	422, 2307,
	423, 2307,
	425, 2307,
	427, 2307,
	428, 2307,
	429, 2307,
	430, 2307,
	431, 2307,
	432, 2307,
	433, 2307,
	434, 2307,
	436, 2307,
	437, 2307,
	438, 2307,
	439, 2307,
	440, 2307,
	442, 2307,
	444, 2307,
	445, 2307,
	446, 2307,
	447, 2307,
	448, 2307,
	450, 2307,
	451, 2307,
	452, 2307,
	454, 2307,
	455, 2307,
	458, 2307,
	459, 2307,
	460, 2307,
	461, 2307,
	462, 2307,
	463, 2307,
	464, 2307,
	466, 2307,
	469, 2307,
	470, 2307,
	471, 2307,
	472, 2307,
	473, 2307,
	474, 2307,
	476, 2307,
	477, 2307,
	478, 2307,
	483, 2307,
	484, 2307,
	485, 2307,
	486, 2307,
	487, 2307,
	488, 2307,
	489, 2307,
	490, 2307,
	493, 2307,
	494, 2307,
	495, 2307,
	496, 2307,
	497, 2307,
	498, 2307,
	500, 2307,
	501, 2307,
	502, 2307,
	503, 2307,
	504, 2307,
	505, 2307,
	506, 2307,
	507, 2307,
	508, 2307,
	510, 2307,
	513, 2307,
	514, 2307,
	516, 2307,
	517, 2307,
	-2, 0,
	-1, 1445,
	171, 2200,
	441, 2200,
	495, 2200,
	514, 2200,
	-2, 0,
	-1, 1493,
	335, 757,
	390, 757,
	-2, 0,
	-1, 1518,
	1, 752,
	511, 752,
	513, 752,
	515, 752,
	-2, 0,
	-1, 1519,
	1, 788,
	511, 788,
	513, 788,
	515, 788,
	-2, 0,
	-1, 1520,
	1, 759,
	511, 759,
	513, 759,
	515, 759,
	-2, 0,
	-1, 1522,
	1, 763,
	511, 763,
	513, 763,
	515, 763,
	-2, 0,
	-1, 1528,
	1, 770,
	511, 770,
	513, 770,
	515, 770,
	-2, 0,
	-1, 1556,
	1, 2254,
	511, 2254,
	513, 2254,
	514, 2254,
	515, 2254,
	-2, 817,
	-1, 1557,
	1, 2197,
	511, 2197,
	513, 2197,
	514, 2197,
	515, 2197,
	-2, 818,
	-1, 1572,
	1, 1176,
	515, 1176,
	-2, 1181,
	-1, 1575,
	155, 1307,
	168, 1307,
	248, 1307,
	291, 1307,
	-2, 1247,
	-1, 1669,
	137, 1268,
	155, 1268,
	168, 1268,
	215, 1268,
	248, 1268,
	291, 1268,
	301, 1268,
	456, 1268,
	-2, 1673,
	-1, 1729,
	513, 1823,
	-2, 0,
	-1, 1764,
	137, 1268,
	155, 1268,
	168, 1268,
	215, 1268,
	248, 1268,
	291, 1268,
	301, 1268,
	456, 1268,
	-2, 1388,
	-1, 1811,
	512, 1500,
	-2, 1488,
	-1, 1847,
	1, 594,
	515, 594,
	-2, 1181,
	-1, 2073,
	1, 754,
	511, 754,
	513, 754,
	515, 754,
	-2, 0,
	-1, 2074,
	1, 790,
	511, 790,
	513, 790,
	515, 790,
	-2, 0,
	-1, 2104,
	1, 772,
	511, 772,
	513, 772,
	515, 772,
	-2, 0,
	-1, 2150,
	370, 1334,
	371, 1334,
	-2, 1533,
	-1, 2181,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1553,
	-1, 2182,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1554,
	-1, 2183,
	90, 0,
	229, 0,
	230, 0,
	497, 0,
	498, 0,
	-2, 1555,
	-1, 2184,
	90, 0,
	229, 0,
	230, 0,
	497, 0,
	498, 0,
	-2, 1556,
	-1, 2185,
	90, 0,
	229, 0,
	230, 0,
	497, 0,
	498, 0,
	-2, 1557,
	-1, 2186,
	90, 0,
	229, 0,
	230, 0,
	497, 0,
	498, 0,
	-2, 1558,
	-1, 2187,
	90, 0,
	229, 0,
	230, 0,
	497, 0,
	498, 0,
	-2, 1559,
	-1, 2188,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1560,
	-1, 2200,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1572,
	-1, 2201,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1573,
	-1, 2202,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1574,
	-1, 2205,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1579,
	-1, 2211,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1583,
	-1, 2213,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1591,
	-1, 2214,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1592,
	-1, 2215,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1593,
	-1, 2216,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1594,
	-1, 2328,
	5, 1966,
	171, 1834,
	512, 1963,
	-2, 1954,
	-1, 2329,
	171, 1835,
	-2, 2258,
	-1, 2330,
	171, 1836,
	-2, 2115,
	-1, 2331,
	171, 1837,
	-2, 2025,
	-1, 2332,
	171, 1838,
	-2, 2069,
	-1, 2333,
	171, 1839,
	-2, 2110,
	-1, 2334,
	171, 1840,
	-2, 2195,
	-1, 2335,
	171, 1841,
	-2, 1656,
	-1, 2404,
	1, 1389,
	2, 1389,
	96, 1389,
	137, 1389,
	155, 1389,
	168, 1389,
	172, 1389,
	182, 1389,
	185, 1389,
	211, 1389,
	215, 1389,
	226, 1389,
	244, 1389,
	248, 1389,
	272, 1389,
	291, 1389,
	295, 1389,
	301, 1389,
	361, 1389,
	365, 1389,
	456, 1389,
	467, 1389,
	480, 1389,
	481, 1389,
	482, 1389,
	491, 1389,
	511, 1389,
	513, 1389,
	515, 1389,
	517, 1389,
	-2, 1388,
	-1, 2417,
	512, 1935,
	-2, 1949,
	-1, 2419,
	1, 270,
	-2, 1295,
	-1, 2441,
	512, 1499,
	-2, 1489,
	-1, 2558,
	1, 1079,
	511, 1079,
	513, 1079,
	515, 1079,
	-2, 1295,
	-1, 2722,
	296, 1337,
	-2, 2297,
	-1, 2723,
	296, 1338,
	-2, 2181,
	-1, 2727,
	370, 1900,
	371, 1900,
	-2, 1654,
	-1, 2728,
	370, 1904,
	371, 1904,
	-2, 1655,
	-1, 2729,
	370, 1901,
	371, 1901,
	-2, 1654,
	-1, 2730,
	370, 1905,
	371, 1905,
	-2, 1655,
	-1, 2743,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1581,
	-1, 2744,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1585,
	-1, 2750,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1587,
	-1, 2948,
	223, 1181,
	331, 1181,
	339, 1181,
	491, 1181,
	-2, 591,
	-1, 3075,
	1, 1079,
	511, 1079,
	513, 1079,
	515, 1079,
	-2, 1295,
	-1, 3180,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1589,
	-1, 3187,
	220, 0,
	222, 0,
	283, 0,
	-2, 1608,
	-1, 3254,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1637,
	-1, 3255,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1638,
	-1, 3256,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1639,
	-1, 3260,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1643,
	-1, 3261,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1644,
	-1, 3262,
	14, 0,
	15, 0,
	16, 0,
	493, 0,
	494, 0,
	495, 0,
	-2, 1645,
	-1, 3308,
	512, 1936,
	-2, 1950,
	-1, 3432,
	514, 2413,
	-2, 1225,
	-1, 3489,
	220, 0,
	222, 0,
	283, 0,
	-2, 1609,
	-1, 3492,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1612,
	-1, 3493,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1614,
	-1, 3698,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1613,
	-1, 3699,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	195, 0,
	198, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 1615,
	-1, 3710,
	220, 0,
	-2, 1646,
	-1, 3856,
	220, 0,
	-2, 1647,
	-1, 4004,
	47, 0,
	195, 0,
	247, 0,
	397, 0,
	489, 0,
	496, 0,
	-2, 2261,
}

const sqlPrivate = 57344

const sqlLast = 102487

var sqlAct = [...]int{

	242, 3878, 3624, 3061, 4014, 2877, 3899, 3742, 2642, 4111,
	3060, 3973, 4003, 3979, 3472, 3963, 3945, 3745, 3785, 3960,
	4015, 2044, 4016, 3334, 1303, 4061, 2614, 3730, 3860, 3219,
	1110, 2878, 3655, 3650, 3792, 1461, 4002, 933, 2160, 3801,
	3687, 3609, 3424, 2053, 2474, 3638, 3372, 3091, 3558, 2028,
	3823, 2966, 988, 1423, 1798, 2228, 924, 3084, 3660, 3172,
	2535, 1584, 1460, 1287, 2168, 3402, 3385, 3056, 3387, 1899,
	667, 3335, 1799, 3086, 3046, 2360, 1169, 2161, 1428, 633,
	2651, 3715, 2736, 1770, 3136, 2664, 2603, 3138, 2586, 3310,
	2900, 2653, 1842, 2017, 667, 2577, 1099, 2920, 2892, 2860,
	2661, 1262, 3471, 3528, 765, 1501, 2598, 2650, 2644, 2881,
	2600, 2615, 2051, 977, 2476, 234, 1739, 1948, 1947, 1909,
	2270, 1715, 2883, 2165, 2512, 2859, 3861, 2397, 3279, 2241,
	2396, 1677, 1459, 932, 163, 4, 2026, 2549, 2660, 2720,
	236, 662, 3030, 235, 1942, 3786, 1926, 1031, 1933, 2587,
	101, 1270, 1153, 1883, 1886, 1427, 981, 1759, 2225, 2261,
	2378, 2357, 2149, 1572, 1404, 1873, 2132, 3058, 1740, 2130,
	1438, 1420, 1424, 2608, 2927, 1982, 986, 2399, 1414, 2465,
	1356, 668, 669, 599, 2654, 2264, 2272, 1142, 1710, 1090,
	1093, 2386, 1749, 1072, 979, 2368, 2242, 2324, 2314, 1662,
	1585, 172, 2131, 1586, 2133, 615, 2511, 1528, 664, 1981,
	673, 1107, 1436, 676, 1756, 173, 1289, 1380, 739, 1298,
	163, 712, 759, 627, 2003, 585, 1898, 2154, 962, 607,
	602, 42, 1095, 41, 673, 39, 610, 676, 30, 28,
	1070, 26, 1591, 824, 2771, 1309, 842, 1571, 2767, 1599,
	1600, 2019, 1632, 1633, 1634, 1642, 1643, 1644, 3293, 2019,
	3294, 2019, 2019, 4173, 2019, 4167, 2879, 2377, 3101, 3117,
	1635, 1630, 1267, 4153, 928, 4152, 4128, 2377, 1602, 2377,
	3574, 2946, 4126, 4122, 4044, 1648, 3574, 1956, 4045, 928,
	4038, 4036, 4033, 1468, 2377, 2377, 4034, 4030, 2370, 1089,
	4025, 4031, 780, 3100, 1956, 4000, 1126, 3999, 3998, 1956,
	1601, 1956, 2037, 3994, 3993, 3988, 1121, 2037, 2037, 3574,
	1621, 1150, 3986, 3958, 1105, 929, 3574, 3574, 1618, 1599,
	1600, 3939, 3932, 1087, 3931, 2432, 2377, 3926, 2377, 3925,
	3919, 3574, 3892, 3574, 1956, 3858, 3616, 2052, 3840, 2432,
	3837, 1630, 3460, 3834, 1956, 3794, 3762, 3574, 1602, 3795,
	1956, 2531, 3761, 3753, 3752, 909, 1956, 1956, 3574, 3721,
	3700, 3679, 3668, 1956, 2432, 2037, 3117, 2780, 3604, 908,
	1073, 1073, 2377, 2781, 2428, 3117, 1150, 1599, 1600, 37,
	1601, 1076, 1122, 1077, 1624, 1625, 1626, 1627, 3593, 3573,
	1621, 3491, 2377, 3574, 1607, 2432, 3440, 3434, 1618, 1630,
	3133, 3133, 3283, 3400, 2735, 918, 1602, 3401, 923, 1956,
	3303, 3301, 3286, 1521, 3304, 3302, 2377, 3203, 3199, 2377,
	3132, 1956, 2377, 1639, 3133, 3124, 1649, 2876, 3940, 3125,
	3853, 2377, 1629, 1631, 1074, 2871, 2870, 2823, 1601, 2377,
	2377, 2824, 3841, 2037, 3485, 3283, 2832, 2833, 1645, 1311,
	1646, 2821, 2813, 2369, 3649, 2822, 2814, 1616, 1617, 2811,
	3616, 3594, 1956, 2377, 1624, 1625, 1626, 1627, 2782, 2667,
	3460, 3125, 2377, 2037, 1607, 1637, 2526, 2640, 2639, 2449,
	2377, 2040, 2040, 2377, 2431, 1903, 1622, 2464, 2432, 1302,
	2426, 1599, 1600, 208, 2377, 2770, 2420, 2376, 2039, 208,
	1956, 2377, 2040, 2832, 2833, 1853, 2018, 2583, 1955, 2543,
	2462, 1647, 1629, 1631, 1735, 1297, 3364, 3175, 3153, 1757,
	1602, 1936, 1503, 2413, 2267, 3102, 2412, 2411, 1636, 2410,
	2409, 1078, 1607, 1075, 917, 210, 916, 1616, 1617, 915,
	2020, 210, 2832, 2833, 3103, 2850, 2851, 2852, 2020, 914,
	2020, 2020, 1601, 2020, 2700, 1599, 1600, 913, 912, 911,
	907, 906, 905, 3487, 208, 904, 1622, 903, 902, 901,
	1629, 1631, 900, 899, 898, 897, 896, 1630, 895, 1311,
	1628, 209, 894, 893, 1602, 1323, 892, 209, 891, 873,
	822, 202, 821, 820, 819, 818, 817, 202, 816, 203,
	1623, 2838, 2268, 815, 3100, 203, 210, 814, 813, 812,
	1599, 1600, 811, 2847, 810, 3544, 1601, 1122, 809, 808,
	807, 174, 986, 806, 1622, 1640, 986, 174, 805, 86,
	1302, 804, 1454, 803, 2369, 802, 801, 800, 799, 1602,
	3503, 1172, 1122, 798, 797, 1172, 1607, 796, 795, 1292,
	794, 793, 209, 783, 782, 778, 777, 771, 2838, 1152,
	1628, 770, 1146, 1157, 730, 208, 729, 689, 688, 687,
	679, 1601, 986, 678, 986, 677, 986, 2269, 2266, 647,
	1623, 1292, 639, 638, 1284, 637, 621, 230, 229, 228,
	227, 226, 174, 2848, 225, 1273, 3318, 2838, 2628, 224,
	1278, 223, 222, 221, 1292, 220, 2035, 210, 2032, 2018,
	1607, 2125, 219, 218, 217, 216, 1326, 1638, 215, 214,
	213, 1613, 1614, 1620, 1641, 1619, 1615, 212, 1612, 1610,
	1611, 1603, 1604, 1605, 1606, 1608, 1609, 984, 1623, 1358,
	211, 3948, 2297, 3297, 3134, 1301, 1292, 986, 1629, 1631,
	2848, 2853, 1292, 209, 2923, 2394, 1292, 2793, 1265, 1362,
	1364, 1277, 1280, 202, 986, 1607, 986, 1317, 2776, 2874,
	1292, 203, 2564, 2436, 1322, 2418, 986, 1760, 986, 2594,
	2403, 1431, 1140, 2047, 1881, 1783, 2283, 1688, 1310, 2848,
	2875, 1447, 2281, 174, 1305, 208, 2271, 1159, 1311, 1109,
	1598, 673, 1622, 1281, 676, 1619, 1615, 2849, 1612, 1610,
	1611, 1603, 1604, 1605, 1606, 1608, 1609, 1718, 2611, 1292,
	1718, 1280, 1280, 1717, 4021, 4001, 1717, 3906, 3850, 1165,
	1679, 1259, 1264, 3714, 3669, 3740, 986, 210, 3844, 986,
	1135, 3648, 1300, 1299, 3842, 1721, 3862, 3551, 1716, 1679,
	3526, 3664, 3525, 3519, 1485, 3518, 3517, 1352, 3510, 1280,
	2046, 3509, 2832, 2833, 2849, 208, 1612, 1610, 1611, 1603,
	1604, 1605, 1606, 1608, 1609, 3507, 3502, 136, 3499, 3405,
	3498, 3399, 3322, 209, 1473, 3321, 163, 163, 1441, 1443,
	1523, 3320, 3307, 202, 3274, 3273, 3272, 1472, 3195, 3191,
	2265, 203, 929, 2849, 1408, 1411, 2918, 210, 3128, 2867,
	2858, 1146, 1686, 2831, 1146, 3362, 1623, 2828, 2827, 2832,
	2833, 2825, 2820, 174, 1086, 2445, 1994, 2819, 2818, 986,
	986, 986, 986, 986, 986, 986, 2841, 2842, 2834, 2835,
	2836, 2837, 2839, 2840, 2815, 2812, 1537, 2792, 1102, 2775,
	760, 2768, 2641, 209, 1311, 1576, 1316, 2404, 2254, 1598,
	986, 1597, 1963, 202, 4166, 1961, 986, 208, 1439, 3406,
	1680, 203, 1678, 4120, 4119, 4054, 68, 4052, 763, 762,
	4043, 1367, 2596, 1603, 1604, 1605, 1606, 1608, 1609, 1111,
	3221, 2237, 69, 174, 2842, 2834, 2835, 2836, 2837, 2839,
	2840, 3898, 3888, 3885, 1150, 3884, 3883, 73, 3877, 210,
	1453, 3870, 3838, 3822, 208, 1417, 3821, 2838, 1383, 2231,
	3809, 2872, 1467, 3806, 2844, 2845, 2846, 3758, 3736, 2832,
	2833, 2843, 2841, 2842, 2834, 2835, 2836, 2837, 2839, 2840,
	3712, 1668, 79, 3725, 3695, 1610, 1611, 1603, 1604, 1605,
	1606, 1608, 1609, 3694, 1570, 209, 210, 1458, 1435, 1478,
	2832, 2833, 1308, 931, 1315, 202, 1321, 1494, 3663, 3676,
	986, 986, 986, 203, 2838, 3675, 986, 85, 3641, 3617,
	1524, 3543, 3524, 1107, 3461, 1107, 3455, 3452, 208, 3352,
	3351, 100, 3338, 3337, 1737, 174, 86, 97, 3406, 3289,
	1172, 3277, 209, 3186, 1605, 1606, 1608, 1609, 986, 2848,
	929, 667, 202, 1666, 3135, 1816, 667, 1581, 1573, 1580,
	203, 3118, 3077, 3019, 909, 986, 1786, 2994, 2969, 1292,
	210, 2968, 2941, 2939, 3644, 2915, 1795, 1434, 908, 2797,
	2796, 1840, 174, 1575, 986, 87, 2791, 1720, 2759, 208,
	1172, 1746, 2497, 1577, 1452, 1791, 1457, 2595, 2576, 1594,
	1595, 1724, 1723, 1722, 1599, 1600, 1466, 1810, 1471, 1719,
	208, 1146, 1711, 1709, 2443, 2442, 209, 2415, 2408, 2375,
	2279, 1879, 1782, 1793, 2838, 1738, 202, 1743, 1744, 1733,
	1732, 210, 1850, 1602, 203, 1731, 1105, 1730, 1105, 1729,
	1845, 2048, 1844, 1728, 1727, 1712, 1713, 1767, 1726, 1725,
	1706, 1705, 210, 1704, 2969, 2838, 2610, 1703, 1790, 1702,
	163, 1277, 1701, 2849, 1522, 1601, 1700, 1699, 1698, 1697,
	1696, 1695, 1694, 1693, 1692, 929, 1681, 209, 1667, 1073,
	1665, 1660, 1134, 1768, 1124, 1117, 3547, 202, 3495, 3317,
	3300, 673, 3292, 2296, 676, 203, 673, 2779, 209, 676,
	2434, 1789, 1813, 2406, 3549, 90, 1870, 3316, 202, 1680,
	2832, 2833, 2937, 1663, 1778, 1765, 203, 174, 4117, 208,
	2832, 2833, 4110, 1872, 1156, 1493, 1292, 1292, 3886, 3087,
	3797, 1847, 3796, 3596, 208, 1758, 1172, 2282, 174, 3667,
	3619, 1892, 1736, 2280, 3618, 171, 93, 2848, 96, 1804,
	3595, 3546, 2997, 3464, 1872, 1762, 1872, 3802, 1777, 1794,
	1776, 210, 1775, 3845, 1839, 1773, 1772, 1923, 1771, 3843,
	1925, 3463, 208, 1930, 1701, 3462, 210, 1701, 1155, 3295,
	764, 2847, 3120, 1796, 136, 3739, 1760, 3119, 1951, 1953,
	1568, 2843, 2841, 2842, 2834, 2835, 2836, 2837, 2839, 2840,
	2817, 2816, 1903, 3409, 2741, 2516, 1150, 209, 2499, 1875,
	1865, 1151, 1150, 1859, 210, 1787, 1154, 202, 1718, 3350,
	1690, 1502, 209, 889, 1717, 203, 3063, 4149, 3062, 1538,
	4022, 2045, 202, 3793, 4041, 4026, 4013, 3047, 138, 2665,
	203, 1995, 1908, 1503, 2879, 1949, 1170, 174, 3369, 1934,
	1271, 3355, 175, 2836, 2837, 2839, 2840, 3151, 3716, 1687,
	209, 2849, 174, 890, 3223, 2838, 2262, 2441, 673, 1734,
	202, 676, 1714, 1292, 1085, 1292, 3054, 1292, 203, 208,
	208, 2785, 1990, 1361, 1993, 208, 1129, 1986, 4035, 4032,
	4023, 3096, 2540, 1292, 1292, 2537, 3329, 3879, 1147, 3651,
	761, 1989, 3957, 3867, 1292, 2972, 869, 1991, 3345, 1300,
	1299, 2648, 2043, 2607, 3044, 2000, 1774, 1292, 1292, 1292,
	725, 210, 210, 4077, 4078, 3167, 2267, 210, 1431, 2056,
	1929, 1848, 2022, 3778, 1141, 2024, 3584, 2065, 667, 2057,
	2950, 2029, 3918, 1339, 2031, 3382, 1329, 1954, 2034, 1482,
	2450, 1295, 2066, 2067, 2068, 2110, 887, 2848, 2952, 4161,
	1277, 2834, 2835, 2836, 2837, 2839, 2840, 209, 209, 2108,
	3771, 2054, 3764, 209, 1997, 3378, 3377, 202, 202, 885,
	3371, 3368, 883, 202, 2050, 203, 203, 1974, 937, 1973,
	2008, 203, 2834, 2835, 2836, 2837, 2839, 2840, 1536, 881,
	2069, 2468, 3366, 1860, 2268, 3381, 1148, 174, 174, 3326,
	3325, 983, 726, 174, 1149, 2466, 878, 2790, 986, 2789,
	986, 1340, 2002, 929, 2788, 929, 2055, 986, 2010, 2011,
	1816, 1816, 1172, 2006, 986, 986, 986, 986, 986, 986,
	986, 986, 986, 986, 986, 986, 986, 986, 986, 986,
	986, 986, 986, 986, 986, 986, 986, 986, 986, 986,
	986, 986, 986, 986, 986, 986, 986, 986, 986, 1156,
	986, 2849, 986, 986, 986, 986, 2938, 2142, 673, 2269,
	2266, 676, 1810, 1810, 2787, 2041, 1156, 2042, 2129, 1439,
	2745, 1439, 1900, 2124, 986, 2996, 2310, 986, 986, 1135,
	2140, 1609, 2166, 2167, 1383, 986, 2005, 1535, 2005, 986,
	2547, 986, 986, 2223, 2058, 1480, 1972, 2546, 2542, 1172,
	2533, 3917, 2525, 1155, 1896, 986, 986, 986, 986, 2524,
	986, 986, 986, 986, 986, 986, 986, 986, 2503, 2427,
	1155, 2221, 927, 1495, 2138, 2212, 2087, 1574, 1901, 1902,
	2309, 2170, 1147, 2604, 3152, 1147, 986, 986, 986, 986,
	986, 986, 986, 986, 986, 1373, 1150, 1372, 2104, 986,
	3693, 2123, 2243, 2244, 2435, 1296, 1897, 1813, 1813, 2059,
	2063, 1107, 2343, 1347, 1903, 2153, 2243, 2259, 1172, 1864,
	1863, 2457, 2227, 1872, 1874, 1394, 1534, 1107, 2271, 2843,
	2841, 2842, 2834, 2835, 2836, 2837, 2839, 2840, 2136, 2128,
	2126, 2127, 2305, 986, 1172, 2141, 2134, 2840, 2513, 2514,
	926, 1778, 1101, 909, 1804, 1804, 909, 909, 2520, 875,
	2262, 2327, 2327, 2341, 2419, 2243, 3597, 2157, 2361, 2363,
	2158, 2159, 2258, 1335, 2367, 1371, 929, 1370, 2391, 2513,
	2514, 2513, 2514, 2490, 2140, 929, 1475, 2217, 2227, 929,
	1148, 728, 727, 1148, 2139, 4077, 960, 2468, 1149, 2218,
	1102, 1149, 1102, 2219, 2122, 2501, 1567, 2224, 2114, 2235,
	1547, 2466, 1292, 2718, 2077, 2119, 2233, 3991, 2416, 2756,
	3580, 2239, 2539, 2072, 1105, 3011, 3341, 645, 2138, 1867,
	3570, 1503, 2265, 2383, 3747, 1784, 928, 2256, 1114, 1503,
	1105, 2733, 1172, 1491, 2489, 1887, 2949, 2754, 1579, 1767,
	1888, 1133, 2538, 4019, 3158, 2536, 1146, 3004, 2307, 2405,
	2137, 3566, 2007, 2308, 3010, 3559, 2311, 3157, 2312, 2313,
	2382, 1816, 1112, 1073, 2390, 1850, 2395, 929, 4105, 2401,
	2402, 3557, 2080, 2323, 2336, 1882, 2352, 3561, 2697, 2365,
	1530, 163, 1476, 2429, 2271, 1922, 3003, 1172, 3353, 2373,
	2374, 723, 2121, 722, 2384, 2388, 2389, 3567, 1599, 1600,
	2703, 1292, 1720, 1479, 1887, 864, 3367, 1765, 2073, 1888,
	3692, 986, 986, 1810, 986, 644, 4114, 2109, 2470, 879,
	1630, 1869, 1599, 1600, 1921, 1518, 1533, 1602, 922, 597,
	3749, 2107, 1894, 2506, 1481, 2534, 2558, 3560, 2139, 2437,
	1150, 1889, 879, 1150, 1630, 879, 2732, 2448, 1906, 3365,
	2444, 1602, 4106, 2751, 592, 2580, 1868, 2220, 1891, 1601,
	1115, 2478, 880, 2074, 1712, 1713, 2222, 1357, 791, 2752,
	2081, 1932, 2521, 2757, 2593, 2447, 864, 3578, 2505, 879,
	1519, 925, 3354, 1601, 4020, 2541, 1265, 1905, 1292, 1292,
	2451, 1292, 3212, 2550, 1931, 2523, 1551, 1103, 2706, 922,
	2502, 1277, 2618, 1292, 2137, 4121, 2469, 4094, 1813, 865,
	1889, 1355, 1960, 1959, 2559, 2500, 2561, 4093, 2483, 2486,
	1893, 1957, 2473, 2635, 1431, 2118, 1927, 1891, 2453, 2670,
	2671, 3332, 945, 2589, 1393, 2492, 2631, 2425, 2676, 2677,
	2678, 3094, 3209, 2455, 2662, 4108, 673, 2504, 3936, 676,
	1901, 1902, 986, 1607, 3093, 1804, 1903, 784, 4131, 2686,
	2522, 2687, 4066, 2481, 3562, 2666, 1337, 2636, 3563, 4018,
	2627, 3477, 2515, 2517, 2518, 2519, 2456, 1607, 1928, 3342,
	865, 2684, 1334, 920, 3476, 864, 3880, 1300, 2562, 1893,
	3894, 1629, 1631, 2209, 2747, 2454, 986, 4144, 1280, 1280,
	1946, 2647, 986, 986, 2574, 2951, 2705, 3093, 922, 2584,
	1357, 2271, 2120, 3565, 3579, 1629, 1631, 3210, 2668, 2708,
	1545, 2710, 2672, 163, 2673, 2637, 1894, 3568, 2602, 2702,
	2613, 4112, 646, 2753, 2681, 643, 2624, 2620, 2625, 2019,
	2626, 2633, 2755, 1945, 2688, 1622, 2690, 1277, 2692, 772,
	3748, 921, 1894, 2552, 2467, 2632, 758, 986, 986, 2634,
	2226, 2638, 2983, 986, 2468, 2989, 2649, 2701, 3633, 1622,
	2725, 2726, 866, 876, 2551, 2553, 986, 986, 2484, 2234,
	1113, 1707, 986, 986, 3390, 1277, 2935, 1277, 986, 865,
	2079, 3022, 1894, 3388, 2985, 1894, 2076, 986, 986, 986,
	1477, 3934, 3832, 986, 2990, 2071, 4107, 1439, 1876, 1877,
	1546, 2982, 4087, 986, 2556, 4113, 2748, 1548, 2704, 3473,
	4065, 3689, 4047, 2480, 1490, 1492, 2987, 3705, 2778, 1578,
	986, 4048, 1132, 3968, 2955, 3935, 2271, 3897, 2496, 2724,
	3564, 2207, 1659, 866, 2210, 2715, 2253, 2714, 4115, 593,
	2387, 2769, 3824, 2630, 2795, 4132, 2400, 928, 2719, 1623,
	3225, 2153, 4142, 3643, 3825, 2713, 1910, 3467, 3390, 2530,
	1506, 2734, 3313, 2773, 2774, 3571, 1127, 3388, 2777, 785,
	786, 2986, 1890, 1623, 3478, 792, 3169, 1914, 2716, 3263,
	3826, 3900, 867, 2206, 3391, 4017, 986, 986, 986, 2565,
	4076, 4074, 2568, 2683, 2570, 986, 986, 986, 3914, 3404,
	986, 3570, 2689, 594, 2691, 3808, 2693, 2169, 2746, 3422,
	986, 1107, 1172, 1924, 3080, 1549, 986, 1980, 986, 2886,
	2887, 1745, 929, 1125, 1120, 1911, 1107, 584, 868, 3688,
	1589, 3522, 3566, 2609, 3634, 2711, 2609, 3474, 2156, 3828,
	2479, 1890, 866, 1904, 1172, 595, 1861, 596, 1588, 3173,
	3386, 3755, 3754, 867, 3146, 3827, 1107, 2557, 2928, 1172,
	2784, 773, 774, 3139, 4137, 3866, 3734, 3583, 3391, 4064,
	2908, 3423, 3829, 1816, 3582, 2869, 3375, 1172, 3567, 1611,
	1603, 1604, 1605, 1606, 1608, 1609, 4145, 3328, 3081, 986,
	1937, 2888, 2933, 3074, 2274, 1944, 1550, 2964, 2960, 868,
	2588, 2578, 2001, 986, 1603, 1604, 1605, 1606, 1608, 1609,
	2485, 2945, 1992, 2922, 3389, 1816, 2898, 1985, 3208, 1968,
	1915, 4046, 787, 788, 1105, 1810, 2947, 2507, 2020, 3901,
	2694, 986, 2917, 2208, 1146, 3264, 3278, 620, 1102, 1105,
	2953, 1587, 3690, 3265, 2146, 2936, 3946, 1588, 2896, 3141,
	2956, 2957, 2921, 2115, 1102, 3170, 2864, 2865, 2866, 1854,
	919, 2897, 867, 3425, 3140, 3656, 2906, 1810, 2973, 1105,
	3479, 2977, 2909, 2910, 1172, 2914, 2974, 2926, 2880, 2979,
	2980, 1916, 1917, 1292, 1589, 2895, 1588, 2965, 1292, 2417,
	2575, 2999, 1396, 2961, 1912, 3523, 1943, 1292, 3389, 1583,
	3791, 1292, 2912, 1858, 2913, 1172, 1659, 3789, 868, 3735,
	680, 2975, 667, 2064, 775, 776, 2907, 2902, 2971, 2970,
	1813, 2739, 3025, 1292, 2717, 3028, 3291, 2891, 1913, 3036,
	3038, 2890, 3042, 1292, 3020, 4136, 3002, 2930, 2931, 2932,
	1587, 3581, 1520, 3068, 3480, 3562, 3031, 2424, 1107, 3563,
	1892, 3031, 3089, 1507, 2948, 2423, 2147, 1277, 3069, 2954,
	3073, 3059, 1813, 3048, 1790, 2959, 3013, 1804, 3075, 2942,
	2943, 2422, 2944, 1856, 2421, 3395, 3830, 1365, 1892, 1587,
	1989, 3831, 2582, 2508, 2509, 926, 2988, 2463, 1292, 1292,
	1366, 1379, 2995, 1377, 3565, 2662, 1857, 3902, 3001, 2379,
	2903, 3098, 3873, 3116, 2662, 3625, 3129, 3006, 3568, 1804,
	1292, 3009, 1934, 790, 1101, 3015, 1101, 3045, 3109, 3012,
	1934, 3021, 1589, 3122, 3123, 1999, 3041, 3743, 3034, 1918,
	3040, 3142, 3143, 3144, 3145, 3050, 4084, 3029, 2929, 3787,
	2669, 3673, 3039, 1172, 2560, 3146, 1172, 2505, 2901, 3082,
	3949, 3874, 673, 3052, 3139, 676, 3023, 3090, 3106, 3107,
	3108, 1105, 3954, 3007, 3111, 3529, 3112, 3008, 3113, 2381,
	3732, 3943, 3280, 2905, 2380, 2278, 986, 1940, 3972, 1565,
	2862, 3071, 986, 986, 1277, 1277, 986, 986, 986, 3095,
	986, 1563, 1748, 2106, 3147, 619, 3164, 1919, 3104, 986,
	1816, 929, 3672, 3127, 1542, 1540, 3110, 3733, 986, 4086,
	3131, 986, 4037, 163, 163, 3114, 3115, 1172, 3887, 3744,
	1938, 3564, 3163, 3711, 3521, 3394, 986, 3950, 3875, 2861,
	3097, 3185, 681, 682, 1172, 3154, 1517, 3155, 3014, 3156,
	3141, 3149, 3148, 1515, 1816, 1816, 986, 986, 1513, 986,
	986, 986, 1810, 3171, 3188, 3140, 3571, 2904, 1511, 1939,
	1509, 1500, 1277, 1498, 1375, 2826, 2758, 986, 1752, 3197,
	3198, 986, 2579, 1816, 1816, 986, 986, 986, 986, 986,
	986, 986, 986, 986, 986, 986, 986, 986, 986, 986,
	986, 986, 986, 986, 3160, 986, 1810, 1810, 2532, 3168,
	1752, 2498, 986, 986, 1816, 3166, 1378, 1755, 1376, 986,
	2322, 2318, 2446, 1785, 1781, 1566, 2166, 3228, 3088, 1463,
	986, 3137, 1750, 2991, 2992, 1810, 1810, 2993, 789, 3165,
	1583, 1107, 1107, 2699, 2698, 986, 2675, 3193, 2135, 1755,
	1753, 2117, 3024, 684, 683, 2166, 3243, 1813, 1564, 3211,
	3213, 3214, 1529, 3204, 2385, 2084, 1810, 3016, 3017, 2105,
	1562, 3018, 3220, 1965, 1172, 1841, 1691, 3227, 1751, 1103,
	2277, 1103, 1753, 1541, 1539, 1474, 3271, 3235, 3296, 1351,
	4012, 3236, 3603, 2316, 3275, 3592, 877, 3237, 4088, 3238,
	3942, 1813, 1813, 986, 1804, 3240, 3242, 685, 686, 3267,
	2320, 2321, 2319, 3654, 3608, 1516, 3555, 3421, 3414, 986,
	986, 3323, 1514, 3380, 3348, 3346, 3161, 1512, 3215, 3327,
	1813, 1813, 3142, 3143, 3144, 3145, 3268, 1510, 3072, 1508,
	1499, 3064, 1497, 1374, 3282, 986, 986, 2629, 1804, 1804,
	2605, 3234, 2592, 2585, 1105, 1105, 163, 2572, 3276, 2038,
	2036, 1813, 2033, 3287, 3288, 3284, 3285, 2315, 2317, 2030,
	986, 1754, 2025, 2023, 2021, 2012, 1964, 1804, 1804, 1962,
	1950, 1935, 1920, 1907, 1895, 4062, 3205, 3085, 3815, 1082,
	3298, 1592, 1792, 3035, 3299, 1292, 4078, 3312, 1944, 3982,
	3678, 2737, 1671, 1754, 3671, 3670, 1676, 3615, 1804, 2663,
	1816, 1880, 1331, 2468, 1083, 3817, 2488, 3433, 3361, 3363,
	3356, 3347, 2468, 3349, 1903, 2075, 3360, 2466, 658, 3376,
	3383, 3331, 2101, 1560, 1561, 1998, 2487, 1292, 882, 884,
	886, 1415, 1416, 2100, 986, 3370, 3981, 2082, 3585, 1599,
	1600, 3610, 1107, 986, 1496, 3435, 3852, 3530, 3508, 3410,
	2510, 2491, 1810, 1596, 1599, 1600, 4080, 240, 1102, 3311,
	1292, 1292, 1292, 231, 3393, 4072, 4042, 3443, 3319, 2505,
	3379, 2571, 2965, 1102, 2738, 2103, 1292, 2885, 1851, 1593,
	3430, 1280, 598, 1602, 3447, 2618, 3429, 3397, 2150, 1943,
	3427, 3411, 2537, 3374, 1172, 3444, 3445, 3446, 713, 3426,
	1601, 3392, 1084, 1102, 755, 1887, 1416, 1748, 581, 2911,
	1888, 1431, 1416, 3373, 3412, 1601, 1172, 2545, 2662, 986,
	986, 2544, 3941, 2529, 2924, 986, 986, 1816, 1989, 2527,
	986, 986, 2495, 986, 3415, 609, 2528, 986, 2493, 3910,
	3907, 3872, 2940, 3784, 3441, 2494, 3428, 1813, 986, 3413,
	3431, 3437, 3436, 3403, 3459, 1105, 3306, 3076, 2612, 2366,
	1846, 1797, 4109, 3741, 986, 3974, 3442, 2934, 3448, 3449,
	3975, 4135, 3909, 3450, 3457, 3453, 3482, 3456, 1302, 1810,
	3454, 3490, 3500, 1752, 2832, 2833, 1599, 1600, 3974, 4090,
	2460, 2461, 2273, 3975, 1804, 2458, 2459, 3481, 994, 3315,
	1484, 3465, 2460, 2458, 2306, 3470, 1483, 3475, 3494, 1544,
	3805, 1889, 1543, 3772, 3611, 3607, 3606, 3496, 3419, 3314,
	3216, 3026, 1755, 1685, 1107, 1684, 4123, 2344, 1891, 4095,
	3863, 3768, 1107, 949, 3726, 3723, 1172, 1750, 1172, 3636,
	3548, 3458, 238, 238, 238, 1107, 587, 588, 3439, 603,
	587, 603, 613, 618, 3535, 1753, 3398, 636, 3396, 1172,
	3344, 3339, 642, 3105, 3079, 3078, 2696, 2680, 238, 2679,
	2924, 2622, 1101, 2597, 1813, 2573, 2439, 2438, 986, 2238,
	3520, 2102, 2099, 1751, 2098, 2097, 769, 2096, 1101, 2015,
	1893, 2014, 238, 2013, 1996, 1102, 3538, 1975, 1971, 1970,
	1969, 3576, 1967, 3577, 1966, 1172, 2894, 1559, 1558, 1504,
	3552, 3553, 1172, 1403, 1402, 1401, 3588, 3589, 1400, 1399,
	1398, 1804, 1397, 1395, 3537, 1390, 3541, 3534, 3532, 3533,
	1389, 3586, 1388, 1387, 1386, 1292, 1292, 1105, 1346, 3545,
	3587, 2921, 3542, 1345, 1344, 1105, 3531, 1343, 3554, 1342,
	1341, 163, 1336, 3527, 3536, 1330, 1328, 1327, 1105, 3575,
	1163, 1162, 1172, 3612, 1161, 3613, 1160, 1292, 3623, 1131,
	1431, 1130, 3605, 1065, 1852, 3614, 1754, 888, 874, 3746,
	3569, 1553, 84, 1338, 701, 78, 3626, 1941, 3343, 847,
	3971, 1324, 3893, 986, 708, 3956, 1894, 2981, 3622, 3600,
	2548, 587, 587, 1292, 1292, 1292, 3416, 3620, 1271, 238,
	3602, 1170, 2083, 3621, 1172, 1505, 3674, 2085, 2916, 2407,
	3677, 3933, 3652, 3504, 1989, 2794, 986, 986, 986, 3859,
	3658, 3661, 3666, 3627, 3704, 1884, 2276, 1280, 3682, 3657,
	3684, 3645, 1689, 3642, 1172, 2873, 80, 3647, 970, 986,
	3591, 1016, 986, 986, 3632, 3659, 3631, 3556, 3330, 2652,
	3629, 3599, 986, 3601, 3628, 1816, 3683, 1801, 1803, 936,
	986, 986, 1175, 1862, 1885, 976, 1878, 1871, 2893, 3466,
	2440, 2326, 3201, 993, 990, 1172, 3681, 1292, 3680, 1805,
	3691, 3685, 1807, 992, 3701, 991, 1806, 1708, 989, 3217,
	1172, 1800, 3418, 3417, 2581, 3696, 2616, 1382, 986, 849,
	1866, 2232, 2260, 2783, 1682, 986, 951, 1810, 972, 3713,
	2257, 1123, 3724, 986, 961, 1816, 3707, 1103, 950, 2899,
	3092, 3305, 3662, 986, 2145, 717, 986, 2829, 2263, 1116,
	2349, 2342, 2338, 1103, 986, 2606, 3718, 1569, 1661, 3728,
	2617, 1172, 1890, 1158, 3719, 3720, 954, 2230, 1673, 1292,
	1292, 2763, 2155, 3722, 3729, 3099, 2919, 2433, 3978, 3224,
	1979, 1081, 1080, 3767, 1079, 3751, 3727, 1810, 1102, 1102,
	3962, 3959, 3451, 3057, 1855, 2452, 3750, 1651, 3065, 966,
	1276, 2884, 3130, 3799, 3781, 1172, 3777, 3757, 1292, 1348,
	641, 3790, 978, 1650, 2555, 2554, 3869, 1145, 3769, 1144,
	1143, 2963, 1813, 4143, 3765, 3774, 986, 986, 3804, 3340,
	3759, 3760, 3782, 207, 3780, 3779, 3059, 3803, 3816, 3308,
	2731, 3820, 3788, 1590, 1582, 986, 986, 3783, 204, 3835,
	3836, 3839, 206, 3773, 2721, 205, 3775, 3776, 3814, 3798,
	3637, 3309, 986, 1816, 2925, 3810, 4040, 3813, 3358, 1804,
	3049, 3812, 21, 3819, 3833, 3818, 20, 19, 3661, 105,
	3811, 40, 1813, 18, 119, 135, 134, 986, 133, 132,
	986, 131, 2236, 3847, 137, 130, 129, 124, 3876, 949,
	128, 127, 126, 949, 125, 123, 122, 1671, 121, 986,
	3865, 3851, 120, 118, 117, 1810, 116, 3857, 1256, 115,
	3848, 3849, 1256, 114, 113, 112, 111, 3864, 110, 1804,
	109, 108, 3882, 107, 2344, 2344, 106, 632, 629, 57,
	56, 104, 103, 3635, 17, 38, 3896, 986, 986, 3881,
	14, 61, 62, 3646, 16, 13, 33, 986, 83, 1277,
	986, 2348, 1292, 95, 94, 34, 92, 91, 32, 3889,
	648, 15, 1292, 1292, 3665, 89, 88, 31, 29, 11,
	3911, 9, 3891, 3913, 3904, 3905, 3924, 8, 35, 1292,
	3908, 3903, 1769, 12, 3803, 5, 168, 167, 1118, 1102,
	170, 166, 169, 986, 986, 82, 3916, 1431, 1431, 165,
	1813, 164, 81, 27, 10, 160, 3921, 3800, 3929, 3920,
	3930, 3890, 3408, 76, 1431, 3915, 1128, 162, 161, 159,
	158, 3953, 3928, 157, 77, 636, 986, 986, 74, 986,
	156, 155, 3938, 75, 1280, 3951, 154, 25, 3961, 3964,
	3922, 3923, 3952, 3976, 2344, 2344, 2344, 1804, 238, 3983,
	238, 238, 1268, 6, 238, 238, 1283, 3927, 60, 7,
	3686, 3150, 98, 99, 3966, 36, 653, 3996, 3937, 238,
	72, 1304, 3997, 3970, 71, 986, 986, 986, 70, 24,
	59, 23, 3995, 3980, 197, 196, 3987, 195, 194, 3990,
	193, 3992, 1101, 192, 187, 186, 1333, 191, 986, 4024,
	4029, 3965, 189, 188, 3969, 190, 185, 1101, 1350, 4010,
	1283, 4011, 4008, 4009, 238, 238, 199, 1268, 2760, 2761,
	198, 201, 184, 182, 178, 177, 4027, 238, 4051, 181,
	183, 180, 179, 176, 200, 1392, 152, 1101, 4058, 153,
	660, 67, 4049, 151, 150, 986, 4053, 238, 238, 238,
	149, 1268, 238, 1283, 4059, 4056, 4057, 4063, 4055, 4050,
	4060, 148, 147, 636, 655, 238, 238, 146, 145, 66,
	4079, 1102, 4082, 22, 4069, 4070, 2618, 4075, 4073, 1102,
	4071, 2, 1, 0, 4081, 0, 3961, 0, 769, 3964,
	4085, 4083, 1102, 986, 4089, 986, 4100, 4097, 0, 4092,
	4096, 4102, 4104, 3540, 4039, 0, 0, 0, 4091, 4098,
	0, 0, 0, 0, 0, 0, 4099, 4103, 4101, 0,
	0, 0, 0, 0, 3550, 0, 4118, 0, 4116, 0,
	3980, 0, 0, 0, 0, 0, 0, 0, 2855, 2856,
	2857, 4125, 0, 4124, 0, 0, 0, 0, 0, 4129,
	986, 986, 0, 0, 0, 0, 238, 0, 986, 4127,
	986, 986, 4133, 4130, 0, 0, 4139, 0, 4147, 0,
	0, 4148, 650, 238, 0, 0, 4151, 0, 0, 0,
	0, 0, 0, 0, 4146, 0, 4150, 0, 0, 0,
	4156, 4154, 0, 4159, 4158, 654, 0, 0, 0, 0,
	4164, 0, 4163, 0, 4162, 4157, 0, 986, 0, 4169,
	0, 4160, 4171, 0, 3895, 4172, 0, 4174, 4165, 0,
	0, 0, 0, 4168, 659, 0, 0, 0, 0, 1101,
	0, 0, 4175, 0, 0, 4140, 4141, 657, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 1103, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1103, 0, 0, 0, 0, 1256, 2348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1170,
	0, 0, 4170, 0, 649, 0, 0, 0, 0, 0,
	0, 0, 1103, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3702,
	656, 949, 0, 0, 0, 0, 0, 1256, 0, 0,
	0, 0, 0, 661, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 651, 0, 0, 3984, 0, 0,
	3985, 0, 0, 0, 0, 2344, 2344, 0, 2348, 2348,
	3702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2169, 0, 0, 0, 0,
	587, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 238, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1304, 1268, 238, 0, 238, 0, 2169, 0, 0, 238,
	1304, 603, 0, 0, 238, 1304, 0, 0, 238, 0,
	0, 636, 0, 2344, 2344, 2344, 2344, 2344, 2344, 2344,
	2344, 2344, 2344, 2344, 2344, 2344, 2344, 2344, 2344, 2344,
	2344, 2344, 0, 2344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1256, 0, 0, 0, 0, 2348, 2348,
	2348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1103, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 0, 0, 0, 2832, 2833,
	0, 2850, 2851, 2852, 0, 0, 0, 0, 69, 0,
	0, 0, 1101, 1101, 0, 0, 0, 0, 0, 3486,
	0, 0, 0, 73, 1599, 1600, 0, 1632, 1633, 1634,
	1642, 1643, 1644, 0, 0, 0, 0, 0, 0, 3181,
	3182, 0, 0, 0, 0, 0, 1630, 0, 0, 0,
	0, 0, 0, 1602, 0, 0, 0, 0, 79, 0,
	1648, 0, 0, 0, 0, 0, 0, 0, 0, 2847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1601, 0, 0, 0, 0,
	0, 0, 0, 85, 0, 1621, 238, 0, 0, 0,
	0, 0, 0, 1618, 0, 0, 0, 100, 0, 0,
	0, 0, 86, 97, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3244, 3245, 3246,
	3247, 3248, 3249, 3250, 3251, 3252, 3253, 3254, 3255, 3256,
	3257, 3258, 3259, 3260, 3261, 3262, 238, 3266, 0, 0,
	238, 0, 0, 2838, 238, 0, 0, 0, 0, 0,
	238, 87, 0, 0, 0, 0, 0, 0, 0, 1624,
	1625, 1626, 1627, 238, 0, 238, 0, 238, 0, 1607,
	0, 587, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2016, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2853, 1639, 0,
	0, 1649, 0, 238, 0, 0, 0, 1629, 1631, 0,
	0, 0, 0, 1101, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1616, 1617, 636, 2848, 0, 0, 769, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1256,
	1637, 2430, 0, 0, 0, 0, 68, 1103, 1103, 0,
	0, 1622, 0, 238, 0, 1268, 238, 0, 0, 0,
	0, 90, 69, 0, 0, 0, 0, 0, 0, 636,
	0, 0, 0, 0, 0, 0, 238, 73, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 238, 0, 238,
	0, 238, 0, 238, 0, 238, 0, 0, 0, 0,
	0, 171, 93, 0, 96, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 2111, 0, 0, 2112, 0,
	2113, 0, 0, 0, 0, 0, 1256, 0, 208, 0,
	0, 0, 238, 0, 0, 0, 764, 0, 0, 2849,
	136, 0, 0, 0, 0, 1628, 0, 85, 0, 2348,
	2348, 0, 0, 618, 0, 0, 0, 636, 0, 0,
	0, 100, 0, 0, 0, 1623, 86, 97, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1101, 0, 0, 0, 0,
	1640, 0, 0, 1101, 138, 1256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1101, 0, 175, 0,
	0, 0, 0, 0, 0, 87, 209, 0, 0, 0,
	0, 1256, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 203, 0, 0, 2348, 2348, 2348,
	2348, 2348, 2348, 2348, 2348, 2348, 2348, 2348, 2348, 2348,
	2348, 2348, 2348, 2348, 2348, 2348, 174, 2348, 1103, 0,
	2844, 2845, 2846, 0, 0, 0, 0, 2843, 2841, 2842,
	2834, 2835, 2836, 2837, 2839, 2840, 0, 0, 0, 0,
	0, 0, 1638, 0, 0, 0, 1613, 1614, 1620, 1641,
	1619, 1615, 0, 1612, 1610, 1611, 1603, 1604, 1605, 1606,
	1608, 1609, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 587, 0, 0, 0, 0, 1256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 90, 0, 0, 587, 0,
	0, 0, 0, 0, 0, 238, 0, 587, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1256, 171, 93, 0, 96, 0,
	0, 0, 0, 0, 144, 0, 0, 0, 0, 0,
	0, 68, 0, 44, 43, 0, 0, 0, 0, 0,
	2344, 0, 208, 0, 0, 0, 0, 69, 0, 139,
	764, 0, 0, 0, 136, 0, 0, 0, 0, 0,
	603, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 63, 0, 0, 0, 0, 0, 0, 46,
	1103, 141, 0, 0, 210, 0, 2344, 0, 1103, 0,
	0, 0, 0, 1747, 0, 45, 0, 79, 0, 0,
	0, 1103, 0, 0, 0, 0, 2477, 0, 138, 0,
	0, 0, 0, 0, 238, 0, 0, 0, 0, 48,
	64, 0, 175, 0, 0, 0, 238, 49, 0, 0,
	209, 0, 85, 0, 0, 0, 142, 0, 0, 238,
	202, 0, 0, 0, 47, 0, 100, 0, 203, 0,
	0, 86, 97, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	174, 0, 0, 0, 238, 2563, 0, 0, 0, 0,
	0, 0, 50, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1304,
	87, 0, 238, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 2601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2477, 0, 587, 0,
	2344, 2621, 0, 0, 3710, 0, 0, 238, 0, 0,
	238, 0, 238, 0, 238, 0, 0, 0, 0, 1268,
	0, 238, 238, 0, 1283, 1283, 0, 0, 0, 0,
	0, 0, 0, 0, 2645, 769, 0, 2477, 2477, 935,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3737, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 1268,
	238, 0, 0, 1304, 0, 1304, 0, 0, 1268, 0,
	1268, 0, 1268, 0, 0, 0, 0, 0, 0, 0,
	90, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 51, 0, 0, 0, 0, 0, 238, 238, 238,
	238, 1268, 238, 0, 238, 0, 0, 0, 55, 0,
	0, 0, 0, 0, 65, 0, 0, 0, 0, 54,
	171, 93, 0, 96, 0, 0, 0, 52, 0, 2832,
	2833, 143, 2850, 2851, 2852, 238, 0, 0, 53, 0,
	0, 0, 0, 238, 0, 0, 0, 208, 0, 0,
	3190, 0, 0, 0, 0, 58, 0, 0, 0, 136,
	0, 0, 0, 0, 0, 1599, 1600, 0, 0, 0,
	0, 0, 0, 140, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3856, 0, 0, 1630, 0, 210,
	0, 0, 0, 0, 1602, 0, 0, 0, 0, 0,
	2847, 0, 0, 0, 0, 0, 0, 0, 0, 1256,
	0, 0, 0, 138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1601, 175, 0, 0,
	0, 0, 1304, 0, 0, 209, 1621, 0, 0, 0,
	0, 1256, 0, 0, 1618, 202, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 1256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1256, 174, 0, 0, 3, 0,
	0, 0, 0, 0, 2838, 0, 949, 0, 0, 0,
	3184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	949, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1624, 1625, 1626, 1627, 0, 0, 0, 0, 0, 0,
	1607, 0, 0, 0, 2348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 1599, 1600, 0, 0, 0, 1629, 1631,
	0, 0, 0, 0, 238, 0, 0, 0, 0, 587,
	2348, 1256, 0, 0, 587, 1630, 2848, 587, 0, 0,
	587, 587, 1602, 1616, 1617, 0, 587, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 1256, 0, 0, 0, 1304, 0, 0, 0,
	0, 0, 1622, 0, 1601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1621, 1304, 0, 0, 0, 0,
	0, 0, 1618, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2477, 2477, 238, 0, 1283, 0,
	0, 2477, 0, 0, 2967, 0, 0, 0, 0, 0,
	0, 0, 2477, 2967, 0, 2477, 2967, 2967, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3179, 238,
	238, 1283, 238, 0, 0, 935, 0, 0, 0, 935,
	2849, 0, 0, 0, 0, 0, 0, 0, 1624, 1625,
	1626, 1627, 1283, 238, 1268, 0, 1628, 0, 1607, 0,
	0, 0, 0, 0, 2348, 0, 2477, 0, 3027, 2477,
	1283, 0, 0, 2477, 2477, 1283, 1623, 0, 0, 0,
	0, 0, 0, 0, 0, 1306, 0, 1312, 0, 1318,
	1256, 0, 0, 1256, 0, 0, 1629, 1631, 0, 0,
	238, 3053, 0, 0, 3055, 2477, 0, 0, 238, 0,
	0, 0, 238, 0, 1283, 0, 0, 0, 0, 0,
	0, 1616, 1617, 0, 0, 0, 0, 0, 0, 0,
	0, 2601, 0, 0, 1268, 0, 238, 0, 0, 2477,
	0, 587, 0, 0, 0, 0, 0, 0, 2477, 0,
	1622, 0, 0, 0, 0, 0, 0, 238, 238, 0,
	1432, 2844, 2845, 2846, 1256, 0, 0, 0, 2843, 2841,
	2842, 2834, 2835, 2836, 2837, 2839, 2840, 1450, 0, 1455,
	0, 1256, 0, 0, 238, 2601, 0, 0, 2601, 1464,
	0, 1469, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1619, 1615, 0, 1612, 1610, 1611, 1603, 1604, 1605,
	1606, 1608, 1609, 0, 0, 0, 0, 0, 0, 0,
	2832, 2833, 0, 2850, 2851, 2852, 0, 0, 0, 3159,
	0, 0, 1268, 238, 0, 238, 0, 0, 0, 0,
	0, 3189, 0, 0, 1628, 0, 0, 0, 0, 1525,
	0, 0, 1531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1623, 0, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1599,
	1600, 0, 1632, 1633, 1634, 1642, 1643, 1644, 0, 0,
	0, 2847, 0, 0, 0, 0, 0, 0, 0, 0,
	1635, 1630, 0, 0, 0, 0, 0, 0, 1602, 1599,
	1600, 1256, 0, 0, 0, 1648, 0, 0, 0, 0,
	0, 0, 0, 0, 3222, 0, 0, 0, 0, 0,
	0, 1630, 2832, 2833, 0, 2850, 2851, 2852, 1602, 0,
	1601, 0, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 0,
	1621, 0, 0, 0, 0, 0, 0, 0, 1618, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1601, 0, 0, 1670, 0, 2838, 0, 0, 0, 1683,
	1621, 0, 0, 0, 0, 0, 0, 0, 1618, 1619,
	1615, 0, 1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608,
	1609, 0, 0, 2847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	238, 0, 0, 0, 1624, 1625, 1626, 1627, 0, 2853,
	0, 0, 0, 0, 1607, 0, 0, 0, 0, 0,
	0, 587, 587, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1624, 1625, 1626, 1627, 0, 0,
	0, 0, 0, 1639, 1607, 0, 1649, 2848, 0, 0,
	0, 0, 1629, 1631, 0, 1304, 0, 0, 1599, 1600,
	0, 0, 0, 1741, 1741, 1741, 0, 2838, 1645, 0,
	1646, 0, 0, 0, 0, 0, 0, 1616, 1617, 0,
	1630, 0, 1629, 1631, 0, 0, 0, 1602, 0, 0,
	0, 0, 0, 0, 0, 1637, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 636, 1622, 1616, 1617, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1601,
	0, 1256, 0, 0, 0, 0, 0, 0, 0, 1621,
	0, 1647, 0, 0, 238, 0, 1622, 935, 0, 0,
	0, 0, 0, 1256, 0, 0, 0, 0, 1636, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2848,
	0, 2849, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1628, 0, 0, 1624, 1625, 1626, 1627, 0, 0, 2477,
	238, 0, 0, 1607, 0, 0, 0, 0, 0, 0,
	1623, 0, 0, 0, 0, 0, 2645, 2645, 0, 0,
	1628, 0, 769, 769, 2477, 0, 0, 2601, 2601, 0,
	0, 769, 2477, 0, 0, 1640, 0, 0, 0, 0,
	1623, 1629, 1631, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 1256, 0, 1256, 0, 0, 0, 0,
	0, 0, 0, 2849, 0, 0, 0, 0, 0, 0,
	0, 0, 2844, 2845, 2846, 0, 1256, 0, 0, 2843,
	2841, 2842, 2834, 2835, 2836, 2837, 2839, 2840, 0, 0,
	0, 0, 0, 0, 0, 1622, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3505, 0, 1256, 0, 0, 0, 0, 1638, 0, 1256,
	0, 1613, 1614, 1620, 1641, 1619, 1615, 0, 1612, 1610,
	1611, 1603, 1604, 1605, 1606, 1608, 1609, 0, 0, 0,
	0, 3513, 0, 0, 0, 3512, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1619, 1615, 0, 1612, 1610,
	1611, 1603, 1604, 1605, 1606, 1608, 1609, 0, 0, 1256,
	0, 0, 238, 0, 2844, 2845, 2846, 0, 1304, 1628,
	238, 2843, 2841, 2842, 2834, 2835, 2836, 2837, 2839, 2840,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 1623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2477, 2477, 2477, 0, 0, 0,
	0, 1256, 0, 0, 0, 0, 0, 1304, 0, 0,
	0, 0, 0, 0, 0, 2477, 0, 2967, 0, 0,
	1304, 1304, 238, 1283, 0, 0, 0, 0, 0, 0,
	0, 1256, 0, 0, 1283, 238, 1283, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2477, 0, 2477,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2477, 0, 1256, 0, 0, 3639, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 1256, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1612, 1610, 1611,
	1603, 1604, 1605, 1606, 1608, 1609, 0, 0, 0, 0,
	0, 0, 0, 949, 1304, 0, 0, 0, 0, 0,
	0, 2144, 0, 2148, 0, 0, 0, 0, 1256, 0,
	2162, 0, 0, 0, 0, 0, 0, 2171, 2172, 2173,
	2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183,
	2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193,
	2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203,
	2204, 2205, 1256, 2211, 0, 2213, 2214, 2215, 2216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1670, 0,
	0, 0, 2255, 0, 2477, 0, 2967, 0, 0, 3731,
	0, 0, 0, 0, 0, 0, 0, 238, 2285, 2288,
	2291, 2294, 0, 2298, 2299, 2300, 2301, 2302, 2303, 2304,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 636, 0, 0, 0, 0, 0, 0,
	0, 2340, 0, 2351, 2353, 2358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3731, 0, 0, 0, 0, 0, 0, 0,
	2477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3807, 0, 0, 0, 949, 949, 0, 0, 0, 0,
	995, 0, 1304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1599, 1600, 0, 1632, 1633, 1634,
	1642, 1643, 1644, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 238, 0, 0, 1635, 1630, 0, 0, 0,
	0, 0, 0, 1602, 239, 239, 239, 1599, 1600, 0,
	1648, 0, 0, 0, 0, 3222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1630,
	239, 3731, 0, 0, 0, 1601, 1602, 0, 0, 0,
	0, 0, 0, 0, 949, 1621, 0, 0, 0, 0,
	0, 0, 0, 1618, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1601, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 1621, 0,
	0, 0, 0, 0, 0, 0, 1618, 0, 0, 0,
	0, 0, 0, 0, 3639, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 2967, 0, 0, 1624,
	1625, 1626, 1627, 0, 0, 0, 0, 0, 0, 1607,
	0, 0, 3178, 0, 2566, 2567, 0, 2569, 0, 0,
	0, 0, 1304, 0, 1304, 0, 0, 0, 0, 0,
	0, 0, 1624, 1625, 1626, 1627, 0, 0, 1639, 0,
	0, 1649, 1607, 0, 0, 0, 0, 1629, 1631, 3947,
	0, 0, 0, 0, 0, 0, 1304, 0, 0, 238,
	0, 0, 0, 1645, 0, 1646, 0, 0, 0, 0,
	0, 0, 1616, 1617, 0, 0, 238, 2477, 0, 0,
	1629, 1631, 0, 0, 0, 0, 0, 0, 1599, 1600,
	1637, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 1622, 0, 0, 0, 1616, 1617, 0, 0, 0,
	1630, 0, 0, 0, 0, 0, 0, 1602, 0, 3222,
	0, 0, 0, 0, 0, 0, 1647, 0, 0, 0,
	0, 0, 0, 0, 1622, 0, 0, 0, 0, 0,
	0, 0, 0, 1636, 0, 0, 0, 0, 0, 1601,
	0, 0, 0, 0, 0, 2695, 0, 0, 0, 1621,
	0, 0, 0, 0, 0, 0, 0, 1618, 0, 0,
	2477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3731, 0, 0, 0, 1628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1652, 1653, 0, 0, 0,
	0, 0, 0, 2749, 0, 1623, 0, 0, 0, 0,
	0, 0, 1304, 0, 2477, 0, 0, 0, 1628, 0,
	0, 0, 0, 1624, 1625, 1626, 1627, 0, 0, 0,
	1640, 0, 0, 1607, 0, 0, 0, 0, 1623, 0,
	0, 1599, 1600, 0, 1632, 1633, 1634, 1642, 1643, 1644,
	2743, 2744, 0, 0, 0, 0, 2750, 0, 0, 0,
	0, 0, 1635, 1630, 0, 0, 0, 0, 0, 0,
	1602, 1629, 1631, 0, 0, 2764, 2765, 1648, 0, 0,
	0, 2255, 0, 0, 0, 0, 0, 0, 0, 0,
	2772, 0, 0, 0, 0, 0, 1616, 1617, 0, 0,
	0, 0, 1601, 0, 0, 0, 2786, 0, 0, 0,
	0, 2645, 1621, 0, 0, 0, 0, 0, 0, 0,
	1618, 0, 1638, 2798, 2645, 1622, 1613, 1614, 1620, 1641,
	1619, 1615, 0, 1612, 1610, 1611, 1603, 1604, 1605, 1606,
	1608, 1609, 0, 0, 0, 0, 2807, 0, 0, 0,
	2808, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1619, 1615, 0, 1612, 1610, 1611, 1603,
	1604, 1605, 1606, 1608, 1609, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1624, 1625, 1626, 1627,
	0, 0, 0, 0, 0, 0, 1607, 0, 2358, 2358,
	2358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1741, 0, 0, 0, 0, 0, 1628,
	0, 2889, 0, 0, 0, 1639, 0, 0, 1649, 0,
	0, 0, 0, 0, 1629, 1631, 0, 0, 0, 1623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1645, 0, 1646, 0, 0, 0, 0, 0, 0, 1616,
	1617, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1637, 0, 0,
	239, 1176, 239, 239, 0, 1176, 239, 239, 1622, 1176,
	0, 0, 935, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 935, 0, 0, 0,
	0, 0, 0, 1647, 0, 0, 0, 0, 0, 0,
	0, 1176, 0, 0, 0, 0, 0, 0, 0, 0,
	1636, 0, 0, 0, 2984, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 1176, 0, 239, 239, 0, 0,
	0, 69, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 1619, 1615, 73, 1612, 1610, 1611,
	1603, 1604, 1605, 1606, 1608, 1609, 0, 0, 0, 239,
	239, 239, 1628, 0, 239, 0, 1176, 0, 0, 0,
	0, 0, 1176, 0, 0, 0, 1176, 239, 239, 0,
	0, 79, 1623, 0, 0, 0, 0, 0, 0, 0,
	1176, 0, 1599, 1600, 0, 1632, 1633, 1634, 1642, 1643,
	1644, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	0, 0, 0, 1635, 1630, 0, 85, 0, 0, 0,
	0, 1602, 0, 0, 0, 0, 0, 0, 1648, 0,
	100, 0, 0, 0, 0, 86, 97, 0, 0, 1176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1621, 0, 0, 0, 0, 239, 0,
	0, 1618, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 239, 1097, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1638,
	0, 0, 0, 1613, 1614, 1620, 1641, 1619, 1615, 0,
	1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609, 0,
	0, 0, 0, 2251, 0, 0, 0, 2252, 0, 0,
	233, 233, 583, 0, 0, 0, 0, 1624, 1625, 1626,
	1627, 0, 0, 0, 0, 0, 0, 1607, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2162,
	0, 0, 0, 0, 0, 3176, 3177, 0, 0, 3180,
	0, 0, 0, 3183, 0, 0, 1639, 0, 0, 1649,
	0, 0, 3187, 0, 0, 1629, 1631, 0, 0, 0,
	0, 3194, 0, 0, 2889, 0, 0, 0, 0, 0,
	0, 1645, 0, 1646, 90, 0, 0, 0, 0, 3206,
	1616, 1617, 0, 0, 0, 0, 0, 0, 0, 0,
	2832, 2833, 0, 2850, 2851, 2852, 0, 0, 1637, 3229,
	3230, 0, 3231, 3232, 3233, 0, 0, 0, 0, 1622,
	0, 0, 0, 0, 171, 93, 0, 96, 0, 0,
	3239, 0, 0, 0, 3241, 0, 2832, 2833, 0, 2850,
	2851, 2852, 0, 0, 1647, 0, 0, 0, 0, 0,
	0, 208, 0, 0, 0, 0, 0, 0, 0, 764,
	0, 1636, 0, 136, 0, 3269, 3270, 0, 0, 0,
	0, 2847, 0, 0, 0, 0, 0, 0, 0, 0,
	1599, 1600, 0, 3281, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 210, 0, 0, 0, 0, 3290, 0,
	1176, 982, 1630, 0, 239, 239, 239, 2847, 0, 1602,
	0, 239, 0, 1628, 0, 0, 239, 138, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 1176,
	0, 175, 0, 1623, 0, 0, 0, 0, 0, 209,
	0, 1601, 0, 0, 0, 237, 237, 237, 0, 202,
	1176, 1621, 0, 0, 0, 2838, 3324, 203, 1640, 1618,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 674, 3333, 3336, 0, 0, 0, 0, 0, 1444,
	0, 0, 0, 0, 0, 0, 0, 2854, 0, 0,
	0, 2838, 0, 0, 0, 674, 0, 0, 0, 3357,
	0, 0, 0, 0, 0, 2742, 0, 0, 0, 2853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1624, 1625, 1626, 1627, 0,
	0, 0, 0, 0, 0, 1607, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2853, 0, 2848, 0, 0,
	1638, 0, 0, 0, 1613, 1614, 1620, 1641, 1619, 1615,
	0, 1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609,
	0, 0, 0, 1629, 1631, 0, 0, 0, 3511, 0,
	0, 0, 0, 2848, 0, 0, 1176, 1176, 239, 0,
	0, 0, 0, 0, 0, 0, 1176, 1741, 1616, 1617,
	0, 0, 0, 0, 0, 0, 3438, 0, 0, 0,
	0, 0, 1104, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1622, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 68, 239, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 69, 0, 0,
	0, 2849, 0, 0, 0, 239, 0, 239, 0, 239,
	0, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3483, 3484, 0, 0, 0, 0, 3488, 3489,
	0, 0, 0, 3492, 3493, 0, 0, 2849, 0, 0,
	3497, 0, 0, 0, 0, 239, 0, 79, 0, 0,
	0, 3501, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1628, 0, 0, 0, 0, 0, 3506, 0, 0,
	0, 0, 0, 1176, 0, 1176, 0, 1176, 0, 0,
	0, 1623, 85, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1176, 1176, 0, 100, 0, 0, 0,
	0, 86, 97, 0, 1176, 239, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 1176, 1176, 1176,
	0, 0, 2844, 2845, 2846, 0, 0, 0, 239, 2843,
	2841, 2842, 2834, 2835, 2836, 2837, 2839, 2840, 239, 239,
	0, 239, 0, 239, 0, 239, 0, 239, 0, 0,
	87, 0, 0, 0, 0, 0, 1167, 0, 2844, 2845,
	2846, 0, 1275, 0, 0, 2843, 2841, 2842, 2834, 2835,
	2836, 2837, 2839, 2840, 0, 0, 0, 0, 0, 0,
	0, 3336, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1619, 1615, 0, 1612,
	1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1176, 0, 0, 1384, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1407, 1407, 1407, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	90, 0, 0, 1448, 1449, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3336, 0, 0, 0,
	0, 0, 0, 747, 0, 0, 0, 0, 0, 0,
	171, 93, 0, 96, 0, 0, 0, 0, 0, 1176,
	0, 0, 0, 0, 0, 0, 0, 731, 0, 3697,
	3698, 3699, 0, 0, 0, 0, 0, 208, 0, 0,
	0, 0, 0, 0, 0, 764, 0, 0, 0, 136,
	0, 0, 2162, 0, 0, 3708, 3709, 0, 0, 0,
	0, 0, 0, 732, 1552, 0, 0, 0, 0, 0,
	0, 0, 0, 3717, 733, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 1176, 0,
	0, 237, 734, 237, 237, 0, 0, 237, 237, 0,
	0, 0, 0, 138, 0, 0, 0, 0, 0, 752,
	0, 239, 674, 0, 1176, 0, 0, 175, 3336, 0,
	0, 0, 0, 0, 0, 209, 3756, 0, 735, 0,
	0, 0, 0, 0, 0, 202, 3763, 0, 0, 935,
	0, 0, 0, 203, 0, 0, 0, 3770, 0, 0,
	0, 736, 0, 0, 0, 0, 0, 237, 237, 0,
	0, 0, 0, 0, 0, 1442, 0, 0, 0, 0,
	237, 737, 0, 0, 738, 0, 0, 0, 0, 0,
	0, 0, 1176, 660, 0, 0, 0, 0, 0, 0,
	237, 237, 237, 0, 0, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 751, 237, 237,
	0, 0, 1176, 0, 0, 0, 0, 0, 0, 3336,
	3336, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 1176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3868, 1176, 0, 3871, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 3336, 0, 0, 1779, 0, 0, 0, 0,
	0, 0, 740, 0, 239, 0, 237, 0, 0, 0,
	1788, 239, 1275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 758, 0, 741, 1843, 0, 0, 0,
	935, 935, 0, 0, 0, 0, 0, 0, 0, 239,
	3336, 0, 239, 3336, 239, 0, 239, 0, 0, 0,
	0, 0, 0, 239, 239, 0, 0, 659, 1176, 1176,
	0, 1176, 0, 0, 742, 0, 0, 0, 756, 757,
	754, 0, 0, 1176, 0, 0, 749, 0, 0, 743,
	0, 0, 0, 0, 239, 0, 0, 2162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 744, 750, 0, 0,
	935, 0, 0, 0, 0, 745, 0, 0, 0, 0,
	971, 102, 0, 0, 0, 0, 0, 0, 746, 239,
	239, 239, 239, 753, 239, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 661, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 748, 4007, 4007,
	4007, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 0, 0,
	0, 4028, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 102, 0, 0,
	0, 0, 0, 0, 1763, 0, 1104, 0, 0, 0,
	237, 0, 0, 0, 0, 0, 0, 0, 4007, 0,
	0, 0, 0, 0, 1977, 237, 1763, 237, 1984, 0,
	0, 0, 674, 0, 0, 0, 0, 674, 1843, 0,
	0, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1384, 0, 2004, 0, 2004, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3336, 0, 3336, 0,
	0, 0, 0, 0, 910, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 930, 0, 0, 0, 0,
	0, 1275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1091, 0, 4007, 4134, 0, 0, 0, 0, 0,
	0, 4138, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1984, 0, 0, 2061, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1176, 0, 2078, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2088, 0, 2090, 0, 2092,
	0, 2094, 0, 2095, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1176, 0, 0, 0, 0, 674,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2116, 0, 0, 0, 0, 0, 0, 1176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 237, 0, 0, 0, 237, 239, 0,
	0, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 237, 0,
	237, 1599, 1600, 0, 1632, 1633, 1634, 1642, 1643, 1644,
	0, 239, 239, 0, 239, 0, 0, 0, 0, 0,
	0, 239, 1635, 1630, 0, 0, 0, 0, 0, 0,
	1602, 0, 0, 0, 0, 239, 237, 1648, 0, 0,
	0, 0, 0, 0, 1176, 0, 0, 0, 0, 0,
	0, 0, 0, 1176, 0, 0, 0, 0, 1176, 0,
	0, 0, 1601, 0, 0, 0, 0, 1176, 0, 0,
	0, 1176, 1621, 0, 0, 1176, 0, 0, 0, 0,
	1618, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 1176, 239, 0, 237, 0, 0, 237,
	0, 0, 0, 1176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 674,
	237, 0, 237, 0, 237, 0, 237, 0, 237, 239,
	239, 0, 0, 0, 0, 0, 1624, 1625, 1626, 1627,
	0, 0, 0, 0, 0, 0, 1607, 0, 1176, 1176,
	0, 0, 0, 0, 0, 0, 239, 2414, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 0, 0,
	1176, 0, 0, 0, 0, 1639, 0, 0, 1649, 0,
	0, 0, 0, 0, 1629, 1631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1645, 0, 1646, 1176, 0, 239, 1176, 239, 0, 1616,
	1617, 0, 0, 0, 0, 1018, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1637, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1622, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1647, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1176, 0, 0,
	1636, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 102, 1176, 102, 0, 102, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1623, 0, 0, 0, 0, 0, 0, 0,
	1984, 0, 1104, 0, 0, 0, 0, 1843, 102, 0,
	0, 0, 930, 102, 102, 0, 0, 1640, 1104, 0,
	0, 0, 0, 0, 0, 102, 0, 102, 0, 0,
	0, 0, 237, 0, 0, 2623, 0, 102, 1407, 102,
	1407, 0, 1407, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1176, 0, 1108, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2674, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 102, 2682, 0, 2685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1638,
	0, 0, 0, 1613, 1614, 1620, 1641, 1619, 1615, 0,
	1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609, 0,
	0, 0, 0, 3944, 0, 2707, 1275, 2709, 1275, 0,
	2712, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 1599, 1600, 0, 0, 239, 0, 1642, 1643,
	1644, 0, 237, 1407, 0, 0, 0, 0, 0, 0,
	0, 2740, 0, 910, 1630, 1176, 0, 237, 0, 0,
	0, 1602, 0, 0, 0, 239, 0, 0, 1648, 0,
	0, 0, 0, 1664, 0, 239, 0, 674, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	1669, 239, 0, 1601, 1675, 0, 0, 1176, 0, 0,
	0, 0, 0, 1621, 0, 237, 0, 0, 0, 0,
	0, 1618, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1176, 1176, 1176, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 237, 0, 237, 1176, 237, 0, 0,
	0, 0, 0, 0, 237, 237, 0, 0, 0, 0,
	0, 0, 0, 239, 1176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1624, 1625, 1626,
	1627, 0, 0, 0, 0, 237, 1176, 1607, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1761, 0, 1764, 1639, 102, 0, 1649,
	0, 0, 0, 0, 0, 1629, 1631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 237, 237, 237, 0, 237, 0, 237, 0, 0,
	1616, 1617, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1637, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 1622,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1176, 0, 1176, 691,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1176,
	0, 0, 0, 692, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2958, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 0, 0, 693,
	0, 710, 0, 1628, 0, 1176, 1108, 239, 0, 239,
	1108, 0, 1176, 0, 1108, 0, 0, 2998, 3000, 0,
	1843, 0, 239, 1623, 0, 694, 0, 0, 695, 0,
	0, 0, 0, 0, 0, 1176, 1176, 0, 0, 0,
	0, 0, 0, 0, 0, 718, 1108, 0, 1640, 0,
	0, 696, 0, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 1176, 239, 716, 0, 0, 1176, 0, 1108,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 697, 0, 0,
	0, 0, 0, 0, 0, 0, 3066, 0, 0, 0,
	3070, 0, 0, 1176, 1176, 1176, 0, 698, 0, 0,
	699, 1108, 0, 0, 1176, 720, 0, 1108, 0, 660,
	0, 1108, 1104, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1108, 0, 1104, 0, 0,
	1638, 0, 0, 0, 1176, 1275, 1275, 1641, 1619, 1615,
	0, 1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609,
	0, 0, 0, 0, 0, 0, 0, 1763, 0, 0,
	0, 0, 3126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1108, 1176, 0, 1176, 719, 0,
	0, 0, 0, 930, 0, 930, 0, 714, 0, 0,
	1176, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 3162, 0, 1275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 700, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 702, 0,
	0, 1176, 237, 237, 0, 237, 3174, 0, 0, 1176,
	1176, 0, 1763, 0, 0, 0, 0, 0, 0, 0,
	0, 703, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1176, 0, 0, 1176, 0,
	0, 0, 0, 659, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 690, 0, 711, 0, 0, 0,
	243, 0, 0, 674, 0, 704, 0, 0, 0, 0,
	0, 237, 0, 239, 239, 237, 0, 0, 0, 0,
	0, 0, 910, 0, 0, 910, 910, 0, 709, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1104,
	0, 0, 705, 0, 0, 723, 0, 722, 0, 0,
	0, 706, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 237, 0, 0, 707, 0, 0, 0, 0, 715,
	666, 0, 0, 0, 724, 0, 721, 0, 0, 0,
	2229, 0, 661, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 0, 0, 666, 0, 930, 0, 0, 239,
	0, 0, 0, 0, 0, 1669, 0, 0, 0, 1669,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1108, 239,
	1108, 0, 1176, 0, 0, 0, 237, 0, 237, 0,
	0, 0, 1176, 1176, 0, 1108, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1176,
	1817, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 1108, 0, 0, 0, 0, 0,
	0, 1091, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1108, 0, 1764, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 987, 0, 0, 0, 0, 0, 102, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3420, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1104, 1104, 0, 0, 0, 0, 0, 102,
	0, 1108, 1108, 0, 0, 0, 0, 0, 0, 0,
	0, 1108, 0, 0, 0, 0, 0, 0, 0, 3468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	102, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	102, 0, 0, 102, 0, 102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 102, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	102, 0, 0, 0, 0, 0, 0, 0, 1108, 0,
	1108, 0, 1108, 0, 0, 0, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 1108, 1108,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 1108,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1108, 1108, 1108, 0, 0, 0, 0, 0,
	0, 102, 0, 1104, 0, 1599, 1600, 0, 1632, 1633,
	1634, 1642, 1643, 1644, 0, 0, 0, 0, 0, 0,
	3590, 0, 0, 0, 0, 0, 1635, 1630, 0, 0,
	0, 0, 0, 1843, 1602, 0, 0, 0, 0, 0,
	0, 1648, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1621, 0, 0, 0,
	0, 1843, 0, 0, 1618, 0, 0, 0, 0, 3653,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 1817, 1108, 0, 0,
	0, 2229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1173, 0, 0, 0, 1173, 0, 0, 0, 1293,
	0, 0, 1669, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1624, 1625, 1626, 1627, 0, 0, 0, 0, 0, 0,
	1607, 1293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1293, 1104, 0, 0, 0, 1639,
	0, 0, 1649, 1104, 1108, 0, 0, 0, 1629, 1631,
	0, 0, 0, 0, 0, 0, 1763, 0, 0, 0,
	0, 0, 0, 0, 1645, 0, 1646, 0, 0, 0,
	0, 0, 0, 1616, 1617, 0, 1293, 0, 0, 0,
	0, 0, 1293, 0, 0, 3738, 1293, 0, 0, 0,
	0, 1637, 0, 0, 0, 0, 0, 0, 0, 0,
	1293, 0, 1622, 0, 0, 237, 1108, 0, 0, 0,
	0, 0, 0, 1108, 0, 0, 0, 0, 237, 0,
	237, 1091, 1108, 0, 0, 0, 0, 1647, 0, 0,
	0, 0, 0, 237, 0, 0, 1091, 0, 0, 1108,
	0, 0, 0, 0, 1636, 0, 0, 0, 0, 1293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1174, 0, 0, 1628, 1174, 0, 0,
	0, 1294, 0, 0, 0, 0, 0, 1108, 0, 3846,
	1275, 0, 0, 0, 0, 0, 1623, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1294, 0, 0, 0, 1108, 0, 0,
	0, 1640, 0, 0, 102, 102, 0, 0, 102, 0,
	0, 0, 0, 0, 0, 0, 1294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 102, 102,
	0, 0, 102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1108, 0, 0, 0, 0, 0, 1294, 0,
	0, 0, 0, 0, 1294, 0, 1108, 0, 1294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 1294, 0, 0, 3912, 0, 0, 0, 0,
	0, 0, 0, 1638, 0, 0, 0, 1613, 1614, 1620,
	1641, 1619, 1615, 0, 1612, 1610, 1611, 1603, 1604, 1605,
	1606, 1608, 1609, 0, 0, 0, 0, 3855, 1091, 0,
	0, 930, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	102, 102, 0, 1108, 1108, 0, 1108, 3955, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1108, 0,
	0, 0, 0, 0, 3977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1173, 3989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 666, 0, 0, 237, 237, 666, 0, 0, 0,
	1599, 1600, 0, 1632, 1633, 1634, 1642, 1643, 1644, 1293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1635, 1630, 0, 0, 0, 0, 0, 0, 1602,
	1173, 0, 0, 0, 0, 0, 1648, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1621, 0, 0, 0, 0, 0, 0, 0, 1618,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1624, 1625, 1626, 1627, 0,
	0, 0, 0, 0, 0, 1607, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1293, 1293, 0, 0,
	0, 0, 0, 102, 0, 0, 1173, 0, 0, 0,
	0, 0, 237, 0, 1639, 0, 0, 1649, 0, 0,
	0, 1091, 1091, 1629, 1631, 0, 0, 0, 0, 237,
	0, 0, 1174, 0, 0, 0, 0, 0, 0, 1645,
	0, 1646, 0, 0, 0, 0, 237, 0, 1616, 1617,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1294, 0, 0, 0, 0, 1637, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1622, 0, 0,
	0, 0, 1174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1647, 0, 0, 0, 1108, 1108, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1636,
	0, 1108, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1108,
	0, 0, 0, 1293, 0, 1293, 0, 1293, 0, 0,
	0, 1108, 0, 0, 1108, 0, 0, 0, 0, 0,
	0, 0, 0, 1293, 1293, 0, 0, 0, 1817, 0,
	0, 1628, 1108, 0, 1293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1293, 1293, 1293,
	0, 1623, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 102, 666, 0,
	1817, 0, 0, 0, 0, 0, 1640, 0, 1294, 1294,
	0, 0, 0, 0, 0, 0, 0, 0, 1174, 0,
	0, 0, 1091, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1108,
	0, 0, 0, 0, 0, 0, 0, 0, 1108, 0,
	102, 0, 0, 1108, 0, 0, 0, 0, 0, 0,
	0, 0, 1108, 0, 0, 0, 1108, 0, 0, 0,
	1108, 0, 1173, 0, 0, 0, 0, 0, 1638, 0,
	0, 0, 1613, 1614, 1620, 1641, 1619, 1615, 1108, 1612,
	1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609, 1108, 0,
	0, 0, 0, 0, 0, 0, 3192, 0, 0, 0,
	0, 0, 0, 1108, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1294, 0, 1294, 0, 1294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1108, 1108, 1294, 1294, 0, 0, 1173,
	0, 0, 0, 0, 0, 0, 1294, 0, 0, 0,
	0, 0, 0, 0, 0, 1108, 0, 0, 102, 1294,
	1294, 1294, 0, 0, 1091, 0, 0, 0, 0, 0,
	0, 0, 1091, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1108, 0,
	0, 1108, 0, 0, 0, 0, 1599, 1600, 0, 1632,
	1633, 1634, 1642, 1643, 1644, 0, 0, 0, 1173, 0,
	0, 0, 0, 0, 0, 0, 0, 1635, 1630, 0,
	0, 0, 0, 0, 0, 1602, 0, 0, 0, 0,
	0, 0, 1648, 0, 1173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1601, 0, 0,
	0, 0, 1108, 0, 0, 0, 0, 1621, 0, 0,
	0, 0, 0, 0, 1174, 1618, 0, 0, 0, 1108,
	0, 0, 0, 0, 102, 0, 0, 0, 0, 1817,
	1817, 0, 0, 0, 102, 0, 0, 0, 0, 0,
	0, 0, 1293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 102, 0, 0, 1817, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1173, 0, 0, 0, 0, 0, 0, 0,
	0, 1624, 1625, 1626, 1627, 0, 0, 0, 0, 1817,
	0, 1607, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1108, 1108, 0, 0,
	1639, 0, 0, 1649, 0, 0, 0, 1173, 0, 1629,
	1631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1293, 0, 0, 0, 1645, 0, 1646, 0, 1108,
	0, 0, 0, 0, 1616, 1617, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1174, 0, 1637, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1622, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1174, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1636, 0, 0, 1293, 1293,
	0, 1293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1294, 0, 0, 0, 0, 0,
	1108, 0, 0, 0, 0, 0, 0, 1628, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 2229, 0,
	0, 0, 0, 0, 1174, 0, 0, 1623, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1108, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1640, 0, 0, 0, 0, 1108, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1108, 1108, 1108, 0, 1174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1108, 0, 1294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1108,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1108, 0, 0, 0, 102, 0, 0, 0, 0,
	0, 0, 1817, 0, 1638, 0, 0, 0, 1613, 1614,
	1620, 1641, 1619, 1615, 0, 1612, 1610, 1611, 1603, 1604,
	1605, 1606, 1608, 1609, 0, 0, 0, 0, 0, 0,
	0, 0, 2810, 0, 0, 0, 0, 0, 0, 0,
	1294, 1294, 0, 1294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1108,
	0, 0, 0, 0, 0, 0, 0, 1108, 0, 0,
	0, 1108, 0, 1108, 0, 0, 0, 0, 102, 0,
	1108, 102, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1108, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1108, 0, 0, 0, 1173, 0, 0, 1108, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1108, 1108, 0, 0, 0, 0, 0, 1173, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1108, 0, 0,
	0, 0, 1108, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1108, 1108,
	1108, 0, 0, 0, 0, 0, 0, 0, 0, 1108,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1173, 0, 0, 0, 0, 1108,
	0, 0, 0, 1293, 0, 0, 0, 0, 1293, 0,
	0, 0, 0, 0, 0, 0, 0, 1293, 0, 0,
	1817, 1293, 0, 0, 0, 1173, 0, 0, 0, 0,
	0, 0, 666, 0, 0, 0, 0, 0, 0, 0,
	1108, 0, 1108, 1293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1293, 1174, 1108, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1817, 0, 0, 0, 0, 0, 1174, 0, 0, 0,
	0, 823, 0, 864, 0, 0, 0, 0, 0, 0,
	0, 1174, 0, 0, 0, 0, 1108, 0, 1293, 1293,
	0, 0, 0, 0, 1108, 1108, 830, 0, 0, 1174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1293, 0, 843, 828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1108, 0, 0, 1108, 0, 0, 0, 0, 0, 829,
	0, 0, 0, 1173, 832, 0, 1173, 0, 0, 872,
	0, 0, 0, 0, 0, 0, 0, 840, 841, 0,
	0, 1599, 1600, 857, 1632, 1633, 1634, 1642, 1643, 1644,
	0, 0, 0, 0, 0, 0, 0, 865, 834, 0,
	0, 0, 1635, 1630, 0, 0, 0, 0, 1817, 0,
	1602, 0, 0, 0, 0, 0, 1174, 1648, 0, 0,
	0, 0, 0, 0, 835, 1294, 0, 0, 0, 0,
	1294, 0, 0, 863, 0, 0, 0, 1173, 0, 1294,
	0, 0, 1601, 1294, 0, 0, 0, 1174, 0, 0,
	0, 0, 1621, 0, 1173, 0, 0, 0, 0, 0,
	1618, 0, 0, 0, 0, 1294, 0, 0, 0, 836,
	0, 0, 0, 0, 0, 1294, 0, 827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 837, 838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1108, 0, 0,
	0, 0, 0, 845, 844, 0, 0, 1108, 1108, 0,
	0, 839, 0, 0, 0, 854, 1624, 1625, 1626, 1627,
	1294, 1294, 0, 0, 1108, 0, 1607, 0, 0, 0,
	869, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1294, 0, 0, 0, 0, 0, 0, 0,
	866, 0, 0, 0, 0, 1639, 0, 0, 1649, 0,
	0, 0, 0, 0, 1629, 1631, 0, 0, 0, 0,
	0, 0, 0, 0, 1173, 1174, 0, 0, 1174, 0,
	1645, 0, 1646, 0, 0, 0, 0, 0, 0, 1616,
	1617, 0, 0, 0, 833, 0, 0, 871, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1637, 0, 0,
	0, 0, 831, 0, 0, 0, 861, 862, 1622, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1647, 0, 0, 859, 0, 0, 1174,
	0, 0, 0, 870, 855, 0, 848, 846, 0, 851,
	1636, 0, 0, 0, 0, 852, 1174, 0, 825, 0,
	867, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	826, 0, 0, 0, 0, 1293, 0, 0, 0, 0,
	0, 853, 0, 0, 0, 0, 850, 0, 0, 0,
	0, 0, 1628, 0, 0, 0, 868, 0, 0, 0,
	0, 0, 0, 0, 856, 0, 0, 0, 0, 0,
	0, 0, 1623, 0, 0, 0, 0, 1293, 0, 0,
	0, 0, 0, 0, 0, 858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 860, 0, 0,
	1293, 1293, 1293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1174, 0, 0, 0,
	0, 0, 0, 0, 1173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1173, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1638,
	0, 0, 0, 1613, 1614, 1620, 1641, 1619, 1615, 0,
	1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609, 0,
	0, 0, 0, 0, 0, 0, 0, 2809, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1173, 0, 1173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1294, 1294, 1294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1294, 0,
	0, 0, 0, 0, 0, 1173, 0, 0, 0, 0,
	0, 0, 1173, 0, 0, 0, 1174, 0, 0, 1599,
	1600, 0, 1632, 1633, 1634, 1642, 1643, 1644, 0, 0,
	0, 0, 0, 0, 0, 1293, 1293, 0, 1174, 0,
	1635, 1630, 0, 0, 0, 0, 0, 0, 1602, 0,
	0, 0, 0, 0, 0, 1648, 0, 0, 0, 0,
	0, 0, 1173, 0, 0, 0, 0, 1293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1621, 0, 0, 0, 0, 0, 0, 0, 1618, 0,
	0, 0, 0, 1293, 1293, 1293, 0, 0, 0, 0,
	0, 0, 0, 0, 1173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1174, 0,
	1174, 0, 0, 0, 1624, 1625, 1626, 1627, 0, 0,
	0, 0, 0, 0, 1607, 0, 0, 0, 0, 0,
	0, 1174, 0, 0, 0, 1173, 0, 1293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1173, 0, 0, 1639, 0, 0, 1649, 0, 0, 0,
	0, 0, 1629, 1631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1174, 1645, 0,
	1646, 0, 0, 0, 1174, 0, 0, 1616, 1617, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1173, 0, 0, 0, 1637, 0, 1294, 1294, 1293,
	1293, 0, 0, 0, 0, 0, 1622, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1174, 0, 0, 0, 0, 1294,
	0, 1647, 0, 0, 0, 1173, 0, 0, 1293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1636, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1294, 1294, 1294, 0, 0,
	0, 0, 0, 0, 0, 0, 1174, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1628, 0, 0, 0, 0, 0, 1174, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1640, 0, 1174, 0, 1294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1293, 1293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1174, 0, 0, 0, 0, 0, 1293,
	0, 1294, 1294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1638, 0, 0,
	0, 1613, 1614, 1620, 1641, 1619, 1615, 0, 1612, 1610,
	1611, 1603, 1604, 1605, 1606, 1608, 1609, 1174, 0, 0,
	1294, 0, 0, 0, 0, 2806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1171, 0, 1294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1294, 1294, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 1177, 253, 254, 1178, 1179,
	1180, 1294, 1181, 529, 1182, 1183, 1184, 1185, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 1186, 534, 264, 265, 266, 267, 268, 1187,
	1188, 0, 269, 535, 536, 537, 1189, 270, 271, 538,
	1190, 1257, 1191, 272, 273, 274, 275, 276, 277, 278,
	0, 1192, 280, 281, 282, 279, 1193, 283, 0, 284,
	285, 286, 1194, 287, 1049, 288, 289, 1195, 1196, 1198,
	1197, 1199, 1200, 1201, 290, 291, 292, 293, 0, 294,
	539, 540, 1202, 298, 295, 296, 1203, 299, 297, 1204,
	300, 301, 302, 1205, 1206, 303, 304, 305, 1207, 306,
	307, 1208, 308, 309, 310, 1209, 311, 312, 541, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 542,
	543, 1210, 244, 1211, 0, 0, 0, 0, 324, 325,
	326, 544, 0, 0, 0, 327, 1212, 328, 1213, 1214,
	1050, 329, 330, 545, 546, 331, 332, 1215, 333, 547,
	1216, 548, 334, 1217, 335, 336, 337, 338, 339, 549,
	550, 551, 396, 1052, 340, 341, 1218, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 1219, 1051,
	348, 552, 553, 1220, 554, 1221, 350, 351, 1053, 555,
	1054, 352, 353, 354, 1055, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 1222, 362, 364, 363, 1223,
	365, 556, 1056, 366, 367, 1057, 1224, 368, 369, 370,
	1225, 1226, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1058, 387, 388, 389, 392, 393, 391, 1059, 390, 1227,
	246, 1060, 394, 1228, 557, 395, 558, 397, 398, 1229,
	0, 399, 0, 1230, 1231, 401, 402, 403, 1232, 1233,
	404, 405, 559, 1061, 406, 1062, 560, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 1234, 417,
	418, 561, 562, 563, 419, 564, 420, 421, 1235, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 565, 431,
	430, 432, 1236, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 1237,
	443, 444, 445, 1063, 446, 447, 448, 449, 566, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 1238, 466, 467, 465, 468, 469, 470, 1239,
	471, 455, 456, 472, 473, 1064, 474, 475, 476, 477,
	478, 479, 567, 0, 480, 1240, 481, 482, 483, 484,
	457, 485, 490, 568, 486, 487, 488, 489, 569, 1241,
	492, 493, 0, 491, 1242, 494, 495, 496, 497, 498,
	499, 318, 500, 1243, 501, 570, 571, 572, 573, 1244,
	508, 1245, 502, 503, 574, 504, 575, 1246, 505, 506,
	507, 0, 509, 510, 1247, 1248, 511, 512, 513, 515,
	516, 514, 517, 1249, 518, 1250, 0, 519, 520, 521,
	576, 577, 578, 1251, 523, 522, 579, 1252, 1253, 1254,
	1255, 524, 525, 580, 526, 527, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1171, 0, 0, 0, 0, 0, 0, 0, 2392, 0,
	0, 0, 0, 0, 0, 0, 2393, 247, 248, 249,
	250, 251, 252, 1177, 253, 254, 1178, 1179, 1180, 0,
	1181, 529, 1182, 1183, 1184, 1185, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	1186, 534, 264, 265, 266, 267, 268, 1187, 1188, 0,
	269, 535, 536, 537, 1189, 270, 271, 538, 1190, 1257,
	1191, 272, 273, 274, 275, 276, 277, 278, 0, 1192,
	280, 281, 282, 279, 1193, 283, 0, 284, 285, 286,
	1194, 287, 1049, 288, 289, 1195, 1196, 1198, 1197, 1199,
	1200, 1201, 290, 291, 292, 293, 0, 294, 539, 540,
	1202, 298, 295, 296, 1203, 299, 297, 1204, 300, 301,
	302, 1205, 1206, 303, 304, 305, 1207, 306, 307, 1208,
	308, 309, 310, 1209, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 1210,
	244, 1211, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 1212, 328, 1213, 1214, 1050, 329,
	330, 545, 546, 331, 332, 1215, 333, 547, 1216, 548,
	334, 1217, 335, 336, 337, 338, 339, 549, 550, 551,
	396, 1052, 340, 341, 1218, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 1219, 1051, 348, 552,
	553, 1220, 554, 1221, 350, 351, 1053, 555, 1054, 352,
	353, 354, 1055, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 1222, 362, 364, 363, 1223, 365, 556,
	1056, 366, 367, 1057, 1224, 368, 369, 370, 1225, 1226,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1058, 387,
	388, 389, 392, 393, 391, 1059, 390, 1227, 246, 1060,
	394, 1228, 557, 395, 558, 397, 398, 1229, 0, 399,
	0, 1230, 1231, 401, 402, 403, 1232, 1233, 404, 405,
	559, 1061, 406, 1062, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 1234, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 1235, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	1236, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 1237, 443, 444,
	445, 1063, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	1238, 466, 467, 465, 468, 469, 470, 1239, 471, 455,
	456, 472, 473, 1064, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 1240, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 1241, 492, 493,
	0, 491, 1242, 494, 495, 496, 497, 498, 499, 318,
	500, 1243, 501, 570, 571, 572, 573, 1244, 508, 1245,
	502, 503, 574, 504, 575, 1246, 505, 506, 507, 0,
	509, 510, 1247, 1248, 511, 512, 513, 515, 516, 514,
	517, 1249, 518, 1250, 0, 519, 520, 521, 576, 577,
	578, 1251, 523, 522, 579, 1252, 1253, 1254, 1255, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1171, 0, 0, 0,
	0, 3200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3202, 247, 248, 249, 250, 251, 252, 1177,
	253, 254, 1178, 1179, 1180, 0, 1181, 529, 1182, 1183,
	1184, 1185, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 1186, 534, 264, 265,
	266, 267, 268, 1187, 1188, 0, 269, 535, 536, 537,
	1189, 270, 271, 538, 1190, 1257, 1191, 272, 273, 274,
	275, 276, 277, 278, 0, 1192, 280, 281, 282, 279,
	1193, 283, 0, 284, 285, 286, 1194, 287, 1049, 288,
	289, 1195, 1196, 1198, 1197, 1199, 1200, 1201, 290, 291,
	292, 293, 0, 294, 539, 540, 1202, 298, 295, 296,
	1203, 299, 297, 1204, 300, 301, 302, 1205, 1206, 303,
	304, 305, 1207, 306, 307, 1208, 308, 309, 310, 1209,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 1210, 244, 1211, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	1212, 328, 1213, 1214, 1050, 329, 330, 545, 546, 331,
	332, 1215, 333, 547, 1216, 548, 334, 1217, 335, 336,
	337, 338, 339, 549, 550, 551, 396, 1052, 340, 341,
	1218, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 1219, 1051, 348, 552, 553, 1220, 554, 1221,
	350, 351, 1053, 555, 1054, 352, 353, 354, 1055, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 1222,
	362, 364, 363, 1223, 365, 556, 1056, 366, 367, 1057,
	1224, 368, 369, 370, 1225, 1226, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1058, 387, 388, 389, 392, 393,
	391, 1059, 390, 1227, 246, 1060, 394, 1228, 557, 395,
	558, 397, 398, 1229, 0, 399, 0, 1230, 1231, 401,
	402, 403, 1232, 1233, 404, 405, 559, 1061, 406, 1062,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 1234, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 1235, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 1236, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 1237, 443, 444, 445, 1063, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 1238, 466, 467, 465,
	468, 469, 470, 1239, 471, 455, 456, 472, 473, 1064,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 1240,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 1241, 492, 493, 0, 491, 1242, 494,
	495, 496, 497, 498, 499, 318, 500, 1243, 501, 570,
	571, 572, 573, 1244, 508, 1245, 502, 503, 574, 504,
	575, 1246, 505, 506, 507, 0, 509, 510, 1247, 1248,
	511, 512, 513, 515, 516, 514, 517, 1249, 518, 1250,
	0, 519, 520, 521, 576, 577, 578, 1251, 523, 522,
	579, 1252, 1253, 1254, 1255, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 0, 0, 1171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3539, 247, 248, 249, 250, 251, 252, 1177,
	253, 254, 1178, 1179, 1180, 0, 1181, 529, 1182, 1183,
	1184, 1185, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 1186, 534, 264, 265,
	266, 267, 268, 1187, 1188, 0, 269, 535, 536, 537,
	1189, 270, 271, 538, 1190, 1257, 1191, 272, 273, 274,
	275, 276, 277, 278, 0, 1192, 280, 281, 282, 279,
	1193, 283, 0, 284, 285, 286, 1194, 287, 1049, 288,
	289, 1195, 1196, 1198, 1197, 1199, 1200, 1201, 290, 291,
	292, 293, 0, 294, 539, 540, 1202, 298, 295, 296,
	1203, 299, 297, 1204, 300, 301, 302, 1205, 1206, 303,
	304, 305, 1207, 306, 307, 1208, 308, 309, 310, 1209,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 1210, 244, 1211, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	1212, 328, 1213, 1214, 1050, 329, 330, 545, 546, 331,
	332, 1215, 333, 547, 1216, 548, 334, 1217, 335, 336,
	337, 338, 339, 549, 550, 551, 396, 1052, 340, 341,
	1218, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 1219, 1051, 348, 552, 553, 1220, 554, 1221,
	350, 351, 1053, 555, 1054, 352, 353, 354, 1055, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 1222,
	362, 364, 363, 1223, 365, 556, 1056, 366, 367, 1057,
	1224, 368, 369, 370, 1225, 1226, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1058, 387, 388, 389, 392, 393,
	391, 1059, 390, 1227, 246, 1060, 394, 1228, 557, 395,
	558, 397, 398, 1229, 0, 399, 0, 1230, 1231, 401,
	402, 403, 1232, 1233, 404, 405, 559, 1061, 406, 1062,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 1234, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 1235, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 1236, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 1237, 443, 444, 445, 1063, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 1238, 466, 467, 465,
	468, 469, 470, 1239, 471, 455, 456, 472, 473, 1064,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 1240,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 1241, 492, 493, 0, 491, 1242, 494,
	495, 496, 497, 498, 499, 318, 500, 1243, 501, 570,
	571, 572, 573, 1244, 508, 1245, 502, 503, 574, 504,
	575, 1246, 505, 506, 507, 0, 509, 510, 1247, 1248,
	511, 512, 513, 515, 516, 514, 517, 1249, 518, 1250,
	0, 519, 520, 521, 576, 577, 578, 1251, 523, 522,
	579, 1252, 1253, 1254, 1255, 524, 525, 580, 526, 527,
	528, 1171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3703, 247, 248,
	249, 250, 251, 252, 1177, 253, 254, 1178, 1179, 1180,
	0, 1181, 529, 1182, 1183, 1184, 1185, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 1186, 534, 264, 265, 266, 267, 268, 1187, 1188,
	0, 269, 535, 536, 537, 1189, 270, 271, 538, 1190,
	1257, 1191, 272, 273, 274, 275, 276, 277, 278, 0,
	1192, 280, 281, 282, 279, 1193, 283, 0, 284, 285,
	286, 1194, 287, 1049, 288, 289, 1195, 1196, 1198, 1197,
	1199, 1200, 1201, 290, 291, 292, 293, 0, 294, 539,
	540, 1202, 298, 295, 296, 1203, 299, 297, 1204, 300,
	301, 302, 1205, 1206, 303, 304, 305, 1207, 306, 307,
	1208, 308, 309, 310, 1209, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	1210, 244, 1211, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 1212, 328, 1213, 1214, 1050,
	329, 330, 545, 546, 331, 332, 1215, 333, 547, 1216,
	548, 334, 1217, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 1052, 340, 341, 1218, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 1219, 1051, 348,
	552, 553, 1220, 554, 1221, 350, 351, 1053, 555, 1054,
	352, 353, 354, 1055, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 1222, 362, 364, 363, 1223, 365,
	556, 1056, 366, 367, 1057, 1224, 368, 369, 370, 1225,
	1226, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1058,
	387, 388, 389, 392, 393, 391, 1059, 390, 1227, 246,
	1060, 394, 1228, 557, 395, 558, 397, 398, 1229, 0,
	399, 0, 1230, 1231, 401, 402, 403, 1232, 1233, 404,
	405, 559, 1061, 406, 1062, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 1234, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 1235, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 1236, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 1237, 443,
	444, 445, 1063, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 1238, 466, 467, 465, 468, 469, 470, 1239, 471,
	455, 456, 472, 473, 1064, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 1240, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 1241, 492,
	493, 0, 491, 1242, 494, 495, 496, 497, 498, 499,
	318, 500, 1243, 501, 570, 571, 572, 573, 1244, 508,
	1245, 502, 503, 574, 504, 575, 1246, 505, 506, 507,
	0, 509, 510, 1247, 1248, 511, 512, 513, 515, 516,
	514, 517, 1249, 518, 1250, 0, 519, 520, 521, 576,
	577, 578, 1251, 523, 522, 579, 1252, 1253, 1254, 1255,
	524, 525, 580, 526, 527, 528, 1171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3598, 247, 248, 249, 250, 251, 252, 1177,
	253, 254, 1178, 1179, 1180, 0, 1181, 529, 1182, 1183,
	1184, 1185, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 1186, 534, 264, 265,
	266, 267, 268, 1187, 1188, 0, 269, 535, 536, 537,
	1189, 270, 271, 538, 1190, 1257, 1191, 272, 273, 274,
	275, 276, 277, 278, 0, 1192, 280, 281, 282, 279,
	1193, 283, 0, 284, 285, 286, 1194, 287, 1049, 288,
	289, 1195, 1196, 1198, 1197, 1199, 1200, 1201, 290, 291,
	292, 293, 0, 294, 539, 540, 1202, 298, 295, 296,
	1203, 299, 297, 1204, 300, 301, 302, 1205, 1206, 303,
	304, 305, 1207, 306, 307, 1208, 308, 309, 310, 1209,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 1210, 244, 1211, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	1212, 328, 1213, 1214, 1050, 329, 330, 545, 546, 331,
	332, 1215, 333, 547, 1216, 548, 334, 1217, 335, 336,
	337, 338, 339, 549, 550, 551, 396, 1052, 340, 341,
	1218, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 1219, 1051, 348, 552, 553, 1220, 554, 1221,
	350, 351, 1053, 555, 1054, 352, 353, 354, 1055, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 1222,
	362, 364, 363, 1223, 365, 556, 1056, 366, 367, 1057,
	1224, 368, 369, 370, 1225, 1226, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1058, 387, 388, 389, 392, 393,
	391, 1059, 390, 1227, 246, 1060, 394, 1228, 557, 395,
	558, 397, 398, 1229, 0, 399, 0, 1230, 1231, 401,
	402, 403, 1232, 1233, 404, 405, 559, 1061, 406, 1062,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 1234, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 1235, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 1236, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 1237, 443, 444, 445, 1063, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 1238, 466, 467, 465,
	468, 469, 470, 1239, 471, 455, 456, 472, 473, 1064,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 1240,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 1241, 492, 493, 0, 491, 1242, 494,
	495, 496, 497, 498, 499, 318, 500, 1243, 501, 570,
	571, 572, 573, 1244, 508, 1245, 502, 503, 574, 504,
	575, 1246, 505, 506, 507, 0, 509, 510, 1247, 1248,
	511, 512, 513, 515, 516, 514, 517, 1249, 518, 1250,
	0, 519, 520, 521, 576, 577, 578, 1251, 523, 522,
	579, 1252, 1253, 1254, 1255, 524, 525, 580, 526, 527,
	528, 1171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3469, 247, 248,
	249, 250, 251, 252, 1177, 253, 254, 1178, 1179, 1180,
	0, 1181, 529, 1182, 1183, 1184, 1185, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 1186, 534, 264, 265, 266, 267, 268, 1187, 1188,
	0, 269, 535, 536, 537, 1189, 270, 271, 538, 1190,
	1257, 1191, 272, 273, 274, 275, 276, 277, 278, 0,
	1192, 280, 281, 282, 279, 1193, 283, 0, 284, 285,
	286, 1194, 287, 1049, 288, 289, 1195, 1196, 1198, 1197,
	1199, 1200, 1201, 290, 291, 292, 293, 0, 294, 539,
	540, 1202, 298, 295, 296, 1203, 299, 297, 1204, 300,
	301, 302, 1205, 1206, 303, 304, 305, 1207, 306, 307,
	1208, 308, 309, 310, 1209, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	1210, 244, 1211, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 1212, 328, 1213, 1214, 1050,
	329, 330, 545, 546, 331, 332, 1215, 333, 547, 1216,
	548, 334, 1217, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 1052, 340, 341, 1218, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 1219, 1051, 348,
	552, 553, 1220, 554, 1221, 350, 351, 1053, 555, 1054,
	352, 353, 354, 1055, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 1222, 362, 364, 363, 1223, 365,
	556, 1056, 366, 367, 1057, 1224, 368, 369, 370, 1225,
	1226, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1058,
	387, 388, 389, 392, 393, 391, 1059, 390, 1227, 246,
	1060, 394, 1228, 557, 395, 558, 397, 398, 1229, 0,
	399, 0, 1230, 1231, 401, 402, 403, 1232, 1233, 404,
	405, 559, 1061, 406, 1062, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 1234, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 1235, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 1236, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 1237, 443,
	444, 445, 1063, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 1238, 466, 467, 465, 468, 469, 470, 1239, 471,
	455, 456, 472, 473, 1064, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 1240, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 1241, 492,
	493, 0, 491, 1242, 494, 495, 496, 497, 498, 499,
	318, 500, 1243, 501, 570, 571, 572, 573, 1244, 508,
	1245, 502, 503, 574, 504, 575, 1246, 505, 506, 507,
	0, 509, 510, 1247, 1248, 511, 512, 513, 515, 516,
	514, 517, 1249, 518, 1250, 0, 519, 520, 521, 576,
	577, 578, 1251, 523, 522, 579, 1252, 1253, 1254, 1255,
	524, 525, 580, 526, 527, 528, 1171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3218, 247, 248, 249, 250, 251, 252, 1177,
	253, 254, 1178, 1179, 1180, 0, 1181, 529, 1182, 1183,
	1184, 1185, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 1186, 534, 264, 265,
	266, 267, 268, 1187, 1188, 0, 269, 535, 536, 537,
	1189, 270, 271, 538, 1190, 1257, 1191, 272, 273, 274,
	275, 276, 277, 278, 0, 1192, 280, 281, 282, 279,
	1193, 283, 0, 284, 285, 286, 1194, 287, 1049, 288,
	289, 1195, 1196, 1198, 1197, 1199, 1200, 1201, 290, 291,
	292, 293, 0, 294, 539, 540, 1202, 298, 295, 296,
	1203, 299, 297, 1204, 300, 301, 302, 1205, 1206, 303,
	304, 305, 1207, 306, 307, 1208, 308, 309, 310, 1209,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 1210, 244, 1211, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	1212, 328, 1213, 1214, 1050, 329, 330, 545, 546, 331,
	332, 1215, 333, 547, 1216, 548, 334, 1217, 335, 336,
	337, 338, 339, 549, 550, 551, 396, 1052, 340, 341,
	1218, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 1219, 1051, 348, 552, 553, 1220, 554, 1221,
	350, 351, 1053, 555, 1054, 352, 353, 354, 1055, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 1222,
	362, 364, 363, 1223, 365, 556, 1056, 366, 367, 1057,
	1224, 368, 369, 370, 1225, 1226, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1058, 387, 388, 389, 392, 393,
	391, 1059, 390, 1227, 246, 1060, 394, 1228, 557, 395,
	558, 397, 398, 1229, 0, 399, 0, 1230, 1231, 401,
	402, 403, 1232, 1233, 404, 405, 559, 1061, 406, 1062,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 1234, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 1235, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 1236, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 1237, 443, 444, 445, 1063, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 1238, 466, 467, 465,
	468, 469, 470, 1239, 471, 455, 456, 472, 473, 1064,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 1240,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 1241, 492, 493, 0, 491, 1242, 494,
	495, 496, 497, 498, 499, 318, 500, 1243, 501, 570,
	571, 572, 573, 1244, 508, 1245, 502, 503, 574, 504,
	575, 1246, 505, 506, 507, 0, 509, 510, 1247, 1248,
	511, 512, 513, 515, 516, 514, 517, 1249, 518, 1250,
	0, 519, 520, 521, 576, 577, 578, 1251, 523, 522,
	579, 1252, 1253, 1254, 1255, 524, 525, 580, 526, 527,
	528, 1171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3051, 247, 248,
	249, 250, 251, 252, 1177, 253, 254, 1178, 1179, 1180,
	0, 1181, 529, 1182, 1183, 1184, 1185, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 1186, 534, 264, 265, 266, 267, 268, 1187, 1188,
	0, 269, 535, 536, 537, 1189, 270, 271, 538, 1190,
	1257, 1191, 272, 273, 274, 275, 276, 277, 278, 0,
	1192, 280, 281, 282, 279, 1193, 283, 0, 284, 285,
	286, 1194, 287, 1049, 288, 289, 1195, 1196, 1198, 1197,
	1199, 1200, 1201, 290, 291, 292, 293, 0, 294, 539,
	540, 1202, 298, 295, 296, 1203, 299, 297, 1204, 300,
	301, 302, 1205, 1206, 303, 304, 305, 1207, 306, 307,
	1208, 308, 309, 310, 1209, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	1210, 244, 1211, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 1212, 328, 1213, 1214, 1050,
	329, 330, 545, 546, 331, 332, 1215, 333, 547, 1216,
	548, 334, 1217, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 1052, 340, 341, 1218, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 1219, 1051, 348,
	552, 553, 1220, 554, 1221, 350, 351, 1053, 555, 1054,
	352, 353, 354, 1055, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 1222, 362, 364, 363, 1223, 365,
	556, 1056, 366, 367, 1057, 1224, 368, 369, 370, 1225,
	1226, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1058,
	387, 388, 389, 392, 393, 391, 1059, 390, 1227, 246,
	1060, 394, 1228, 557, 395, 558, 397, 398, 1229, 0,
	399, 0, 1230, 1231, 401, 402, 403, 1232, 1233, 404,
	405, 559, 1061, 406, 1062, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 1234, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 1235, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 1236, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 1237, 443,
	444, 445, 1063, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 1238, 466, 467, 465, 468, 469, 470, 1239, 471,
	455, 456, 472, 473, 1064, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 1240, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 1241, 492,
	493, 0, 491, 1242, 494, 495, 496, 497, 498, 499,
	318, 500, 1243, 501, 570, 571, 572, 573, 1244, 508,
	1245, 502, 503, 574, 504, 575, 1246, 505, 506, 507,
	0, 509, 510, 1247, 1248, 511, 512, 513, 515, 516,
	514, 517, 1249, 518, 1250, 0, 519, 520, 521, 576,
	577, 578, 1251, 523, 522, 579, 1252, 1253, 1254, 1255,
	524, 525, 580, 526, 527, 528, 1171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2275, 247, 248, 249, 250, 251, 252, 1177,
	253, 254, 1178, 1179, 1180, 0, 1181, 529, 1182, 1183,
	1184, 1185, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 1186, 534, 264, 265,
	266, 267, 268, 1187, 1188, 0, 269, 535, 536, 537,
	1189, 270, 271, 538, 1190, 1257, 1191, 272, 273, 274,
	275, 276, 277, 278, 0, 1192, 280, 281, 282, 279,
	1193, 283, 0, 284, 285, 286, 1194, 287, 1049, 288,
	289, 1195, 1196, 1198, 1197, 1199, 1200, 1201, 290, 291,
	292, 293, 0, 294, 539, 540, 1202, 298, 295, 296,
	1203, 299, 297, 1204, 300, 301, 302, 1205, 1206, 303,
	304, 305, 1207, 306, 307, 1208, 308, 309, 310, 1209,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 1210, 244, 1211, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	1212, 328, 1213, 1214, 1050, 329, 330, 545, 546, 331,
	332, 1215, 333, 547, 1216, 548, 334, 1217, 335, 336,
	337, 338, 339, 549, 550, 551, 396, 1052, 340, 341,
	1218, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 1219, 1051, 348, 552, 553, 1220, 554, 1221,
	350, 351, 1053, 555, 1054, 352, 353, 354, 1055, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 1222,
	362, 364, 363, 1223, 365, 556, 1056, 366, 367, 1057,
	1224, 368, 369, 370, 1225, 1226, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1058, 387, 388, 389, 392, 393,
	391, 1059, 390, 1227, 246, 1060, 394, 1228, 557, 395,
	558, 397, 398, 1229, 0, 399, 0, 1230, 1231, 401,
	402, 403, 1232, 1233, 404, 405, 559, 1061, 406, 1062,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 1234, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 1235, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 1236, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 1237, 443, 444, 445, 1063, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 1238, 466, 467, 465,
	468, 469, 470, 1239, 471, 455, 456, 472, 473, 1064,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 1240,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 1241, 492, 493, 0, 491, 1242, 494,
	495, 496, 497, 498, 499, 318, 500, 1243, 501, 570,
	571, 572, 573, 1244, 508, 1245, 502, 503, 574, 504,
	575, 1246, 505, 506, 507, 0, 509, 510, 1247, 1248,
	511, 512, 513, 515, 516, 514, 517, 1249, 518, 1250,
	0, 519, 520, 521, 576, 577, 578, 1251, 523, 522,
	579, 1252, 1253, 1254, 1255, 524, 525, 580, 526, 527,
	528, 1269, 0, 1171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1958, 0, 0,
	247, 248, 249, 250, 251, 252, 1177, 253, 254, 1178,
	1179, 1180, 0, 1181, 529, 1182, 1183, 1184, 1185, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 1186, 534, 264, 265, 266, 267, 268,
	1187, 1188, 0, 269, 535, 536, 537, 1189, 270, 271,
	538, 1190, 1257, 1191, 272, 273, 274, 275, 276, 277,
	278, 0, 1192, 280, 281, 282, 279, 1193, 283, 0,
	284, 285, 286, 1194, 287, 1049, 288, 289, 1195, 1196,
	1198, 1197, 1199, 1200, 1201, 290, 291, 292, 293, 0,
	294, 539, 540, 1202, 298, 295, 296, 1203, 299, 297,
	1204, 300, 301, 302, 1205, 1206, 303, 304, 305, 1207,
	306, 307, 1208, 308, 309, 310, 1209, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 1210, 244, 1211, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 1212, 328, 1213,
	1214, 1050, 329, 330, 545, 546, 331, 332, 1215, 333,
	547, 1216, 548, 334, 1217, 335, 336, 337, 338, 339,
	549, 550, 551, 396, 1052, 340, 341, 1218, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 1219,
	1051, 348, 552, 553, 1220, 554, 1221, 350, 351, 1053,
	555, 1054, 352, 353, 354, 1055, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 1222, 362, 364, 363,
	1223, 365, 556, 1056, 366, 367, 1057, 1224, 368, 369,
	370, 1225, 1226, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1058, 387, 388, 389, 392, 393, 391, 1059, 390,
	1227, 246, 1060, 394, 1228, 557, 395, 558, 397, 398,
	1229, 0, 399, 0, 1230, 1231, 401, 402, 403, 1232,
	1233, 404, 405, 559, 1061, 406, 1062, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 1234,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 1235,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 1236, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	1237, 443, 444, 445, 1063, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 1238, 466, 467, 465, 468, 469, 470,
	1239, 471, 455, 456, 472, 473, 1064, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 1240, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	1241, 492, 493, 0, 491, 1242, 494, 495, 496, 497,
	498, 499, 318, 500, 1243, 501, 570, 571, 572, 573,
	1244, 508, 1245, 502, 503, 574, 504, 575, 1246, 505,
	506, 507, 0, 509, 510, 1247, 1248, 511, 512, 513,
	515, 516, 514, 517, 1249, 518, 1250, 0, 519, 520,
	521, 576, 577, 578, 1251, 523, 522, 579, 1252, 1253,
	1254, 1255, 524, 525, 580, 526, 527, 528, 1168, 0,
	1171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 1177, 253, 254, 1178, 1179, 1180, 0,
	1181, 529, 1182, 1183, 1184, 1185, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	1186, 534, 264, 265, 266, 267, 268, 1187, 1188, 0,
	269, 535, 536, 537, 1189, 270, 271, 538, 1190, 1257,
	1191, 272, 273, 274, 275, 276, 277, 278, 0, 1192,
	280, 281, 282, 279, 1193, 283, 0, 284, 285, 286,
	1194, 287, 1049, 288, 289, 1195, 1196, 1198, 1197, 1199,
	1200, 1201, 290, 291, 292, 293, 0, 294, 539, 540,
	1202, 298, 295, 296, 1203, 299, 297, 1204, 300, 301,
	302, 1205, 1206, 303, 304, 305, 1207, 306, 307, 1208,
	308, 309, 310, 1209, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 1210,
	244, 1211, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 1212, 328, 1213, 1214, 1050, 329,
	330, 545, 546, 331, 332, 1215, 333, 547, 1216, 548,
	334, 1217, 335, 336, 337, 338, 339, 549, 550, 551,
	396, 1052, 340, 341, 1218, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 1219, 1051, 348, 552,
	553, 1220, 554, 1221, 350, 351, 1053, 555, 1054, 352,
	353, 354, 1055, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 1222, 362, 364, 363, 1223, 365, 556,
	1056, 366, 367, 1057, 1224, 368, 369, 370, 1225, 1226,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1058, 387,
	388, 389, 392, 393, 391, 1059, 390, 1227, 246, 1060,
	394, 1228, 557, 395, 558, 397, 398, 1229, 0, 399,
	0, 1230, 1231, 401, 402, 403, 1232, 1233, 404, 405,
	559, 1061, 406, 1062, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 1234, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 1235, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	1236, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 1237, 443, 444,
	445, 1063, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	1238, 466, 467, 465, 468, 469, 470, 1239, 471, 455,
	456, 472, 473, 1064, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 1240, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 1241, 492, 493,
	0, 491, 1242, 494, 495, 496, 497, 498, 499, 318,
	500, 1243, 501, 570, 571, 572, 573, 1244, 508, 1245,
	502, 503, 574, 504, 575, 1246, 505, 506, 507, 0,
	509, 510, 1247, 1248, 511, 512, 513, 515, 516, 514,
	517, 1249, 518, 1250, 0, 519, 520, 521, 576, 577,
	578, 1251, 523, 522, 579, 1252, 1253, 1254, 1255, 524,
	525, 580, 526, 527, 528, 1171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 1177, 253,
	254, 1178, 1179, 1180, 0, 1181, 529, 1182, 1183, 1184,
	1185, 255, 256, 258, 257, 259, 260, 261, 530, 531,
	0, 262, 532, 263, 533, 1186, 534, 264, 265, 266,
	267, 268, 1187, 1188, 0, 269, 535, 536, 537, 1189,
	270, 271, 538, 1190, 1257, 1191, 272, 273, 274, 275,
	276, 277, 278, 0, 1192, 280, 281, 282, 279, 1193,
	283, 0, 284, 285, 286, 1194, 287, 1049, 288, 289,
	1195, 1196, 1198, 1197, 1199, 1200, 1201, 290, 291, 292,
	293, 0, 294, 539, 540, 1202, 298, 295, 296, 1203,
	299, 297, 1204, 300, 301, 302, 1205, 1206, 303, 304,
	305, 1207, 306, 307, 1208, 308, 309, 310, 1209, 311,
	312, 541, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 542, 543, 1210, 244, 1211, 0, 0, 0,
	0, 324, 325, 326, 544, 0, 0, 0, 327, 1212,
	328, 1213, 1214, 1050, 329, 330, 545, 546, 331, 332,
	1215, 333, 547, 1216, 548, 334, 1217, 335, 336, 337,
	338, 339, 549, 550, 551, 396, 1052, 340, 341, 1218,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 1219, 1051, 348, 552, 553, 1220, 554, 1221, 350,
	351, 1053, 555, 1054, 352, 353, 354, 1055, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 1222, 362,
	364, 363, 1223, 365, 556, 1056, 366, 367, 1057, 1224,
	368, 369, 370, 1225, 1226, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 1058, 387, 388, 389, 392, 393, 391,
	1059, 390, 1227, 246, 1060, 394, 1228, 557, 395, 558,
	397, 398, 1229, 0, 399, 0, 1230, 1231, 401, 402,
	403, 1232, 1233, 404, 405, 559, 1061, 406, 1062, 560,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 1234, 417, 418, 561, 562, 563, 419, 564, 420,
	421, 1235, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 565, 431, 430, 432, 1236, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 1237, 443, 444, 445, 1063, 446, 447, 448,
	449, 566, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 1238, 466, 467, 465, 468,
	469, 470, 1239, 471, 455, 456, 472, 473, 1064, 474,
	475, 476, 477, 478, 479, 567, 0, 480, 1240, 481,
	482, 483, 484, 457, 485, 490, 568, 486, 487, 488,
	489, 569, 1241, 492, 493, 0, 491, 1242, 494, 495,
	496, 497, 498, 499, 318, 500, 1243, 501, 570, 571,
	572, 573, 1244, 508, 1245, 502, 503, 574, 504, 575,
	1246, 505, 506, 507, 0, 509, 510, 1247, 1248, 511,
	512, 513, 515, 516, 514, 517, 1249, 518, 1250, 0,
	519, 520, 521, 576, 577, 578, 1251, 523, 522, 579,
	1252, 1253, 1254, 1255, 524, 525, 580, 526, 527, 528,
	2250, 0, 985, 957, 958, 959, 955, 956, 968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 2247, 253, 254, 0, 0,
	0, 0, 0, 1009, 973, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 1022, 0, 262, 1029,
	263, 1028, 0, 1039, 264, 265, 266, 267, 268, 975,
	1008, 942, 269, 1068, 1069, 537, 0, 270, 271, 1015,
	0, 996, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 1049, 288, 289, 999, 997, 998,
	1005, 1001, 1000, 1004, 290, 291, 292, 293, 1032, 294,
	1026, 1025, 946, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 2248, 0, 303, 1017, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 952, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 1040,
	1041, 964, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 1024, 0, 0, 0, 327, 0, 328, 0, 0,
	1050, 329, 330, 1037, 1038, 331, 332, 0, 333, 1047,
	0, 974, 334, 0, 335, 336, 337, 338, 339, 1010,
	1011, 1014, 396, 1052, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 1051,
	348, 1019, 1020, 0, 980, 0, 350, 351, 1053, 1012,
	1054, 352, 353, 354, 1055, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 1048, 1056, 366, 367, 1057, 0, 368, 369, 370,
	1003, 1002, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1058, 387, 388, 389, 392, 393, 391, 1059, 390, 943,
	246, 1060, 394, 965, 1013, 395, 1027, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 1061, 406, 1062, 1042, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 1043, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 1023, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 1063, 446, 447, 448, 449, 953, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 1006,
	471, 455, 456, 472, 473, 1064, 474, 475, 476, 477,
	478, 479, 1021, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 1067, 486, 487, 488, 489, 1044, 0,
	492, 493, 941, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 1033, 1034, 1035, 1036, 0,
	508, 0, 502, 503, 1045, 504, 1046, 963, 505, 506,
	507, 0, 509, 510, 0, 947, 511, 512, 513, 515,
	516, 514, 517, 1007, 518, 0, 0, 519, 520, 521,
	576, 1030, 1066, 2246, 523, 522, 579, 0, 0, 0,
	0, 524, 525, 580, 526, 527, 528, 944, 0, 0,
	0, 0, 0, 0, 940, 0, 0, 0, 0, 0,
	0, 938, 939, 2249, 0, 0, 0, 0, 0, 0,
	969, 2245, 0, 931, 967, 985, 957, 958, 959, 955,
	956, 968, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1009, 973, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 1022,
	0, 262, 1029, 263, 1028, 0, 1039, 264, 265, 266,
	267, 268, 975, 1008, 942, 269, 1068, 1069, 537, 0,
	270, 271, 1015, 0, 996, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 1049, 288, 289,
	999, 997, 998, 1005, 1001, 1000, 1004, 290, 291, 292,
	293, 1032, 294, 1026, 1025, 946, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 1017,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 952, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 1040, 1041, 964, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 1024, 0, 0, 0, 327, 0,
	328, 0, 0, 1050, 329, 330, 1037, 1038, 331, 332,
	0, 333, 1047, 0, 974, 334, 0, 335, 336, 337,
	338, 339, 1010, 1011, 1014, 396, 1052, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 1051, 348, 1019, 1020, 0, 980, 0, 350,
	351, 1053, 1012, 1054, 352, 353, 354, 1055, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 1048, 1056, 366, 367, 1057, 0,
	368, 369, 370, 1003, 1002, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 1058, 387, 388, 389, 392, 393, 391,
	1059, 390, 943, 246, 1060, 394, 965, 1013, 395, 1027,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 1061, 406, 1062, 1042,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 1043, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 1023, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 1063, 446, 447, 448,
	449, 953, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 208, 466, 467, 465, 468,
	469, 470, 1006, 471, 455, 456, 472, 473, 1064, 474,
	475, 476, 477, 478, 479, 1021, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 1067, 486, 487, 488,
	489, 1044, 0, 492, 493, 941, 491, 210, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 1033, 1034,
	1035, 1036, 0, 508, 0, 502, 503, 1045, 504, 1046,
	963, 505, 506, 507, 0, 509, 510, 0, 947, 511,
	512, 513, 515, 516, 514, 517, 1007, 518, 0, 0,
	519, 520, 521, 1440, 1030, 1066, 0, 523, 522, 579,
	0, 0, 0, 202, 524, 525, 580, 526, 527, 528,
	944, 203, 0, 0, 0, 0, 0, 940, 0, 0,
	0, 0, 0, 0, 938, 939, 985, 957, 958, 959,
	955, 956, 968, 1674, 1672, 0, 0, 967, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 1009, 973, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	1022, 0, 262, 1029, 263, 1028, 0, 1039, 264, 265,
	266, 267, 268, 975, 1008, 942, 269, 1068, 1069, 537,
	0, 270, 271, 1015, 0, 996, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1049, 288,
	289, 999, 997, 998, 1005, 1001, 1000, 1004, 290, 291,
	292, 293, 1032, 294, 1026, 1025, 946, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	1017, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 952, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 1040, 1041, 964, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 1024, 0, 0, 0, 327,
	0, 328, 0, 0, 1050, 329, 330, 1037, 1038, 331,
	332, 0, 333, 1047, 0, 974, 334, 0, 335, 336,
	337, 338, 339, 1010, 1011, 1014, 396, 1052, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 1051, 348, 1019, 1020, 0, 980, 0,
	350, 351, 1053, 1012, 1054, 352, 353, 354, 1055, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 1048, 1056, 366, 367, 1057,
	0, 368, 369, 370, 1003, 1002, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1058, 387, 388, 389, 392, 393,
	391, 1059, 390, 943, 246, 1060, 394, 965, 1013, 395,
	1027, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 1061, 406, 1062,
	1042, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 1043, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 1023, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1063, 446, 447,
	448, 449, 953, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 208, 466, 467, 465,
	468, 469, 470, 1006, 471, 455, 456, 472, 473, 1064,
	474, 475, 476, 477, 478, 479, 1021, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 1067, 486, 487,
	488, 489, 1044, 0, 492, 493, 941, 491, 210, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 1033,
	1034, 1035, 1036, 0, 508, 0, 502, 503, 1045, 504,
	1046, 963, 505, 506, 507, 0, 509, 510, 0, 947,
	511, 512, 513, 515, 516, 514, 517, 1007, 518, 0,
	0, 519, 520, 521, 1440, 1030, 1066, 0, 523, 522,
	579, 0, 0, 0, 202, 524, 525, 580, 526, 527,
	528, 944, 203, 0, 0, 0, 0, 0, 940, 0,
	0, 0, 0, 0, 0, 938, 939, 985, 957, 958,
	959, 955, 956, 968, 1674, 2762, 0, 0, 967, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 1009, 973,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 1022, 0, 262, 1029, 263, 1028, 0, 1039, 264,
	265, 266, 267, 268, 975, 1008, 942, 269, 1068, 1069,
	537, 0, 270, 271, 1015, 0, 996, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 1049,
	288, 289, 999, 997, 998, 1005, 1001, 1000, 1004, 290,
	291, 292, 293, 1032, 294, 1026, 1025, 946, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 1017, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 952, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 1040, 1041, 964, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 1024, 0, 0, 0,
	327, 0, 328, 0, 0, 1050, 329, 330, 1037, 1038,
	331, 332, 0, 333, 1047, 0, 974, 334, 0, 335,
	336, 337, 338, 339, 1010, 1011, 1014, 396, 1052, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 1051, 348, 1019, 1020, 0, 980,
	0, 350, 351, 1053, 1012, 1054, 352, 353, 354, 1055,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 1048, 1056, 366, 367,
	1057, 0, 368, 369, 370, 1003, 1002, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 1058, 387, 388, 389, 392,
	393, 391, 1059, 390, 943, 246, 1060, 394, 965, 1013,
	395, 1027, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 1061, 406,
	1062, 1042, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 1043, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 1023, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 1063, 446,
	447, 448, 449, 953, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 208, 466, 467,
	465, 468, 469, 470, 1006, 471, 455, 456, 472, 473,
	1064, 474, 475, 476, 477, 478, 479, 1021, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 1067, 486,
	487, 488, 489, 1044, 0, 492, 493, 941, 491, 210,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	1033, 1034, 1035, 1036, 0, 508, 0, 502, 503, 1045,
	504, 1046, 963, 505, 506, 507, 0, 509, 510, 0,
	947, 511, 512, 513, 515, 516, 514, 517, 1007, 518,
	0, 0, 519, 520, 521, 1440, 1030, 1066, 0, 523,
	522, 579, 0, 0, 0, 202, 524, 525, 580, 526,
	527, 528, 944, 203, 0, 0, 0, 0, 0, 940,
	0, 0, 0, 0, 0, 0, 938, 939, 985, 957,
	958, 959, 955, 956, 968, 1674, 1672, 0, 0, 967,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 1009,
	973, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 1022, 0, 262, 1029, 263, 1028, 2354, 1039,
	264, 265, 266, 267, 268, 975, 1008, 942, 269, 1068,
	1069, 537, 0, 270, 271, 1015, 0, 996, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1049, 288, 289, 999, 997, 998, 1005, 1001, 1000, 1004,
	290, 291, 292, 293, 1032, 294, 1026, 1025, 946, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 1017, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 952, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1040, 1041, 964, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 1024, 0, 0,
	0, 327, 0, 328, 0, 2359, 1050, 329, 330, 1037,
	1038, 331, 332, 0, 333, 1047, 0, 974, 334, 0,
	335, 336, 337, 338, 339, 1010, 1011, 1014, 396, 1052,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1051, 348, 1019, 1020, 0,
	980, 0, 350, 351, 1053, 1012, 1054, 352, 353, 354,
	1055, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 2355, 365, 1048, 1056, 366,
	367, 1057, 0, 368, 369, 370, 1003, 1002, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1058, 387, 388, 389,
	392, 393, 391, 1059, 390, 943, 246, 1060, 394, 965,
	1013, 395, 1027, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 1061,
	406, 1062, 1042, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 1043,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 1023, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1063,
	446, 447, 448, 449, 953, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 1006, 471, 455, 456, 472,
	473, 1064, 474, 475, 476, 477, 478, 479, 1021, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 1067,
	486, 487, 488, 489, 1044, 0, 492, 493, 941, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 1033, 1034, 1035, 1036, 0, 508, 2356, 502, 503,
	1045, 504, 1046, 963, 505, 506, 507, 0, 509, 510,
	0, 947, 511, 512, 513, 515, 516, 514, 517, 1007,
	518, 0, 0, 519, 520, 521, 576, 1030, 1066, 0,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 944, 0, 0, 0, 0, 0, 0,
	940, 0, 0, 0, 0, 0, 0, 938, 939, 0,
	0, 0, 0, 0, 0, 0, 969, 0, 0, 2295,
	967, 985, 957, 958, 959, 955, 956, 968, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1009, 973, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 1022, 0, 262, 1029, 263,
	1028, 0, 1039, 264, 265, 266, 267, 268, 975, 1008,
	942, 269, 1068, 1069, 537, 0, 270, 271, 1015, 0,
	996, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 1049, 288, 289, 999, 997, 998, 1005,
	1001, 1000, 1004, 290, 291, 292, 293, 1032, 294, 1026,
	1025, 946, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 1017, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 952, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 1040, 1041,
	964, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	1024, 0, 0, 0, 327, 0, 328, 0, 0, 1050,
	329, 330, 1037, 1038, 331, 332, 0, 333, 1047, 0,
	974, 334, 0, 335, 336, 337, 338, 339, 1010, 1011,
	1014, 396, 1052, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 0, 1051, 348,
	1019, 1020, 0, 980, 0, 350, 351, 1053, 1012, 1054,
	352, 353, 354, 1055, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	1048, 1056, 366, 367, 1057, 0, 368, 369, 370, 1003,
	1002, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1058,
	387, 388, 389, 392, 393, 391, 1059, 390, 943, 246,
	1060, 394, 965, 1013, 395, 1027, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 1061, 406, 1062, 1042, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 1043, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 1023, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 1063, 446, 447, 448, 449, 953, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 1006, 471,
	455, 456, 472, 473, 1064, 474, 475, 476, 477, 478,
	479, 1021, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 1067, 486, 487, 488, 489, 1044, 0, 492,
	493, 941, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 1033, 1034, 1035, 1036, 0, 508,
	0, 502, 503, 1045, 504, 1046, 963, 505, 506, 507,
	0, 509, 510, 0, 947, 511, 512, 513, 515, 516,
	514, 517, 1007, 518, 0, 0, 519, 520, 521, 576,
	1030, 1066, 0, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 944, 0, 0, 0,
	0, 0, 0, 940, 0, 0, 0, 0, 0, 0,
	938, 939, 0, 0, 0, 0, 0, 0, 0, 969,
	2293, 0, 2292, 967, 985, 957, 958, 959, 955, 956,
	968, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 1009, 973, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 1022, 0,
	262, 1029, 263, 1028, 0, 1039, 264, 265, 266, 267,
	268, 975, 1008, 942, 269, 1068, 1069, 537, 0, 270,
	271, 1015, 0, 996, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 1049, 288, 289, 999,
	997, 998, 1005, 1001, 1000, 1004, 290, 291, 292, 293,
	1032, 294, 1026, 1025, 946, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 1017, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	952, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 1040, 1041, 964, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 1024, 0, 0, 0, 327, 0, 328,
	0, 0, 1050, 329, 330, 1037, 1038, 331, 332, 0,
	333, 1047, 0, 974, 334, 0, 335, 336, 337, 338,
	339, 1010, 1011, 1014, 396, 1052, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 1051, 348, 1019, 1020, 0, 980, 0, 350, 351,
	1053, 1012, 1054, 352, 353, 354, 1055, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 1048, 1056, 366, 367, 1057, 0, 368,
	369, 370, 1003, 1002, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 1058, 387, 388, 389, 392, 393, 391, 1059,
	390, 943, 246, 1060, 394, 965, 1013, 395, 1027, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 1061, 406, 1062, 1042, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 1043, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	1023, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1063, 446, 447, 448, 449,
	953, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 1006, 471, 455, 456, 472, 473, 1064, 474, 475,
	476, 477, 478, 479, 1021, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 1067, 486, 487, 488, 489,
	1044, 0, 492, 493, 941, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 1033, 1034, 1035,
	1036, 0, 508, 0, 502, 503, 1045, 504, 1046, 963,
	505, 506, 507, 0, 509, 510, 0, 947, 511, 512,
	513, 515, 516, 514, 517, 1007, 518, 0, 0, 519,
	520, 521, 576, 1030, 1066, 0, 523, 522, 579, 0,
	0, 0, 0, 524, 525, 580, 526, 527, 528, 944,
	0, 0, 0, 0, 0, 0, 940, 0, 0, 0,
	0, 0, 0, 938, 939, 0, 0, 0, 0, 0,
	0, 0, 969, 2290, 0, 2289, 967, 985, 957, 958,
	959, 955, 956, 968, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 1009, 973,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 1022, 0, 262, 1029, 263, 1028, 0, 1039, 264,
	265, 266, 267, 268, 975, 1008, 942, 269, 1068, 1069,
	537, 0, 270, 271, 1015, 0, 996, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 1049,
	288, 289, 999, 997, 998, 1005, 1001, 1000, 1004, 290,
	291, 292, 293, 1032, 294, 1026, 1025, 946, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 1017, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 952, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 1040, 1041, 964, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 1024, 0, 0, 0,
	327, 0, 328, 0, 0, 1050, 329, 330, 1037, 1038,
	331, 332, 0, 333, 1047, 0, 974, 334, 0, 335,
	336, 337, 338, 339, 1010, 1011, 1014, 396, 1052, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 1051, 348, 1019, 1020, 0, 980,
	0, 350, 351, 1053, 1012, 1054, 352, 353, 354, 1055,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 1048, 1056, 366, 367,
	1057, 0, 368, 369, 370, 1003, 1002, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 1058, 387, 388, 389, 392,
	393, 391, 1059, 390, 943, 246, 1060, 394, 965, 1013,
	395, 1027, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 1061, 406,
	1062, 1042, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 1043, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 1023, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 1063, 446,
	447, 448, 449, 953, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 1006, 471, 455, 456, 472, 473,
	1064, 474, 475, 476, 477, 478, 479, 1021, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 1067, 486,
	487, 488, 489, 1044, 0, 492, 493, 941, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	1033, 1034, 1035, 1036, 0, 508, 0, 502, 503, 1045,
	504, 1046, 963, 505, 506, 507, 0, 509, 510, 0,
	947, 511, 512, 513, 515, 516, 514, 517, 1007, 518,
	0, 0, 519, 520, 521, 576, 1030, 1066, 0, 523,
	522, 579, 0, 0, 0, 0, 524, 525, 580, 526,
	527, 528, 944, 0, 0, 0, 0, 0, 0, 940,
	0, 0, 0, 0, 0, 0, 938, 939, 0, 0,
	0, 0, 0, 0, 0, 969, 2287, 0, 2286, 967,
	985, 957, 958, 959, 955, 956, 968, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 1009, 973, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 1022, 0, 262, 1029, 263, 1028,
	0, 1039, 264, 265, 266, 267, 268, 975, 1008, 942,
	269, 1068, 1069, 537, 0, 270, 271, 1015, 0, 996,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 1049, 288, 289, 999, 997, 998, 1005, 1001,
	1000, 1004, 290, 291, 292, 293, 1032, 294, 1026, 1025,
	946, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 1017, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 952, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 1040, 1041, 964,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 1024,
	0, 0, 0, 327, 0, 328, 0, 0, 1050, 329,
	330, 1037, 1038, 331, 332, 0, 333, 1047, 0, 974,
	334, 0, 335, 336, 337, 338, 339, 1010, 1011, 1014,
	396, 1052, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 1051, 348, 1019,
	1020, 0, 980, 0, 350, 351, 1053, 1012, 1054, 352,
	353, 354, 1055, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 1048,
	1056, 366, 367, 1057, 0, 368, 369, 370, 1003, 1002,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1058, 387,
	388, 389, 392, 393, 391, 1059, 390, 943, 246, 1060,
	394, 965, 1013, 395, 1027, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 1061, 406, 1062, 1042, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 1043, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 1023, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 1063, 446, 447, 448, 449, 953, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 1006, 471, 455,
	456, 472, 473, 1064, 474, 475, 476, 477, 478, 479,
	1021, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 1067, 486, 487, 488, 489, 1044, 0, 492, 493,
	941, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 1033, 1034, 1035, 1036, 0, 508, 0,
	502, 503, 1045, 504, 1046, 963, 505, 506, 507, 0,
	509, 510, 0, 947, 511, 512, 513, 515, 516, 514,
	517, 1007, 518, 0, 0, 519, 520, 521, 576, 1030,
	1066, 0, 523, 522, 579, 0, 0, 0, 0, 524,
	525, 580, 526, 527, 528, 944, 0, 0, 0, 0,
	0, 0, 940, 0, 0, 0, 0, 0, 0, 938,
	939, 0, 0, 0, 0, 0, 0, 0, 969, 2284,
	0, 1527, 967, 985, 957, 958, 959, 955, 956, 968,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 1009, 973, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 1022, 0, 262,
	1029, 263, 1028, 0, 1039, 264, 265, 266, 267, 268,
	975, 1008, 942, 269, 1068, 1069, 537, 0, 270, 271,
	1015, 0, 996, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 1049, 288, 289, 999, 997,
	998, 1005, 1001, 1000, 1004, 290, 291, 292, 293, 1032,
	294, 1026, 1025, 946, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 1017, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 952,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	1040, 1041, 964, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 1024, 0, 0, 0, 327, 0, 328, 0,
	0, 1050, 329, 330, 1037, 1038, 331, 332, 0, 333,
	1047, 0, 974, 334, 0, 335, 336, 337, 338, 339,
	1010, 1011, 1014, 396, 1052, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 0,
	1051, 348, 1019, 1020, 0, 980, 0, 350, 351, 1053,
	1012, 1054, 352, 353, 354, 1055, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 1048, 1056, 366, 367, 1057, 0, 368, 369,
	370, 1003, 1002, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1058, 387, 388, 389, 392, 393, 391, 1059, 390,
	943, 246, 1060, 394, 965, 1013, 395, 1027, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 1061, 406, 1062, 1042, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 1043, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 1023,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 1063, 446, 447, 448, 449, 953,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	1006, 471, 455, 456, 472, 473, 1064, 474, 475, 476,
	477, 478, 479, 1021, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 1067, 486, 487, 488, 489, 1044,
	0, 492, 493, 941, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 1033, 1034, 1035, 1036,
	0, 508, 0, 502, 503, 1045, 504, 1046, 963, 505,
	506, 507, 0, 509, 510, 0, 947, 511, 512, 513,
	515, 516, 514, 517, 1007, 518, 0, 0, 519, 520,
	521, 576, 1030, 1066, 0, 523, 522, 579, 1526, 0,
	0, 0, 524, 525, 580, 526, 527, 528, 944, 0,
	0, 0, 0, 0, 0, 940, 0, 0, 0, 0,
	0, 0, 938, 939, 0, 0, 0, 0, 0, 0,
	0, 969, 0, 0, 934, 967, 985, 957, 958, 959,
	955, 956, 968, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 1009, 973, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	1022, 0, 262, 1029, 263, 1028, 0, 1039, 264, 265,
	266, 267, 268, 975, 1008, 942, 269, 1068, 1069, 537,
	0, 270, 271, 1015, 0, 996, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1049, 288,
	289, 999, 997, 998, 1005, 1001, 1000, 1004, 290, 291,
	292, 293, 1032, 294, 1026, 1025, 946, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	1017, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 952, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 1040, 1041, 964, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 1024, 0, 0, 0, 327,
	0, 328, 0, 0, 1050, 329, 330, 1037, 1038, 331,
	332, 0, 333, 1047, 0, 974, 334, 0, 335, 336,
	337, 338, 339, 1010, 1011, 1014, 396, 1052, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 1051, 348, 1019, 1020, 0, 980, 0,
	350, 351, 1053, 1012, 1054, 352, 353, 354, 1055, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 1048, 1056, 366, 367, 1057,
	0, 368, 369, 370, 1003, 1002, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1058, 387, 388, 389, 392, 393,
	391, 1059, 390, 943, 246, 1060, 394, 965, 1013, 395,
	1027, 397, 398, 0, 0, 399, 0, 948, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 1061, 406, 1062,
	1042, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 1043, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 1023, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1063, 446, 447,
	448, 449, 953, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 1006, 471, 455, 456, 472, 473, 1064,
	474, 475, 476, 477, 478, 479, 1021, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 1067, 486, 487,
	488, 489, 1044, 0, 492, 493, 941, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 1033,
	1034, 1035, 1036, 0, 508, 0, 502, 503, 1045, 504,
	1046, 963, 505, 506, 507, 0, 509, 510, 0, 947,
	511, 512, 513, 515, 516, 514, 517, 1007, 518, 0,
	0, 519, 520, 521, 576, 1030, 1066, 0, 523, 522,
	579, 0, 0, 0, 0, 524, 525, 580, 526, 527,
	528, 944, 0, 0, 0, 0, 0, 0, 940, 0,
	0, 0, 0, 0, 0, 938, 939, 985, 957, 958,
	959, 955, 956, 968, 969, 0, 0, 0, 967, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 1009, 973,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 1022, 0, 262, 1029, 263, 1028, 0, 1039, 264,
	265, 266, 267, 268, 975, 1008, 942, 269, 1068, 1069,
	537, 0, 270, 271, 1015, 0, 996, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 3967, 286, 0, 287, 1049,
	288, 289, 999, 997, 998, 1005, 1001, 1000, 1004, 290,
	291, 292, 293, 1032, 294, 1026, 1025, 946, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 1017, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 952, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 1040, 1041, 964, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 1024, 0, 0, 0,
	327, 0, 328, 0, 0, 1050, 329, 330, 1037, 1038,
	331, 332, 0, 333, 1047, 0, 974, 334, 0, 335,
	336, 337, 338, 339, 1010, 1011, 1014, 396, 1052, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 1051, 348, 1019, 1020, 0, 980,
	0, 350, 351, 1053, 1012, 1054, 352, 353, 354, 1055,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 1048, 1056, 366, 367,
	1057, 0, 368, 369, 370, 1003, 1002, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 1058, 387, 388, 389, 392,
	393, 391, 1059, 390, 943, 246, 1060, 394, 965, 1013,
	395, 1027, 397, 398, 0, 0, 399, 0, 948, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 1061, 406,
	1062, 1042, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 1043, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 1023, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 1063, 446,
	447, 448, 449, 953, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 1006, 471, 455, 456, 472, 473,
	1064, 474, 475, 476, 477, 478, 479, 1021, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 1067, 486,
	487, 488, 489, 1044, 0, 492, 493, 941, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	1033, 1034, 1035, 1036, 0, 508, 0, 502, 503, 1045,
	504, 1046, 963, 505, 506, 507, 0, 509, 510, 0,
	947, 511, 512, 513, 515, 516, 514, 517, 1007, 518,
	0, 0, 519, 520, 521, 576, 1030, 1066, 0, 523,
	522, 579, 0, 0, 0, 0, 524, 525, 580, 526,
	527, 528, 944, 0, 0, 0, 0, 0, 0, 940,
	0, 0, 0, 0, 0, 0, 938, 939, 985, 957,
	958, 959, 955, 956, 968, 969, 0, 0, 0, 967,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 1009,
	973, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 1022, 0, 262, 1029, 263, 1028, 0, 1039,
	264, 265, 266, 267, 268, 975, 1008, 942, 269, 1068,
	1069, 537, 0, 270, 271, 1015, 0, 996, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1049, 288, 289, 999, 997, 998, 1005, 1001, 1000, 1004,
	290, 291, 292, 293, 1032, 294, 1026, 1025, 946, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 1017, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 952, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1040, 1041, 964, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 1024, 0, 0,
	0, 327, 0, 328, 0, 0, 1050, 329, 330, 1037,
	1038, 331, 332, 0, 333, 1047, 0, 974, 334, 0,
	335, 336, 337, 338, 339, 1010, 1011, 1014, 396, 1052,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	2164, 346, 347, 349, 0, 1051, 348, 1019, 1020, 0,
	980, 0, 350, 351, 1053, 1012, 1054, 352, 353, 354,
	1055, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 1048, 1056, 366,
	367, 1057, 0, 368, 369, 370, 1003, 1002, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1058, 387, 388, 389,
	392, 393, 391, 1059, 390, 943, 246, 1060, 394, 965,
	1013, 395, 1027, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 1061,
	406, 1062, 1042, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 1043,
	419, 564, 420, 421, 2163, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 1023, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1063,
	446, 447, 448, 449, 953, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 1006, 471, 455, 456, 472,
	473, 1064, 474, 475, 476, 477, 478, 479, 1021, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 1067,
	486, 487, 488, 489, 1044, 0, 492, 493, 941, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 1033, 1034, 1035, 1036, 0, 508, 0, 502, 503,
	1045, 504, 1046, 963, 505, 506, 507, 0, 509, 510,
	0, 947, 511, 512, 513, 515, 516, 514, 517, 1007,
	518, 0, 0, 519, 520, 521, 576, 1030, 1066, 0,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 944, 0, 0, 0, 0, 0, 0,
	940, 0, 0, 0, 0, 0, 0, 938, 939, 985,
	957, 958, 959, 955, 956, 968, 969, 0, 0, 0,
	967, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1009, 973, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 1022, 0, 262, 1029, 263, 1028, 0,
	1039, 264, 265, 266, 267, 268, 975, 1008, 942, 269,
	1068, 1069, 537, 0, 270, 271, 1015, 0, 996, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 1049, 288, 289, 999, 997, 998, 1005, 1001, 1000,
	1004, 290, 291, 292, 293, 1032, 294, 1026, 1025, 946,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 1017, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 952, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 1040, 1041, 964, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 1024, 0,
	0, 0, 327, 0, 328, 0, 0, 1050, 329, 330,
	1037, 1038, 331, 332, 0, 333, 1047, 0, 974, 334,
	0, 335, 336, 337, 338, 339, 1010, 1011, 1014, 396,
	1052, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 1051, 348, 1019, 1020,
	0, 980, 0, 350, 351, 1053, 1012, 1054, 352, 353,
	354, 1055, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 1048, 1056,
	366, 367, 1057, 0, 368, 369, 370, 1003, 1002, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 1058, 387, 388,
	389, 392, 393, 391, 1059, 390, 943, 246, 1060, 394,
	965, 1013, 395, 1027, 397, 398, 0, 0, 399, 0,
	948, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	1061, 406, 1062, 1042, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	1043, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 1023, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	1063, 446, 447, 448, 449, 953, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 1006, 471, 455, 456,
	472, 473, 1064, 474, 475, 476, 477, 478, 479, 1021,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	1067, 486, 487, 488, 489, 1044, 0, 492, 493, 941,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 1033, 1034, 1035, 1036, 0, 508, 0, 502,
	503, 1045, 504, 1046, 963, 505, 506, 507, 0, 509,
	510, 0, 947, 511, 512, 513, 515, 516, 514, 517,
	1007, 518, 0, 0, 519, 520, 521, 576, 1030, 1066,
	0, 523, 522, 579, 0, 0, 0, 0, 524, 525,
	580, 526, 527, 528, 944, 0, 0, 0, 0, 0,
	0, 940, 0, 0, 0, 0, 0, 0, 938, 939,
	985, 957, 958, 959, 955, 956, 968, 969, 0, 0,
	0, 967, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 1009, 973, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 1022, 0, 262, 1029, 263, 1028,
	0, 1039, 264, 265, 266, 267, 268, 975, 1008, 942,
	269, 1068, 1069, 537, 0, 270, 271, 1015, 0, 996,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 3766, 286,
	0, 287, 1049, 288, 289, 999, 997, 998, 1005, 1001,
	1000, 1004, 290, 291, 292, 293, 1032, 294, 1026, 1025,
	946, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 1017, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 952, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 1040, 1041, 964,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 1024,
	0, 0, 0, 327, 0, 328, 0, 0, 1050, 329,
	330, 1037, 1038, 331, 332, 0, 333, 1047, 0, 974,
	334, 0, 335, 336, 337, 338, 339, 1010, 1011, 1014,
	396, 1052, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 1051, 348, 1019,
	1020, 0, 980, 0, 350, 351, 1053, 1012, 1054, 352,
	353, 354, 1055, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 1048,
	1056, 366, 367, 1057, 0, 368, 369, 370, 1003, 1002,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1058, 387,
	388, 389, 392, 393, 391, 1059, 390, 943, 246, 1060,
	394, 965, 1013, 395, 1027, 397, 398, 0, 0, 399,
	0, 948, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 1061, 406, 1062, 1042, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 1043, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 1023, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 1063, 446, 447, 448, 449, 953, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 1006, 471, 455,
	456, 472, 473, 1064, 474, 475, 476, 477, 478, 479,
	1021, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 1067, 486, 487, 488, 489, 1044, 0, 492, 493,
	941, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 1033, 1034, 1035, 1036, 0, 508, 0,
	502, 503, 1045, 504, 1046, 963, 505, 506, 507, 0,
	509, 510, 0, 947, 511, 512, 513, 515, 516, 514,
	517, 1007, 518, 0, 0, 519, 520, 521, 576, 1030,
	1066, 0, 523, 522, 579, 0, 0, 0, 0, 524,
	525, 580, 526, 527, 528, 944, 0, 0, 0, 0,
	0, 0, 940, 0, 0, 0, 0, 0, 0, 938,
	939, 985, 957, 958, 959, 955, 956, 968, 969, 0,
	0, 0, 967, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1009, 973, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 1022, 0, 262, 1029, 263,
	1028, 0, 1039, 264, 265, 266, 267, 268, 975, 1008,
	942, 269, 1068, 1069, 537, 0, 270, 271, 1015, 0,
	996, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 1049, 288, 289, 999, 997, 998, 1005,
	1001, 1000, 1004, 290, 291, 292, 293, 1032, 294, 1026,
	1025, 946, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 1017, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 952, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 1040, 1041,
	964, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	1024, 0, 0, 0, 327, 0, 328, 0, 0, 1050,
	329, 330, 1037, 1038, 331, 332, 0, 333, 1047, 0,
	974, 334, 0, 335, 336, 337, 338, 339, 1010, 1011,
	1014, 396, 1052, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 0, 1051, 348,
	1019, 1020, 0, 980, 0, 350, 351, 1053, 1012, 1054,
	352, 353, 354, 1055, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	1048, 1056, 366, 367, 1057, 0, 368, 369, 370, 1003,
	1002, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1058,
	387, 388, 389, 392, 393, 391, 1059, 390, 943, 3432,
	1060, 394, 965, 1013, 395, 1027, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 1061, 406, 1062, 1042, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 1043, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 1023, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 1063, 446, 447, 448, 449, 953, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 1006, 471,
	455, 456, 472, 473, 1064, 474, 475, 476, 477, 478,
	479, 1021, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 1067, 486, 487, 488, 489, 1044, 0, 492,
	493, 941, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 1033, 1034, 1035, 1036, 0, 508,
	0, 502, 503, 1045, 504, 1046, 963, 505, 506, 507,
	0, 509, 510, 0, 947, 511, 512, 513, 515, 516,
	514, 517, 1007, 518, 0, 0, 519, 520, 521, 576,
	1030, 1066, 0, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 944, 0, 0, 0,
	0, 0, 0, 940, 0, 0, 0, 0, 0, 0,
	938, 939, 1742, 0, 0, 0, 0, 0, 0, 969,
	0, 0, 0, 967, 985, 957, 958, 959, 955, 956,
	968, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 1009, 973, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 1022, 0,
	262, 1029, 263, 1028, 0, 1039, 264, 265, 266, 267,
	268, 975, 1008, 942, 269, 1068, 1069, 537, 0, 270,
	271, 1015, 0, 996, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 1049, 288, 289, 999,
	997, 998, 1005, 1001, 1000, 1004, 290, 291, 292, 293,
	1032, 294, 1026, 1025, 946, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 1017, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	952, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 1040, 1041, 964, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 1024, 0, 0, 0, 327, 0, 328,
	0, 0, 1050, 329, 330, 1037, 1038, 331, 332, 0,
	333, 1047, 0, 974, 334, 0, 335, 336, 337, 338,
	339, 1010, 1011, 1014, 396, 1052, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 1051, 348, 1019, 1020, 0, 980, 0, 350, 351,
	1053, 1012, 1054, 352, 353, 354, 1055, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 1048, 1056, 366, 367, 1057, 0, 368,
	369, 370, 1003, 1002, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 1058, 387, 388, 389, 392, 393, 391, 1059,
	390, 943, 246, 1060, 394, 965, 1013, 395, 1027, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 1061, 406, 1062, 1042, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 1043, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	1023, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1063, 446, 447, 448, 449,
	953, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 1006, 471, 455, 456, 472, 473, 1064, 474, 475,
	476, 477, 478, 479, 1021, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 1067, 486, 487, 488, 489,
	1044, 0, 492, 493, 941, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 1033, 1034, 1035,
	1036, 0, 508, 0, 502, 503, 1045, 504, 1046, 963,
	505, 506, 507, 0, 509, 510, 0, 947, 511, 512,
	513, 515, 516, 514, 517, 1007, 518, 0, 0, 519,
	520, 521, 576, 1030, 1066, 3196, 523, 522, 579, 0,
	0, 0, 0, 524, 525, 580, 526, 527, 528, 944,
	0, 0, 0, 0, 0, 0, 940, 0, 0, 0,
	0, 0, 0, 938, 939, 985, 957, 958, 959, 955,
	956, 968, 969, 0, 0, 0, 967, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1009, 973, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 1022,
	0, 262, 1029, 263, 1028, 0, 1039, 264, 265, 266,
	267, 268, 975, 1008, 942, 269, 1068, 1069, 537, 0,
	270, 271, 1015, 0, 996, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 1049, 288, 289,
	999, 997, 998, 1005, 1001, 1000, 1004, 290, 291, 292,
	293, 1032, 294, 1026, 1025, 946, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 1017,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 952, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 1040, 1041, 964, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 1024, 0, 0, 0, 327, 0,
	328, 0, 0, 1050, 329, 330, 1037, 1038, 331, 332,
	0, 333, 1047, 0, 974, 334, 0, 335, 336, 337,
	338, 339, 1010, 1011, 1014, 396, 1052, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 1051, 348, 1019, 1020, 0, 980, 0, 350,
	351, 1053, 1012, 1054, 352, 353, 354, 1055, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 1048, 1056, 366, 367, 1057, 0,
	368, 369, 370, 1003, 1002, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 1058, 387, 388, 389, 392, 393, 391,
	1059, 390, 943, 246, 1060, 394, 965, 1013, 395, 1027,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 1061, 406, 1062, 1042,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 1043, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 1023, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 1063, 446, 447, 448,
	449, 953, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 1006, 471, 455, 456, 472, 473, 1064, 474,
	475, 476, 477, 478, 479, 1021, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 1067, 486, 487, 488,
	489, 1044, 0, 492, 493, 941, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 1033, 1034,
	1035, 1036, 0, 508, 0, 502, 503, 1045, 504, 1046,
	963, 505, 506, 507, 0, 509, 510, 0, 947, 511,
	512, 513, 515, 516, 514, 517, 1007, 518, 0, 0,
	519, 520, 521, 576, 1030, 1066, 0, 523, 522, 579,
	0, 0, 0, 0, 524, 525, 580, 526, 527, 528,
	944, 0, 0, 0, 0, 0, 0, 940, 0, 0,
	0, 0, 0, 0, 938, 939, 1742, 0, 0, 0,
	0, 0, 0, 969, 0, 0, 0, 967, 985, 957,
	958, 959, 955, 956, 968, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 1009,
	973, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 1022, 0, 262, 1029, 263, 1028, 0, 1039,
	264, 265, 266, 267, 268, 975, 1008, 942, 269, 1068,
	1069, 537, 0, 270, 271, 1015, 0, 996, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1049, 288, 289, 999, 997, 998, 1005, 1001, 1000, 1004,
	290, 291, 292, 293, 1032, 294, 1026, 1025, 946, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 1017, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 952, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1040, 1041, 964, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 1024, 0, 0,
	0, 327, 0, 328, 0, 2359, 1050, 329, 330, 1037,
	1038, 331, 332, 0, 333, 1047, 0, 974, 334, 0,
	335, 336, 337, 338, 339, 1010, 1011, 1014, 396, 1052,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1051, 348, 1019, 1020, 0,
	980, 0, 350, 351, 1053, 1012, 1054, 352, 353, 354,
	1055, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 1048, 1056, 366,
	367, 1057, 0, 368, 369, 370, 1003, 1002, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1058, 387, 388, 389,
	392, 393, 391, 1059, 390, 943, 246, 1060, 394, 965,
	1013, 395, 1027, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 1061,
	406, 1062, 1042, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 1043,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 1023, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1063,
	446, 447, 448, 449, 953, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 1006, 471, 455, 456, 472,
	473, 1064, 474, 475, 476, 477, 478, 479, 1021, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 1067,
	486, 487, 488, 489, 1044, 0, 492, 493, 941, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 1033, 1034, 1035, 1036, 0, 508, 0, 502, 503,
	1045, 504, 1046, 963, 505, 506, 507, 0, 509, 510,
	0, 947, 511, 512, 513, 515, 516, 514, 517, 1007,
	518, 0, 0, 519, 520, 521, 576, 1030, 1066, 0,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 944, 0, 0, 0, 0, 0, 0,
	940, 0, 0, 0, 0, 0, 0, 938, 939, 985,
	957, 958, 959, 955, 956, 968, 969, 0, 0, 0,
	967, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1009, 973, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 1022, 0, 262, 1029, 263, 1028, 0,
	1039, 264, 265, 266, 267, 268, 975, 1008, 942, 269,
	1068, 1069, 537, 0, 270, 271, 1015, 0, 996, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 1049, 288, 289, 999, 997, 998, 1005, 1001, 1000,
	1004, 290, 291, 292, 293, 1032, 294, 1026, 1025, 946,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 1017, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 952, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 1040, 1041, 964, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 1024, 0,
	0, 0, 327, 0, 328, 0, 0, 1050, 329, 330,
	1037, 1038, 331, 332, 0, 333, 1047, 0, 974, 334,
	0, 335, 336, 337, 338, 339, 1010, 1011, 1014, 396,
	1052, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 1051, 348, 1019, 1020,
	0, 980, 0, 350, 351, 1053, 1012, 1054, 352, 353,
	354, 1055, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 1048, 1056,
	366, 367, 1057, 0, 368, 369, 370, 1003, 1002, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 1058, 387, 388,
	389, 392, 393, 391, 1059, 390, 943, 246, 1060, 394,
	965, 1013, 395, 1027, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	1061, 406, 1062, 1042, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	1043, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 1023, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	1063, 446, 447, 448, 449, 953, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 1006, 471, 455, 456,
	472, 473, 1064, 474, 475, 476, 477, 478, 479, 1021,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	1067, 486, 487, 488, 489, 1044, 0, 492, 493, 941,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 1033, 1034, 1035, 1036, 0, 508, 0, 502,
	503, 1045, 504, 1046, 963, 505, 506, 507, 0, 509,
	510, 0, 947, 511, 512, 513, 515, 516, 514, 517,
	1007, 518, 0, 0, 519, 520, 521, 576, 1030, 1066,
	0, 523, 522, 579, 0, 0, 0, 0, 524, 525,
	580, 526, 527, 528, 944, 0, 0, 0, 0, 0,
	0, 940, 0, 0, 0, 0, 0, 0, 938, 939,
	0, 0, 0, 0, 0, 0, 0, 969, 1672, 0,
	2364, 967, 985, 957, 958, 959, 955, 956, 968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 1009, 973, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 1022, 0, 262, 1029,
	263, 1028, 0, 1039, 264, 265, 266, 267, 268, 975,
	1008, 942, 269, 1068, 1069, 537, 0, 270, 271, 1015,
	0, 996, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 1049, 288, 289, 999, 997, 998,
	1005, 1001, 1000, 1004, 290, 291, 292, 293, 1032, 294,
	1026, 1025, 946, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 1017, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 952, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 1040,
	1041, 964, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 1024, 0, 0, 0, 327, 0, 328, 0, 0,
	1050, 329, 330, 1037, 1038, 331, 332, 0, 333, 1047,
	0, 974, 334, 0, 335, 336, 337, 338, 339, 1010,
	1011, 1014, 396, 1052, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 1051,
	348, 1019, 1020, 0, 980, 0, 350, 351, 1053, 1012,
	1054, 352, 353, 354, 1055, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 1048, 1056, 366, 367, 1057, 0, 368, 369, 370,
	1003, 1002, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1058, 387, 388, 389, 392, 393, 391, 1059, 390, 943,
	246, 1060, 394, 965, 1013, 395, 1027, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 1061, 406, 1062, 1042, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 1043, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 1023, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 1063, 446, 447, 448, 449, 953, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 1006,
	471, 455, 456, 472, 473, 1064, 474, 475, 476, 477,
	478, 479, 1021, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 1067, 486, 487, 488, 489, 1044, 0,
	492, 493, 941, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 1033, 1034, 1035, 1036, 0,
	508, 0, 502, 503, 1045, 504, 1046, 963, 505, 506,
	507, 0, 509, 510, 0, 947, 511, 512, 513, 515,
	516, 514, 517, 1007, 518, 0, 0, 519, 520, 521,
	576, 1030, 1066, 0, 523, 522, 579, 0, 0, 0,
	0, 524, 525, 580, 526, 527, 528, 944, 0, 0,
	0, 0, 0, 0, 940, 0, 0, 0, 0, 0,
	0, 938, 939, 0, 0, 0, 0, 0, 0, 0,
	969, 0, 0, 2362, 967, 985, 957, 958, 959, 955,
	956, 968, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1009, 973, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 1022,
	0, 262, 1029, 263, 1028, 0, 1039, 264, 265, 266,
	267, 268, 975, 1008, 942, 269, 1068, 1069, 537, 0,
	270, 271, 1015, 0, 996, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 1049, 288, 289,
	999, 997, 998, 1005, 1001, 1000, 1004, 290, 291, 292,
	293, 1032, 294, 1026, 1025, 946, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 1017,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 952, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 1040, 1041, 964, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 1024, 0, 0, 0, 327, 0,
	328, 0, 0, 1050, 329, 330, 1037, 1038, 331, 332,
	0, 333, 1047, 0, 974, 334, 0, 335, 336, 337,
	338, 339, 1010, 1011, 1014, 396, 1052, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 1051, 348, 1019, 1020, 0, 980, 0, 350,
	351, 1053, 1012, 1054, 352, 353, 354, 1055, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 1048, 1056, 366, 367, 1057, 0,
	368, 369, 370, 1003, 1002, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 1058, 387, 388, 389, 392, 393, 391,
	1059, 390, 943, 246, 1060, 394, 965, 1013, 395, 1027,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 1061, 406, 1062, 1042,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 1043, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 1023, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 1063, 446, 447, 448,
	449, 953, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 1006, 471, 455, 456, 472, 473, 1064, 474,
	475, 476, 477, 478, 479, 1021, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 1067, 486, 487, 488,
	489, 1044, 0, 492, 493, 941, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 1033, 1034,
	1035, 1036, 0, 508, 0, 502, 503, 1045, 504, 1046,
	963, 505, 506, 507, 0, 509, 510, 0, 947, 511,
	512, 513, 515, 516, 514, 517, 1007, 518, 0, 0,
	519, 520, 521, 576, 1030, 1066, 0, 523, 522, 579,
	0, 0, 0, 0, 524, 525, 580, 526, 527, 528,
	944, 0, 0, 0, 0, 0, 0, 940, 0, 0,
	0, 0, 0, 0, 938, 939, 0, 0, 0, 0,
	0, 0, 0, 969, 0, 0, 2350, 967, 985, 957,
	958, 959, 955, 956, 968, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 1009,
	973, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 1022, 0, 262, 1029, 263, 1028, 0, 1039,
	264, 265, 266, 267, 268, 975, 1008, 942, 269, 1068,
	1069, 537, 0, 270, 271, 1015, 0, 996, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1049, 288, 289, 999, 997, 998, 1005, 1001, 1000, 1004,
	290, 291, 292, 293, 1032, 294, 1026, 1025, 946, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 1017, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 952, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1040, 1041, 964, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 1024, 0, 0,
	0, 327, 0, 328, 0, 0, 1050, 329, 330, 1037,
	1038, 331, 332, 0, 333, 1047, 0, 974, 334, 0,
	335, 336, 337, 338, 339, 1010, 1011, 1014, 396, 1052,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1051, 348, 1019, 1020, 0,
	980, 0, 350, 351, 1053, 1012, 1054, 352, 353, 354,
	1055, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 1048, 1056, 366,
	367, 1057, 0, 368, 369, 370, 1003, 1002, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1058, 387, 388, 389,
	392, 393, 391, 1059, 390, 943, 246, 1060, 394, 965,
	1013, 395, 1027, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 1061,
	406, 1062, 1042, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 1043,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 1023, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1063,
	446, 447, 448, 449, 953, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 1006, 471, 455, 456, 472,
	473, 1064, 474, 475, 476, 477, 478, 479, 1021, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 1067,
	486, 487, 488, 489, 1044, 0, 492, 493, 941, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 1033, 1034, 1035, 1036, 0, 508, 0, 502, 503,
	1045, 504, 1046, 963, 505, 506, 507, 0, 509, 510,
	0, 947, 511, 512, 513, 515, 516, 514, 517, 1007,
	518, 0, 0, 519, 520, 521, 576, 1030, 1066, 0,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 944, 0, 0, 0, 0, 0, 0,
	940, 0, 0, 0, 0, 0, 0, 938, 939, 0,
	0, 0, 0, 0, 0, 0, 969, 0, 0, 2339,
	967, 985, 957, 958, 959, 955, 956, 968, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1009, 973, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 1022, 0, 262, 1029, 263,
	1028, 0, 1039, 264, 265, 266, 267, 268, 975, 1008,
	942, 269, 1068, 1069, 537, 0, 270, 271, 1015, 0,
	996, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 1049, 288, 289, 999, 997, 998, 1005,
	1001, 1000, 1004, 290, 291, 292, 293, 1032, 294, 1026,
	1025, 946, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 1017, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 952, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 1040, 1041,
	964, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	1024, 0, 0, 0, 327, 0, 328, 0, 0, 1050,
	329, 330, 1037, 1038, 331, 332, 0, 333, 1047, 0,
	974, 334, 0, 335, 336, 337, 338, 339, 1010, 1011,
	1014, 396, 1052, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 0, 1051, 348,
	1019, 1020, 0, 980, 0, 350, 351, 1053, 1012, 1054,
	352, 353, 354, 1055, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	1048, 1056, 366, 367, 1057, 0, 368, 369, 370, 1003,
	1002, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1058,
	387, 388, 389, 392, 393, 391, 1059, 390, 943, 246,
	1060, 394, 965, 1013, 395, 1027, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 1061, 406, 1062, 1042, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 1043, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 1023, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 1063, 446, 447, 448, 449, 953, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 1006, 471,
	455, 456, 472, 473, 1064, 474, 475, 476, 477, 478,
	479, 1021, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 1067, 486, 487, 488, 489, 1044, 0, 492,
	493, 941, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 1033, 1034, 1035, 1036, 0, 508,
	0, 502, 503, 1045, 504, 1046, 963, 505, 506, 507,
	0, 509, 510, 0, 947, 511, 512, 513, 515, 516,
	514, 517, 1007, 518, 0, 0, 519, 520, 521, 576,
	1030, 1066, 0, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 944, 0, 0, 0,
	0, 0, 0, 940, 0, 0, 0, 0, 0, 0,
	938, 939, 0, 0, 0, 0, 0, 0, 0, 969,
	0, 0, 2337, 967, 2328, 2335, 958, 959, 955, 956,
	968, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 1009, 973, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 1022, 0,
	262, 1029, 263, 1028, 0, 1039, 264, 265, 266, 267,
	268, 975, 1008, 942, 269, 1068, 1069, 537, 0, 270,
	271, 1015, 0, 996, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 1049, 288, 289, 999,
	997, 998, 1005, 1001, 1000, 1004, 290, 291, 292, 293,
	1032, 2331, 1026, 1025, 946, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 1017, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	952, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 1040, 1041, 964, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 1024, 0, 0, 0, 327, 0, 328,
	0, 0, 1050, 329, 330, 1037, 1038, 331, 332, 0,
	333, 1047, 0, 974, 334, 0, 335, 336, 337, 2332,
	339, 1010, 1011, 1014, 396, 1052, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 1051, 348, 1019, 1020, 0, 980, 0, 350, 351,
	1053, 1012, 1054, 352, 353, 354, 1055, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 1048, 1056, 366, 367, 1057, 0, 368,
	369, 370, 1003, 1002, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 2333, 2330, 381, 382, 383, 386,
	0, 385, 1058, 387, 388, 389, 392, 393, 391, 1059,
	390, 943, 246, 1060, 394, 965, 1013, 395, 1027, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 1061, 406, 1062, 1042, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 1043, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	1023, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1063, 446, 447, 448, 449,
	953, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 2334, 0, 466, 467, 465, 468, 469,
	470, 1006, 471, 455, 456, 472, 473, 1064, 474, 475,
	476, 477, 478, 479, 1021, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 1067, 486, 487, 488, 489,
	1044, 0, 492, 493, 941, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 1033, 1034, 1035,
	1036, 0, 508, 0, 502, 503, 1045, 504, 1046, 963,
	505, 506, 507, 0, 509, 510, 0, 947, 511, 512,
	513, 515, 516, 514, 517, 1007, 518, 0, 0, 519,
	520, 521, 576, 1030, 1066, 0, 523, 522, 579, 0,
	0, 0, 0, 524, 525, 580, 526, 2329, 528, 944,
	0, 0, 0, 0, 0, 0, 940, 0, 0, 0,
	0, 0, 0, 938, 939, 0, 0, 0, 0, 0,
	0, 0, 969, 0, 0, 2325, 967, 2328, 2335, 958,
	959, 955, 956, 968, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 1009, 973,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 1022, 0, 262, 1029, 263, 1028, 0, 1039, 264,
	265, 266, 267, 268, 975, 1008, 942, 269, 1068, 1069,
	537, 0, 270, 271, 1015, 0, 996, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 1049,
	288, 289, 999, 997, 998, 1005, 1001, 1000, 1004, 290,
	291, 292, 293, 1032, 2331, 1026, 1025, 946, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 1017, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 952, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 1040, 1041, 964, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 1024, 0, 0, 0,
	327, 0, 328, 0, 0, 1050, 329, 330, 1037, 1038,
	331, 332, 0, 333, 1047, 0, 974, 334, 0, 335,
	336, 337, 2332, 339, 1010, 1011, 1014, 396, 1052, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 1051, 348, 1019, 1020, 0, 980,
	0, 350, 351, 1053, 1012, 1054, 352, 353, 354, 1055,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 1048, 1056, 366, 367,
	1057, 0, 368, 369, 370, 1003, 1002, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 2333, 2330, 381,
	382, 383, 386, 0, 385, 1058, 387, 388, 389, 392,
	393, 391, 1059, 390, 943, 246, 1060, 394, 965, 1013,
	395, 1027, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 1061, 406,
	1062, 1042, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 1043, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 1023, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 1063, 446,
	447, 448, 449, 953, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 2334, 0, 466, 467,
	465, 468, 469, 470, 1006, 471, 455, 456, 472, 473,
	1064, 474, 475, 476, 477, 478, 479, 1021, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 1067, 486,
	487, 488, 489, 1044, 0, 492, 493, 941, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	1033, 1034, 1035, 1036, 0, 508, 0, 502, 503, 1045,
	504, 1046, 963, 505, 506, 507, 0, 509, 510, 0,
	947, 511, 512, 513, 515, 516, 514, 517, 1007, 518,
	0, 0, 519, 520, 521, 576, 1030, 1066, 0, 523,
	522, 579, 0, 0, 0, 0, 524, 525, 580, 526,
	2329, 528, 944, 0, 0, 0, 0, 0, 0, 940,
	0, 0, 0, 0, 0, 0, 938, 939, 985, 957,
	958, 959, 955, 956, 968, 969, 0, 0, 0, 967,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 1009,
	973, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 1022, 0, 262, 1029, 263, 1028, 0, 1039,
	264, 265, 266, 267, 268, 975, 1008, 942, 269, 1068,
	1069, 537, 0, 270, 271, 1015, 0, 996, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1049, 288, 289, 999, 997, 998, 1005, 1001, 1000, 1004,
	290, 291, 292, 293, 1032, 294, 1026, 1025, 946, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 1017, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 952, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1040, 1041, 964, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 1024, 0, 0,
	0, 327, 0, 328, 0, 0, 1050, 329, 330, 1037,
	1038, 331, 332, 0, 333, 1047, 0, 974, 334, 0,
	335, 336, 337, 338, 339, 1010, 1011, 1014, 396, 1052,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1051, 348, 1019, 1020, 0,
	980, 0, 350, 351, 1053, 1012, 1054, 352, 353, 354,
	1055, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 1048, 1056, 366,
	367, 1057, 0, 368, 369, 370, 1003, 1002, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1058, 387, 388, 389,
	392, 393, 391, 1059, 390, 943, 246, 1060, 394, 965,
	1013, 395, 1027, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 1061,
	406, 1062, 1042, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 1043,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 1023, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1063,
	446, 447, 448, 449, 953, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 1006, 471, 455, 456, 472,
	473, 1064, 474, 475, 476, 477, 478, 479, 1021, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 1067,
	486, 487, 488, 489, 1044, 0, 492, 493, 941, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 1033, 1034, 1035, 1036, 0, 508, 0, 502, 503,
	1045, 504, 1046, 963, 505, 506, 507, 0, 509, 510,
	0, 947, 511, 512, 513, 515, 516, 514, 517, 1007,
	518, 0, 0, 519, 520, 521, 576, 1030, 1066, 0,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 944, 0, 0, 0, 0, 0, 0,
	940, 0, 0, 0, 0, 0, 0, 938, 939, 0,
	0, 0, 0, 0, 1680, 0, 969, 0, 0, 0,
	967, 985, 957, 958, 959, 955, 956, 968, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 2143, 253, 254, 0, 0, 0,
	0, 0, 1009, 973, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 1022, 0, 262, 1029, 263,
	1028, 0, 1039, 264, 265, 266, 267, 268, 975, 1008,
	942, 269, 1068, 1069, 537, 0, 270, 271, 1015, 0,
	996, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 1049, 288, 289, 999, 997, 998, 1005,
	1001, 1000, 1004, 290, 291, 292, 293, 1032, 294, 1026,
	1025, 946, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 1017, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 952, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 1040, 1041,
	964, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	1024, 0, 0, 0, 327, 0, 328, 0, 0, 1050,
	329, 330, 1037, 1038, 331, 332, 0, 333, 1047, 0,
	974, 334, 0, 335, 336, 337, 338, 339, 1010, 1011,
	1014, 396, 1052, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 0, 1051, 348,
	1019, 1020, 0, 980, 0, 350, 351, 1053, 1012, 1054,
	352, 353, 354, 1055, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	1048, 1056, 366, 367, 1057, 0, 368, 369, 370, 1003,
	1002, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1058,
	387, 388, 389, 392, 393, 391, 1059, 390, 943, 246,
	1060, 394, 965, 1013, 395, 1027, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 1061, 406, 1062, 1042, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 1043, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 1023, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 1063, 446, 447, 448, 449, 953, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 1006, 471,
	455, 456, 472, 473, 1064, 474, 475, 476, 477, 478,
	479, 1021, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 1067, 486, 487, 488, 489, 1044, 0, 492,
	493, 941, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 1033, 1034, 1035, 1036, 0, 508,
	0, 502, 503, 1045, 504, 1046, 963, 505, 506, 507,
	0, 509, 510, 0, 947, 511, 512, 513, 515, 516,
	514, 517, 1007, 518, 0, 0, 519, 520, 521, 576,
	1030, 1066, 0, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 944, 0, 0, 0,
	0, 0, 0, 940, 0, 0, 0, 0, 0, 0,
	938, 939, 0, 0, 0, 0, 0, 0, 0, 969,
	0, 0, 1532, 967, 985, 957, 958, 959, 955, 956,
	968, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 1009, 973, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 1022, 0,
	262, 1029, 263, 1028, 0, 1039, 264, 265, 266, 267,
	268, 975, 1008, 942, 269, 1068, 1069, 537, 0, 270,
	271, 1015, 0, 996, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 1049, 288, 289, 999,
	997, 998, 1005, 1001, 1000, 1004, 290, 291, 292, 293,
	1032, 294, 1026, 1025, 946, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 1017, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	952, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 1040, 1041, 964, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 1024, 0, 0, 0, 327, 0, 328,
	0, 0, 1050, 329, 330, 1037, 1038, 331, 332, 0,
	333, 1047, 0, 974, 334, 0, 335, 336, 337, 338,
	339, 1010, 1011, 1014, 396, 1052, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 1051, 348, 1019, 1020, 0, 980, 0, 350, 351,
	1053, 1012, 1054, 352, 353, 354, 1055, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 1048, 1056, 366, 367, 1057, 0, 368,
	369, 370, 1003, 1002, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 1058, 387, 388, 389, 392, 393, 391, 1059,
	390, 943, 246, 1060, 394, 965, 1013, 395, 1027, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 1061, 406, 1062, 1042, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 1043, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	1023, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1063, 446, 447, 448, 449,
	953, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 1006, 471, 455, 456, 472, 473, 1064, 474, 475,
	476, 477, 478, 479, 1021, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 1067, 486, 487, 488, 489,
	1044, 0, 492, 493, 941, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 1033, 1034, 1035,
	1036, 0, 508, 0, 502, 503, 1045, 504, 1046, 963,
	505, 506, 507, 0, 509, 510, 0, 947, 511, 512,
	513, 515, 516, 514, 517, 1007, 518, 0, 0, 519,
	520, 521, 576, 1030, 1066, 0, 523, 522, 579, 0,
	0, 0, 0, 524, 525, 580, 526, 527, 528, 944,
	0, 0, 0, 0, 0, 0, 940, 0, 0, 0,
	0, 0, 0, 938, 939, 0, 0, 0, 0, 0,
	0, 0, 969, 0, 0, 1470, 967, 985, 957, 958,
	959, 955, 956, 968, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 1009, 973,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 1022, 0, 262, 1029, 263, 1028, 0, 1039, 264,
	265, 266, 267, 268, 975, 1008, 942, 269, 1068, 1069,
	537, 0, 270, 271, 1015, 0, 996, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 1049,
	288, 289, 999, 997, 998, 1005, 1001, 1000, 1004, 290,
	291, 292, 293, 1032, 294, 1026, 1025, 946, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 1017, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 952, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 1040, 1041, 964, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 1024, 0, 0, 0,
	327, 0, 328, 0, 0, 1050, 329, 330, 1037, 1038,
	331, 332, 0, 333, 1047, 0, 974, 334, 0, 335,
	336, 337, 338, 339, 1010, 1011, 1014, 396, 1052, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 1051, 348, 1019, 1020, 0, 980,
	0, 350, 351, 1053, 1012, 1054, 352, 353, 354, 1055,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 1048, 1056, 366, 367,
	1057, 0, 368, 369, 370, 1003, 1002, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 1058, 387, 388, 389, 392,
	393, 391, 1059, 390, 943, 246, 1060, 394, 965, 1013,
	395, 1027, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 1061, 406,
	1062, 1042, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 1043, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 1023, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 1063, 446,
	447, 448, 449, 953, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 1006, 471, 455, 456, 472, 473,
	1064, 474, 475, 476, 477, 478, 479, 1021, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 1067, 486,
	487, 488, 489, 1044, 0, 492, 493, 941, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	1033, 1034, 1035, 1036, 0, 508, 0, 502, 503, 1045,
	504, 1046, 963, 505, 506, 507, 0, 509, 510, 0,
	947, 511, 512, 513, 515, 516, 514, 517, 1007, 518,
	0, 0, 519, 520, 521, 576, 1030, 1066, 0, 523,
	522, 579, 0, 0, 0, 0, 524, 525, 580, 526,
	527, 528, 944, 0, 0, 0, 0, 0, 0, 940,
	0, 0, 0, 0, 0, 0, 938, 939, 0, 0,
	0, 0, 0, 0, 0, 969, 0, 0, 1465, 967,
	985, 957, 958, 959, 955, 956, 968, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 1009, 973, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 1022, 0, 262, 1029, 263, 1028,
	0, 1039, 264, 265, 266, 267, 268, 975, 1008, 942,
	269, 1068, 1069, 537, 0, 270, 271, 1015, 0, 996,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 1049, 288, 289, 999, 997, 998, 1005, 1001,
	1000, 1004, 290, 291, 292, 293, 1032, 294, 1026, 1025,
	946, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 1017, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 952, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 1040, 1041, 964,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 1024,
	0, 0, 0, 327, 0, 328, 0, 0, 1050, 329,
	330, 1037, 1038, 331, 332, 0, 333, 1047, 0, 974,
	334, 0, 335, 336, 337, 338, 339, 1010, 1011, 1014,
	396, 1052, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 1051, 348, 1019,
	1020, 0, 980, 0, 350, 351, 1053, 1012, 1054, 352,
	353, 354, 1055, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 1048,
	1056, 366, 367, 1057, 0, 368, 369, 370, 1003, 1002,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1058, 387,
	388, 389, 392, 393, 391, 1059, 390, 943, 246, 1060,
	394, 965, 1013, 395, 1027, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 1061, 406, 1062, 1042, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 1043, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 1023, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 1063, 446, 447, 448, 449, 953, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 1006, 471, 455,
	456, 472, 473, 1064, 474, 475, 476, 477, 478, 479,
	1021, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 1067, 486, 487, 488, 489, 1044, 0, 492, 493,
	941, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 1033, 1034, 1035, 1036, 0, 508, 0,
	502, 503, 1045, 504, 1046, 963, 505, 506, 507, 0,
	509, 510, 0, 947, 511, 512, 513, 515, 516, 514,
	517, 1007, 518, 0, 0, 519, 520, 521, 576, 1030,
	1066, 0, 523, 522, 579, 0, 0, 0, 0, 524,
	525, 580, 526, 527, 528, 944, 0, 0, 0, 0,
	0, 0, 940, 0, 0, 0, 0, 0, 0, 938,
	939, 0, 0, 0, 0, 0, 0, 0, 969, 0,
	0, 1456, 967, 985, 957, 958, 959, 955, 956, 968,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 1009, 973, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 1022, 0, 262,
	1029, 263, 1028, 0, 1039, 264, 265, 266, 267, 268,
	975, 1008, 942, 269, 1068, 1069, 537, 0, 270, 271,
	1015, 0, 996, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 1049, 288, 289, 999, 997,
	998, 1005, 1001, 1000, 1004, 290, 291, 292, 293, 1032,
	294, 1026, 1025, 946, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 1017, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 952,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	1040, 1041, 964, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 1024, 0, 0, 0, 327, 0, 328, 0,
	0, 1050, 329, 330, 1037, 1038, 331, 332, 0, 333,
	1047, 0, 974, 334, 0, 335, 336, 337, 338, 339,
	1010, 1011, 1014, 396, 1052, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 0,
	1051, 348, 1019, 1020, 0, 980, 0, 350, 351, 1053,
	1012, 1054, 352, 353, 354, 1055, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 1048, 1056, 366, 367, 1057, 0, 368, 369,
	370, 1003, 1002, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1058, 387, 388, 389, 392, 393, 391, 1059, 390,
	943, 246, 1060, 394, 965, 1013, 395, 1027, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 1061, 406, 1062, 1042, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 1043, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 1023,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 1063, 446, 447, 448, 449, 953,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	1006, 471, 455, 456, 472, 473, 1064, 474, 475, 476,
	477, 478, 479, 1021, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 1067, 486, 487, 488, 489, 1044,
	0, 492, 493, 941, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 1033, 1034, 1035, 1036,
	0, 508, 0, 502, 503, 1045, 504, 1046, 963, 505,
	506, 507, 0, 509, 510, 0, 947, 511, 512, 513,
	515, 516, 514, 517, 1007, 518, 0, 0, 519, 520,
	521, 576, 1030, 1066, 0, 523, 522, 579, 0, 0,
	0, 0, 524, 525, 580, 526, 527, 528, 944, 0,
	0, 0, 0, 0, 0, 940, 0, 0, 0, 0,
	0, 0, 938, 939, 0, 0, 0, 0, 0, 0,
	0, 969, 0, 0, 1451, 967, 985, 957, 958, 959,
	955, 956, 968, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 1009, 973, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	1022, 0, 262, 1029, 263, 1028, 0, 1039, 264, 265,
	266, 267, 268, 975, 1008, 942, 269, 1068, 1069, 537,
	0, 270, 271, 1015, 0, 996, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1049, 288,
	289, 999, 997, 998, 1005, 1001, 1000, 1004, 290, 291,
	292, 293, 1032, 294, 1026, 1025, 946, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	1017, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 952, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 1040, 1041, 964, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 1024, 0, 0, 0, 327,
	0, 328, 0, 0, 1050, 329, 330, 1037, 1038, 331,
	332, 0, 333, 1047, 0, 974, 334, 0, 335, 336,
	337, 338, 339, 1010, 1011, 1014, 396, 1052, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 1051, 348, 1019, 1020, 0, 980, 0,
	350, 351, 1053, 1012, 1054, 352, 353, 354, 1055, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 1048, 1056, 366, 367, 1057,
	0, 368, 369, 370, 1003, 1002, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1058, 387, 388, 389, 392, 393,
	391, 1059, 390, 943, 246, 1060, 394, 965, 1013, 395,
	1027, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 1061, 406, 1062,
	1042, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 1043, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 1023, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1063, 446, 447,
	448, 449, 953, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 1006, 471, 455, 456, 472, 473, 1064,
	474, 475, 476, 477, 478, 479, 1021, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 1067, 486, 487,
	488, 489, 1044, 0, 492, 493, 941, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 1033,
	1034, 1035, 1036, 0, 508, 0, 502, 503, 1045, 504,
	1046, 963, 505, 506, 507, 0, 509, 510, 0, 947,
	511, 512, 513, 515, 516, 514, 517, 1007, 518, 0,
	0, 519, 520, 521, 576, 1030, 1066, 0, 523, 522,
	579, 0, 0, 0, 0, 524, 525, 580, 526, 527,
	528, 944, 0, 0, 0, 0, 0, 0, 940, 0,
	0, 0, 0, 0, 0, 938, 939, 0, 0, 0,
	0, 0, 0, 0, 969, 0, 0, 1433, 967, 985,
	957, 958, 959, 955, 956, 968, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1009, 973, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 1022, 0, 262, 1029, 263, 1028, 0,
	1039, 264, 265, 266, 267, 268, 975, 1008, 942, 269,
	1068, 1069, 537, 0, 270, 271, 1015, 0, 996, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 1049, 288, 289, 999, 997, 998, 1005, 1001, 1000,
	1004, 290, 291, 292, 293, 1032, 294, 1026, 1025, 946,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 1017, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 952, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 1040, 1041, 964, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 1024, 0,
	0, 0, 327, 0, 328, 0, 0, 1050, 329, 330,
	1037, 1038, 331, 332, 0, 333, 1047, 0, 974, 334,
	0, 335, 336, 337, 338, 339, 1010, 1011, 1014, 396,
	1052, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 1051, 348, 1019, 1020,
	0, 980, 0, 350, 351, 1053, 1012, 1054, 352, 353,
	354, 1055, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 1048, 1056,
	366, 367, 1057, 0, 368, 369, 370, 1003, 1002, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 1058, 387, 388,
	389, 392, 393, 391, 1059, 390, 943, 246, 1060, 394,
	965, 1013, 395, 1027, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	1061, 406, 1062, 1042, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	1043, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 1023, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	1063, 446, 447, 448, 449, 953, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 1006, 471, 455, 456,
	472, 473, 1064, 474, 475, 476, 477, 478, 479, 1021,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	1067, 486, 487, 488, 489, 1044, 0, 492, 493, 941,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 1033, 1034, 1035, 1036, 0, 508, 0, 502,
	503, 1045, 504, 1046, 963, 505, 506, 507, 0, 509,
	510, 0, 947, 511, 512, 513, 515, 516, 514, 517,
	1007, 518, 0, 0, 519, 520, 521, 576, 1030, 1066,
	0, 523, 522, 579, 0, 0, 0, 0, 524, 525,
	580, 526, 527, 528, 944, 0, 0, 0, 0, 0,
	0, 940, 0, 0, 0, 0, 0, 0, 938, 939,
	0, 0, 0, 0, 0, 0, 0, 969, 0, 0,
	1320, 967, 985, 957, 958, 959, 955, 956, 968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 1009, 973, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 1022, 0, 262, 1029,
	263, 1028, 0, 1039, 264, 265, 266, 267, 268, 975,
	1008, 942, 269, 1068, 1069, 537, 0, 270, 271, 1015,
	0, 996, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 1049, 288, 289, 999, 997, 998,
	1005, 1001, 1000, 1004, 290, 291, 292, 293, 1032, 294,
	1026, 1025, 946, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 1017, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 952, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 1040,
	1041, 964, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 1024, 0, 0, 0, 327, 0, 328, 0, 0,
	1050, 329, 330, 1037, 1038, 331, 332, 0, 333, 1047,
	0, 974, 334, 0, 335, 336, 337, 338, 339, 1319,
	1011, 1014, 396, 1052, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 1051,
	348, 1019, 1020, 0, 980, 0, 350, 351, 1053, 1012,
	1054, 352, 353, 354, 1055, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 1048, 1056, 366, 367, 1057, 0, 368, 369, 370,
	1003, 1002, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1058, 387, 388, 389, 392, 393, 391, 1059, 390, 943,
	246, 1060, 394, 965, 1013, 395, 1027, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 1061, 406, 1062, 1042, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 1043, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 1023, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 1063, 446, 447, 448, 449, 953, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 1006,
	471, 455, 456, 472, 473, 1064, 474, 475, 476, 477,
	478, 479, 1021, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 1067, 486, 487, 488, 489, 1044, 0,
	492, 493, 941, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 1033, 1034, 1035, 1036, 0,
	508, 0, 502, 503, 1045, 504, 1046, 963, 505, 506,
	507, 0, 509, 510, 0, 947, 511, 512, 513, 515,
	516, 514, 517, 1007, 518, 0, 0, 519, 520, 521,
	576, 1030, 1066, 0, 523, 522, 579, 0, 0, 0,
	0, 524, 525, 580, 526, 527, 528, 944, 0, 0,
	0, 0, 0, 0, 940, 0, 0, 0, 0, 0,
	0, 938, 939, 0, 0, 0, 0, 0, 0, 0,
	969, 0, 0, 1314, 967, 985, 957, 958, 959, 955,
	956, 968, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1009, 973, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 1022,
	0, 262, 1029, 263, 1028, 0, 1039, 264, 265, 266,
	267, 268, 975, 1008, 942, 269, 1068, 1069, 537, 0,
	270, 271, 1015, 0, 996, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 1049, 288, 289,
	999, 997, 998, 1005, 1001, 1000, 1004, 290, 291, 292,
	293, 1032, 294, 1026, 1025, 946, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 1017,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 952, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 1040, 1041, 964, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 1024, 0, 0, 0, 327, 0,
	328, 0, 0, 1050, 329, 330, 1037, 1038, 331, 332,
	0, 333, 1047, 0, 974, 334, 0, 335, 336, 337,
	338, 339, 1313, 1011, 1014, 396, 1052, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 1051, 348, 1019, 1020, 0, 980, 0, 350,
	351, 1053, 1012, 1054, 352, 353, 354, 1055, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 1048, 1056, 366, 367, 1057, 0,
	368, 369, 370, 1003, 1002, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 1058, 387, 388, 389, 392, 393, 391,
	1059, 390, 943, 246, 1060, 394, 965, 1013, 395, 1027,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 1061, 406, 1062, 1042,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 1043, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 1023, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 1063, 446, 447, 448,
	449, 953, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 1006, 471, 455, 456, 472, 473, 1064, 474,
	475, 476, 477, 478, 479, 1021, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 1067, 486, 487, 488,
	489, 1044, 0, 492, 493, 941, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 1033, 1034,
	1035, 1036, 0, 508, 0, 502, 503, 1045, 504, 1046,
	963, 505, 506, 507, 0, 509, 510, 0, 947, 511,
	512, 513, 515, 516, 514, 517, 1007, 518, 0, 0,
	519, 520, 521, 576, 1030, 1066, 0, 523, 522, 579,
	0, 0, 0, 0, 524, 525, 580, 526, 527, 528,
	944, 0, 0, 0, 0, 0, 0, 940, 0, 0,
	0, 0, 0, 0, 938, 939, 0, 0, 0, 0,
	0, 0, 0, 969, 0, 0, 1307, 967, 985, 957,
	958, 959, 955, 956, 968, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 1009,
	973, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 1022, 0, 262, 1029, 263, 1028, 0, 1039,
	264, 265, 266, 267, 268, 975, 1008, 942, 269, 1068,
	1069, 537, 0, 270, 271, 1015, 0, 996, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1049, 288, 289, 999, 997, 998, 1005, 1001, 1000, 1004,
	290, 291, 292, 293, 1032, 294, 1026, 1025, 946, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 1017, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 952, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1040, 1041, 964, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 1024, 0, 0,
	0, 327, 0, 328, 0, 0, 1050, 329, 330, 1037,
	1038, 331, 332, 0, 333, 1047, 0, 974, 334, 0,
	335, 336, 337, 338, 339, 1010, 1011, 1014, 396, 1052,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1051, 348, 1019, 1020, 0,
	980, 0, 350, 351, 1053, 1012, 1054, 352, 353, 354,
	1055, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 1048, 1056, 366,
	367, 1057, 0, 368, 369, 370, 1003, 1002, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1058, 387, 388, 389,
	392, 393, 391, 1059, 390, 943, 246, 1060, 394, 965,
	1013, 395, 1027, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 1061,
	406, 1062, 1042, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 1043,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 1023, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1063,
	446, 447, 448, 449, 953, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 1006, 471, 455, 456, 472,
	473, 1064, 474, 475, 476, 477, 478, 479, 1021, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 1067,
	486, 487, 488, 489, 1044, 0, 492, 493, 941, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 1033, 1034, 1035, 1036, 0, 508, 0, 502, 503,
	1045, 504, 1046, 963, 505, 506, 507, 0, 509, 510,
	0, 947, 511, 512, 513, 515, 516, 514, 517, 1007,
	518, 0, 0, 519, 520, 521, 576, 1030, 1066, 0,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 944, 0, 0, 0, 0, 0, 0,
	940, 0, 0, 0, 0, 0, 0, 938, 939, 985,
	957, 958, 959, 955, 956, 968, 969, 0, 0, 0,
	967, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1009, 973, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 1022, 0, 262, 1029, 263, 1028, 0,
	1039, 264, 265, 266, 267, 268, 975, 1008, 942, 269,
	1068, 1069, 537, 0, 270, 271, 1015, 0, 996, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 1049, 288, 289, 999, 997, 998, 1005, 1001, 1000,
	1004, 290, 291, 292, 293, 1032, 294, 1026, 1025, 946,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 1017, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 952, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 1040, 1041, 964, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 1024, 0,
	0, 0, 327, 0, 328, 0, 0, 1050, 329, 330,
	1037, 1038, 331, 332, 0, 333, 1047, 0, 974, 334,
	0, 335, 336, 337, 338, 339, 1010, 1011, 1014, 396,
	1052, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 1051, 348, 1019, 1020,
	0, 980, 0, 350, 351, 1053, 1012, 1054, 352, 353,
	354, 1055, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 1048, 1056,
	366, 367, 1057, 0, 368, 369, 370, 1003, 1002, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 1058, 387, 388,
	389, 392, 393, 391, 1059, 390, 943, 246, 1060, 394,
	965, 1013, 395, 1027, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	1061, 406, 1062, 1042, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	1043, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 1023, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	1063, 446, 447, 448, 449, 953, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 1006, 471, 455, 456,
	472, 473, 1064, 474, 475, 476, 477, 478, 479, 1021,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	1067, 486, 487, 488, 489, 1044, 0, 492, 493, 941,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 1033, 1034, 1035, 1036, 0, 508, 0, 502,
	503, 1045, 504, 1046, 963, 505, 506, 507, 0, 509,
	510, 0, 947, 511, 512, 513, 515, 516, 514, 517,
	1007, 518, 0, 0, 519, 520, 521, 576, 1030, 1066,
	0, 523, 522, 579, 0, 0, 0, 0, 524, 525,
	580, 526, 527, 528, 944, 0, 0, 0, 0, 0,
	0, 940, 0, 0, 0, 0, 0, 0, 938, 939,
	985, 957, 958, 959, 955, 956, 968, 969, 0, 0,
	0, 967, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 1009, 973, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 1022, 0, 262, 1029, 263, 1028,
	0, 1039, 264, 265, 266, 267, 268, 975, 1008, 942,
	269, 1068, 1069, 537, 0, 270, 271, 1015, 0, 996,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 1049, 288, 4006, 999, 997, 998, 1005, 1001,
	1000, 1004, 290, 291, 292, 293, 1032, 294, 1026, 1025,
	946, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 1017, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 952, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 1040, 1041, 964,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 1024,
	0, 0, 0, 327, 0, 328, 0, 0, 1050, 329,
	330, 1037, 1038, 331, 332, 0, 333, 1047, 0, 974,
	334, 0, 335, 336, 337, 338, 339, 1010, 1011, 1014,
	396, 1052, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 1051, 348, 1019,
	1020, 0, 980, 0, 350, 351, 1053, 1012, 1054, 352,
	353, 354, 1055, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 1048,
	1056, 366, 367, 1057, 0, 368, 369, 370, 1003, 1002,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1058, 387,
	388, 389, 392, 393, 391, 1059, 390, 943, 246, 1060,
	394, 965, 1013, 395, 1027, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 1061, 406, 1062, 1042, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 1043, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 1023, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 1063, 446, 447, 448, 449, 953, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 1006, 471, 455,
	456, 472, 473, 1064, 474, 475, 476, 477, 478, 479,
	1021, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 1067, 486, 487, 488, 489, 1044, 0, 492, 493,
	941, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 1033, 1034, 1035, 1036, 0, 508, 0,
	502, 503, 1045, 504, 1046, 963, 505, 506, 507, 0,
	4005, 510, 0, 947, 511, 512, 513, 515, 516, 514,
	517, 1007, 518, 0, 0, 519, 520, 521, 576, 1030,
	1066, 0, 523, 522, 579, 0, 0, 0, 0, 524,
	525, 580, 526, 527, 528, 944, 0, 0, 0, 0,
	0, 0, 940, 0, 0, 0, 0, 0, 0, 938,
	939, 985, 957, 958, 959, 955, 956, 968, 969, 0,
	0, 0, 967, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1009, 973, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 4004, 1022, 0, 262, 1029, 263,
	1028, 0, 1039, 264, 265, 266, 267, 268, 975, 1008,
	942, 269, 1068, 1069, 537, 0, 270, 271, 1015, 0,
	996, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 1049, 288, 4006, 999, 997, 998, 1005,
	1001, 1000, 1004, 290, 291, 292, 293, 1032, 294, 1026,
	1025, 946, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 1017, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 952, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 1040, 1041,
	964, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	1024, 0, 0, 0, 327, 0, 328, 0, 0, 1050,
	329, 330, 1037, 1038, 331, 332, 0, 333, 1047, 0,
	974, 334, 0, 335, 336, 337, 338, 339, 1010, 1011,
	1014, 396, 1052, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 0, 1051, 348,
	1019, 1020, 0, 980, 0, 350, 351, 1053, 1012, 1054,
	352, 353, 354, 1055, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	1048, 1056, 366, 367, 1057, 0, 368, 369, 370, 1003,
	1002, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1058,
	387, 388, 389, 392, 393, 391, 1059, 390, 943, 246,
	1060, 394, 965, 1013, 395, 1027, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 1061, 406, 1062, 1042, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 1043, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 1023, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 1063, 446, 447, 448, 449, 953, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 1006, 471,
	455, 456, 472, 473, 1064, 474, 475, 476, 477, 478,
	479, 1021, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 1067, 486, 487, 488, 489, 1044, 0, 492,
	493, 941, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 1033, 1034, 1035, 1036, 0, 508,
	0, 502, 503, 1045, 504, 1046, 963, 505, 506, 507,
	0, 4005, 510, 0, 947, 511, 512, 513, 515, 516,
	514, 517, 1007, 518, 0, 0, 519, 520, 521, 576,
	1030, 1066, 0, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 944, 0, 0, 0,
	0, 0, 0, 940, 0, 0, 0, 0, 0, 0,
	938, 939, 985, 957, 958, 959, 2729, 2730, 968, 969,
	0, 0, 0, 967, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 1009, 973, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 1022, 0, 262, 1029,
	263, 1028, 0, 1039, 264, 265, 266, 267, 268, 975,
	1008, 942, 269, 1068, 1069, 537, 0, 270, 271, 1015,
	0, 996, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 1049, 288, 289, 999, 997, 998,
	1005, 1001, 1000, 1004, 290, 291, 292, 293, 1032, 294,
	1026, 1025, 946, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 1017, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 952, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 1040,
	1041, 964, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 1024, 0, 0, 0, 327, 0, 328, 0, 0,
	1050, 329, 330, 1037, 1038, 331, 332, 0, 333, 1047,
	0, 974, 334, 0, 335, 336, 337, 338, 339, 1010,
	1011, 1014, 396, 1052, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 1051,
	348, 1019, 1020, 0, 980, 0, 350, 351, 1053, 1012,
	1054, 352, 353, 354, 1055, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 1048, 1056, 366, 367, 1057, 0, 368, 369, 370,
	1003, 1002, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1058, 387, 388, 389, 392, 393, 391, 1059, 390, 943,
	246, 1060, 394, 965, 1013, 395, 1027, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 1061, 406, 1062, 1042, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 1043, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 1023, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 1063, 446, 447, 448, 449, 953, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 1006,
	471, 455, 456, 472, 473, 1064, 474, 475, 476, 477,
	478, 479, 1021, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 1067, 486, 487, 488, 489, 1044, 0,
	492, 493, 941, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 1033, 1034, 1035, 1036, 0,
	508, 0, 502, 503, 1045, 504, 1046, 963, 505, 506,
	507, 0, 509, 510, 0, 947, 511, 512, 513, 515,
	516, 514, 517, 1007, 518, 0, 0, 519, 520, 521,
	576, 1030, 1066, 0, 523, 522, 579, 0, 0, 0,
	0, 524, 525, 580, 526, 527, 528, 944, 0, 0,
	0, 0, 0, 0, 940, 0, 0, 0, 0, 0,
	0, 938, 939, 985, 957, 958, 959, 2727, 2728, 968,
	969, 0, 0, 0, 967, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 1009, 973, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 1022, 0, 262,
	1029, 263, 1028, 0, 1039, 264, 265, 266, 267, 268,
	975, 1008, 942, 269, 1068, 1069, 537, 0, 270, 271,
	1015, 0, 996, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 1049, 288, 289, 999, 997,
	998, 1005, 1001, 1000, 1004, 290, 291, 292, 293, 1032,
	294, 1026, 1025, 946, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 1017, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 952,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	1040, 1041, 964, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 1024, 0, 0, 0, 327, 0, 328, 0,
	0, 1050, 329, 330, 1037, 1038, 331, 332, 0, 333,
	1047, 0, 974, 334, 0, 335, 336, 337, 338, 339,
	1010, 1011, 1014, 396, 1052, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 0,
	1051, 348, 1019, 1020, 0, 980, 0, 350, 351, 1053,
	1012, 1054, 352, 353, 354, 1055, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 1048, 1056, 366, 367, 1057, 0, 368, 369,
	370, 1003, 1002, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1058, 387, 388, 389, 392, 393, 391, 1059, 390,
	943, 246, 1060, 394, 965, 1013, 395, 1027, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 1061, 406, 1062, 1042, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 1043, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 1023,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 1063, 446, 447, 448, 449, 953,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	1006, 471, 455, 456, 472, 473, 1064, 474, 475, 476,
	477, 478, 479, 1021, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 1067, 486, 487, 488, 489, 1044,
	0, 492, 493, 941, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 1033, 1034, 1035, 1036,
	0, 508, 0, 502, 503, 1045, 504, 1046, 963, 505,
	506, 507, 0, 509, 510, 0, 947, 511, 512, 513,
	515, 516, 514, 517, 1007, 518, 0, 0, 519, 520,
	521, 576, 1030, 1066, 0, 523, 522, 579, 0, 0,
	0, 0, 524, 525, 580, 526, 527, 528, 944, 0,
	0, 0, 0, 0, 0, 940, 0, 0, 0, 0,
	0, 0, 938, 939, 985, 957, 958, 959, 955, 956,
	968, 969, 0, 0, 0, 967, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 1009, 973, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 1022, 0,
	262, 1029, 263, 1028, 0, 1039, 264, 265, 266, 267,
	268, 975, 1008, 942, 269, 1068, 1069, 537, 0, 270,
	271, 1015, 0, 996, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 1049, 288, 289, 999,
	997, 998, 1005, 1001, 1000, 1004, 290, 291, 292, 293,
	1032, 294, 1026, 1025, 946, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 1017, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	952, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 1040, 1041, 964, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 1024, 0, 0, 0, 327, 0, 328,
	0, 0, 1050, 329, 330, 1037, 1038, 331, 332, 0,
	333, 1047, 0, 974, 334, 0, 335, 336, 337, 338,
	339, 1010, 1011, 1014, 396, 1052, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 1051, 348, 1019, 1020, 0, 980, 0, 350, 351,
	1053, 1012, 1054, 352, 353, 354, 1055, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 1048, 1056, 366, 367, 1057, 0, 368,
	369, 370, 1003, 1002, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 1058, 387, 388, 389, 392, 393, 391, 1059,
	390, 943, 246, 1060, 394, 965, 1013, 395, 1027, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 1061, 406, 1062, 1042, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 1043, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	1023, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1063, 446, 447, 448, 449,
	953, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 1006, 471, 455, 456, 472, 473, 1064, 474, 475,
	476, 477, 478, 479, 1021, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 1067, 486, 487, 488, 489,
	1044, 0, 492, 493, 941, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 1033, 1034, 1035,
	1036, 0, 508, 0, 502, 503, 1045, 504, 1046, 963,
	505, 506, 507, 0, 509, 510, 0, 947, 511, 512,
	513, 515, 516, 514, 517, 1007, 518, 0, 0, 519,
	520, 521, 576, 1030, 1066, 0, 523, 522, 579, 0,
	0, 0, 0, 524, 525, 580, 526, 527, 528, 944,
	0, 0, 0, 0, 0, 0, 940, 0, 0, 0,
	0, 0, 0, 2151, 2152, 985, 957, 958, 959, 955,
	956, 968, 969, 0, 0, 0, 967, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1009, 973, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 1022,
	0, 262, 1029, 263, 1028, 0, 1039, 264, 265, 266,
	267, 268, 975, 1008, 0, 269, 1068, 1069, 537, 0,
	270, 271, 1015, 0, 996, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 1049, 288, 289,
	999, 997, 998, 1005, 1001, 1000, 1004, 290, 291, 292,
	293, 1032, 294, 1026, 1025, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 1017,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 952, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 1040, 1041, 964, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 1024, 0, 0, 0, 327, 0,
	328, 0, 0, 1050, 329, 330, 1037, 1038, 331, 332,
	0, 333, 1047, 0, 974, 334, 0, 335, 336, 337,
	338, 339, 1010, 1011, 1014, 396, 1052, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 1051, 348, 1019, 1020, 0, 980, 0, 350,
	351, 1053, 1012, 1054, 352, 353, 354, 1055, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 1048, 1056, 366, 367, 1057, 0,
	368, 369, 370, 1003, 1002, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 1058, 387, 388, 389, 392, 393, 391,
	1059, 390, 0, 246, 1060, 394, 965, 1013, 395, 1027,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 1061, 406, 1062, 1042,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 1043, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 1023, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 1063, 446, 447, 448,
	449, 953, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 1006, 471, 455, 456, 472, 473, 1064, 474,
	475, 476, 477, 478, 479, 1021, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 1067, 486, 487, 488,
	489, 1044, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 1033, 1034,
	1035, 1036, 0, 508, 0, 502, 503, 1045, 504, 1046,
	963, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 1007, 518, 0, 0,
	519, 520, 521, 576, 1030, 1066, 0, 523, 522, 579,
	0, 0, 0, 0, 524, 525, 580, 526, 527, 528,
	985, 957, 958, 959, 955, 956, 968, 2347, 0, 0,
	0, 0, 0, 0, 2345, 2346, 0, 247, 248, 249,
	250, 251, 252, 969, 253, 254, 0, 967, 0, 0,
	0, 1009, 973, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 1022, 0, 262, 1029, 263, 1028,
	0, 1039, 264, 265, 266, 267, 268, 975, 1008, 0,
	269, 1068, 1069, 537, 0, 270, 271, 1015, 0, 996,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 1049, 288, 289, 999, 997, 998, 1005, 1001,
	1000, 1004, 290, 291, 292, 293, 1032, 294, 1026, 1025,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 1017, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 952, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 1040, 1041, 964,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 1024,
	0, 0, 0, 327, 0, 328, 0, 0, 1050, 329,
	330, 1037, 1038, 331, 332, 0, 333, 1047, 0, 974,
	334, 0, 335, 336, 337, 338, 339, 1010, 1011, 1014,
	396, 1052, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 1051, 348, 1019,
	1020, 0, 980, 0, 350, 351, 1053, 1012, 1054, 352,
	353, 354, 1055, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 1048,
	1056, 366, 367, 1057, 0, 368, 369, 370, 1003, 1002,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1058, 387,
	388, 389, 392, 393, 391, 1059, 390, 0, 246, 1060,
	394, 965, 1013, 395, 1027, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 1061, 406, 1062, 1042, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 1043, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 1023, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 1063, 446, 447, 448, 449, 2722, 2723, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 1006, 471, 455,
	456, 472, 473, 1064, 474, 475, 476, 477, 478, 479,
	1021, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 1067, 486, 487, 488, 489, 1044, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 1033, 1034, 1035, 1036, 0, 508, 0,
	502, 503, 1045, 504, 1046, 963, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 1007, 518, 0, 0, 519, 520, 521, 576, 1030,
	1066, 0, 523, 522, 579, 0, 0, 0, 0, 524,
	525, 580, 526, 527, 528, 985, 957, 958, 959, 955,
	956, 968, 0, 0, 0, 0, 0, 0, 0, 1876,
	1877, 0, 247, 248, 249, 250, 251, 252, 969, 253,
	254, 0, 967, 0, 0, 0, 1009, 973, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 0, 1022,
	0, 262, 1029, 263, 1028, 0, 1039, 264, 265, 266,
	267, 268, 975, 1008, 942, 269, 1068, 1069, 537, 0,
	270, 271, 1015, 0, 996, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 1049, 288, 4006,
	999, 997, 998, 1005, 1001, 1000, 1004, 290, 291, 292,
	293, 1032, 294, 1026, 1025, 946, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 1017,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 952, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 1040, 1041, 964, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 1024, 0, 0, 0, 327, 0,
	328, 0, 0, 1050, 329, 330, 1037, 1038, 331, 332,
	0, 333, 1047, 0, 974, 334, 0, 335, 336, 337,
	338, 339, 1010, 1011, 1014, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 1051, 348, 1019, 1020, 0, 980, 0, 350,
	351, 0, 1012, 0, 352, 353, 354, 1055, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 1048, 1056, 366, 367, 0, 0,
	368, 369, 370, 1003, 1002, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 1058, 387, 388, 389, 392, 393, 391,
	1059, 390, 943, 246, 0, 394, 965, 1013, 395, 1027,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 1061, 406, 1062, 1042,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 1043, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 1023, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 1063, 446, 447, 448,
	449, 953, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 1006, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 1021, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 1067, 486, 487, 488,
	489, 1044, 0, 492, 493, 941, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 1033, 1034,
	1035, 1036, 0, 508, 0, 502, 503, 1045, 504, 1046,
	963, 505, 506, 507, 0, 4005, 510, 0, 947, 511,
	512, 513, 515, 516, 514, 517, 1007, 518, 0, 0,
	519, 520, 521, 576, 1030, 1066, 0, 523, 522, 579,
	0, 0, 0, 0, 524, 525, 580, 526, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 931,
	0, 1106, 0, 0, 938, 939, 0, 0, 0, 0,
	0, 0, 0, 969, 0, 0, 0, 967, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1009, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 1008,
	0, 269, 535, 536, 537, 0, 270, 271, 1015, 0,
	996, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 1049, 288, 289, 999, 997, 998, 1005,
	1001, 1000, 1004, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 1040, 1041,
	0, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 1050,
	329, 330, 545, 546, 331, 332, 0, 333, 1047, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 1010, 1011,
	1014, 396, 1052, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 0, 1051, 348,
	552, 553, 0, 554, 0, 350, 351, 1053, 1012, 1054,
	352, 353, 354, 1055, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 1092, 362, 364, 363, 0, 365,
	1048, 1056, 366, 367, 1057, 0, 368, 369, 370, 1003,
	1002, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1058,
	387, 388, 389, 392, 393, 391, 1059, 390, 0, 246,
	1060, 394, 0, 1013, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 1098, 401, 402, 403, 0, 0, 404,
	405, 559, 1061, 406, 1062, 1042, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 1043, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 1063, 446, 447, 448, 449, 566, 1100, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 208, 466, 467, 465, 468, 469, 470, 1006, 471,
	455, 456, 472, 473, 1064, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 1044, 0, 492,
	493, 0, 491, 210, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 1045, 504, 1046, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 1007, 518, 0, 0, 519, 520, 521, 1440,
	577, 578, 0, 523, 522, 579, 0, 1106, 0, 202,
	524, 525, 580, 526, 527, 528, 0, 203, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 1096, 1009, 1766,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 1008, 0, 269, 535, 536,
	537, 0, 270, 271, 1015, 0, 996, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 1049,
	288, 289, 999, 997, 998, 1005, 1001, 1000, 1004, 290,
	291, 292, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 1040, 1041, 0, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 1050, 329, 330, 545, 546,
	331, 332, 0, 333, 1047, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 1010, 1011, 1014, 396, 1052, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 1051, 348, 552, 553, 0, 554,
	0, 350, 351, 1053, 1012, 1054, 352, 353, 354, 1055,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	1092, 362, 364, 363, 0, 365, 1048, 1056, 366, 367,
	1057, 0, 368, 369, 370, 1003, 1002, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 1058, 387, 388, 389, 392,
	393, 391, 1059, 390, 0, 246, 1060, 394, 0, 1013,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 1098,
	401, 402, 403, 0, 0, 404, 405, 559, 1061, 406,
	1062, 1042, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 1043, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 1063, 446,
	447, 448, 449, 566, 1100, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 208, 466, 467,
	465, 468, 469, 470, 1006, 471, 455, 456, 472, 473,
	1064, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 1044, 0, 492, 493, 0, 491, 210,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 1045,
	504, 1046, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 1007, 518,
	0, 0, 519, 520, 521, 1440, 577, 578, 0, 523,
	522, 579, 0, 0, 0, 202, 524, 525, 580, 526,
	527, 528, 0, 203, 0, 0, 0, 2882, 0, 1106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1096, 0, 1766, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1009, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 1008, 0, 269,
	535, 536, 537, 0, 270, 271, 1015, 0, 996, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 1049, 288, 289, 999, 997, 998, 1005, 1001, 1000,
	1004, 290, 291, 292, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 1040, 1041, 0, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 0, 1050, 329, 330,
	545, 546, 331, 332, 0, 333, 1047, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 1010, 1011, 1014, 396,
	1052, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 1051, 348, 552, 553,
	0, 554, 0, 350, 351, 1053, 1012, 1054, 352, 353,
	354, 1055, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 1092, 362, 364, 363, 0, 365, 1048, 1056,
	366, 367, 1057, 0, 368, 369, 370, 1003, 1002, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 1058, 387, 388,
	389, 392, 393, 391, 1059, 390, 0, 246, 1060, 394,
	0, 1013, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 1098, 401, 402, 403, 0, 0, 404, 405, 559,
	1061, 406, 1062, 1042, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	1043, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	1063, 446, 447, 448, 449, 566, 1100, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 1006, 471, 455, 456,
	472, 473, 1064, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 1044, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 1045, 504, 1046, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	1007, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	0, 523, 522, 579, 0, 1088, 0, 1106, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 1096, 0, 1094, 1009, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 1008, 0, 269, 535, 536,
	537, 0, 270, 271, 1015, 0, 996, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 1049,
	288, 289, 999, 997, 998, 1005, 1001, 1000, 1004, 290,
	291, 292, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 1040, 1041, 0, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 1050, 329, 330, 545, 546,
	331, 332, 0, 333, 1047, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 1010, 1011, 1014, 396, 1052, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 1051, 348, 552, 553, 0, 554,
	0, 350, 351, 1053, 1012, 1054, 352, 353, 354, 1055,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	1092, 362, 364, 363, 0, 365, 1048, 1056, 366, 367,
	1057, 0, 368, 369, 370, 1003, 1002, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 1058, 387, 388, 389, 392,
	393, 391, 1059, 390, 0, 246, 1060, 394, 0, 1013,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 1098,
	401, 402, 403, 0, 0, 404, 405, 559, 1061, 406,
	1062, 1042, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 1043, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 1063, 446,
	447, 448, 449, 566, 1100, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 1006, 471, 455, 456, 472, 473,
	1064, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 1044, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 1045,
	504, 1046, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 1007, 518,
	0, 0, 519, 520, 521, 576, 577, 578, 0, 523,
	522, 579, 0, 1106, 0, 0, 524, 525, 580, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 1096, 1009, 1094, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 1008, 0, 269, 535, 536, 537, 0, 270, 271,
	1015, 0, 996, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 1049, 288, 289, 999, 997,
	998, 1005, 1001, 1000, 1004, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	1040, 1041, 0, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 1050, 329, 330, 545, 546, 331, 332, 0, 333,
	1047, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	1010, 1011, 1014, 396, 1052, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 0,
	1051, 348, 552, 553, 0, 554, 0, 350, 351, 1053,
	1012, 1054, 352, 353, 354, 1055, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 1092, 362, 364, 363,
	0, 365, 1048, 1056, 366, 367, 1057, 0, 368, 369,
	370, 1003, 1002, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1058, 387, 388, 389, 392, 393, 391, 1059, 390,
	0, 246, 1060, 394, 0, 1013, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 1098, 401, 402, 403, 0,
	0, 404, 405, 559, 1061, 406, 1062, 1042, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 1043, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 1063, 446, 447, 448, 449, 566,
	1100, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	1006, 471, 455, 456, 472, 473, 1064, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 1044,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 1045, 504, 1046, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 1007, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 0, 523, 522, 579, 0, 1106,
	0, 0, 524, 525, 580, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 1096,
	1009, 1094, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 1008, 0, 269,
	535, 536, 537, 0, 270, 271, 1015, 0, 996, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 1049, 288, 289, 999, 997, 998, 1005, 1001, 1000,
	1004, 290, 291, 292, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 1040, 1041, 0, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 0, 1050, 329, 330,
	545, 546, 331, 332, 0, 333, 1047, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 1010, 1011, 1014, 396,
	1052, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 1051, 348, 552, 553,
	0, 554, 0, 350, 351, 1053, 1012, 1054, 352, 353,
	354, 1055, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 1048, 1056,
	366, 367, 1057, 0, 368, 369, 370, 1003, 1002, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 1058, 387, 388,
	389, 392, 393, 391, 1059, 390, 0, 246, 1060, 394,
	0, 1013, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	1061, 406, 1062, 1042, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	1043, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	1063, 446, 447, 448, 449, 566, 1100, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 1006, 471, 455, 456,
	472, 473, 1064, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 1044, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 1045, 504, 1046, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	1007, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	0, 523, 522, 579, 0, 931, 0, 1291, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 1665, 529, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 535, 536,
	537, 0, 270, 271, 538, 0, 1257, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 1049,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 0, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 1050, 329, 330, 545, 546,
	331, 332, 0, 333, 547, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 549, 550, 551, 396, 1052, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 0,
	346, 347, 349, 0, 1051, 348, 552, 553, 0, 554,
	0, 350, 351, 1053, 555, 1054, 352, 353, 354, 1055,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 556, 1056, 366, 367,
	1057, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 1058, 387, 388, 389, 392,
	393, 391, 1059, 390, 0, 0, 1060, 394, 0, 557,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 1061, 406,
	1062, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 1063, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 208, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	1064, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 0, 492, 493, 0, 491, 210,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 574,
	504, 575, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 1440, 577, 578, 0, 523,
	522, 579, 0, 0, 0, 202, 524, 525, 580, 526,
	527, 528, 0, 203, 0, 0, 0, 1437, 0, 1291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 174, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 0, 270, 271, 538, 0, 1257, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 1049, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 0, 1050, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 549, 550, 551, 396,
	1052, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 0, 346, 347, 349, 0, 1051, 348, 552, 553,
	0, 554, 0, 350, 351, 1053, 555, 1054, 352, 353,
	354, 1055, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 1056,
	366, 367, 1057, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 1058, 387, 388,
	389, 392, 393, 391, 1059, 390, 0, 0, 1060, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	1061, 406, 1062, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	1063, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 208,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 1064, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 210, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 1440, 577, 578,
	0, 523, 522, 579, 0, 0, 0, 202, 524, 525,
	580, 526, 527, 528, 0, 203, 0, 0, 0, 0,
	0, 1291, 1290, 0, 0, 0, 0, 1288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 174, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	1257, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 1049, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 1050,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 1052, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 1051, 348,
	552, 553, 0, 554, 0, 350, 351, 1053, 555, 1054,
	352, 353, 354, 1055, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 1056, 366, 367, 1057, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1058,
	387, 388, 389, 392, 393, 391, 1059, 390, 0, 0,
	1060, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 1061, 406, 1062, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 1063, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 1064, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 0, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 1291, 1290, 0, 0,
	0, 0, 1288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 1462,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 1257, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1049, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 1050, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 549, 550, 551, 396, 1052, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 0, 346,
	347, 349, 0, 1051, 348, 552, 553, 0, 554, 0,
	350, 351, 1053, 555, 1054, 352, 353, 354, 1055, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 1056, 366, 367, 1057,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1058, 387, 388, 389, 392, 393,
	391, 1059, 390, 0, 0, 1060, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 1061, 406, 1062,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1063, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 1064,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 0, 523, 522,
	579, 0, 0, 0, 0, 524, 525, 580, 526, 527,
	528, 1291, 1290, 0, 0, 0, 0, 1288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 3121, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	1257, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 1049, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 1050,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 1052, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 1051, 348,
	552, 553, 0, 554, 0, 350, 351, 1053, 555, 1054,
	352, 353, 354, 1055, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 1952, 364, 363, 0, 365,
	556, 1056, 366, 367, 1057, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1058,
	387, 388, 389, 392, 393, 391, 1059, 390, 0, 0,
	1060, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 1061, 406, 1062, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 1063, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 1064, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 0, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 1291, 1290, 0, 0,
	0, 0, 1288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 1462,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 1257, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1049, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 1050, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 549, 550, 551, 396, 1052, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 0, 346,
	347, 349, 0, 1051, 348, 552, 553, 0, 554, 0,
	350, 351, 1053, 555, 1054, 352, 353, 354, 1055, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 1056, 366, 367, 1057,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1058, 387, 388, 389, 392, 393,
	391, 1059, 390, 0, 0, 1060, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 1061, 406, 1062,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1063, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 1064,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 0, 523, 522,
	579, 1106, 0, 0, 0, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1009, 0, 1446, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 1008,
	0, 269, 535, 536, 537, 0, 270, 271, 1015, 0,
	996, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 1049, 288, 289, 999, 997, 998, 1005,
	1001, 1000, 1004, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 1040, 1041,
	0, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 1050,
	329, 330, 545, 546, 331, 332, 0, 333, 1047, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 1010, 1011,
	1014, 396, 1052, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 0, 1051, 348,
	552, 553, 0, 554, 0, 350, 351, 1053, 1012, 1054,
	352, 353, 354, 1055, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	1048, 1056, 366, 367, 1057, 0, 368, 369, 370, 1003,
	1002, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1058,
	387, 388, 389, 392, 393, 391, 1059, 390, 0, 246,
	1060, 394, 0, 1013, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 1061, 406, 1062, 1042, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 1043, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 1063, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 1006, 471,
	455, 456, 472, 473, 1064, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 1044, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 1045, 504, 1046, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 1007, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 0, 523, 522, 579, 931, 0, 241, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 0, 0, 269, 535,
	536, 537, 0, 270, 271, 538, 0, 0, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 292, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 0, 329, 330, 545,
	546, 331, 332, 0, 333, 547, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 0,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	0, 346, 347, 349, 0, 0, 348, 552, 553, 0,
	554, 0, 350, 351, 0, 555, 0, 352, 353, 354,
	0, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 556, 0, 366,
	367, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 0, 387, 388, 389,
	392, 393, 391, 0, 390, 0, 0, 0, 394, 0,
	557, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 0,
	406, 0, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 0,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 208, 466,
	467, 465, 468, 469, 470, 0, 471, 455, 456, 472,
	473, 0, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 0, 492, 493, 0, 491,
	210, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 570, 571, 572, 573, 0, 508, 0, 502, 503,
	574, 504, 575, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 0,
	518, 0, 0, 519, 520, 521, 1440, 577, 578, 0,
	523, 522, 579, 241, 0, 0, 202, 524, 525, 580,
	526, 527, 528, 0, 203, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 174, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 271,
	538, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	549, 550, 551, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 0,
	0, 348, 552, 553, 0, 554, 0, 350, 351, 0,
	555, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 0, 366, 367, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 246, 0, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 0, 406, 0, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 0, 523, 522, 579, 0, 1381,
	0, 241, 524, 525, 580, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 1780, 529, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 0, 350, 351, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 246,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 0, 523, 522, 579, 0, 241, 2646, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 1385, 529, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 535, 536,
	537, 0, 270, 271, 538, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 545, 546,
	331, 332, 0, 333, 547, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 549, 550, 551, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 0,
	346, 347, 349, 0, 0, 348, 552, 553, 0, 554,
	0, 350, 351, 0, 555, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 556, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 0, 0, 394, 0, 557,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 0, 406,
	0, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 574,
	504, 575, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 576, 577, 578, 0, 523,
	522, 579, 241, 0, 0, 0, 524, 525, 580, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 4155, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 534, 264, 265, 266, 267, 268, 0,
	0, 0, 269, 535, 536, 537, 0, 270, 271, 538,
	0, 0, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 0, 288, 289, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 292, 293, 0, 294,
	539, 540, 0, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 304, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 541, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 542,
	543, 0, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 544, 0, 0, 0, 327, 0, 328, 0, 0,
	0, 329, 330, 545, 546, 331, 332, 0, 333, 547,
	0, 548, 334, 0, 335, 336, 337, 338, 339, 549,
	550, 551, 396, 0, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 0,
	348, 552, 553, 0, 554, 0, 350, 351, 0, 555,
	0, 352, 353, 354, 0, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 556, 0, 366, 367, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	0, 387, 388, 389, 392, 393, 391, 0, 390, 0,
	246, 0, 394, 0, 557, 395, 558, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 0, 406, 0, 560, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 563, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 565, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 0, 446, 447, 448, 449, 566, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 0,
	471, 455, 456, 472, 473, 0, 474, 475, 476, 477,
	478, 479, 567, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 568, 486, 487, 488, 489, 569, 0,
	492, 493, 0, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 570, 571, 572, 573, 0,
	508, 0, 502, 503, 574, 504, 575, 0, 505, 506,
	507, 0, 509, 510, 0, 0, 511, 512, 513, 515,
	516, 514, 517, 0, 518, 0, 0, 519, 520, 521,
	576, 577, 578, 241, 523, 522, 579, 0, 0, 0,
	0, 524, 525, 580, 526, 527, 528, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 3067, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 271,
	538, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	549, 550, 551, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 0,
	0, 348, 552, 553, 0, 554, 0, 350, 351, 0,
	555, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 0, 366, 367, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 246, 0, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 0, 406, 0, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 241, 523, 522, 579, 0, 0,
	0, 0, 524, 525, 580, 526, 527, 528, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 1385,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 0, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 0, 329, 330, 545, 546, 331, 332, 0,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 549, 550, 551, 396, 0, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 0, 346, 347, 349,
	0, 0, 348, 552, 553, 0, 554, 0, 350, 351,
	0, 555, 0, 352, 353, 354, 0, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 0, 366, 367, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 0, 387, 388, 389, 392, 393, 391, 0,
	390, 0, 0, 0, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 0, 406, 0, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 0, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 0, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 0, 523, 522, 579, 241,
	0, 0, 0, 524, 525, 580, 526, 527, 528, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	529, 0, 2619, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 0, 270, 271, 538, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 549, 550, 551, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 0, 346, 347, 349, 0, 0, 348, 552, 553,
	0, 554, 0, 350, 351, 0, 555, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 0, 0, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	0, 406, 0, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	0, 523, 522, 579, 241, 0, 0, 0, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 3221, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 0, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 0, 329, 330, 545, 546, 331, 332, 0,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 549, 550, 551, 396, 0, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 0, 346, 347, 349,
	0, 0, 348, 552, 553, 0, 554, 0, 350, 351,
	0, 555, 0, 352, 353, 354, 0, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 0, 366, 367, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 0, 387, 388, 389, 392, 393, 391, 0,
	390, 0, 0, 0, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 0, 406, 0, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 0, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 0, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 0, 523, 522, 579, 0,
	781, 0, 665, 524, 525, 580, 526, 527, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 2049, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 534, 264, 265, 266, 267, 268, 0,
	0, 0, 269, 535, 536, 537, 0, 270, 271, 538,
	0, 0, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 0, 288, 289, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 672, 293, 0, 294,
	539, 540, 0, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 304, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 541, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 542,
	543, 0, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 544, 0, 0, 0, 327, 0, 328, 0, 779,
	0, 329, 330, 545, 546, 331, 332, 0, 333, 547,
	0, 548, 334, 0, 335, 336, 337, 338, 339, 549,
	550, 551, 396, 0, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 0,
	348, 552, 553, 0, 554, 0, 350, 351, 0, 555,
	0, 352, 353, 354, 0, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 556, 0, 366, 367, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	0, 387, 388, 389, 392, 393, 391, 0, 390, 0,
	246, 0, 394, 0, 557, 395, 558, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 0, 406, 0, 560, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 563, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 565, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 0, 446, 447, 448, 449, 566, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 0,
	471, 455, 456, 472, 473, 0, 474, 475, 476, 477,
	478, 479, 567, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 568, 486, 487, 488, 489, 569, 0,
	492, 493, 0, 491, 670, 494, 495, 496, 497, 671,
	499, 318, 500, 0, 501, 570, 571, 572, 573, 0,
	508, 0, 502, 503, 574, 504, 575, 0, 505, 506,
	507, 0, 509, 510, 0, 0, 511, 512, 513, 515,
	516, 514, 517, 0, 518, 0, 0, 519, 520, 521,
	576, 577, 578, 0, 523, 522, 579, 0, 663, 0,
	665, 524, 525, 580, 526, 527, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 675, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 0,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 672, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 0, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 549, 550, 551,
	396, 0, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 0, 348, 552,
	553, 0, 554, 0, 350, 351, 0, 555, 0, 352,
	353, 354, 0, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	0, 366, 367, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 0, 387,
	388, 389, 392, 393, 391, 0, 390, 0, 246, 0,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 0, 406, 0, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 0, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 0, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 670, 494, 495, 496, 497, 671, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 665, 523, 522, 579, 0, 0, 0, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 675, 529, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 672, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 0, 350, 351, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 246,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 670, 494, 495, 496, 497, 671, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 665, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 675, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 534, 264, 265, 266, 267, 268, 0,
	0, 0, 269, 535, 536, 537, 0, 270, 271, 538,
	0, 0, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 0, 288, 289, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 672, 293, 0, 294,
	539, 540, 0, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 304, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 541, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 542,
	543, 0, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 544, 0, 0, 0, 327, 0, 328, 0, 0,
	0, 329, 330, 545, 546, 331, 332, 0, 333, 547,
	0, 548, 334, 0, 335, 336, 337, 338, 339, 549,
	550, 551, 396, 0, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 0,
	348, 552, 553, 0, 554, 0, 350, 351, 0, 555,
	0, 352, 353, 354, 0, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 556, 0, 366, 367, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	0, 387, 388, 389, 392, 393, 391, 0, 390, 0,
	246, 0, 394, 0, 557, 395, 558, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 0, 406, 0, 560, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 563, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 565, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 0, 2086, 447, 448, 449, 566, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 0,
	471, 455, 456, 472, 473, 0, 474, 475, 476, 477,
	478, 479, 567, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 568, 486, 487, 488, 489, 569, 0,
	492, 493, 0, 491, 670, 494, 495, 496, 497, 671,
	499, 318, 500, 0, 501, 570, 571, 572, 573, 0,
	508, 0, 502, 503, 574, 504, 575, 0, 505, 506,
	507, 0, 509, 510, 0, 0, 511, 512, 513, 515,
	516, 514, 517, 0, 518, 0, 0, 519, 520, 521,
	576, 577, 578, 1815, 523, 522, 579, 0, 0, 0,
	0, 524, 525, 580, 526, 527, 528, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 675, 0, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 0, 1821, 0, 262,
	1811, 263, 1827, 0, 1834, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 1837, 1838, 0, 0, 270, 271,
	0, 0, 1257, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 1049, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 1032,
	294, 1825, 1824, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 1017, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 0,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 1823, 0, 0, 0, 327, 0, 328, 0,
	0, 1050, 329, 330, 1832, 1833, 331, 332, 0, 333,
	0, 0, 0, 334, 0, 335, 336, 337, 338, 339,
	0, 0, 0, 396, 1052, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 0, 346, 347, 349, 0,
	1051, 348, 1818, 1819, 0, 1814, 0, 350, 351, 1053,
	0, 1054, 352, 353, 354, 1055, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 0, 1056, 366, 367, 1057, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1058, 387, 388, 389, 392, 393, 391, 1059, 390,
	0, 0, 1060, 394, 0, 0, 395, 1826, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 0, 1061, 406, 1062, 0, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 1808, 1809, 0, 419, 0, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 1822,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 1063, 446, 447, 448, 449, 0,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 1064, 474, 475, 476,
	477, 478, 479, 1820, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 1836, 486, 487, 488, 489, 0,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 1828, 1829, 1830, 1831,
	0, 508, 0, 502, 503, 0, 504, 0, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 0, 1812, 1835, 0, 523, 522, 0, 0, 0,
	0, 0, 524, 525, 0, 526, 527, 528, 1291, 1290,
	0, 0, 0, 0, 1288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 1802, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 0, 0, 269, 535,
	536, 537, 0, 270, 271, 538, 0, 1257, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1049, 288, 289, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 292, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 0, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 1050, 329, 330, 545,
	546, 331, 332, 0, 333, 547, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 1052,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	0, 346, 347, 349, 0, 1051, 348, 552, 553, 0,
	554, 0, 350, 351, 1053, 555, 1054, 352, 353, 354,
	1055, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 556, 1056, 366,
	367, 1057, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1058, 387, 388, 389,
	392, 393, 391, 1059, 390, 0, 0, 1060, 394, 3384,
	557, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 1061,
	406, 1062, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1063,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 0, 471, 455, 456, 472,
	473, 1064, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 0, 492, 493, 0, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 570, 571, 572, 573, 0, 508, 0, 502, 503,
	574, 504, 575, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 0,
	518, 0, 0, 519, 520, 521, 576, 577, 578, 0,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 1291, 1290, 0, 0, 0, 0, 1288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 271,
	538, 0, 1257, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 1049, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 1050, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	549, 550, 551, 396, 1052, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 0, 346, 347, 349, 0,
	1051, 348, 552, 553, 0, 554, 0, 350, 351, 1053,
	555, 1054, 352, 353, 354, 1055, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 1056, 366, 367, 1057, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1058, 387, 388, 389, 392, 393, 391, 1059, 390,
	0, 0, 1060, 394, 3043, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 1061, 406, 1062, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 1063, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 1064, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 0, 523, 522, 579, 1291, 1290,
	0, 0, 524, 525, 580, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 0, 0, 269, 535,
	536, 537, 0, 270, 271, 538, 0, 1257, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1049, 288, 289, 0, 0, 0, 0, 0, 0, 3032,
	290, 291, 292, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 0, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 1050, 329, 330, 545,
	546, 331, 332, 0, 333, 547, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 1052,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	0, 346, 347, 349, 0, 1051, 348, 552, 553, 0,
	554, 0, 350, 351, 1053, 555, 1054, 352, 353, 354,
	1055, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 556, 1056, 366,
	367, 1057, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1058, 387, 388, 389,
	392, 393, 391, 1059, 390, 0, 0, 1060, 394, 0,
	557, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 1061,
	406, 1062, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1063,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 3033, 471, 455, 456, 472,
	473, 1064, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 0, 492, 493, 0, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 570, 571, 572, 573, 0, 508, 0, 502, 503,
	574, 504, 575, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 0,
	518, 0, 0, 519, 520, 521, 576, 577, 578, 241,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 0, 270, 271, 538, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 549, 550, 551, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 0, 348, 552, 553,
	0, 554, 0, 350, 351, 0, 555, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 246, 0, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	0, 406, 0, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	0, 523, 522, 579, 0, 0, 0, 0, 524, 525,
	580, 526, 527, 528, 1489, 0, 1291, 1290, 0, 0,
	0, 0, 1288, 0, 0, 0, 0, 0, 0, 0,
	675, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 1257, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1049, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 244, 0, 0, 0,
	0, 0, 1488, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 1050, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 549, 550, 551, 396, 1052, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 0, 346,
	347, 349, 0, 1051, 348, 552, 553, 0, 554, 0,
	350, 351, 1053, 555, 1054, 352, 353, 354, 1055, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 1056, 366, 367, 1057,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1058, 387, 388, 389, 392, 393,
	391, 1059, 390, 0, 0, 1060, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 1061, 406, 1062,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	1487, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1063, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 1486, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 1064,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 0, 523, 522,
	579, 0, 0, 0, 0, 524, 525, 580, 526, 527,
	528, 1430, 0, 1291, 1290, 0, 0, 0, 0, 1288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 271,
	538, 0, 1257, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 1049, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 1050, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	1429, 550, 551, 396, 1052, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 0, 346, 347, 349, 0,
	1051, 348, 552, 553, 0, 554, 0, 350, 351, 1053,
	555, 1054, 352, 353, 354, 1055, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 1056, 366, 367, 1057, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1058, 387, 388, 389, 392, 393, 391, 1059, 390,
	0, 0, 1060, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 1061, 406, 1062, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 1063, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 1064, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 0, 523, 522, 579, 0, 0,
	0, 0, 524, 525, 580, 526, 527, 528, 1360, 0,
	1291, 1290, 0, 0, 0, 0, 1288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 1257,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 1049, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 1050, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 1359, 550, 551,
	396, 1052, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 0, 346, 347, 349, 0, 1051, 348, 552,
	553, 0, 554, 0, 350, 351, 1053, 555, 1054, 352,
	353, 354, 1055, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	1056, 366, 367, 1057, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1058, 387,
	388, 389, 392, 393, 391, 1059, 390, 0, 0, 1060,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 1061, 406, 1062, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 1063, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 1064, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 0, 523, 522, 579, 0, 0, 0, 0, 524,
	525, 580, 526, 527, 528, 1325, 0, 1291, 1290, 0,
	0, 0, 0, 1288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 535, 536,
	537, 0, 270, 271, 538, 0, 1257, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 1049,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 0, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 1050, 329, 330, 545, 546,
	331, 332, 0, 333, 547, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 549, 550, 551, 396, 1052, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 0,
	346, 347, 349, 0, 1051, 348, 552, 553, 0, 554,
	0, 350, 351, 1053, 555, 1054, 352, 353, 354, 1055,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 556, 1056, 366, 367,
	1057, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 1058, 387, 388, 389, 392,
	393, 391, 1059, 390, 0, 0, 1060, 394, 0, 557,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 1061, 406,
	1062, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 1063, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	1064, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 574,
	504, 575, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 576, 577, 578, 0, 523,
	522, 579, 0, 0, 0, 0, 524, 525, 580, 526,
	527, 528, 1286, 0, 1291, 1290, 0, 0, 0, 0,
	1288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 1257, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 1049, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 1050, 329, 330, 545, 546, 331, 332, 0,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 1285, 550, 551, 396, 1052, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 0, 346, 347, 349,
	0, 1051, 348, 552, 553, 0, 554, 0, 350, 351,
	1053, 555, 1054, 352, 353, 354, 1055, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 1056, 366, 367, 1057, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 1058, 387, 388, 389, 392, 393, 391, 1059,
	390, 0, 0, 1060, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 1061, 406, 1062, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1063, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 1064, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 0, 523, 522, 579, 0,
	0, 0, 0, 524, 525, 580, 526, 527, 528, 1291,
	1290, 0, 0, 0, 0, 1288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 0, 270, 271, 538, 0, 1257, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 1049, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 0, 1050, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 549, 550, 551, 396,
	1052, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 0, 346, 347, 349, 0, 1051, 348, 552, 553,
	0, 554, 0, 350, 351, 1053, 555, 1054, 352, 353,
	354, 1055, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 1056,
	366, 367, 1057, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 1058, 387, 388,
	389, 392, 393, 391, 1059, 390, 0, 0, 1060, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	1061, 406, 1062, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	1063, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 1064, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	0, 523, 522, 579, 1291, 1290, 0, 0, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 1257, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 1049, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 1849, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 1050, 329, 330, 545, 546, 331, 332, 0,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 549, 550, 551, 396, 1052, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 0, 346, 347, 349,
	0, 1051, 348, 552, 553, 0, 554, 0, 350, 351,
	1053, 555, 1054, 352, 353, 354, 1055, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 1056, 366, 367, 1057, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 1058, 387, 388, 389, 392, 393, 391, 1059,
	390, 0, 0, 1060, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 1061, 406, 1062, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1063, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 1064, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 0, 523, 522, 579, 1291,
	1290, 0, 0, 524, 525, 580, 526, 527, 528, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 0, 270, 271, 538, 0, 1257, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 1049, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 0, 1050, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 549, 550, 551, 396,
	1052, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 0, 346, 347, 349, 0, 1051, 348, 552, 553,
	0, 554, 0, 350, 351, 1053, 555, 1054, 352, 353,
	354, 1055, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 1056,
	366, 367, 1057, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 1058, 387, 388,
	389, 392, 393, 391, 1059, 390, 0, 0, 1060, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	1061, 406, 1062, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	1063, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 1064, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	1291, 523, 522, 579, 0, 0, 0, 0, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 1257,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 1049, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 1050, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 549, 550, 551,
	396, 1052, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 0, 346, 347, 349, 0, 1051, 348, 552,
	553, 0, 554, 0, 350, 351, 1053, 555, 1054, 352,
	353, 354, 1055, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	1056, 366, 367, 1057, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1058, 387,
	388, 389, 392, 393, 391, 1059, 390, 0, 0, 1060,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 1061, 406, 1062, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 1063, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 1064, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 241, 523, 522, 579, 0, 0, 0, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 2478, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 2475, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 2482, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 2659, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 2481, 0, 0,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 2656, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 0, 350, 2658, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 2655, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 2480, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 2657, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 241, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 534, 264, 265, 266, 267, 268, 0,
	0, 0, 269, 535, 536, 537, 2478, 270, 271, 538,
	0, 0, 2472, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 2475, 283, 0, 284,
	285, 286, 0, 287, 0, 288, 289, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 292, 293, 0, 294,
	539, 540, 0, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 304, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 2482, 312, 541, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 542,
	543, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 544, 0, 0, 0, 327, 0, 328, 2481, 0,
	0, 329, 330, 545, 546, 331, 332, 0, 333, 547,
	0, 548, 334, 0, 335, 336, 337, 338, 339, 2471,
	550, 551, 396, 0, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 0, 346, 347, 349, 0, 0,
	348, 552, 553, 0, 554, 0, 350, 351, 0, 555,
	0, 352, 353, 354, 0, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 556, 0, 366, 367, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	0, 387, 388, 389, 392, 393, 391, 0, 390, 0,
	0, 0, 394, 0, 557, 395, 558, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 0, 406, 0, 560, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 563, 419, 564, 420, 421, 2480, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 565, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 0, 446, 447, 448, 449, 566, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 0,
	471, 455, 456, 472, 473, 0, 474, 475, 476, 477,
	478, 479, 567, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 568, 486, 487, 488, 489, 569, 0,
	492, 493, 0, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 570, 571, 572, 573, 0,
	508, 0, 502, 503, 574, 504, 575, 0, 505, 506,
	507, 0, 509, 510, 0, 2479, 511, 512, 513, 515,
	516, 514, 517, 0, 518, 0, 0, 519, 520, 521,
	576, 577, 578, 0, 523, 522, 579, 1554, 0, 241,
	0, 524, 525, 580, 526, 527, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 0, 270, 271, 538, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 549, 550, 551, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 0, 348, 552, 553,
	0, 554, 0, 350, 351, 0, 555, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 246, 0, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	0, 406, 0, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	1557, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 1555, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	0, 1556, 522, 579, 1261, 0, 241, 0, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 0, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 0, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 1263, 550, 551, 396, 0, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 0, 348, 552, 553, 0, 554, 0,
	350, 351, 0, 555, 0, 352, 353, 354, 0, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 0, 366, 367, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 0, 387, 388, 389, 392, 393,
	391, 0, 390, 0, 246, 0, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 1098, 401,
	402, 403, 0, 0, 404, 405, 559, 0, 406, 0,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 0, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 0,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 0, 523, 522,
	579, 1258, 0, 241, 0, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 271,
	538, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	1260, 550, 551, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 0,
	0, 348, 552, 553, 0, 554, 0, 350, 351, 0,
	555, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 0, 366, 367, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 246, 0, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 1098, 401, 402, 403, 0,
	0, 404, 405, 559, 0, 406, 0, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 0, 523, 522, 579, 1164, 0,
	241, 0, 524, 525, 580, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 0,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 0, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 1166, 550, 551,
	396, 0, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 0, 348, 552,
	553, 0, 554, 0, 350, 351, 0, 555, 0, 352,
	353, 354, 0, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	0, 366, 367, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 0, 387,
	388, 389, 392, 393, 391, 0, 390, 0, 246, 0,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 1098, 401, 402, 403, 0, 0, 404, 405,
	559, 0, 406, 0, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 0, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 0, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 0, 523, 522, 579, 612, 0, 241, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 611, 251, 252,
	601, 253, 254, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 535, 536,
	537, 0, 270, 271, 538, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 604, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 545, 546,
	331, 332, 605, 333, 547, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 549, 550, 551, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 0,
	346, 347, 349, 0, 0, 348, 552, 553, 0, 554,
	0, 350, 351, 0, 555, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 556, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 0, 0, 394, 0, 557,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 0, 406,
	0, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 606, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 574,
	504, 575, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 576, 577, 578, 0, 523,
	522, 579, 600, 0, 241, 0, 524, 525, 580, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 601, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 0, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 604, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 0, 329, 330, 545, 546, 331, 332, 605,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 549, 550, 551, 396, 0, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 0, 346, 347, 349,
	0, 0, 348, 552, 553, 0, 554, 0, 350, 351,
	0, 555, 0, 352, 353, 354, 0, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 0, 366, 367, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 0, 387, 388, 389, 392, 393, 391, 0,
	390, 0, 0, 0, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 0, 406, 0, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 0, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 606, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 0, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 241, 523, 522, 579, 0,
	0, 0, 0, 524, 525, 580, 526, 527, 528, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 529, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 531,
	0, 262, 532, 263, 533, 0, 534, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 535, 536, 537, 0,
	270, 271, 538, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 539, 540, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 541, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 542, 543, 0, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 544, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 545, 546, 331, 332,
	0, 333, 547, 0, 548, 334, 0, 335, 336, 337,
	338, 339, 549, 550, 551, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 0, 348, 552, 553, 0, 554, 0, 350,
	351, 0, 555, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 556, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	3005, 390, 0, 246, 0, 394, 0, 557, 395, 558,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 0, 406, 0, 560,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 563, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 565, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 566, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 567, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 568, 486, 487, 488,
	489, 569, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 570, 571,
	572, 573, 0, 508, 0, 502, 503, 574, 504, 575,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 576, 577, 578, 241, 523, 522, 579,
	0, 0, 0, 0, 524, 525, 580, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 0, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 0, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 549, 550, 551, 396, 0, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 0, 348, 552, 553, 0, 554, 0,
	350, 351, 0, 555, 0, 352, 353, 354, 0, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 0, 366, 367, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 0, 387, 388, 389, 392, 393,
	391, 0, 390, 0, 246, 0, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 1098, 401,
	402, 403, 0, 0, 404, 405, 559, 0, 406, 0,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 0, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 0,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 0, 523, 522,
	579, 2591, 0, 241, 0, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 271,
	538, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	2590, 550, 551, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 0,
	0, 348, 552, 553, 0, 554, 0, 350, 351, 0,
	555, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 0, 366, 367, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 246, 0, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 0, 406, 0, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 0, 523, 522, 579, 2062, 0,
	241, 0, 524, 525, 580, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 0,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 0, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 549, 550, 551,
	396, 0, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 0, 348, 552,
	553, 0, 554, 0, 350, 351, 0, 555, 0, 352,
	353, 354, 0, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	0, 366, 367, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 0, 387,
	388, 389, 392, 393, 391, 0, 390, 0, 246, 0,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 0, 406, 0, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 0, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 0, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 241, 523, 522, 579, 0, 0, 0, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 0, 350, 351, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 246,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 1983, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 0, 523, 522, 579, 1988, 0, 241, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 0, 0, 269, 535,
	536, 537, 0, 270, 271, 538, 0, 0, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 292, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 0, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 0, 329, 330, 545,
	546, 331, 332, 0, 333, 547, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 1987, 550, 551, 396, 0,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 0, 348, 552, 553, 0,
	554, 0, 350, 351, 0, 555, 0, 352, 353, 354,
	0, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 556, 0, 366,
	367, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 0, 387, 388, 389,
	392, 393, 391, 0, 390, 0, 246, 0, 394, 0,
	557, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 0,
	406, 0, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 0,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 0, 471, 455, 456, 472,
	473, 0, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 0, 492, 493, 0, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 570, 571, 572, 573, 0, 508, 0, 502, 503,
	574, 504, 575, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 0,
	518, 0, 0, 519, 520, 521, 576, 577, 578, 0,
	523, 522, 579, 1976, 0, 241, 0, 524, 525, 580,
	526, 527, 528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 529, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 531,
	0, 262, 532, 263, 533, 0, 534, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 535, 536, 537, 0,
	270, 271, 538, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 539, 540, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 541, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 542, 543, 0, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 544, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 545, 546, 331, 332,
	0, 333, 547, 0, 548, 334, 0, 335, 336, 337,
	338, 339, 1978, 550, 551, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 0, 348, 552, 553, 0, 554, 0, 350,
	351, 0, 555, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 556, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 246, 0, 394, 0, 557, 395, 558,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 0, 406, 0, 560,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 563, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 565, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 566, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 567, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 568, 486, 487, 488,
	489, 569, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 570, 571,
	572, 573, 0, 508, 0, 502, 503, 574, 504, 575,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 576, 577, 578, 0, 523, 522, 579,
	1422, 0, 241, 0, 524, 525, 580, 526, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 534, 264, 265, 266, 267, 268, 0,
	0, 0, 269, 535, 536, 537, 0, 270, 271, 538,
	0, 0, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 0, 288, 289, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 292, 293, 0, 294,
	539, 540, 0, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 304, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 541, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 542,
	543, 0, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 544, 0, 0, 0, 327, 0, 328, 0, 0,
	0, 329, 330, 545, 546, 331, 332, 0, 333, 547,
	0, 548, 334, 0, 335, 336, 337, 338, 339, 1421,
	550, 551, 396, 0, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 0,
	348, 552, 553, 0, 554, 0, 350, 351, 0, 555,
	0, 352, 353, 354, 0, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 556, 0, 366, 367, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	0, 387, 388, 389, 392, 393, 391, 0, 390, 0,
	246, 0, 394, 0, 557, 395, 558, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 0, 406, 0, 560, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 563, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 565, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 0, 446, 447, 448, 449, 566, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 0,
	471, 455, 456, 472, 473, 0, 474, 475, 476, 477,
	478, 479, 567, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 568, 486, 487, 488, 489, 569, 0,
	492, 493, 0, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 570, 571, 572, 573, 0,
	508, 0, 502, 503, 574, 504, 575, 0, 505, 506,
	507, 0, 509, 510, 0, 0, 511, 512, 513, 515,
	516, 514, 517, 0, 518, 0, 0, 519, 520, 521,
	576, 577, 578, 0, 523, 522, 579, 1413, 0, 241,
	0, 524, 525, 580, 526, 527, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 0, 270, 271, 538, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 1412, 550, 551, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 0, 348, 552, 553,
	0, 554, 0, 350, 351, 0, 555, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 246, 0, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	0, 406, 0, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	0, 523, 522, 579, 1410, 0, 241, 0, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 0, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 0, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 1409, 550, 551, 396, 0, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 0, 348, 552, 553, 0, 554, 0,
	350, 351, 0, 555, 0, 352, 353, 354, 0, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 0, 366, 367, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 0, 387, 388, 389, 392, 393,
	391, 0, 390, 0, 246, 0, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 0, 406, 0,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 0, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 0,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 0, 523, 522,
	579, 1406, 0, 241, 0, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 271,
	538, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	1405, 550, 551, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 0,
	0, 348, 552, 553, 0, 554, 0, 350, 351, 0,
	555, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 0, 366, 367, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 246, 0, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 0, 406, 0, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 0, 523, 522, 579, 1363, 0,
	241, 0, 524, 525, 580, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 0,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 0, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 549, 550, 551,
	396, 0, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 0, 348, 552,
	553, 0, 554, 0, 350, 351, 0, 555, 0, 352,
	353, 354, 0, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	0, 366, 367, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 0, 387,
	388, 389, 392, 393, 391, 0, 390, 0, 246, 0,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 0, 406, 0, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 0, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 0, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 0, 523, 522, 579, 1279, 0, 241, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 535, 536,
	537, 0, 270, 271, 538, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 0, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 545, 546,
	331, 332, 0, 333, 547, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 549, 550, 551, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 0, 348, 552, 553, 0, 554,
	0, 350, 351, 0, 555, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 556, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 246, 0, 394, 0, 557,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 0, 406,
	0, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 574,
	504, 575, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 576, 577, 578, 0, 523,
	522, 579, 1272, 0, 241, 0, 524, 525, 580, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 0, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 0, 329, 330, 545, 546, 331, 332, 0,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 1274, 550, 551, 396, 0, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 0, 348, 552, 553, 0, 554, 0, 350, 351,
	0, 555, 0, 352, 353, 354, 0, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 0, 366, 367, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 0, 387, 388, 389, 392, 393, 391, 0,
	390, 0, 246, 0, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 0, 406, 0, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 0, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 0, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 0, 523, 522, 579, 582,
	0, 241, 0, 524, 525, 580, 526, 527, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 0, 350, 351, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 246,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 0, 523, 522, 579, 232, 0, 241, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 0, 0, 269, 535,
	536, 537, 0, 270, 271, 538, 0, 0, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 292, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 0, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 0, 329, 330, 545,
	546, 331, 332, 0, 333, 547, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 0,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 0, 348, 552, 553, 0,
	554, 0, 350, 351, 0, 555, 0, 352, 353, 354,
	0, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 556, 0, 366,
	367, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 0, 387, 388, 389,
	392, 393, 391, 0, 390, 0, 246, 0, 394, 0,
	557, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 0,
	406, 0, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 0,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 0, 471, 455, 456, 472,
	473, 0, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 0, 492, 493, 0, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 570, 571, 572, 573, 0, 508, 0, 502, 503,
	574, 504, 575, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 0,
	518, 0, 0, 519, 520, 521, 576, 577, 578, 241,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 0, 270, 271, 538, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 549, 550, 551, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 0, 348, 552, 553,
	0, 554, 0, 350, 351, 0, 555, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 246, 0, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	0, 406, 0, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	241, 523, 522, 579, 0, 0, 0, 0, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 0,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	604, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 0, 329,
	330, 545, 546, 331, 332, 605, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 549, 550, 551,
	396, 0, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 0, 346, 347, 349, 0, 0, 348, 552,
	553, 0, 554, 0, 350, 351, 0, 555, 0, 352,
	353, 354, 0, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	0, 366, 367, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 0, 387,
	388, 389, 392, 393, 391, 0, 390, 0, 0, 0,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 0, 406, 0, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 0, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	606, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 0, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 241, 523, 522, 579, 0, 0, 0, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 2093, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 0, 350, 351, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 246,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 241, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 534, 264, 265, 266, 267, 268, 0,
	0, 0, 269, 535, 536, 537, 0, 270, 271, 538,
	0, 0, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 0, 288, 289, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 2091, 293, 0, 294,
	539, 540, 0, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 304, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 541, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 542,
	543, 0, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 544, 0, 0, 0, 327, 0, 328, 0, 0,
	0, 329, 330, 545, 546, 331, 332, 0, 333, 547,
	0, 548, 334, 0, 335, 336, 337, 338, 339, 549,
	550, 551, 396, 0, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 0,
	348, 552, 553, 0, 554, 0, 350, 351, 0, 555,
	0, 352, 353, 354, 0, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 556, 0, 366, 367, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	0, 387, 388, 389, 392, 393, 391, 0, 390, 0,
	246, 0, 394, 0, 557, 395, 558, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 0, 406, 0, 560, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 563, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 565, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 0, 446, 447, 448, 449, 566, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 0,
	471, 455, 456, 472, 473, 0, 474, 475, 476, 477,
	478, 479, 567, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 568, 486, 487, 488, 489, 569, 0,
	492, 493, 0, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 570, 571, 572, 573, 0,
	508, 0, 502, 503, 574, 504, 575, 0, 505, 506,
	507, 0, 509, 510, 0, 0, 511, 512, 513, 515,
	516, 514, 517, 0, 518, 0, 0, 519, 520, 521,
	576, 577, 578, 241, 523, 522, 579, 0, 0, 0,
	0, 524, 525, 580, 526, 527, 528, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 271,
	538, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 2089, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	549, 550, 551, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 0,
	0, 348, 552, 553, 0, 554, 0, 350, 351, 0,
	555, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 0, 366, 367, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 246, 0, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 0, 406, 0, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 241, 523, 522, 579, 0, 0,
	0, 0, 524, 525, 580, 526, 527, 528, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 0, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 0, 329, 330, 545, 546, 331, 332, 0,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 2027, 550, 551, 396, 0, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 0, 348, 552, 553, 0, 554, 0, 350, 351,
	0, 555, 0, 352, 353, 354, 0, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 0, 366, 367, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 0, 387, 388, 389, 392, 393, 391, 0,
	390, 0, 246, 0, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 0, 406, 0, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 0, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 0, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 0, 523, 522, 579, 768,
	0, 241, 0, 524, 525, 580, 526, 527, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 767, 350, 351, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 766, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 241, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 534, 264, 265, 266, 267, 268, 0,
	0, 0, 269, 535, 536, 537, 0, 270, 271, 538,
	0, 0, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 0, 288, 289, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 292, 293, 0, 294,
	539, 540, 0, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 304, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 541, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 542,
	543, 0, 2659, 0, 0, 0, 0, 0, 324, 325,
	326, 544, 0, 0, 0, 327, 0, 328, 0, 0,
	0, 329, 330, 545, 546, 331, 332, 0, 333, 547,
	0, 548, 334, 0, 335, 336, 337, 338, 339, 549,
	550, 551, 396, 0, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 0, 346, 347, 349, 0, 0,
	348, 552, 553, 0, 554, 0, 350, 351, 0, 555,
	0, 352, 353, 354, 0, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 556, 0, 366, 367, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	0, 387, 388, 389, 392, 393, 391, 0, 390, 0,
	0, 0, 394, 0, 557, 395, 558, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 0, 406, 0, 560, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 563, 419, 564, 420, 421, 3630, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 565, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 0, 446, 447, 448, 449, 566, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 0,
	471, 455, 456, 472, 473, 0, 474, 475, 476, 477,
	478, 479, 567, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 568, 486, 487, 488, 489, 569, 0,
	492, 493, 0, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 570, 571, 572, 573, 0,
	508, 0, 502, 503, 574, 504, 575, 0, 505, 506,
	507, 0, 509, 510, 0, 0, 511, 512, 513, 515,
	516, 514, 517, 0, 518, 0, 0, 519, 520, 521,
	576, 577, 578, 0, 523, 522, 579, 591, 0, 241,
	0, 524, 525, 580, 526, 527, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 590, 253, 254, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 0, 270, 271, 538, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 549, 550, 551, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 0, 346, 347, 349, 0, 0, 348, 552, 553,
	0, 554, 0, 350, 351, 0, 555, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 0, 0, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	0, 406, 0, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 589, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	0, 523, 522, 579, 241, 2646, 0, 0, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 0, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 0, 329, 330, 545, 546, 331, 332, 0,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 549, 550, 551, 396, 0, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 0, 346, 347, 349,
	0, 0, 348, 552, 553, 0, 554, 0, 350, 351,
	0, 555, 0, 352, 353, 354, 0, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 0, 366, 367, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 0, 387, 388, 389, 392, 393, 391, 0,
	390, 0, 0, 0, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 0, 406, 0, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 0, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 0, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 0, 523, 522, 579, 241,
	3640, 0, 0, 524, 525, 580, 526, 527, 528, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 0, 270, 271, 538, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 549, 550, 551, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 0, 346, 347, 349, 0, 0, 348, 552, 553,
	0, 554, 0, 350, 351, 0, 555, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 0, 0, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	0, 406, 0, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	241, 523, 522, 579, 0, 0, 0, 0, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 0,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	3359, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 0, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 549, 550, 551,
	396, 0, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 0, 346, 347, 349, 0, 0, 348, 552,
	553, 0, 554, 0, 350, 351, 0, 555, 0, 352,
	353, 354, 0, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	0, 366, 367, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 0, 387,
	388, 389, 392, 393, 391, 0, 390, 0, 0, 0,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 0, 406, 0, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 0, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 0, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 241, 523, 522, 579, 0, 0, 0, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 2398, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 0, 350, 351, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 0, 523, 522, 579, 241, 2646, 0, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 0, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 0, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 549, 550, 551, 396, 0, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 0, 346,
	347, 349, 0, 0, 348, 552, 553, 0, 554, 0,
	350, 351, 0, 555, 0, 352, 353, 354, 0, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 0, 366, 367, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 0, 387, 388, 389, 392, 393,
	391, 0, 390, 0, 0, 0, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 2643, 0, 0, 404, 405, 559, 0, 406, 0,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 0, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 0,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 241, 523, 522,
	579, 0, 0, 0, 0, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	2070, 253, 254, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 535, 536,
	537, 0, 270, 271, 538, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 545, 546,
	331, 332, 0, 333, 547, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 549, 550, 551, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 0,
	346, 347, 349, 0, 0, 348, 552, 553, 0, 554,
	0, 350, 351, 0, 555, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 556, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 0, 0, 394, 0, 557,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 0, 406,
	0, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 574,
	504, 575, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 576, 577, 578, 0, 523,
	522, 579, 2060, 0, 241, 0, 524, 525, 580, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 0, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 0, 329, 330, 545, 546, 331, 332, 0,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 549, 550, 551, 396, 0, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 0, 346, 347, 349,
	0, 0, 348, 552, 553, 0, 554, 0, 350, 351,
	0, 555, 0, 352, 353, 354, 0, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 0, 366, 367, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 0, 387, 388, 389, 392, 393, 391, 0,
	390, 0, 0, 0, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 0, 406, 0, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 0, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 0, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 0, 523, 522, 579, 634,
	0, 241, 0, 524, 525, 580, 526, 527, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 255, 256, 1138,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 1136, 0, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 0, 350, 351, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 635, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 631, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 1139, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 630, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 0, 523, 522, 579, 634, 0, 241, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 0, 0, 269, 535,
	536, 537, 0, 270, 624, 538, 0, 0, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 292, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 0, 329, 330, 545,
	546, 331, 332, 0, 333, 547, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 549, 550, 551, 396, 0,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	0, 346, 347, 349, 0, 0, 348, 552, 553, 0,
	554, 0, 350, 351, 0, 555, 0, 352, 353, 354,
	0, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 556, 0, 366,
	367, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 635, 0, 387, 388, 389,
	392, 393, 391, 0, 390, 0, 0, 0, 394, 0,
	557, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 0,
	406, 0, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 0,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 631, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 1445, 470, 0, 471, 455, 456, 472,
	473, 0, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 0, 492, 493, 0, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 630, 571, 572, 573, 0, 508, 0, 502, 503,
	574, 504, 575, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 0,
	518, 0, 0, 519, 520, 521, 576, 577, 578, 0,
	523, 522, 579, 1426, 0, 241, 0, 524, 525, 580,
	526, 527, 528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 529, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 531,
	0, 262, 532, 263, 533, 0, 534, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 535, 536, 537, 0,
	270, 271, 538, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 539, 540, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 541, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 542, 543, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 544, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 545, 546, 331, 332,
	0, 333, 547, 0, 548, 334, 0, 335, 336, 337,
	338, 339, 1425, 550, 551, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 552, 553, 0, 554, 0, 350,
	351, 0, 555, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 556, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 557, 395, 558,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 0, 406, 0, 560,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 563, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 565, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 566, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 567, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 568, 486, 487, 488,
	489, 569, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 570, 571,
	572, 573, 0, 508, 0, 502, 503, 574, 504, 575,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 576, 577, 578, 0, 523, 522, 579,
	1419, 0, 241, 0, 524, 525, 580, 526, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 534, 264, 265, 266, 267, 268, 0,
	0, 0, 269, 535, 536, 537, 0, 270, 271, 538,
	0, 0, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 0, 288, 289, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 292, 293, 0, 294,
	539, 540, 0, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 304, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 541, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 542,
	543, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 544, 0, 0, 0, 327, 0, 328, 0, 0,
	0, 329, 330, 545, 546, 331, 332, 0, 333, 547,
	0, 548, 334, 0, 335, 336, 337, 338, 339, 1418,
	550, 551, 396, 0, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 0, 346, 347, 349, 0, 0,
	348, 552, 553, 0, 554, 0, 350, 351, 0, 555,
	0, 352, 353, 354, 0, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 556, 0, 366, 367, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	0, 387, 388, 389, 392, 393, 391, 0, 390, 0,
	0, 0, 394, 0, 557, 395, 558, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 0, 406, 0, 560, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 563, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 565, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 0, 446, 447, 448, 449, 566, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 0,
	471, 455, 456, 472, 473, 0, 474, 475, 476, 477,
	478, 479, 567, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 568, 486, 487, 488, 489, 569, 0,
	492, 493, 0, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 570, 571, 572, 573, 0,
	508, 0, 502, 503, 574, 504, 575, 0, 505, 506,
	507, 0, 509, 510, 0, 0, 511, 512, 513, 515,
	516, 514, 517, 0, 518, 0, 0, 519, 520, 521,
	576, 577, 578, 0, 523, 522, 579, 1369, 0, 241,
	0, 524, 525, 580, 526, 527, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 0, 270, 271, 538, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 1368, 550, 551, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 0, 346, 347, 349, 0, 0, 348, 552, 553,
	0, 554, 0, 350, 351, 0, 555, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 0, 0, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	0, 406, 0, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	0, 523, 522, 579, 1354, 0, 241, 0, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 0, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 0, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 1353, 550, 551, 396, 0, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 0, 346,
	347, 349, 0, 0, 348, 552, 553, 0, 554, 0,
	350, 351, 0, 555, 0, 352, 353, 354, 0, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 0, 366, 367, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 0, 387, 388, 389, 392, 393,
	391, 0, 390, 0, 0, 0, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 0, 406, 0,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 0, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 0,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 0, 523, 522,
	579, 1349, 0, 241, 0, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 271,
	538, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	549, 550, 551, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 0, 346, 347, 349, 0,
	0, 348, 552, 553, 0, 554, 0, 350, 351, 0,
	555, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 0, 366, 367, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 0, 0, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 0, 406, 0, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 0, 523, 522, 579, 1282, 0,
	241, 0, 524, 525, 580, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 0,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 0, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 549, 550, 551,
	396, 0, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 0, 346, 347, 349, 0, 0, 348, 552,
	553, 0, 554, 0, 350, 351, 0, 555, 0, 352,
	353, 354, 0, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	0, 366, 367, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 0, 387,
	388, 389, 392, 393, 391, 0, 390, 0, 0, 0,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 0, 406, 0, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 0, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 0, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 0, 523, 522, 579, 1266, 0, 241, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 535, 536,
	537, 0, 270, 271, 538, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 545, 546,
	331, 332, 0, 333, 547, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 549, 550, 551, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 0,
	346, 347, 349, 0, 0, 348, 552, 553, 0, 554,
	0, 350, 351, 0, 555, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 556, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 0, 0, 394, 0, 557,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 0, 406,
	0, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 574,
	504, 575, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 576, 577, 578, 0, 523,
	522, 579, 634, 0, 241, 0, 524, 525, 580, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 1138, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 1136, 0, 270,
	271, 538, 0, 0, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 0, 329, 330, 545, 546, 331, 332, 0,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 549, 550, 551, 396, 0, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 0, 346, 347, 349,
	0, 0, 348, 552, 553, 0, 554, 0, 350, 351,
	0, 555, 0, 352, 353, 354, 0, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 0, 366, 367, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 635, 0, 387, 388, 389, 392, 393, 391, 0,
	390, 0, 0, 0, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 0, 406, 0, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 0, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 631,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 1139,
	470, 0, 471, 455, 456, 472, 473, 0, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 630, 571, 572,
	573, 0, 508, 0, 502, 1137, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 241, 523, 522, 579, 0,
	0, 0, 0, 524, 525, 580, 526, 527, 528, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 1119, 253,
	254, 0, 0, 0, 0, 0, 529, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 531,
	0, 262, 532, 263, 533, 0, 534, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 535, 536, 537, 0,
	270, 271, 538, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 539, 540, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 541, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 542, 543, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 544, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 545, 546, 331, 332,
	0, 333, 547, 0, 548, 334, 0, 335, 336, 337,
	338, 339, 549, 550, 551, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 552, 553, 0, 554, 0, 350,
	351, 0, 555, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 556, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 557, 395, 558,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 0, 406, 0, 560,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 563, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 565, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 566, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 567, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 568, 486, 487, 488,
	489, 569, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 570, 571,
	572, 573, 0, 508, 0, 502, 503, 574, 504, 575,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 576, 577, 578, 241, 523, 522, 579,
	0, 0, 0, 0, 524, 525, 580, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 640,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 0, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 0, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 549, 550, 551, 396, 0, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 0, 346,
	347, 349, 0, 0, 348, 552, 553, 0, 554, 0,
	350, 351, 0, 555, 0, 352, 353, 354, 0, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 0, 366, 367, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 0, 387, 388, 389, 392, 393,
	391, 0, 390, 0, 0, 0, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 0, 406, 0,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 0, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 0,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 0, 523, 522,
	579, 634, 0, 241, 0, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 624,
	538, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 622, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	549, 550, 551, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 0, 346, 347, 349, 0,
	0, 348, 552, 553, 0, 554, 0, 350, 351, 0,
	555, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 0, 366, 367, 0, 0, 368, 369,
	623, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	635, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 0, 0, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 0, 406, 0, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 625,
	450, 0, 451, 452, 458, 459, 453, 454, 631, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 626, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 630, 571, 572, 573,
	0, 508, 0, 502, 628, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 0, 523, 522, 579, 616, 0,
	241, 0, 524, 525, 580, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 0,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 0, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 549, 550, 551,
	396, 0, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 0, 346, 347, 349, 0, 0, 348, 552,
	553, 0, 554, 0, 350, 351, 0, 555, 0, 352,
	353, 354, 0, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	0, 366, 367, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 0, 387,
	388, 389, 392, 393, 391, 0, 390, 0, 0, 0,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 0, 406, 0, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 0, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 617, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 0, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 0, 523, 522, 579, 614, 0, 241, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 535, 536,
	537, 0, 270, 271, 538, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 545, 546,
	331, 332, 0, 333, 547, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 549, 550, 551, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 0,
	346, 347, 349, 0, 0, 348, 552, 553, 0, 554,
	0, 350, 351, 0, 555, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 556, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 0, 0, 394, 0, 557,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 0, 406,
	0, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 574,
	504, 575, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 576, 577, 578, 0, 523,
	522, 579, 608, 0, 241, 0, 524, 525, 580, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 0, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 0, 329, 330, 545, 546, 331, 332, 0,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 549, 550, 551, 396, 0, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 0, 346, 347, 349,
	0, 0, 348, 552, 553, 0, 554, 0, 350, 351,
	0, 555, 0, 352, 353, 354, 0, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 0, 366, 367, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 0, 387, 388, 389, 392, 393, 391, 0,
	390, 0, 0, 0, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 0, 406, 0, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 0, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 0, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 0, 523, 522, 579, 586,
	0, 241, 0, 524, 525, 580, 526, 527, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 549, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 0, 350, 351, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 241, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 534, 264, 265, 266, 267, 268, 0,
	0, 0, 269, 535, 536, 537, 0, 270, 271, 538,
	0, 0, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 0, 288, 289, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 292, 293, 0, 294,
	539, 540, 0, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 304, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 541, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 542,
	543, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 544, 0, 0, 0, 327, 0, 328, 0, 0,
	0, 329, 330, 545, 546, 331, 332, 0, 333, 547,
	0, 548, 334, 0, 335, 336, 337, 338, 339, 549,
	550, 551, 396, 0, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 0, 346, 347, 349, 0, 0,
	348, 552, 553, 0, 554, 0, 350, 351, 0, 555,
	0, 352, 353, 354, 0, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 556, 0, 366, 367, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	0, 387, 388, 389, 392, 393, 391, 0, 390, 0,
	0, 0, 394, 0, 557, 395, 558, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 0, 406, 0, 560, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 563, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 565, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 0, 446, 447, 448, 449, 566, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 0,
	471, 455, 456, 472, 473, 0, 474, 475, 476, 477,
	478, 479, 567, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 568, 486, 487, 488, 489, 569, 0,
	492, 493, 0, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 570, 571, 572, 573, 0,
	508, 0, 502, 503, 574, 504, 575, 0, 505, 506,
	507, 0, 509, 510, 0, 0, 511, 512, 513, 515,
	516, 514, 517, 0, 518, 0, 0, 519, 520, 521,
	576, 577, 578, 241, 523, 522, 579, 0, 0, 0,
	0, 524, 525, 580, 526, 527, 528, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 271,
	538, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	3083, 550, 551, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 0, 346, 347, 349, 0,
	0, 348, 552, 553, 0, 554, 0, 350, 351, 0,
	555, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 0, 366, 367, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 0, 0, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 0, 406, 0, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 241, 523, 522, 579, 0, 0,
	0, 0, 524, 525, 580, 526, 527, 528, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 0, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 0, 329, 330, 545, 546, 331, 332, 0,
	333, 547, 0, 548, 334, 0, 335, 336, 337, 338,
	339, 3037, 550, 551, 396, 0, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 0, 346, 347, 349,
	0, 0, 348, 552, 553, 0, 554, 0, 350, 351,
	0, 555, 0, 352, 353, 354, 0, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 0, 366, 367, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 0, 387, 388, 389, 392, 393, 391, 0,
	390, 0, 0, 0, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 0, 406, 0, 560, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 0, 446, 447, 448, 449,
	566, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 0, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 241, 523, 522, 579, 0,
	0, 0, 0, 524, 525, 580, 526, 527, 528, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 529, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 531,
	0, 262, 532, 263, 533, 0, 534, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 535, 536, 537, 0,
	270, 271, 538, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 539, 540, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 541, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 542, 543, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 544, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 545, 546, 331, 332,
	0, 333, 547, 0, 548, 334, 0, 335, 336, 337,
	338, 339, 2978, 550, 551, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 552, 553, 0, 554, 0, 350,
	351, 0, 555, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 556, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 557, 395, 558,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 559, 0, 406, 0, 560,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 561, 562, 563, 419, 564, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 565, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 566, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 567, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 568, 486, 487, 488,
	489, 569, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 570, 571,
	572, 573, 0, 508, 0, 502, 503, 574, 504, 575,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 576, 577, 578, 241, 523, 522, 579,
	0, 0, 0, 0, 524, 525, 580, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 534, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 535, 536, 537,
	0, 270, 271, 538, 0, 0, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 539, 540, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 541, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 542, 543, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 544, 0, 0, 0, 327,
	0, 328, 0, 0, 0, 329, 330, 545, 546, 331,
	332, 0, 333, 547, 0, 548, 334, 0, 335, 336,
	337, 338, 339, 2976, 550, 551, 396, 0, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 0, 346,
	347, 349, 0, 0, 348, 552, 553, 0, 554, 0,
	350, 351, 0, 555, 0, 352, 353, 354, 0, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 556, 0, 366, 367, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 0, 387, 388, 389, 392, 393,
	391, 0, 390, 0, 0, 0, 394, 0, 557, 395,
	558, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 559, 0, 406, 0,
	560, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 561, 562, 563, 419, 564,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 565, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 0, 446, 447,
	448, 449, 566, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 0,
	474, 475, 476, 477, 478, 479, 567, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 568, 486, 487,
	488, 489, 569, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 570,
	571, 572, 573, 0, 508, 0, 502, 503, 574, 504,
	575, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 576, 577, 578, 241, 523, 522,
	579, 0, 0, 0, 0, 524, 525, 580, 526, 527,
	528, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 534, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 535, 536,
	537, 0, 270, 271, 538, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 539, 540, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 541, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 542, 543, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 544, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 545, 546,
	331, 332, 0, 333, 547, 0, 548, 334, 0, 335,
	336, 337, 338, 339, 2962, 550, 551, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 0,
	346, 347, 349, 0, 0, 348, 552, 553, 0, 554,
	0, 350, 351, 0, 555, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 556, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 0, 0, 394, 0, 557,
	395, 558, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 559, 0, 406,
	0, 560, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 561, 562, 563, 419,
	564, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 565, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 566, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 567, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 568, 486,
	487, 488, 489, 569, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	570, 571, 572, 573, 0, 508, 0, 502, 503, 574,
	504, 575, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 576, 577, 578, 241, 523,
	522, 579, 0, 0, 0, 0, 524, 525, 580, 526,
	527, 528, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 534,
	264, 265, 266, 267, 268, 0, 0, 0, 269, 535,
	536, 537, 0, 270, 271, 538, 0, 0, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	0, 288, 289, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 292, 293, 0, 294, 539, 540, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 304, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 541, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 542, 543, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 544, 0, 0,
	0, 327, 0, 328, 0, 0, 0, 329, 330, 545,
	546, 331, 332, 0, 333, 547, 0, 548, 334, 0,
	335, 336, 337, 338, 339, 2599, 550, 551, 396, 0,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	0, 346, 347, 349, 0, 0, 348, 552, 553, 0,
	554, 0, 350, 351, 0, 555, 0, 352, 353, 354,
	0, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 556, 0, 366,
	367, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 0, 387, 388, 389,
	392, 393, 391, 0, 390, 0, 0, 0, 394, 0,
	557, 395, 558, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 559, 0,
	406, 0, 560, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 561, 562, 563,
	419, 564, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 565, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 0,
	446, 447, 448, 449, 566, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 0, 471, 455, 456, 472,
	473, 0, 474, 475, 476, 477, 478, 479, 567, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 568,
	486, 487, 488, 489, 569, 0, 492, 493, 0, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 570, 571, 572, 573, 0, 508, 0, 502, 503,
	574, 504, 575, 0, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 0,
	518, 0, 0, 519, 520, 521, 576, 577, 578, 241,
	523, 522, 579, 0, 0, 0, 0, 524, 525, 580,
	526, 527, 528, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 0,
	534, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	535, 536, 537, 0, 270, 271, 538, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 539, 540, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 541, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 542, 543, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 544, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	545, 546, 331, 332, 0, 333, 547, 0, 548, 334,
	0, 335, 336, 337, 338, 339, 549, 550, 551, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 0, 346, 347, 349, 0, 0, 348, 552, 553,
	0, 554, 0, 350, 351, 0, 555, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 556, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 0, 0, 394,
	0, 557, 395, 558, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 559,
	0, 406, 0, 560, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 561, 562,
	563, 419, 564, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 565, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 566, 450, 0, 451, 452,
	617, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 567,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	568, 486, 487, 488, 489, 569, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 570, 571, 572, 573, 0, 508, 0, 502,
	503, 574, 504, 575, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 576, 577, 578,
	241, 523, 522, 579, 0, 0, 0, 0, 524, 525,
	580, 526, 527, 528, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 2009, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 534, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 535, 536, 537, 0, 270, 271, 538, 0, 0,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 292, 293, 0, 294, 539, 540,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 541, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 542, 543, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 544,
	0, 0, 0, 327, 0, 328, 0, 0, 0, 329,
	330, 545, 546, 331, 332, 0, 333, 547, 0, 548,
	334, 0, 335, 336, 337, 338, 339, 549, 550, 551,
	396, 0, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 0, 346, 347, 349, 0, 0, 348, 552,
	553, 0, 554, 0, 350, 351, 0, 555, 0, 352,
	353, 354, 0, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 556,
	0, 366, 367, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 0, 387,
	388, 389, 392, 393, 391, 0, 390, 0, 0, 0,
	394, 0, 557, 395, 558, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	559, 0, 406, 0, 560, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 561,
	562, 563, 419, 564, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 565, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 0, 446, 447, 448, 449, 566, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 0, 455,
	456, 472, 473, 0, 474, 475, 476, 477, 478, 479,
	567, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 568, 486, 487, 488, 489, 569, 0, 492, 493,
	0, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 570, 571, 572, 573, 0, 508, 0,
	502, 503, 574, 504, 575, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 576, 577,
	578, 241, 523, 522, 579, 0, 0, 0, 0, 524,
	525, 580, 526, 527, 528, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 534, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 535, 536, 537, 0, 270, 271, 538, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 539,
	540, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 541, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	544, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 545, 546, 331, 332, 0, 333, 547, 0,
	548, 334, 0, 335, 336, 337, 338, 339, 1391, 550,
	551, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 0, 348,
	552, 553, 0, 554, 0, 350, 351, 0, 555, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	556, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 557, 395, 558, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 559, 0, 406, 0, 560, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	561, 562, 563, 419, 564, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 565, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 566, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 567, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 568, 486, 487, 488, 489, 569, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 570, 571, 572, 573, 0, 508,
	0, 502, 503, 574, 504, 575, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 576,
	577, 578, 241, 523, 522, 579, 0, 0, 0, 0,
	524, 525, 580, 526, 527, 528, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 534, 264, 265, 266, 267, 268, 0,
	0, 0, 269, 535, 536, 537, 0, 270, 271, 538,
	0, 0, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 0, 288, 289, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 292, 293, 0, 294,
	539, 540, 0, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 304, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 541, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 542,
	543, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 544, 0, 0, 0, 327, 0, 328, 0, 0,
	0, 329, 330, 545, 546, 331, 332, 0, 333, 547,
	0, 548, 334, 0, 335, 336, 337, 338, 339, 1332,
	550, 551, 396, 0, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 0, 346, 347, 349, 0, 0,
	348, 552, 553, 0, 554, 0, 350, 351, 0, 555,
	0, 352, 353, 354, 0, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 556, 0, 366, 367, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	0, 387, 388, 389, 392, 393, 391, 0, 390, 0,
	0, 0, 394, 0, 557, 395, 558, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 559, 0, 406, 0, 560, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 561, 562, 563, 419, 564, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 565, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 0, 446, 447, 448, 449, 566, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 0,
	471, 455, 456, 472, 473, 0, 474, 475, 476, 477,
	478, 479, 567, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 568, 486, 487, 488, 489, 569, 0,
	492, 493, 0, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 570, 571, 572, 573, 0,
	508, 0, 502, 503, 574, 504, 575, 0, 505, 506,
	507, 0, 509, 510, 0, 0, 511, 512, 513, 515,
	516, 514, 517, 0, 518, 0, 0, 519, 520, 521,
	576, 577, 578, 241, 523, 522, 579, 0, 0, 0,
	0, 524, 525, 580, 526, 527, 528, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 534, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 535, 536, 537, 0, 270, 271,
	538, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 539, 540, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 541,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	542, 543, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 544, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 545, 546, 331, 332, 0, 333,
	547, 0, 548, 334, 0, 335, 336, 337, 338, 339,
	549, 550, 551, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 0, 346, 347, 349, 0,
	0, 348, 552, 553, 0, 554, 0, 350, 351, 0,
	555, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 556, 0, 366, 367, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 0, 0, 394, 0, 557, 395, 558, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 559, 0, 406, 0, 560, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 561, 562, 563, 419, 564, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 565,
	1071, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 566,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 567, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 568, 486, 487, 488, 489, 569,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 570, 571, 572, 573,
	0, 508, 0, 502, 503, 574, 504, 575, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 576, 577, 578, 241, 523, 522, 579, 0, 0,
	0, 0, 524, 525, 580, 526, 527, 528, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 534, 264, 265, 266, 267,
	268, 0, 0, 0, 269, 535, 536, 537, 0, 270,
	271, 538, 0, 0, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 0, 288, 289, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 292, 293,
	0, 294, 539, 540, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	541, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 544, 0, 0, 0, 327, 0, 328,
	0, 0, 0, 329, 330, 545, 546, 331, 332, 0,
	333, 547, 0, 548, 0, 0, 335, 336, 337, 338,
	339, 549, 550, 551, 396, 0, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 0, 346, 347, 349,
	0, 0, 348, 552, 553, 0, 554, 0, 350, 351,
	0, 555, 0, 352, 353, 354, 0, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 556, 0, 366, 367, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 0, 387, 388, 389, 392, 393, 391, 0,
	390, 0, 0, 0, 394, 0, 557, 395, 558, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 559, 0, 406, 0, 560, 407,
	408, 400, 409, 410, 0, 412, 413, 414, 415, 416,
	0, 417, 418, 561, 562, 563, 419, 564, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 0, 428, 429,
	565, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 0, 446, 447, 448, 449,
	566, 0, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 0, 471, 455, 456, 472, 473, 0, 474, 475,
	476, 477, 478, 479, 567, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 568, 486, 487, 488, 489,
	569, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 570, 571, 572,
	573, 0, 508, 0, 502, 503, 574, 504, 575, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 0, 518, 0, 0, 519,
	520, 521, 576, 577, 578, 0, 523, 522, 579, 0,
	0, 0, 0, 524, 525, 580, 526, 527, 528, 1599,
	1600, 0, 1632, 1633, 1634, 1642, 1643, 1644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1635, 1630, 0, 0, 0, 0, 0, 0, 1602, 0,
	0, 0, 0, 0, 0, 1648, 0, 0, 0, 0,
	0, 0, 0, 1599, 1600, 0, 1632, 1633, 1634, 1642,
	1643, 1644, 0, 0, 0, 0, 0, 0, 0, 0,
	1601, 0, 0, 0, 1635, 1630, 0, 0, 0, 0,
	1621, 0, 1602, 0, 0, 0, 0, 0, 1618, 1648,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1621, 0, 0, 0, 0, 0,
	0, 0, 1618, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1624, 1625, 1626, 1627, 0, 0,
	0, 0, 0, 0, 1607, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1639, 0, 0, 1649, 0, 1624, 1625,
	1626, 1627, 1629, 1631, 0, 0, 0, 0, 1607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1645, 0,
	1646, 0, 0, 0, 0, 0, 0, 1616, 1617, 0,
	0, 0, 0, 0, 0, 0, 0, 1639, 0, 0,
	1649, 0, 0, 0, 0, 1637, 1629, 1631, 0, 0,
	0, 0, 0, 0, 0, 0, 1622, 0, 0, 0,
	0, 0, 1645, 0, 1646, 0, 0, 0, 0, 0,
	0, 1616, 1617, 0, 0, 0, 0, 0, 0, 0,
	0, 1647, 0, 0, 0, 0, 0, 0, 0, 1637,
	0, 0, 0, 0, 0, 0, 0, 0, 1636, 0,
	1622, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1647, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1636, 0, 0, 0, 0, 0, 0, 0,
	1628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1623, 1599, 1600, 0, 1632, 1633, 1634, 1642, 1643, 1644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1635, 1630, 1628, 1640, 0, 0, 0, 0,
	1602, 0, 0, 0, 0, 0, 0, 1648, 0, 0,
	0, 0, 0, 0, 1623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1601, 0, 0, 0, 0, 0, 0, 1640,
	0, 0, 1621, 0, 0, 0, 0, 0, 0, 0,
	1618, 0, 0, 1599, 1600, 0, 1632, 1633, 1634, 1642,
	1643, 1644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1635, 1630, 0, 0, 0, 0,
	0, 0, 1602, 0, 0, 0, 0, 1638, 0, 1648,
	0, 1613, 1614, 1620, 1641, 1619, 1615, 0, 1612, 1610,
	1611, 1603, 1604, 1605, 1606, 1608, 1609, 0, 0, 0,
	0, 0, 0, 0, 1601, 2805, 1624, 1625, 1626, 1627,
	0, 0, 0, 0, 1621, 0, 1607, 0, 0, 0,
	0, 1638, 1618, 0, 0, 1613, 1614, 1620, 1641, 1619,
	1615, 0, 1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608,
	1609, 0, 0, 0, 0, 1639, 0, 0, 1649, 2804,
	0, 0, 0, 0, 1629, 1631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1645, 0, 1646, 0, 0, 0, 0, 0, 0, 1616,
	1617, 0, 0, 0, 0, 0, 0, 0, 1624, 1625,
	1626, 1627, 0, 0, 0, 0, 0, 1637, 1607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1622, 0,
	0, 0, 0, 1599, 1600, 0, 1632, 1633, 1634, 1642,
	1643, 1644, 0, 0, 0, 0, 0, 1639, 0, 0,
	1649, 0, 0, 1647, 1635, 1630, 1629, 1631, 0, 0,
	0, 0, 1602, 0, 0, 0, 0, 0, 0, 1648,
	1636, 0, 1645, 0, 1646, 0, 0, 0, 0, 0,
	0, 1616, 1617, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1601, 0, 0, 0, 0, 1637,
	0, 0, 0, 0, 1621, 0, 0, 0, 0, 0,
	1622, 0, 1618, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1647, 0, 0, 0, 0,
	0, 0, 1623, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1624, 1625,
	1626, 1627, 0, 0, 0, 0, 0, 0, 1607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1639, 0, 0,
	1649, 0, 0, 0, 1623, 0, 1629, 1631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1645, 0, 1646, 0, 0, 0, 0, 1640,
	0, 1616, 1617, 0, 0, 0, 0, 0, 0, 1638,
	0, 0, 0, 1613, 1614, 1620, 1641, 1619, 1615, 1637,
	1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609, 0,
	1622, 0, 0, 0, 0, 0, 0, 2252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1647, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1638, 0, 0, 0, 1613, 1614, 1620, 1641, 1619,
	1615, 0, 1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608,
	1609, 0, 0, 0, 0, 3854, 0, 0, 0, 0,
	0, 0, 0, 0, 1628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1599, 1600, 1623, 1632, 1633, 1634, 1642, 1643,
	1644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1635, 1630, 0, 0, 0, 0, 1640,
	0, 1602, 0, 0, 0, 0, 0, 0, 1648, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1621, 0, 0, 0, 0, 0, 0,
	0, 1618, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1599, 1600, 0, 1632, 1633,
	1634, 1642, 1643, 1644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1635, 1630, 0, 0,
	0, 1638, 0, 0, 1602, 1613, 1614, 1620, 1641, 1619,
	1615, 1648, 1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608,
	1609, 0, 0, 0, 0, 3706, 0, 1624, 1625, 1626,
	1627, 0, 0, 0, 0, 0, 1601, 1607, 0, 0,
	0, 0, 0, 0, 0, 0, 1621, 0, 0, 0,
	0, 0, 0, 0, 1618, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1639, 0, 0, 1649,
	0, 0, 0, 0, 0, 1629, 1631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1645, 0, 1646, 0, 0, 0, 0, 0, 0,
	1616, 1617, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1637, 0,
	1624, 1625, 1626, 1627, 0, 0, 0, 0, 0, 1622,
	1607, 0, 0, 0, 1599, 1600, 0, 1632, 1633, 1634,
	1642, 1643, 1644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1647, 1635, 1630, 0, 0, 1639,
	0, 0, 1649, 1602, 0, 0, 0, 0, 1629, 1631,
	1648, 1636, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1645, 0, 1646, 0, 0, 0,
	0, 0, 0, 1616, 1617, 1601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1621, 0, 0, 0, 0,
	0, 1637, 0, 1618, 0, 0, 0, 0, 0, 0,
	0, 0, 1622, 1628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1623, 0, 0, 0, 1647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1636, 0, 0, 0, 1640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1624,
	1625, 1626, 1627, 0, 0, 0, 0, 0, 0, 1607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1628, 0, 1639, 0,
	0, 1649, 0, 0, 0, 0, 0, 1629, 1631, 0,
	0, 0, 0, 0, 0, 0, 1623, 0, 0, 0,
	0, 0, 0, 1645, 0, 1646, 0, 0, 0, 0,
	0, 0, 1616, 1617, 0, 0, 0, 0, 0, 0,
	1638, 1640, 0, 0, 1613, 1614, 1620, 1641, 1619, 1615,
	1637, 1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609,
	0, 1622, 0, 0, 3572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1647, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1638, 0, 0, 0, 1613, 1614, 1620,
	1641, 1619, 1615, 0, 1612, 1610, 1611, 1603, 1604, 1605,
	1606, 1608, 1609, 0, 0, 1628, 0, 3516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1599, 1600, 1623, 1632, 1633, 1634, 1642,
	1643, 1644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1635, 1630, 0, 0, 0, 0,
	1640, 0, 1602, 0, 0, 0, 0, 0, 0, 1648,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1621, 0, 0, 0, 0, 0,
	0, 0, 1618, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1599, 1600, 0, 1632,
	1633, 1634, 1642, 1643, 1644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1635, 1630, 0,
	0, 0, 1638, 0, 0, 1602, 1613, 1614, 1620, 1641,
	1619, 1615, 1648, 1612, 1610, 1611, 1603, 1604, 1605, 1606,
	1608, 1609, 0, 0, 0, 0, 3515, 0, 1624, 1625,
	1626, 1627, 0, 0, 0, 0, 0, 1601, 1607, 0,
	0, 0, 0, 0, 0, 0, 0, 1621, 0, 0,
	0, 0, 0, 0, 0, 1618, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1639, 0, 0,
	1649, 0, 0, 0, 0, 0, 1629, 1631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1645, 0, 1646, 0, 0, 0, 0, 0,
	0, 1616, 1617, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1637,
	0, 1624, 1625, 1626, 1627, 0, 0, 0, 0, 0,
	1622, 1607, 0, 0, 0, 1599, 1600, 0, 1632, 1633,
	1634, 1642, 1643, 1644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1647, 1635, 1630, 0, 0,
	1639, 0, 0, 1649, 1602, 0, 0, 0, 0, 1629,
	1631, 1648, 1636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1645, 0, 1646, 0, 0,
	0, 0, 0, 0, 1616, 1617, 1601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1621, 0, 0, 0,
	0, 0, 1637, 0, 1618, 0, 0, 0, 0, 0,
	0, 0, 0, 1622, 1628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1623, 0, 0, 0, 1647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1636, 0, 0, 0, 1640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1624, 1625, 1626, 1627, 0, 0, 0, 0, 0, 0,
	1607, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1628, 0, 1639,
	0, 0, 1649, 0, 0, 0, 0, 0, 1629, 1631,
	0, 0, 0, 0, 0, 0, 0, 1623, 0, 0,
	0, 0, 0, 0, 1645, 0, 1646, 0, 0, 0,
	0, 0, 0, 1616, 1617, 0, 0, 0, 0, 0,
	0, 1638, 1640, 0, 0, 1613, 1614, 1620, 1641, 1619,
	1615, 1637, 1612, 1610, 1611, 1603, 1604, 1605, 1606, 1608,
	1609, 0, 1622, 0, 0, 3514, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1638, 0, 0, 0, 1613, 1614,
	1620, 1641, 1619, 1615, 0, 1612, 1610, 1611, 1603, 1604,
	1605, 1606, 1608, 1609, 0, 0, 1628, 0, 3226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1599, 1600, 1623, 1632, 1633, 1634,
	1642, 1643, 1644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1635, 1630, 0, 0, 0,
	0, 1640, 0, 1602, 0, 0, 0, 0, 0, 0,
	1648, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1621, 0, 0, 0, 0,
	0, 0, 0, 1618, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1599, 1600, 0,
	1632, 1633, 1634, 1642, 1643, 1644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1635, 1630,
	0, 0, 0, 1638, 0, 0, 1602, 1613, 1614, 1620,
	1641, 1619, 1615, 1648, 1612, 1610, 1611, 1603, 1604, 1605,
	1606, 1608, 1609, 0, 0, 0, 0, 2802, 0, 1624,
	1625, 1626, 1627, 0, 0, 0, 0, 0, 1601, 1607,
	0, 0, 0, 0, 0, 0, 0, 0, 1621, 0,
	0, 0, 0, 0, 0, 0, 1618, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1639, 0,
	0, 1649, 0, 0, 0, 0, 0, 1629, 1631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1645, 0, 1646, 0, 0, 0, 0,
	0, 0, 1616, 1617, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1637, 0, 1624, 1625, 1626, 1627, 0, 0, 0, 0,
	0, 1622, 1607, 0, 0, 0, 1599, 1600, 0, 1632,
	1633, 1634, 1642, 1643, 1644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1647, 1635, 1630, 0,
	0, 1639, 0, 0, 1649, 1602, 0, 0, 0, 0,
	1629, 1631, 1648, 1636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1645, 0, 1646, 0,
	0, 0, 0, 0, 0, 1616, 1617, 1601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1621, 0, 0,
	0, 0, 0, 1637, 0, 1618, 0, 0, 0, 0,
	0, 0, 0, 0, 1622, 1628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1623, 0, 0, 0, 1647,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1636, 0, 0, 0,
	1640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1624, 1625, 1626, 1627, 0, 0, 0, 0, 0,
	0, 1607, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1628, 0,
	1639, 0, 0, 1649, 0, 0, 0, 0, 0, 1629,
	1631, 0, 0, 0, 0, 0, 0, 0, 1623, 0,
	0, 0, 0, 0, 0, 1645, 0, 1646, 0, 0,
	0, 0, 0, 0, 1616, 1617, 0, 0, 0, 0,
	0, 0, 1638, 1640, 0, 0, 1613, 1614, 1620, 1641,
	1619, 1615, 1637, 1612, 1610, 1611, 1603, 1604, 1605, 1606,
	1608, 1609, 0, 1622, 0, 0, 2801, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1638, 0, 0, 0, 1613,
	1614, 1620, 1641, 1619, 1615, 0, 1612, 1610, 1611, 1603,
	1604, 1605, 1606, 1608, 1609, 0, 0, 1628, 0, 2800,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1599, 1600, 1623, 1632, 1633,
	1634, 1642, 1643, 1644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1635, 1630, 0, 0,
	0, 0, 1640, 0, 1602, 0, 0, 0, 0, 0,
	0, 1648, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1621, 0, 0, 0,
	0, 0, 0, 0, 1618, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1599, 1600,
	0, 1632, 1633, 1634, 1642, 1643, 1644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1635,
	1630, 0, 0, 0, 1638, 0, 0, 1602, 1613, 1614,
	1620, 1641, 1619, 1615, 1648, 1612, 1610, 1611, 1603, 1604,
	1605, 1606, 1608, 1609, 0, 0, 0, 0, 2799, 0,
	1624, 1625, 1626, 1627, 0, 0, 0, 0, 0, 1601,
	1607, 0, 0, 0, 0, 0, 0, 0, 0, 1621,
	0, 0, 0, 0, 0, 0, 0, 1618, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1639,
	0, 0, 1649, 0, 0, 0, 0, 0, 1629, 1631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1645, 0, 1646, 0, 0, 0,
	0, 0, 0, 1616, 1617, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1637, 0, 1624, 1625, 1626, 1627, 0, 0, 0,
	0, 0, 1622, 1607, 4068, 0, 0, 1599, 1600, 0,
	1632, 1633, 1634, 1642, 1643, 1644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1647, 1635, 1630,
	0, 0, 1639, 0, 2737, 1649, 1602, 0, 0, 0,
	0, 1629, 1631, 1648, 1636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1645, 0, 1646,
	0, 0, 0, 0, 0, 0, 1616, 1617, 1601, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1621, 0,
	0, 0, 0, 0, 1637, 0, 1618, 0, 0, 0,
	0, 0, 0, 0, 0, 1622, 1628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1623, 2738, 0, 0,
	1647, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1636, 0, 0,
	0, 1640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1624, 1625, 1626, 1627, 0, 0, 0, 0,
	0, 0, 1607, 4067, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1628,
	0, 1639, 0, 0, 1649, 0, 0, 0, 0, 0,
	1629, 1631, 0, 0, 0, 0, 0, 0, 0, 1623,
	0, 0, 0, 0, 0, 0, 1645, 0, 1646, 0,
	0, 0, 0, 0, 0, 1616, 1617, 0, 0, 0,
	0, 0, 0, 1638, 1640, 0, 0, 1613, 1614, 1620,
	1641, 1619, 1615, 1637, 1612, 1610, 1611, 1603, 1604, 1605,
	1606, 1608, 1609, 0, 1622, 2766, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1647,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1636, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1638, 0, 0, 0,
	1613, 1614, 1620, 1641, 1619, 1615, 0, 1612, 1610, 1611,
	1603, 1604, 1605, 1606, 1608, 1609, 0, 0, 1628, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1599, 1600, 1623, 1632,
	1633, 1634, 1642, 1643, 1644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1635, 1630, 0,
	0, 0, 0, 1640, 0, 1602, 0, 0, 0, 0,
	0, 0, 1648, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1621, 0, 0,
	0, 2372, 0, 0, 0, 1618, 0, 0, 1599, 1600,
	0, 1632, 1633, 1634, 1642, 1643, 1644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1635,
	1630, 0, 0, 0, 2371, 0, 0, 1602, 0, 0,
	0, 0, 0, 0, 1648, 1638, 0, 0, 0, 1613,
	1614, 1620, 1641, 1619, 1615, 0, 1612, 1610, 1611, 1603,
	1604, 1605, 1606, 1608, 1609, 0, 0, 0, 0, 1601,
	0, 1624, 1625, 1626, 1627, 0, 0, 0, 0, 1621,
	0, 1607, 0, 2862, 0, 0, 2861, 1618, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1639, 0, 0, 1649, 0, 0, 0, 0, 0, 1629,
	1631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1645, 0, 1646, 0, 0,
	0, 0, 0, 0, 1616, 1617, 0, 0, 0, 0,
	0, 0, 0, 1624, 1625, 1626, 1627, 0, 0, 0,
	0, 0, 1637, 1607, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1622, 0, 0, 0, 0, 1599, 1600,
	0, 1632, 1633, 1634, 1642, 1643, 1644, 0, 0, 0,
	0, 0, 1639, 0, 0, 1649, 0, 0, 1647, 1635,
	1630, 1629, 1631, 0, 0, 0, 0, 1602, 0, 0,
	0, 0, 0, 0, 1648, 1636, 0, 1645, 0, 1646,
	0, 0, 0, 0, 0, 0, 1616, 1617, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1601,
	0, 0, 0, 0, 1637, 0, 0, 0, 0, 1621,
	0, 0, 0, 0, 0, 1622, 0, 1618, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1647, 0, 0, 0, 0, 0, 0, 1623, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1636, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1624, 1625, 1626, 1627, 0, 0, 0,
	0, 0, 0, 1607, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1628,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1639, 0, 0, 1649, 0, 0, 0, 1623,
	0, 1629, 1631, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1645, 0, 1646,
	0, 0, 0, 0, 1640, 0, 1616, 1617, 0, 0,
	0, 0, 0, 0, 1638, 0, 0, 0, 1613, 1614,
	1620, 1641, 1619, 1615, 1637, 1612, 1610, 1611, 1603, 1604,
	1605, 1606, 1608, 1609, 0, 1622, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1647, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1636, 928, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1638, 0, 0, 0,
	1613, 1614, 1620, 1641, 1619, 1615, 0, 1612, 1610, 1611,
	1603, 1604, 1605, 1606, 1608, 1609, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1628,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1599, 1600, 1623,
	1632, 1633, 1634, 1642, 1643, 1644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1635, 1630,
	0, 0, 0, 0, 1640, 0, 1602, 0, 0, 0,
	0, 0, 0, 1648, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1601, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1621, 0,
	0, 0, 0, 0, 0, 0, 1618, 0, 0, 1599,
	1600, 0, 1632, 1633, 1634, 1642, 1643, 1644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1635, 1630, 0, 0, 0, 0, 0, 0, 1602, 0,
	0, 0, 0, 0, 0, 1648, 1638, 0, 0, 0,
	1613, 1614, 1620, 1641, 1619, 1615, 0, 1612, 1610, 1611,
	1603, 1604, 1605, 1606, 1608, 1609, 0, 0, 0, 0,
	1601, 0, 1624, 1625, 1626, 1627, 0, 0, 0, 0,
	1621, 0, 1607, 0, 0, 0, 0, 0, 1618, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1639, 0, 0, 1649, 0, 0, 0, 0, 0,
	1629, 1631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1645, 0, 1646, 0,
	0, 0, 0, 0, 0, 1616, 1617, 0, 0, 0,
	0, 0, 0, 0, 1624, 1625, 1626, 1627, 0, 0,
	0, 0, 0, 1637, 1607, 0, 0, 0, 0, 2868,
	0, 0, 0, 0, 1622, 0, 0, 0, 0, 1599,
	1600, 0, 1632, 1633, 1634, 1642, 1643, 1644, 0, 0,
	0, 0, 0, 1639, 0, 0, 1649, 0, 0, 1647,
	1635, 1630, 1629, 1631, 0, 2863, 0, 0, 1602, 0,
	0, 0, 0, 0, 0, 1648, 1636, 0, 1645, 0,
	1646, 0, 0, 0, 0, 0, 0, 1616, 1617, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1601, 0, 0, 0, 0, 1637, 0, 0, 0, 0,
	1621, 0, 0, 0, 0, 0, 1622, 0, 1618, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1628, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1647, 0, 0, 0, 0, 0, 0, 1623, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1636, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1624, 1625, 1626, 1627, 0, 0,
	0, 0, 0, 0, 1607, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1628, 3207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1639, 0, 0, 1649, 0, 0, 0,
	1623, 0, 1629, 1631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1645, 0,
	1646, 0, 0, 0, 0, 1640, 0, 1616, 1617, 0,
	0, 0, 0, 0, 0, 1638, 0, 0, 0, 1613,
	1614, 1620, 1641, 1619, 1615, 1637, 1612, 1610, 1611, 1603,
	1604, 1605, 1606, 1608, 1609, 0, 1622, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1647, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1636, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1638, 0, 0,
	0, 1613, 1614, 1620, 1641, 1619, 1615, 0, 1612, 1610,
	1611, 1603, 1604, 1605, 1606, 1608, 1609, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1599, 1600,
	1623, 1632, 1633, 1634, 1642, 1643, 1644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1635,
	1630, 0, 0, 0, 0, 1640, 0, 1602, 0, 0,
	0, 0, 0, 0, 1648, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1621,
	0, 0, 0, 0, 0, 0, 0, 1618, 0, 0,
	1599, 1600, 0, 1632, 1633, 1634, 1642, 1643, 1644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1635, 1630, 0, 0, 0, 2803, 0, 0, 1602,
	0, 0, 0, 0, 0, 0, 1648, 1638, 0, 0,
	0, 1613, 1614, 1620, 1641, 1619, 1615, 0, 1612, 1610,
	1611, 1603, 1604, 1605, 1606, 1608, 1609, 0, 0, 0,
	0, 1601, 0, 1624, 1625, 1626, 1627, 0, 0, 0,
	0, 1621, 0, 1607, 0, 0, 0, 0, 0, 1618,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1639, 0, 0, 1649, 0, 0, 0, 0,
	0, 1629, 1631, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1645, 0, 1646,
	0, 0, 0, 0, 0, 0, 1616, 1617, 0, 0,
	0, 0, 0, 0, 0, 1624, 1625, 1626, 1627, 0,
	0, 0, 0, 0, 1637, 1607, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1622, 0, 0, 0, 0,
	1599, 1600, 0, 1632, 1633, 1634, 1642, 1643, 1644, 0,
	0, 0, 0, 0, 1639, 0, 0, 1649, 0, 0,
	1647, 1635, 1630, 1629, 1631, 0, 0, 0, 0, 1602,
	0, 0, 0, 0, 0, 0, 1648, 1636, 0, 1645,
	0, 1646, 0, 0, 0, 0, 0, 0, 1616, 1617,
	0, 0, 0, 0, 0, 0, 0, 2830, 0, 0,
	0, 1601, 0, 0, 0, 0, 1637, 0, 0, 0,
	0, 1621, 0, 0, 0, 0, 0, 1622, 0, 1618,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1628,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1647, 0, 0, 0, 0, 0, 0, 1623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1624, 1625, 1626, 1627, 0,
	0, 0, 0, 0, 0, 1607, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1628, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1639, 0, 0, 1649, 0, 0,
	0, 1623, 0, 1629, 1631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1645,
	0, 1646, 0, 0, 0, 0, 1640, 0, 1616, 1617,
	0, 0, 0, 0, 0, 0, 1638, 0, 0, 0,
	1613, 1614, 1620, 1641, 1619, 1615, 1637, 1612, 1610, 1611,
	1603, 1604, 1605, 1606, 1608, 1609, 0, 1622, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1638, 0,
	0, 0, 1613, 1614, 1620, 1641, 1619, 1615, 0, 1612,
	1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1628, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1599,
	1600, 1623, 1632, 1633, 1634, 1642, 1643, 1644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1635, 1630, 0, 0, 0, 0, 1640, 0, 1602, 0,
	0, 0, 0, 0, 0, 1648, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1621, 0, 0, 0, 0, 0, 0, 0, 1618, 1599,
	1600, 0, 1632, 1633, 1634, 1642, 1643, 1644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1630, 0, 0, 0, 0, 0, 0, 1602, 0,
	0, 0, 0, 0, 0, 1648, 0, 0, 1638, 0,
	0, 0, 1613, 1614, 1620, 1641, 1619, 1615, 0, 1612,
	1610, 1611, 1603, 1604, 1605, 1606, 1608, 1609, 0, 0,
	1601, 0, 0, 0, 1624, 1625, 1626, 1627, 0, 0,
	1621, 0, 0, 0, 1607, 0, 0, 0, 1618, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1639, 0, 0, 1649, 0, 0, 0,
	0, 0, 1629, 1631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1645, 0,
	1646, 0, 0, 0, 0, 0, 0, 1616, 1617, 0,
	0, 0, 0, 0, 1624, 1625, 1626, 1627, 0, 0,
	0, 0, 0, 0, 1607, 1637, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1622, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1639, 0, 0, 1649, 0, 0, 0,
	0, 1647, 1629, 1631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1645, 0,
	1646, 0, 0, 0, 0, 0, 0, 1616, 1617, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1637, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1622, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1647, 0, 0, 0, 0, 0, 0, 0, 0,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1638, 0, 0,
	0, 1613, 1614, 1620, 1641, 1619, 1615, 0, 1612, 1610,
	1611, 1603, 1604, 1605, 1606, 1608, 1609, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1638, 0, 0,
	0, 1613, 1614, 1620, 1641, 1619, 1615, 0, 1612, 1610,
	1611, 1603, 1604, 1605, 1606, 1608, 1609,
}
var sqlPact = [...]int{

	5043, -1000, -1000, -1000, -1000, 235, -1000, -1000, 222, 215,
	214, 213, 210, 209, 208, 207, 200, -1000, -1000, -1000,
	-1000, -1000, -1000, 198, -1000, -1000, 197, -1000, 196, 194,
	189, -1000, -1000, 186, -1000, 185, -1000, -1000, -1000, -1000,
	184, 183, 182, 74384, 73907, 74855, 2092, 90047, 78635, 1977,
	66770, 89570, 66293, 89093, 88616, 2495, 181, -1000, 88139, 180,
	178, 177, -1000, 87662, -1000, 1759, -1000, 174, 3818, 55296,
	170, 168, 165, 2568, 164, -1000, 163, 162, -1000, 10217,
	1370, -1000, 161, 159, -1000, 8591, 958, 77687, 156, 152,
	2197, 151, 150, 54818, 149, 148, 2105, 2671, -1000, -1000,
	1954, -1000, -1000, 146, 145, 143, 142, 139, 138, 133,
	132, 131, 130, -1000, 128, 126, 123, 118, 115, 114,
	113, 109, -1000, 107, 104, 103, 102, 98, 93, 91,
	90, 89, 88, 87, 85, -1000, 13229, 84, 1797, 1584,
	1567, 1550, 1547, 1524, 948, 83, 81, 78, 77, 73,
	71, 70, 69, 68, -1000, 67, 64, 63, 62, 60,
	57, 56, 55, 190, 54, 53, 52, 44, 34, 31,
	29, 2131, -1000, 1575, 1071, 26062, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 95699, 90518, 28, -124, 26, -1000, 3037, 932,
	45723, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 295, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 487, 1804, 743, -1000, -1000, -1000, 87191,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2089, -125,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 742, -1000, 2088,
	135, 2028, -1000, -1000, -1000, -1000, -1000, 90518, -1000, 980,
	-1000, -1000, 3429, 3427, 1889, 740, 86720, -1000, 1502, -1000,
	893, 27565, -1000, 1215, -1000, 27565, 293, -1000, -1000, -1000,
	-1000, -1000, -1000, 3424, 3422, 3419, 3418, -1000, -1000, 65816,
	19996, 65339, 64862, 86243, 19509, 73430, 72953, 85766, 61060, -1000,
	-1000, -1000, 1304, -1000, -1000, -1000, -1000, -1000, -1000, 8,
	58625, 3230, 90518, -1000, 290, -1000, -1000, -1000, -1000, -1000,
	-1000, 39304, 796, 38791, 775, 38278, 593, -1000, -1000, -1000,
	60573, -1000, 3415, 3414, 1069, 3413, 2971, 95228, 1706, 3410,
	1761, 1140, 3408, 3407, 3405, 3402, 3401, 3396, 1327, 85289,
	2771, 84812, 1676, 60086, 977, 72476, 74855, 2431, 84335, 1387,
	1307, -1000, -1000, -1000, -1000, 2822, 2651, 2649, 51497, -1000,
	-1000, 3392, 3391, 3390, 3388, 3383, 94757, 1658, 3381, 2317,
	3380, 3378, 3377, 3376, 3373, 3372, 3371, -1000, 71999, 71522,
	71045, 3089, 83858, 70568, 83381, 59599, 37765, 1066, -1000, -1000,
	-1000, 47645, 8243, 7597, 82904, 49592, 74855, 74855, -1000, -1000,
	-1000, -1000, -1000, 37252, 640, 36739, 1065, -1000, -1000, 48137,
	2708, -1000, -1000, -1000, -1000, 36226, 291, 35713, 905, 90518,
	-1000, 2767, 1824, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1951, 1517, 3258, 59112, 1881,
	1225, 3034, 2821, 2819, 1389, 3367, 2318, 2818, 2816, 2806,
	2801, 2794, 1640, 2377, 421, 25549, 2744, 1552, 35200, 1532,
	1397, 2763, 2762, 3267, 1834, 1848, 2044, 64385, 3366, 3365,
	2999, 2749, 2737, 2704, -1000, -1000, -1000, -1000, 1358, -1000,
	-1000, -1000, -1000, -1000, 67712, -1000, -1000, 1245, -1000, -1000,
	1245, -1000, -1000, -1000, -1000, -1000, 1276, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1575, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2022,
	-1000, 1886, -1000, -1000, 2391, 3014, 3014, 3014, 3056, 458,
	456, -1000, 190, -1000, -1000, 101539, -1000, -1000, 39805, 39805,
	39805, 39805, 39805, 39805, 39805, 1985, -1000, 739, -1000, -1000,
	773, -1000, 738, 611, -1000, -1000, -1000, -1000, -1000, -1000,
	736, -1000, -1000, -1000, -1000, -1000, -1000, 3230, -1000, 22483,
	-1000, -1000, -1000, 470, 734, 39805, -1000, -1000, 3280, 3278,
	917, -1000, 283, 907, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2758, 732, 731, -1000,
	730, 729, 728, 727, 726, -1000, -1000, -1000, 725, 724,
	720, 717, 715, 711, 709, 708, -1000, 1904, -1000, -1000,
	-1000, -1000, -1000, -1000, 671, 670, 670, 670, -1000, 965,
	-1000, -1000, -1000, 346, 667, 343, 661, 660, 659, -1000,
	707, 706, 702, 701, 697, 695, 693, 688, 687, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 962, -1000, -1000, -1000, -1000,
	7, 90518, -1000, 487, 7, -1000, -1000, 683, -1000, 29581,
	29581, 29581, -1000, -1000, 2086, 39805, -1000, 2656, -1000, 13,
	13, 866, 46675, -1000, 44753, 866, 491, 779, 51019, -1000,
	2703, -1000, -1000, 680, 281, -1000, -1000, -1000, -1000, 20481,
	2702, 90518, 90518, 74855, 74855, 74855, 2918, 39805, -1000, -1000,
	55767, 90518, 75326, 3184, 56709, 55767, 90518, 2757, -1000, 74855,
	-1000, -1000, 90518, -1000, 39805, -1000, 3183, 1499, 62020, 3096,
	-2, -1000, -1000, -1000, -1000, -1000, -1000, 2273, 2376, 1087,
	2117, 1755, -1000, 27565, 2963, -1000, -1000, -1000, 280, 20481,
	-1000, -1000, -1000, -1000, -1000, 3142, 2894, 1286, -1000, 2114,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1645,
	2893, -1000, 2279, 2892, 1582, -1000, -1000, 2020, -1000, -1000,
	2988, -1000, -1000, 1668, 2891, 15, -1000, -1000, 2427, -1000,
	-1000, 1840, -1000, -1000, 933, 2890, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 49107, 48137, 58625, 1, -1000,
	-1000, -1000, -1000, -45, -1000, 19022, 101539, -1000, -1000, -1000,
	-1000, 1685, 101539, 835, -1000, -1000, 2889, -1000, 101539, 832,
	-1000, -1000, 2886, -1000, 2755, -1000, -1000, -1000, -1000, 3362,
	-1000, 3360, 2198, 3358, 3357, 3356, -1000, 1513, 1874, 3355,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 70091, 2082, -1000,
	-1000, 69137, -1000, 2196, -1000, 69614, 976, -1000, 933, 2191,
	-1000, 74855, 899, -1000, 3352, 3083, 2479, 933, 2181, -1000,
	-1000, -1000, -1000, -1000, 52919, -1000, 52919, -1000, 52919, -1000,
	1510, -1000, 94286, 13, 13, 3230, -1000, -1000, -1000, -1000,
	-1000, 2885, 3351, 3349, 3347, -1000, 90518, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 202, 2884, -1000, -1000, 202, 2883,
	-1000, 202, 2882, -1000, 77210, -1000, -1000, 2129, 2879, -1000,
	201, 2872, -1000, -1000, 199, 2870, -1000, -1000, -64, 2869,
	-1000, -1000, 101539, -1000, -1000, -1000, -5, -1000, -1000, -1000,
	932, -1000, 47153, -1000, 47153, 82427, 61545, 919, 699, 54340,
	101539, -1000, -1000, -1000, -1000, 101539, -1000, -1000, -1000, -170,
	-1000, -1000, 61545, 48137, 101539, -1000, -1000, -1000, -1000, 101539,
	-1000, -1000, -1000, 61545, 69137, -1000, 81950, 68666, -1000, -1000,
	1324, 2346, -1000, -1000, -1000, 919, 61545, 61545, 61545, -1000,
	81473, -1000, -1000, 1861, 1623, 2990, 1852, 74855, -1000, 1814,
	-1000, -1000, -1000, 3021, -1000, 2747, -1000, 56238, 76739, -1000,
	76268, -1000, 75797, -1000, 74855, -1000, 74855, -1000, 3345, 3343,
	3342, -1000, 3340, 3012, -1000, 101539, 3001, -1000, 3339, 3091,
	2744, 101539, -1000, 2751, 1537, 1523, 90518, -1000, -1000, 90518,
	-1000, 90518, -1000, -1000, -1000, 1437, -1000, -1000, 2267, -1000,
	-1000, -1000, -1000, 74855, -1000, -1000, -1000, -1000, -1000, -1000,
	2733, -1000, 1649, -1000, 1736, -1000, 1315, -1000, -1000, 204,
	-1000, -1000, -2, -1000, 93815, -1000, 2391, -1000, 90518, -1000,
	2253, 2722, 2730, 1439, 2099, 2352, -1000, 34687, 2342, 42310,
	2109, 190, -1000, -1000, 190, 190, 27064, -1000, -1000, 56709,
	56709, 20481, 1284, 39805, 39805, 39805, 39805, 39805, 39805, 39805,
	39805, 39805, 39805, 39805, 39805, 39805, 39805, 39805, 39805, 39805,
	39805, 39805, 39805, 39805, 39805, 39805, 39805, 39805, 39805, 39805,
	39805, 39805, 39805, 39805, 39805, 39805, 39805, 39805, 2096, 39805,
	1274, 39805, 39805, 39805, 39805, 1558, -1000, -1000, 1789, 517,
	1822, -1000, 3235, 3235, 3235, 490, 490, 101978, 101978, 489,
	3337, 773, -1000, 39805, -1000, 125, 39805, 20968, -1000, 456,
	7320, 2259, -1000, 455, 21481, -1000, -1000, -1000, 22483, 611,
	34174, 39805, 957, 101539, -1000, -1000, 1385, 3244, 18537, 2769,
	2553, 678, 800, 794, 25036, 24523, 24010, 23497, 750, 39805,
	39805, 39805, 39805, 39805, 39805, 39805, 39805, -1000, -1000, 3256,
	-1000, 3244, -1000, -1000, -1000, -1000, 3244, 1283, 1229, 3244,
	-1000, 3244, 3244, 2694, 2694, 33673, 33160, 32647, 42811, 32134,
	39805, 22984, 31621, 31108, -1000, 90518, 7, 3182, 39805, 127,
	-1000, 100147, -1000, 127, 127, 677, -6, 101539, 2473, 2473,
	46199, 2688, 1995, 1995, 1995, -1000, 866, 14628, 866, 80527,
	2004, 866, 866, 276, 297, 454, 44277, 2656, 80527, 762,
	676, 25, 24, 22, -1000, -1000, 21, 18, -1000, -1000,
	74855, 675, 20968, 20481, 271, 1391, -7, 2414, 2411, 2395,
	-1000, 2387, 1716, -13, 1268, -98, -1000, 4424, -19, -1000,
	1234, 269, 3244, -1000, -1000, -1000, -1000, -1000, 3335, 3334,
	-1000, 960, 673, 672, 423, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 671, 670, 670, 670, -1000, 346, 667,
	343, 661, 660, 659, -1000, -1000, -1000, -1000, -1000, 2701,
	-45, 75326, -1000, -1000, 853, -24, 1075, -2, -1000, -1000,
	-1000, 62020, 1245, -1000, 1739, -1000, -1000, -1000, -1000, -1000,
	-1000, 1338, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 917,
	-1000, -1000, -1000, -1000, -1000, -1000, 3247, 3242, 3, -1000,
	-1000, 20481, -1000, -20, 1763, 1677, -1000, 63908, 2140, 2998,
	2978, 1492, -1000, 1412, 3054, 67712, 3158, 3165, 920, -1000,
	2690, -1000, -1000, 890, 1639, 1671, 1267, 67712, 2279, -1000,
	56709, -1000, 2381, 3053, 1285, 1318, 1285, 1285, 1316, -1000,
	67712, 1666, 1258, -1000, 1251, -1000, -31, 3149, 3156, 119,
	-1000, 2687, 1249, -1000, -1000, 74855, 20481, 1424, 1421, 1656,
	1247, 2, -1000, 3140, 3136, 1246, 1239, -1000, 1948, -1000,
	61545, 523, 2506, 523, 1, 58625, 90518, 268, -1000, 125,
	39805, 39805, 125, 39805, 125, 3087, -1000, -1000, 2867, -1000,
	-1000, -1000, 3333, 1819, 2315, -1000, -1000, 656, 2180, 2661,
	90518, 2425, 0, 74855, -1000, 2863, 2279, 2179, -1000, -1000,
	68189, -1000, 2862, 487, 655, 3331, -1000, 93344, -1000, 3009,
	1294, 2860, 1016, 714, 3181, -1000, 714, 53390, -1000, 90518,
	-1000, -1000, 90518, -1000, -1000, -1000, 3329, -1000, 74855, -1000,
	-1000, 74855, -1000, 74855, -1000, 74855, 191, 2857, -1000, -1000,
	90518, -1000, 74855, 74855, -1000, 90518, 90518, 61545, 61545, 4698,
	62966, -25, -26, 449, -1000, 81002, 90518, 1014, 63437, 90518,
	2952, 927, 48137, -1000, -34, -170, 2502, 919, 919, 523,
	-1000, 523, -1000, 74855, 2728, -1000, 919, 919, 919, -1000,
	-1000, -1000, -1000, 3327, 3325, -1000, -1000, -1000, 931, 74855,
	90518, 74855, -1000, -1000, 90518, -1000, 90518, -1000, 931, 90518,
	931, 90518, 931, 90518, -1000, -1000, -1000, -1000, -1000, -1000,
	125, 39805, -1000, -1000, 3324, 1539, -1000, 2726, -1000, 2725,
	-1000, 50, -1000, -1000, -1000, -1000, -1000, 1842, 74855, 74855,
	74855, 74855, 90518, 74855, -1000, 67712, -1000, 2253, 2722, -1000,
	-1000, -1000, -1000, -1000, -1000, 1593, 2042, -1000, 2353, -1000,
	1458, -1000, -1000, -1000, 101539, 43296, -1000, -1000, 101539, 1850,
	-1000, 41809, 41308, -1000, -1000, 1597, 74855, 2430, -1000, 2430,
	-103, -1000, 99706, 2350, 74855, -1000, -1000, -1000, -1000, -1000,
	886, 609, 609, 1163, 1163, 1163, 1163, 3103, 1937, 1961,
	554, 9931, 9931, 6197, 6197, 6197, 6197, 6197, 9931, 376,
	490, 490, 376, 376, 376, 376, 376, 490, 490, 490,
	9931, 9931, 9931, 101978, 101898, 7999, 39805, 39805, 1219, 1723,
	517, 7157, 39805, 6028, 6028, 6028, 6028, -1000, 1734, -1000,
	-1000, -1000, -1000, 2655, 646, 42811, 42811, -1000, -1000, -1000,
	-1000, 21982, 39805, -1000, -1000, -1000, -1000, 30595, -1000, -1000,
	99454, -272, 448, -88, -12, -1000, 39805, 39805, 39805, 446,
	-1000, 264, 39805, 90518, -1000, 97010, 756, -134, -1000, -35,
	1321, -1000, 39805, -1000, -1000, 1213, -1000, 1153, 1148, 1146,
	-1000, 644, 444, -1000, 253, -1000, 1998, 638, 637, 39805,
	-1000, -1000, -1000, -1000, -1000, 99095, -1000, -1000, 98936, -1000,
	-1000, 98843, -1000, -1000, 98484, -1000, -1000, -1000, 101369, 96692,
	96648, 13968, 6923, 13310, 12335, -44, 442, -51, 441, 883,
	882, 425, 424, 419, -52, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -66, 418, -1000, 2654, -88, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 415, -1000, 414, -1000,
	101287, -88, 410, 7919, -1000, 42811, 42811, 42811, -1000, 407,
	-1000, 100065, -1000, 100928, 30094, 30094, 30094, 406, 100758, 39805,
	-88, -67, -1000, -68, -1000, -1000, 519, -76, 934, 29581,
	45245, 20481, -1000, 934, 934, 39805, -1000, 39805, 2365, -1000,
	-1000, -1000, 2361, 3071, 2473, 46199, -1000, -1000, -1000, -1000,
	80527, -1000, 3230, 2539, -1000, 80527, -1000, -1000, 90518, 487,
	-1000, 80527, 80527, 20481, 866, -1000, 866, 80527, 632, -1000,
	-1000, -1000, -1000, -1000, 403, 50067, -12, 250, 20481, 933,
	-1000, 2413, 2413, 2413, 2413, -1000, -1000, 90518, 3203, -1000,
	1915, -1000, 56709, -1000, 772, 1135, 20481, -1000, -1000, -1000,
	630, -1000, 3244, 3244, -1000, 3244, 90518, 110, 27565, -1000,
	1245, -1000, -1000, 1431, -1000, 1816, -1000, 1091, -1000, -1000,
	-1000, -1000, 27565, -1000, 1931, 90518, 90518, 74855, -1000, 90518,
	-1000, 2177, 92873, 2176, 56709, 90518, -1000, -1000, 629, 626,
	2348, 2347, 1008, 90518, 90518, 2340, 92402, 91931, 90518, 1922,
	39805, 1994, 1862, 125, 125, -1000, -1000, 125, 625, 1198,
	74855, 74855, 90518, 74855, 1544, -1000, -1000, -1000, -1000, -1000,
	67241, -1000, -1000, 3255, 3254, -1000, 1285, -1000, -1000, -1000,
	1285, 2279, 1512, 90518, 74855, 90518, 1928, 125, 125, -1000,
	-1000, 125, 621, 20481, 1888, -1000, 2711, 90518, 3276, 90518,
	90518, 90518, 58154, 3020, 91460, 90518, 90518, 58154, 1948, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 57679, 1021, 933, 925,
	48137, 2493, -1000, -1000, 18052, -1000, 101539, 101539, -1000, 101539,
	-1000, 55767, 90518, -1000, 970, 90518, 63437, 914, 2851, 52448,
	-45, 919, 61545, 74855, 0, 90518, -1000, 2279, 2848, 487,
	2172, -1000, 61545, 3180, 620, 3323, 3322, -1000, 2079, 2167,
	-1000, -1000, 90989, 2906, 804, 90518, 934, 46199, 1796, -1000,
	50544, 989, 90518, 1743, 97, -1000, -1000, -1000, 40, 90518,
	-1000, 3321, -1000, -1000, 202, 202, 202, -1000, 74855, 74855,
	2129, -1000, 201, -1000, 199, -1000, -64, -1000, -1000, 4698,
	4698, 919, -132, 619, -1000, 862, 857, 48622, 61545, -78,
	-1000, -1000, -1000, -1000, -1000, 74855, 90518, 712, 2460, 90518,
	-83, -1000, 240, 612, -1000, 2582, -1000, -1000, 927, 48137,
	2630, -1000, -1000, 945, -1000, 1298, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 12, -45, -45, -1000, 931,
	-1000, 931, -1000, 931, -1000, 101539, -1000, -1000, 1518, 1505,
	90518, -1000, 20481, 90518, 74855, 20481, 74855, 2721, 2697, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1034, -1000, 1850,
	2040, -1000, 611, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2261, -1000, -1, 27064, 2122, -1000, -1000, 74855,
	11, 39805, 39805, 6956, 5622, 39805, 42811, 42811, -1000, 39805,
	5434, -1000, -1000, -1000, -1000, -1000, 2620, 601, 39805, 56709,
	5939, 5398, -1000, 396, 11719, 376, -1000, 39805, -1000, 395,
	29080, -1000, 100317, -27, -85, -1000, 15126, -88, -86, -1000,
	-1000, 769, -1000, 2903, -1000, 39805, 100676, 2213, 1903, 1778,
	1551, 3244, 3275, 17567, -1000, 53865, 954, 2009, 98325, -1000,
	-1000, -1000, -1000, 56709, 56709, 39805, 39805, -1000, 39805, 39805,
	39805, -1000, -1000, -1000, 3244, 904, -1000, -1000, -1000, 904,
	-1000, -1000, 1285, -1000, 1285, -1000, 39805, -1000, -1000, 2618,
	39805, -1000, 56709, 56709, 42811, 42811, 42811, 42811, 42811, 42811,
	42811, 42811, 42811, 42811, 42811, 42811, 42811, 42811, 42811, 42811,
	42811, 42811, 42811, 2214, 42811, 3233, 3233, 3233, -1000, 2572,
	2618, 39805, 39805, 56709, 393, 392, 391, -1000, 39805, -88,
	-1000, -1000, 4698, 599, -1000, 2236, -1000, 2550, -1000, 39805,
	-1000, -105, -1000, 2656, -1000, -1000, 2550, 2550, -91, 101539,
	46199, 46199, -1000, 597, 39805, 2360, -1000, -1000, 751, -259,
	-1000, 854, -1000, -1000, -1000, -1000, -1000, 487, -1000, -1000,
	-1000, 239, 80527, 80527, 749, -1000, -92, -1000, -1000, -93,
	-1000, 3179, 389, 20481, -1000, -1000, 2997, -1000, -1000, -1000,
	-1000, -1000, -1000, -45, 2024, 3274, -1000, 3251, 767, 748,
	192, 3244, 388, 382, 379, -45, 90518, -1000, -2, -1000,
	-1000, -1000, 39805, -1000, -1000, 2989, 1139, 1138, -1000, -1000,
	2839, -1000, 2166, -1000, 997, -1000, 1943, -1000, 39805, 39805,
	591, 590, 3319, 1737, 3318, 1011, 2835, 2129, 2834, 2129,
	-1000, -1000, 903, -1000, 101539, 588, 587, -1000, -20, 1497,
	1653, 939, -1000, -1000, 39805, 39805, 80056, -1000, 409, 2988,
	10, -1000, -1000, 1620, 1131, -1000, -1000, -1000, -1000, 2279,
	1577, 1110, -1000, -1000, -1000, -1000, 936, -1000, -1000, 39805,
	-1000, -31, 1109, 3128, 2155, 74855, 1105, -1000, 1104, -1000,
	-1000, -1000, -1000, -1000, -1000, 3111, 2129, 2833, 1123, -1000,
	-1000, -1000, -1000, -1000, 57194, -1000, -1000, 2111, 523, 925,
	2614, -1000, 2418, 3316, 74855, 3314, 378, -100, -36, 56709,
	3176, -1000, 2066, 596, 74855, 891, -1000, 3230, -1000, -1000,
	-1000, -1000, 74855, 3172, 2828, 933, 125, 3273, -1000, -1000,
	74855, 2827, 2074, 2150, 2283, 804, 62495, -1000, 933, 2006,
	-62, -1000, 1743, 28567, 2980, -106, -1000, -1000, -1000, 934,
	53390, 46199, 39805, 3306, -107, -1000, -1000, -1000, -1000, -1000,
	191, -1000, -1000, -1000, -1000, -1000, -1000, 79110, 79110, 61545,
	61545, 61545, 919, 90518, 90518, 63437, -1000, 585, 90518, 90518,
	584, -1000, 90518, 90518, 3299, 61545, -37, 582, -1000, 850,
	846, 828, -1000, -1000, -1000, -1000, -1000, -1000, -170, 125,
	-1000, 2018, 74855, 17082, -1000, -1000, -1000, -1000, -1000, 931,
	-1000, -1000, 1955, 2108, 1955, 1764, 1751, -1000, 2038, -1000,
	-1000, -1000, -1000, 2368, 3013, 20481, 3088, 6028, 39805, 39805,
	318, 4447, 541, 6028, 39805, 39805, 56709, 4473, -112, 39805,
	39805, -1000, 39805, 747, 101539, 3272, 39805, 377, 375, -1000,
	-1000, -1000, 3234, -1000, -1000, -1000, 101539, 39805, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 373, -1000, 136, -1000, -1000,
	-1000, 96170, -1000, 39805, 372, 3051, -1000, 358, 355, 7691,
	5998, 98232, 97873, 97714, 353, -1000, -1000, 352, 350, 101539,
	2572, 101539, -1000, -1000, 918, 918, 1279, 1279, 1279, 1279,
	3233, 502, 1059, 445, 1269, 1269, 1269, 861, 1028, 1028,
	1269, 1269, 1269, 2613, 2266, 580, 7955, -1000, -1000, 101539,
	101539, 349, -1000, -1000, -1000, -88, 347, 4698, -1000, 2540,
	3050, 101539, -1000, 46199, 2540, 2540, -1000, -1000, 3071, 90518,
	101539, 46199, -1000, 2539, -1000, 15622, -1000, 20481, -1000, -1000,
	-1000, -1000, 3230, -1000, 50067, -1000, 579, -1000, 111, 2997,
	-1000, 826, -1000, -1000, -1000, 745, 3298, 764, 20481, 344,
	-1000, -1000, -1000, -45, 101539, 90518, 90518, 90518, 2826, -1000,
	1833, -1000, 1008, 97621, -114, -1000, 99706, 39805, 90518, -1000,
	-1000, 1746, 2320, 1054, -1000, 3023, 90518, -1000, 90518, -1000,
	-1000, 90518, 90518, 74855, 90518, 2798, -115, 101539, -46, -1000,
	825, -1000, 1301, -1000, 16597, 90518, 74855, 90518, 74855, 2795,
	-135, 20481, -1000, 3271, 3270, 2824, 3029, 3269, 90518, -1000,
	90518, 74855, 2950, -1000, -1000, -47, 577, -1000, 819, -1000,
	-1000, 815, 925, -1000, 61545, 48137, -1000, 487, -1000, 2456,
	-1000, 78158, 2064, 125, -1000, 3297, 79585, 576, -1000, 2014,
	-1000, 633, 2279, 125, 74855, -1000, -1000, 338, -53, -1000,
	1002, 20481, 74855, 2823, 2286, 804, 62495, -1000, 1294, 2352,
	-1000, -54, -1000, 566, 125, 2006, -1000, -62, 101539, -1000,
	814, -1000, -1000, -141, -1000, -1000, 331, -1000, 2948, 2947,
	-1000, 2562, 39805, 573, 567, 90518, 2943, -1000, -1000, -142,
	2291, 2291, 61545, 48137, 61545, 927, -1000, 2183, -1000, -1000,
	-1000, -1000, -1000, 20481, 1534, -1000, 551, 542, -1000, -1000,
	-1000, -1000, 3013, 6028, 6028, 39805, 39805, 39805, 6028, 4473,
	-143, -1000, 6028, 6028, -88, -1000, -1000, 100317, -1000, -1000,
	-1000, 101539, -1000, 16112, 1963, -1000, 97262, -1000, 27064, -1000,
	-1000, 39805, 39805, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 42811, 2612, 538, 56709, -1000, -1000, 330, 947, 39805,
	39805, 2656, 947, 947, -1000, -144, -1000, -1000, -1000, 3230,
	111, -1000, -1000, 3293, 20481, -1000, 61545, 543, -1000, 3292,
	-1000, -1000, -1000, -1000, -1000, 90518, -1000, 90518, -1000, 20481,
	90518, 2576, 2141, -1000, -1000, 2338, 526, 42811, 74855, 843,
	-1000, 3194, 2569, 1781, 39805, 2122, -149, -150, 2127, -1000,
	-1000, 2126, 39805, -1000, 56709, 525, 2129, 2129, -151, -157,
	-1000, -1000, 39805, 1101, 90518, 28066, -1000, 3289, 2988, -1000,
	-1000, -1000, -1000, 39805, 1099, -1000, -1000, -1000, 3268, 2129,
	20481, -1000, 2129, 2129, 3029, 1051, 2195, 2195, 61545, 48137,
	-1000, -64, 925, 3166, 1928, 2501, -1000, -1000, -1000, -1000,
	2336, -1000, -1000, 90518, 2329, 921, -1000, -158, -1000, 807,
	805, 63437, 914, 885, -1000, -1000, -1000, 487, -1000, 3265,
	521, 90518, 2070, 518, 20481, -1000, 804, 62495, -1000, 2906,
	1743, -1000, 2912, 90518, 2977, -1000, 2352, 517, -1000, 919,
	514, 511, 2225, 2225, -160, 39805, 39805, -163, 510, 919,
	-1000, -165, -1000, -1000, -1000, -1000, -65, -1000, 827, 821,
	-1000, -1000, 74855, 74855, 39805, 39805, -1000, 6028, 6028, 6028,
	-1000, 325, -1000, -1000, 2006, 3049, -1000, -77, 97092, 11124,
	6051, 42811, 56709, -168, -1000, -1000, 90518, 101539, -88, -1000,
	-1000, -1000, 345, -1000, -1000, 3288, -1000, -1000, 2324, -1000,
	-1000, -1000, 90518, 2144, -1000, 1006, 39805, 7955, 509, 39805,
	-1000, 3164, -1000, 2452, 2592, 2456, 506, -1000, -1000, -1000,
	-1000, -1000, 1000, 1792, -1000, -1000, 101539, 3029, 39805, -1000,
	-1000, 504, 503, 101539, 501, 803, 2607, -1000, -1000, -1000,
	101539, 500, 3128, -1000, -1000, -1000, -1000, 2129, 74855, -1000,
	-171, -1000, -1000, 1798, 125, 914, -1000, 1975, 2064, 499,
	-1000, -1000, 2046, 2382, -1000, 79585, 27565, 27565, 324, 3163,
	885, -1000, 3223, -1000, 3162, -1000, 39805, -1000, 74855, 39805,
	2063, 62495, -1000, 2283, -1000, 1230, -173, 90518, 1743, -1000,
	-1000, 61545, 61545, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1000, -174, -176, -1000, 61545, -1000,
	-1000, 2183, -1000, 90518, -1000, 90518, -1000, -1000, -179, -181,
	-1000, 1914, 39805, 27064, -1000, -1000, 6051, -182, -1000, -79,
	-1000, 3145, -1000, -1000, -1000, -1000, 2810, 2545, 9400, 2247,
	90518, 238, -1000, 2591, -1000, -1000, 1928, 90518, 2456, 2536,
	74855, 1005, -190, 1955, 1955, 39805, 26563, 1971, 39805, -1000,
	-1000, 3029, -1000, 2566, 3243, -1000, 2046, 74855, 90518, -1000,
	3018, -1000, 2942, -1000, -1000, -1000, 2456, 125, -1000, -1000,
	125, -191, 1002, -198, 74855, -1000, 2286, 1465, -1000, 934,
	-1000, -1000, -199, -200, 1781, 1000, 934, -205, -1000, -206,
	-208, -1000, -1000, 322, 40807, 40807, 40807, -88, -103, -1000,
	90518, 488, 2786, 924, -1000, 2050, 1721, 321, 982, -1000,
	-1000, 2569, -213, -1000, 923, 487, -1000, 39805, 1000, -216,
	-1000, 987, -221, -1000, 986, -222, -1000, 2601, -1000, -223,
	2129, 922, 3082, -1000, -1000, -1000, -1000, 478, -229, -1000,
	-1000, 2152, -1000, 1928, 921, -1000, 1000, 475, 1781, 473,
	-1000, 53390, -1000, 919, 919, 2456, 1781, -1000, 919, -1000,
	-1000, -1000, 2897, -1000, 43781, 2103, 1742, 99547, 2897, 2897,
	-1000, -1000, 90518, 3073, -1000, 2056, 2055, 1374, -1000, -1000,
	-1000, -1000, -1000, -1000, 934, -1000, 3064, 2247, 101539, 2456,
	-1000, 1955, 2498, -1000, 1955, 2598, -1000, 1950, -1000, -1000,
	-1000, 2805, 3220, 90518, -1000, 90518, 1696, 1686, 3287, 914,
	2046, 1781, 39805, 2456, 39805, -214, -1000, -1000, 1928, 2456,
	-1000, -1000, 1820, 3190, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 797, -1000, 2926, -1000, 1032, 1906, 1906, -1000,
	793, 2050, -1000, -1000, 472, -1000, 471, -1000, 1678, -1000,
	-1000, -230, -1000, -1000, 3284, -1000, 2046, -1000, 2456, -231,
	1928, -237, -1000, 934, 1928, 1738, -1000, -1000, 2002, 40306,
	39805, -1000, 3209, -1000, -1000, 2310, -1000, 39805, 2569, 39805,
	39805, 2013, 2087, -1000, -1000, 1928, 1000, 915, 1781, -1000,
	934, -1000, -1000, -1000, 101539, -1000, -1000, -1000, 101539, -1000,
	-238, -240, 51973, -1000, -1000, -1000, 915, 1781, 934, 467,
	2456, -1000, 1928, 1088, -132, 79110, 934, 2456, -1000, 1928,
	-1000, 462, -248, -1000, 1928, 915, 39805, -1000, 915, 934,
	-250, 934, -1000, 1928, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4042, 4041, 4033, 4029, 4028, 4027, 4022, 4021, 4010,
	4004, 4003, 4001, 3999, 3996, 3994, 3993, 3992, 3991, 3990,
	3989, 3985, 3984, 3983, 3982, 3981, 3980, 3976, 3966, 3965,
	3963, 3962, 3957, 3955, 3954, 3953, 3950, 3948, 3947, 3945,
	3944, 3941, 3940, 3939, 3938, 3934, 3930, 3925, 3923, 3922,
	3921, 3920, 40, 3919, 3918, 3913, 3897, 3896, 3893, 3891,
	3890, 3888, 3884, 3883, 3880, 3879, 3878, 3877, 3873, 3872,
	3867, 39, 3865, 241, 3864, 3863, 3862, 3861, 3859, 3855,
	3852, 3851, 3850, 3847, 3846, 3845, 239, 3843, 135, 3842,
	3838, 3837, 3831, 3829, 238, 3828, 3827, 3826, 3825, 245,
	3821, 3818, 3817, 3816, 3815, 3814, 3813, 3808, 3806, 62,
	132, 3805, 3804, 389, 3802, 3801, 3800, 3795, 3794, 3792,
	3791, 3790, 3789, 3788, 223, 3787, 235, 3786, 3783, 3781,
	3780, 3778, 3776, 3775, 3774, 3773, 3769, 3766, 3764, 3763,
	3762, 3758, 3756, 3755, 3754, 3752, 3751, 3750, 3747, 3746,
	3745, 3744, 3741, 3739, 3738, 3736, 3735, 3734, 243, 174,
	3733, 3731, 233, 231, 3729, 3727, 3726, 3722, 3720, 108,
	8, 21, 3718, 3716, 74, 68, 66, 85, 87, 84,
	3714, 89, 3711, 104, 45, 3710, 10, 3, 150, 215,
	9030, 201, 3705, 3702, 3698, 204, 166, 3694, 203, 3693,
	3690, 3683, 3679, 82, 59, 154, 153, 148, 146, 93,
	3673, 3671, 86, 57, 42, 32, 3670, 3669, 3667, 3258,
	110, 3666, 230, 205, 137, 3665, 3664, 3663, 1836, 3662,
	41, 3660, 272, 60, 106, 44, 100, 3659, 126, 27,
	3652, 177, 51, 3651, 151, 76, 64, 8031, 7796, 3650,
	101, 53, 92, 115, 143, 140, 171, 155, 172, 182,
	181, 156, 113, 3649, 224, 3648, 3123, 49, 136, 3647,
	3645, 3644, 67, 167, 95, 3643, 3642, 50, 6, 2,
	18, 145, 14, 102, 19, 3641, 15, 3640, 3634, 3632,
	3631, 30, 138, 3630, 244, 3629, 56, 38, 23, 3628,
	24, 183, 3627, 195, 109, 3626, 3625, 219, 175, 164,
	3622, 75, 196, 3621, 3618, 3617, 3616, 3613, 116, 26,
	111, 3610, 3608, 128, 202, 169, 3607, 47, 3605, 149,
	88, 119, 242, 105, 191, 98, 192, 160, 197, 3602,
	3601, 3600, 161, 3599, 3598, 185, 120, 3597, 3595, 178,
	246, 33, 61, 200, 58, 162, 139, 3594, 173, 3592,
	3591, 3590, 247, 163, 187, 1, 17, 80, 107, 31,
	5, 199, 129, 214, 90, 3589, 5133, 1752, 1558, 3588,
	3584, 125, 99, 55, 103, 131, 228, 54, 3581, 3580,
	2082, 3578, 3576, 3574, 3573, 159, 3572, 3571, 3570, 127,
	130, 157, 3569, 77, 71, 13, 122, 299, 232, 97,
	190, 189, 217, 3567, 168, 3566, 43, 112, 3564, 170,
	212, 3563, 3562, 72, 3561, 123, 194, 46, 121, 3558,
	188, 3557, 3556, 3555, 3553, 3552, 3549, 3544, 147, 198,
	3543, 3541, 3540, 124, 165, 3537, 227, 186, 206, 83,
	37, 3536, 79, 765, 3535, 52, 216, 63, 3533, 35,
	78, 0, 10822, 9635, 6920, 10600, 3532, 3117, 3529, 3528,
	3527, 184, 114, 3524, 3520, 3519, 91, 3518, 65, 3517,
	3516, 48, 3514, 16, 4, 9, 22, 20, 1581, 747,
	3511, 3508, 96, 117, 133, 3506, 240, 193, 3505, 3502,
	3496, 3494, 81, 3489, 28, 3485, 29, 3483, 3481, 36,
	12, 25, 3479, 3478, 208, 3477, 209, 3475, 141, 3472,
	3142, 118, 3460, 3457, 226, 69, 3455, 221, 3454, 3078,
	3454, 3452, 3451, 11, 3450, 3449, 207, 152, 179, 3448,
	142, 3447, 144, 3445, 3444, 3443, 218, 3442, 3441, 34,
	3440, 7, 3439, 3438, 180, 2946, 3437, 3434, 73, 3433,
	158,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 11, 11, 7, 7, 7, 8,
	8, 8, 8, 39, 39, 9, 9, 9, 10, 10,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 16,
	16, 28, 28, 17, 17, 30, 30, 18, 18, 31,
	31, 524, 524, 21, 33, 22, 34, 15, 525, 525,
	525, 525, 27, 23, 35, 25, 25, 25, 25, 25,
	172, 172, 172, 172, 20, 20, 29, 29, 206, 206,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 523, 523, 208, 208, 207, 202, 202, 526,
	526, 209, 209, 209, 211, 211, 13, 13, 13, 13,
	13, 13, 13, 13, 13, 427, 427, 427, 540, 540,
	540, 541, 541, 542, 542, 542, 542, 542, 112, 112,
	41, 41, 41, 41, 518, 518, 174, 174, 174, 176,
	176, 175, 175, 175, 175, 62, 62, 532, 532, 533,
	533, 531, 530, 530, 534, 534, 534, 173, 173, 173,
	108, 108, 108, 108, 109, 109, 110, 110, 177, 177,
	177, 179, 179, 178, 178, 178, 178, 178, 178, 178,
	178, 183, 95, 95, 95, 95, 95, 95, 95, 95,
	95, 90, 90, 459, 459, 460, 460, 168, 168, 169,
	169, 169, 169, 170, 170, 171, 171, 171, 55, 180,
	180, 182, 182, 181, 181, 43, 43, 43, 43, 43,
	43, 43, 44, 44, 44, 44, 44, 45, 45, 45,
	45, 45, 45, 46, 46, 46, 46, 46, 46, 53,
	53, 53, 53, 159, 159, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 543, 543, 543, 543, 543, 543,
	543, 543, 543, 543, 543, 543, 543, 543, 543, 543,
	543, 543, 543, 544, 544, 545, 545, 546, 546, 547,
	547, 547, 547, 547, 547, 547, 547, 547, 547, 547,
	547, 547, 547, 547, 547, 547, 547, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 68, 68, 293, 293, 265,
	265, 69, 69, 69, 70, 70, 71, 71, 57, 57,
	516, 516, 308, 308, 418, 418, 73, 73, 328, 328,
	74, 74, 74, 74, 74, 74, 75, 75, 75, 75,
	75, 75, 75, 76, 76, 76, 76, 76, 76, 76,
	76, 76, 76, 76, 76, 76, 76, 83, 83, 83,
	84, 84, 84, 81, 81, 81, 78, 78, 78, 77,
	77, 77, 82, 82, 82, 256, 256, 80, 80, 80,
	258, 258, 79, 79, 79, 309, 309, 85, 85, 85,
	85, 266, 86, 86, 86, 86, 86, 86, 86, 86,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 420, 420, 87, 87, 87, 388, 388,
	91, 91, 91, 343, 343, 92, 92, 92, 92, 92,
	93, 93, 93, 93, 111, 111, 111, 111, 520, 520,
	301, 301, 222, 222, 222, 222, 101, 101, 101, 101,
	102, 102, 102, 103, 103, 164, 164, 118, 118, 118,
	118, 118, 117, 117, 117, 117, 117, 117, 47, 47,
	47, 48, 48, 49, 49, 50, 50, 51, 51, 52,
	52, 52, 52, 52, 120, 120, 537, 537, 122, 119,
	119, 119, 121, 121, 121, 121, 123, 124, 124, 124,
	124, 124, 124, 124, 124, 125, 125, 452, 452, 317,
	317, 450, 450, 468, 468, 451, 451, 270, 270, 270,
	270, 270, 271, 271, 271, 458, 458, 458, 458, 458,
	458, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 165, 165, 166, 167, 167, 167, 167, 146, 146,
	146, 158, 158, 158, 158, 158, 158, 158, 149, 149,
	149, 136, 136, 127, 127, 127, 127, 127, 131, 131,
	131, 131, 131, 131, 131, 131, 128, 128, 138, 138,
	138, 138, 138, 132, 132, 133, 133, 135, 135, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 129, 129,
	129, 129, 140, 140, 140, 140, 350, 350, 350, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	157, 157, 157, 157, 157, 157, 535, 535, 536, 536,
	153, 153, 153, 153, 153, 153, 402, 402, 147, 147,
	147, 147, 152, 152, 152, 152, 333, 333, 144, 144,
	144, 145, 145, 145, 150, 150, 151, 148, 148, 154,
	154, 154, 154, 130, 130, 130, 548, 548, 548, 155,
	155, 143, 143, 156, 156, 156, 156, 156, 156, 156,
	156, 142, 142, 142, 141, 141, 141, 141, 134, 517,
	517, 514, 514, 514, 514, 514, 514, 514, 514, 515,
	515, 519, 519, 96, 96, 96, 96, 96, 104, 104,
	104, 104, 104, 97, 97, 97, 97, 97, 99, 99,
	98, 98, 98, 98, 63, 63, 63, 14, 14, 14,
	64, 64, 186, 186, 186, 187, 187, 278, 278, 278,
	278, 184, 184, 185, 185, 65, 65, 549, 549, 549,
	527, 527, 527, 528, 528, 528, 528, 528, 528, 272,
	272, 273, 273, 368, 368, 368, 368, 368, 276, 276,
	276, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	279, 279, 210, 210, 210, 282, 283, 283, 280, 280,
	281, 281, 281, 285, 285, 284, 287, 287, 286, 367,
	477, 477, 479, 479, 479, 479, 479, 479, 479, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	550, 550, 475, 475, 475, 476, 471, 471, 472, 472,
	472, 472, 472, 274, 274, 275, 275, 275, 275, 473,
	474, 299, 299, 405, 478, 478, 480, 480, 482, 551,
	551, 551, 551, 551, 551, 552, 552, 552, 366, 366,
	365, 365, 291, 291, 483, 483, 483, 483, 484, 484,
	484, 484, 484, 487, 486, 485, 485, 485, 485, 485,
	67, 67, 67, 330, 330, 329, 329, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 161, 161, 225, 225, 61, 61, 61, 12,
	12, 12, 529, 529, 529, 66, 66, 66, 66, 66,
	224, 224, 224, 224, 224, 224, 522, 522, 521, 521,
	226, 226, 554, 554, 72, 72, 72, 72, 72, 72,
	72, 421, 421, 422, 422, 60, 60, 60, 60, 60,
	351, 351, 349, 349, 348, 348, 298, 298, 404, 230,
	230, 203, 203, 203, 26, 19, 19, 24, 24, 37,
	37, 40, 40, 36, 36, 38, 38, 32, 32, 538,
	538, 539, 539, 100, 100, 105, 105, 105, 105, 105,
	106, 106, 106, 106, 107, 107, 107, 107, 116, 116,
	160, 160, 160, 160, 160, 160, 160, 42, 42, 42,
	42, 54, 54, 54, 54, 114, 556, 556, 556, 115,
	115, 115, 555, 555, 223, 223, 362, 362, 363, 363,
	557, 557, 364, 364, 364, 364, 217, 216, 218, 218,
	59, 59, 59, 212, 212, 213, 213, 214, 214, 215,
	215, 558, 558, 94, 94, 94, 163, 163, 264, 264,
	264, 358, 358, 358, 292, 292, 236, 236, 361, 361,
	359, 359, 359, 359, 327, 327, 327, 162, 162, 306,
	306, 319, 319, 320, 320, 415, 415, 321, 113, 113,
	190, 190, 188, 188, 188, 188, 188, 188, 188, 188,
	195, 195, 196, 196, 197, 197, 198, 199, 199, 199,
	199, 310, 310, 200, 200, 200, 189, 189, 189, 191,
	191, 191, 191, 191, 191, 191, 194, 194, 194, 194,
	201, 201, 201, 193, 193, 494, 494, 494, 496, 496,
	498, 498, 497, 497, 493, 493, 495, 495, 553, 553,
	332, 332, 332, 289, 290, 288, 288, 296, 296, 294,
	295, 295, 297, 297, 403, 403, 403, 204, 204, 204,
	324, 324, 324, 324, 325, 325, 354, 354, 352, 352,
	352, 352, 353, 353, 355, 355, 355, 356, 356, 357,
	357, 323, 323, 384, 384, 192, 192, 192, 303, 303,
	303, 304, 304, 374, 374, 374, 374, 374, 374, 375,
	375, 373, 373, 373, 373, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 407, 408, 408, 305, 305, 409,
	360, 360, 512, 512, 512, 513, 513, 401, 401, 410,
	410, 410, 410, 410, 410, 399, 399, 400, 400, 416,
	417, 417, 336, 336, 336, 336, 334, 334, 337, 337,
	337, 337, 335, 335, 411, 411, 411, 411, 326, 326,
	412, 412, 412, 412, 413, 369, 370, 370, 423, 423,
	423, 423, 425, 302, 302, 302, 302, 302, 470, 469,
	469, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	439, 439, 439, 439, 439, 439, 439, 439, 440, 440,
	440, 440, 440, 440, 440, 426, 426, 426, 426, 426,
	430, 430, 430, 429, 429, 429, 429, 429, 429, 429,
	429, 429, 429, 429, 431, 431, 436, 436, 437, 437,
	437, 432, 433, 438, 438, 438, 438, 559, 559, 442,
	442, 434, 434, 434, 434, 434, 434, 434, 434, 434,
	428, 428, 428, 435, 435, 435, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 345, 345, 344,
	344, 346, 346, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	378, 378, 378, 378, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 488,
	488, 488, 488, 488, 488, 488, 488, 380, 380, 491,
	491, 492, 492, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 490, 490, 490, 490,
	490, 490, 490, 490, 490, 490, 490, 490, 490, 490,
	490, 490, 490, 490, 490, 490, 490, 490, 490, 490,
	490, 490, 490, 490, 490, 490, 490, 490, 490, 490,
	490, 490, 499, 499, 500, 500, 502, 502, 503, 503,
	504, 505, 505, 505, 506, 507, 507, 501, 501, 508,
	508, 508, 508, 509, 509, 510, 510, 510, 510, 510,
	511, 511, 511, 511, 511, 390, 390, 391, 391, 397,
	397, 397, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 227, 227,
	227, 227, 227, 315, 315, 313, 313, 313, 316, 316,
	314, 314, 312, 312, 311, 311, 387, 387, 385, 385,
	389, 389, 338, 338, 441, 441, 441, 441, 441, 441,
	441, 441, 339, 339, 339, 347, 340, 340, 341, 341,
	341, 341, 341, 381, 382, 342, 342, 342, 383, 383,
	392, 396, 396, 395, 394, 394, 393, 393, 371, 371,
	372, 372, 322, 322, 560, 560, 318, 318, 414, 414,
	414, 414, 268, 268, 307, 307, 267, 267, 259, 259,
	260, 260, 260, 260, 300, 300, 398, 398, 443, 443,
	444, 444, 445, 445, 446, 446, 447, 448, 449, 386,
	386, 246, 245, 233, 234, 244, 243, 242, 232, 235,
	239, 240, 241, 237, 238, 252, 251, 250, 257, 248,
	249, 419, 231, 261, 261, 262, 262, 262, 263, 263,
	263, 263, 228, 228, 229, 229, 253, 253, 254, 255,
	255, 247, 247, 247, 219, 219, 219, 220, 220, 221,
	221, 457, 457, 454, 454, 454, 455, 455, 455, 456,
	456, 456, 456, 453, 453, 453, 453, 453, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 462, 462, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 464, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 467, 467,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 3, 1,
	1, 1, 3, 4, 6, 1, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	6, 4, 6, 6, 9, 6, 9, 6, 5, 6,
	5, 1, 1, 5, 5, 6, 6, 4, 4, 4,
	4, 3, 4, 4, 4, 7, 7, 9, 8, 9,
	5, 3, 5, 7, 4, 12, 4, 12, 1, 3,
	5, 5, 2, 5, 3, 6, 4, 6, 5, 6,
	6, 4, 8, 3, 4, 10, 3, 6, 4, 3,
	1, 3, 2, 1, 1, 3, 1, 3, 2, 2,
	0, 1, 1, 0, 2, 0, 7, 10, 8, 6,
	6, 6, 9, 4, 3, 2, 2, 0, 1, 1,
	1, 1, 3, 6, 4, 6, 7, 9, 4, 2,
	6, 8, 7, 2, 0, 1, 2, 5, 0, 1,
	3, 3, 1, 1, 3, 12, 3, 1, 0, 1,
	1, 2, 2, 1, 3, 3, 0, 5, 7, 0,
	5, 6, 8, 2, 1, 3, 1, 3, 2, 5,
	0, 1, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 6, 4, 9, 7, 12, 12, 12, 9,
	2, 7, 2, 1, 1, 1, 3, 3, 0, 3,
	1, 3, 1, 1, 3, 2, 5, 0, 6, 2,
	0, 1, 2, 3, 1, 1, 2, 1, 2, 1,
	2, 2, 3, 3, 3, 3, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 6,
	6, 6, 6, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 3, 3, 4, 3, 4, 7,
	4, 4, 4, 3, 5, 7, 3, 3, 4, 3,
	3, 3, 3, 2, 0, 1, 0, 1, 0, 3,
	3, 3, 3, 3, 6, 4, 4, 4, 3, 5,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 4, 1,
	2, 1, 2, 1, 2, 7, 3, 2, 0, 1,
	3, 3, 1, 0, 1, 2, 2, 1, 6, 5,
	1, 2, 1, 3, 2, 0, 9, 3, 2, 0,
	2, 2, 2, 2, 2, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 6, 3,
	4, 6, 3, 4, 6, 3, 5, 7, 3, 4,
	6, 3, 4, 6, 3, 1, 3, 4, 6, 3,
	1, 3, 3, 5, 3, 1, 3, 2, 2, 2,
	2, 1, 2, 2, 5, 3, 3, 6, 6, 3,
	1, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 3, 5, 7, 2, 3, 0,
	3, 5, 2, 3, 0, 2, 3, 2, 3, 2,
	6, 4, 7, 2, 6, 4, 7, 2, 1, 1,
	1, 3, 1, 1, 1, 1, 1, 2, 1, 2,
	2, 3, 2, 4, 3, 2, 2, 1, 2, 1,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 1,
	3, 5, 4, 6, 4, 3, 0, 1, 3, 2,
	4, 2, 4, 1, 6, 3, 1, 1, 5, 3,
	2, 6, 3, 3, 4, 4, 3, 1, 3, 2,
	3, 3, 1, 3, 1, 2, 1, 1, 2, 2,
	3, 1, 1, 1, 1, 1, 3, 2, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 2, 1, 3, 3, 3, 3, 2, 3,
	3, 1, 1, 1, 1, 1, 2, 2, 5, 7,
	3, 3, 3, 4, 5, 5, 5, 3, 4, 4,
	3, 4, 4, 3, 4, 4, 5, 3, 5, 5,
	5, 7, 3, 3, 3, 2, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 4, 3,
	4, 3, 3, 4, 4, 5, 0, 1, 1, 3,
	2, 4, 3, 3, 5, 3, 4, 3, 5, 3,
	3, 4, 4, 5, 3, 3, 1, 1, 0, 2,
	5, 4, 6, 4, 6, 4, 1, 0, 3, 4,
	4, 5, 7, 5, 3, 3, 2, 0, 4, 2,
	3, 4, 2, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 3, 3, 4, 3, 1, 1, 1, 2,
	3, 2, 3, 6, 6, 7, 9, 7, 9, 3,
	4, 10, 10, 3, 5, 5, 5, 3, 5, 2,
	0, 1, 1, 1, 1, 3, 2, 2, 2, 2,
	1, 2, 0, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 6, 3, 6, 6, 3,
	11, 14, 1, 2, 3, 0, 4, 0, 4, 5,
	4, 3, 3, 1, 3, 10, 13, 0, 2, 3,
	1, 1, 0, 1, 2, 2, 2, 2, 1, 1,
	0, 1, 3, 1, 1, 1, 1, 3, 3, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	8, 0, 1, 1, 0, 2, 1, 0, 1, 0,
	9, 9, 3, 1, 3, 7, 1, 3, 11, 3,
	2, 0, 3, 1, 2, 2, 3, 2, 6, 2,
	1, 1, 2, 8, 4, 2, 5, 5, 5, 2,
	1, 3, 10, 11, 7, 5, 3, 1, 5, 9,
	7, 11, 3, 3, 0, 2, 4, 3, 3, 1,
	5, 1, 3, 1, 2, 0, 1, 2, 2, 0,
	1, 3, 3, 2, 2, 1, 1, 1, 4, 0,
	6, 0, 3, 0, 2, 2, 2, 0, 1, 1,
	2, 2, 0, 3, 3, 2, 1, 1, 2, 2,
	5, 8, 4, 1, 0, 1, 2, 2, 1, 2,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 1, 4, 2, 2, 2, 4, 7, 3, 4,
	6, 3, 1, 1, 1, 8, 10, 11, 7, 5,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 3, 0, 1, 8, 3, 6, 6, 5, 3,
	4, 1, 0, 1, 3, 17, 20, 16, 19, 4,
	2, 0, 1, 0, 1, 0, 1, 3, 3, 2,
	0, 1, 1, 0, 6, 6, 8, 6, 8, 6,
	8, 6, 8, 6, 8, 6, 8, 6, 8, 1,
	0, 2, 0, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 3, 2, 3,
	2, 2, 2, 2, 2, 2, 1, 1, 0, 2,
	4, 2, 1, 0, 2, 1, 1, 0, 1, 3,
	1, 0, 1, 1, 1, 1, 2, 3, 2, 2,
	8, 11, 3, 3, 0, 3, 0, 3, 0, 3,
	0, 1, 0, 6, 7, 3, 6, 3, 1, 3,
	1, 1, 4, 2, 1, 3, 1, 3, 8, 5,
	3, 4, 3, 0, 2, 2, 0, 10, 3, 2,
	0, 1, 3, 1, 1, 3, 3, 5, 1, 1,
	3, 3, 1, 2, 4, 4, 2, 3, 5, 5,
	1, 3, 1, 0, 1, 2, 3, 2, 4, 2,
	3, 0, 2, 0, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 8, 8, 8, 2,
	4, 4, 4, 2, 2, 2, 2, 3, 1, 3,
	1, 2, 6, 7, 1, 0, 1, 0, 1, 0,
	1, 1, 0, 1, 5, 1, 0, 1, 0, 3,
	3, 5, 1, 3, 3, 4, 5, 2, 2, 0,
	2, 2, 1, 1, 1, 0, 1, 0, 2, 2,
	5, 4, 2, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 2, 0, 4, 2, 5, 3, 2,
	0, 1, 3, 3, 5, 1, 1, 1, 1, 1,
	3, 2, 4, 4, 0, 4, 4, 3, 4, 1,
	5, 3, 4, 5, 5, 1, 5, 1, 3, 2,
	0, 3, 0, 2, 3, 1, 3, 2, 0, 3,
	5, 6, 4, 6, 4, 3, 2, 1, 0, 5,
	1, 0, 2, 2, 2, 1, 1, 0, 1, 1,
	1, 0, 4, 2, 1, 2, 2, 4, 1, 3,
	1, 2, 3, 2, 2, 2, 1, 0, 2, 5,
	7, 2, 1, 2, 4, 3, 5, 0, 1, 3,
	5, 1, 2, 1, 1, 1, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 6, 6, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 3, 0, 5, 4, 1, 2,
	1, 4, 1, 1, 2, 1, 1, 1, 1, 1,
	0, 1, 2, 5, 1, 4, 2, 5, 1, 4,
	3, 3, 0, 1, 2, 4, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 1,
	0, 1, 4, 1, 3, 3, 3, 5, 2, 2,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	5, 4, 6, 3, 5, 4, 6, 4, 6, 5,
	7, 3, 3, 3, 3, 3, 4, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 1,
	3, 1, 3, 3, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 5, 6, 6, 7,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 6,
	1, 1, 1, 1, 1, 1, 2, 1, 5, 5,
	6, 3, 1, 1, 1, 2, 2, 2, 4, 3,
	5, 6, 8, 6, 5, 4, 3, 2, 2, 4,
	1, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 6, 6, 8, 8, 6,
	4, 6, 6, 6, 4, 1, 3, 3, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 4, 3, 4, 3, 4, 3,
	4, 4, 3, 6, 5, 5, 5, 4, 4, 3,
	4, 3, 5, 0, 5, 0, 2, 0, 1, 3,
	3, 2, 2, 0, 6, 1, 0, 3, 0, 3,
	3, 3, 0, 1, 4, 2, 2, 2, 2, 2,
	3, 2, 2, 3, 0, 4, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 1, 2, 3, 2, 3,
	2, 3, 1, 0, 1, 3, 1, 3, 3, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 1, 2, 3, 0, 3, 3,
	2, 2, 1, 2, 2, 3, 2, 1, 1, 1,
	5, 1, 2, 4, 2, 0, 1, 0, 3, 5,
	1, 0, 1, 2, 1, 0, 1, 3, 3, 2,
	1, 1, 1, 3, 1, 3, 3, 1, 1, 1,
	1, 5, 3, 1, 1, 3, 1, 1, 1, 1,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 7, 1, 7,
	5, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 515, -88, -85, -55, -53, -91, -92,
	-74, -93, -87, -111, -116, -100, -112, -118, -160, -165,
	-166, -167, -3, -41, -43, -56, -73, -75, -86, -95,
	-94, -96, -101, -108, -104, -90, -47, -113, -117, -126,
	-161, -162, -163, 31, 30, 92, 76, 141, 116, 124,
	179, 328, 364, 375, 356, 345, -121, -122, 392, -42,
	-54, -115, -114, 69, 117, 351, -4, -12, 28, 44,
	-44, -45, -46, 59, -61, -58, -68, -62, -543, 94,
	-495, -76, -79, -107, -547, 129, 148, 197, -97, -98,
	317, -102, -103, 358, -105, -106, 360, 149, -49, -48,
	143, -188, -190, -119, -120, -164, -127, -128, -129, -130,
	-131, -132, -133, -134, -135, -136, -137, -138, -139, -157,
	-140, -141, -142, -143, -148, -144, -145, -146, -147, -149,
	-150, -152, -153, -154, -155, -156, 396, -151, 450, 46,
	410, 78, 133, 368, 21, -5, -6, -7, -8, -9,
	-10, -11, -14, -13, -57, -59, -60, -63, -64, -65,
	-72, -66, -67, -494, -77, -78, -81, -83, -84, -80,
	-82, 357, -191, -189, 512, 464, -16, -21, -22, -17,
	-18, -20, -23, -19, -24, -28, -33, -34, -30, -31,
	-29, -32, -35, -36, -37, -38, -39, -40, -26, -27,
	-15, -25, 482, 490, -194, -192, -193, -201, 384, 472,
	426, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, -266, 2, -248, -253, -254, -255, -247, -219, -464,
	-467, 4, -461, -465, 154, 206, 282, 21, 22, 23,
	24, 25, 26, 28, 29, 40, 41, 43, 42, 44,
	45, 46, 50, 52, 56, 57, 58, 59, 60, 64,
	69, 70, 75, 76, 77, 78, 79, 80, 81, 87,
	84, 85, 86, 89, 91, 92, 93, 95, 97, 98,
	106, 107, 108, 109, 111, 116, 117, 120, 115, 119,
	122, 123, 124, 127, 128, 129, 131, 132, 134, 135,
	136, 138, 139, 141, 142, 143, 146, 144, 433, 145,
	147, 148, 149, 150, 160, 161, 162, 167, 169, 173,
	174, 177, 178, 180, 184, 186, 187, 188, 189, 190,
	196, 197, 199, 200, 201, 202, 207, 208, 212, 209,
	218, 219, 223, 224, 225, 227, 231, 232, 233, 234,
	235, 236, 238, 240, 239, 242, 245, 246, 249, 250,
	251, 254, 255, 256, 257, 259, 260, 263, 261, 264,
	262, 266, 267, 268, 265, 271, 269, 273, 274, 275,
	280, 278, 276, 277, 284, 287, 194, 289, 290, 293,
	311, 297, 298, 299, 302, 303, 306, 309, 310, 312,
	313, 314, 315, 316, 317, 318, 319, 321, 322, 326,
	328, 329, 331, 333, 334, 335, 336, 337, 338, 339,
	342, 341, 343, 345, 351, 356, 353, 354, 355, 357,
	358, 359, 360, 362, 363, 364, 366, 367, 368, 369,
	371, 373, 374, 377, 378, 393, 394, 412, 375, 376,
	379, 380, 381, 382, 383, 387, 385, 386, 388, 389,
	390, 392, 395, 396, 398, 399, 400, 401, 402, 403,
	406, 408, 409, 410, 411, 413, 416, 417, 418, 419,
	414, 425, 422, 423, 427, 428, 429, 430, 431, 432,
	434, 436, 444, 445, 447, 450, 451, 452, 442, 454,
	455, 458, 459, 460, 463, 461, 462, 464, 466, 469,
	470, 471, 477, 476, 483, 484, 486, 487, 488, 35,
	47, 48, 51, 53, 55, 65, 66, 67, 71, 112,
	113, 140, 151, 152, 163, 175, 176, 181, 183, 191,
	192, 193, 213, 214, 216, 221, 243, 286, 288, 304,
	308, 323, 324, 325, 327, 340, 370, 404, 415, 420,
	437, 438, 439, 440, 446, 448, 472, 473, 474, 478,
	485, -266, 2, -248, 295, -241, 2, -219, -219, 328,
	27, 2, 27, 322, 386, 428, 430, 2, -520, -301,
	2, 27, -222, -219, 94, 179, 384, -241, 2, -520,
	-301, 24, 2, -219, 2, -223, 2, 375, -219, 260,
	2, 515, 89, 251, 70, 370, 389, -124, 445, -123,
	437, 379, -125, -452, 2, 271, -219, 515, 515, 515,
	27, -231, -219, 426, 206, 108, 423, 515, 2, 426,
	314, 476, 385, 108, 337, 206, 452, 379, -529, 366,
	182, 465, -518, 2, -514, 4, -465, -461, -260, -259,
	426, 431, 108, -255, -247, 505, -254, 515, 515, 515,
	2, 224, 225, 336, 335, 389, 390, 515, 515, 515,
	377, 2, 26, 62, 88, 91, 114, 150, 170, 173,
	300, -544, 311, 334, 388, 425, 434, 447, -528, 411,
	64, 379, -527, -529, 260, 452, 127, -348, 108, 251,
	178, 459, 430, 428, 457, 120, 212, 462, 461, 515,
	515, 26, 62, 73, 91, 127, 150, 170, 173, -546,
	311, 334, 373, 388, 425, 434, 447, 2, 476, 385,
	426, 206, 108, 452, 379, -529, 377, 378, 332, -88,
	2, 512, 31, 30, 392, -183, 426, 217, 2, -219,
	515, 515, 2, 224, 225, 377, 378, 515, 515, 171,
	-514, 2, 515, 515, 2, 224, 225, 377, 378, 217,
	2, 64, 381, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 2, -158, 389, 411, 188, 44, 70,
	27, 333, 75, 315, 109, 135, 180, 206, 207, 232,
	88, 89, -350, 43, 225, 224, 378, -535, 377, -402,
	427, 380, 386, 422, 236, 375, 445, 94, 466, 367,
	488, 337, 338, 144, 4, 108, 271, 391, 437, 251,
	374, 318, 80, 515, -553, 2, 426, -555, 2, 445,
	445, 2, -555, 2, -555, 2, -555, 2, -556, 445,
	485, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, -189, -191,
	-190, 515, 515, 515, 515, 515, 515, 515, -158, 389,
	2, 70, 27, -294, -296, 456, 215, 137, 301, -188,
	-190, 2, -494, -450, 2, -376, -468, -378, 503, 504,
	496, 424, 63, 281, 489, -390, 114, 457, 295, -467,
	-379, -392, 140, 370, -316, 8, 9, 5, 6, 7,
	-228, -380, -386, 449, 153, 285, -263, 516, 10, 512,
	-491, -190, -391, 36, 183, 61, -454, -262, -229, -426,
	216, -261, -247, -488, -489, 4, -461, -462, -455, -429,
	-437, -433, -434, -440, -219, -464, 73, 100, 101, 99,
	104, 103, 253, 252, 105, 102, 391, 465, 62, 35,
	191, 192, 221, 286, 193, 71, -490, 128, -463, 213,
	214, 404, 48, 340, 163, 113, 112, 288, 53, 51,
	473, -438, 110, 437, 438, 439, 440, 175, 176, 55,
	151, 152, 308, 325, 420, 446, 448, 181, 243, 96,
	172, 211, 195, 220, 222, 226, 244, 247, 272, 279,
	283, 305, 307, 365, 397, -559, 474, 415, 65, 66,
	-496, 341, -497, -241, -496, 515, 515, 517, 515, -288,
	-289, -290, 2, 27, 125, 512, 2, -406, 2, -407,
	-411, -190, 237, -410, 512, -408, 510, -248, 296, -492,
	371, -488, -489, -228, -247, -262, 4, -461, -463, 514,
	-291, 512, 108, 426, 74, 206, -343, 512, -219, 27,
	295, 441, 517, -388, 512, 295, 171, 298, -219, 476,
	2, 2, 393, 2, 512, -124, 67, 445, 42, 389,
	-363, 2, -364, -216, -217, -218, -416, 223, 331, 339,
	491, 488, -450, -537, 171, 495, 441, -450, -317, 514,
	2, 2, 2, 2, 2, -411, 191, -248, 2, -245,
	-453, 4, -461, -465, -462, -466, -464, 27, 30, 31,
	32, 34, 36, 37, 38, 39, 54, 61, 62, 68,
	72, 74, 83, 88, 94, 99, 100, 102, 101, 103,
	104, 105, 114, 118, 121, 125, 126, 130, 133, 137,
	153, 155, 168, 170, 171, 179, 182, 185, 198, 210,
	215, 217, 237, 241, 248, 252, 253, 281, 285, 291,
	295, 296, 300, 301, 320, 330, 344, 361, 384, 391,
	407, 421, 426, 435, 441, 443, 449, 456, 457, 465,
	467, 475, 479, 480, 481, 482, -467, 73, 2, -411,
	191, 2, -250, 191, -411, -253, 2, -232, -219, 2,
	-244, -453, 2, -267, 191, -248, -249, -253, -251, 2,
	-253, -257, 2, -219, -459, 191, 2, -457, 10, -456,
	5, 4, -461, -465, -462, 217, 441, 517, -307, -259,
	-260, -449, 8, -300, -219, 514, -376, 2, -113, -99,
	2, 168, -376, 191, 2, -113, 191, 2, -376, 191,
	2, -113, 191, 2, -532, 2, -459, 2, 2, 447,
	2, 91, 191, -219, 426, 107, 2, 355, -545, 373,
	451, 2, 2, 2, 2, 2, 2, 426, -237, 2,
	-219, 168, -257, 191, 2, 385, -554, 341, -459, 191,
	2, 476, -251, 2, -251, 206, 219, -232, 191, 2,
	430, 428, 430, 428, 171, 2, 217, 2, 217, 2,
	-412, 2, -413, -407, -248, 510, 2, 2, 2, 2,
	2, 191, -219, 426, 107, 2, 235, 2, 2, 2,
	2, 2, 2, 2, -309, 191, 2, -248, -309, 191,
	2, -309, 191, 2, -349, 2, 83, -232, 191, 2,
	-256, 191, 2, -251, -258, 191, 2, -257, -460, 191,
	2, -459, -376, 2, -113, 2, -420, 2, -419, -456,
	472, -88, 512, -88, 512, 389, 512, -459, -248, -248,
	-376, 2, -113, -99, 2, -376, 2, -113, 2, -110,
	-109, -459, 512, 171, -376, 2, -113, -99, 2, -376,
	2, -113, 2, -183, 168, 2, 108, 426, -158, 2,
	168, 467, 2, 8, 2, -459, 380, 338, 160, 2,
	393, 2, 394, 70, -350, 488, 70, 171, 2, 171,
	2, -333, 2, 482, 2, -517, 2, 295, 171, 2,
	171, 2, 171, 2, 171, 2, 171, 2, 335, 390,
	225, 2, -113, 479, -99, -376, 479, 2, -536, 168,
	378, -376, 2, 444, 234, 145, 171, -333, 2, 171,
	2, 171, 2, 5, 2, 336, 412, 2, 223, 331,
	412, 2, -248, -548, 2, 426, 476, 385, 2, 2,
	84, 85, 171, 2, 171, 2, 171, 488, 2, -326,
	-411, -362, -363, -362, 441, -294, -296, -158, 393, 2,
	-195, -324, -197, 168, -352, -353, -198, 248, 155, 291,
	-199, -332, 27, 125, -332, -332, 57, 513, 513, 11,
	12, 72, 40, 503, 504, 505, 506, 166, 507, 508,
	501, 502, 500, 493, 494, 498, 229, 230, 90, 497,
	495, 82, 258, 372, 156, 157, 158, 159, 352, 204,
	33, 205, 14, 15, 16, 32, 300, 247, 489, 195,
	397, 496, 17, 18, 19, 220, 222, 283, 47, 198,
	-227, -269, -376, -376, -376, -376, -376, -376, -376, 307,
	512, -322, -371, 510, -190, 512, 512, 512, -449, -190,
	-376, -390, 513, -314, 512, -190, -390, -385, 512, 370,
	510, 512, -393, -376, 5, 5, 5, 512, 514, -499,
	483, 168, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 327, -431, 512,
	-430, 512, -430, -430, 477, -428, 512, 490, 484, 512,
	-428, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 477, 517, -496, -291, 512, -318,
	-414, -376, 505, -318, -318, 295, -311, -376, 96, -336,
	226, 272, 172, 244, 365, 211, -373, 516, -373, -401,
	490, -190, -408, -247, -190, -410, 512, -406, -401, -89,
	-449, -73, -86, -94, -113, -126, -162, -163, 505, -248,
	512, 171, 512, 514, -453, 171, -300, -232, -248, -261,
	-262, -267, 124, -311, -514, -300, -222, 37, -387, -423,
	-424, -470, 516, -469, -426, -436, -432, -435, 323, 324,
	-455, 51, 473, -438, 216, 4, -461, -463, 213, 214,
	404, 48, 340, 163, 113, 112, 288, 53, 437, 438,
	439, 440, 175, 176, 55, 474, 415, 65, 66, -514,
	-300, 168, -252, -248, -452, -311, 37, -363, 2, 114,
	-457, 42, -557, 517, 246, -271, 257, 280, 187, 296,
	486, 289, -458, 5, 4, -386, -398, 114, 251, 216,
	-443, -445, 8, -444, 9, -446, 503, 504, -451, -450,
	98, 514, -453, -206, 353, 392, -205, 23, 28, 129,
	470, 146, -281, 208, 314, 140, 408, 460, -524, -525,
	376, 432, 433, 86, 289, 392, 353, 140, -329, -331,
	37, 106, 275, 309, 58, 201, 262, 263, 410, 478,
	140, 392, 353, -525, 353, -525, -208, 408, 460, -524,
	-525, 376, 353, -207, -281, 140, 516, 23, 353, 392,
	310, -541, -542, 129, 28, 353, 310, -521, -493, 482,
	140, -109, 238, -109, -307, 517, 517, -453, 505, 378,
	377, 140, 140, 140, 140, 168, 2, 2, 281, 2,
	2, 2, 173, -527, -546, 2, 2, -248, 191, -293,
	295, -516, -308, 426, -248, 281, -250, 191, 2, -253,
	476, -521, 281, -252, 37, 512, 2, -349, 2, 206,
	-493, 281, -412, -264, -248, -407, -264, 392, -241, 37,
	-373, -373, 140, 2, 2, 2, -219, -209, 517, 60,
	359, 140, -209, 140, -209, 140, -268, 191, -267, -209,
	140, -209, 517, 140, -209, 517, 140, 517, 140, 513,
	517, -420, -420, -459, -171, 482, 171, 94, 512, 512,
	-183, -417, 517, -416, -460, -110, -459, -459, -516, -232,
	2, -248, 2, 426, 227, -171, -459, -459, -459, -452,
	27, 394, 2, 335, 390, 85, 394, 2, -248, 426,
	108, 206, 76, -519, 168, -515, 366, -514, -248, 108,
	-248, 108, -248, 108, -248, -248, 2, 2, 2, 2,
	81, 81, 2, 44, -536, 168, 2, 444, 2, 444,
	2, -219, -219, -219, 411, 246, -248, 168, 426, 206,
	426, 206, 108, 426, -209, 517, -223, -195, -324, -452,
	-325, -324, -196, -195, -198, 168, 339, 461, 275, 395,
	231, -353, -352, 27, -376, -357, 162, 274, -376, -355,
	-378, 503, 504, -444, -446, -310, 289, -189, -189, -189,
	-297, -403, -376, 330, 206, -425, -423, -423, -246, -453,
	437, -376, -376, -376, -376, -376, -376, -376, -376, -376,
	-376, -376, -376, -376, -376, -376, -376, -376, -376, -376,
	-376, -376, -376, -376, -376, -376, -376, -376, -376, -376,
	-376, -376, -376, -376, -376, -376, 247, 195, 397, 47,
	198, -376, 441, -376, -376, -376, -376, 269, 281, 285,
	449, 153, 458, 125, 289, -560, 421, 39, -383, -190,
	-315, 512, -397, 34, 407, 27, -390, 512, 2, -371,
	-376, -372, -312, -311, -311, 513, 475, 27, 125, 505,
	2, 513, 517, 37, 513, -376, -312, -389, -385, -311,
	-396, -395, 479, -344, -345, 487, 265, 111, 189, 264,
	-346, 383, -447, 8, -453, 505, -500, 161, 182, 512,
	513, 2, 513, 2, 513, -376, 2, 513, -376, 2,
	513, -376, 2, 513, -376, 2, 513, 2, -376, -376,
	-376, -376, -376, -376, -376, -311, 8, -447, -447, 437,
	437, -447, -447, -447, -439, 323, 249, 324, 177, 268,
	266, 267, 176, -439, -338, 2, -441, -311, 4, 487,
	265, 111, 189, 264, 383, 5, -338, 2, -339, 2,
	-376, -311, -340, -377, -378, 503, 504, 496, -390, -341,
	2, -376, -312, -376, 54, 241, 443, -342, -376, 171,
	-311, -311, 2, -311, 2, -497, 37, -311, -303, 517,
	171, 37, 4, -303, -303, 512, 513, 517, -337, 186,
	261, 256, -337, -406, -336, 226, -334, 305, -334, -334,
	-401, -233, 510, 518, -453, -401, -400, -399, 37, -241,
	302, -401, -401, 514, 513, -400, 511, -512, 512, 515,
	515, 515, 515, 515, -248, 512, -311, -453, 514, 413,
	513, 220, 220, 220, 220, 371, 513, 441, 482, -88,
	297, 513, 517, -302, 36, 510, 514, -447, 2, 2,
	-442, 477, 512, 512, -345, 512, 171, -301, -537, 513,
	445, -364, -270, 339, 406, 354, 387, 423, 8, 9,
	8, 9, 517, -453, 517, -538, 88, 441, 74, 379,
	-367, 191, 74, -471, -235, 88, -472, -219, 68, 457,
	330, 170, 138, -538, 88, 330, -538, 88, 88, 392,
	411, 57, -411, 40, 40, 27, -113, 242, 171, 488,
	426, 206, 379, 441, -411, -331, -423, 106, 262, 263,
	57, -448, -443, 503, 504, -448, 57, -448, -448, -448,
	482, -250, -411, 379, 441, 441, 517, 40, 40, 27,
	-113, 242, 171, 441, -267, -233, 471, 41, 471, 441,
	41, 379, 441, 517, 41, 41, 441, 441, -522, -224,
	95, 276, 255, 277, -225, -226, 316, 469, -459, -417,
	198, -417, -259, -219, 514, -113, -376, -376, -113, -376,
	-113, 44, 140, 2, -554, 235, 512, -274, 281, 171,
	-300, -418, 217, 517, -308, 140, -330, -329, 281, -252,
	191, 2, 140, -291, 134, 512, 337, 2, -234, 191,
	-220, -219, -349, -212, 429, 140, -328, 467, -358, -113,
	512, 114, 37, -358, -319, -320, -415, -321, -235, 512,
	-241, -219, 2, -248, -309, -309, -309, -209, 517, 140,
	-232, -251, -256, -257, -258, -459, -460, -88, -419, 513,
	513, 513, -170, 299, -169, -219, 5, -183, 467, -273,
	-368, -367, -475, -476, -471, 247, 206, 457, 219, 154,
	-292, -236, -235, 107, -177, 482, -109, 513, -417, 198,
	-171, -171, -417, -417, -248, 168, -171, -171, -171, 2,
	2, -333, -248, -232, -267, -248, -300, -300, -333, -232,
	-333, -232, -333, -232, -113, -376, 2, 389, 168, 168,
	514, -333, 337, 108, 426, 314, 206, -248, -267, -248,
	-267, -232, -248, -411, -325, -196, 296, 231, 395, -355,
	-356, -378, 370, 371, -356, 370, 371, 8, 9, 8,
	9, -200, 399, 284, -309, 517, -203, 38, 121, 231,
	-248, 488, 136, -376, -376, 441, -560, 421, -383, 136,
	-376, 269, 285, 449, 153, 458, 125, 289, 171, 512,
	-377, -377, 513, -313, -376, -376, 511, 520, 513, -296,
	517, -294, -376, -311, -311, 513, 514, -311, -300, 511,
	511, 517, 513, -394, -395, 130, -376, 441, 441, 441,
	441, 512, 513, 514, -505, 306, 512, 512, -376, 513,
	513, 513, 513, 37, 517, 517, 517, 513, 517, 517,
	517, 513, 513, 513, 517, 513, 488, 488, 513, 513,
	513, 513, 517, 513, 517, 513, 171, 513, 513, -347,
	320, 513, 11, 12, 503, 504, 505, 506, 166, 507,
	508, 501, 502, 500, 493, 494, 495, 82, 258, 372,
	14, 15, 16, 220, 198, -377, -377, -377, 513, -381,
	-382, 171, 168, 37, -342, -342, -342, 513, 171, -311,
	513, 513, 512, -498, 260, 281, 513, -370, -369, 480,
	-414, -304, 2, -406, -243, -453, -370, -370, -311, -376,
	226, 226, -335, 467, 295, -337, -406, -400, -449, -375,
	-374, 169, 38, 121, 278, 194, -400, -241, -291, -400,
	-400, -453, -401, -401, -399, 513, -513, -449, 513, -305,
	-409, -492, -296, 514, -453, -180, -493, -159, 5, 285,
	-159, -159, -159, -300, 24, 321, -423, 510, 511, 8,
	-453, 512, -447, -447, -447, -300, 171, -450, -363, 455,
	79, 339, 437, -450, -205, 353, -235, -235, -248, -257,
	281, -367, 191, -211, 281, -423, -242, -219, 512, 512,
	231, 231, 467, -235, -242, 231, 191, -235, 191, -242,
	-242, -523, 339, 290, -376, 250, 337, 282, -206, 353,
	392, -113, -113, -113, 512, -537, 467, 124, -248, -267,
	-248, -257, -252, 392, 353, 279, -261, -448, -448, -329,
	392, 353, -257, -250, -232, -207, -113, -113, -113, 512,
	-233, -208, 353, 5, 191, -235, 5, -219, -235, -257,
	-540, -457, 105, 391, -542, 23, -235, 191, -235, -257,
	-540, -224, -459, 285, 463, -521, -174, 482, -109, -168,
	202, 505, -518, -219, 476, -219, -272, -275, -273, -235,
	-186, -187, 484, 482, 140, -265, -248, 510, -171, -459,
	-248, -257, 140, -291, 281, -459, 37, 512, 2, 2,
	295, 281, -234, 191, -213, 131, -558, 495, -232, -370,
	-304, -327, -361, 361, 295, -292, 472, -241, -327, -306,
	517, 171, 495, 514, -292, 2, -209, -209, -209, -267,
	-268, -209, -209, -209, -88, -88, -171, 517, 512, 495,
	495, 512, -459, -459, 513, 517, -248, -234, 206, 206,
	-240, -220, 513, 517, 514, 512, -179, 299, -178, 132,
	233, 218, 400, 401, 402, 403, 123, -177, -110, 171,
	-50, 482, 426, 516, -333, -333, -333, 389, 389, -219,
	-244, -232, -248, -245, -267, 168, 168, 461, -356, 296,
	254, -403, -204, 287, -248, 516, -376, -376, 136, 136,
	-376, -377, -377, -376, 136, 171, 512, -376, -387, 32,
	32, 513, 517, -372, -376, 513, 475, -296, -296, 513,
	505, -453, 516, 513, -385, 133, -376, 435, 265, 189,
	264, -346, 264, -346, -346, -447, 5, -453, 505, -506,
	-238, 512, -219, 480, -295, 301, 513, -425, -423, -376,
	-376, -376, -376, -376, -447, -428, -428, -443, -443, -376,
	-381, -376, -425, -423, -377, -377, -377, -377, -377, -377,
	-377, -377, -377, -377, -377, -377, -377, -377, -377, -377,
	-377, -377, -377, 125, 281, 289, -377, -382, -381, -376,
	-376, -423, 513, 513, 513, -311, -88, 512, 260, -323,
	182, -376, -417, 517, -323, -323, 513, -406, -406, 512,
	-376, 226, 511, 517, 519, 495, -291, 514, -399, -400,
	511, 513, 517, 513, 517, -360, 37, 513, -453, -182,
	-181, 122, 50, 298, 5, 8, 510, 511, 514, -447,
	513, 513, 513, -300, -376, 441, 441, 140, 281, 469,
	-477, -472, 138, -376, -298, -404, -376, 512, 512, 2,
	-202, 129, 392, -539, 2, 467, 140, -209, 140, -209,
	486, 512, 512, 441, 379, 482, -311, -376, -172, 114,
	-452, -525, 516, -525, 516, 379, 441, 379, 441, 482,
	-311, 441, -427, 45, 25, 281, -251, 441, 441, -209,
	140, 452, 392, -459, 285, -176, 299, -175, 132, 363,
	123, 233, -417, -174, 171, 217, 2, -252, 2, 513,
	513, 517, -478, 37, 293, 293, 512, -248, -69, 482,
	-416, -449, -250, 37, 140, -521, -113, -421, -422, 5,
	-248, 140, 295, 281, -214, 240, -558, -457, -493, -296,
	-327, -318, 282, 87, 513, -370, -320, -304, -376, 2,
	513, -209, -169, -170, -459, -459, -459, -171, -183, -183,
	-368, -276, 512, -234, -220, 512, -183, -236, 2, -460,
	517, 512, 495, 495, 495, -417, -113, 299, -248, 505,
	-333, -283, -282, 314, 289, -283, 370, 370, 296, 162,
	236, -203, -233, -376, -376, 136, 32, 32, -376, -376,
	-387, 513, -376, -376, -311, 511, 5, -376, 513, 513,
	8, -376, 513, 514, -507, -219, -376, 513, 57, 513,
	513, 517, 517, 513, 513, 513, 513, 513, 513, 513,
	-382, 171, 125, 289, 512, 513, 513, -88, -384, 185,
	57, -406, -384, -384, -335, -300, -406, -374, -233, 510,
	-453, -449, -409, 512, 514, -181, 495, 511, 2, 510,
	-453, 513, -235, -235, -367, 140, -479, 88, -481, 72,
	154, 94, 281, 285, 457, 330, 68, 114, 344, -550,
	37, 492, 513, 513, 517, -203, -298, -300, 281, 418,
	114, 281, 114, 107, 452, 75, -235, -242, -300, -300,
	-248, -257, 147, 513, 517, 495, 2, 505, 505, -257,
	-252, -257, -250, 147, 513, -233, 5, 5, 140, -230,
	72, 5, -235, -235, -251, 107, 517, 512, 495, 495,
	-174, -460, -109, -291, -279, 209, -235, -476, -473, -474,
	330, -480, -482, 154, 330, -113, 2, -185, -184, -219,
	5, 512, -274, 299, 511, -330, -113, -252, 513, 517,
	-351, 467, -233, -248, 140, -215, 239, -558, -457, -212,
	-354, -352, -359, 512, 295, -113, -296, 495, 513, 513,
	107, 107, 200, 139, -298, 512, 512, -300, 107, 513,
	-178, -179, -459, -109, -459, -177, -51, -52, 206, 88,
	319, -245, 426, 206, 512, 512, -203, -376, -376, -376,
	513, -296, -453, 505, -501, 314, 513, -403, -376, -376,
	-377, 171, 512, -387, 513, -502, 481, -376, -311, -502,
	-502, 513, -449, 2, -459, 510, 2, -367, -242, -246,
	-239, -219, 154, 191, 285, 231, 512, -377, -248, 512,
	2, 29, -551, 118, 210, -366, -552, 93, 419, 199,
	-404, -204, 513, 513, 285, 285, -376, -423, 512, -209,
	-209, 513, 513, -376, 441, -452, 92, -450, 2, -525,
	-376, 441, 5, -209, -246, -209, -209, -230, 452, -175,
	-176, -459, -109, -174, 37, -280, -281, 198, -478, 231,
	-239, 231, -549, 482, 513, 517, 495, 495, -272, -186,
	-70, -71, 442, -416, -291, 5, 512, -219, 295, 512,
	-233, -558, -457, -213, -327, 126, -300, 88, -354, -383,
	-171, 512, 512, -277, 77, 89, 115, 190, 174, 207,
	411, 416, 27, -277, 513, -298, -298, 513, 512, -171,
	513, 517, 27, 512, 27, 512, -248, -267, -311, -311,
	513, -296, 57, 517, 513, 513, -377, -387, 513, -503,
	-504, -238, 511, 2, -481, -239, 281, 467, -376, -221,
	512, -376, 37, 210, 119, 196, -279, 512, -365, 467,
	344, -230, -298, 512, 512, 512, 495, 171, 512, -427,
	-209, -251, 513, -531, 342, -113, -186, 312, 512, -278,
	295, 107, 275, -184, -450, -450, 513, 37, -71, 9,
	37, -298, -248, -298, 295, -457, -214, 461, 282, 513,
	-242, -327, -460, -460, -365, 513, 513, -460, -52, -300,
	-300, 513, 513, -508, 337, 371, 184, -311, -297, 513,
	517, 37, 140, 186, 513, -483, 259, -219, 513, 119,
	196, -280, -300, -279, 186, -248, -526, 467, 513, -285,
	-284, -282, -287, -286, -282, -311, -450, 92, 312, -311,
	-230, -534, 172, -533, 5, 10, -278, -248, -299, -405,
	-235, 78, 107, -279, -113, -113, 513, -351, 513, -248,
	-215, 392, -369, 513, 513, -366, -365, -370, 513, 513,
	513, 513, -509, -510, 47, 454, 98, -376, -509, -509,
	-504, -506, 154, 482, -484, -487, -486, 295, 398, 172,
	313, 513, 418, 478, -551, 513, 482, -291, -376, -365,
	513, 517, 472, 513, 517, 472, 513, 171, 513, -209,
	-173, 482, 44, 512, 513, 517, 329, 120, 129, -280,
	-549, -365, 512, -366, 512, -319, -171, -171, -279, -366,
	-171, -511, 138, -510, 326, 167, 370, 326, 167, -511,
	-511, -239, 52, -486, 295, -487, 295, 461, 120, -370,
	52, -483, -279, -284, 198, -286, 171, 312, 143, -533,
	29, -300, -405, 371, 371, 2, -186, -278, -366, -298,
	-279, -298, -370, -280, -279, 98, 182, 436, 275, 32,
	495, -485, 275, 359, 60, 392, -485, 495, -484, 512,
	512, 377, 513, 2, -278, -279, 513, -280, 513, -370,
	-280, 370, 303, -510, -376, 22, 285, 114, -376, -551,
	-311, -311, 299, -210, 60, 359, -280, -365, -187, 482,
	-366, -370, 513, 513, -170, 512, -187, -366, -370, -279,
	-280, 441, -170, -370, -279, -280, 512, 513, -280, -187,
	-311, -187, -370, 513, -370, -280,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 27, 28,
	29, 30, 470, 471, 473, 474, 475, 477, 478, 480,
	482, 484, 485, 486, 488, 489, 491, 492, 493, 494,
	495, 497, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 557, 559, 0, 1150,
	1152, 1154, 1156, 0, 693, 0, 32, 33, 0, -2,
	275, 277, 279, 0, 305, 307, 308, 310, 312, -2,
	0, 406, 407, 409, 411, -2, -2, 0, 853, 855,
	0, 546, 548, 0, 858, 860, 0, 0, 568, 569,
	0, 1238, -2, 562, 564, 566, 631, 633, 635, 637,
	639, 641, 643, 645, 646, 648, 650, 652, 654, 656,
	658, 660, 662, 663, 665, 667, 669, 671, 673, 675,
	677, 679, 681, 683, 685, 687, -2, 689, -2, -2,
	0, -2, -2, -2, 1168, 36, 38, 40, 42, 44,
	46, 48, 50, 52, 357, 358, 360, 362, 364, 366,
	369, 371, 373, 1296, 413, 415, 417, 419, 421, 423,
	425, 0, -2, 1308, 0, 0, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 80, 81, 82, 83, 84,
	85, 86, 87, 66, 67, 69, 70, 71, 75, 76,
	78, 64, 0, 0, 1269, 1271, 1273, 1275, -2, 0,
	0, 5, 9, 11, 13, 15, 17, 19, 21, 23,
	25, 472, 476, 479, 481, 483, 487, 490, 496, 498,
	500, 457, 458, 461, 1929, 1946, 1947, 1948, 1951, 1952,
	1953, 1954, 1955, 1956, 2331, 2412, 2413, 1978, 1979, 1980,
	1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990,
	1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
	2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
	2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020,
	2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030,
	2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040,
	2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050,
	2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060,
	2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070,
	2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080,
	2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090,
	2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100,
	2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110,
	2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120,
	2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130,
	2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140,
	2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150,
	2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160,
	2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170,
	2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180,
	2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190,
	2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200,
	2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210,
	2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220,
	2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230,
	2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240,
	2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250,
	2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260,
	2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270,
	2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280,
	2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290,
	2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300,
	2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310,
	2311, 459, 460, 1013, 0, 524, 522, 1922, 525, 2151,
	527, 529, 400, 401, 402, 403, 404, 405, 0, 539,
	533, 538, 540, 542, 543, 544, 545, 519, 517, 0,
	539, 1981, 537, 1148, 1149, 1133, 1134, 2189, 1175, 0,
	189, 558, -2, -2, -2, 2297, -2, 590, -2, 597,
	2301, 2191, 602, 0, 604, -2, 607, 1151, 1153, 1155,
	691, 692, 1932, 0, 0, 0, 0, 34, 35, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1062,
	1063, 1064, 0, 193, 195, -2, -2, -2, -2, 0,
	0, 2229, 2023, 1890, 1948, 1893, 1888, 276, 278, 280,
	281, 0, 0, 0, 0, 0, 0, 306, 309, 311,
	-2, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 908, 900, 901, 1104, 0, 0, 0, 0, 408,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 0, 0,
	0, -2, 0, 0, 0, 0, 0, 0, 337, 462,
	463, 0, 1297, 1297, 0, 0, 0, 0, 250, 241,
	854, 856, 857, 0, 0, 0, 0, 547, 549, 0,
	0, 223, 859, 861, 862, 0, 0, 0, 0, 0,
	252, 0, 0, 563, 565, 567, 632, 634, 636, 638,
	640, 642, 644, 647, 649, 651, 653, 655, 657, 659,
	661, 664, 666, 668, 670, 672, 674, 676, 678, 680,
	682, 684, 686, 688, 698, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, -2, -2, -2, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 778, 0, 0, 0,
	-2, -2, -2, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, 701, 703, 704, 705, 0, 758,
	776, 777, 786, 690, 0, 1053, 1298, 1177, 1158, 1172,
	1177, 1160, 1161, 1162, 1163, 1164, 1169, 1171, 1165, 1166,
	1167, 37, 39, 41, 43, 45, 47, 49, 51, 53,
	359, 361, 363, 365, 367, 370, 372, 374, -2, 1267,
	1268, 414, 416, 418, 420, 422, 424, 426, 550, 0,
	552, 0, 702, -2, 0, 1302, 1302, 1302, 0, 0,
	1268, 1266, 0, 555, 556, 611, 612, 1533, 0, 0,
	0, 0, 0, 0, 0, 1787, 1619, 0, 613, -2,
	1650, 1652, 2272, 2297, 1786, 1654, 1655, 1656, 1657, 1658,
	0, 1660, 1661, 1662, 1663, 1664, 1665, 0, 1667, 0,
	1672, 1673, 1674, 0, 2279, 1867, 1942, -2, 0, 0,
	2285, 1938, 0, 1753, 1690, -2, -2, 1965, 1944, 1465,
	1466, 1467, 1468, 1469, -2, -2, 2314, 1694, 1695, 1696,
	1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 0, 2260,
	2280, 2281, 2286, 2288, 2282, 2269, 1715, 2035, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1492, 1501, -2, -2, -2, -2, -2, -2, -2,
	2273, 2274, 2291, 2294, 2300, 2305, 2306, 2278, 2287, 2315,
	2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325,
	2326, 2327, 2328, 2329, 2330, 1493, -2, -2, -2, -2,
	1285, 2162, 1288, 1013, 1286, 1270, 1272, 0, 1274, 0,
	0, 0, 1279, 1305, 1303, 0, 1346, 1283, 1284, 1364,
	1364, 1388, 0, 1369, 0, 1388, 1297, 1414, 0, 1375,
	2181, 1691, 1692, 0, 1948, 1943, -2, -2, 2312, 0,
	0, 0, 0, 0, 0, 0, 520, 0, 526, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 1174, 0,
	560, 561, 0, 585, 0, 589, 2268, -2, 1989, 2200,
	-2, 593, 1178, 1182, 1183, 1184, 1185, 0, 0, 0,
	0, 0, 599, 0, 0, 586, 587, 605, 608, 0,
	694, 695, 696, 697, 63, 0, 2280, 1414, 65, 0,
	1912, 1973, 1974, 1975, 1976, 1977, 2313, 2332, 2333, 2334,
	2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344,
	2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354,
	2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364,
	2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374,
	2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384,
	2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394,
	2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404,
	2405, 2406, 2407, 2408, 2409, 2410, 2411, 2314, 68, 0,
	2280, 72, 0, 2280, 0, -2, 77, 0, 1918, 79,
	0, 1915, 88, 0, 2280, 0, 1887, -2, 0, 174,
	1926, 0, 879, 1928, -2, 2280, 1061, 253, 254, 1961,
	1962, 1969, 1970, 1971, 1972, 0, 0, 0, 846, 1884,
	1889, 847, 1908, 848, 1894, 0, 282, 283, 284, 285,
	286, 0, 287, 2280, 289, 290, 0, 292, 293, 2280,
	295, 296, 0, 298, 0, 206, 207, 314, 315, 0,
	317, 0, 2280, 0, 0, 0, 323, -2, 338, 0,
	335, 326, 327, 329, 330, 331, 332, 0, 378, 376,
	1923, 0, 874, 2280, 876, 0, 0, 1083, -2, 2280,
	1058, 0, 1089, 1085, 0, -2, 0, 1295, 2280, 1192,
	904, 905, 906, 907, 0, 397, 0, 1205, 0, 1207,
	0, 1228, 1420, 1364, 1364, 0, 339, 340, 341, 342,
	343, 2280, 0, 0, 0, 348, 0, 350, 351, 352,
	353, 354, 355, 356, 163, 2280, 429, 455, 163, 2280,
	432, 163, 2280, 435, 0, 438, 1102, 163, 2280, 441,
	163, 2280, 444, 445, 163, 2280, 449, 450, 452, 2280,
	454, 255, 1144, 1145, 1146, 1147, 0, -2, 513, 1931,
	-2, 465, 0, 466, 0, -2, 0, 267, 0, 0,
	863, 864, 865, 866, 867, 870, 871, 872, 873, 1401,
	226, 224, 0, 0, 1135, 1136, 1137, 1138, 1139, 1140,
	1141, 1142, 1143, 0, 0, 570, 0, 0, 699, 700,
	0, 0, 710, 711, 712, 267, 2192, 2159, 2055, 717,
	0, 720, 723, -2, 0, 0, 0, 0, 727, 0,
	732, 733, 734, 0, 736, 852, 738, 0, 0, 740,
	0, 744, 0, 747, 0, 749, 0, 751, -2, -2,
	-2, 762, -2, 0, 765, 767, 0, 769, -2, 0,
	778, 774, 775, 0, 0, 0, 0, 794, 795, 0,
	800, 0, 803, 804, 805, 0, 807, 808, 0, 810,
	811, 812, 813, 0, 815, 816, -2, -2, 820, 822,
	0, 829, 0, 833, 0, 837, 0, 706, 707, 163,
	1418, 1157, -2, 1159, 0, -2, 0, 551, 0, 554,
	1325, 1253, 1250, 0, 1322, 1323, 1254, 0, 0, 0,
	1261, 0, 1300, 1301, 0, 0, 0, 1240, 1241, 0,
	0, 0, 0, 1792, 1793, 1794, 1795, 1796, 1797, 1800,
	1801, 1798, 1799, 1802, 1803, 0, 0, 0, 0, 0,
	1804, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1805, 1806, 1807, 0, 0, 1809, 0, 1811,
	0, 0, 0, 0, 0, 0, 1598, 1600, 1875, 0,
	0, 1808, 1538, 1539, 1540, 1541, 1542, 1577, 1578, 0,
	0, 1651, 1872, 1871, 1653, 0, 1823, 0, 1666, -2,
	0, 1787, 1818, 0, 0, 1675, 1676, 1677, 0, 0,
	1823, 0, 0, 1866, 1687, 1688, 1530, 0, 0, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1479, 1478, 0,
	1480, 0, 1481, 1482, 1489, 1502, 0, 0, 0, 0,
	1506, 0, 0, 0, 0, 0, 0, 0, 1847, -2,
	0, 0, 0, 0, 1494, 0, 1287, 0, 0, 1350,
	1876, 1880, 1881, 1350, 1350, 0, 0, 1824, 1411, 1411,
	0, 0, 1407, 1407, 1407, 1405, 1388, 0, 1388, 1398,
	0, 1388, 1388, 0, -2, 1369, 0, 0, 1398, 0,
	1382, 501, 503, 505, 507, 508, 509, 511, 1415, 1416,
	0, 0, 0, 0, 1949, 0, 0, 0, 0, 0,
	1934, 0, 0, 0, 0, 531, 541, 1297, 0, 1826,
	1437, 1441, 0, 1443, 1444, 1445, 1446, 1447, 0, 0,
	1438, -2, 1490, 1492, 1513, 1966, 1967, 1968, 1473, 1474,
	1475, 1476, 1477, 1485, 1472, 1472, 1472, 1483, 1512, 1504,
	1512, 1508, 1458, 1459, 1460, 1495, 1496, 1497, 1498, 0,
	535, 0, 188, 1925, 0, 0, 0, -2, 595, 600,
	601, 0, 0, 1180, 0, 1186, 622, 623, 624, 1188,
	1189, 0, 598, 625, 626, 627, 628, 629, 630, 0,
	1896, 1897, 1898, 1899, 1902, 1903, 0, 0, 596, 615,
	603, 0, 609, 89, 1130, 0, 128, 0, 1130, 1130,
	0, 0, 150, 0, 0, 0, 0, 0, 0, 113,
	124, 101, 102, 0, 0, 0, 0, 0, 73, 1035,
	0, 1038, 0, 0, 0, 0, 0, 0, 0, 1051,
	0, 0, 0, 112, 0, 107, 91, 0, 0, 0,
	114, 126, 0, 154, 156, 0, 0, 0, 0, 0,
	0, 173, 181, 0, 0, 0, 0, 1059, 0, 1294,
	0, 1401, 2093, 1401, 845, 0, 0, 1949, 1892, 0,
	0, 0, 0, 0, 0, 0, 316, 318, 0, 320,
	321, 322, 0, 1082, 0, 328, 368, 984, 2280, 0,
	0, 395, 390, 0, 392, 0, 1034, 2280, 1032, 1927,
	0, 1056, 0, 1013, 0, 0, 1090, 1958, 1099, 1103,
	1194, 0, 399, 0, 1208, 1210, 0, 0, 1421, 0,
	1423, 1424, 0, 345, 346, 347, 0, 427, 0, 161,
	162, 0, 430, 0, 433, 0, 163, 2280, 1882, 439,
	0, 442, 0, 0, 447, 0, 0, 0, 0, 1297,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 230, 0, 1400, 0, 1401, 224, 267, 267, 1401,
	572, 1401, 574, 0, 0, 713, 267, 267, 267, 718,
	719, 721, 722, -2, -2, 830, 724, 725, 797, 0,
	0, 0, 796, 737, 0, 839, 2177, 850, 797, 2023,
	797, 2023, 797, 2023, 748, 750, 753, 789, 761, 766,
	0, 0, 771, 779, -2, 0, 781, 0, 783, 0,
	785, 797, 798, 801, 806, 809, 814, 0, 0, 0,
	0, 0, 0, 0, 1052, 0, 1170, 1325, 1253, 553,
	1244, 1324, 1245, 1252, 1255, 0, 0, 1257, 0, 1259,
	0, 1320, 1321, 1328, 1329, 0, 1339, 1340, 1332, 0,
	-2, 0, 0, 1335, 1336, 1263, 0, 1280, 1281, 1282,
	1309, 1312, 1113, 0, 2412, 1534, 1432, 1535, 1536, 1911,
	0, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1552, -2, -2, -2, -2, -2, -2, -2, -2, 1561,
	1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571,
	-2, -2, -2, 1575, 1576, -2, 1810, 1812, 0, 1875,
	0, -2, 0, -2, -2, -2, -2, 1595, 0, 1597,
	1602, 1604, 1606, 0, 0, 0, 0, 1874, 1616, 1858,
	1859, 0, 0, 1789, 1790, 1791, 1601, 0, 1620, 1873,
	1870, 0, 0, 1822, 1308, 1679, 0, 0, 0, 0,
	1686, 1671, 1820, 0, 1819, 0, 0, 0, 1830, 0,
	1865, 1861, 0, 1909, 1529, 1516, 1517, 1518, 1519, 1520,
	1521, 1531, 0, 1906, 1935, 1941, 1763, 0, 0, 0,
	1716, 1717, 1718, 1719, 1720, 0, 1722, 1723, 0, 1725,
	1726, 0, 1728, 1729, 0, 1731, 1732, 1733, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1450, 1451, 1452, 1453, 1454,
	1455, 1456, 1457, 0, 0, 1735, 0, 1833, -2, -2,
	-2, -2, -2, -2, -2, -2, 0, 1737, 0, 1739,
	1824, 1844, 0, 0, 1621, 0, 0, 0, 1787, 0,
	1742, 1824, 1852, 0, 0, 0, 0, 0, 1824, 0,
	1857, 0, 1749, 0, 1751, 1289, 0, 0, 1427, 0,
	0, 0, 1879, 1427, 1427, 0, 1345, 0, 0, 1408,
	1409, 1410, 0, 0, 1411, 0, 1402, 1406, 1403, 1404,
	1398, 1361, 0, 0, 1913, 1398, 1367, 1397, 0, 1013,
	1387, 1398, 1398, 0, -2, 1371, 1388, 0, 0, 502,
	504, 506, 510, 512, 0, 0, 1308, -2, 0, -2,
	1012, 0, 0, 0, 0, 521, 523, 0, 0, 515,
	0, 518, 0, 1428, 1431, 0, 0, 1442, 1448, 1449,
	0, -2, 0, 0, 1514, 0, 0, 0, 0, 588,
	0, 1179, 1187, 0, 619, 0, 621, 0, 1900, 1904,
	1901, 1905, 0, 610, 0, 0, 0, 0, 1129, 0,
	132, 2280, 0, 165, 0, 0, 977, 1919, 0, 0,
	0, 0, 2042, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 98, 103, 0, 0, 0,
	0, 0, 0, 0, 0, 1036, 1037, 1039, 1046, 1048,
	0, 1042, 1907, 0, 0, 1043, 0, 1045, 1047, 1049,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 100,
	104, 0, 0, 0, 0, 1886, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1078, 1076,
	1070, 1071, 1072, 1073, 1074, 1075, 0, 0, -2, 198,
	0, 258, 1885, 1895, 0, 868, 869, 288, 291, 294,
	297, 194, 0, 324, 0, 0, 910, 885, 0, 0,
	377, 267, 0, 0, 391, 0, 1030, 1033, 0, 1013,
	2280, 1069, 0, 0, 0, 0, 0, 1088, 0, 2280,
	1914, 1957, 1958, 1196, 1202, 0, 1427, 0, 1226, 1211,
	0, 0, 0, 1226, 1230, 1231, 1233, 1234, 0, 0,
	1422, 0, 349, 456, 163, 163, 163, 436, 0, 0,
	163, 446, 163, 451, 163, 256, 453, 464, 514, 1297,
	1297, 267, 265, 2134, 263, 260, 262, 0, 0, 0,
	911, 913, 914, 915, 916, 0, 1958, 0, 2082, 1958,
	0, 1214, 1216, 0, 220, 0, 227, 225, 230, 0,
	0, 389, 571, 576, 708, 0, 714, 715, 716, 755,
	791, 726, 728, 729, 730, 0, 851, 849, 739, 797,
	742, 797, 745, 797, 764, 768, 773, 780, 0, 0,
	0, 793, 0, 0, 0, 0, 0, 0, 0, 834,
	835, 836, 838, 1419, 1248, 1249, 1251, 0, 1260, 0,
	0, 1334, -2, -2, 1333, 1337, 1338, -2, -2, -2,
	-2, 1256, 0, 1265, 1262, 0, 1319, 1111, 1112, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 1617, 0,
	-2, 1596, 1599, 1603, 1605, 1607, 0, 0, 0, 0,
	0, 0, 1813, 0, 1815, 1618, 1868, 1871, 1785, 0,
	0, 1307, 1308, 1308, 0, 1685, 0, 1821, 0, 1828,
	1829, 0, 1678, 0, 1862, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1689, 0, 0, 0, 0, 1721,
	1724, 1727, 1730, 0, 0, 0, 0, 1710, 0, 0,
	0, 1714, 1484, 1470, 0, 1512, 1510, 1511, 1505, 1512,
	1509, 1462, 0, 1461, 0, 1734, 0, 1736, 1738, 0,
	0, 1740, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1624, 1625, 1626, 1741, 1850,
	1851, 0, 0, 0, 0, 0, 0, 1747, 0, 1856,
	1748, 1750, 1297, 0, 1290, 0, 1347, 1342, 1426, 0,
	1877, 1401, 1349, 1351, 1878, 1916, 1342, 1342, 0, 1825,
	0, 0, 1392, 0, 0, 0, 1394, 1365, 0, 0,
	1359, 0, 1355, 1356, 1357, 1358, 1366, 1013, 1396, 1368,
	1372, 1935, 0, 1398, 0, 1383, 0, 1385, 1417, 0,
	1377, 1380, 0, 0, 1950, 268, 0, 299, 303, 304,
	300, 301, 302, 530, 0, 0, 1827, 0, 1433, 0,
	1439, 0, 0, 0, 0, 534, 0, 584, -2, 617,
	618, 620, 0, 616, 129, 1130, 0, 0, 1115, 1117,
	0, 134, 2280, 143, 0, 951, 0, 1917, 0, 0,
	0, 0, 0, 1132, 0, 0, 2280, 163, 2280, 163,
	146, 149, 0, 153, 151, 0, 0, 942, 90, 1130,
	0, 93, 97, 105, 0, 0, 0, 111, 0, 0,
	0, 1119, 1123, 0, 0, 1040, 1041, 1044, 1050, 74,
	0, 0, 1121, 1125, 1114, 155, 95, 99, 106, 0,
	1127, 92, 0, 177, 0, 0, 0, 169, 0, 170,
	171, 178, 179, 180, 182, 0, 163, 2280, 0, 877,
	878, 1077, 1054, 1055, 0, 1060, 190, 0, 1401, 198,
	0, 1891, 0, 0, 0, 0, 0, 0, 909, 995,
	0, 882, 0, 0, 0, 383, 379, 0, 388, 394,
	393, 875, 0, 0, 0, -2, 0, 1092, 1086, 1087,
	0, 0, 0, 2280, 1198, 1202, 0, 1201, 1295, 1308,
	398, 1203, 1226, 0, 0, 0, 1213, 1209, 1206, 1427,
	0, 0, 0, 0, 0, 344, 428, 431, 434, 1883,
	163, 440, 443, 448, 467, 468, 242, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 920, 0, 1958, 1958,
	0, 1921, 0, 0, 0, 0, 228, 0, 231, 0,
	0, 0, 236, 237, 238, 239, 240, 221, 1401, 0,
	573, 0, 0, 0, 741, 743, 746, 782, 784, 797,
	823, 824, 937, 0, 937, 0, 0, 1258, 0, 1331,
	1264, 1313, 1314, 0, 1113, 0, 1537, 1580, 0, 0,
	-2, 0, 0, 1584, 0, 0, 0, -2, 0, 0,
	0, 1814, 1816, 0, 1870, 1680, 0, 0, 0, 1684,
	1668, 1669, 0, 1788, 1831, 1860, 1864, 0, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 0, 1910, 1936, 1940, 1761,
	1762, 1766, 1924, 0, 0, 0, 1693, 0, 0, 0,
	0, 0, 0, 0, 0, 1503, 1507, 0, 0, 1832,
	1843, 1845, 1622, 1623, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, -2, -2, -2, 1640, 1641, 1642,
	-2, -2, -2, 0, 0, 0, 1846, 1848, 1849, 1853,
	1854, 0, 1744, 1745, 1746, 1855, 0, 1297, 1291, 1344,
	0, 1425, 1348, 0, 1344, 1344, 1304, 1390, 0, 0,
	1413, 0, 1362, 0, 1363, 0, 1395, 0, 1370, 1373,
	1374, 1384, 0, 1376, 0, 1379, 0, 1680, -2, 269,
	271, 0, 274, 532, 516, 0, 0, 1435, 0, 0,
	1487, 1491, 1515, 536, 1399, 0, 0, 0, 0, 164,
	949, 976, 0, 0, 0, 1106, 1113, 0, 0, 982,
	136, 0, 0, 0, 144, 0, 0, 141, 0, 148,
	152, 0, 0, 0, 0, 0, 0, 108, 109, 110,
	0, 115, 0, 116, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 1110, 0, 0, 184,
	0, 0, 0, 1080, 1081, 196, 0, 199, 0, 202,
	203, 0, 198, 192, 0, 0, 319, 1013, 325, 931,
	983, 0, 985, 0, 883, 0, 0, 984, 375, 0,
	382, 0, 1034, 0, 0, 1057, 1068, 0, 1091, 1093,
	1101, 0, 0, 0, 1200, 1202, 0, 1193, 1194, 1327,
	1204, 1224, -2, 1223, 0, 1308, 1232, 1229, 1235, 1236,
	0, 437, 264, 0, 259, 261, 0, 245, 0, 0,
	912, 917, 0, 0, 0, 0, 0, 1215, 1217, 0,
	0, 0, 0, 0, 0, 230, 251, 0, 709, 731,
	792, 825, 936, 0, 0, 827, 0, 0, 1330, 1317,
	1318, 1315, 1113, 1582, 1586, 0, 0, 0, 1588, -2,
	0, 1610, -2, -2, 1817, 1869, 1659, 1308, 1681, 1683,
	1670, 1863, 1532, 0, 1768, 1765, 0, 1752, 0, 1705,
	1706, 0, 0, 1709, 1711, 1712, 1713, 1471, 1464, 1463,
	1842, 0, 0, 0, 0, 1743, 1292, 0, 1757, 0,
	0, 1352, 1757, 1757, 1391, 0, 1393, 1360, 1353, 0,
	1936, 1386, 1378, 0, 0, 272, 0, 1429, 1434, 0,
	1440, 1486, 130, 131, 133, 0, 950, 0, 953, 0,
	0, 0, 0, 960, 961, 0, 0, 0, 0, 0,
	970, 0, 999, 1009, 0, 1319, 0, 0, 0, 138,
	158, 0, 0, 1131, 0, 0, 163, 163, 0, 0,
	1116, 1118, 0, 0, 0, 0, 118, 0, 0, 1120,
	1124, 1122, 1126, 0, 0, 1128, 175, 176, 0, 163,
	0, 168, 163, 163, 1110, 0, 0, 0, 0, 0,
	191, 257, 198, 0, 939, 0, 995, 987, 988, 989,
	0, 994, 996, 0, 0, 897, 884, 0, 893, 0,
	0, 910, 885, 0, 380, 1031, 1065, 1013, 1084, 0,
	0, 0, 0, 0, 0, 1190, 1202, 0, 1195, 1196,
	1226, 1326, 0, 0, 0, 1212, 1327, 0, 266, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	232, 0, 233, 234, 235, 222, 575, 577, 0, 0,
	583, 935, 0, 0, 0, 0, 1316, 1590, -2, -2,
	1611, 0, 1937, 1939, 1308, 0, 1754, 1310, 0, 0,
	-2, 0, 0, 0, 1293, 1276, 0, 1343, 1341, 1277,
	1278, 1412, 0, 1381, 273, 0, 1436, 135, 0, 954,
	955, 1920, 957, 0, 959, 962, 0, 965, 1960, 0,
	969, 0, 978, 1000, 0, 931, 0, 1005, 1006, 1007,
	1107, 1108, 1011, 0, 137, 139, 157, 1110, 0, 140,
	147, 0, 0, 94, 0, 0, 2016, 121, 119, 117,
	96, 0, 177, 183, 1109, 172, 185, 163, 0, 200,
	0, 201, 204, 0, 0, 885, 938, 0, 986, 0,
	997, 998, 887, 0, 886, 0, 0, 0, 0, 0,
	381, 384, 0, 387, 0, 1094, 0, 1100, 0, 0,
	0, 0, 1197, 1198, 396, 0, 0, 0, 1226, 1237,
	244, 0, 0, 918, 921, 922, 923, 924, 925, 926,
	927, 928, 929, 919, 1011, 0, 0, 975, 0, 249,
	229, 0, 579, 0, 581, 0, 826, 828, 0, 0,
	1682, 1772, 0, 0, 1707, 1708, -2, 0, 1648, 1756,
	1758, 0, 1354, 1430, 952, 956, 0, 0, 0, 1017,
	0, 0, 971, 0, 1003, 1004, 939, 0, 931, 0,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 167,
	186, 1110, 197, 216, 0, 1066, 887, 0, 0, 895,
	0, 898, 0, 894, 891, 892, 931, 0, 385, 386,
	0, 0, 1101, 0, 0, 1199, 1200, 0, 1219, 1220,
	1222, 1227, 0, 0, 1009, 1011, 1427, 0, 578, 0,
	0, 831, 832, 0, 0, 0, 0, 1767, 1311, 1649,
	0, 0, 0, 0, 964, 1022, 0, 0, 0, 1001,
	1002, 999, 0, 980, 0, 1013, 142, 0, 1011, 0,
	943, 0, 0, 946, 0, 0, 122, 2016, 120, 0,
	163, 219, 0, 211, 209, 210, 880, 0, 0, 991,
	993, 0, 899, 939, 897, 1067, 1011, 0, 1009, 0,
	1191, 0, 1221, 267, 267, 931, 1009, 974, 267, 580,
	582, 1764, 1784, 1773, -2, 2240, 2020, 0, 1784, 1784,
	1759, 1760, 0, 0, 966, 1018, 1019, 0, 1014, 1015,
	1016, 1959, 967, 968, 1427, 1008, 0, 1017, 159, 931,
	940, 0, 0, 941, 0, 0, 125, 0, 127, 187,
	205, 0, 0, 0, 990, 0, 0, 0, 0, 885,
	887, 1009, 0, 931, 0, 1427, 246, 247, 939, 931,
	248, 1769, 0, 0, 1775, 1776, 1777, 1778, 1779, 1770,
	1771, 958, 0, 1020, 0, 1021, 0, 0, 0, 979,
	0, 1022, 145, 944, 0, 947, 0, 123, 0, 214,
	215, 0, 992, 888, 0, 890, 887, 896, 931, 0,
	939, 0, 1218, 1427, 939, 0, 1781, 1782, 0, 0,
	0, 1023, 0, 1026, 1027, 0, 1024, 0, 999, 0,
	0, 0, 934, 889, 881, 939, 1011, 885, 1009, 972,
	1427, 1780, 1783, 1774, 963, 1025, 1028, 1029, 1010, 981,
	0, 0, 0, 930, 932, 933, 885, 1009, 1427, 0,
	931, 973, 939, 0, 217, 0, 1427, 931, 1097, 939,
	945, 0, 0, 1095, 939, 885, 0, 218, 885, 1427,
	0, 1427, 1098, 939, 1096, 948,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 501, 3, 507, 502, 3,
	512, 513, 505, 503, 517, 504, 514, 506, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 520, 3,
	493, 495, 494, 498, 516, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 510, 3, 511, 508, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 518, 500, 519, 496,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 497, 57836, 499, 57837, 509, 57838, 515, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1208
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1213
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1215
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1218
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1219
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1220
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1221
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1222
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1223
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1224
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1225
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1226
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1233
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1242
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1243
		{
			return helpWith(sqllex, "ALTER")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1246
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1247
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1248
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1249
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1250
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1251
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1252
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1253
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1254
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1310
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1336
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1349
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1366
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1370
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 74:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1374
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1388
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 79:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1407
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 88:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1439
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1443
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1447
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1453
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1457
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1463
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1472
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1483
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1487
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1493
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1501
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1511
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1515
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1525
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1536
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1543
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1555
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1562
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1570
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1575
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1579
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1584
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1590
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1598
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1609
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 115:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1619
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1629
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1638
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1649
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 119:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1655
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1663
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1667
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1671
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 123:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1675
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1681
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1686
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1697
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1701
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1707
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1711
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 130:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1718
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1723
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1728
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1733
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1738
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1743
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1748
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1753
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1758
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1763
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1768
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1777
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1789
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1799
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1806
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 145:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1810
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1818
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1825
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1834
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1843
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1848
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1855
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1863
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1864
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1868
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1872
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1878
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1886
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1890
		{
			sqlVAL.union.val = nil
		}
	case 159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1896
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 160:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1900
		{
			sqlVAL.union.val = nil
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1907
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1911
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1915
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1921
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 165:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1925
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 166:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1950
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1961
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1972
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1982
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1991
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2000
		{
			return unimplementedWithIssueDetail(sqllex, 48700, "ALTER TYPE OWNER TO")
		}
	case 172:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2004
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2008
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2011
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2015
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2022
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2029
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2055
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2058
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 190:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2085
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2095
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2106
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2115
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2119
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2123
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2131
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 197:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2135
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2139
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2146
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2150
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2159
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2163
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2171
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2252
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleName:    sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2263
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2268
		{
			sqlVAL.union.val = nil
		}
	case 209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2276
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2280
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2290
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2296
		{
			sqlVAL.union.val = nil
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2305
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2309
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2313
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 217:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2319
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 218:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2323
		{
			sqlVAL.union.val = sqlDollar[6].union.kvOptions()
		}
	case 219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2327
		{
			sqlVAL.union.val = nil
		}
	case 220:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2358
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2367
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2376
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2385
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2389
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2393
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2399
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2403
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2410
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 229:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2418
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2425
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2429
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2442
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2446
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2450
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2462
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2466
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2472
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 242:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2509
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2514
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2518
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2524
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2529
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2534
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2539
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2544
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2548
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 251:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2564
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2567
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2571
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2575
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2583
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2593
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2597
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2607
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2611
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2615
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2621
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2625
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2631
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2635
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2639
		{
			sqlVAL.union.val = nil
		}
	case 268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2651
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2663
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2667
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2673
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2677
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2697
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2698
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2699
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2700
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2710
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2718
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2720
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2724
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2727
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2737
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2746
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2754
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2756
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2760
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2763
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2773
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2782
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2790
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2792
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2796
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2799
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2803
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2807
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2811
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2824
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2830
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2835
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2847
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2849
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2850
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2851
		{
		}
	case 313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2852
		{
			return helpWith(sqllex, "CREATE")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2855
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2856
		{
			return unimplemented(sqllex, "create cast")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2857
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2858
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2859
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2860
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2861
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2862
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2863
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2864
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2865
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2866
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2867
		{
			return unimplemented(sqllex, "create operator")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2868
		{
			return unimplemented(sqllex, "create publication")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2869
		{
			return unimplemented(sqllex, "create rule")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2870
		{
			return unimplemented(sqllex, "create server")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2871
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2872
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2873
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2876
		{
		}
	case 334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2877
		{
		}
	case 335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2880
		{
		}
	case 336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2881
		{
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2884
		{
		}
	case 338:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2885
		{
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2888
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2889
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2890
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2891
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2892
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2893
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2894
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2895
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2896
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2897
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2898
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2899
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2900
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2901
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2902
		{
			return unimplemented(sqllex, "drop server")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2903
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2904
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2905
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2909
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2910
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2911
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2912
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2913
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2915
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2916
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2917
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2918
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2928
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2936
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2940
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 378:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2944
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2950
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2954
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2963
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2970
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2976
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2982
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2986
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2997
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3009
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3017
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3025
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3035
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3039
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3045
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3049
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3056
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3060
		{

			sqlVAL.union.val = nil
		}
	case 396:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3074
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3084
		{
			return helpWith(sqllex, "DELETE")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3087
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3088
		{
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3096
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3099
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3100
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3101
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3102
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3103
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3112
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3113
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3114
		{
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3115
		{
			return helpWith(sqllex, "DROP")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3118
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3119
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3120
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3121
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3122
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3123
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3124
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3132
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3136
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3139
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3147
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3151
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3154
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3162
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3166
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3169
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3177
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3186
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3194
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3202
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3210
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3217
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3224
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3232
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3239
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3243
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3256
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3264
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3271
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3279
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3289
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3293
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3296
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3300
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3305
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3318
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3323
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3325
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3330
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3334
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3356
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3363
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3365
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3373
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3381
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3389
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3397
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3408
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3412
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3415
		{
			return helpWith(sqllex, "DELETE")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3417
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3418
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3419
		{
			return helpWith(sqllex, "INSERT")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3422
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3424
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3427
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3432
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3433
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3434
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3439
		{
			return helpWith(sqllex, "DELETE")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3440
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3441
		{
			return helpWith(sqllex, "INSERT")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3443
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3447
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3448
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3452
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3456
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 515:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3466
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3474
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3482
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3486
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 519:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3490
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3500
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3507
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3515
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3519
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 524:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3523
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3533
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3537
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3541
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3545
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3548
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3568
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3572
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3576
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3579
		{
			return helpWith(sqllex, "GRANT")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3599
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3603
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3607
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3610
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3615
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3619
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3629
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3633
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3647
		{
			return helpWith(sqllex, "RESET")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3648
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3663
		{
			return helpWith(sqllex, "RESET")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3671
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3674
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3685
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3688
		{
			return helpWith(sqllex, "USE")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3692
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3693
		{
		}
	case 560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3694
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3695
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3699
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3700
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3701
		{
			return helpWith(sqllex, "USE")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3717
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3732
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3735
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3753
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3761
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3765
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 576:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3769
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3775
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3779
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3785
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3789
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3793
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3797
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3801
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3812
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3815
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3825
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3841
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3845
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 591:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3850
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3867
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3870
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3872
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3875
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3879
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3898
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3905
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3910
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3915
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3920
		{
			return unimplemented(sqllex, "set from current")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3921
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3929
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3934
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3941
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3945
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3951
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3955
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3962
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3983
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3987
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3993
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4001
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4005
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4009
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4015
		{
			sqlVAL.union.val = tree.Low
		}
	case 623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4019
		{
			sqlVAL.union.val = tree.Normal
		}
	case 624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4023
		{
			sqlVAL.union.val = tree.High
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4034
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4038
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4042
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4047
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4051
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4065
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4066
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4067
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4068
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4069
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4070
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4071
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4073
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4074
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4075
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4076
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4077
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4078
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4079
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4080
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4082
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4083
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4084
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4085
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4086
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4087
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4088
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4089
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4090
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4091
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4092
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4093
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4095
		{
			return helpWith(sqllex, "SHOW")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4096
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4101
		{
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4102
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4105
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4109
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4114
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4119
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4124
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4134
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4135
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4136
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4147
		{
			sqlVAL.str = "client_encoding"
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4150
		{
			sqlVAL.str = "timezone"
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4151
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4165
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4169
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4173
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4184
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4192
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4200
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4208
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4217
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4226
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4234
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4244
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4248
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4251
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4253
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4256
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4258
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4262
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4265
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4273
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4276
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4284
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4296
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4299
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4307
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4310
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4317
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4320
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4333
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4341
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4349
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4352
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4354
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4358
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4362
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4365
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4367
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4371
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4374
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4382
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4385
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4390
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4398
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4401
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4403
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4406
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4410
		{
			sqlVAL.union.val = true
		}
	case 757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4412
		{
			sqlVAL.union.val = true
		}
	case 758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4414
		{
			sqlVAL.union.val = false
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4425
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4429
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4432
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4433
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4439
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4443
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4446
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4448
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4456
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4464
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4474
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4480
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4488
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4496
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4500
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4504
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 778:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4510
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4514
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 780:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4525
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4528
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4530
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4533
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4535
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4539
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4542
		{
			sqlVAL.union.val = true
		}
	case 787:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4543
		{
			sqlVAL.union.val = false
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4551
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4554
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4556
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4559
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4567
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4577
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4590
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4593
		{
			sqlVAL.union.val = true
		}
	case 797:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4594
		{
			sqlVAL.union.val = false
		}
	case 798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4601
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4608
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4615
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4619
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4622
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4629
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4633
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4640
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4650
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4653
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4661
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4666
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4671
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4675
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4683
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4687
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4691
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4704
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4707
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4715
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4718
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4722
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4726
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4730
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4738
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4746
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4753
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4760
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4764
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4775
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4783
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4789
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4798
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4803
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4807
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4810
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4814
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4821
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 840:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4826
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4946
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4950
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4954
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4993
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4997
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5002
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5006
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5014
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5023
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5030
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 852:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5034
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5047
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5048
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5049
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5059
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5060
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5061
		{
			return helpWith(sqllex, "RESUME")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5071
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5079
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5081
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5085
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5088
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5093
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5097
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5112
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5120
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5122
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5128
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5136
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5142
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5148
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5159
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5168
		{
			return unimplementedWithIssueDetail(sqllex, 50882, "ALTER SCHEMA OWNER TO")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5171
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5210
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5225
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5243
		{

			sqlVAL.union.val = nil
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5249
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5255
		{
			sqlVAL.union.val = nil
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5259
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 887:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5266
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5270
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 889:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5275
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5280
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5287
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5291
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5297
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5301
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 895:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5307
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5321
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5336
		{
		}
	case 898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5337
		{
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5338
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5356
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5357
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 902:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5358
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5362
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5363
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5364
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5365
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5366
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 910:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5371
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5377
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5381
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5387
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5393
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5397
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5406
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5410
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 920:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5416
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5421
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5422
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5423
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5424
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5425
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5427
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5428
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5429
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5434
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5443
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5450
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5455
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 934:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5460
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5466
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5473
		{
			sqlVAL.str = ""
		}
	case 939:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5480
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 940:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5486
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5493
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5500
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5510
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 945:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5516
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5526
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5530
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 948:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5550
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5561
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 951:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5565
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5571
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5575
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5579
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5583
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5587
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5591
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5595
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5617
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5621
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5629
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5636
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5640
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5644
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5654
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5658
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5662
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5669
		{
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5670
		{
		}
	case 972:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5675
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Sharded:     sqlDollar[6].union.shardedIndexDef(),
				Storing:     sqlDollar[7].union.nameList(),
				Interleave:  sqlDollar[8].union.interleave(),
				PartitionBy: sqlDollar[9].union.partitionBy(),
				Predicate:   sqlDollar[10].union.expr(),
			}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5687
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Sharded:     sqlDollar[7].union.shardedIndexDef(),
					Storing:     sqlDollar[8].union.nameList(),
					Interleave:  sqlDollar[9].union.interleave(),
					PartitionBy: sqlDollar[10].union.partitionBy(),
					Predicate:   sqlDollar[11].union.expr(),
				},
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5701
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:      tree.Name(sqlDollar[3].str),
				Columns:   sqlDollar[5].union.idxElems(),
				Inverted:  true,
				Predicate: sqlDollar[7].union.expr(),
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5712
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5724
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5729
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5735
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5741
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5753
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5765
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5776
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5783
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 984:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5787
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5793
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5803
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5814
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5818
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5825
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 990:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5831
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5842
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5846
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5852
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5858
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 995:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5862
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5868
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5872
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5878
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5883
		{
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5884
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5885
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5886
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5887
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5888
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5906
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5910
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5916
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5922
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5928
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5932
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5952
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5956
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5960
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5964
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5973
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5977
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5981
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5985
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5989
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5995
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6001
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6009
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6013
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6017
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6021
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6025
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6044
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6053
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6061
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6065
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6068
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6069
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6072
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6073
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6076
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6077
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6087
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6090
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6092
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6094
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6096
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6097
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6099
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6100
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6102
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6104
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6112
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6115
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6119
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6123
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6133
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6140
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6148
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6152
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6155
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6161
		{
			sqlVAL.union.val = true
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6165
		{

			sqlVAL.union.val = true
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6170
		{
			sqlVAL.union.val = false
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6180
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6194
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6206
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6218
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6227
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6231
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6235
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6239
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6243
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6251
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6255
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6261
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6265
		{
			sqlVAL.union.val = nil
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6271
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6275
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6280
		{
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6281
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6290
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6297
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6299
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6301
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6303
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6305
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6307
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6311
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6315
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6321
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6325
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6345
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6363
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6382
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6399
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6416
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6420
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6435
		{
			sqlVAL.union.val = false
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6441
		{
			sqlVAL.union.val = true
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6445
		{
			sqlVAL.union.val = false
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6451
		{
			sqlVAL.union.val = true
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6455
		{
			sqlVAL.union.val = false
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6465
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6474
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6496
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6497
		{
			sqlVAL.str = ""
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6501
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6505
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6515
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6521
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6527
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6535
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6541
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6549
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6555
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6563
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6577
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6583
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6591
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6597
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6605
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6609
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6614
		{
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6615
		{
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6618
		{
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6619
		{
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6627
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6630
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6640
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6648
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6650
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6654
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6657
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6670
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6678
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6680
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6686
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6699
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6707
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6709
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6715
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6723
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6726
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6730
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6731
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6732
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6751
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6753
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6756
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6766
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6769
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6771
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6774
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6778
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6783
		{
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6784
		{
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6785
		{
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6795
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6799
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6802
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6805
		{
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6806
		{
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6810
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6814
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6820
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6824
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6830
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6834
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6847
		{
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6849
		{
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6853
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6858
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6866
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6872
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6878
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6884
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6888
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6898
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6908
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6918
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6922
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6926
		{
			sqlVAL.str = ""
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6932
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6936
		{
			sqlVAL.str = ""
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6942
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6946
		{
			sqlVAL.str = ""
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6952
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6956
		{
			sqlVAL.str = ""
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6961
		{
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6962
		{
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6974
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6981
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6988
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6999
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7006
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7010
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7019
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7024
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7030
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7034
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7038
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7044
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7048
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7068
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7076
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7082
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7085
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7086
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7088
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7094
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7099
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7103
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7120
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7132
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7135
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7138
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7144
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7148
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7161
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7164
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7211
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7217
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7221
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7236
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7240
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7244
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7248
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7252
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7256
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7260
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7264
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7270
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7274
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7288
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7298
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7299
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7300
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7303
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7304
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7307
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7308
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7314
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7349
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7350
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7351
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7373
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7400
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7412
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7416
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7425
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7434
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7449
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7456
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7468
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7472
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7477
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7483
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7487
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7493
		{
			sqlVAL.union.val = true
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7497
		{
			sqlVAL.union.val = false
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7513
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7525
		{
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7526
		{
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7530
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7534
		{
			sqlVAL.union.val = nil
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7539
		{
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7540
		{
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = true
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7548
		{
			sqlVAL.union.val = false
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7552
		{
			sqlVAL.union.val = false
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7558
		{
			sqlVAL.union.val = true
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7569
		{
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7570
		{
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7574
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7578
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7584
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7590
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7594
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7601
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7605
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7611
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7632
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7637
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7653
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7657
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7666
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7675
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7686
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7687
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7691
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7695
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7699
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7713
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7717
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7725
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7754
		{
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7755
		{
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7758
		{
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7759
		{
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7776
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7780
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7786
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7790
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7809
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7812
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7814
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7826
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7829
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7831
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7837
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7841
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7847
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7851
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7856
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7861
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7872
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7879
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7884
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7899
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7903
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7911
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7942
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7952
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7962
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7970
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7983
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7987
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7998
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8022
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8028
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8049
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8051
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8055
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8061
		{
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8063
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8066
		{
			sqlVAL.union.val = nil
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8067
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8068
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8072
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8076
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8082
		{
			sqlVAL.union.val = true
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8086
		{
			sqlVAL.union.val = false
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8106
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8110
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8114
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8118
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8122
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8126
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8132
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8136
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8143
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8149
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8156
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8162
		{
			sqlVAL.str = tree.AstFull
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8166
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8170
		{
			sqlVAL.str = tree.AstRight
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8174
		{
			sqlVAL.str = tree.AstInner
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8180
		{
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8181
		{
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8202
		{
			sqlVAL.str = tree.AstHash
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8206
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8210
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8214
		{
			sqlVAL.str = ""
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8227
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8231
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8236
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8237
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8238
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8239
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8243
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8248
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8262
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8266
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8272
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8278
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8288
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8305
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8317
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8330
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8338
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8339
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8349
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8356
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8357
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8359
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8367
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8368
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8380
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8387
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8396
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8436
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8441
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8448
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8449
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8452
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8453
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8455
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8456
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8457
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = types.Geography
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8466
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8470
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8474
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8482
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8508
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8516
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8524
		{
			sqlVAL.union.val = nil
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8535
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8539
		{
			sqlVAL.union.val = types.Int2
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8543
		{
			sqlVAL.union.val = types.Int
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8547
		{
			sqlVAL.union.val = types.Float4
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8551
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = types.Float
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8559
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8567
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8575
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.union.val = types.Bool
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8589
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8602
		{
			sqlVAL.union.val = types.Float
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8608
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8614
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8626
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8630
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8636
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8648
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8654
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8658
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8666
		{
			sqlVAL.union.val = types.String
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8675
		{
			sqlVAL.union.val = true
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8676
		{
			sqlVAL.union.val = false
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8681
		{
			sqlVAL.union.val = types.Date
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8685
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8693
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8705
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8707
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8716
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8724
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8737
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8741
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8751
		{
			sqlVAL.union.val = true
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8752
		{
			sqlVAL.union.val = false
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8753
		{
			sqlVAL.union.val = false
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8757
		{
			sqlVAL.union.val = types.Interval
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8761
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8765
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8776
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8784
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8792
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8800
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8808
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8816
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8822
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8831
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8840
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8849
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8864
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8870
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8880
		{
			sqlVAL.union.val = nil
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8886
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8894
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8935
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8939
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8943
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8954
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8959
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8963
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8967
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8971
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8979
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8983
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8987
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8991
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8995
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8999
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9003
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9007
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9011
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9031
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9035
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9039
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9043
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9047
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9051
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9059
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9063
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9067
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9071
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9075
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9079
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9083
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9087
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9091
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9095
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9099
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9103
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9107
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9111
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9115
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9119
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9123
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9127
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9131
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9135
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9139
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9143
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9151
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9155
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9159
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9167
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9171
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9175
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9179
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9187
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9191
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9195
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9199
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9203
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9206
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9208
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9212
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9216
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9220
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9224
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9228
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9232
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9236
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9240
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9244
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9248
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9252
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9256
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9260
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9264
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9268
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9272
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9289
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9294
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9306
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9310
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9318
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9322
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9326
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9330
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9334
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9338
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9342
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9346
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9350
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9354
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9358
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9362
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9366
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9370
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9374
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9378
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9386
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9394
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9406
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9410
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9414
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9428
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9436
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9472
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9476
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9480
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9488
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9493
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9495
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9499
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9503
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9507
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9511
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9515
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9519
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9528
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9535
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9539
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9543
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9549
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9554
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9558
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9562
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9566
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9570
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9573
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9577
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9581
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9584
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9585
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9587
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9593
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9597
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9600
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9609
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9662
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9675
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9687
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9696
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9697
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9702
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9706
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9716
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9720
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9724
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9728
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9732
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9742
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9754
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9758
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9762
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9770
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9774
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9778
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9782
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9786
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9790
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9797
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9800
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9805
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9807
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9811
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9814
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9823
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9825
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9829
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9832
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9834
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9838
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9841
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9843
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9846
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9848
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9851
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9853
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9856
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9858
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9861
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9863
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9867
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9870
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9871
		{
			return unimplemented(sqllex, "treat")
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9873
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9885
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9889
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9892
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9894
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9897
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9903
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9907
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9913
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9917
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9928
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9938
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9944
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9952
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9960
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9987
		{
			sqlVAL.str = ""
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9993
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9997
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10003
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10011
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10019
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10027
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10033
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10046
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10074
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10078
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10082
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10086
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10093
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10102
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10106
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10110
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10114
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10119
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10132
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10136
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10143
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10155
		{
			sqlVAL.union.val = tree.Any
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10159
		{
			sqlVAL.union.val = tree.Some
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10163
		{
			sqlVAL.union.val = tree.All
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10168
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10169
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10170
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10171
		{
			sqlVAL.union.val = tree.Div
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10172
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10173
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10175
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10176
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = tree.LT
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10179
		{
			sqlVAL.union.val = tree.GT
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10180
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = tree.LE
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10182
		{
			sqlVAL.union.val = tree.GE
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10183
		{
			sqlVAL.union.val = tree.NE
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10187
		{
			sqlVAL.union.val = tree.Like
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10190
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10213
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10217
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10223
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10227
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10231
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10242
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10246
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10252
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10256
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10269
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10273
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10283
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10309
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10313
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10336
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10340
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10344
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10378
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10382
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10390
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10394
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10400
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10406
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10416
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10420
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10449
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10455
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10461
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10465
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10472
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10478
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10482
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10489
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10495
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10499
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10504
		{
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10505
		{
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10509
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10513
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10519
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10528
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10532
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10536
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10544
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10548
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10554
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10577
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10585
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10617
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10621
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10625
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10629
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10635
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10639
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10658
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10674
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10683
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10694
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10703
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10711
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10723
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10824
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10831
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10835
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10839
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10853
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10857
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10861
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10874
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10883
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10901
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10914
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10921
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10946
		{
			sqlVAL.str = ""
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10952
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10956
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
