// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:880
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13726

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1598,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	262, 415,
	-2, 0,
	-1, 74,
	244, 244,
	519, 244,
	-2, 0,
	-1, 88,
	232, 1334,
	246, 1334,
	262, 411,
	393, 411,
	404, 1088,
	443, 411,
	456, 1088,
	503, 1088,
	530, 411,
	556, 1088,
	-2, 0,
	-1, 94,
	133, 1598,
	239, 1598,
	541, 1598,
	542, 1598,
	-2, 0,
	-1, 112,
	151, 1569,
	170, 1569,
	183, 1569,
	242, 1569,
	275, 1569,
	344, 1569,
	354, 1569,
	536, 1569,
	-2, 1540,
	-1, 153,
	159, 928,
	261, 928,
	396, 889,
	461, 889,
	502, 889,
	522, 928,
	524, 889,
	-2, 0,
	-1, 157,
	4, 1600,
	21, 1600,
	22, 1600,
	23, 1600,
	24, 1600,
	25, 1600,
	26, 1600,
	27, 1600,
	29, 1600,
	30, 1600,
	36, 1600,
	41, 1600,
	42, 1600,
	44, 1600,
	45, 1600,
	46, 1600,
	47, 1600,
	48, 1600,
	49, 1600,
	50, 1600,
	51, 1600,
	53, 1600,
	54, 1600,
	55, 1600,
	56, 1600,
	58, 1600,
	59, 1600,
	60, 1600,
	61, 1600,
	62, 1600,
	63, 1600,
	64, 1600,
	68, 1600,
	69, 1600,
	70, 1600,
	71, 1600,
	73, 1600,
	74, 1600,
	75, 1600,
	79, 1600,
	80, 1600,
	81, 1600,
	82, 1600,
	83, 1600,
	84, 1600,
	85, 1600,
	88, 1600,
	89, 1600,
	90, 1600,
	91, 1600,
	92, 1600,
	94, 1600,
	96, 1600,
	97, 1600,
	98, 1600,
	99, 1600,
	100, 1600,
	101, 1600,
	103, 1600,
	104, 1600,
	105, 1600,
	107, 1600,
	108, 1600,
	109, 1600,
	117, 1600,
	118, 1600,
	119, 1600,
	120, 1600,
	121, 1600,
	123, 1600,
	124, 1600,
	125, 1600,
	126, 1600,
	128, 1600,
	129, 1600,
	130, 1600,
	132, 1600,
	133, 1600,
	134, 1600,
	136, 1600,
	137, 1600,
	138, 1600,
	141, 1600,
	142, 1600,
	143, 1600,
	145, 1600,
	146, 1600,
	148, 1600,
	149, 1600,
	150, 1600,
	152, 1600,
	153, 1600,
	154, 1600,
	155, 1600,
	156, 1600,
	157, 1600,
	158, 1600,
	159, 1600,
	160, 1600,
	161, 1600,
	162, 1600,
	163, 1600,
	164, 1600,
	165, 1600,
	166, 1600,
	167, 1600,
	169, 1600,
	175, 1600,
	176, 1600,
	177, 1600,
	178, 1600,
	182, 1600,
	184, 1600,
	185, 1600,
	186, 1600,
	190, 1600,
	191, 1600,
	192, 1600,
	193, 1600,
	194, 1600,
	195, 1600,
	196, 1600,
	197, 1600,
	198, 1600,
	199, 1600,
	200, 1600,
	201, 1600,
	202, 1600,
	203, 1600,
	205, 1600,
	206, 1600,
	208, 1600,
	209, 1600,
	211, 1600,
	212, 1600,
	213, 1600,
	214, 1600,
	215, 1600,
	216, 1600,
	217, 1600,
	218, 1600,
	219, 1600,
	221, 1600,
	222, 1600,
	224, 1600,
	225, 1600,
	226, 1600,
	227, 1600,
	228, 1600,
	232, 1600,
	233, 1600,
	234, 1600,
	235, 1600,
	236, 1600,
	239, 1600,
	240, 1600,
	241, 1600,
	243, 1600,
	245, 1600,
	246, 1600,
	248, 1600,
	250, 1600,
	251, 1600,
	252, 1600,
	254, 1600,
	258, 1600,
	259, 1600,
	260, 1600,
	261, 1600,
	262, 1600,
	263, 1600,
	265, 1600,
	266, 1600,
	267, 1600,
	269, 1600,
	270, 1600,
	272, 1600,
	273, 1600,
	276, 1600,
	277, 1600,
	278, 1600,
	279, 1600,
	280, 1600,
	281, 1600,
	282, 1600,
	285, 1600,
	286, 1600,
	287, 1600,
	288, 1600,
	290, 1600,
	291, 1600,
	292, 1600,
	293, 1600,
	294, 1600,
	295, 1600,
	296, 1600,
	297, 1600,
	298, 1600,
	299, 1600,
	300, 1600,
	301, 1600,
	302, 1600,
	303, 1600,
	304, 1600,
	305, 1600,
	306, 1600,
	307, 1600,
	308, 1600,
	309, 1600,
	310, 1600,
	311, 1600,
	313, 1600,
	315, 1600,
	316, 1600,
	317, 1600,
	318, 1600,
	319, 1600,
	320, 1600,
	321, 1600,
	322, 1600,
	323, 1600,
	324, 1600,
	325, 1600,
	326, 1600,
	327, 1600,
	328, 1600,
	329, 1600,
	331, 1600,
	332, 1600,
	334, 1600,
	336, 1600,
	337, 1600,
	339, 1600,
	340, 1600,
	341, 1600,
	342, 1600,
	343, 1600,
	346, 1600,
	349, 1600,
	350, 1600,
	351, 1600,
	352, 1600,
	355, 1600,
	356, 1600,
	357, 1600,
	359, 1600,
	361, 1600,
	362, 1600,
	363, 1600,
	364, 1600,
	365, 1600,
	366, 1600,
	367, 1600,
	368, 1600,
	369, 1600,
	370, 1600,
	371, 1600,
	372, 1600,
	373, 1600,
	375, 1600,
	376, 1600,
	377, 1600,
	378, 1600,
	379, 1600,
	380, 1600,
	381, 1600,
	382, 1600,
	383, 1600,
	384, 1600,
	385, 1600,
	386, 1600,
	387, 1600,
	388, 1600,
	389, 1600,
	391, 1600,
	392, 1600,
	394, 1600,
	395, 1600,
	396, 1600,
	397, 1600,
	398, 1600,
	399, 1600,
	400, 1600,
	401, 1600,
	402, 1600,
	403, 1600,
	404, 1600,
	405, 1600,
	406, 1600,
	408, 1600,
	410, 1600,
	411, 1600,
	412, 1600,
	418, 1600,
	420, 1600,
	421, 1600,
	422, 1600,
	423, 1600,
	424, 1600,
	425, 1600,
	426, 1600,
	427, 1600,
	428, 1600,
	429, 1600,
	431, 1600,
	432, 1600,
	433, 1600,
	435, 1600,
	436, 1600,
	437, 1600,
	438, 1600,
	439, 1600,
	440, 1600,
	441, 1600,
	443, 1600,
	444, 1600,
	445, 1600,
	446, 1600,
	447, 1600,
	448, 1600,
	449, 1600,
	450, 1600,
	451, 1600,
	452, 1600,
	453, 1600,
	454, 1600,
	456, 1600,
	457, 1600,
	458, 1600,
	459, 1600,
	460, 1600,
	461, 1600,
	463, 1600,
	464, 1600,
	465, 1600,
	466, 1600,
	467, 1600,
	468, 1600,
	470, 1600,
	471, 1600,
	472, 1600,
	473, 1600,
	474, 1600,
	475, 1600,
	476, 1600,
	477, 1600,
	479, 1600,
	481, 1600,
	482, 1600,
	483, 1600,
	484, 1600,
	485, 1600,
	486, 1600,
	487, 1600,
	488, 1600,
	489, 1600,
	490, 1600,
	491, 1600,
	492, 1600,
	493, 1600,
	494, 1600,
	495, 1600,
	496, 1600,
	498, 1600,
	499, 1600,
	501, 1600,
	502, 1600,
	504, 1600,
	505, 1600,
	506, 1600,
	507, 1600,
	508, 1600,
	509, 1600,
	510, 1600,
	511, 1600,
	512, 1600,
	514, 1600,
	515, 1600,
	516, 1600,
	517, 1600,
	518, 1600,
	520, 1600,
	522, 1600,
	523, 1600,
	524, 1600,
	525, 1600,
	526, 1600,
	527, 1600,
	529, 1600,
	530, 1600,
	531, 1600,
	532, 1600,
	534, 1600,
	535, 1600,
	538, 1600,
	539, 1600,
	540, 1600,
	541, 1600,
	542, 1600,
	543, 1600,
	544, 1600,
	546, 1600,
	549, 1600,
	550, 1600,
	551, 1600,
	552, 1600,
	553, 1600,
	554, 1600,
	556, 1600,
	557, 1600,
	558, 1600,
	559, 1600,
	560, 1600,
	561, 1600,
	566, 1600,
	567, 1600,
	568, 1600,
	569, 1600,
	570, 1600,
	571, 1600,
	-2, 0,
	-1, 158,
	1, 1451,
	131, 1451,
	250, 1451,
	333, 1451,
	391, 1451,
	400, 1451,
	575, 1451,
	604, 1451,
	-2, 0,
	-1, 160,
	1, 1451,
	604, 1451,
	-2, 0,
	-1, 161,
	1, 1451,
	604, 1451,
	-2, 0,
	-1, 162,
	1, 1451,
	519, 1451,
	604, 1451,
	-2, 0,
	-1, 191,
	151, 1568,
	170, 1568,
	183, 1568,
	242, 1568,
	275, 1568,
	344, 1568,
	354, 1568,
	536, 1568,
	-2, 1543,
	-1, 239,
	4, 1607,
	5, 1607,
	6, 1607,
	7, 1607,
	8, 1607,
	9, 1607,
	10, 1607,
	21, 1607,
	22, 1607,
	23, 1607,
	24, 1607,
	25, 1607,
	26, 1607,
	27, 1607,
	29, 1607,
	30, 1607,
	36, 1607,
	37, 1607,
	41, 1607,
	42, 1607,
	43, 1607,
	44, 1607,
	45, 1607,
	46, 1607,
	47, 1607,
	48, 1607,
	49, 1607,
	50, 1607,
	51, 1607,
	53, 1607,
	54, 1607,
	55, 1607,
	56, 1607,
	58, 1607,
	59, 1607,
	60, 1607,
	61, 1607,
	62, 1607,
	63, 1607,
	64, 1607,
	65, 1607,
	66, 1607,
	67, 1607,
	68, 1607,
	69, 1607,
	70, 1607,
	71, 1607,
	73, 1607,
	74, 1607,
	75, 1607,
	77, 1607,
	79, 1607,
	80, 1607,
	81, 1607,
	82, 1607,
	83, 1607,
	84, 1607,
	85, 1607,
	88, 1607,
	89, 1607,
	90, 1607,
	91, 1607,
	92, 1607,
	94, 1607,
	96, 1607,
	97, 1607,
	98, 1607,
	99, 1607,
	100, 1607,
	101, 1607,
	103, 1607,
	104, 1607,
	105, 1607,
	106, 1607,
	107, 1607,
	108, 1607,
	109, 1607,
	110, 1607,
	111, 1607,
	112, 1607,
	113, 1607,
	114, 1607,
	115, 1607,
	116, 1607,
	117, 1607,
	118, 1607,
	119, 1607,
	120, 1607,
	121, 1607,
	122, 1607,
	123, 1607,
	124, 1607,
	125, 1607,
	126, 1607,
	127, 1607,
	128, 1607,
	129, 1607,
	130, 1607,
	132, 1607,
	133, 1607,
	134, 1607,
	136, 1607,
	137, 1607,
	138, 1607,
	141, 1607,
	142, 1607,
	143, 1607,
	145, 1607,
	146, 1607,
	148, 1607,
	149, 1607,
	150, 1607,
	152, 1607,
	153, 1607,
	154, 1607,
	155, 1607,
	156, 1607,
	157, 1607,
	158, 1607,
	159, 1607,
	160, 1607,
	161, 1607,
	162, 1607,
	163, 1607,
	164, 1607,
	165, 1607,
	166, 1607,
	167, 1607,
	168, 1607,
	169, 1607,
	175, 1607,
	176, 1607,
	177, 1607,
	178, 1607,
	182, 1607,
	184, 1607,
	185, 1607,
	186, 1607,
	189, 1607,
	190, 1607,
	191, 1607,
	192, 1607,
	193, 1607,
	194, 1607,
	195, 1607,
	196, 1607,
	197, 1607,
	198, 1607,
	199, 1607,
	200, 1607,
	201, 1607,
	202, 1607,
	203, 1607,
	205, 1607,
	206, 1607,
	208, 1607,
	209, 1607,
	211, 1607,
	212, 1607,
	213, 1607,
	214, 1607,
	215, 1607,
	216, 1607,
	217, 1607,
	218, 1607,
	219, 1607,
	220, 1607,
	221, 1607,
	222, 1607,
	224, 1607,
	225, 1607,
	226, 1607,
	227, 1607,
	228, 1607,
	232, 1607,
	233, 1607,
	234, 1607,
	235, 1607,
	236, 1607,
	238, 1607,
	239, 1607,
	240, 1607,
	241, 1607,
	243, 1607,
	245, 1607,
	246, 1607,
	247, 1607,
	248, 1607,
	249, 1607,
	250, 1607,
	251, 1607,
	252, 1607,
	253, 1607,
	254, 1607,
	258, 1607,
	259, 1607,
	260, 1607,
	261, 1607,
	262, 1607,
	263, 1607,
	265, 1607,
	266, 1607,
	267, 1607,
	269, 1607,
	270, 1607,
	271, 1607,
	272, 1607,
	273, 1607,
	274, 1607,
	276, 1607,
	277, 1607,
	278, 1607,
	279, 1607,
	280, 1607,
	281, 1607,
	282, 1607,
	283, 1607,
	284, 1607,
	285, 1607,
	286, 1607,
	287, 1607,
	288, 1607,
	290, 1607,
	291, 1607,
	292, 1607,
	293, 1607,
	294, 1607,
	295, 1607,
	296, 1607,
	297, 1607,
	298, 1607,
	299, 1607,
	300, 1607,
	301, 1607,
	302, 1607,
	303, 1607,
	304, 1607,
	305, 1607,
	306, 1607,
	307, 1607,
	308, 1607,
	309, 1607,
	310, 1607,
	311, 1607,
	313, 1607,
	314, 1607,
	315, 1607,
	316, 1607,
	317, 1607,
	318, 1607,
	319, 1607,
	320, 1607,
	321, 1607,
	322, 1607,
	323, 1607,
	324, 1607,
	325, 1607,
	326, 1607,
	327, 1607,
	328, 1607,
	329, 1607,
	330, 1607,
	331, 1607,
	332, 1607,
	333, 1607,
	334, 1607,
	335, 1607,
	336, 1607,
	337, 1607,
	338, 1607,
	339, 1607,
	340, 1607,
	341, 1607,
	342, 1607,
	343, 1607,
	346, 1607,
	350, 1607,
	351, 1607,
	352, 1607,
	355, 1607,
	356, 1607,
	357, 1607,
	358, 1607,
	359, 1607,
	360, 1607,
	361, 1607,
	362, 1607,
	363, 1607,
	364, 1607,
	365, 1607,
	366, 1607,
	367, 1607,
	368, 1607,
	369, 1607,
	370, 1607,
	371, 1607,
	372, 1607,
	373, 1607,
	375, 1607,
	376, 1607,
	377, 1607,
	378, 1607,
	379, 1607,
	380, 1607,
	381, 1607,
	382, 1607,
	383, 1607,
	384, 1607,
	385, 1607,
	386, 1607,
	387, 1607,
	388, 1607,
	389, 1607,
	391, 1607,
	392, 1607,
	394, 1607,
	395, 1607,
	396, 1607,
	397, 1607,
	398, 1607,
	399, 1607,
	400, 1607,
	401, 1607,
	402, 1607,
	403, 1607,
	404, 1607,
	405, 1607,
	406, 1607,
	408, 1607,
	410, 1607,
	411, 1607,
	412, 1607,
	418, 1607,
	420, 1607,
	421, 1607,
	422, 1607,
	423, 1607,
	424, 1607,
	425, 1607,
	426, 1607,
	427, 1607,
	428, 1607,
	429, 1607,
	431, 1607,
	432, 1607,
	433, 1607,
	434, 1607,
	435, 1607,
	436, 1607,
	437, 1607,
	438, 1607,
	439, 1607,
	440, 1607,
	441, 1607,
	443, 1607,
	444, 1607,
	445, 1607,
	446, 1607,
	447, 1607,
	448, 1607,
	449, 1607,
	450, 1607,
	451, 1607,
	452, 1607,
	453, 1607,
	454, 1607,
	456, 1607,
	457, 1607,
	458, 1607,
	459, 1607,
	460, 1607,
	461, 1607,
	462, 1607,
	463, 1607,
	464, 1607,
	465, 1607,
	466, 1607,
	467, 1607,
	468, 1607,
	469, 1607,
	470, 1607,
	471, 1607,
	472, 1607,
	473, 1607,
	474, 1607,
	475, 1607,
	476, 1607,
	477, 1607,
	479, 1607,
	481, 1607,
	482, 1607,
	483, 1607,
	484, 1607,
	485, 1607,
	486, 1607,
	487, 1607,
	488, 1607,
	489, 1607,
	490, 1607,
	491, 1607,
	492, 1607,
	493, 1607,
	494, 1607,
	495, 1607,
	496, 1607,
	498, 1607,
	499, 1607,
	500, 1607,
	501, 1607,
	502, 1607,
	504, 1607,
	505, 1607,
	506, 1607,
	507, 1607,
	508, 1607,
	509, 1607,
	510, 1607,
	511, 1607,
	512, 1607,
	514, 1607,
	515, 1607,
	516, 1607,
	517, 1607,
	518, 1607,
	520, 1607,
	522, 1607,
	523, 1607,
	524, 1607,
	525, 1607,
	526, 1607,
	527, 1607,
	528, 1607,
	529, 1607,
	530, 1607,
	531, 1607,
	532, 1607,
	534, 1607,
	535, 1607,
	537, 1607,
	538, 1607,
	539, 1607,
	540, 1607,
	541, 1607,
	542, 1607,
	543, 1607,
	544, 1607,
	545, 1607,
	546, 1607,
	549, 1607,
	550, 1607,
	551, 1607,
	552, 1607,
	553, 1607,
	554, 1607,
	556, 1607,
	557, 1607,
	558, 1607,
	559, 1607,
	560, 1607,
	561, 1607,
	566, 1607,
	567, 1607,
	568, 1607,
	569, 1607,
	570, 1607,
	571, 1607,
	572, 1607,
	585, 1607,
	592, 1607,
	593, 1607,
	594, 1607,
	601, 1607,
	605, 1607,
	-2, 0,
	-1, 752,
	4, 1332,
	21, 1332,
	22, 1332,
	23, 1332,
	24, 1332,
	25, 1332,
	26, 1332,
	27, 1332,
	29, 1332,
	30, 1332,
	36, 1332,
	41, 1332,
	42, 1332,
	44, 1332,
	45, 1332,
	46, 1332,
	47, 1332,
	48, 1332,
	49, 1332,
	50, 1332,
	51, 1332,
	53, 1332,
	54, 1332,
	55, 1332,
	56, 1332,
	58, 1332,
	59, 1332,
	60, 1332,
	61, 1332,
	62, 1332,
	63, 1332,
	64, 1332,
	68, 1332,
	69, 1332,
	70, 1332,
	71, 1332,
	73, 1332,
	74, 1332,
	75, 1332,
	79, 1332,
	80, 1332,
	81, 1332,
	82, 1332,
	83, 1332,
	84, 1332,
	85, 1332,
	88, 1332,
	89, 1332,
	90, 1332,
	91, 1332,
	92, 1332,
	94, 1332,
	96, 1332,
	97, 1332,
	98, 1332,
	99, 1332,
	100, 1332,
	101, 1332,
	103, 1332,
	104, 1332,
	105, 1332,
	107, 1332,
	108, 1332,
	109, 1332,
	117, 1332,
	118, 1332,
	119, 1332,
	120, 1332,
	121, 1332,
	123, 1332,
	124, 1332,
	125, 1332,
	126, 1332,
	128, 1332,
	129, 1332,
	130, 1332,
	132, 1332,
	133, 1332,
	134, 1332,
	136, 1332,
	137, 1332,
	138, 1332,
	141, 1332,
	142, 1332,
	143, 1332,
	145, 1332,
	146, 1332,
	148, 1332,
	149, 1332,
	150, 1332,
	152, 1332,
	153, 1332,
	154, 1332,
	155, 1332,
	156, 1332,
	157, 1332,
	158, 1332,
	159, 1332,
	160, 1332,
	161, 1332,
	162, 1332,
	163, 1332,
	164, 1332,
	165, 1332,
	166, 1332,
	167, 1332,
	169, 1332,
	175, 1332,
	176, 1332,
	177, 1332,
	178, 1332,
	182, 1332,
	184, 1332,
	185, 1332,
	186, 1332,
	190, 1332,
	191, 1332,
	192, 1332,
	193, 1332,
	194, 1332,
	195, 1332,
	196, 1332,
	197, 1332,
	198, 1332,
	199, 1332,
	200, 1332,
	201, 1332,
	202, 1332,
	203, 1332,
	205, 1332,
	206, 1332,
	208, 1332,
	209, 1332,
	211, 1332,
	212, 1332,
	213, 1332,
	214, 1332,
	215, 1332,
	216, 1332,
	217, 1332,
	218, 1332,
	219, 1332,
	221, 1332,
	222, 1332,
	224, 1332,
	225, 1332,
	226, 1332,
	227, 1332,
	228, 1332,
	232, 1332,
	233, 1332,
	234, 1332,
	235, 1332,
	236, 1332,
	239, 1332,
	240, 1332,
	241, 1332,
	243, 1332,
	245, 1332,
	246, 1332,
	248, 1332,
	250, 1332,
	251, 1332,
	252, 1332,
	254, 1332,
	258, 1332,
	259, 1332,
	260, 1332,
	261, 1332,
	262, 1332,
	263, 1332,
	265, 1332,
	266, 1332,
	267, 1332,
	269, 1332,
	270, 1332,
	272, 1332,
	273, 1332,
	276, 1332,
	277, 1332,
	278, 1332,
	279, 1332,
	280, 1332,
	281, 1332,
	282, 1332,
	285, 1332,
	286, 1332,
	287, 1332,
	288, 1332,
	290, 1332,
	291, 1332,
	292, 1332,
	293, 1332,
	294, 1332,
	295, 1332,
	296, 1332,
	297, 1332,
	298, 1332,
	299, 1332,
	300, 1332,
	301, 1332,
	302, 1332,
	303, 1332,
	304, 1332,
	305, 1332,
	306, 1332,
	307, 1332,
	308, 1332,
	309, 1332,
	310, 1332,
	311, 1332,
	313, 1332,
	315, 1332,
	316, 1332,
	317, 1332,
	318, 1332,
	319, 1332,
	320, 1332,
	321, 1332,
	322, 1332,
	323, 1332,
	324, 1332,
	325, 1332,
	326, 1332,
	327, 1332,
	328, 1332,
	329, 1332,
	331, 1332,
	332, 1332,
	334, 1332,
	336, 1332,
	337, 1332,
	339, 1332,
	340, 1332,
	341, 1332,
	342, 1332,
	343, 1332,
	346, 1332,
	350, 1332,
	351, 1332,
	352, 1332,
	355, 1332,
	356, 1332,
	357, 1332,
	359, 1332,
	361, 1332,
	362, 1332,
	363, 1332,
	364, 1332,
	365, 1332,
	366, 1332,
	367, 1332,
	368, 1332,
	369, 1332,
	370, 1332,
	371, 1332,
	372, 1332,
	373, 1332,
	375, 1332,
	376, 1332,
	377, 1332,
	378, 1332,
	379, 1332,
	380, 1332,
	381, 1332,
	382, 1332,
	383, 1332,
	384, 1332,
	385, 1332,
	386, 1332,
	387, 1332,
	388, 1332,
	389, 1332,
	391, 1332,
	392, 1332,
	394, 1332,
	395, 1332,
	396, 1332,
	397, 1332,
	398, 1332,
	399, 1332,
	400, 1332,
	401, 1332,
	402, 1332,
	403, 1332,
	404, 1332,
	405, 1332,
	406, 1332,
	408, 1332,
	410, 1332,
	411, 1332,
	412, 1332,
	418, 1332,
	420, 1332,
	421, 1332,
	422, 1332,
	423, 1332,
	424, 1332,
	425, 1332,
	426, 1332,
	427, 1332,
	428, 1332,
	429, 1332,
	431, 1332,
	432, 1332,
	433, 1332,
	435, 1332,
	436, 1332,
	437, 1332,
	438, 1332,
	439, 1332,
	440, 1332,
	441, 1332,
	443, 1332,
	444, 1332,
	445, 1332,
	446, 1332,
	447, 1332,
	448, 1332,
	449, 1332,
	450, 1332,
	451, 1332,
	452, 1332,
	453, 1332,
	454, 1332,
	456, 1332,
	457, 1332,
	458, 1332,
	459, 1332,
	460, 1332,
	461, 1332,
	463, 1332,
	464, 1332,
	465, 1332,
	466, 1332,
	467, 1332,
	468, 1332,
	470, 1332,
	471, 1332,
	472, 1332,
	473, 1332,
	474, 1332,
	475, 1332,
	476, 1332,
	477, 1332,
	479, 1332,
	481, 1332,
	482, 1332,
	483, 1332,
	484, 1332,
	485, 1332,
	486, 1332,
	487, 1332,
	488, 1332,
	489, 1332,
	490, 1332,
	491, 1332,
	492, 1332,
	493, 1332,
	494, 1332,
	495, 1332,
	496, 1332,
	498, 1332,
	499, 1332,
	501, 1332,
	502, 1332,
	504, 1332,
	505, 1332,
	506, 1332,
	507, 1332,
	508, 1332,
	509, 1332,
	510, 1332,
	511, 1332,
	512, 1332,
	514, 1332,
	515, 1332,
	516, 1332,
	517, 1332,
	518, 1332,
	520, 1332,
	522, 1332,
	523, 1332,
	524, 1332,
	525, 1332,
	526, 1332,
	527, 1332,
	529, 1332,
	530, 1332,
	531, 1332,
	532, 1332,
	534, 1332,
	535, 1332,
	538, 1332,
	539, 1332,
	540, 1332,
	541, 1332,
	542, 1332,
	543, 1332,
	544, 1332,
	546, 1332,
	549, 1332,
	550, 1332,
	551, 1332,
	552, 1332,
	553, 1332,
	554, 1332,
	556, 1332,
	557, 1332,
	558, 1332,
	559, 1332,
	560, 1332,
	561, 1332,
	566, 1332,
	567, 1332,
	568, 1332,
	569, 1332,
	570, 1332,
	571, 1332,
	-2, 0,
	-1, 771,
	188, 2399,
	519, 2399,
	584, 2399,
	603, 2399,
	-2, 0,
	-1, 772,
	188, 2386,
	519, 2386,
	584, 2386,
	603, 2386,
	-2, 0,
	-1, 774,
	188, 2650,
	519, 2650,
	584, 2650,
	603, 2650,
	-2, 0,
	-1, 777,
	188, 2511,
	519, 2511,
	584, 2511,
	603, 2511,
	-2, 0,
	-1, 778,
	188, 2691,
	519, 2691,
	584, 2691,
	603, 2691,
	-2, 0,
	-1, 786,
	188, 2538,
	519, 2538,
	584, 2538,
	603, 2538,
	-2, 710,
	-1, 821,
	603, 2335,
	606, 2335,
	-2, 1009,
	-1, 822,
	603, 2337,
	606, 2337,
	-2, 1010,
	-1, 823,
	603, 2336,
	606, 2336,
	-2, 1011,
	-1, 824,
	606, 2261,
	-2, 1012,
	-1, 849,
	183, 263,
	-2, 0,
	-1, 873,
	43, 2308,
	-2, 0,
	-1, 874,
	556, 1310,
	-2, 1089,
	-1, 890,
	4, 1741,
	21, 1741,
	22, 1741,
	23, 1741,
	24, 1741,
	25, 1741,
	26, 1741,
	27, 1741,
	29, 1741,
	30, 1741,
	36, 1741,
	41, 1741,
	42, 1741,
	44, 1741,
	45, 1741,
	46, 1741,
	47, 1741,
	48, 1741,
	49, 1741,
	50, 1741,
	51, 1741,
	53, 1741,
	54, 1741,
	55, 1741,
	56, 1741,
	58, 1741,
	59, 1741,
	60, 1741,
	61, 1741,
	62, 1741,
	63, 1741,
	64, 1741,
	68, 1741,
	69, 1741,
	70, 1741,
	71, 1741,
	73, 1741,
	74, 1741,
	75, 1741,
	79, 1741,
	80, 1741,
	81, 1741,
	82, 1741,
	83, 1741,
	84, 1741,
	85, 1741,
	88, 1741,
	89, 1741,
	90, 1741,
	91, 1741,
	92, 1741,
	94, 1741,
	96, 1741,
	97, 1741,
	98, 1741,
	99, 1741,
	100, 1741,
	101, 1741,
	103, 1741,
	104, 1741,
	105, 1741,
	107, 1741,
	108, 1741,
	109, 1741,
	117, 1741,
	118, 1741,
	119, 1741,
	120, 1741,
	121, 1741,
	123, 1741,
	124, 1741,
	125, 1741,
	126, 1741,
	128, 1741,
	129, 1741,
	130, 1741,
	132, 1741,
	133, 1741,
	134, 1741,
	136, 1741,
	137, 1741,
	138, 1741,
	141, 1741,
	142, 1741,
	143, 1741,
	145, 1741,
	146, 1741,
	148, 1741,
	149, 1741,
	150, 1741,
	152, 1741,
	153, 1741,
	154, 1741,
	155, 1741,
	156, 1741,
	157, 1741,
	158, 1741,
	159, 1741,
	160, 1741,
	161, 1741,
	162, 1741,
	163, 1741,
	164, 1741,
	165, 1741,
	166, 1741,
	167, 1741,
	169, 1741,
	175, 1741,
	176, 1741,
	177, 1741,
	178, 1741,
	182, 1741,
	184, 1741,
	185, 1741,
	186, 1741,
	190, 1741,
	191, 1741,
	192, 1741,
	193, 1741,
	194, 1741,
	195, 1741,
	196, 1741,
	197, 1741,
	198, 1741,
	199, 1741,
	200, 1741,
	201, 1741,
	202, 1741,
	203, 1741,
	205, 1741,
	206, 1741,
	208, 1741,
	209, 1741,
	211, 1741,
	212, 1741,
	213, 1741,
	214, 1741,
	215, 1741,
	216, 1741,
	217, 1741,
	218, 1741,
	219, 1741,
	221, 1741,
	222, 1741,
	224, 1741,
	225, 1741,
	226, 1741,
	227, 1741,
	228, 1741,
	232, 1741,
	233, 1741,
	234, 1741,
	235, 1741,
	236, 1741,
	239, 1741,
	240, 1741,
	241, 1741,
	243, 1741,
	245, 1741,
	246, 1741,
	248, 1741,
	250, 1741,
	251, 1741,
	252, 1741,
	254, 1741,
	258, 1741,
	259, 1741,
	260, 1741,
	261, 1741,
	262, 1741,
	263, 1741,
	265, 1741,
	266, 1741,
	267, 1741,
	269, 1741,
	270, 1741,
	272, 1741,
	273, 1741,
	276, 1741,
	277, 1741,
	278, 1741,
	279, 1741,
	280, 1741,
	281, 1741,
	282, 1741,
	285, 1741,
	286, 1741,
	287, 1741,
	288, 1741,
	290, 1741,
	291, 1741,
	292, 1741,
	293, 1741,
	294, 1741,
	295, 1741,
	296, 1741,
	297, 1741,
	298, 1741,
	299, 1741,
	300, 1741,
	301, 1741,
	302, 1741,
	303, 1741,
	304, 1741,
	305, 1741,
	306, 1741,
	307, 1741,
	308, 1741,
	309, 1741,
	310, 1741,
	311, 1741,
	313, 1741,
	315, 1741,
	316, 1741,
	317, 1741,
	318, 1741,
	319, 1741,
	320, 1741,
	321, 1741,
	322, 1741,
	323, 1741,
	324, 1741,
	325, 1741,
	326, 1741,
	327, 1741,
	328, 1741,
	329, 1741,
	331, 1741,
	332, 1741,
	334, 1741,
	336, 1741,
	337, 1741,
	339, 1741,
	340, 1741,
	341, 1741,
	342, 1741,
	343, 1741,
	346, 1741,
	350, 1741,
	351, 1741,
	352, 1741,
	355, 1741,
	356, 1741,
	357, 1741,
	359, 1741,
	361, 1741,
	362, 1741,
	363, 1741,
	364, 1741,
	365, 1741,
	366, 1741,
	367, 1741,
	368, 1741,
	369, 1741,
	370, 1741,
	371, 1741,
	372, 1741,
	373, 1741,
	375, 1741,
	376, 1741,
	377, 1741,
	378, 1741,
	379, 1741,
	380, 1741,
	381, 1741,
	382, 1741,
	383, 1741,
	384, 1741,
	385, 1741,
	386, 1741,
	387, 1741,
	388, 1741,
	389, 1741,
	391, 1741,
	392, 1741,
	394, 1741,
	395, 1741,
	396, 1741,
	397, 1741,
	398, 1741,
	399, 1741,
	400, 1741,
	401, 1741,
	402, 1741,
	403, 1741,
	404, 1741,
	405, 1741,
	406, 1741,
	408, 1741,
	410, 1741,
	411, 1741,
	412, 1741,
	418, 1741,
	420, 1741,
	421, 1741,
	422, 1741,
	423, 1741,
	424, 1741,
	425, 1741,
	426, 1741,
	427, 1741,
	428, 1741,
	429, 1741,
	431, 1741,
	432, 1741,
	433, 1741,
	435, 1741,
	436, 1741,
	437, 1741,
	438, 1741,
	439, 1741,
	440, 1741,
	441, 1741,
	443, 1741,
	444, 1741,
	445, 1741,
	446, 1741,
	447, 1741,
	448, 1741,
	449, 1741,
	450, 1741,
	451, 1741,
	452, 1741,
	453, 1741,
	454, 1741,
	456, 1741,
	457, 1741,
	458, 1741,
	459, 1741,
	460, 1741,
	461, 1741,
	463, 1741,
	464, 1741,
	465, 1741,
	466, 1741,
	467, 1741,
	468, 1741,
	470, 1741,
	471, 1741,
	472, 1741,
	473, 1741,
	474, 1741,
	475, 1741,
	476, 1741,
	477, 1741,
	479, 1741,
	481, 1741,
	482, 1741,
	483, 1741,
	484, 1741,
	485, 1741,
	486, 1741,
	487, 1741,
	488, 1741,
	489, 1741,
	490, 1741,
	491, 1741,
	492, 1741,
	493, 1741,
	494, 1741,
	495, 1741,
	496, 1741,
	498, 1741,
	499, 1741,
	501, 1741,
	502, 1741,
	504, 1741,
	505, 1741,
	506, 1741,
	507, 1741,
	508, 1741,
	509, 1741,
	510, 1741,
	511, 1741,
	512, 1741,
	514, 1741,
	515, 1741,
	516, 1741,
	517, 1741,
	518, 1741,
	520, 1741,
	522, 1741,
	523, 1741,
	524, 1741,
	525, 1741,
	526, 1741,
	527, 1741,
	529, 1741,
	530, 1741,
	531, 1741,
	532, 1741,
	534, 1741,
	535, 1741,
	538, 1741,
	539, 1741,
	540, 1741,
	541, 1741,
	542, 1741,
	543, 1741,
	544, 1741,
	546, 1741,
	549, 1741,
	550, 1741,
	551, 1741,
	552, 1741,
	553, 1741,
	554, 1741,
	556, 1741,
	557, 1741,
	558, 1741,
	559, 1741,
	560, 1741,
	561, 1741,
	566, 1741,
	567, 1741,
	568, 1741,
	569, 1741,
	570, 1741,
	571, 1741,
	-2, 0,
	-1, 900,
	262, 415,
	-2, 0,
	-1, 977,
	396, 890,
	461, 890,
	502, 890,
	524, 890,
	-2, 0,
	-1, 978,
	396, 889,
	461, 889,
	502, 889,
	524, 889,
	-2, 821,
	-1, 982,
	1, 942,
	600, 942,
	602, 942,
	604, 942,
	-2, 0,
	-1, 984,
	1, 864,
	600, 864,
	602, 864,
	604, 864,
	-2, 0,
	-1, 985,
	1, 868,
	600, 868,
	602, 868,
	604, 868,
	-2, 0,
	-1, 986,
	1, 1008,
	183, 1008,
	600, 1008,
	602, 1008,
	604, 1008,
	-2, 0,
	-1, 994,
	1, 895,
	600, 895,
	602, 895,
	604, 895,
	-2, 0,
	-1, 1001,
	1, 942,
	600, 942,
	602, 942,
	604, 942,
	-2, 0,
	-1, 1002,
	1, 944,
	600, 944,
	602, 944,
	604, 944,
	-2, 0,
	-1, 1003,
	1, 947,
	600, 947,
	602, 947,
	604, 947,
	-2, 0,
	-1, 1009,
	1, 972,
	600, 972,
	602, 972,
	604, 972,
	-2, 0,
	-1, 1010,
	1, 974,
	600, 974,
	602, 974,
	604, 974,
	-2, 0,
	-1, 1015,
	1, 1002,
	600, 1002,
	602, 1002,
	604, 1002,
	-2, 0,
	-1, 1067,
	170, 1611,
	183, 1611,
	275, 1611,
	344, 1611,
	-2, 1547,
	-1, 1082,
	170, 1610,
	183, 1610,
	275, 1610,
	344, 1610,
	-2, 1544,
	-1, 1109,
	603, 2334,
	-2, 718,
	-1, 1138,
	5, 2326,
	601, 2324,
	-2, 2315,
	-1, 1146,
	5, 2347,
	601, 2344,
	-2, 2335,
	-1, 1147,
	5, 2348,
	601, 2345,
	-2, 2336,
	-1, 1155,
	603, 2332,
	-2, 2314,
	-1, 1156,
	601, 2775,
	-2, 2333,
	-1, 1179,
	601, 2774,
	-2, 2349,
	-1, 1180,
	5, 1816,
	-2, 2745,
	-1, 1181,
	5, 1817,
	-2, 2746,
	-1, 1182,
	5, 1818,
	-2, 2760,
	-1, 1183,
	5, 1819,
	-2, 2724,
	-1, 1184,
	5, 1820,
	-2, 2758,
	-1, 1185,
	5, 1828,
	-2, 2737,
	-1, 1186,
	5, 1815,
	-2, 2733,
	-1, 1187,
	5, 1815,
	-2, 2732,
	-1, 1188,
	5, 1815,
	-2, 2751,
	-1, 1189,
	5, 1826,
	-2, 2726,
	-1, 1190,
	5, 1831,
	-2, 2725,
	-1, 1191,
	5, 1833,
	-2, 2770,
	-1, 1194,
	5, 1855,
	-2, 2763,
	-1, 1195,
	5, 1847,
	-2, 2764,
	-1, 1196,
	5, 1855,
	-2, 2765,
	-1, 1197,
	5, 1851,
	-2, 2766,
	-1, 1198,
	5, 1801,
	-2, 2738,
	-1, 1199,
	5, 1802,
	-2, 2739,
	-1, 1200,
	5, 1803,
	-2, 2727,
	-1, 1228,
	5, 1838,
	-2, 2771,
	-1, 1229,
	5, 1839,
	-2, 2761,
	-1, 1230,
	5, 1840,
	557, 1840,
	-2, 2728,
	-1, 1231,
	5, 1841,
	557, 1841,
	-2, 2729,
	-1, 1268,
	601, 2344,
	-2, 2335,
	-1, 1269,
	601, 2345,
	-2, 2336,
	-1, 1365,
	188, 2691,
	519, 2691,
	584, 2691,
	603, 2691,
	-2, 0,
	-1, 1370,
	1, 694,
	604, 694,
	-2, 1459,
	-1, 1500,
	363, 2309,
	420, 2309,
	463, 2309,
	594, 2309,
	-2, 2299,
	-1, 1511,
	605, 2309,
	-2, 2311,
	-1, 1519,
	1, 1307,
	425, 1271,
	463, 1271,
	578, 1271,
	600, 1307,
	602, 1307,
	604, 1307,
	-2, 1596,
	-1, 1525,
	204, 1404,
	223, 1404,
	433, 1404,
	-2, 0,
	-1, 1581,
	404, 1088,
	556, 1088,
	-2, 410,
	-1, 1598,
	43, 2307,
	-2, 1054,
	-1, 1605,
	1, 1307,
	600, 1307,
	602, 1307,
	604, 1307,
	-2, 1596,
	-1, 1613,
	4, 1332,
	21, 1332,
	22, 1332,
	23, 1332,
	24, 1332,
	25, 1332,
	26, 1332,
	27, 1332,
	29, 1332,
	30, 1332,
	36, 1332,
	41, 1332,
	42, 1332,
	44, 1332,
	45, 1332,
	46, 1332,
	47, 1332,
	48, 1332,
	49, 1332,
	50, 1332,
	51, 1332,
	53, 1332,
	54, 1332,
	55, 1332,
	56, 1332,
	58, 1332,
	59, 1332,
	60, 1332,
	61, 1332,
	62, 1332,
	63, 1332,
	64, 1332,
	68, 1332,
	69, 1332,
	70, 1332,
	71, 1332,
	73, 1332,
	74, 1332,
	75, 1332,
	79, 1332,
	80, 1332,
	81, 1332,
	82, 1332,
	83, 1332,
	84, 1332,
	85, 1332,
	88, 1332,
	89, 1332,
	90, 1332,
	91, 1332,
	92, 1332,
	94, 1332,
	96, 1332,
	97, 1332,
	98, 1332,
	99, 1332,
	100, 1332,
	101, 1332,
	103, 1332,
	104, 1332,
	105, 1332,
	107, 1332,
	108, 1332,
	109, 1332,
	117, 1332,
	118, 1332,
	119, 1332,
	120, 1332,
	121, 1332,
	123, 1332,
	124, 1332,
	125, 1332,
	126, 1332,
	128, 1332,
	129, 1332,
	130, 1332,
	132, 1332,
	133, 1332,
	134, 1332,
	136, 1332,
	137, 1332,
	138, 1332,
	141, 1332,
	142, 1332,
	143, 1332,
	145, 1332,
	146, 1332,
	148, 1332,
	149, 1332,
	150, 1332,
	152, 1332,
	153, 1332,
	154, 1332,
	155, 1332,
	156, 1332,
	157, 1332,
	158, 1332,
	159, 1332,
	160, 1332,
	161, 1332,
	162, 1332,
	163, 1332,
	164, 1332,
	165, 1332,
	166, 1332,
	167, 1332,
	175, 1332,
	176, 1332,
	177, 1332,
	178, 1332,
	182, 1332,
	184, 1332,
	185, 1332,
	186, 1332,
	190, 1332,
	191, 1332,
	192, 1332,
	193, 1332,
	194, 1332,
	195, 1332,
	196, 1332,
	197, 1332,
	198, 1332,
	199, 1332,
	200, 1332,
	201, 1332,
	202, 1332,
	203, 1332,
	205, 1332,
	206, 1332,
	208, 1332,
	209, 1332,
	211, 1332,
	212, 1332,
	213, 1332,
	214, 1332,
	215, 1332,
	216, 1332,
	217, 1332,
	218, 1332,
	219, 1332,
	221, 1332,
	222, 1332,
	224, 1332,
	225, 1332,
	226, 1332,
	227, 1332,
	228, 1332,
	233, 1332,
	234, 1332,
	235, 1332,
	236, 1332,
	239, 1332,
	240, 1332,
	241, 1332,
	243, 1332,
	245, 1332,
	246, 1332,
	248, 1332,
	250, 1332,
	251, 1332,
	252, 1332,
	254, 1332,
	258, 1332,
	259, 1332,
	260, 1332,
	261, 1332,
	262, 1332,
	263, 1332,
	265, 1332,
	266, 1332,
	267, 1332,
	269, 1332,
	270, 1332,
	272, 1332,
	273, 1332,
	276, 1332,
	277, 1332,
	278, 1332,
	279, 1332,
	280, 1332,
	281, 1332,
	282, 1332,
	285, 1332,
	286, 1332,
	287, 1332,
	288, 1332,
	290, 1332,
	291, 1332,
	292, 1332,
	293, 1332,
	294, 1332,
	295, 1332,
	296, 1332,
	297, 1332,
	298, 1332,
	299, 1332,
	300, 1332,
	301, 1332,
	302, 1332,
	303, 1332,
	304, 1332,
	305, 1332,
	306, 1332,
	307, 1332,
	308, 1332,
	309, 1332,
	310, 1332,
	311, 1332,
	313, 1332,
	315, 1332,
	316, 1332,
	317, 1332,
	318, 1332,
	319, 1332,
	320, 1332,
	321, 1332,
	322, 1332,
	323, 1332,
	324, 1332,
	325, 1332,
	326, 1332,
	327, 1332,
	328, 1332,
	329, 1332,
	331, 1332,
	332, 1332,
	336, 1332,
	337, 1332,
	339, 1332,
	340, 1332,
	341, 1332,
	342, 1332,
	343, 1332,
	346, 1332,
	348, 1332,
	350, 1332,
	351, 1332,
	352, 1332,
	355, 1332,
	356, 1332,
	357, 1332,
	359, 1332,
	361, 1332,
	362, 1332,
	363, 1332,
	364, 1332,
	365, 1332,
	366, 1332,
	367, 1332,
	368, 1332,
	369, 1332,
	370, 1332,
	371, 1332,
	372, 1332,
	373, 1332,
	375, 1332,
	376, 1332,
	377, 1332,
	378, 1332,
	379, 1332,
	380, 1332,
	381, 1332,
	382, 1332,
	383, 1332,
	384, 1332,
	385, 1332,
	386, 1332,
	387, 1332,
	388, 1332,
	389, 1332,
	391, 1332,
	392, 1332,
	394, 1332,
	395, 1332,
	396, 1332,
	397, 1332,
	398, 1332,
	399, 1332,
	400, 1332,
	401, 1332,
	402, 1332,
	403, 1332,
	404, 1332,
	405, 1332,
	406, 1332,
	408, 1332,
	410, 1332,
	411, 1332,
	412, 1332,
	418, 1332,
	420, 1332,
	421, 1332,
	422, 1332,
	423, 1332,
	424, 1332,
	425, 1332,
	426, 1332,
	427, 1332,
	428, 1332,
	429, 1332,
	431, 1332,
	432, 1332,
	433, 1332,
	435, 1332,
	436, 1332,
	437, 1332,
	438, 1332,
	439, 1332,
	440, 1332,
	441, 1332,
	443, 1332,
	444, 1332,
	445, 1332,
	446, 1332,
	447, 1332,
	448, 1332,
	449, 1332,
	450, 1332,
	451, 1332,
	452, 1332,
	453, 1332,
	454, 1332,
	456, 1332,
	457, 1332,
	458, 1332,
	459, 1332,
	460, 1332,
	461, 1332,
	463, 1332,
	464, 1332,
	465, 1332,
	466, 1332,
	467, 1332,
	468, 1332,
	470, 1332,
	471, 1332,
	472, 1332,
	473, 1332,
	474, 1332,
	475, 1332,
	476, 1332,
	477, 1332,
	479, 1332,
	481, 1332,
	482, 1332,
	483, 1332,
	484, 1332,
	485, 1332,
	486, 1332,
	487, 1332,
	488, 1332,
	489, 1332,
	490, 1332,
	491, 1332,
	492, 1332,
	493, 1332,
	494, 1332,
	495, 1332,
	496, 1332,
	498, 1332,
	499, 1332,
	501, 1332,
	502, 1332,
	504, 1332,
	505, 1332,
	506, 1332,
	507, 1332,
	508, 1332,
	509, 1332,
	510, 1332,
	511, 1332,
	512, 1332,
	514, 1332,
	515, 1332,
	516, 1332,
	517, 1332,
	518, 1332,
	520, 1332,
	522, 1332,
	523, 1332,
	524, 1332,
	525, 1332,
	526, 1332,
	527, 1332,
	529, 1332,
	530, 1332,
	531, 1332,
	532, 1332,
	534, 1332,
	535, 1332,
	538, 1332,
	539, 1332,
	540, 1332,
	541, 1332,
	542, 1332,
	543, 1332,
	544, 1332,
	546, 1332,
	549, 1332,
	550, 1332,
	551, 1332,
	552, 1332,
	553, 1332,
	554, 1332,
	556, 1332,
	557, 1332,
	558, 1332,
	559, 1332,
	560, 1332,
	561, 1332,
	566, 1332,
	567, 1332,
	568, 1332,
	569, 1332,
	570, 1332,
	571, 1332,
	-2, 0,
	-1, 1636,
	1, 555,
	600, 555,
	602, 555,
	604, 555,
	-2, 1567,
	-1, 1639,
	4, 2769,
	11, 2769,
	12, 2769,
	14, 2769,
	15, 2769,
	16, 2769,
	17, 2769,
	18, 2769,
	19, 2769,
	21, 2769,
	22, 2769,
	23, 2769,
	24, 2769,
	25, 2769,
	26, 2769,
	27, 2769,
	29, 2769,
	30, 2769,
	33, 2769,
	34, 2769,
	36, 2769,
	38, 2769,
	41, 2769,
	42, 2769,
	44, 2769,
	45, 2769,
	46, 2769,
	47, 2769,
	48, 2769,
	49, 2769,
	50, 2769,
	51, 2769,
	53, 2769,
	54, 2769,
	55, 2769,
	56, 2769,
	58, 2769,
	59, 2769,
	60, 2769,
	61, 2769,
	62, 2769,
	63, 2769,
	64, 2769,
	67, 2769,
	68, 2769,
	69, 2769,
	70, 2769,
	71, 2769,
	73, 2769,
	74, 2769,
	75, 2769,
	76, 2769,
	79, 2769,
	80, 2769,
	81, 2769,
	82, 2769,
	83, 2769,
	84, 2769,
	85, 2769,
	86, 2769,
	88, 2769,
	89, 2769,
	90, 2769,
	91, 2769,
	92, 2769,
	94, 2769,
	95, 2769,
	96, 2769,
	97, 2769,
	98, 2769,
	99, 2769,
	100, 2769,
	101, 2769,
	103, 2769,
	104, 2769,
	105, 2769,
	106, 2769,
	107, 2769,
	108, 2769,
	109, 2769,
	117, 2769,
	118, 2769,
	119, 2769,
	120, 2769,
	121, 2769,
	123, 2769,
	124, 2769,
	125, 2769,
	126, 2769,
	128, 2769,
	129, 2769,
	130, 2769,
	132, 2769,
	133, 2769,
	134, 2769,
	136, 2769,
	137, 2769,
	138, 2769,
	141, 2769,
	142, 2769,
	143, 2769,
	145, 2769,
	146, 2769,
	148, 2769,
	149, 2769,
	150, 2769,
	152, 2769,
	153, 2769,
	154, 2769,
	155, 2769,
	156, 2769,
	157, 2769,
	158, 2769,
	159, 2769,
	160, 2769,
	161, 2769,
	162, 2769,
	163, 2769,
	164, 2769,
	165, 2769,
	166, 2769,
	167, 2769,
	171, 2769,
	172, 2769,
	173, 2769,
	174, 2769,
	175, 2769,
	176, 2769,
	177, 2769,
	178, 2769,
	181, 2769,
	182, 2769,
	184, 2769,
	185, 2769,
	186, 2769,
	189, 2769,
	190, 2769,
	191, 2769,
	192, 2769,
	193, 2769,
	194, 2769,
	195, 2769,
	196, 2769,
	197, 2769,
	198, 2769,
	199, 2769,
	200, 2769,
	201, 2769,
	202, 2769,
	203, 2769,
	205, 2769,
	206, 2769,
	208, 2769,
	209, 2769,
	211, 2769,
	212, 2769,
	213, 2769,
	214, 2769,
	215, 2769,
	216, 2769,
	217, 2769,
	218, 2769,
	219, 2769,
	220, 2769,
	221, 2769,
	222, 2769,
	223, 2769,
	224, 2769,
	225, 2769,
	226, 2769,
	227, 2769,
	228, 2769,
	230, 2769,
	231, 2769,
	233, 2769,
	234, 2769,
	235, 2769,
	236, 2769,
	238, 2769,
	239, 2769,
	240, 2769,
	241, 2769,
	243, 2769,
	245, 2769,
	246, 2769,
	247, 2769,
	248, 2769,
	249, 2769,
	250, 2769,
	251, 2769,
	252, 2769,
	253, 2769,
	254, 2769,
	256, 2769,
	257, 2769,
	258, 2769,
	259, 2769,
	260, 2769,
	261, 2769,
	262, 2769,
	263, 2769,
	265, 2769,
	266, 2769,
	267, 2769,
	269, 2769,
	270, 2769,
	271, 2769,
	272, 2769,
	273, 2769,
	274, 2769,
	276, 2769,
	277, 2769,
	278, 2769,
	279, 2769,
	280, 2769,
	281, 2769,
	282, 2769,
	285, 2769,
	286, 2769,
	287, 2769,
	288, 2769,
	289, 2769,
	290, 2769,
	291, 2769,
	292, 2769,
	293, 2769,
	294, 2769,
	295, 2769,
	296, 2769,
	297, 2769,
	298, 2769,
	299, 2769,
	300, 2769,
	301, 2769,
	302, 2769,
	303, 2769,
	304, 2769,
	305, 2769,
	306, 2769,
	307, 2769,
	308, 2769,
	309, 2769,
	310, 2769,
	311, 2769,
	313, 2769,
	314, 2769,
	315, 2769,
	316, 2769,
	317, 2769,
	318, 2769,
	319, 2769,
	320, 2769,
	321, 2769,
	322, 2769,
	323, 2769,
	324, 2769,
	325, 2769,
	326, 2769,
	327, 2769,
	328, 2769,
	329, 2769,
	331, 2769,
	332, 2769,
	335, 2769,
	336, 2769,
	337, 2769,
	339, 2769,
	340, 2769,
	341, 2769,
	342, 2769,
	343, 2769,
	346, 2769,
	350, 2769,
	351, 2769,
	352, 2769,
	353, 2769,
	355, 2769,
	356, 2769,
	357, 2769,
	359, 2769,
	361, 2769,
	362, 2769,
	363, 2769,
	364, 2769,
	365, 2769,
	366, 2769,
	367, 2769,
	368, 2769,
	369, 2769,
	370, 2769,
	371, 2769,
	372, 2769,
	373, 2769,
	375, 2769,
	376, 2769,
	377, 2769,
	378, 2769,
	379, 2769,
	380, 2769,
	381, 2769,
	382, 2769,
	383, 2769,
	384, 2769,
	385, 2769,
	386, 2769,
	387, 2769,
	388, 2769,
	389, 2769,
	391, 2769,
	392, 2769,
	394, 2769,
	395, 2769,
	396, 2769,
	397, 2769,
	398, 2769,
	399, 2769,
	400, 2769,
	401, 2769,
	402, 2769,
	403, 2769,
	404, 2769,
	405, 2769,
	406, 2769,
	408, 2769,
	410, 2769,
	411, 2769,
	412, 2769,
	418, 2769,
	419, 2769,
	420, 2769,
	421, 2769,
	422, 2769,
	423, 2769,
	424, 2769,
	425, 2769,
	426, 2769,
	427, 2769,
	428, 2769,
	429, 2769,
	431, 2769,
	432, 2769,
	433, 2769,
	434, 2769,
	435, 2769,
	436, 2769,
	437, 2769,
	438, 2769,
	439, 2769,
	440, 2769,
	441, 2769,
	442, 2769,
	443, 2769,
	444, 2769,
	445, 2769,
	446, 2769,
	447, 2769,
	448, 2769,
	449, 2769,
	450, 2769,
	451, 2769,
	452, 2769,
	453, 2769,
	454, 2769,
	456, 2769,
	457, 2769,
	458, 2769,
	459, 2769,
	460, 2769,
	461, 2769,
	463, 2769,
	464, 2769,
	465, 2769,
	466, 2769,
	467, 2769,
	468, 2769,
	469, 2769,
	470, 2769,
	471, 2769,
	472, 2769,
	473, 2769,
	474, 2769,
	475, 2769,
	476, 2769,
	477, 2769,
	479, 2769,
	481, 2769,
	482, 2769,
	483, 2769,
	484, 2769,
	485, 2769,
	486, 2769,
	487, 2769,
	488, 2769,
	489, 2769,
	490, 2769,
	491, 2769,
	492, 2769,
	493, 2769,
	494, 2769,
	495, 2769,
	496, 2769,
	498, 2769,
	499, 2769,
	500, 2769,
	501, 2769,
	502, 2769,
	504, 2769,
	505, 2769,
	506, 2769,
	507, 2769,
	508, 2769,
	509, 2769,
	510, 2769,
	511, 2769,
	512, 2769,
	514, 2769,
	515, 2769,
	516, 2769,
	517, 2769,
	518, 2769,
	520, 2769,
	522, 2769,
	523, 2769,
	524, 2769,
	525, 2769,
	526, 2769,
	527, 2769,
	529, 2769,
	530, 2769,
	531, 2769,
	532, 2769,
	534, 2769,
	535, 2769,
	538, 2769,
	539, 2769,
	540, 2769,
	541, 2769,
	542, 2769,
	543, 2769,
	544, 2769,
	546, 2769,
	549, 2769,
	550, 2769,
	551, 2769,
	552, 2769,
	553, 2769,
	554, 2769,
	556, 2769,
	557, 2769,
	558, 2769,
	559, 2769,
	560, 2769,
	561, 2769,
	566, 2769,
	567, 2769,
	568, 2769,
	569, 2769,
	570, 2769,
	571, 2769,
	572, 2769,
	574, 2769,
	582, 2769,
	583, 2769,
	584, 2769,
	585, 2769,
	586, 2769,
	587, 2769,
	589, 2769,
	590, 2769,
	591, 2769,
	592, 2769,
	593, 2769,
	594, 2769,
	595, 2769,
	596, 2769,
	597, 2769,
	599, 2769,
	602, 2769,
	603, 2769,
	605, 2769,
	606, 2769,
	-2, 0,
	-1, 1644,
	188, 2650,
	519, 2650,
	584, 2650,
	603, 2650,
	-2, 0,
	-1, 1697,
	396, 890,
	461, 890,
	502, 890,
	524, 890,
	-2, 0,
	-1, 1708,
	1, 1404,
	600, 1404,
	602, 1404,
	604, 1404,
	-2, 0,
	-1, 1725,
	1, 885,
	600, 885,
	602, 885,
	604, 885,
	-2, 0,
	-1, 1726,
	1, 929,
	600, 929,
	602, 929,
	604, 929,
	-2, 0,
	-1, 1727,
	1, 937,
	600, 937,
	602, 937,
	604, 937,
	-2, 0,
	-1, 1730,
	1, 894,
	600, 894,
	602, 894,
	604, 894,
	-2, 0,
	-1, 1732,
	1, 900,
	600, 900,
	602, 900,
	604, 900,
	-2, 0,
	-1, 1735,
	1, 896,
	600, 896,
	602, 896,
	604, 896,
	-2, 0,
	-1, 1740,
	1, 910,
	600, 910,
	602, 910,
	604, 910,
	-2, 0,
	-1, 1771,
	1, 2633,
	600, 2633,
	602, 2633,
	603, 2633,
	604, 2633,
	-2, 0,
	-1, 1775,
	1, 983,
	600, 983,
	602, 983,
	604, 983,
	-2, 0,
	-1, 1792,
	1, 1454,
	604, 1454,
	-2, 1459,
	-1, 1795,
	170, 1610,
	183, 1610,
	275, 1610,
	344, 1610,
	-2, 1548,
	-1, 1895,
	151, 1569,
	170, 1569,
	183, 1569,
	242, 1569,
	275, 1569,
	344, 1569,
	354, 1569,
	536, 1569,
	-2, 2020,
	-1, 1956,
	602, 2195,
	-2, 0,
	-1, 1991,
	151, 1569,
	170, 1569,
	183, 1569,
	242, 1569,
	275, 1569,
	344, 1569,
	354, 1569,
	536, 1569,
	-2, 1702,
	-1, 2030,
	519, 2647,
	603, 2647,
	606, 2647,
	-2, 0,
	-1, 2047,
	601, 1843,
	-2, 1831,
	-1, 2079,
	188, 2647,
	603, 2647,
	606, 2647,
	-2, 0,
	-1, 2121,
	1, 696,
	604, 696,
	-2, 1459,
	-1, 2260,
	223, 258,
	-2, 2343,
	-1, 2261,
	223, 259,
	-2, 312,
	-1, 2372,
	1, 887,
	600, 887,
	602, 887,
	604, 887,
	-2, 0,
	-1, 2373,
	1, 931,
	600, 931,
	602, 931,
	604, 931,
	-2, 0,
	-1, 2374,
	1, 939,
	600, 939,
	602, 939,
	604, 939,
	-2, 0,
	-1, 2375,
	1, 985,
	600, 985,
	602, 985,
	604, 985,
	-2, 0,
	-1, 2416,
	1, 912,
	600, 912,
	602, 912,
	604, 912,
	-2, 0,
	-1, 2435,
	1, 968,
	600, 968,
	602, 968,
	604, 968,
	-2, 0,
	-1, 2482,
	440, 1637,
	441, 1637,
	-2, 1876,
	-1, 2513,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1896,
	-1, 2514,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1897,
	-1, 2515,
	95, 0,
	256, 0,
	257, 0,
	586, 0,
	587, 0,
	-2, 1898,
	-1, 2516,
	95, 0,
	256, 0,
	257, 0,
	586, 0,
	587, 0,
	-2, 1899,
	-1, 2517,
	95, 0,
	256, 0,
	257, 0,
	586, 0,
	587, 0,
	-2, 1900,
	-1, 2518,
	95, 0,
	256, 0,
	257, 0,
	586, 0,
	587, 0,
	-2, 1901,
	-1, 2519,
	95, 0,
	256, 0,
	257, 0,
	586, 0,
	587, 0,
	-2, 1902,
	-1, 2520,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1903,
	-1, 2532,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1915,
	-1, 2533,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1916,
	-1, 2534,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1917,
	-1, 2538,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1924,
	-1, 2544,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1928,
	-1, 2546,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1936,
	-1, 2547,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1937,
	-1, 2548,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1938,
	-1, 2549,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1939,
	-1, 2723,
	5, 2347,
	188, 2206,
	601, 2344,
	-2, 2335,
	-1, 2724,
	188, 2207,
	-2, 2720,
	-1, 2725,
	188, 2208,
	-2, 2537,
	-1, 2726,
	188, 2209,
	-2, 2417,
	-1, 2727,
	188, 2210,
	-2, 2474,
	-1, 2728,
	188, 2211,
	-2, 2522,
	-1, 2729,
	188, 2212,
	-2, 2645,
	-1, 2730,
	188, 2213,
	-2, 2003,
	-1, 2801,
	1, 1703,
	2, 1703,
	106, 1703,
	151, 1703,
	170, 1703,
	183, 1703,
	189, 1703,
	207, 1703,
	210, 1703,
	238, 1703,
	242, 1703,
	253, 1703,
	271, 1703,
	275, 1703,
	314, 1703,
	344, 1703,
	348, 1703,
	354, 1703,
	430, 1703,
	434, 1703,
	536, 1703,
	547, 1703,
	563, 1703,
	564, 1703,
	565, 1703,
	575, 1703,
	600, 1703,
	602, 1703,
	604, 1703,
	606, 1703,
	-2, 1702,
	-1, 2814,
	601, 2316,
	-2, 2330,
	-1, 2816,
	1, 329,
	563, 329,
	-2, 1596,
	-1, 2846,
	601, 1842,
	-2, 1832,
	-1, 3031,
	1, 1307,
	425, 1271,
	463, 1271,
	578, 1271,
	600, 1307,
	602, 1307,
	604, 1307,
	-2, 1596,
	-1, 3218,
	349, 1640,
	-2, 2759,
	-1, 3219,
	349, 1641,
	-2, 2630,
	-1, 3223,
	440, 2272,
	441, 2272,
	-2, 2001,
	-1, 3224,
	440, 2276,
	441, 2276,
	-2, 2002,
	-1, 3225,
	440, 2273,
	441, 2273,
	-2, 2001,
	-1, 3226,
	440, 2277,
	441, 2277,
	-2, 2002,
	-1, 3239,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1926,
	-1, 3240,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1930,
	-1, 3246,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1932,
	-1, 3472,
	1, 691,
	600, 691,
	602, 691,
	604, 691,
	-2, 1459,
	-1, 3636,
	43, 2307,
	-2, 1055,
	-1, 3641,
	1, 1307,
	600, 1307,
	602, 1307,
	604, 1307,
	-2, 1596,
	-1, 3754,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1934,
	-1, 3761,
	247, 0,
	249, 0,
	335, 0,
	-2, 1953,
	-1, 3829,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1982,
	-1, 3830,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1983,
	-1, 3831,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1984,
	-1, 3835,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1988,
	-1, 3836,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1989,
	-1, 3837,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1990,
	-1, 3885,
	601, 2317,
	-2, 2331,
	-1, 4060,
	603, 2876,
	-2, 1522,
	-1, 4122,
	247, 0,
	249, 0,
	335, 0,
	-2, 1954,
	-1, 4125,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1957,
	-1, 4126,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1959,
	-1, 4227,
	603, 2332,
	-2, 1342,
	-1, 4382,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1958,
	-1, 4383,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1960,
	-1, 4394,
	247, 0,
	-2, 1993,
	-1, 4582,
	247, 0,
	-2, 1994,
	-1, 4783,
	50, 0,
	220, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 2723,
}

const sqlPrivate = 57344

const sqlLast = 134678

var sqlAct = [...]int{
	275, 4776, 3625, 4979, 4900, 4887, 3116, 3103, 3377, 4652,
	4444, 4841, 4764, 4775, 4782, 2908, 4616, 4793, 4916, 2170,
	4624, 1534, 4673, 4729, 2257, 3624, 4648, 4105, 4223, 4751,
	4794, 4504, 4732, 4535, 4795, 4709, 4854, 2952, 4426, 4511,
	4489, 1343, 1272, 2756, 1261, 3794, 4336, 4586, 4331, 4272,
	4297, 4449, 3073, 4371, 4781, 3746, 4403, 2977, 2492, 4052,
	2334, 2021, 3658, 4318, 3980, 4520, 4044, 4311, 712, 4224,
	1561, 1336, 4204, 4549, 4320, 823, 3232, 2346, 1092, 2090,
	2561, 4025, 1804, 4341, 3620, 3652, 3552, 4009, 4007, 2990,
	1662, 2500, 2103, 3495, 2178, 2307, 2493, 2034, 3125, 783,
	3699, 1404, 1997, 823, 4399, 3140, 1083, 3701, 3127, 3092,
	3062, 3602, 3601, 3888, 1338, 3609, 3430, 3423, 3383, 3400,
	3392, 4104, 4161, 723, 3360, 898, 4, 1497, 902, 2344,
	3087, 3135, 3089, 1091, 182, 3104, 3381, 3118, 3124, 1966,
	2246, 2348, 3038, 2244, 2189, 3514, 4888, 2910, 3855, 2794,
	2205, 3359, 2497, 4587, 1903, 2639, 1942, 1873, 2641, 3216,
	2574, 1504, 1341, 893, 3490, 2796, 3066, 818, 2240, 1600,
	2221, 111, 3134, 2245, 779, 3007, 2228, 1385, 1142, 1252,
	2951, 2158, 3074, 1138, 1792, 2162, 2015, 1315, 2630, 2101,
	1705, 2774, 2558, 2481, 2464, 1147, 1346, 1967, 2462, 1986,
	1329, 756, 2148, 3622, 2829, 1637, 3097, 1660, 2294, 1326,
	820, 1603, 2035, 824, 2933, 699, 825, 2753, 1563, 721,
	971, 4674, 1372, 2793, 2828, 2633, 3128, 4001, 182, 269,
	1255, 1149, 2896, 2783, 2764, 1983, 1234, 1976, 2685, 2611,
	2719, 1805, 1269, 1887, 191, 1806, 764, 2463, 2465, 1740,
	1725, 775, 1628, 1937, 192, 2254, 1251, 2293, 268, 2320,
	1635, 1529, 2177, 4842, 4901, 2486, 1123, 716, 1232, 1257,
	44, 43, 41, 32, 267, 813, 30, 28, 1811, 3269,
	713, 1791, 724, 992, 3263, 739, 1540, 163, 874, 3869,
	875, 3870, 2092, 3379, 4822, 73, 2092, 46, 45, 4419,
	2092, 4185, 1087, 1671, 829, 3330, 3331, 2092, 3668, 2092,
	4992, 1087, 74, 919, 2773, 158, 2092, 4982, 4966, 4965,
	4955, 3677, 2773, 2773, 2266, 1145, 4936, 4934, 79, 3677,
	4448, 4448, 829, 832, 4873, 2113, 3667, 4830, 2266, 67,
	4819, 4831, 2113, 4817, 2773, 4814, 48, 2773, 160, 4815,
	4811, 4779, 4778, 4777, 4812, 2266, 2266, 3145, 4772, 4771,
	1249, 832, 3145, 3145, 1144, 1088, 47, 4762, 88, 4760,
	4757, 4448, 1731, 4448, 4523, 4727, 1533, 4698, 4691, 4448,
	3345, 2837, 2773, 4690, 4685, 4684, 4678, 2773, 4448, 4448,
	2266, 4416, 3440, 4644, 4584, 50, 68, 4288, 2837, 1235,
	1235, 4566, 4563, 4560, 51, 4089, 2266, 4448, 4513, 57,
	4467, 1077, 4514, 161, 2266, 4466, 4455, 3457, 4454, 2266,
	2266, 49, 4448, 110, 1381, 1267, 4447, 1068, 94, 107,
	4448, 4410, 4384, 1381, 2857, 2266, 2837, 1067, 3330, 3331,
	4360, 4349, 4267, 4250, 3145, 3677, 2773, 2773, 4124, 4068,
	4062, 1286, 2837, 3694, 3694, 2345, 4023, 3880, 3878, 3862,
	4024, 3881, 3879, 2773, 3859, 3778, 1238, 3774, 1239, 2266,
	52, 2773, 1082, 3693, 3455, 3336, 3684, 3694, 2110, 2110,
	3685, 3376, 3371, 3370, 1542, 2773, 2773, 2773, 95, 2266,
	3321, 3319, 3330, 3331, 3322, 3320, 3311, 3309, 3280, 3278,
	3312, 2773, 2773, 1236, 3144, 3279, 3114, 3113, 3145, 2880,
	2330, 2330, 2836, 2773, 2833, 2826, 2837, 3231, 2818, 2773,
	2772, 2113, 2266, 2636, 2773, 2766, 2773, 2329, 1293, 2113,
	94, 2330, 4699, 4588, 4579, 4567, 4523, 3145, 1287, 3859,
	2765, 4329, 4288, 2110, 1287, 4251, 4089, 3685, 2980, 2182,
	2895, 2127, 2091, 1542, 2773, 2113, 2107, 3068, 2265, 3000,
	2893, 1962, 1528, 3268, 3963, 3749, 3723, 1264, 1984, 2233,
	2810, 3669, 1707, 2809, 2808, 2807, 2806, 1240, 1237, 1076,
	1075, 1819, 1820, 3346, 239, 1074, 1073, 1863, 1864, 1865,
	3670, 4343, 1072, 1071, 1070, 1066, 1065, 1064, 1063, 1062,
	239, 1819, 1820, 1061, 1850, 1060, 1263, 1059, 3336, 1058,
	3189, 1822, 1057, 1056, 2637, 1055, 1054, 1053, 1052, 1051,
	1869, 1050, 1049, 1031, 1850, 969, 968, 967, 966, 965,
	964, 1822, 241, 963, 962, 961, 99, 1875, 3330, 3331,
	960, 3348, 3349, 3350, 959, 958, 1821, 957, 241, 956,
	955, 954, 953, 952, 53, 2093, 1841, 1875, 1872, 2093,
	4120, 951, 3336, 2093, 950, 1838, 1821, 949, 948, 56,
	2093, 947, 2093, 946, 59, 945, 1841, 944, 943, 2093,
	942, 240, 1819, 1820, 69, 1838, 941, 940, 939, 938,
	58, 190, 102, 937, 936, 106, 2638, 240, 2635, 54,
	935, 934, 923, 162, 922, 921, 917, 916, 909, 908,
	233, 55, 1822, 3345, 907, 4179, 3346, 2110, 892, 234,
	891, 239, 848, 847, 1121, 1653, 3667, 3330, 3331, 62,
	193, 846, 845, 4136, 153, 836, 3347, 835, 834, 833,
	4118, 1844, 1845, 1846, 1847, 799, 193, 1821, 790, 159,
	789, 1827, 788, 770, 263, 1541, 239, 1348, 1147, 262,
	261, 1844, 1845, 1846, 1847, 260, 259, 258, 257, 241,
	3346, 1827, 256, 255, 254, 253, 252, 251, 250, 1554,
	249, 248, 247, 246, 245, 1147, 1147, 1147, 244, 243,
	1860, 1872, 242, 1870, 3903, 157, 3874, 3695, 3426, 4345,
	1849, 1851, 3291, 1407, 241, 3274, 3265, 1407, 3336, 3169,
	194, 3048, 1533, 3374, 1348, 2841, 2815, 2800, 240, 2668,
	1849, 1851, 2454, 239, 1548, 239, 1836, 1837, 2156, 1987,
	2666, 233, 2652, 2650, 2113, 1287, 153, 3082, 2867, 1147,
	234, 1147, 2091, 1147, 1858, 1872, 1836, 1837, 4804, 2110,
	1566, 2107, 1827, 240, 2640, 3375, 1376, 1818, 2457, 1842,
	2112, 2337, 2010, 1389, 1390, 1391, 233, 193, 1914, 3347,
	3, 241, 1786, 241, 3352, 234, 1348, 1536, 1393, 1842,
	1512, 1271, 4803, 3341, 3339, 3340, 3332, 3333, 3334, 3335,
	3337, 3338, 2110, 4800, 1945, 4780, 1566, 3336, 4759, 4659,
	1507, 1944, 193, 1566, 1905, 4591, 1542, 4576, 4398, 4570,
	4568, 1945, 1147, 4439, 1147, 4350, 3346, 4328, 1944, 1566,
	240, 4191, 240, 3347, 4159, 4158, 4152, 1147, 1948, 1147,
	1532, 4151, 1733, 233, 1872, 233, 1542, 4150, 1320, 1323,
	4143, 3100, 234, 2765, 234, 1943, 1287, 2336, 4142, 1609,
	1612, 4140, 1368, 4135, 1872, 4132, 4131, 4022, 4028, 1333,
	3907, 3906, 3905, 1370, 3884, 3850, 1265, 3849, 3848, 193,
	2634, 193, 3447, 3770, 3765, 1517, 3421, 1566, 3367, 3358,
	3329, 1400, 3326, 1494, 1499, 3325, 3323, 3318, 3317, 1848,
	3316, 1872, 3313, 1553, 3310, 3290, 2408, 1147, 3273, 1675,
	1147, 2850, 4417, 3266, 3264, 3346, 1502, 1657, 3115, 1848,
	1519, 73, 1843, 1354, 1912, 1090, 3341, 3339, 3340, 3332,
	3333, 3334, 3335, 3337, 3338, 2801, 1362, 2623, 74, 1337,
	182, 182, 1843, 1818, 1905, 1872, 1598, 1248, 1547, 1861,
	1531, 2310, 1907, 1530, 79, 3330, 3331, 2273, 2271, 1817,
	4986, 4926, 4344, 4925, 4029, 4889, 829, 4840, 4838, 1676,
	1640, 1642, 1273, 1906, 3961, 1904, 3796, 1088, 4719, 3347,
	1874, 4651, 1605, 3332, 3333, 3334, 3335, 3337, 3338, 1500,
	1872, 1615, 1511, 1337, 88, 832, 4635, 3084, 4632, 4631,
	1874, 4630, 4610, 4609, 4607, 4590, 4589, 4564, 1147, 1147,
	1147, 1147, 1147, 1147, 1147, 1147, 4548, 4547, 2564, 4533,
	4530, 4529, 4524, 1376, 1638, 4463, 1376, 4434, 4396, 4379,
	4378, 4357, 4356, 3372, 4314, 900, 4289, 4178, 3330, 3331,
	4157, 1147, 4090, 3330, 3331, 4082, 4079, 1147, 3949, 110,
	3948, 3931, 1859, 3930, 94, 107, 3928, 1631, 3865, 3853,
	3760, 1892, 1337, 1337, 3696, 1862, 1839, 1835, 3347, 1832,
	1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829, 1819, 1820,
	3678, 1629, 3644, 3569, 1796, 3527, 1839, 1835, 239, 1832,
	1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829, 3494, 3449,
	3295, 4593, 1749, 1681, 3294, 2570, 3289, 3255, 1822, 1652,
	3061, 1951, 1950, 1949, 95, 1819, 1820, 1946, 239, 3342,
	3343, 3344, 1790, 4029, 1670, 3336, 3341, 3339, 3340, 3332,
	3333, 3334, 3335, 3337, 3338, 1938, 241, 1936, 1634, 2848,
	2847, 1894, 239, 1821, 2812, 1822, 2805, 2771, 2648, 1891,
	2009, 1965, 1147, 1147, 1147, 1960, 1959, 1958, 1147, 1957,
	1956, 1955, 1954, 1953, 1952, 1269, 241, 1269, 1933, 1932,
	1931, 1930, 1698, 1823, 1824, 1825, 1826, 1828, 1829, 239,
	1821, 1929, 1407, 1928, 1927, 240, 1926, 239, 1964, 1925,
	241, 1734, 1924, 1147, 1923, 1922, 823, 1348, 233, 1921,
	3083, 1973, 2052, 823, 1348, 2013, 1348, 234, 3336, 1797,
	1920, 1919, 1088, 3336, 1918, 240, 3339, 3340, 3332, 3333,
	3334, 3335, 3337, 3338, 1907, 1893, 1890, 241, 233, 1885,
	1793, 1361, 1291, 3346, 193, 241, 2025, 234, 2031, 240,
	1282, 1801, 1800, 4592, 4317, 2080, 1068, 2082, 1827, 4187,
	4128, 3902, 233, 3877, 3868, 3277, 1067, 1795, 2839, 2803,
	4189, 234, 99, 1947, 193, 3901, 1348, 1906, 3673, 3445,
	2338, 1888, 1147, 2147, 1814, 1815, 240, 2005, 1386, 1388,
	4923, 2020, 4915, 4253, 240, 1994, 3330, 3331, 193, 233,
	2978, 4633, 1970, 1971, 4525, 4516, 1147, 233, 234, 4515,
	2147, 4348, 182, 4291, 1407, 4290, 234, 2115, 1872, 1235,
	2097, 1987, 2172, 2099, 4252, 2119, 3418, 190, 102, 2104,
	4181, 106, 4521, 2106, 4796, 3099, 4095, 2147, 2109, 2667,
	4094, 4093, 2145, 193, 4092, 4091, 3872, 3871, 1088, 3698,
	2665, 3697, 2651, 2649, 1387, 3680, 3679, 239, 1267, 4869,
	1267, 1939, 1940, 1376, 4867, 901, 1381, 3747, 4032, 239,
	153, 1788, 239, 3946, 1819, 1820, 2018, 1995, 1381, 2118,
	239, 2019, 3975, 2216, 2154, 1382, 239, 1381, 239, 2956,
	2636, 1697, 1945, 3315, 3314, 2014, 3347, 1850, 1633, 1944,
	3237, 1872, 4571, 4569, 1822, 241, 2938, 1992, 1985, 1384,
	3627, 3496, 3626, 1916, 1928, 1928, 2026, 241, 4852, 2335,
	241, 3005, 1963, 2075, 4512, 1706, 4826, 2095, 241, 2230,
	1875, 157, 4438, 2133, 241, 829, 241, 4807, 1634, 1821,
	1750, 2182, 829, 2046, 1989, 4792, 194, 1566, 1566, 2004,
	2003, 2002, 2000, 3610, 240, 1999, 1998, 1407, 3330, 3331,
	2247, 3348, 3349, 3350, 832, 1047, 240, 233, 2364, 240,
	2121, 832, 3689, 1511, 3561, 2032, 234, 240, 3141, 233,
	4119, 2637, 233, 240, 3446, 240, 1707, 2117, 234, 2248,
	233, 234, 4036, 4019, 4801, 3977, 233, 3972, 233, 234,
	1264, 3954, 1264, 193, 1378, 234, 3720, 234, 3470, 2342,
	1048, 4400, 3379, 3798, 2631, 193, 3283, 2212, 193, 2220,
	2986, 1511, 2225, 2846, 2311, 1961, 193, 2935, 3530, 1941,
	1913, 3618, 193, 3345, 193, 2304, 2215, 2258, 2263, 1263,
	1608, 1263, 1524, 1357, 1827, 3340, 3332, 3333, 3334, 3335,
	3337, 3338, 1319, 4816, 4625, 4813, 1247, 3663, 3923, 4332,
	2994, 4802, 1566, 2638, 1566, 2635, 1566, 4726, 4603, 2997,
	2150, 2140, 4458, 2992, 4430, 3499, 3941, 3122, 3096, 3593,
	4870, 4461, 2985, 4871, 1566, 1566, 4457, 1383, 4436, 2934,
	3741, 3990, 4485, 1849, 1851, 3474, 4240, 1566, 1027, 1575,
	2188, 1045, 887, 1729, 1583, 2881, 4981, 1043, 4905, 1566,
	2122, 1566, 1566, 1566, 3168, 1747, 2250, 2251, 2422, 1388,
	1041, 1526, 2420, 1685, 2252, 2472, 1748, 4639, 3336, 3332,
	3333, 3334, 3335, 3337, 3338, 823, 3334, 3335, 3337, 3338,
	1039, 4478, 1036, 2899, 2210, 1379, 4469, 3040, 2899, 4281,
	2300, 4280, 1842, 2134, 1380, 3988, 3987, 1147, 2897, 3989,
	3979, 3969, 1531, 2897, 3968, 1530, 3966, 3965, 2373, 2305,
	2363, 1825, 1826, 1828, 1829, 3953, 2317, 3918, 829, 3917,
	3476, 3599, 3598, 3439, 1387, 2470, 2209, 2206, 1633, 3288,
	2224, 1584, 1147, 3287, 3352, 3286, 3285, 2340, 3241, 3003,
	2139, 2138, 3002, 2999, 2147, 2149, 2988, 832, 888, 1728,
	2264, 1829, 2972, 2971, 2368, 2966, 2325, 1746, 2965, 1192,
	2964, 2640, 2943, 2942, 2903, 2827, 2681, 1872, 1147, 2182,
	1147, 2374, 2545, 1088, 1794, 1088, 3346, 1147, 2680, 1382,
	2052, 2052, 1407, 2314, 1147, 1147, 1147, 1147, 1147, 1147,
	1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147,
	1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147,
	1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147,
	1638, 1147, 1638, 1147, 1147, 1147, 1147, 2327, 2286, 2456,
	2285, 2502, 2350, 762, 4459, 2319, 4431, 2303, 2179, 1631,
	2356, 2322, 2248, 2322, 1683, 1843, 2323, 3496, 2474, 1147,
	2335, 1872, 2936, 1147, 1147, 4906, 1362, 3093, 2461, 2936,
	1086, 1147, 2331, 2142, 2332, 1147, 762, 1147, 1147, 1381,
	2840, 1621, 2175, 1620, 2471, 1407, 4377, 2634, 4238, 3559,
	2960, 1147, 1147, 1147, 1147, 2393, 4235, 1147, 1147, 1147,
	1147, 1147, 1147, 1147, 1147, 2355, 2612, 2613, 1378, 2940,
	2854, 2180, 2181, 1874, 829, 2472, 2831, 2953, 2954, 2372,
	2612, 2628, 4197, 1147, 1147, 1147, 1147, 1147, 1147, 1147,
	1147, 1147, 3338, 3721, 2383, 4254, 1147, 2888, 1699, 3347,
	1619, 2176, 1618, 832, 2953, 2954, 1527, 2676, 1269, 1265,
	1033, 1265, 2444, 2447, 2190, 1407, 1579, 1305, 2469, 1388,
	2452, 1085, 2416, 2360, 1269, 4219, 2722, 2722, 2736, 1784,
	2612, 2953, 2954, 2757, 2759, 2470, 2284, 2194, 1592, 2763,
	1147, 1407, 2485, 2738, 2631, 4196, 2218, 3529, 3148, 2144,
	1787, 1383, 1371, 3184, 1678, 2005, 2912, 1729, 1597, 4212,
	1763, 2817, 2498, 2499, 1831, 1823, 1824, 1825, 1826, 1828,
	1829, 2458, 2560, 2432, 2460, 2459, 2473, 2926, 2466, 2576,
	2426, 2046, 2046, 2813, 1387, 2560, 1068, 2143, 1745, 1068,
	1068, 2627, 1088, 3214, 2191, 4938, 2489, 1096, 1707, 2490,
	2491, 4870, 1088, 711, 2788, 1759, 1088, 2925, 2414, 1379,
	3560, 2380, 2324, 1707, 4213, 3730, 2231, 2468, 1380, 1799,
	890, 889, 1726, 3229, 1360, 2446, 2780, 2678, 2435, 706,
	2434, 761, 2679, 1087, 4798, 2682, 3926, 2683, 2684, 3342,
	3343, 3344, 1994, 3729, 1348, 1348, 3341, 3339, 3340, 3332,
	3333, 3334, 3335, 3337, 3338, 2262, 2996, 3473, 1235, 3186,
	2572, 2568, 4234, 1728, 761, 2377, 3787, 2371, 2566, 2227,
	2640, 2915, 1679, 2830, 2902, 4279, 2625, 4236, 4219, 2993,
	2453, 1382, 3967, 2433, 2471, 1727, 2876, 1407, 2995, 2834,
	3964, 1267, 2991, 1695, 3950, 1088, 2226, 182, 2779, 2898,
	4618, 797, 2207, 2195, 3910, 2862, 1140, 1267, 3897, 2870,
	3605, 2866, 4212, 2787, 1604, 2792, 4205, 4376, 2798, 2799,
	2718, 2052, 2853, 2381, 2731, 2877, 2748, 2842, 3597, 2761,
	2222, 3557, 1037, 4203, 1376, 2769, 2770, 4494, 1037, 2998,
	2939, 763, 4207, 2878, 2785, 2786, 2781, 4232, 2421, 2802,
	3998, 1037, 2419, 1947, 1992, 4910, 2873, 3228, 2469, 2180,
	2181, 2902, 3546, 2963, 1407, 3538, 1602, 4213, 2182, 2196,
	2197, 1038, 2941, 1037, 763, 932, 1742, 2213, 1684, 4884,
	1348, 3330, 3331, 2443, 3348, 3349, 3350, 2270, 2269, 2223,
	1975, 4892, 2904, 1381, 2192, 3938, 3221, 3222, 4891, 2825,
	1378, 1147, 1147, 2872, 1147, 4941, 2849, 3999, 1760, 4206,
	3660, 4799, 2861, 795, 4859, 1084, 2864, 4110, 2865, 3547,
	4208, 2208, 3539, 4620, 2640, 4209, 2879, 3724, 823, 2163,
	1348, 2852, 1337, 1264, 2164, 4214, 2869, 2901, 2193, 2856,
	2875, 4109, 3951, 2871, 3065, 1939, 1940, 3606, 4919, 1264,
	3997, 3192, 885, 4911, 884, 2989, 3345, 3784, 2961, 4969,
	3661, 1566, 3545, 2945, 2163, 3537, 2092, 4705, 1581, 2164,
	3107, 3603, 1263, 1979, 2914, 2976, 1566, 4211, 1566, 2882,
	3080, 1337, 2234, 1383, 2929, 3136, 4646, 2241, 1263, 4237,
	3035, 2231, 4695, 4422, 4215, 1566, 2445, 2944, 2151, 2152,
	1578, 1304, 4766, 2884, 4767, 2979, 2955, 2957, 2958, 2959,
	2962, 2556, 1337, 1337, 3936, 4797, 2970, 2968, 3043, 1348,
	2907, 1348, 1982, 3045, 2886, 1979, 3004, 2917, 2920, 2900,
	3076, 3032, 3033, 2946, 2243, 2967, 3195, 1977, 4626, 3785,
	2554, 1379, 3660, 1147, 3572, 3149, 3150, 3036, 2165, 1761,
	1380, 3336, 2046, 4230, 3475, 1980, 3156, 3157, 3158, 2198,
	3170, 2887, 3171, 2969, 4913, 2169, 3142, 2974, 4233, 2984,
	1604, 3484, 3139, 4208, 1982, 1019, 3031, 707, 4209, 3138,
	1757, 760, 2885, 2165, 1708, 4495, 1525, 3041, 4214, 2782,
	3034, 2242, 1289, 182, 2379, 3121, 3511, 4493, 1978, 1081,
	2169, 2235, 2219, 4491, 3166, 1500, 1934, 1980, 1147, 1531,
	3146, 1034, 3046, 2899, 1147, 1147, 3151, 3352, 3152, 4306,
	3252, 2913, 3109, 3111, 4210, 829, 3072, 3059, 2918, 3243,
	4211, 796, 3394, 3443, 3069, 2199, 3172, 1511, 3070, 2166,
	2171, 2204, 2559, 1762, 2415, 2816, 2217, 4215, 3198, 3250,
	4490, 2217, 4012, 3510, 832, 1680, 3091, 829, 708, 3346,
	3102, 4010, 2231, 4220, 4221, 4858, 3112, 3200, 2219, 3202,
	1147, 1147, 3123, 2173, 2166, 2171, 1147, 4106, 4492, 1638,
	798, 4693, 1798, 2550, 794, 3143, 832, 1359, 1758, 1147,
	1147, 1020, 4619, 2202, 3110, 1147, 1147, 2640, 2214, 3163,
	3604, 1147, 4917, 2216, 1105, 2551, 4373, 709, 2185, 710,
	2552, 3165, 4231, 2567, 2557, 3174, 3041, 3176, 1981, 3178,
	4389, 3180, 3181, 2167, 4694, 1381, 3175, 3173, 3177, 2376,
	3179, 2370, 4881, 4749, 1872, 3515, 729, 1079, 4737, 1019,
	4014, 2211, 4264, 1682, 3190, 1019, 1147, 1147, 1147, 1884,
	2203, 3293, 1147, 2797, 3244, 2784, 1694, 1696, 2167, 933,
	4912, 1087, 1147, 1081, 4942, 2186, 3800, 3209, 3521, 1081,
	1981, 3220, 2173, 2218, 3276, 4013, 2975, 4210, 3203, 1147,
	3485, 3205, 2163, 3197, 1277, 3211, 1511, 2164, 3210, 3517,
	3271, 3272, 3247, 2201, 4929, 3275, 4316, 1337, 4100, 1279,
	4321, 3215, 2622, 2161, 4927, 2542, 3230, 2173, 2184, 1080,
	2485, 4918, 3347, 4284, 3194, 3898, 4220, 4221, 1294, 3248,
	4322, 2238, 4970, 3253, 4111, 3519, 1274, 4012, 3743, 2093,
	4653, 3393, 1265, 3212, 3937, 4742, 4010, 1025, 1024, 4672,
	4307, 4532, 4283, 1713, 4282, 4372, 4050, 4920, 1265, 1511,
	3267, 1511, 4833, 3516, 3648, 1020, 2215, 2824, 2292, 1972,
	2159, 1020, 4834, 4027, 1292, 3242, 1088, 4008, 3520, 4857,
	1280, 1147, 1147, 1147, 1147, 1285, 698, 1809, 2236, 1808,
	4107, 1147, 1147, 1147, 1021, 2488, 1147, 2183, 2135, 4456,
	4541, 4602, 1803, 39, 4051, 4947, 1147, 1269, 1407, 3983,
	2553, 2165, 1147, 2160, 1147, 3970, 4155, 3922, 3386, 3387,
	2555, 924, 1975, 1269, 3491, 4014, 3649, 3890, 2169, 3196,
	1808, 2237, 3431, 3640, 3839, 2919, 3487, 2132, 3081, 3369,
	3075, 1407, 3063, 2318, 2312, 2306, 2298, 925, 1278, 2278,
	2277, 3783, 2478, 1269, 1572, 3388, 1407, 4011, 3282, 4654,
	4013, 3914, 3342, 3343, 3344, 2168, 2775, 1296, 1348, 3341,
	3339, 3340, 3332, 3333, 3334, 3335, 3337, 3338, 2052, 3411,
	910, 3891, 1407, 769, 4710, 2540, 3854, 3744, 2543, 2947,
	2902, 4053, 1348, 4675, 1807, 4374, 2427, 3424, 1348, 2128,
	2168, 2778, 2166, 2171, 837, 1979, 915, 4337, 3892, 3438,
	3889, 1025, 1024, 2130, 3060, 1307, 1022, 1025, 1024, 3249,
	1147, 4510, 1808, 2353, 4508, 4433, 2361, 3502, 3498, 3251,
	844, 4112, 3398, 3453, 1147, 1807, 3867, 2172, 3497, 2539,
	3235, 3396, 2777, 1023, 1348, 4319, 3213, 2776, 3420, 2052,
	3391, 3390, 3480, 3481, 1982, 1736, 1735, 2131, 1021, 2343,
	3425, 2275, 1730, 1809, 1021, 3894, 2823, 1147, 2822, 1977,
	2821, 2172, 2820, 3500, 2819, 4018, 3504, 3433, 3434, 3435,
	3436, 3460, 1627, 1348, 3462, 3463, 2167, 1980, 1613, 3466,
	1267, 3467, 2479, 3468, 3417, 1625, 1026, 3429, 3471, 1376,
	3464, 3410, 1614, 3380, 1809, 1348, 1267, 1348, 3364, 3365,
	3366, 3493, 3477, 3395, 3067, 1559, 4946, 4113, 4832, 4156,
	3501, 1085, 2230, 3506, 931, 4613, 3508, 1807, 3840, 1407,
	1978, 2230, 4011, 4505, 1884, 2173, 1267, 3841, 4298, 4445,
	1348, 3415, 2923, 3416, 1348, 3488, 3450, 3451, 3575, 3452,
	3577, 3397, 3929, 3581, 3690, 2316, 3409, 3587, 4655, 3613,
	3915, 4878, 3412, 3413, 2948, 2949, 1275, 3919, 1646, 1566,
	926, 927, 4650, 3532, 4354, 4420, 3039, 3562, 3456, 3536,
	1022, 3441, 1348, 1566, 1661, 1566, 1022, 3147, 3479, 1407,
	3444, 3461, 3044, 3042, 3458, 3555, 823, 1566, 3465, 1714,
	2347, 4441, 2247, 1688, 4716, 1078, 3472, 1023, 1566, 2046,
	4614, 4428, 3893, 1023, 4440, 4723, 4707, 3623, 3570, 1276,
	1348, 3478, 4162, 3607, 3856, 2647, 3573, 3483, 4882, 911,
	912, 2049, 1264, 3550, 2541, 1780, 4744, 1269, 4883, 4880,
	3486, 4818, 1689, 1782, 3656, 4446, 4642, 4353, 1264, 4634,
	1981, 3518, 1779, 838, 839, 3136, 3528, 4395, 4429, 3639,
	1026, 3492, 1566, 1566, 3136, 3432, 1026, 3632, 3534, 3541,
	2439, 1263, 768, 3608, 2019, 3611, 4154, 3542, 1264, 3535,
	2046, 3543, 1511, 1511, 3544, 4017, 1566, 1263, 1566, 3361,
	3548, 3654, 3759, 4717, 3718, 4497, 3717, 3563, 3647, 4615,
	3571, 3549, 3454, 3551, 3324, 3665, 3254, 3064, 2987, 3584,
	3362, 1777, 2937, 3558, 2851, 3595, 3676, 1263, 2168, 1754,
	2970, 1752, 3590, 2448, 1626, 3582, 1724, 1722, 1720, 3588,
	3920, 2012, 2008, 1718, 1783, 1407, 3583, 1624, 1407, 1716,
	3589, 1710, 1704, 1702, 1664, 3596, 3739, 1623, 3738, 2418,
	1803, 3188, 3187, 3154, 3732, 1511, 3722, 3600, 2385, 2945,
	2256, 2467, 3650, 3615, 1741, 2388, 930, 928, 929, 2297,
	4558, 3594, 1147, 3657, 3636, 2276, 2081, 3635, 1147, 1147,
	2303, 3637, 1147, 1147, 1147, 1917, 1147, 182, 182, 1677,
	1596, 2646, 3715, 4791, 4265, 1147, 2052, 3974, 841, 840,
	3973, 3688, 4706, 4266, 1147, 4249, 3692, 3664, 1035, 1147,
	2791, 1088, 3662, 3713, 4335, 1407, 3641, 3674, 3675, 4271,
	1267, 3671, 4855, 4550, 1147, 829, 913, 914, 4262, 1781,
	4201, 3737, 1407, 3686, 4049, 3655, 4551, 3574, 1778, 3736,
	4040, 3986, 2052, 2052, 1147, 1147, 3971, 1147, 1147, 1147,
	3944, 2441, 3942, 3921, 832, 3643, 2440, 3638, 3628, 3094,
	3086, 3079, 842, 843, 3071, 1147, 3057, 3056, 3745, 1147,
	4552, 2052, 2052, 1147, 1147, 1147, 1147, 1147, 1147, 1147,
	1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147,
	1147, 1147, 1147, 3762, 1147, 3716, 3733, 1776, 3812, 4330,
	3813, 1337, 1147, 1147, 2052, 1753, 3726, 1751, 3727, 1147,
	3728, 3037, 1723, 1721, 1719, 3742, 2868, 3772, 3773, 1717,
	1147, 2863, 2274, 2272, 2249, 1715, 2232, 1709, 1703, 1701,
	2417, 1269, 1269, 1622, 4554, 1147, 3734, 2200, 2187, 2384,
	2174, 2255, 2114, 2111, 2108, 3740, 2105, 2100, 2098, 2094,
	2085, 3780, 3851, 3653, 4846, 1812, 4321, 4553, 2024, 1244,
	3585, 3233, 1264, 3769, 3767, 2241, 4871, 1407, 2136, 1040,
	1042, 1044, 2124, 2125, 3779, 4555, 4322, 3886, 4612, 3206,
	1348, 1348, 3786, 3788, 3789, 1245, 2451, 3795, 3790, 3204,
	3030, 4754, 4359, 3873, 3802, 1348, 1348, 4352, 1348, 4351,
	4278, 1263, 4193, 3137, 2155, 1577, 4543, 2924, 2040, 4536,
	3810, 3809, 4061, 1511, 3811, 2899, 2182, 1147, 2899, 3815,
	2375, 3895, 3896, 3817, 3843, 3402, 1328, 2046, 2315, 2412,
	2897, 1265, 2449, 2921, 1327, 1147, 3908, 3909, 3852, 3911,
	1774, 1775, 4753, 2382, 2407, 4241, 182, 1265, 4273, 3863,
	3864, 3858, 3844, 1700, 2498, 3803, 4578, 3234, 1819, 1820,
	1819, 1820, 1353, 4443, 4163, 2927, 1813, 4141, 1147, 1147,
	3513, 2928, 2950, 2046, 2046, 3860, 3861, 1265, 2450, 3586,
	1816, 3912, 1355, 2498, 3818, 3913, 4874, 1295, 1822, 4865,
	3982, 264, 4827, 4037, 3055, 2123, 1246, 2928, 2299, 1366,
	2994, 2992, 2046, 2046, 3001, 3875, 2981, 2983, 2930, 2932,
	1147, 3955, 3981, 1328, 1267, 1267, 3847, 4914, 4715, 1328,
	2982, 3403, 2931, 1821, 3943, 1821, 3945, 4700, 4666, 4660,
	4611, 4527, 4503, 4421, 1566, 2046, 4047, 4039, 695, 1348,
	4026, 3883, 3642, 1539, 3101, 1546, 2762, 1552, 3904, 2120,
	2033, 4746, 4442, 3978, 2973, 1523, 4747, 1522, 3442, 2049,
	2049, 4945, 3330, 3331, 2052, 4746, 3960, 3962, 4662, 3959,
	4747, 3401, 3408, 1819, 1820, 1533, 4886, 2891, 2892, 1687,
	3876, 3925, 2889, 2890, 4133, 1686, 2642, 3984, 3900, 3976,
	2891, 2889, 2677, 1756, 4046, 1566, 1755, 3985, 4528, 3947,
	4479, 1147, 4275, 4270, 4269, 3407, 4129, 3952, 3899, 1269,
	1147, 3791, 4000, 4002, 3579, 4063, 1651, 3576, 1656, 1911,
	1566, 1566, 1566, 3107, 1910, 4070, 4556, 3208, 2455, 2945,
	4931, 1669, 4557, 1674, 4893, 3996, 4704, 1566, 1566, 1566,
	4703, 4702, 4641, 4640, 4595, 1897, 4506, 4033, 4473, 1902,
	3136, 4054, 4418, 4415, 4020, 4413, 1264, 1264, 1566, 4309,
	4004, 4295, 4058, 4239, 1407, 4055, 4188, 4085, 4016, 4067,
	4021, 3940, 3932, 3646, 4034, 3645, 3507, 3459, 4006, 4043,
	3193, 4015, 3185, 4074, 3162, 1227, 3161, 3993, 3160, 4005,
	1407, 3159, 3085, 1147, 1147, 1263, 1263, 3058, 1732, 1147,
	1147, 2052, 2922, 4057, 1147, 1147, 4038, 1147, 2859, 2855,
	2844, 2333, 1147, 3404, 3405, 3406, 2843, 2832, 2571, 2442,
	2413, 2406, 2405, 1147, 3994, 4041, 2404, 2403, 2402, 2349,
	2351, 2313, 2287, 2283, 2282, 3995, 4056, 2281, 2280, 1147,
	4059, 2279, 2354, 4064, 2088, 4065, 2087, 2086, 4098, 2084,
	4127, 2023, 4075, 4076, 2362, 4069, 2365, 2366, 2367, 4096,
	4080, 1265, 4083, 4081, 4077, 4114, 4084, 1773, 1772, 1711,
	1591, 1590, 1589, 1588, 1587, 1586, 3492, 1585, 4086, 4115,
	1580, 1576, 1574, 1573, 1516, 1515, 4097, 1514, 1398, 1397,
	1337, 1396, 1267, 1395, 1394, 2046, 1358, 1314, 4123, 4108,
	1269, 1313, 1312, 1311, 1155, 1310, 1309, 3711, 1269, 1308,
	1306, 1301, 1407, 1407, 1300, 1407, 1299, 2482, 1298, 1297,
	3709, 2126, 1269, 899, 8, 1046, 1032, 4168, 4617, 3702,
	4218, 4217, 4216, 1566, 1566, 2438, 93, 1582, 861, 87,
	2239, 3939, 4821, 998, 1407, 4743, 4645, 1557, 869, 4725,
	271, 271, 271, 2303, 701, 702, 4035, 717, 701, 717,
	727, 3509, 4103, 767, 3006, 2387, 3424, 787, 1712, 1269,
	2389, 1269, 793, 4194, 4195, 3419, 2804, 4692, 4137, 271,
	4153, 3292, 4585, 4388, 2645, 1915, 3373, 89, 1131, 1177,
	4305, 4304, 4202, 4229, 1348, 3924, 3126, 4302, 4242, 4228,
	906, 4171, 4173, 4301, 1407, 2037, 1348, 271, 2039, 1348,
	4244, 4245, 1095, 4225, 1410, 4225, 4765, 2137, 4164, 4160,
	1407, 1137, 4176, 4165, 4166, 4167, 4169, 182, 3704, 4170,
	2049, 2153, 2046, 2146, 1264, 2845, 2040, 2040, 2721, 4177,
	1154, 4180, 4274, 3703, 4276, 1151, 4243, 4198, 2041, 2043,
	1153, 4184, 4186, 1152, 2042, 1935, 1150, 2036, 1566, 1566,
	4200, 4045, 2001, 2739, 3105, 4192, 3672, 1632, 1630, 1000,
	2141, 2565, 2629, 1263, 3281, 1908, 1111, 1133, 1348, 2626,
	4299, 1290, 1122, 1267, 1110, 3399, 3378, 3659, 3882, 2477,
	1407, 1267, 879, 3327, 2632, 1566, 1281, 2745, 4263, 3712,
	2737, 4277, 4258, 4296, 2733, 1267, 3469, 3095, 1789, 4268,
	4402, 1886, 3106, 1405, 1785, 1392, 1115, 1505, 2563, 1899,
	1269, 3259, 2487, 3666, 3422, 2838, 4327, 4750, 3799, 3191,
	2291, 4324, 1566, 1566, 1566, 1566, 1566, 4261, 701, 701,
	1243, 1242, 1288, 1241, 4358, 4731, 271, 1407, 4355, 4294,
	4728, 4338, 1267, 2229, 1267, 1265, 1265, 4286, 4285, 1147,
	1147, 1147, 4287, 4078, 4225, 4339, 3621, 2129, 2883, 2575,
	3629, 4292, 1127, 4300, 1510, 2431, 4326, 1407, 4247, 4333,
	4342, 4315, 1147, 3384, 3691, 1147, 1147, 1593, 792, 4450,
	4248, 4256, 1139, 1871, 4259, 1147, 3027, 3026, 2052, 4293,
	4606, 1377, 4257, 1147, 1147, 4260, 4340, 1375, 1374, 1373,
	4347, 4902, 4968, 3935, 3934, 3933, 238, 3227, 1810, 1802,
	1407, 235, 1566, 4364, 237, 1264, 236, 4310, 3887, 3428,
	4825, 4362, 4380, 1264, 3957, 3612, 23, 4361, 22, 21,
	116, 42, 20, 4368, 155, 133, 1407, 1264, 4375, 152,
	151, 125, 150, 149, 1147, 3710, 3705, 3706, 3707, 3708,
	148, 147, 154, 146, 1263, 145, 140, 1147, 4369, 144,
	143, 142, 1263, 141, 4323, 139, 1147, 4385, 4391, 137,
	138, 2052, 132, 136, 2303, 135, 1263, 134, 131, 130,
	1147, 129, 128, 1147, 1264, 4397, 1264, 127, 126, 124,
	156, 123, 122, 1267, 1337, 4424, 121, 1147, 120, 119,
	4408, 4409, 118, 117, 1407, 4411, 780, 4412, 781, 4453,
	61, 1348, 60, 115, 113, 114, 19, 40, 14, 65,
	66, 1566, 1566, 1263, 18, 1263, 13, 4425, 35, 92,
	4423, 105, 104, 103, 4432, 36, 101, 100, 34, 17,
	16, 15, 98, 97, 96, 33, 31, 11, 9, 37,
	1996, 12, 4464, 4465, 4496, 5, 187, 4484, 186, 189,
	3623, 4472, 185, 188, 91, 184, 1407, 183, 90, 1566,
	29, 4518, 10, 179, 4519, 4509, 4031, 82, 181, 4475,
	4474, 4470, 4480, 180, 4482, 178, 4483, 1269, 1269, 177,
	176, 83, 80, 175, 86, 4481, 4542, 2040, 174, 4526,
	81, 85, 84, 27, 6, 64, 4498, 4488, 4499, 1147,
	1147, 4507, 4501, 7, 4370, 4561, 4562, 3719, 108, 2046,
	109, 38, 78, 1265, 4522, 4537, 1147, 2052, 77, 4517,
	76, 4225, 4225, 75, 4540, 1264, 26, 63, 25, 4538,
	4502, 4546, 173, 220, 219, 218, 217, 1348, 216, 215,
	1348, 4565, 4574, 4575, 214, 4534, 4539, 213, 4559, 4545,
	4342, 4544, 208, 207, 212, 1147, 210, 1147, 209, 1147,
	211, 206, 230, 229, 1263, 223, 222, 228, 227, 1269,
	226, 225, 224, 4462, 221, 232, 205, 204, 4594, 2569,
	203, 4596, 1147, 201, 1269, 4476, 4486, 4601, 197, 196,
	4573, 200, 2046, 202, 199, 1897, 198, 4487, 195, 231,
	72, 171, 172, 71, 170, 169, 168, 167, 166, 165,
	3155, 164, 4629, 4225, 4583, 4577, 70, 4600, 24, 2409,
	2, 1, 0, 0, 0, 0, 2172, 4597, 4225, 0,
	0, 0, 4628, 0, 0, 0, 1147, 1147, 4621, 0,
	0, 0, 0, 0, 4649, 0, 1147, 4622, 0, 0,
	2744, 1269, 0, 0, 1269, 0, 0, 0, 1566, 0,
	1267, 1267, 2011, 0, 4636, 3217, 0, 0, 1566, 1566,
	0, 0, 0, 0, 0, 0, 0, 4638, 0, 4669,
	0, 0, 4671, 0, 4637, 1566, 4643, 0, 1283, 0,
	0, 0, 3256, 3257, 0, 4225, 0, 0, 4225, 1147,
	1147, 4683, 4656, 0, 1265, 4661, 0, 0, 4664, 1147,
	0, 4688, 1265, 4689, 4657, 4658, 4668, 4522, 4663, 4677,
	0, 1303, 0, 0, 0, 4679, 1265, 4680, 4676, 0,
	0, 0, 0, 271, 0, 271, 271, 0, 1332, 271,
	1342, 4687, 4696, 0, 0, 0, 2739, 2739, 2046, 0,
	0, 1356, 1267, 1147, 1147, 0, 1147, 2049, 4697, 787,
	1348, 0, 787, 1348, 0, 4701, 0, 1267, 4718, 0,
	0, 0, 1511, 1265, 0, 1265, 4722, 0, 4730, 4733,
	0, 0, 4713, 4714, 2157, 0, 271, 4752, 271, 271,
	1332, 4745, 271, 271, 4748, 4721, 4734, 1342, 4720, 4738,
	0, 4740, 1264, 1264, 4741, 0, 0, 4770, 4739, 4681,
	4682, 271, 0, 1535, 1147, 1147, 1147, 0, 0, 0,
	4773, 0, 0, 0, 0, 4774, 4686, 0, 2049, 1555,
	4755, 0, 4735, 0, 1267, 0, 1570, 1267, 0, 4761,
	0, 1263, 1263, 0, 4769, 0, 0, 1147, 0, 0,
	0, 0, 4805, 4768, 0, 1595, 0, 0, 1342, 0,
	0, 4806, 271, 271, 0, 1332, 4790, 4789, 4810, 4787,
	4788, 0, 0, 0, 3354, 3355, 3356, 3357, 4828, 0,
	1337, 0, 0, 0, 0, 0, 787, 4808, 271, 271,
	0, 0, 0, 0, 1264, 0, 0, 0, 4851, 4839,
	1658, 4837, 0, 4824, 1147, 0, 0, 4835, 0, 1264,
	1665, 4850, 0, 0, 0, 906, 4836, 0, 4856, 0,
	0, 0, 0, 4845, 1265, 4849, 4844, 2267, 2739, 2739,
	2739, 2739, 0, 1263, 0, 0, 4872, 0, 0, 4820,
	0, 4823, 0, 4843, 4862, 4863, 4868, 0, 1263, 4866,
	4864, 0, 4847, 4848, 0, 0, 4877, 2172, 4853, 1269,
	4730, 1269, 4876, 4733, 4875, 0, 4895, 4752, 4879, 0,
	0, 0, 4885, 0, 4896, 4649, 1264, 0, 0, 1264,
	4909, 4890, 4894, 4907, 0, 4903, 0, 4897, 4904, 4899,
	0, 4898, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 4922, 4908, 4225, 1348, 4225, 0, 0, 0, 0,
	4921, 0, 0, 4924, 0, 1263, 0, 271, 1263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4939, 4930, 4935, 0, 0, 1147, 1147, 4937, 3711, 0,
	4932, 0, 4940, 0, 1147, 4928, 1147, 1147, 4933, 4943,
	0, 3709, 0, 0, 0, 4949, 4953, 0, 4959, 0,
	3702, 0, 4956, 4964, 0, 0, 4962, 4957, 4963, 4961,
	0, 0, 0, 4960, 3107, 4958, 0, 0, 0, 0,
	4972, 4967, 4971, 0, 0, 0, 4976, 4980, 4974, 4950,
	4951, 4977, 0, 4978, 0, 4973, 0, 0, 0, 0,
	0, 4983, 0, 0, 0, 0, 0, 1147, 4988, 4985,
	4990, 0, 4975, 0, 4980, 0, 4994, 4991, 4987, 4993,
	0, 0, 0, 0, 0, 4984, 0, 0, 4952, 0,
	0, 0, 0, 0, 2040, 0, 0, 0, 0, 0,
	0, 0, 1267, 0, 1267, 0, 0, 0, 0, 0,
	4989, 0, 0, 3049, 0, 0, 3052, 0, 3054, 3704,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2744, 0, 3703, 2049, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1819, 1820, 0,
	1852, 1853, 1854, 1863, 1864, 1865, 0, 0, 0, 0,
	0, 1265, 1265, 0, 3098, 2040, 0, 3098, 0, 1856,
	1850, 0, 2501, 0, 0, 0, 0, 1822, 701, 0,
	0, 2049, 2049, 0, 0, 0, 1869, 0, 0, 0,
	3712, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 271, 0, 1875, 0, 271, 0, 0, 0, 0,
	2049, 2049, 1821, 2744, 2744, 0, 0, 0, 1535, 1332,
	2016, 271, 1841, 271, 2022, 0, 3700, 0, 0, 0,
	271, 1838, 717, 0, 3591, 0, 0, 271, 0, 0,
	0, 0, 0, 2049, 1264, 0, 1264, 0, 0, 0,
	0, 3182, 2089, 1265, 0, 0, 0, 0, 0, 0,
	0, 0, 3616, 0, 271, 2643, 0, 0, 1265, 0,
	0, 271, 0, 3633, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1263, 0, 1263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 787, 0, 0, 1844, 1845, 1846,
	1847, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3682, 3683, 0,
	0, 0, 0, 0, 0, 1265, 3755, 3756, 1265, 0,
	0, 0, 0, 0, 0, 0, 3710, 3705, 3706, 3707,
	3708, 3714, 0, 0, 0, 0, 1860, 0, 0, 1870,
	0, 2814, 0, 0, 0, 0, 1849, 1851, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 0, 1867, 0, 0, 0, 0,
	2739, 2739, 1836, 1837, 0, 2744, 2744, 2744, 2744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1858, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1842, 3819, 3820, 3821, 3822,
	3823, 3824, 3825, 3826, 3827, 3828, 3829, 3830, 3831, 3832,
	3833, 3834, 3835, 3836, 3837, 3838, 0, 3842, 0, 0,
	1132, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 1868, 0, 271, 0, 0, 0, 0, 0, 0,
	2739, 2739, 2739, 2739, 2739, 2739, 2739, 2739, 2739, 2739,
	2739, 2739, 2739, 2739, 2739, 2739, 2739, 2739, 2739, 2739,
	1872, 2739, 0, 2049, 0, 3330, 3331, 2894, 3348, 3349,
	3350, 0, 2040, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3764, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 271, 0, 0, 0, 112, 0, 271, 0, 0,
	0, 0, 0, 271, 0, 1848, 0, 0, 2040, 2040,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 271, 0, 0, 0, 701, 0, 271, 1843, 0,
	3345, 0, 0, 0, 0, 0, 0, 2040, 2040, 787,
	0, 0, 0, 906, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1861, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3022, 0, 0, 0, 0,
	2040, 0, 271, 0, 1332, 271, 0, 0, 0, 0,
	0, 0, 0, 1069, 0, 0, 1874, 0, 0, 787,
	2049, 0, 0, 1265, 1089, 1265, 271, 0, 3014, 3012,
	0, 0, 0, 0, 2386, 3016, 3018, 3008, 0, 271,
	271, 0, 271, 0, 271, 0, 271, 0, 271, 0,
	0, 0, 0, 0, 0, 3336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2587, 2588, 2589, 2606, 2607,
	2608, 0, 1253, 2423, 0, 0, 2424, 0, 2425, 0,
	0, 0, 0, 0, 0, 2609, 0, 73, 1859, 0,
	271, 271, 271, 271, 0, 0, 0, 0, 1833, 1834,
	1840, 1862, 1839, 1835, 74, 1832, 1830, 1831, 1823, 1824,
	1825, 1826, 1828, 1829, 0, 0, 0, 0, 1875, 767,
	79, 3352, 0, 787, 0, 0, 0, 0, 0, 3330,
	3331, 0, 3348, 3349, 3350, 0, 0, 2599, 0, 0,
	0, 0, 0, 0, 0, 0, 2595, 0, 0, 0,
	0, 3763, 0, 0, 3522, 3523, 0, 3524, 3525, 3526,
	88, 0, 0, 3346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3991,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 900, 0, 0, 3345, 3564, 3565, 0, 3566, 3567,
	3568, 0, 0, 49, 0, 110, 2577, 0, 3010, 0,
	94, 107, 2600, 2601, 2602, 2603, 0, 0, 0, 3024,
	0, 0, 2594, 0, 0, 0, 0, 0, 1872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3023, 3015, 3013, 3017, 3019, 3009, 3011, 3025, 0,
	2040, 0, 0, 0, 0, 4071, 4072, 4073, 3021, 0,
	0, 0, 0, 0, 0, 0, 0, 2744, 2744, 0,
	95, 0, 2349, 4087, 4088, 0, 0, 701, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3336,
	0, 3028, 271, 0, 0, 0, 0, 2604, 2605, 0,
	0, 701, 0, 0, 0, 0, 3347, 0, 271, 0,
	701, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	2597, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 1342, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3352, 0, 2744, 2744, 2744,
	2744, 2744, 2744, 2744, 2744, 2744, 2744, 2744, 2744, 2744,
	2744, 2744, 2744, 2744, 2744, 2744, 2744, 0, 2744, 0,
	0, 0, 0, 0, 0, 0, 0, 2040, 0, 0,
	0, 271, 1342, 0, 0, 0, 717, 3346, 0, 0,
	2858, 0, 0, 0, 0, 0, 271, 2049, 0, 271,
	0, 0, 0, 271, 0, 271, 0, 0, 99, 0,
	1332, 0, 271, 271, 0, 1342, 1342, 2874, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3342, 3343, 3344, 0,
	0, 0, 0, 3341, 3339, 3340, 3332, 3333, 3334, 3335,
	3337, 3338, 0, 0, 0, 0, 0, 0, 4182, 4183,
	0, 3029, 1872, 190, 102, 73, 0, 106, 2911, 0,
	3020, 0, 0, 2598, 0, 0, 0, 0, 3385, 271,
	2049, 0, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 239, 0, 0, 0, 0, 79, 0,
	0, 901, 0, 0, 0, 271, 153, 0, 0, 0,
	0, 3414, 0, 0, 0, 0, 787, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3427, 0, 0, 0,
	800, 1874, 0, 0, 0, 0, 0, 271, 88, 0,
	3347, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3448, 0, 0, 811, 0, 0, 0, 0,
	3330, 3331, 0, 3348, 3349, 3350, 0, 157, 0, 112,
	271, 3047, 0, 0, 0, 0, 0, 0, 0, 900,
	0, 0, 194, 2349, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 110, 0, 0, 0, 1535, 94, 107,
	271, 0, 271, 233, 0, 0, 0, 0, 4394, 271,
	0, 0, 234, 2584, 2585, 2586, 2610, 2596, 2590, 3090,
	2592, 2593, 2591, 2578, 2579, 2580, 2581, 2582, 2583, 2911,
	0, 701, 0, 0, 0, 3345, 2049, 0, 0, 193,
	3119, 906, 0, 2911, 2911, 0, 0, 0, 805, 0,
	112, 0, 112, 0, 112, 817, 0, 4363, 95, 4365,
	4366, 4367, 2739, 0, 0, 271, 0, 4435, 0, 810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3342, 3343, 3344, 0, 271, 1332, 271, 3341, 3339, 3340,
	3332, 3333, 3334, 3335, 3337, 3338, 1342, 271, 0, 0,
	1332, 0, 1332, 0, 1332, 0, 1089, 112, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 809, 0,
	0, 2739, 0, 112, 0, 112, 0, 0, 0, 0,
	3336, 0, 0, 0, 0, 762, 0, 0, 112, 0,
	112, 0, 0, 0, 0, 0, 0, 4414, 271, 271,
	271, 271, 1332, 0, 0, 1332, 0, 271, 0, 3427,
	807, 1102, 271, 0, 0, 3330, 3331, 0, 3348, 3349,
	3350, 0, 3353, 0, 2040, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2835, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 3352, 0, 0, 0,
	0, 271, 0, 0, 0, 112, 99, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 816,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3346, 0,
	3345, 0, 0, 0, 1819, 1820, 4042, 0, 0, 4582,
	0, 0, 0, 0, 0, 0, 4500, 2040, 0, 0,
	0, 190, 102, 0, 0, 106, 0, 1850, 0, 0,
	0, 0, 0, 0, 1822, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4605, 239, 0, 0, 0, 802, 0, 0, 0, 901,
	1875, 0, 1069, 2739, 153, 1505, 0, 0, 1405, 1821,
	0, 0, 0, 1872, 0, 4627, 0, 0, 0, 1841,
	0, 0, 4099, 1889, 0, 0, 806, 1535, 1838, 0,
	0, 0, 0, 0, 0, 3336, 0, 0, 0, 241,
	0, 1895, 0, 0, 2739, 1901, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 761, 0, 157, 0, 0, 0, 2739,
	0, 0, 0, 0, 0, 0, 0, 0, 812, 0,
	194, 0, 0, 3758, 804, 3776, 0, 0, 240, 0,
	0, 3347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 3792, 0, 1844, 1845, 1846, 1847, 0, 0,
	234, 0, 0, 2040, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 801, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 0, 0, 3346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 808,
	0, 0, 0, 1849, 1851, 1988, 0, 1991, 0, 112,
	0, 271, 0, 763, 0, 2714, 2715, 2716, 2717, 2710,
	2711, 2712, 2713, 0, 803, 0, 0, 271, 0, 1836,
	1837, 0, 701, 0, 0, 0, 0, 701, 0, 0,
	701, 0, 0, 701, 701, 0, 0, 814, 815, 701,
	0, 0, 0, 2349, 2349, 0, 0, 271, 1872, 0,
	0, 0, 1842, 0, 0, 0, 0, 0, 0, 271,
	2349, 3342, 3343, 3344, 0, 0, 0, 3885, 3341, 3339,
	3340, 3332, 3333, 3334, 3335, 3337, 3338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2690, 2691, 2692,
	2693, 0, 0, 0, 0, 0, 0, 0, 271, 2744,
	0, 0, 271, 271, 0, 0, 0, 0, 0, 0,
	2702, 2703, 2704, 2705, 2698, 2699, 2700, 2701, 2706, 2707,
	2708, 2709, 0, 0, 0, 0, 3347, 1872, 0, 0,
	0, 2911, 2911, 271, 0, 2016, 0, 0, 0, 0,
	0, 2911, 0, 0, 2022, 0, 0, 0, 0, 0,
	0, 0, 2911, 2022, 0, 2911, 2022, 894, 2744, 2022,
	4308, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4325, 271, 271, 2016, 0, 271, 0,
	0, 0, 1848, 0, 73, 0, 897, 896, 2686, 2687,
	2688, 2689, 2694, 2695, 2696, 2697, 4346, 0, 2016, 0,
	271, 74, 3554, 3554, 0, 1843, 0, 1332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2911, 0, 2911,
	0, 3580, 2911, 2016, 0, 0, 2911, 2016, 0, 0,
	787, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 0, 0,
	0, 0, 0, 1874, 0, 1332, 3342, 3343, 3344, 0,
	0, 0, 271, 3341, 3339, 3340, 3332, 3333, 3334, 3335,
	3337, 3338, 0, 0, 0, 0, 1819, 1820, 0, 0,
	271, 0, 3617, 0, 0, 3619, 2911, 0, 900, 271,
	0, 0, 0, 271, 0, 0, 1342, 0, 0, 1850,
	49, 0, 110, 0, 0, 0, 1822, 94, 107, 0,
	0, 271, 0, 0, 0, 0, 3090, 0, 0, 1332,
	0, 271, 0, 0, 2911, 0, 701, 0, 0, 0,
	2744, 0, 1875, 2911, 0, 0, 0, 0, 0, 1839,
	1835, 1821, 1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828,
	1829, 1841, 0, 0, 271, 3090, 0, 0, 3090, 0,
	1838, 0, 0, 0, 0, 0, 0, 95, 0, 0,
	0, 2744, 1089, 0, 1089, 0, 0, 1819, 1820, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3725, 0, 2744, 0, 0, 0,
	1850, 0, 0, 0, 0, 0, 0, 1822, 0, 0,
	0, 0, 0, 0, 3731, 3753, 0, 1535, 0, 0,
	1332, 271, 0, 271, 0, 0, 0, 0, 0, 1332,
	0, 0, 0, 1875, 0, 0, 1844, 1845, 1846, 1847,
	0, 0, 1821, 0, 1819, 1820, 1827, 0, 0, 0,
	0, 0, 1841, 0, 0, 0, 0, 0, 1819, 1820,
	271, 1838, 0, 0, 0, 0, 112, 1850, 0, 0,
	0, 0, 0, 0, 1822, 0, 0, 0, 0, 0,
	0, 1850, 0, 0, 0, 0, 0, 0, 1822, 0,
	0, 0, 0, 0, 0, 1849, 1851, 1819, 1820, 0,
	1875, 0, 0, 0, 0, 4175, 0, 0, 0, 1821,
	0, 0, 0, 0, 1875, 99, 3752, 0, 3797, 0,
	1850, 1836, 1837, 1821, 0, 0, 0, 1822, 0, 0,
	0, 0, 0, 0, 4190, 0, 0, 1844, 1845, 1846,
	1847, 0, 1069, 0, 0, 1069, 1069, 1827, 0, 0,
	0, 0, 0, 1875, 1842, 0, 0, 0, 0, 0,
	0, 0, 1821, 0, 0, 0, 0, 0, 0, 0,
	190, 102, 1841, 0, 106, 0, 0, 0, 0, 0,
	0, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 1851, 0, 0,
	239, 2562, 0, 0, 0, 0, 0, 0, 901, 0,
	0, 0, 0, 153, 1827, 271, 271, 0, 0, 0,
	0, 1089, 1836, 1837, 0, 0, 0, 4647, 1827, 1872,
	0, 1895, 0, 0, 0, 1895, 3245, 0, 0, 0,
	701, 701, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 4667, 0, 0, 0, 1842, 0, 1844, 1845, 1846,
	1847, 0, 0, 1849, 1851, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 1849, 1851, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 1974, 0, 1843, 1253, 0,
	233, 0, 0, 0, 0, 0, 1849, 1851, 0, 234,
	0, 0, 1842, 0, 1991, 0, 0, 0, 0, 0,
	1872, 0, 0, 0, 0, 0, 1842, 1405, 0, 0,
	0, 0, 1836, 1837, 0, 0, 895, 0, 0, 0,
	0, 0, 0, 0, 787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 112, 1874, 0, 4386, 0, 0,
	0, 0, 0, 0, 0, 1842, 1855, 0, 0, 0,
	0, 0, 0, 0, 4756, 1848, 0, 3554, 0, 0,
	4758, 0, 0, 0, 0, 0, 0, 1872, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 1843, 0,
	4386, 1872, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2016, 0, 271, 0, 0, 0, 717, 717,
	1342, 0, 0, 0, 0, 0, 2501, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	1872, 1839, 1835, 271, 1832, 1830, 1831, 1823, 1824, 1825,
	1826, 1828, 1829, 271, 73, 0, 1874, 0, 271, 0,
	0, 0, 0, 271, 0, 1843, 0, 0, 0, 0,
	0, 74, 0, 0, 0, 0, 0, 0, 0, 1843,
	0, 0, 2911, 271, 0, 0, 0, 79, 0, 0,
	1094, 0, 3119, 3119, 2501, 1848, 0, 0, 906, 906,
	2911, 0, 0, 0, 3090, 3090, 0, 0, 906, 2911,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 0,
	0, 0, 0, 1874, 0, 0, 0, 88, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 1874, 0, 0,
	0, 0, 1839, 1835, 0, 1832, 1830, 1831, 1823, 1824,
	1825, 1826, 1828, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 900, 0,
	0, 0, 0, 0, 0, 0, 1874, 0, 0, 0,
	49, 0, 110, 0, 0, 0, 0, 94, 107, 0,
	112, 0, 0, 112, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4138, 1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828,
	1829, 0, 0, 1855, 0, 0, 0, 1830, 1831, 1823,
	1824, 1825, 1826, 1828, 1829, 0, 0, 0, 0, 0,
	0, 112, 0, 0, 112, 0, 0, 95, 0, 0,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1839, 1835, 0, 1832, 1830, 1831, 1823, 1824,
	1825, 1826, 1828, 1829, 271, 0, 0, 0, 0, 0,
	1535, 0, 271, 0, 0, 0, 0, 0, 1819, 1820,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1850, 1342, 0, 0, 0, 0, 0, 1822, 0,
	0, 0, 0, 0, 0, 1342, 0, 0, 112, 0,
	0, 0, 2911, 2911, 0, 3554, 2911, 0, 0, 0,
	0, 0, 0, 4227, 1875, 4227, 1535, 0, 0, 0,
	0, 0, 0, 1821, 0, 1819, 1820, 2911, 0, 2022,
	0, 0, 0, 1535, 1535, 271, 2016, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1850, 2016,
	0, 271, 2016, 0, 271, 1822, 3554, 0, 0, 0,
	0, 0, 0, 0, 0, 99, 0, 0, 0, 0,
	0, 2911, 0, 2911, 271, 0, 0, 0, 0, 1855,
	0, 1875, 0, 0, 0, 1855, 0, 273, 0, 0,
	1821, 1855, 0, 0, 0, 0, 1819, 1820, 0, 0,
	1841, 0, 0, 0, 0, 0, 0, 0, 0, 2911,
	0, 0, 0, 0, 4312, 0, 0, 0, 0, 1850,
	190, 102, 0, 0, 106, 271, 1822, 0, 1827, 0,
	0, 0, 0, 0, 2562, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 1875, 0, 0, 1895, 0, 0, 901, 0,
	0, 1821, 0, 153, 4227, 0, 0, 1535, 0, 0,
	0, 1841, 0, 0, 0, 0, 0, 1849, 1851, 0,
	1838, 0, 0, 0, 0, 1844, 1845, 1846, 1847, 0,
	0, 1855, 0, 0, 0, 1827, 1855, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1855,
	0, 0, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3238, 1842, 0, 0, 194,
	0, 0, 0, 0, 1849, 1851, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 1844, 1845, 1846, 1847,
	233, 0, 0, 0, 0, 0, 1827, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1855,
	0, 0, 1109, 1819, 1820, 1855, 2911, 0, 2022, 0,
	0, 4427, 0, 0, 0, 0, 1643, 0, 0, 0,
	271, 0, 0, 1842, 0, 0, 1850, 0, 0, 0,
	4451, 1872, 4451, 1822, 0, 1849, 1851, 0, 0, 0,
	0, 0, 0, 1351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 787, 0, 0, 1875,
	0, 1836, 1837, 0, 0, 0, 0, 3554, 1821, 1332,
	1094, 1094, 1094, 0, 0, 0, 0, 1253, 1841, 0,
	0, 0, 0, 0, 2016, 0, 271, 1838, 0, 0,
	0, 0, 0, 1253, 1842, 0, 0, 0, 1872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	0, 4427, 0, 0, 0, 0, 0, 0, 0, 2911,
	0, 0, 0, 0, 1537, 0, 1543, 0, 1549, 0,
	0, 0, 0, 0, 0, 0, 0, 4531, 1855, 1855,
	1855, 1855, 1855, 1855, 1855, 1855, 0, 0, 0, 1535,
	0, 0, 0, 1848, 0, 0, 0, 0, 1855, 0,
	0, 4227, 4227, 1844, 1845, 1846, 1847, 1874, 0, 1872,
	0, 1855, 0, 1827, 0, 0, 1843, 0, 0, 0,
	0, 271, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1649, 0, 1654,
	0, 0, 0, 0, 0, 3797, 0, 0, 0, 0,
	0, 0, 1667, 0, 1672, 0, 0, 2743, 0, 0,
	0, 0, 1849, 1851, 1848, 3554, 4599, 0, 0, 0,
	1855, 0, 0, 4427, 1874, 0, 1855, 0, 0, 0,
	0, 112, 112, 0, 112, 112, 112, 1843, 1836, 1837,
	0, 0, 0, 4227, 0, 0, 0, 0, 0, 1823,
	1824, 1825, 1826, 1828, 1829, 0, 0, 0, 4227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1842, 1737, 0, 0, 1743, 0, 0, 0, 0,
	271, 0, 112, 112, 0, 112, 112, 112, 0, 0,
	0, 0, 717, 0, 0, 1874, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4312,
	0, 0, 0, 1832, 1830, 1831, 1823, 1824, 1825, 1826,
	1828, 1829, 0, 0, 0, 4227, 0, 271, 4227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2022, 0,
	0, 0, 0, 0, 0, 0, 1872, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1535, 0, 1535, 0, 0, 0,
	0, 0, 0, 1876, 1877, 1878, 1879, 1880, 1881, 1882,
	1883, 1839, 1835, 0, 1832, 1830, 1831, 1823, 1824, 1825,
	1826, 1828, 1829, 0, 0, 0, 0, 1253, 0, 0,
	1089, 1848, 4711, 0, 0, 0, 1896, 0, 0, 0,
	0, 0, 1909, 0, 112, 112, 0, 0, 4451, 0,
	0, 271, 0, 0, 1843, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2911, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1874, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3797, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 73, 0,
	1143, 0, 0, 0, 1535, 0, 0, 1968, 1968, 1968,
	0, 0, 0, 0, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 270, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 1835,
	0, 1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829,
	0, 88, 1109, 1109, 1109, 830, 4427, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1491, 0, 0, 0, 1491, 0, 0, 0, 0, 0,
	0, 0, 0, 830, 0, 0, 0, 0, 0, 0,
	0, 0, 900, 0, 0, 0, 2911, 0, 0, 0,
	0, 0, 0, 4227, 49, 4227, 110, 0, 1535, 0,
	0, 94, 107, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1094, 1855, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1535, 0, 0, 0, 1855, 0,
	0, 1253, 1253, 0, 0, 0, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3119, 0, 0, 0, 1855, 0,
	0, 0, 1855, 2911, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 3119,
	0, 0, 1266, 0, 0, 1855, 1855, 1855, 1855, 1855,
	1855, 1855, 1855, 1855, 1855, 1855, 1855, 1855, 1855, 1855,
	1855, 1855, 1855, 1855, 1855, 1855, 1855, 1855, 1855, 1855,
	1855, 1855, 1855, 1855, 1855, 1855, 1855, 1855, 1855, 1855,
	1855, 0, 0, 0, 0, 0, 1855, 0, 1855, 1855,
	1855, 1855, 0, 0, 0, 0, 0, 0, 0, 0,
	2743, 2743, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 99,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 102, 1855, 0, 106, 1855,
	0, 0, 1855, 0, 0, 1855, 0, 0, 0, 0,
	0, 1855, 1855, 1855, 1855, 1855, 1855, 1855, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 901, 112, 0, 0, 0, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 1855, 0, 0,
	3351, 0, 2743, 2743, 2743, 2743, 0, 0, 0, 1855,
	0, 1855, 0, 0, 0, 0, 1855, 0, 157, 0,
	0, 0, 2410, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 194, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 2436, 0, 0,
	0, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1641, 0, 0, 2476, 0, 2480, 0, 0, 0, 0,
	0, 0, 2494, 0, 0, 0, 0, 0, 0, 2503,
	2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513,
	2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523,
	2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533,
	2534, 2535, 2536, 2537, 2538, 0, 2544, 0, 2546, 2547,
	2548, 2549, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 112, 0, 0, 0, 0, 0,
	1253, 0, 0, 0, 2573, 0, 0, 0, 1253, 0,
	0, 0, 0, 0, 0, 0, 1896, 0, 0, 0,
	2624, 0, 0, 1109, 0, 0, 0, 0, 0, 0,
	0, 1491, 0, 0, 0, 0, 2654, 2657, 2660, 2663,
	0, 0, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2735, 0, 2747, 2749, 2754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 270, 270, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1819, 1820, 0,
	1852, 1853, 1854, 1863, 1864, 1865, 0, 0, 0, 0,
	0, 0, 1855, 1855, 0, 1855, 0, 0, 0, 1856,
	1850, 0, 270, 0, 270, 270, 0, 1822, 270, 270,
	0, 0, 0, 0, 0, 0, 1869, 112, 0, 0,
	0, 0, 0, 0, 1491, 0, 0, 830, 0, 0,
	112, 0, 0, 1875, 0, 0, 0, 0, 0, 0,
	0, 0, 1821, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1841, 112, 0, 0, 0, 0, 0, 0,
	0, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1844, 1845, 1846,
	1847, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1855, 1855, 0, 2743, 2743, 1860, 0, 1855, 1870,
	0, 0, 0, 0, 0, 0, 1849, 1851, 3351, 3351,
	0, 0, 1855, 1855, 0, 0, 0, 0, 0, 270,
	0, 0, 1855, 1866, 0, 1867, 0, 0, 0, 0,
	0, 0, 1836, 1837, 0, 0, 1855, 0, 1179, 0,
	0, 0, 0, 270, 0, 0, 3050, 3051, 1855, 3053,
	1858, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1842, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2743, 2743, 2743, 2743, 2743, 2743,
	2743, 2743, 2743, 2743, 2743, 2743, 2743, 2743, 2743, 2743,
	2743, 2743, 2743, 2743, 0, 2743, 3351, 3351, 3351, 3351,
	0, 1868, 0, 0, 0, 0, 0, 0, 0, 1491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1857,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1872, 1855, 0, 0, 0, 0, 0, 0, 0, 2562,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3183, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1491, 0, 0, 0, 0, 0, 1843, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1861, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1876,
	1877, 0, 0, 0, 1855, 1990, 0, 1266, 0, 0,
	0, 270, 0, 0, 0, 0, 1874, 0, 0, 0,
	1270, 0, 1491, 0, 0, 0, 0, 270, 1990, 270,
	0, 0, 0, 0, 0, 0, 830, 0, 0, 0,
	0, 0, 0, 830, 112, 0, 0, 0, 1491, 0,
	0, 0, 0, 747, 0, 3239, 3240, 0, 0, 0,
	0, 3246, 0, 0, 0, 0, 0, 0, 112, 0,
	270, 0, 0, 730, 0, 0, 0, 270, 731, 0,
	3260, 3261, 0, 0, 0, 0, 2624, 0, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1833, 1834,
	1840, 1862, 1839, 1835, 0, 1832, 1830, 1831, 1823, 1824,
	1825, 1826, 1828, 1829, 0, 0, 0, 732, 4146, 0,
	0, 0, 4145, 0, 0, 0, 0, 0, 733, 0,
	0, 3270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3284, 0, 734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3296, 0, 0, 0, 0, 0,
	0, 753, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 735, 0, 1491, 0, 0, 0, 0, 0,
	0, 112, 0, 0, 0, 0, 0, 112, 0, 0,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 737, 0,
	0, 738, 1855, 1855, 0, 0, 1855, 3351, 3351, 1855,
	0, 0, 0, 1855, 0, 0, 0, 0, 762, 0,
	1855, 0, 0, 0, 0, 0, 2754, 2754, 2754, 0,
	0, 1491, 0, 1855, 0, 270, 0, 0, 0, 830,
	0, 1968, 0, 752, 0, 0, 0, 0, 0, 3389,
	0, 0, 0, 0, 0, 0, 1855, 1855, 1855, 1855,
	1855, 0, 0, 0, 0, 0, 1855, 0, 1855, 0,
	0, 3351, 3351, 3351, 3351, 3351, 3351, 3351, 3351, 3351,
	3351, 3351, 3351, 3351, 3351, 3351, 3351, 3351, 3351, 3351,
	3351, 0, 0, 0, 3351, 0, 0, 1855, 1855, 0,
	0, 0, 749, 270, 0, 0, 0, 270, 0, 1855,
	0, 0, 0, 270, 0, 0, 0, 0, 1855, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 270, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1094, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 1094,
	0, 0, 0, 759, 0, 740, 0, 0, 0, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3512, 0, 760, 0, 741, 0, 1855, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 830, 270, 0, 270, 0,
	270, 0, 270, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 761, 0, 0, 0,
	0, 0, 0, 0, 742, 0, 0, 0, 0, 757,
	758, 755, 0, 0, 0, 0, 0, 750, 0, 0,
	743, 0, 0, 0, 0, 0, 270, 270, 270, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 744, 0, 751, 0, 0, 0, 1855, 0,
	0, 0, 0, 745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 746, 0, 0,
	0, 1270, 754, 0, 0, 1270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 763, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 748, 1855, 1855,
	0, 0, 0, 1855, 1855, 0, 0, 1855, 1855, 0,
	0, 0, 1855, 0, 0, 0, 1855, 0, 1270, 0,
	0, 1855, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2743, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1270, 0, 0, 0, 0, 0,
	0, 1270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1270, 0, 0,
	0, 0, 0, 0, 0, 2743, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1266, 0, 0, 2494, 0, 0,
	0, 0, 0, 3750, 3751, 1270, 0, 3754, 270, 0,
	0, 3757, 0, 0, 0, 0, 0, 0, 0, 0,
	3761, 0, 0, 0, 0, 0, 0, 0, 270, 3768,
	0, 0, 0, 0, 3389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3781,
	0, 0, 0, 0, 0, 1491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3804,
	3805, 0, 3806, 3807, 3808, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1491, 0,
	3814, 0, 270, 0, 3816, 270, 0, 0, 0, 270,
	0, 270, 0, 1491, 0, 0, 0, 0, 270, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 1855, 1855, 1855, 0, 3845, 3846, 1491,
	0, 0, 0, 0, 1855, 1855, 3351, 2743, 0, 0,
	0, 0, 0, 1855, 0, 3857, 1855, 0, 0, 0,
	0, 0, 0, 0, 850, 0, 0, 0, 0, 0,
	3866, 0, 0, 0, 0, 0, 0, 1109, 0, 0,
	0, 0, 0, 0, 852, 270, 0, 3351, 2743, 853,
	0, 1109, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 270, 1855, 2743, 0, 0, 0, 0, 0, 0,
	1855, 0, 0, 0, 0, 0, 0, 0, 854, 1855,
	871, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 3916, 0, 0, 855, 0, 0, 1819, 1820,
	856, 1852, 1853, 1854, 1863, 1864, 1865, 0, 0, 0,
	3927, 0, 0, 0, 0, 0, 830, 0, 0, 0,
	1856, 1850, 880, 0, 0, 0, 1491, 0, 1822, 857,
	0, 0, 0, 1270, 0, 1270, 0, 1869, 0, 0,
	0, 0, 0, 878, 3956, 0, 270, 0, 830, 0,
	1270, 0, 0, 0, 1875, 270, 0, 0, 0, 0,
	0, 0, 0, 1821, 0, 0, 851, 0, 0, 0,
	2053, 0, 0, 1841, 3351, 0, 0, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 1491, 0, 0, 858,
	0, 0, 859, 0, 0, 0, 1855, 3351, 0, 0,
	1855, 0, 0, 0, 882, 0, 0, 0, 0, 762,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 3351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1855, 1844, 1845,
	1846, 1847, 0, 0, 0, 0, 0, 0, 1827, 0,
	0, 0, 1270, 0, 0, 0, 1968, 0, 0, 0,
	0, 0, 0, 881, 0, 4066, 0, 0, 0, 0,
	0, 0, 0, 876, 270, 270, 270, 270, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 1860, 270, 0,
	1870, 0, 0, 0, 0, 0, 0, 1849, 1851, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1491, 0, 1866, 1491, 1867, 0, 0, 270,
	0, 0, 0, 1836, 1837, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 860, 0, 0, 0, 0,
	0, 1858, 0, 0, 0, 0, 862, 0, 4116, 4117,
	0, 0, 0, 0, 4121, 4122, 1842, 0, 1855, 4125,
	4126, 0, 0, 0, 0, 0, 0, 4130, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 863, 4134, 0,
	0, 1855, 0, 0, 0, 1270, 1270, 0, 0, 0,
	0, 0, 1491, 0, 4139, 1270, 0, 0, 0, 0,
	0, 0, 1868, 0, 0, 872, 0, 0, 0, 1491,
	0, 0, 0, 0, 0, 0, 0, 761, 0, 0,
	1857, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	849, 1872, 873, 0, 0, 0, 0, 0, 0, 0,
	0, 864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 865, 0, 0, 1848, 866, 885, 0,
	884, 0, 0, 0, 867, 0, 0, 0, 0, 0,
	1270, 0, 1270, 0, 1270, 0, 0, 0, 868, 1843,
	0, 0, 0, 877, 0, 0, 1855, 0, 0, 886,
	1855, 883, 1270, 1270, 0, 0, 0, 763, 0, 0,
	0, 0, 0, 0, 0, 1270, 1861, 0, 0, 0,
	0, 0, 0, 0, 1491, 0, 0, 1270, 0, 1270,
	1270, 1270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1874, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1859,
	0, 0, 0, 1990, 0, 0, 0, 0, 0, 1833,
	1834, 1840, 1862, 1839, 1835, 270, 1832, 1830, 1831, 1823,
	1824, 1825, 1826, 1828, 1829, 0, 0, 0, 0, 3305,
	0, 0, 0, 3306, 0, 0, 0, 0, 2053, 2053,
	1270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 270, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4381, 4382, 4383, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 747, 0, 0, 0, 0, 0, 2494, 0, 0,
	4392, 4393, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 730, 0, 0, 0, 0, 731, 0, 4401, 4404,
	1819, 1820, 0, 1852, 1853, 1854, 1863, 1864, 1865, 0,
	270, 270, 0, 1270, 270, 0, 0, 0, 0, 0,
	0, 1990, 1856, 1850, 0, 0, 0, 0, 0, 0,
	1822, 0, 0, 0, 0, 732, 270, 0, 0, 1869,
	0, 0, 0, 0, 0, 0, 733, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1875, 0, 0, 0,
	0, 0, 4452, 0, 0, 1821, 0, 734, 0, 0,
	0, 4460, 0, 0, 0, 1841, 1270, 0, 0, 0,
	0, 1491, 0, 1270, 1838, 4468, 0, 0, 1094, 753,
	0, 0, 1270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4477, 0, 0, 0, 0, 1491, 270, 1270,
	735, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 830, 0, 0, 0,
	0, 0, 0, 736, 0, 270, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 737, 270, 0, 738,
	1844, 1845, 1846, 1847, 0, 0, 0, 1266, 0, 0,
	1827, 0, 0, 0, 0, 0, 762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 752, 0, 0, 0, 0, 0, 0, 0, 1860,
	0, 0, 1870, 0, 0, 0, 0, 0, 0, 1849,
	1851, 0, 0, 0, 0, 0, 0, 0, 0, 1491,
	1491, 0, 1491, 0, 0, 0, 1866, 0, 1867, 0,
	0, 0, 0, 0, 0, 1836, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 1270, 0, 0, 0, 0,
	749, 1491, 0, 1858, 0, 0, 0, 270, 0, 270,
	4604, 0, 0, 0, 4608, 0, 0, 0, 1842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2053,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1491, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 1270, 740, 0, 0, 0, 1491, 0, 0,
	0, 0, 1857, 0, 0, 0, 0, 0, 0, 0,
	0, 1094, 1094, 1872, 0, 0, 0, 0, 0, 0,
	0, 4665, 760, 0, 741, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 761, 0, 0, 1491, 1848, 0,
	0, 0, 742, 0, 0, 2494, 0, 757, 758, 755,
	0, 0, 0, 0, 4404, 750, 0, 0, 743, 1270,
	0, 1843, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1270, 0, 1270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1861, 0,
	0, 1266, 1266, 1270, 1491, 0, 0, 0, 0, 1094,
	744, 0, 751, 0, 0, 0, 0, 0, 0, 0,
	0, 745, 0, 0, 0, 0, 0, 0, 0, 1874,
	0, 0, 0, 0, 1491, 746, 0, 0, 0, 0,
	754, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 748, 0, 0, 0, 4786,
	4786, 4786, 0, 0, 0, 0, 0, 1491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1859, 4809, 1491, 0, 0, 0, 0, 0, 0,
	0, 1833, 1834, 1840, 1862, 1839, 1835, 0, 1832, 1830,
	1831, 1823, 1824, 1825, 1826, 1828, 1829, 0, 0, 0,
	0, 2620, 0, 0, 0, 2621, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1156, 0, 0,
	1109, 0, 0, 0, 0, 0, 0, 0, 0, 4786,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 272, 272, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 1491, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 0, 0, 0, 270, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 1820, 0, 1852, 1853, 1854, 1863, 1864, 1865, 1266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4786, 4944, 1856, 1850, 0, 0, 0, 0, 0, 4948,
	1822, 0, 0, 0, 0, 0, 0, 0, 0, 1869,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1875, 0, 0, 0,
	0, 0, 270, 0, 0, 1821, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1841, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1270, 1270, 0, 0, 0,
	0, 0, 0, 1109, 1109, 0, 0, 0, 0, 0,
	0, 1270, 0, 0, 0, 0, 0, 0, 0, 0,
	1844, 1845, 1846, 1847, 0, 0, 0, 0, 0, 1270,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1270, 0, 0, 1270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1266, 0, 0, 0, 0, 0, 2053, 0, 1266, 1860,
	1270, 0, 1870, 0, 0, 0, 0, 0, 0, 1849,
	1851, 0, 1990, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 0, 1867, 0,
	0, 0, 0, 0, 0, 1836, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1109, 0, 1858, 0, 0, 0, 0, 0, 1990,
	0, 1990, 0, 0, 0, 0, 0, 2053, 1842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1857, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1872, 0, 0, 0, 1270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 1270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 1270, 0, 1270, 0, 0, 0, 1270, 0, 0,
	1990, 0, 0, 0, 1259, 1270, 0, 0, 0, 0,
	0, 1843, 0, 0, 0, 0, 1270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1861, 0,
	0, 0, 0, 0, 0, 1270, 0, 0, 0, 0,
	266, 266, 697, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1874,
	1270, 1270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1270, 0, 1270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 1859, 0, 1270, 0, 0, 1270, 0, 0, 0,
	0, 1833, 1834, 1840, 1862, 1839, 1835, 0, 1832, 1830,
	1831, 1823, 1824, 1825, 1826, 1828, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 4144, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 2053, 0, 272, 0, 272, 272,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2053, 2053, 0, 0, 0, 0, 0, 0, 0, 272,
	1411, 272, 272, 0, 1411, 272, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 1990, 2053,
	2053, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 1411, 0, 0,
	0, 0, 2053, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 272, 0, 0, 1270,
	1270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1411, 0, 0, 0, 0, 0, 0,
	1411, 272, 272, 0, 0, 0, 0, 0, 0, 1990,
	0, 0, 0, 0, 0, 1270, 1411, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 270, 1990, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1270, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2053, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1270, 1270,
	1270, 822, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1270, 1270, 1270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 822,
	0, 0, 0, 0, 0, 0, 1270, 0, 0, 0,
	270, 0, 1270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2053,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1411,
	0, 0, 0, 0, 272, 272, 272, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 1318, 0, 1318, 1318, 0, 0, 1990,
	0, 1990, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1402, 0, 1270, 0,
	0, 0, 1509, 0, 0, 0, 1270, 0, 0, 0,
	1270, 1270, 0, 1270, 0, 0, 0, 0, 0, 0,
	1270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1270, 1270, 0, 0, 0, 0, 0, 0, 0,
	0, 1411, 1270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1270, 0, 1270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1647, 1648,
	0, 0, 1270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1270, 1270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 1411, 1411, 272, 0, 0, 0,
	0, 0, 0, 0, 1411, 0, 0, 0, 1270, 0,
	0, 0, 0, 1270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1764, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1270, 1270, 1270, 1270, 1270, 1148, 0, 0, 0, 0,
	272, 0, 0, 0, 272, 1270, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 272, 1270, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 1411,
	0, 1411, 0, 1411, 0, 0, 2053, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1411, 1411, 0, 0, 0, 0, 0, 1270, 0,
	1270, 0, 0, 0, 1411, 272, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 1411, 0, 1411, 1411,
	1411, 0, 0, 0, 1270, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 272, 0, 272, 0, 272, 0, 272,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 2053,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1270, 272, 272, 272, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1270,
	1270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2006, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1411,
	0, 2017, 0, 1509, 1270, 0, 0, 1270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1270, 1270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1318, 0, 0, 0, 0, 0,
	0, 1509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2053, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1408,
	0, 0, 0, 1408, 0, 0, 0, 0, 0, 0,
	0, 0, 1411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1270, 0, 0,
	0, 0, 0, 0, 0, 0, 1567, 0, 0, 0,
	0, 0, 1270, 0, 0, 0, 1819, 1820, 0, 1852,
	1853, 1854, 1863, 1864, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1856, 1850,
	0, 0, 1411, 0, 0, 0, 1822, 0, 0, 0,
	0, 0, 1567, 0, 0, 1869, 0, 0, 0, 1567,
	0, 0, 0, 0, 0, 272, 0, 0, 1411, 0,
	0, 0, 1875, 0, 0, 1567, 0, 0, 0, 1270,
	0, 1821, 1270, 0, 0, 272, 1270, 0, 0, 0,
	0, 1841, 0, 0, 0, 0, 1270, 1270, 0, 0,
	1838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1567, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 272, 0, 0, 0, 272, 0, 272, 0,
	0, 0, 0, 0, 0, 272, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 1844, 1845, 1846, 1847,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2289, 0, 0,
	0, 2296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2309, 1411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1860, 0, 0, 1870, 2321,
	0, 2321, 272, 0, 0, 1849, 1851, 2328, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 1866, 0, 1867, 0, 0, 0, 272, 0,
	0, 1836, 1837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1858,
	0, 0, 2296, 0, 0, 2358, 0, 0, 0, 0,
	272, 1411, 0, 0, 1842, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2394, 0, 2396, 272, 2398, 0, 2400, 0, 2401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 272, 0, 0, 1857, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 1872,
	2428, 2429, 2430, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1270, 1411, 1270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1411, 0, 1411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 1411, 0, 1848, 0, 0, 0, 1408, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 272,
	0, 0, 822, 0, 0, 0, 0, 1843, 1409, 822,
	272, 0, 1409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1861, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1568, 0, 0, 0, 0,
	0, 272, 272, 272, 272, 1874, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1568, 0, 0, 0, 0, 272, 0, 1568, 0,
	1408, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1568, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1859, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 1834, 1840,
	1862, 1839, 1835, 0, 1832, 1830, 1831, 1823, 1824, 1825,
	1826, 1828, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 3766, 2811, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1567, 1567, 0, 0, 0, 0, 0,
	0, 0, 0, 1408, 0, 0, 2860, 0, 0, 1318,
	0, 0, 0, 1318, 0, 1318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1567, 0,
	1567, 0, 1567, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1567, 1567, 0, 0, 0, 1411, 0, 0, 0, 0,
	0, 0, 0, 1567, 0, 0, 0, 1509, 0, 0,
	0, 0, 0, 0, 0, 1567, 0, 1567, 1567, 1567,
	0, 0, 0, 0, 0, 0, 0, 0, 1411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 822, 0, 1411, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1411,
	2296, 0, 0, 0, 0, 0, 0, 0, 0, 2309,
	0, 0, 0, 0, 0, 0, 0, 1409, 0, 0,
	0, 272, 0, 0, 0, 272, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 3153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1408, 0,
	0, 0, 0, 0, 3164, 0, 3167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 272, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1409,
	0, 0, 0, 0, 0, 0, 1411, 0, 3199, 1509,
	3201, 1509, 0, 0, 0, 0, 0, 3207, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1411, 0, 0, 0,
	0, 0, 0, 1318, 0, 272, 0, 0, 0, 0,
	1411, 3236, 1411, 0, 0, 0, 1411, 0, 0, 0,
	0, 0, 0, 272, 1411, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 1411, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1408, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1408, 0, 0,
	0, 0, 1568, 1568, 0, 0, 0, 0, 0, 1411,
	1411, 0, 1409, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1411, 0, 1411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1411, 0, 272, 1411, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1568, 0, 1568,
	0, 1568, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1568,
	1568, 0, 0, 1408, 0, 0, 0, 0, 0, 0,
	0, 0, 1568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1411, 0, 1568, 0, 1568, 1568, 1568, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 1820, 0, 1852, 1853, 1854, 1863, 1864,
	1865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1850, 0, 0, 0, 0,
	1408, 0, 1822, 0, 0, 0, 0, 0, 0, 0,
	0, 1869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1875, 0,
	0, 0, 0, 0, 0, 0, 0, 1821, 0, 3437,
	0, 0, 0, 0, 0, 0, 0, 1841, 0, 0,
	0, 0, 0, 0, 0, 0, 1838, 0, 0, 0,
	0, 0, 0, 0, 822, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1409, 1318, 0,
	0, 0, 1509, 1509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1411, 0, 0, 1567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1567, 3482, 1567, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1567, 1844, 1845, 1846, 1847, 0, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3531, 3533, 0, 0, 2309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1409, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1860, 0, 0, 1870, 0, 0, 0, 0, 0,
	0, 1849, 1851, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1836, 1837, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1858, 0, 0, 0, 0,
	1409, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	1842, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1411, 0, 0, 0, 0, 1409, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3630,
	0, 0, 0, 3634, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 1411, 0, 0, 1872, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3687, 0, 0, 1411, 1411, 1411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1411, 1411, 1411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 1411, 0, 0, 0, 272,
	0, 1411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 0, 0, 0, 0, 0, 0,
	0, 3735, 1409, 1509, 0, 0, 0, 1411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1861, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3748, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1874, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1859, 1408, 0, 0, 0, 0, 1411,
	1411, 0, 1411, 1833, 1834, 1840, 1862, 1839, 1835, 0,
	1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829, 0,
	1411, 1411, 0, 0, 0, 0, 0, 1408, 0, 0,
	0, 1411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1408, 0, 0, 0, 1568, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1568, 0, 1568, 0, 0, 0, 0, 1408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	1568, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1411, 0, 0, 272, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1411, 1411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 1411, 272, 0,
	0, 0, 1411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1408, 0, 0, 0, 1411,
	1411, 1411, 1411, 1411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1567, 0, 0, 0, 0,
	0, 0, 0, 0, 1411, 0, 0, 0, 0, 1567,
	0, 1567, 0, 0, 2309, 1408, 0, 0, 0, 0,
	0, 0, 822, 1567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2309, 1567, 0, 0, 0, 0, 0,
	0, 0, 0, 4030, 0, 0, 0, 1411, 0, 1411,
	0, 0, 0, 0, 0, 0, 0, 0, 2309, 0,
	0, 0, 0, 4048, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 1567, 1567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1567, 0, 1567, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4101, 0, 0, 0,
	0, 1411, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 1411, 1411,
	0, 1408, 0, 0, 1408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 1820, 0, 1852, 1853, 1854, 1863, 1864,
	1865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1411, 1856, 1850, 1411, 0, 0, 0,
	0, 0, 1822, 0, 0, 0, 0, 0, 0, 0,
	0, 1869, 0, 1409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1875, 0,
	0, 1408, 0, 0, 272, 272, 0, 1821, 0, 0,
	0, 0, 0, 0, 0, 0, 1409, 1841, 1408, 0,
	0, 0, 0, 0, 0, 0, 1838, 0, 0, 0,
	0, 1409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1844, 1845, 1846, 1847, 0, 0, 0, 0,
	0, 0, 1827, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1860, 0, 1408, 1870, 0, 0, 0, 0, 0,
	272, 1849, 1851, 0, 0, 1411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1411, 1411, 0, 1866, 0,
	1867, 0, 0, 0, 0, 0, 0, 1836, 1837, 0,
	0, 0, 1411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1409, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2309, 0, 0, 0, 0,
	1842, 0, 0, 0, 0, 4334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1568, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 1568, 0,
	1568, 0, 0, 0, 1409, 0, 1868, 0, 0, 0,
	0, 0, 1568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1568, 1857, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1872, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1567, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1568, 1568, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1568, 0, 1568, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 0, 0, 0, 272, 0, 0,
	0, 1567, 0, 0, 0, 0, 0, 0, 0, 0,
	4437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1861, 0, 0, 0, 0, 0, 1567, 1567, 1567, 0,
	1409, 0, 0, 1409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1567, 1567, 1567, 0, 0, 0, 0,
	0, 1874, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1567, 0, 0, 0, 0, 0,
	1408, 0, 0, 0, 0, 0, 2309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1409, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1859, 0, 0, 0, 1409, 0, 0,
	0, 0, 0, 1833, 1834, 1840, 1862, 1839, 1835, 0,
	1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 3308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4572, 1509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1408, 1408,
	0, 1408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1567,
	1567, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1408, 4670, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1567, 1567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 1820, 0, 1852, 1853, 1854, 1863, 1864, 1865, 0,
	0, 0, 0, 0, 0, 0, 1408, 0, 0, 0,
	0, 1567, 1856, 1850, 0, 0, 0, 0, 0, 0,
	1822, 0, 0, 0, 0, 0, 0, 0, 0, 1869,
	0, 4724, 0, 0, 0, 0, 0, 0, 0, 1568,
	0, 0, 0, 0, 0, 0, 1875, 0, 1567, 1567,
	1567, 1567, 1567, 0, 0, 1821, 0, 0, 0, 0,
	0, 0, 0, 1408, 0, 1841, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 0, 0, 4763, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1408, 0, 0, 0, 0, 0, 0,
	1568, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1568, 1568, 1568, 0, 0,
	0, 0, 0, 0, 0, 0, 1408, 0, 1567, 0,
	0, 0, 1568, 1568, 1568, 0, 0, 0, 0, 0,
	1844, 1845, 1846, 1847, 4829, 0, 0, 0, 0, 0,
	1827, 0, 1408, 1568, 0, 0, 0, 0, 0, 1409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1409, 0, 0, 0, 1860,
	0, 0, 1870, 0, 0, 0, 0, 0, 0, 1849,
	1851, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 0, 1867, 0,
	1408, 0, 0, 0, 0, 1836, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1567, 1567, 0,
	0, 0, 0, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1842, 0,
	0, 1819, 1820, 0, 1852, 1853, 1854, 1863, 1864, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1408, 1856, 1850, 1567, 0, 0, 0, 0,
	0, 1822, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 1868, 0, 0, 1409, 1409, 0,
	1409, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 0, 1857, 0, 0, 0, 1821, 0, 1568, 1568,
	0, 0, 0, 1872, 0, 0, 1841, 0, 0, 1409,
	0, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 0, 0, 0, 1409, 0, 0, 0, 0,
	0, 1844, 1845, 1846, 1847, 0, 0, 0, 0, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 1861, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1568, 1568, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1874,
	1860, 0, 0, 1870, 0, 0, 0, 0, 0, 0,
	1849, 1851, 0, 0, 1567, 1409, 0, 0, 0, 0,
	1568, 0, 0, 0, 1567, 1567, 0, 1866, 0, 1867,
	0, 0, 0, 0, 0, 0, 1836, 1837, 0, 0,
	0, 1567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1858, 0, 0, 1568, 1568, 1568,
	1568, 1568, 0, 0, 0, 0, 0, 0, 0, 1842,
	0, 1859, 1409, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 1834, 1840, 1862, 1839, 1835, 0, 1832, 1830,
	1831, 1823, 1824, 1825, 1826, 1828, 1829, 0, 0, 0,
	0, 0, 1409, 0, 0, 3307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1872, 1409, 0, 1568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1861,
	0, 0, 0, 0, 0, 0, 1568, 1568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1874, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1409, 0, 0, 1568, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1833, 1834, 1840, 1862, 1839, 1835, 0, 1832,
	1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 3304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1406, 0, 0, 1568, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1568, 1568, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 1412, 287, 288, 1413, 1414, 1415,
	1568, 1416, 643, 1417, 1418, 1419, 1420, 289, 290, 1210,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 1421, 648, 299, 300, 301, 302, 303,
	304, 1422, 1423, 0, 305, 649, 650, 651, 1424, 306,
	307, 652, 1425, 1492, 1426, 308, 309, 310, 311, 312,
	313, 314, 0, 1427, 316, 317, 318, 315, 319, 1428,
	320, 0, 321, 322, 323, 324, 325, 326, 1429, 327,
	328, 329, 1211, 330, 331, 332, 1430, 1431, 1433, 1432,
	1434, 1435, 1436, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 1437, 343, 339, 341, 1438, 344, 342,
	345, 1439, 346, 347, 348, 1440, 1441, 349, 350, 351,
	1442, 352, 353, 1443, 354, 355, 356, 1444, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 1445, 277, 1446, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 1447,
	375, 376, 377, 1448, 1449, 1212, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1450, 390, 661, 1451, 662, 391, 1452, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 1214, 397, 398, 1453,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 1454, 1213, 407, 666, 667, 1455, 668,
	1456, 409, 410, 1215, 669, 1216, 411, 412, 413, 1217,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	1457, 421, 423, 422, 1458, 424, 670, 1218, 425, 426,
	1219, 1459, 427, 428, 429, 430, 431, 432, 435, 1460,
	1461, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1220, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1221, 477, 465, 1462,
	279, 1222, 478, 479, 1463, 671, 480, 672, 482, 483,
	1464, 0, 484, 0, 1465, 1466, 486, 487, 488, 1467,
	1468, 489, 490, 673, 1223, 491, 1224, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	1469, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 1470, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 1471, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 1472, 543, 544, 545,
	1225, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 1473, 568, 569, 567, 570, 571, 572, 1474, 573,
	574, 556, 557, 575, 576, 1226, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 1475, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 1476, 600, 601, 0, 597, 588, 1477,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 1478,
	610, 684, 685, 686, 687, 1479, 619, 1480, 611, 612,
	613, 688, 614, 689, 1481, 615, 616, 617, 618, 0,
	620, 621, 1482, 1483, 622, 623, 624, 626, 627, 625,
	628, 1484, 629, 1485, 0, 630, 631, 632, 690, 691,
	692, 1486, 634, 633, 635, 693, 636, 637, 1487, 1488,
	1489, 1490, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1406, 0, 0,
	0, 0, 0, 0, 0, 2789, 0, 0, 0, 0,
	0, 0, 0, 2790, 280, 282, 281, 283, 284, 285,
	286, 1412, 287, 288, 1413, 1414, 1415, 0, 1416, 643,
	1417, 1418, 1419, 1420, 289, 290, 1210, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	1421, 648, 299, 300, 301, 302, 303, 304, 1422, 1423,
	0, 305, 649, 650, 651, 1424, 306, 307, 652, 1425,
	1492, 1426, 308, 309, 310, 311, 312, 313, 314, 0,
	1427, 316, 317, 318, 315, 319, 1428, 320, 0, 321,
	322, 323, 324, 325, 326, 1429, 327, 328, 329, 1211,
	330, 331, 332, 1430, 1431, 1433, 1432, 1434, 1435, 1436,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	1437, 343, 339, 341, 1438, 344, 342, 345, 1439, 346,
	347, 348, 1440, 1441, 349, 350, 351, 1442, 352, 353,
	1443, 354, 355, 356, 1444, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 1445, 277, 1446, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 1447, 375, 376, 377,
	1448, 1449, 1212, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1450, 390, 661,
	1451, 662, 391, 1452, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 1214, 397, 398, 1453, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	1454, 1213, 407, 666, 667, 1455, 668, 1456, 409, 410,
	1215, 669, 1216, 411, 412, 413, 1217, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 1457, 421, 423,
	422, 1458, 424, 670, 1218, 425, 426, 1219, 1459, 427,
	428, 429, 430, 431, 432, 435, 1460, 1461, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1220, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1221, 477, 465, 1462, 279, 1222, 478,
	479, 1463, 671, 480, 672, 482, 483, 1464, 0, 484,
	0, 1465, 1466, 486, 487, 488, 1467, 1468, 489, 490,
	673, 1223, 491, 1224, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 1469, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 1470, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	1471, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 1472, 543, 544, 545, 1225, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 1473, 568,
	569, 567, 570, 571, 572, 1474, 573, 574, 556, 557,
	575, 576, 1226, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 1475, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	1476, 600, 601, 0, 597, 588, 1477, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 1478, 610, 684, 685,
	686, 687, 1479, 619, 1480, 611, 612, 613, 688, 614,
	689, 1481, 615, 616, 617, 618, 0, 620, 621, 1482,
	1483, 622, 623, 624, 626, 627, 625, 628, 1484, 629,
	1485, 0, 630, 631, 632, 690, 691, 692, 1486, 634,
	633, 635, 693, 636, 637, 1487, 1488, 1489, 1490, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1406, 0, 0, 0, 0, 3775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3777, 280,
	282, 281, 283, 284, 285, 286, 1412, 287, 288, 1413,
	1414, 1415, 0, 1416, 643, 1417, 1418, 1419, 1420, 289,
	290, 1210, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 1421, 648, 299, 300, 301,
	302, 303, 304, 1422, 1423, 0, 305, 649, 650, 651,
	1424, 306, 307, 652, 1425, 1492, 1426, 308, 309, 310,
	311, 312, 313, 314, 0, 1427, 316, 317, 318, 315,
	319, 1428, 320, 0, 321, 322, 323, 324, 325, 326,
	1429, 327, 328, 329, 1211, 330, 331, 332, 1430, 1431,
	1433, 1432, 1434, 1435, 1436, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 1437, 343, 339, 341, 1438,
	344, 342, 345, 1439, 346, 347, 348, 1440, 1441, 349,
	350, 351, 1442, 352, 353, 1443, 354, 355, 356, 1444,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 1445, 277, 1446, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 1447, 375, 376, 377, 1448, 1449, 1212, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 1450, 390, 661, 1451, 662, 391, 1452, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 1214, 397,
	398, 1453, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 1454, 1213, 407, 666, 667,
	1455, 668, 1456, 409, 410, 1215, 669, 1216, 411, 412,
	413, 1217, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 1457, 421, 423, 422, 1458, 424, 670, 1218,
	425, 426, 1219, 1459, 427, 428, 429, 430, 431, 432,
	435, 1460, 1461, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1220, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1221, 477,
	465, 1462, 279, 1222, 478, 479, 1463, 671, 480, 672,
	482, 483, 1464, 0, 484, 0, 1465, 1466, 486, 487,
	488, 1467, 1468, 489, 490, 673, 1223, 491, 1224, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 1469, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 1470, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 1471, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 1472, 543,
	544, 545, 1225, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 1473, 568, 569, 567, 570, 571, 572,
	1474, 573, 574, 556, 557, 575, 576, 1226, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 1475, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 1476, 600, 601, 0, 597,
	588, 1477, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 1478, 610, 684, 685, 686, 687, 1479, 619, 1480,
	611, 612, 613, 688, 614, 689, 1481, 615, 616, 617,
	618, 0, 620, 621, 1482, 1483, 622, 623, 624, 626,
	627, 625, 628, 1484, 629, 1485, 0, 630, 631, 632,
	690, 691, 692, 1486, 634, 633, 635, 693, 636, 637,
	1487, 1488, 1489, 1490, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1406, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4174, 280, 282,
	281, 283, 284, 285, 286, 1412, 287, 288, 1413, 1414,
	1415, 0, 1416, 643, 1417, 1418, 1419, 1420, 289, 290,
	1210, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 1421, 648, 299, 300, 301, 302,
	303, 304, 1422, 1423, 0, 305, 649, 650, 651, 1424,
	306, 307, 652, 1425, 1492, 1426, 308, 309, 310, 311,
	312, 313, 314, 0, 1427, 316, 317, 318, 315, 319,
	1428, 320, 0, 321, 322, 323, 324, 325, 326, 1429,
	327, 328, 329, 1211, 330, 331, 332, 1430, 1431, 1433,
	1432, 1434, 1435, 1436, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 1437, 343, 339, 341, 1438, 344,
	342, 345, 1439, 346, 347, 348, 1440, 1441, 349, 350,
	351, 1442, 352, 353, 1443, 354, 355, 356, 1444, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 1445, 277, 1446, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	1447, 375, 376, 377, 1448, 1449, 1212, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 1450, 390, 661, 1451, 662, 391, 1452, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 1214, 397, 398,
	1453, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 1454, 1213, 407, 666, 667, 1455,
	668, 1456, 409, 410, 1215, 669, 1216, 411, 412, 413,
	1217, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 1457, 421, 423, 422, 1458, 424, 670, 1218, 425,
	426, 1219, 1459, 427, 428, 429, 430, 431, 432, 435,
	1460, 1461, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1220, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1221, 477, 465,
	1462, 279, 1222, 478, 479, 1463, 671, 480, 672, 482,
	483, 1464, 0, 484, 0, 1465, 1466, 486, 487, 488,
	1467, 1468, 489, 490, 673, 1223, 491, 1224, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 1469, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 1470, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 1471, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 1472, 543, 544,
	545, 1225, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 1473, 568, 569, 567, 570, 571, 572, 1474,
	573, 574, 556, 557, 575, 576, 1226, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 1475, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 1476, 600, 601, 0, 597, 588,
	1477, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	1478, 610, 684, 685, 686, 687, 1479, 619, 1480, 611,
	612, 613, 688, 614, 689, 1481, 615, 616, 617, 618,
	0, 620, 621, 1482, 1483, 622, 623, 624, 626, 627,
	625, 628, 1484, 629, 1485, 0, 630, 631, 632, 690,
	691, 692, 1486, 634, 633, 635, 693, 636, 637, 1487,
	1488, 1489, 1490, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1406, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4172, 280, 282, 281,
	283, 284, 285, 286, 1412, 287, 288, 1413, 1414, 1415,
	0, 1416, 643, 1417, 1418, 1419, 1420, 289, 290, 1210,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 1421, 648, 299, 300, 301, 302, 303,
	304, 1422, 1423, 0, 305, 649, 650, 651, 1424, 306,
	307, 652, 1425, 1492, 1426, 308, 309, 310, 311, 312,
	313, 314, 0, 1427, 316, 317, 318, 315, 319, 1428,
	320, 0, 321, 322, 323, 324, 325, 326, 1429, 327,
	328, 329, 1211, 330, 331, 332, 1430, 1431, 1433, 1432,
	1434, 1435, 1436, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 1437, 343, 339, 341, 1438, 344, 342,
	345, 1439, 346, 347, 348, 1440, 1441, 349, 350, 351,
	1442, 352, 353, 1443, 354, 355, 356, 1444, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 1445, 277, 1446, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 1447,
	375, 376, 377, 1448, 1449, 1212, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1450, 390, 661, 1451, 662, 391, 1452, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 1214, 397, 398, 1453,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 1454, 1213, 407, 666, 667, 1455, 668,
	1456, 409, 410, 1215, 669, 1216, 411, 412, 413, 1217,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	1457, 421, 423, 422, 1458, 424, 670, 1218, 425, 426,
	1219, 1459, 427, 428, 429, 430, 431, 432, 435, 1460,
	1461, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1220, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1221, 477, 465, 1462,
	279, 1222, 478, 479, 1463, 671, 480, 672, 482, 483,
	1464, 0, 484, 0, 1465, 1466, 486, 487, 488, 1467,
	1468, 489, 490, 673, 1223, 491, 1224, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	1469, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 1470, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 1471, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 1472, 543, 544, 545,
	1225, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 1473, 568, 569, 567, 570, 571, 572, 1474, 573,
	574, 556, 557, 575, 576, 1226, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 1475, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 1476, 600, 601, 0, 597, 588, 1477,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 1478,
	610, 684, 685, 686, 687, 1479, 619, 1480, 611, 612,
	613, 688, 614, 689, 1481, 615, 616, 617, 618, 0,
	620, 621, 1482, 1483, 622, 623, 624, 626, 627, 625,
	628, 1484, 629, 1485, 0, 630, 631, 632, 690, 691,
	692, 1486, 634, 633, 635, 693, 636, 637, 1487, 1488,
	1489, 1490, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 1406, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4387, 280, 282, 281, 283, 284, 285, 286, 1412, 287,
	288, 1413, 1414, 1415, 0, 1416, 643, 1417, 1418, 1419,
	1420, 289, 290, 1210, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 1421, 648, 299,
	300, 301, 302, 303, 304, 1422, 1423, 0, 305, 649,
	650, 651, 1424, 306, 307, 652, 1425, 1492, 1426, 308,
	309, 310, 311, 312, 313, 314, 0, 1427, 316, 317,
	318, 315, 319, 1428, 320, 0, 321, 322, 323, 324,
	325, 326, 1429, 327, 328, 329, 1211, 330, 331, 332,
	1430, 1431, 1433, 1432, 1434, 1435, 1436, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 1437, 343, 339,
	341, 1438, 344, 342, 345, 1439, 346, 347, 348, 1440,
	1441, 349, 350, 351, 1442, 352, 353, 1443, 354, 355,
	356, 1444, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 1445, 277,
	1446, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 1447, 375, 376, 377, 1448, 1449, 1212,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1450, 390, 661, 1451, 662, 391,
	1452, 392, 393, 394, 395, 396, 663, 664, 665, 481,
	1214, 397, 398, 1453, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 1454, 1213, 407,
	666, 667, 1455, 668, 1456, 409, 410, 1215, 669, 1216,
	411, 412, 413, 1217, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 1457, 421, 423, 422, 1458, 424,
	670, 1218, 425, 426, 1219, 1459, 427, 428, 429, 430,
	431, 432, 435, 1460, 1461, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1220, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1221, 477, 465, 1462, 279, 1222, 478, 479, 1463, 671,
	480, 672, 482, 483, 1464, 0, 484, 0, 1465, 1466,
	486, 487, 488, 1467, 1468, 489, 490, 673, 1223, 491,
	1224, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 1469, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	1470, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 1471, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	1472, 543, 544, 545, 1225, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 1473, 568, 569, 567, 570,
	571, 572, 1474, 573, 574, 556, 557, 575, 576, 1226,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	1475, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 1476, 600, 601,
	0, 597, 588, 1477, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 1478, 610, 684, 685, 686, 687, 1479,
	619, 1480, 611, 612, 613, 688, 614, 689, 1481, 615,
	616, 617, 618, 0, 620, 621, 1482, 1483, 622, 623,
	624, 626, 627, 625, 628, 1484, 629, 1485, 0, 630,
	631, 632, 690, 691, 692, 1486, 634, 633, 635, 693,
	636, 637, 1487, 1488, 1489, 1490, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 1406, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4255, 280, 282, 281, 283, 284,
	285, 286, 1412, 287, 288, 1413, 1414, 1415, 0, 1416,
	643, 1417, 1418, 1419, 1420, 289, 290, 1210, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 1421, 648, 299, 300, 301, 302, 303, 304, 1422,
	1423, 0, 305, 649, 650, 651, 1424, 306, 307, 652,
	1425, 1492, 1426, 308, 309, 310, 311, 312, 313, 314,
	0, 1427, 316, 317, 318, 315, 319, 1428, 320, 0,
	321, 322, 323, 324, 325, 326, 1429, 327, 328, 329,
	1211, 330, 331, 332, 1430, 1431, 1433, 1432, 1434, 1435,
	1436, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 1437, 343, 339, 341, 1438, 344, 342, 345, 1439,
	346, 347, 348, 1440, 1441, 349, 350, 351, 1442, 352,
	353, 1443, 354, 355, 356, 1444, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 1445, 277, 1446, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 1447, 375, 376,
	377, 1448, 1449, 1212, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 1450, 390,
	661, 1451, 662, 391, 1452, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 1214, 397, 398, 1453, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 1454, 1213, 407, 666, 667, 1455, 668, 1456, 409,
	410, 1215, 669, 1216, 411, 412, 413, 1217, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 1457, 421,
	423, 422, 1458, 424, 670, 1218, 425, 426, 1219, 1459,
	427, 428, 429, 430, 431, 432, 435, 1460, 1461, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1220, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1221, 477, 465, 1462, 279, 1222,
	478, 479, 1463, 671, 480, 672, 482, 483, 1464, 0,
	484, 0, 1465, 1466, 486, 487, 488, 1467, 1468, 489,
	490, 673, 1223, 491, 1224, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 1469, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 1470, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 1471, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 1472, 543, 544, 545, 1225, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 1473,
	568, 569, 567, 570, 571, 572, 1474, 573, 574, 556,
	557, 575, 576, 1226, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 1475, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 1476, 600, 601, 0, 597, 588, 1477, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 1478, 610, 684,
	685, 686, 687, 1479, 619, 1480, 611, 612, 613, 688,
	614, 689, 1481, 615, 616, 617, 618, 0, 620, 621,
	1482, 1483, 622, 623, 624, 626, 627, 625, 628, 1484,
	629, 1485, 0, 630, 631, 632, 690, 691, 692, 1486,
	634, 633, 635, 693, 636, 637, 1487, 1488, 1489, 1490,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 1406, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4102, 280,
	282, 281, 283, 284, 285, 286, 1412, 287, 288, 1413,
	1414, 1415, 0, 1416, 643, 1417, 1418, 1419, 1420, 289,
	290, 1210, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 1421, 648, 299, 300, 301,
	302, 303, 304, 1422, 1423, 0, 305, 649, 650, 651,
	1424, 306, 307, 652, 1425, 1492, 1426, 308, 309, 310,
	311, 312, 313, 314, 0, 1427, 316, 317, 318, 315,
	319, 1428, 320, 0, 321, 322, 323, 324, 325, 326,
	1429, 327, 328, 329, 1211, 330, 331, 332, 1430, 1431,
	1433, 1432, 1434, 1435, 1436, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 1437, 343, 339, 341, 1438,
	344, 342, 345, 1439, 346, 347, 348, 1440, 1441, 349,
	350, 351, 1442, 352, 353, 1443, 354, 355, 356, 1444,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 1445, 277, 1446, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 1447, 375, 376, 377, 1448, 1449, 1212, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 1450, 390, 661, 1451, 662, 391, 1452, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 1214, 397,
	398, 1453, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 1454, 1213, 407, 666, 667,
	1455, 668, 1456, 409, 410, 1215, 669, 1216, 411, 412,
	413, 1217, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 1457, 421, 423, 422, 1458, 424, 670, 1218,
	425, 426, 1219, 1459, 427, 428, 429, 430, 431, 432,
	435, 1460, 1461, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1220, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1221, 477,
	465, 1462, 279, 1222, 478, 479, 1463, 671, 480, 672,
	482, 483, 1464, 0, 484, 0, 1465, 1466, 486, 487,
	488, 1467, 1468, 489, 490, 673, 1223, 491, 1224, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 1469, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 1470, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 1471, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 1472, 543,
	544, 545, 1225, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 1473, 568, 569, 567, 570, 571, 572,
	1474, 573, 574, 556, 557, 575, 576, 1226, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 1475, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 1476, 600, 601, 0, 597,
	588, 1477, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 1478, 610, 684, 685, 686, 687, 1479, 619, 1480,
	611, 612, 613, 688, 614, 689, 1481, 615, 616, 617,
	618, 0, 620, 621, 1482, 1483, 622, 623, 624, 626,
	627, 625, 628, 1484, 629, 1485, 0, 630, 631, 632,
	690, 691, 692, 1486, 634, 633, 635, 693, 636, 637,
	1487, 1488, 1489, 1490, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 1406, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3793, 280, 282, 281, 283, 284, 285, 286,
	1412, 287, 288, 1413, 1414, 1415, 0, 1416, 643, 1417,
	1418, 1419, 1420, 289, 290, 1210, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 1421,
	648, 299, 300, 301, 302, 303, 304, 1422, 1423, 0,
	305, 649, 650, 651, 1424, 306, 307, 652, 1425, 1492,
	1426, 308, 309, 310, 311, 312, 313, 314, 0, 1427,
	316, 317, 318, 315, 319, 1428, 320, 0, 321, 322,
	323, 324, 325, 326, 1429, 327, 328, 329, 1211, 330,
	331, 332, 1430, 1431, 1433, 1432, 1434, 1435, 1436, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 1437,
	343, 339, 341, 1438, 344, 342, 345, 1439, 346, 347,
	348, 1440, 1441, 349, 350, 351, 1442, 352, 353, 1443,
	354, 355, 356, 1444, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	1445, 277, 1446, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 1447, 375, 376, 377, 1448,
	1449, 1212, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1450, 390, 661, 1451,
	662, 391, 1452, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 1214, 397, 398, 1453, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 1454,
	1213, 407, 666, 667, 1455, 668, 1456, 409, 410, 1215,
	669, 1216, 411, 412, 413, 1217, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 1457, 421, 423, 422,
	1458, 424, 670, 1218, 425, 426, 1219, 1459, 427, 428,
	429, 430, 431, 432, 435, 1460, 1461, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1220, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1221, 477, 465, 1462, 279, 1222, 478, 479,
	1463, 671, 480, 672, 482, 483, 1464, 0, 484, 0,
	1465, 1466, 486, 487, 488, 1467, 1468, 489, 490, 673,
	1223, 491, 1224, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 1469, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 1470, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 1471,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 1472, 543, 544, 545, 1225, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 1473, 568, 569,
	567, 570, 571, 572, 1474, 573, 574, 556, 557, 575,
	576, 1226, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 1475, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 1476,
	600, 601, 0, 597, 588, 1477, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 1478, 610, 684, 685, 686,
	687, 1479, 619, 1480, 611, 612, 613, 688, 614, 689,
	1481, 615, 616, 617, 618, 0, 620, 621, 1482, 1483,
	622, 623, 624, 626, 627, 625, 628, 1484, 629, 1485,
	0, 630, 631, 632, 690, 691, 692, 1486, 634, 633,
	635, 693, 636, 637, 1487, 1488, 1489, 1490, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	1406, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3614, 280, 282, 281,
	283, 284, 285, 286, 1412, 287, 288, 1413, 1414, 1415,
	0, 1416, 643, 1417, 1418, 1419, 1420, 289, 290, 1210,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 1421, 648, 299, 300, 301, 302, 303,
	304, 1422, 1423, 0, 305, 649, 650, 651, 1424, 306,
	307, 652, 1425, 1492, 1426, 308, 309, 310, 311, 312,
	313, 314, 0, 1427, 316, 317, 318, 315, 319, 1428,
	320, 0, 321, 322, 323, 324, 325, 326, 1429, 327,
	328, 329, 1211, 330, 331, 332, 1430, 1431, 1433, 1432,
	1434, 1435, 1436, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 1437, 343, 339, 341, 1438, 344, 342,
	345, 1439, 346, 347, 348, 1440, 1441, 349, 350, 351,
	1442, 352, 353, 1443, 354, 355, 356, 1444, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 1445, 277, 1446, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 1447,
	375, 376, 377, 1448, 1449, 1212, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1450, 390, 661, 1451, 662, 391, 1452, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 1214, 397, 398, 1453,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 1454, 1213, 407, 666, 667, 1455, 668,
	1456, 409, 410, 1215, 669, 1216, 411, 412, 413, 1217,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	1457, 421, 423, 422, 1458, 424, 670, 1218, 425, 426,
	1219, 1459, 427, 428, 429, 430, 431, 432, 435, 1460,
	1461, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1220, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1221, 477, 465, 1462,
	279, 1222, 478, 479, 1463, 671, 480, 672, 482, 483,
	1464, 0, 484, 0, 1465, 1466, 486, 487, 488, 1467,
	1468, 489, 490, 673, 1223, 491, 1224, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	1469, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 1470, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 1471, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 1472, 543, 544, 545,
	1225, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 1473, 568, 569, 567, 570, 571, 572, 1474, 573,
	574, 556, 557, 575, 576, 1226, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 1475, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 1476, 600, 601, 0, 597, 588, 1477,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 1478,
	610, 684, 685, 686, 687, 1479, 619, 1480, 611, 612,
	613, 688, 614, 689, 1481, 615, 616, 617, 618, 0,
	620, 621, 1482, 1483, 622, 623, 624, 626, 627, 625,
	628, 1484, 629, 1485, 0, 630, 631, 632, 690, 691,
	692, 1486, 634, 633, 635, 693, 636, 637, 1487, 1488,
	1489, 1490, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 1406, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2644, 280, 282, 281, 283, 284, 285, 286, 1412, 287,
	288, 1413, 1414, 1415, 0, 1416, 643, 1417, 1418, 1419,
	1420, 289, 290, 1210, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 1421, 648, 299,
	300, 301, 302, 303, 304, 1422, 1423, 0, 305, 649,
	650, 651, 1424, 306, 307, 652, 1425, 1492, 1426, 308,
	309, 310, 311, 312, 313, 314, 0, 1427, 316, 317,
	318, 315, 319, 1428, 320, 0, 321, 322, 323, 324,
	325, 326, 1429, 327, 328, 329, 1211, 330, 331, 332,
	1430, 1431, 1433, 1432, 1434, 1435, 1436, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 1437, 343, 339,
	341, 1438, 344, 342, 345, 1439, 346, 347, 348, 1440,
	1441, 349, 350, 351, 1442, 352, 353, 1443, 354, 355,
	356, 1444, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 1445, 277,
	1446, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 1447, 375, 376, 377, 1448, 1449, 1212,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1450, 390, 661, 1451, 662, 391,
	1452, 392, 393, 394, 395, 396, 663, 664, 665, 481,
	1214, 397, 398, 1453, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 1454, 1213, 407,
	666, 667, 1455, 668, 1456, 409, 410, 1215, 669, 1216,
	411, 412, 413, 1217, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 1457, 421, 423, 422, 1458, 424,
	670, 1218, 425, 426, 1219, 1459, 427, 428, 429, 430,
	431, 432, 435, 1460, 1461, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1220, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1221, 477, 465, 1462, 279, 1222, 478, 479, 1463, 671,
	480, 672, 482, 483, 1464, 0, 484, 0, 1465, 1466,
	486, 487, 488, 1467, 1468, 489, 490, 673, 1223, 491,
	1224, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 1469, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	1470, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 1471, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	1472, 543, 544, 545, 1225, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 1473, 568, 569, 567, 570,
	571, 572, 1474, 573, 574, 556, 557, 575, 576, 1226,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	1475, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 1476, 600, 601,
	0, 597, 588, 1477, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 1478, 610, 684, 685, 686, 687, 1479,
	619, 1480, 611, 612, 613, 688, 614, 689, 1481, 615,
	616, 617, 618, 0, 620, 621, 1482, 1483, 622, 623,
	624, 626, 627, 625, 628, 1484, 629, 1485, 0, 630,
	631, 632, 690, 691, 692, 1486, 634, 633, 635, 693,
	636, 637, 1487, 1488, 1489, 1490, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 1503, 0, 1406, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2268, 280, 282, 281, 283, 284,
	285, 286, 1412, 287, 288, 1413, 1414, 1415, 0, 1416,
	643, 1417, 1418, 1419, 1420, 289, 290, 1210, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 1421, 648, 299, 300, 301, 302, 303, 304, 1422,
	1423, 0, 305, 649, 650, 651, 1424, 306, 307, 652,
	1425, 1492, 1426, 308, 309, 310, 311, 312, 313, 314,
	0, 1427, 316, 317, 318, 315, 319, 1428, 320, 0,
	321, 322, 323, 324, 325, 326, 1429, 327, 328, 329,
	1211, 330, 331, 332, 1430, 1431, 1433, 1432, 1434, 1435,
	1436, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 1437, 343, 339, 341, 1438, 344, 342, 345, 1439,
	346, 347, 348, 1440, 1441, 349, 350, 351, 1442, 352,
	353, 1443, 354, 355, 356, 1444, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 1445, 277, 1446, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 1447, 375, 376,
	377, 1448, 1449, 1212, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 1450, 390,
	661, 1451, 662, 391, 1452, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 1214, 397, 398, 1453, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 1454, 1213, 407, 666, 667, 1455, 668, 1456, 409,
	410, 1215, 669, 1216, 411, 412, 413, 1217, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 1457, 421,
	423, 422, 1458, 424, 670, 1218, 425, 426, 1219, 1459,
	427, 428, 429, 430, 431, 432, 435, 1460, 1461, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1220, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1221, 477, 465, 1462, 279, 1222,
	478, 479, 1463, 671, 480, 672, 482, 483, 1464, 0,
	484, 0, 1465, 1466, 486, 487, 488, 1467, 1468, 489,
	490, 673, 1223, 491, 1224, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 1469, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 1470, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 1471, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 1472, 543, 544, 545, 1225, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 1473,
	568, 569, 567, 570, 571, 572, 1474, 573, 574, 556,
	557, 575, 576, 1226, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 1475, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 1476, 600, 601, 0, 597, 588, 1477, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 1478, 610, 684,
	685, 686, 687, 1479, 619, 1480, 611, 612, 613, 688,
	614, 689, 1481, 615, 616, 617, 618, 0, 620, 621,
	1482, 1483, 622, 623, 624, 626, 627, 625, 628, 1484,
	629, 1485, 0, 630, 631, 632, 690, 691, 692, 1486,
	634, 633, 635, 693, 636, 637, 1487, 1488, 1489, 1490,
	638, 639, 694, 640, 641, 642, 1403, 0, 1406, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 1412, 287, 288, 1413, 1414, 1415, 0, 1416,
	643, 1417, 1418, 1419, 1420, 289, 290, 1210, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 1421, 648, 299, 300, 301, 302, 303, 304, 1422,
	1423, 0, 305, 649, 650, 651, 1424, 306, 307, 652,
	1425, 1492, 1426, 308, 309, 310, 311, 312, 313, 314,
	0, 1427, 316, 317, 318, 315, 319, 1428, 320, 0,
	321, 322, 323, 324, 325, 326, 1429, 327, 328, 329,
	1211, 330, 331, 332, 1430, 1431, 1433, 1432, 1434, 1435,
	1436, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 1437, 343, 339, 341, 1438, 344, 342, 345, 1439,
	346, 347, 348, 1440, 1441, 349, 350, 351, 1442, 352,
	353, 1443, 354, 355, 356, 1444, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 1445, 277, 1446, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 1447, 375, 376,
	377, 1448, 1449, 1212, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 1450, 390,
	661, 1451, 662, 391, 1452, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 1214, 397, 398, 1453, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 1454, 1213, 407, 666, 667, 1455, 668, 1456, 409,
	410, 1215, 669, 1216, 411, 412, 413, 1217, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 1457, 421,
	423, 422, 1458, 424, 670, 1218, 425, 426, 1219, 1459,
	427, 428, 429, 430, 431, 432, 435, 1460, 1461, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1220, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1221, 477, 465, 1462, 279, 1222,
	478, 479, 1463, 671, 480, 672, 482, 483, 1464, 0,
	484, 0, 1465, 1466, 486, 487, 488, 1467, 1468, 489,
	490, 673, 1223, 491, 1224, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 1469, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 1470, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 1471, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 1472, 543, 544, 545, 1225, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 1473,
	568, 569, 567, 570, 571, 572, 1474, 573, 574, 556,
	557, 575, 576, 1226, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 1475, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 1476, 600, 601, 0, 597, 588, 1477, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 1478, 610, 684,
	685, 686, 687, 1479, 619, 1480, 611, 612, 613, 688,
	614, 689, 1481, 615, 616, 617, 618, 0, 620, 621,
	1482, 1483, 622, 623, 624, 626, 627, 625, 628, 1484,
	629, 1485, 0, 630, 631, 632, 690, 691, 692, 1486,
	634, 633, 635, 693, 636, 637, 1487, 1488, 1489, 1490,
	638, 639, 694, 640, 641, 642, 1406, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	1412, 287, 288, 1413, 1414, 1415, 0, 1416, 643, 1417,
	1418, 1419, 1420, 289, 290, 1210, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 1421,
	648, 299, 300, 301, 302, 303, 304, 1422, 1423, 0,
	305, 649, 650, 651, 1424, 306, 307, 652, 1425, 1492,
	1426, 308, 309, 310, 311, 312, 313, 314, 0, 1427,
	316, 317, 318, 315, 319, 1428, 320, 0, 321, 322,
	323, 324, 325, 326, 1429, 327, 328, 329, 1211, 330,
	331, 332, 1430, 1431, 1433, 1432, 1434, 1435, 1436, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 1437,
	343, 339, 341, 1438, 344, 342, 345, 1439, 346, 347,
	348, 1440, 1441, 349, 350, 351, 1442, 352, 353, 1443,
	354, 355, 356, 1444, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	1445, 277, 1446, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 1447, 375, 376, 377, 1448,
	1449, 1212, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1450, 390, 661, 1451,
	662, 391, 1452, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 1214, 397, 398, 1453, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 1454,
	1213, 407, 666, 667, 1455, 668, 1456, 409, 410, 1215,
	669, 1216, 411, 412, 413, 1217, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 1457, 421, 423, 422,
	1458, 424, 670, 1218, 425, 426, 1219, 1459, 427, 428,
	429, 430, 431, 432, 435, 1460, 1461, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1220, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1221, 477, 465, 1462, 279, 1222, 478, 479,
	1463, 671, 480, 672, 482, 483, 1464, 0, 484, 0,
	1465, 1466, 486, 487, 488, 1467, 1468, 489, 490, 673,
	1223, 491, 1224, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 1469, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 1470, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 1471,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 1472, 543, 544, 545, 1225, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 1473, 568, 569,
	567, 570, 571, 572, 1474, 573, 574, 556, 557, 575,
	576, 1226, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 1475, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 1476,
	600, 601, 0, 597, 588, 1477, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 1478, 610, 684, 685, 686,
	687, 1479, 619, 1480, 611, 612, 613, 688, 614, 689,
	1481, 615, 616, 617, 618, 0, 620, 621, 1482, 1483,
	622, 623, 624, 626, 627, 625, 628, 1484, 629, 1485,
	0, 630, 631, 632, 690, 691, 692, 1486, 634, 633,
	635, 693, 636, 637, 1487, 1488, 1489, 1490, 638, 639,
	694, 640, 641, 642, 2619, 0, 1146, 1118, 1119, 1120,
	1116, 1117, 1129, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	2616, 287, 288, 0, 0, 0, 0, 0, 1170, 1134,
	0, 0, 0, 289, 290, 1210, 291, 292, 293, 294,
	295, 296, 644, 1183, 0, 297, 1190, 298, 1189, 0,
	1200, 299, 300, 301, 302, 303, 304, 1136, 1169, 1101,
	305, 1230, 1231, 651, 0, 306, 307, 1176, 0, 1157,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1211, 330,
	331, 332, 1160, 1158, 1159, 1166, 1162, 1161, 1165, 333,
	334, 335, 336, 337, 1193, 338, 340, 1187, 1186, 1106,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 2617, 0, 349, 1178, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1112, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1201, 1202, 370,
	1125, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1185, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1212, 378, 379, 380, 1198, 1199, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1208, 0,
	1135, 391, 0, 392, 393, 394, 395, 396, 1171, 1172,
	1175, 481, 1214, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1213, 407, 1180, 1181, 0, 1141, 0, 409, 410, 1215,
	1173, 1216, 411, 412, 413, 1217, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1209, 1218, 425, 426, 1219, 0, 427, 428,
	429, 430, 431, 432, 435, 1164, 1163, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1220, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1221, 477, 465, 1103, 279, 1222, 478, 479,
	1126, 1174, 480, 1188, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	1223, 491, 1224, 1203, 492, 493, 1113, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 1204, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 1184, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1225, 546, 547, 548,
	549, 550, 1114, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1167, 573, 574, 556, 557, 575,
	576, 1226, 577, 578, 579, 580, 581, 582, 583, 1182,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 1229, 591, 592, 593, 594, 1205, 598, 599, 0,
	600, 601, 1100, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 1194, 1195, 1196,
	1197, 0, 619, 0, 611, 612, 613, 1206, 614, 1207,
	1124, 615, 616, 617, 618, 0, 620, 621, 0, 1107,
	622, 623, 624, 626, 627, 625, 628, 1168, 629, 0,
	0, 630, 631, 632, 690, 1191, 1228, 2615, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1104, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1099, 0, 0,
	0, 0, 0, 0, 1097, 1098, 2618, 0, 0, 0,
	0, 0, 0, 1130, 2614, 0, 1090, 1128, 1146, 1118,
	1119, 1120, 1116, 1117, 1129, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	1170, 1134, 0, 0, 0, 289, 290, 1210, 291, 292,
	293, 294, 295, 296, 644, 1183, 0, 297, 1190, 298,
	1189, 0, 1200, 299, 300, 301, 302, 303, 304, 1136,
	1169, 1101, 305, 1230, 1231, 651, 0, 306, 307, 1176,
	0, 1157, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161,
	1165, 333, 334, 335, 336, 337, 1193, 338, 340, 1187,
	1186, 1106, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1178, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1112, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1201,
	1202, 370, 1125, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1185, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1212, 378, 379, 380, 1198, 1199, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1208, 0, 1135, 391, 0, 392, 393, 394, 395, 396,
	1171, 1172, 1175, 481, 1214, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1213, 407, 1180, 1181, 0, 1141, 0, 409,
	410, 1215, 1173, 1216, 411, 412, 413, 1217, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1209, 1218, 425, 426, 1219, 0,
	427, 428, 429, 430, 431, 432, 435, 1164, 1163, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1220, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1221, 477, 465, 1103, 279, 1222,
	478, 479, 1126, 1174, 480, 1188, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 1223, 491, 1224, 1203, 492, 493, 1113, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 1204,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1184, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1225, 546,
	547, 548, 549, 550, 1114, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 239,
	568, 569, 567, 570, 571, 572, 1167, 573, 574, 556,
	557, 575, 576, 1226, 577, 578, 579, 580, 581, 582,
	583, 1182, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1229, 591, 592, 593, 594, 1205, 598,
	599, 0, 600, 601, 1100, 597, 588, 241, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 1194,
	1195, 1196, 1197, 0, 619, 0, 611, 612, 613, 1206,
	614, 1207, 1124, 615, 616, 617, 618, 0, 620, 621,
	0, 1107, 622, 623, 624, 626, 627, 625, 628, 1168,
	629, 0, 0, 630, 631, 632, 1639, 1191, 1228, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 233,
	638, 639, 694, 640, 641, 642, 1104, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1099,
	0, 0, 0, 0, 0, 0, 1097, 1098, 1146, 1118,
	1119, 1120, 1116, 1117, 1129, 1900, 1898, 0, 0, 1128,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	1170, 1134, 0, 0, 0, 289, 290, 1210, 291, 292,
	293, 294, 295, 296, 644, 1183, 0, 297, 1190, 298,
	1189, 0, 1200, 299, 300, 301, 302, 303, 304, 1136,
	1169, 1101, 305, 1230, 1231, 651, 0, 306, 307, 1176,
	0, 1157, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161,
	1165, 333, 334, 335, 336, 337, 1193, 338, 340, 1187,
	1186, 1106, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1178, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1112, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1201,
	1202, 370, 1125, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1185, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1212, 378, 379, 380, 1198, 1199, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1208, 0, 1135, 391, 0, 392, 393, 394, 395, 396,
	1171, 1172, 1175, 481, 1214, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1213, 407, 1180, 1181, 0, 1141, 0, 409,
	410, 1215, 1173, 1216, 411, 412, 413, 1217, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1209, 1218, 425, 426, 1219, 0,
	427, 428, 429, 430, 431, 432, 435, 1164, 1163, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1220, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1221, 477, 465, 1103, 279, 1222,
	478, 479, 1126, 1174, 480, 1188, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 1223, 491, 1224, 1203, 492, 493, 1113, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 1204,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1184, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1225, 546,
	547, 548, 549, 550, 1114, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 239,
	568, 569, 567, 570, 571, 572, 1167, 573, 574, 556,
	557, 575, 576, 1226, 577, 578, 579, 580, 581, 582,
	583, 1182, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1229, 591, 592, 593, 594, 1205, 598,
	599, 0, 600, 601, 1100, 597, 588, 241, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 1194,
	1195, 1196, 1197, 0, 619, 0, 611, 612, 613, 1206,
	614, 1207, 1124, 615, 616, 617, 618, 0, 620, 621,
	0, 1107, 622, 623, 624, 626, 627, 625, 628, 1168,
	629, 0, 0, 630, 631, 632, 1639, 1191, 1228, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 233,
	638, 639, 694, 640, 641, 642, 1104, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1099,
	0, 0, 0, 0, 0, 0, 1097, 1098, 1146, 1118,
	1119, 1120, 1116, 1117, 1129, 1900, 3258, 0, 0, 1128,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	1170, 1134, 0, 0, 0, 289, 290, 1210, 291, 292,
	293, 294, 295, 296, 644, 1183, 0, 297, 1190, 298,
	1189, 0, 1200, 299, 300, 301, 302, 303, 304, 1136,
	1169, 1101, 305, 1230, 1231, 651, 0, 306, 307, 1176,
	0, 1157, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161,
	1165, 333, 334, 335, 336, 337, 1193, 338, 340, 1187,
	1186, 1106, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1178, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1112, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1201,
	1202, 370, 1125, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1185, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1212, 378, 379, 380, 1198, 1199, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1208, 0, 1135, 391, 0, 392, 393, 394, 395, 396,
	1171, 1172, 1175, 481, 1214, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1213, 407, 1180, 1181, 0, 1141, 0, 409,
	410, 1215, 1173, 1216, 411, 412, 413, 1217, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1209, 1218, 425, 426, 1219, 0,
	427, 428, 429, 430, 431, 432, 435, 1164, 1163, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1220, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1221, 477, 465, 1103, 279, 1222,
	478, 479, 1126, 1174, 480, 1188, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 1223, 491, 1224, 1203, 492, 493, 1113, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 1204,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1184, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1225, 546,
	547, 548, 549, 550, 1114, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 239,
	568, 569, 567, 570, 571, 572, 1167, 573, 574, 556,
	557, 575, 576, 1226, 577, 578, 579, 580, 581, 582,
	583, 1182, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1229, 591, 592, 593, 594, 1205, 598,
	599, 0, 600, 601, 1100, 597, 588, 241, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 1194,
	1195, 1196, 1197, 0, 619, 0, 611, 612, 613, 1206,
	614, 1207, 1124, 615, 616, 617, 618, 0, 620, 621,
	0, 1107, 622, 623, 624, 626, 627, 625, 628, 1168,
	629, 0, 0, 630, 631, 632, 1639, 1191, 1228, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 233,
	638, 639, 694, 640, 641, 642, 1104, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1099,
	0, 0, 0, 0, 0, 0, 1097, 1098, 1146, 1118,
	1119, 1120, 1116, 1117, 1129, 1900, 1898, 0, 0, 1128,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	1170, 1134, 0, 0, 0, 289, 290, 1210, 291, 292,
	293, 294, 295, 296, 644, 1183, 0, 297, 1190, 298,
	1189, 2750, 1200, 299, 300, 301, 302, 303, 304, 1136,
	1169, 1101, 305, 1230, 1231, 651, 0, 306, 307, 1176,
	0, 1157, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161,
	1165, 333, 334, 335, 336, 337, 1193, 338, 340, 1187,
	1186, 1106, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1178, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1112, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1201,
	1202, 370, 1125, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1185, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 2755, 1212, 378, 379, 380, 1198, 1199, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1208, 0, 1135, 391, 0, 392, 393, 394, 395, 396,
	1171, 1172, 1175, 481, 1214, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1213, 407, 1180, 1181, 0, 1141, 0, 409,
	410, 1215, 1173, 1216, 411, 412, 413, 1217, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 2751, 424, 1209, 1218, 425, 426, 1219, 0,
	427, 428, 429, 430, 431, 432, 435, 1164, 1163, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1220, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1221, 477, 465, 1103, 279, 1222,
	478, 479, 1126, 1174, 480, 1188, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 1223, 491, 1224, 1203, 492, 493, 1113, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 1204,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1184, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1225, 546,
	547, 548, 549, 550, 1114, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1167, 573, 574, 556,
	557, 575, 576, 1226, 577, 578, 579, 580, 581, 582,
	583, 1182, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1229, 591, 592, 593, 594, 1205, 598,
	599, 0, 600, 601, 1100, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 1194,
	1195, 1196, 1197, 0, 619, 2752, 611, 612, 613, 1206,
	614, 1207, 1124, 615, 616, 617, 618, 0, 620, 621,
	0, 1107, 622, 623, 624, 626, 627, 625, 628, 1168,
	629, 0, 0, 630, 631, 632, 690, 1191, 1228, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1104, 0, 0, 2664,
	0, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 0, 1099,
	0, 0, 0, 0, 0, 0, 1097, 1098, 280, 282,
	281, 283, 284, 285, 286, 1130, 287, 288, 0, 1128,
	0, 0, 0, 1170, 1134, 0, 0, 0, 289, 290,
	1210, 291, 292, 293, 294, 295, 296, 644, 1183, 0,
	297, 1190, 298, 1189, 0, 1200, 299, 300, 301, 302,
	303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651, 0,
	306, 307, 1176, 0, 1157, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1211, 330, 331, 332, 1160, 1158, 1159,
	1166, 1162, 1161, 1165, 333, 334, 335, 336, 337, 1193,
	338, 340, 1187, 1186, 1106, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1178,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1112, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1201, 1202, 370, 1125, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1185, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1212, 378, 379, 380,
	1198, 1199, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1208, 0, 1135, 391, 0, 392, 393,
	394, 395, 396, 1171, 1172, 1175, 481, 1214, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1213, 407, 1180, 1181, 0,
	1141, 0, 409, 410, 1215, 1173, 1216, 411, 412, 413,
	1217, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1209, 1218, 425,
	426, 1219, 0, 427, 428, 429, 430, 431, 432, 435,
	1164, 1163, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1220, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1221, 477, 465,
	1103, 279, 1222, 478, 479, 1126, 1174, 480, 1188, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 1223, 491, 1224, 1203, 492,
	493, 1113, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 1204, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1184, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1225, 546, 547, 548, 549, 550, 1114, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1167,
	573, 574, 556, 557, 575, 576, 1226, 577, 578, 579,
	580, 581, 582, 583, 1182, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1229, 591, 592, 593,
	594, 1205, 598, 599, 0, 600, 601, 1100, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 1194, 1195, 1196, 1197, 0, 619, 0, 611,
	612, 613, 1206, 614, 1207, 1124, 615, 616, 617, 618,
	0, 620, 621, 0, 1107, 622, 623, 624, 626, 627,
	625, 628, 1168, 629, 0, 0, 630, 631, 632, 690,
	1191, 1228, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1104,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1099, 0, 0, 0, 0, 0, 0, 1097,
	1098, 0, 0, 0, 0, 0, 0, 0, 1130, 2662,
	0, 2661, 1128, 1146, 1118, 1119, 1120, 1116, 1117, 1129,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 1170, 1134, 0, 0, 0,
	289, 290, 1210, 291, 292, 293, 294, 295, 296, 644,
	1183, 0, 297, 1190, 298, 1189, 0, 1200, 299, 300,
	301, 302, 303, 304, 1136, 1169, 1101, 305, 1230, 1231,
	651, 0, 306, 307, 1176, 0, 1157, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1211, 330, 331, 332, 1160,
	1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336,
	337, 1193, 338, 340, 1187, 1186, 1106, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1178, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1112, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1201, 1202, 370, 1125, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1185, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1212, 378,
	379, 380, 1198, 1199, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1208, 0, 1135, 391, 0,
	392, 393, 394, 395, 396, 1171, 1172, 1175, 481, 1214,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1213, 407, 1180,
	1181, 0, 1141, 0, 409, 410, 1215, 1173, 1216, 411,
	412, 413, 1217, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1209,
	1218, 425, 426, 1219, 0, 427, 428, 429, 430, 431,
	432, 435, 1164, 1163, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1220, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1221,
	477, 465, 1103, 279, 1222, 478, 479, 1126, 1174, 480,
	1188, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 1223, 491, 1224,
	1203, 492, 493, 1113, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 1204, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1184, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1225, 546, 547, 548, 549, 550, 1114,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1167, 573, 574, 556, 557, 575, 576, 1226, 577,
	578, 579, 580, 581, 582, 583, 1182, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 1229, 591,
	592, 593, 594, 1205, 598, 599, 0, 600, 601, 1100,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 1194, 1195, 1196, 1197, 0, 619,
	0, 611, 612, 613, 1206, 614, 1207, 1124, 615, 616,
	617, 618, 0, 620, 621, 0, 1107, 622, 623, 624,
	626, 627, 625, 628, 1168, 629, 0, 0, 630, 631,
	632, 690, 1191, 1228, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 1104, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1099, 0, 0, 0, 0, 0,
	0, 1097, 1098, 0, 0, 0, 0, 0, 0, 0,
	1130, 2659, 0, 2658, 1128, 1146, 1118, 1119, 1120, 1116,
	1117, 1129, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 1170, 1134, 0,
	0, 0, 289, 290, 1210, 291, 292, 293, 294, 295,
	296, 644, 1183, 0, 297, 1190, 298, 1189, 0, 1200,
	299, 300, 301, 302, 303, 304, 1136, 1169, 1101, 305,
	1230, 1231, 651, 0, 306, 307, 1176, 0, 1157, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1211, 330, 331,
	332, 1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334,
	335, 336, 337, 1193, 338, 340, 1187, 1186, 1106, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1178, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1112, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1201, 1202, 370, 1125,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1185,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1212, 378, 379, 380, 1198, 1199, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1208, 0, 1135,
	391, 0, 392, 393, 394, 395, 396, 1171, 1172, 1175,
	481, 1214, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1213,
	407, 1180, 1181, 0, 1141, 0, 409, 410, 1215, 1173,
	1216, 411, 412, 413, 1217, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1209, 1218, 425, 426, 1219, 0, 427, 428, 429,
	430, 431, 432, 435, 1164, 1163, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1220, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1221, 477, 465, 1103, 279, 1222, 478, 479, 1126,
	1174, 480, 1188, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 1223,
	491, 1224, 1203, 492, 493, 1113, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 1204, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1184, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1225, 546, 547, 548, 549,
	550, 1114, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1167, 573, 574, 556, 557, 575, 576,
	1226, 577, 578, 579, 580, 581, 582, 583, 1182, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	1229, 591, 592, 593, 594, 1205, 598, 599, 0, 600,
	601, 1100, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 1194, 1195, 1196, 1197,
	0, 619, 0, 611, 612, 613, 1206, 614, 1207, 1124,
	615, 616, 617, 618, 0, 620, 621, 0, 1107, 622,
	623, 624, 626, 627, 625, 628, 1168, 629, 0, 0,
	630, 631, 632, 690, 1191, 1228, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1104, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1099, 0, 0, 0,
	0, 0, 0, 1097, 1098, 0, 0, 0, 0, 0,
	0, 0, 1130, 2656, 0, 2655, 1128, 1146, 1118, 1119,
	1120, 1116, 1117, 1129, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 1170,
	1134, 0, 0, 0, 289, 290, 1210, 291, 292, 293,
	294, 295, 296, 644, 1183, 0, 297, 1190, 298, 1189,
	0, 1200, 299, 300, 301, 302, 303, 304, 1136, 1169,
	1101, 305, 1230, 1231, 651, 0, 306, 307, 1176, 0,
	1157, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1211,
	330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161, 1165,
	333, 334, 335, 336, 337, 1193, 338, 340, 1187, 1186,
	1106, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1178, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1112, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1201, 1202,
	370, 1125, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1185, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1212, 378, 379, 380, 1198, 1199, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1208,
	0, 1135, 391, 0, 392, 393, 394, 395, 396, 1171,
	1172, 1175, 481, 1214, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1213, 407, 1180, 1181, 0, 1141, 0, 409, 410,
	1215, 1173, 1216, 411, 412, 413, 1217, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1209, 1218, 425, 426, 1219, 0, 427,
	428, 429, 430, 431, 432, 435, 1164, 1163, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1220, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1221, 477, 465, 1103, 279, 1222, 478,
	479, 1126, 1174, 480, 1188, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 1223, 491, 1224, 1203, 492, 493, 1113, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 1204, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1184, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1225, 546, 547,
	548, 549, 550, 1114, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1167, 573, 574, 556, 557,
	575, 576, 1226, 577, 578, 579, 580, 581, 582, 583,
	1182, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1229, 591, 592, 593, 594, 1205, 598, 599,
	0, 600, 601, 1100, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 1194, 1195,
	1196, 1197, 0, 619, 0, 611, 612, 613, 1206, 614,
	1207, 1124, 615, 616, 617, 618, 0, 620, 621, 0,
	1107, 622, 623, 624, 626, 627, 625, 628, 1168, 629,
	0, 0, 630, 631, 632, 690, 1191, 1228, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1099, 0,
	0, 0, 0, 0, 0, 1097, 1098, 0, 0, 0,
	0, 0, 0, 0, 1130, 2653, 0, 1739, 1128, 1146,
	1118, 1119, 1120, 1116, 1117, 1129, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 1170, 1134, 0, 0, 0, 289, 290, 1210, 291,
	292, 293, 294, 295, 296, 644, 1183, 0, 297, 1190,
	298, 1189, 0, 1200, 299, 300, 301, 302, 303, 304,
	1136, 1169, 1101, 305, 1230, 1231, 651, 0, 306, 307,
	1176, 0, 1157, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162,
	1161, 1165, 333, 334, 335, 336, 337, 1193, 338, 340,
	1187, 1186, 1106, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1178, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1112,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1201, 1202, 370, 1125, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1185, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1212, 378, 379, 380, 1198, 1199,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1208, 0, 1135, 391, 0, 392, 393, 394, 395,
	396, 1171, 1172, 1175, 481, 1214, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1213, 407, 1180, 1181, 0, 1141, 0,
	409, 410, 1215, 1173, 1216, 411, 412, 413, 1217, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1209, 1218, 425, 426, 1219,
	0, 427, 428, 429, 430, 431, 432, 435, 1164, 1163,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1220,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1221, 477, 465, 1103, 279,
	1222, 478, 479, 1126, 1174, 480, 1188, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 1223, 491, 1224, 1203, 492, 493, 1113,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	1204, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1184, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1225,
	546, 547, 548, 549, 550, 1114, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1167, 573, 574,
	556, 557, 575, 576, 1226, 577, 578, 579, 580, 581,
	582, 583, 1182, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1229, 591, 592, 593, 594, 1205,
	598, 599, 0, 600, 601, 1100, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	1194, 1195, 1196, 1197, 0, 619, 0, 611, 612, 613,
	1206, 614, 1207, 1124, 615, 616, 617, 618, 0, 620,
	621, 0, 1107, 622, 623, 624, 626, 627, 625, 628,
	1168, 629, 0, 0, 630, 631, 632, 690, 1191, 1228,
	0, 634, 633, 635, 693, 636, 637, 1738, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1104, 0, 0,
	1093, 0, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 0,
	1099, 0, 0, 0, 0, 0, 0, 1097, 1098, 280,
	282, 281, 283, 284, 285, 286, 1130, 287, 288, 0,
	1128, 0, 0, 0, 1170, 1134, 0, 0, 0, 289,
	290, 1210, 291, 292, 293, 294, 295, 296, 644, 1183,
	0, 297, 1190, 298, 1189, 0, 1200, 299, 300, 301,
	302, 303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651,
	0, 306, 307, 1176, 0, 1157, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1211, 330, 331, 332, 1160, 1158,
	1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336, 337,
	1193, 338, 340, 1187, 1186, 1106, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1178, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1112, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1201, 1202, 370, 1125, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1185, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1212, 378, 379,
	380, 1198, 1199, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1208, 0, 1135, 391, 0, 392,
	393, 394, 395, 396, 1171, 1172, 1175, 481, 1214, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1213, 407, 1180, 1181,
	0, 1141, 0, 409, 410, 1215, 1173, 1216, 411, 412,
	413, 1217, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1209, 1218,
	425, 426, 1219, 0, 427, 428, 429, 430, 431, 432,
	435, 1164, 1163, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1220, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1221, 477,
	465, 1103, 279, 1222, 478, 479, 1126, 1174, 480, 1188,
	482, 483, 0, 0, 484, 0, 1108, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 1223, 491, 1224, 1203,
	492, 493, 1113, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 1204, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1184,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1225, 546, 547, 548, 549, 550, 1114, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1167, 573, 574, 556, 557, 575, 576, 1226, 577, 578,
	579, 580, 581, 582, 583, 1182, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1229, 591, 592,
	593, 594, 1205, 598, 599, 0, 600, 601, 1100, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 1194, 1195, 1196, 1197, 0, 619, 0,
	611, 612, 613, 1206, 614, 1207, 1124, 615, 616, 617,
	618, 0, 620, 621, 0, 1107, 622, 623, 624, 626,
	627, 625, 628, 1168, 629, 0, 0, 630, 631, 632,
	690, 1191, 1228, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1104, 0, 0, 0, 0, 1146, 1118, 1119, 1120, 1116,
	1117, 1129, 0, 1099, 0, 0, 0, 0, 0, 0,
	1097, 1098, 280, 282, 281, 283, 284, 285, 286, 1130,
	287, 288, 0, 1128, 0, 0, 0, 1170, 1134, 0,
	0, 0, 289, 290, 1210, 291, 292, 293, 294, 295,
	296, 644, 1183, 0, 297, 1190, 298, 1189, 0, 1200,
	299, 300, 301, 302, 303, 304, 1136, 1169, 1101, 305,
	1230, 1231, 651, 0, 306, 307, 1176, 0, 1157, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 4736, 326, 0, 327, 328, 329, 1211, 330, 331,
	332, 1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334,
	335, 336, 337, 1193, 338, 340, 1187, 1186, 1106, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1178, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1112, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1201, 1202, 370, 1125,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1185,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1212, 378, 379, 380, 1198, 1199, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1208, 0, 1135,
	391, 0, 392, 393, 394, 395, 396, 1171, 1172, 1175,
	481, 1214, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1213,
	407, 1180, 1181, 0, 1141, 0, 409, 410, 1215, 1173,
	1216, 411, 412, 413, 1217, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1209, 1218, 425, 426, 1219, 0, 427, 428, 429,
	430, 431, 432, 435, 1164, 1163, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1220, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1221, 477, 465, 1103, 279, 1222, 478, 479, 1126,
	1174, 480, 1188, 482, 483, 0, 0, 484, 0, 1108,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 1223,
	491, 1224, 1203, 492, 493, 1113, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 1204, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1184, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1225, 546, 547, 548, 549,
	550, 1114, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1167, 573, 574, 556, 557, 575, 576,
	1226, 577, 578, 579, 580, 581, 582, 583, 1182, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	1229, 591, 592, 593, 594, 1205, 598, 599, 0, 600,
	601, 1100, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 1194, 1195, 1196, 1197,
	0, 619, 0, 611, 612, 613, 1206, 614, 1207, 1124,
	615, 616, 617, 618, 0, 620, 621, 0, 1107, 622,
	623, 624, 626, 627, 625, 628, 1168, 629, 0, 0,
	630, 631, 632, 690, 1191, 1228, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1104, 0, 0, 0, 0, 1146, 1118,
	1119, 1120, 1116, 1117, 1129, 0, 1099, 0, 0, 0,
	0, 0, 0, 1097, 1098, 280, 282, 281, 283, 284,
	285, 286, 1130, 287, 288, 0, 1128, 0, 0, 0,
	1170, 1134, 0, 0, 0, 289, 290, 1210, 291, 292,
	293, 294, 295, 296, 644, 1183, 0, 297, 1190, 298,
	1189, 0, 1200, 299, 300, 301, 302, 303, 304, 1136,
	1169, 1101, 305, 1230, 1231, 651, 0, 306, 307, 1176,
	0, 1157, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161,
	1165, 333, 334, 335, 336, 337, 1193, 338, 340, 1187,
	1186, 1106, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1178, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1112, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1201,
	1202, 370, 1125, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1185, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1212, 378, 379, 380, 1198, 1199, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1208, 0, 1135, 391, 0, 392, 393, 394, 395, 396,
	1171, 1172, 1175, 481, 1214, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 2496, 404, 405, 406,
	408, 0, 1213, 407, 1180, 1181, 0, 1141, 0, 409,
	410, 1215, 1173, 1216, 411, 412, 413, 1217, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1209, 1218, 425, 426, 1219, 0,
	427, 428, 429, 430, 431, 432, 435, 1164, 1163, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1220, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1221, 477, 465, 1103, 279, 1222,
	478, 479, 1126, 1174, 480, 1188, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 1223, 491, 1224, 1203, 492, 493, 1113, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 1204,
	511, 678, 512, 513, 2495, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1184, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1225, 546,
	547, 548, 549, 550, 1114, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1167, 573, 574, 556,
	557, 575, 576, 1226, 577, 578, 579, 580, 581, 582,
	583, 1182, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1229, 591, 592, 593, 594, 1205, 598,
	599, 0, 600, 601, 1100, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 1194,
	1195, 1196, 1197, 0, 619, 0, 611, 612, 613, 1206,
	614, 1207, 1124, 615, 616, 617, 618, 0, 620, 621,
	0, 1107, 622, 623, 624, 626, 627, 625, 628, 1168,
	629, 0, 0, 630, 631, 632, 690, 1191, 1228, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1104, 0, 0, 0,
	0, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 0, 1099,
	0, 0, 0, 0, 0, 0, 1097, 1098, 280, 282,
	281, 283, 284, 285, 286, 1130, 287, 288, 0, 1128,
	0, 0, 0, 1170, 1134, 0, 0, 0, 289, 290,
	1210, 291, 292, 293, 294, 295, 296, 644, 1183, 0,
	297, 1190, 298, 1189, 0, 1200, 299, 300, 301, 302,
	303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651, 0,
	306, 307, 1176, 0, 1157, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1211, 330, 331, 332, 1160, 1158, 1159,
	1166, 1162, 1161, 1165, 333, 334, 335, 336, 337, 1193,
	338, 340, 1187, 1186, 1106, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1178,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1112, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1201, 1202, 370, 1125, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1185, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1212, 378, 379, 380,
	1198, 1199, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1208, 0, 1135, 391, 0, 392, 393,
	394, 395, 396, 1171, 1172, 1175, 481, 1214, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1213, 407, 1180, 1181, 0,
	1141, 0, 409, 410, 1215, 1173, 1216, 411, 412, 413,
	1217, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1209, 1218, 425,
	426, 1219, 0, 427, 428, 429, 430, 431, 432, 435,
	1164, 1163, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1220, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1221, 477, 465,
	1103, 279, 1222, 478, 479, 1126, 1174, 480, 1188, 482,
	483, 0, 0, 484, 0, 1108, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 1223, 491, 1224, 1203, 492,
	493, 1113, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 1204, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1184, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1225, 546, 547, 548, 549, 550, 1114, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1167,
	573, 574, 556, 557, 575, 576, 1226, 577, 578, 579,
	580, 581, 582, 583, 1182, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1229, 591, 592, 593,
	594, 1205, 598, 599, 0, 600, 601, 1100, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 1194, 1195, 1196, 1197, 0, 619, 0, 611,
	612, 613, 1206, 614, 1207, 1124, 615, 616, 617, 618,
	0, 620, 621, 0, 1107, 622, 623, 624, 626, 627,
	625, 628, 1168, 629, 0, 0, 630, 631, 632, 690,
	1191, 1228, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1104,
	0, 0, 0, 0, 1146, 1118, 1119, 1120, 1116, 1117,
	1129, 0, 1099, 0, 0, 0, 0, 0, 0, 1097,
	1098, 280, 282, 281, 283, 284, 285, 286, 1130, 287,
	288, 0, 1128, 0, 0, 0, 1170, 1134, 0, 0,
	0, 289, 290, 1210, 291, 292, 293, 294, 295, 296,
	644, 1183, 0, 297, 1190, 298, 1189, 0, 1200, 299,
	300, 301, 302, 303, 304, 1136, 1169, 1101, 305, 1230,
	1231, 651, 0, 306, 307, 1176, 0, 1157, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	4471, 326, 0, 327, 328, 329, 1211, 330, 331, 332,
	1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335,
	336, 337, 1193, 338, 340, 1187, 1186, 1106, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1178, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1112, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1201, 1202, 370, 1125, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1185, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1212,
	378, 379, 380, 1198, 1199, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1208, 0, 1135, 391,
	0, 392, 393, 394, 395, 396, 1171, 1172, 1175, 481,
	1214, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1213, 407,
	1180, 1181, 0, 1141, 0, 409, 410, 1215, 1173, 1216,
	411, 412, 413, 1217, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1209, 1218, 425, 426, 1219, 0, 427, 428, 429, 430,
	431, 432, 435, 1164, 1163, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1220, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1221, 477, 465, 1103, 279, 1222, 478, 479, 1126, 1174,
	480, 1188, 482, 483, 0, 0, 484, 0, 1108, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 1223, 491,
	1224, 1203, 492, 493, 1113, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 1204, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1184, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1225, 546, 547, 548, 549, 550,
	1114, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1167, 573, 574, 556, 557, 575, 576, 1226,
	577, 578, 579, 580, 581, 582, 583, 1182, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 1229,
	591, 592, 593, 594, 1205, 598, 599, 0, 600, 601,
	1100, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 1194, 1195, 1196, 1197, 0,
	619, 0, 611, 612, 613, 1206, 614, 1207, 1124, 615,
	616, 617, 618, 0, 620, 621, 0, 1107, 622, 623,
	624, 626, 627, 625, 628, 1168, 629, 0, 0, 630,
	631, 632, 690, 1191, 1228, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1104, 0, 0, 0, 0, 1146, 1118, 1119,
	1120, 1116, 1117, 1129, 0, 1099, 0, 0, 0, 0,
	0, 0, 1097, 1098, 280, 282, 281, 283, 284, 285,
	286, 1130, 287, 288, 0, 1128, 0, 0, 0, 1170,
	1134, 0, 0, 0, 289, 290, 1210, 291, 292, 293,
	294, 295, 296, 644, 1183, 0, 297, 1190, 298, 1189,
	0, 1200, 299, 300, 301, 302, 303, 304, 1136, 1169,
	1101, 305, 1230, 1231, 651, 0, 306, 307, 1176, 0,
	1157, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1211,
	330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161, 1165,
	333, 334, 335, 336, 337, 1193, 338, 340, 1187, 1186,
	1106, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1178, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1112, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1201, 1202,
	370, 1125, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1185, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1212, 378, 379, 380, 1198, 1199, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1208,
	0, 1135, 391, 0, 392, 393, 394, 395, 396, 1171,
	1172, 1175, 481, 1214, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1213, 407, 1180, 1181, 0, 1141, 0, 409, 410,
	1215, 1173, 1216, 411, 412, 413, 1217, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1209, 1218, 425, 426, 1219, 0, 427,
	428, 429, 430, 431, 432, 435, 1164, 1163, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1220, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1221, 477, 465, 1103, 4060, 1222, 478,
	479, 1126, 1174, 480, 1188, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 1223, 491, 1224, 1203, 492, 493, 1113, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 1204, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1184, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1225, 546, 547,
	548, 549, 550, 1114, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1167, 573, 574, 556, 557,
	575, 576, 1226, 577, 578, 579, 580, 581, 582, 583,
	1182, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1229, 591, 592, 593, 594, 1205, 598, 599,
	0, 600, 601, 1100, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 1194, 1195,
	1196, 1197, 0, 619, 0, 611, 612, 613, 1206, 614,
	1207, 1124, 615, 616, 617, 618, 0, 620, 621, 0,
	1107, 622, 623, 624, 626, 627, 625, 628, 1168, 629,
	0, 0, 630, 631, 632, 690, 1191, 1228, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1099, 0,
	0, 0, 0, 0, 0, 1097, 1098, 1969, 0, 0,
	0, 0, 0, 0, 1130, 0, 0, 0, 1128, 1146,
	1118, 1119, 1120, 1116, 1117, 1129, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 1170, 1134, 0, 0, 0, 289, 290, 1210, 291,
	292, 293, 294, 295, 296, 644, 1183, 0, 297, 1190,
	298, 1189, 0, 1200, 299, 300, 301, 302, 303, 304,
	1136, 1169, 1101, 305, 1230, 1231, 651, 0, 306, 307,
	1176, 0, 1157, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162,
	1161, 1165, 333, 334, 335, 336, 337, 1193, 338, 340,
	1187, 1186, 1106, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1178, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1112,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1201, 1202, 370, 1125, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1185, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1212, 378, 379, 380, 1198, 1199,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1208, 0, 1135, 391, 0, 392, 393, 394, 395,
	396, 1171, 1172, 1175, 481, 1214, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1213, 407, 1180, 1181, 0, 1141, 0,
	409, 410, 1215, 1173, 1216, 411, 412, 413, 1217, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1209, 1218, 425, 426, 1219,
	0, 427, 428, 429, 430, 431, 432, 435, 1164, 1163,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1220,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1221, 477, 465, 1103, 279,
	1222, 478, 479, 1126, 1174, 480, 1188, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 1223, 491, 1224, 1203, 492, 493, 1113,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	1204, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1184, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1225,
	546, 547, 548, 549, 550, 1114, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1167, 573, 574,
	556, 557, 575, 576, 1226, 577, 578, 579, 580, 581,
	582, 583, 1182, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1229, 591, 592, 593, 594, 1205,
	598, 599, 0, 600, 601, 1100, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	1194, 1195, 1196, 1197, 0, 619, 0, 611, 612, 613,
	1206, 614, 1207, 1124, 615, 616, 617, 618, 0, 620,
	621, 0, 1107, 622, 623, 624, 626, 627, 625, 628,
	1168, 629, 0, 0, 630, 631, 632, 690, 1191, 1228,
	3771, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1104, 0, 0,
	0, 0, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 0,
	1099, 0, 0, 0, 0, 0, 0, 1097, 1098, 280,
	282, 281, 283, 284, 285, 286, 1130, 287, 288, 0,
	1128, 0, 0, 0, 1170, 1134, 0, 0, 0, 289,
	290, 1210, 291, 292, 293, 294, 295, 296, 644, 1183,
	0, 297, 1190, 298, 1189, 0, 1200, 299, 300, 301,
	302, 303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651,
	0, 306, 307, 1176, 0, 1157, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1211, 330, 331, 332, 1160, 1158,
	1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336, 337,
	1193, 338, 340, 1187, 1186, 1106, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1178, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1112, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1201, 1202, 370, 1125, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1185, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1212, 378, 379,
	380, 1198, 1199, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1208, 0, 1135, 391, 0, 392,
	393, 394, 395, 396, 1171, 1172, 1175, 481, 1214, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1213, 407, 1180, 1181,
	0, 1141, 0, 409, 410, 1215, 1173, 1216, 411, 412,
	413, 1217, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1209, 1218,
	425, 426, 1219, 0, 427, 428, 429, 430, 431, 432,
	435, 1164, 1163, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1220, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1221, 477,
	465, 1103, 279, 1222, 478, 479, 1126, 1174, 480, 1188,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 1223, 491, 1224, 1203,
	492, 493, 1113, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 1204, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1184,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1225, 546, 547, 548, 549, 550, 1114, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1167, 573, 574, 556, 557, 575, 576, 1226, 577, 578,
	579, 580, 581, 582, 583, 1182, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1229, 591, 592,
	593, 594, 1205, 598, 599, 0, 600, 601, 1100, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 1194, 1195, 1196, 1197, 0, 619, 0,
	611, 612, 613, 1206, 614, 1207, 1124, 615, 616, 617,
	618, 0, 620, 621, 0, 1107, 622, 623, 624, 626,
	627, 625, 628, 1168, 629, 0, 0, 630, 631, 632,
	690, 1191, 1228, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1104, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1099, 0, 0, 0, 0, 0, 0,
	1097, 1098, 1969, 0, 0, 0, 0, 0, 0, 1130,
	0, 0, 0, 1128, 1146, 1118, 1119, 1120, 1116, 1117,
	1129, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 1170, 1134, 0, 0,
	0, 289, 290, 1210, 291, 292, 293, 294, 295, 296,
	644, 1183, 0, 297, 1190, 298, 1189, 0, 1200, 299,
	300, 301, 302, 303, 304, 1136, 1169, 1101, 305, 1230,
	1231, 651, 0, 306, 307, 1176, 0, 1157, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1211, 330, 331, 332,
	1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335,
	336, 337, 1193, 338, 340, 1187, 1186, 1106, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1178, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1112, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1201, 1202, 370, 1125, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1185, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 2755, 1212,
	378, 379, 380, 1198, 1199, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1208, 0, 1135, 391,
	0, 392, 393, 394, 395, 396, 1171, 1172, 1175, 481,
	1214, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1213, 407,
	1180, 1181, 0, 1141, 0, 409, 410, 1215, 1173, 1216,
	411, 412, 413, 1217, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1209, 1218, 425, 426, 1219, 0, 427, 428, 429, 430,
	431, 432, 435, 1164, 1163, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1220, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1221, 477, 465, 1103, 279, 1222, 478, 479, 1126, 1174,
	480, 1188, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 1223, 491,
	1224, 1203, 492, 493, 1113, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 1204, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1184, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1225, 546, 547, 548, 549, 550,
	1114, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1167, 573, 574, 556, 557, 575, 576, 1226,
	577, 578, 579, 580, 581, 582, 583, 1182, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 1229,
	591, 592, 593, 594, 1205, 598, 599, 0, 600, 601,
	1100, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 1194, 1195, 1196, 1197, 0,
	619, 0, 611, 612, 613, 1206, 614, 1207, 1124, 615,
	616, 617, 618, 0, 620, 621, 0, 1107, 622, 623,
	624, 626, 627, 625, 628, 1168, 629, 0, 0, 630,
	631, 632, 690, 1191, 1228, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1104, 0, 0, 0, 0, 1146, 1118, 1119,
	1120, 1116, 1117, 1129, 0, 1099, 0, 0, 0, 0,
	0, 0, 1097, 1098, 280, 282, 281, 283, 284, 285,
	286, 1130, 287, 288, 0, 1128, 0, 0, 0, 1170,
	1134, 0, 0, 0, 289, 290, 1210, 291, 292, 293,
	294, 295, 296, 644, 1183, 0, 297, 1190, 298, 1189,
	0, 1200, 299, 300, 301, 302, 303, 304, 1136, 1169,
	1101, 305, 1230, 1231, 651, 0, 306, 307, 1176, 0,
	1157, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1211,
	330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161, 1165,
	333, 334, 335, 336, 337, 1193, 338, 340, 1187, 1186,
	1106, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1178, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1112, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1201, 1202,
	370, 1125, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1185, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1212, 378, 379, 380, 1198, 1199, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1208,
	0, 1135, 391, 0, 392, 393, 394, 395, 396, 1171,
	1172, 1175, 481, 1214, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1213, 407, 1180, 1181, 0, 1141, 0, 409, 410,
	1215, 1173, 1216, 411, 412, 413, 1217, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1209, 1218, 425, 426, 1219, 0, 427,
	428, 429, 430, 431, 432, 435, 1164, 1163, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1220, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1221, 477, 465, 1103, 279, 1222, 478,
	479, 1126, 1174, 480, 1188, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 1223, 491, 1224, 1203, 492, 493, 1113, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 1204, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1184, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1225, 546, 547,
	548, 549, 550, 1114, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1167, 573, 574, 556, 557,
	575, 576, 1226, 577, 578, 579, 580, 581, 582, 583,
	1182, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1229, 591, 592, 593, 594, 1205, 598, 599,
	0, 600, 601, 1100, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 1194, 1195,
	1196, 1197, 0, 619, 0, 611, 612, 613, 1206, 614,
	1207, 1124, 615, 616, 617, 618, 0, 620, 621, 0,
	1107, 622, 623, 624, 626, 627, 625, 628, 1168, 629,
	0, 0, 630, 631, 632, 690, 1191, 1228, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1099, 0,
	0, 0, 0, 0, 0, 1097, 1098, 0, 0, 0,
	0, 0, 0, 0, 1130, 1898, 0, 2760, 1128, 1146,
	1118, 1119, 1120, 1116, 1117, 1129, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 1170, 1134, 0, 0, 0, 289, 290, 1210, 291,
	292, 293, 294, 295, 296, 644, 1183, 0, 297, 1190,
	298, 1189, 0, 1200, 299, 300, 301, 302, 303, 304,
	1136, 1169, 1101, 305, 1230, 1231, 651, 0, 306, 307,
	1176, 0, 1157, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162,
	1161, 1165, 333, 334, 335, 336, 337, 1193, 338, 340,
	1187, 1186, 1106, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1178, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1112,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1201, 1202, 370, 1125, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1185, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1212, 378, 379, 380, 1198, 1199,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1208, 0, 1135, 391, 0, 392, 393, 394, 395,
	396, 1171, 1172, 1175, 481, 1214, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1213, 407, 1180, 1181, 0, 1141, 0,
	409, 410, 1215, 1173, 1216, 411, 412, 413, 1217, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1209, 1218, 425, 426, 1219,
	0, 427, 428, 429, 430, 431, 432, 435, 1164, 1163,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1220,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1221, 477, 465, 1103, 279,
	1222, 478, 479, 1126, 1174, 480, 1188, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 1223, 491, 1224, 1203, 492, 493, 1113,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	1204, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1184, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1225,
	546, 547, 548, 549, 550, 1114, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1167, 573, 574,
	556, 557, 575, 576, 1226, 577, 578, 579, 580, 581,
	582, 583, 1182, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1229, 591, 592, 593, 594, 1205,
	598, 599, 0, 600, 601, 1100, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	1194, 1195, 1196, 1197, 0, 619, 0, 611, 612, 613,
	1206, 614, 1207, 1124, 615, 616, 617, 618, 0, 620,
	621, 0, 1107, 622, 623, 624, 626, 627, 625, 628,
	1168, 629, 0, 0, 630, 631, 632, 690, 1191, 1228,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1104, 0, 0,
	2758, 0, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 0,
	1099, 0, 0, 0, 0, 0, 0, 1097, 1098, 280,
	282, 281, 283, 284, 285, 286, 1130, 287, 288, 0,
	1128, 0, 0, 0, 1170, 1134, 0, 0, 0, 289,
	290, 1210, 291, 292, 293, 294, 295, 296, 644, 1183,
	0, 297, 1190, 298, 1189, 0, 1200, 299, 300, 301,
	302, 303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651,
	0, 306, 307, 1176, 0, 1157, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1211, 330, 331, 332, 1160, 1158,
	1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336, 337,
	1193, 338, 340, 1187, 1186, 1106, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1178, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1112, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1201, 1202, 370, 1125, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1185, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1212, 378, 379,
	380, 1198, 1199, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1208, 0, 1135, 391, 0, 392,
	393, 394, 395, 396, 1171, 1172, 1175, 481, 1214, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1213, 407, 1180, 1181,
	0, 1141, 0, 409, 410, 1215, 1173, 1216, 411, 412,
	413, 1217, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1209, 1218,
	425, 426, 1219, 0, 427, 428, 429, 430, 431, 432,
	435, 1164, 1163, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1220, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1221, 477,
	465, 1103, 279, 1222, 478, 479, 1126, 1174, 480, 1188,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 1223, 491, 1224, 1203,
	492, 493, 1113, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 1204, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1184,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1225, 546, 547, 548, 549, 550, 1114, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1167, 573, 574, 556, 557, 575, 576, 1226, 577, 578,
	579, 580, 581, 582, 583, 1182, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1229, 591, 592,
	593, 594, 1205, 598, 599, 0, 600, 601, 1100, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 1194, 1195, 1196, 1197, 0, 619, 0,
	611, 612, 613, 1206, 614, 1207, 1124, 615, 616, 617,
	618, 0, 620, 621, 0, 1107, 622, 623, 624, 626,
	627, 625, 628, 1168, 629, 0, 0, 630, 631, 632,
	690, 1191, 1228, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1104, 0, 0, 2746, 0, 1146, 1118, 1119, 1120, 1116,
	1117, 1129, 0, 1099, 0, 0, 0, 0, 0, 0,
	1097, 1098, 280, 282, 281, 283, 284, 285, 286, 1130,
	287, 288, 0, 1128, 0, 0, 0, 1170, 1134, 0,
	0, 0, 289, 290, 1210, 291, 292, 293, 294, 295,
	296, 644, 1183, 0, 297, 1190, 298, 1189, 0, 1200,
	299, 300, 301, 302, 303, 304, 1136, 1169, 1101, 305,
	1230, 1231, 651, 0, 306, 307, 1176, 0, 1157, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1211, 330, 331,
	332, 1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334,
	335, 336, 337, 1193, 338, 340, 1187, 1186, 1106, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1178, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1112, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1201, 1202, 370, 1125,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1185,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1212, 378, 379, 380, 1198, 1199, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1208, 0, 1135,
	391, 0, 392, 393, 394, 395, 396, 1171, 1172, 1175,
	481, 1214, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1213,
	407, 1180, 1181, 0, 1141, 0, 409, 410, 1215, 1173,
	1216, 411, 412, 413, 1217, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1209, 1218, 425, 426, 1219, 0, 427, 428, 429,
	430, 431, 432, 435, 1164, 1163, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1220, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1221, 477, 465, 1103, 279, 1222, 478, 479, 1126,
	1174, 480, 1188, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 1223,
	491, 1224, 1203, 492, 493, 1113, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 1204, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1184, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1225, 546, 547, 548, 549,
	550, 1114, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1167, 573, 574, 556, 557, 575, 576,
	1226, 577, 578, 579, 580, 581, 582, 583, 1182, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	1229, 591, 592, 593, 594, 1205, 598, 599, 0, 600,
	601, 1100, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 1194, 1195, 1196, 1197,
	0, 619, 0, 611, 612, 613, 1206, 614, 1207, 1124,
	615, 616, 617, 618, 0, 620, 621, 0, 1107, 622,
	623, 624, 626, 627, 625, 628, 1168, 629, 0, 0,
	630, 631, 632, 690, 1191, 1228, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1104, 0, 0, 2734, 0, 1146, 1118,
	1119, 1120, 1116, 1117, 1129, 0, 1099, 0, 0, 0,
	0, 0, 0, 1097, 1098, 280, 282, 281, 283, 284,
	285, 286, 1130, 287, 288, 0, 1128, 0, 0, 0,
	1170, 1134, 0, 0, 0, 289, 290, 1210, 291, 292,
	293, 294, 295, 296, 644, 1183, 0, 297, 1190, 298,
	1189, 0, 1200, 299, 300, 301, 302, 303, 304, 1136,
	1169, 1101, 305, 1230, 1231, 651, 0, 306, 307, 1176,
	0, 1157, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161,
	1165, 333, 334, 335, 336, 337, 1193, 338, 340, 1187,
	1186, 1106, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1178, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1112, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1201,
	1202, 370, 1125, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1185, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1212, 378, 379, 380, 1198, 1199, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1208, 0, 1135, 391, 0, 392, 393, 394, 395, 396,
	1171, 1172, 1175, 481, 1214, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1213, 407, 1180, 1181, 0, 1141, 0, 409,
	410, 1215, 1173, 1216, 411, 412, 413, 1217, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1209, 1218, 425, 426, 1219, 0,
	427, 428, 429, 430, 431, 432, 435, 1164, 1163, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1220, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1221, 477, 465, 1103, 279, 1222,
	478, 479, 1126, 1174, 480, 1188, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 1223, 491, 1224, 1203, 492, 493, 1113, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 1204,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1184, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1225, 546,
	547, 548, 549, 550, 1114, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1167, 573, 574, 556,
	557, 575, 576, 1226, 577, 578, 579, 580, 581, 582,
	583, 1182, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1229, 591, 592, 593, 594, 1205, 598,
	599, 0, 600, 601, 1100, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 1194,
	1195, 1196, 1197, 0, 619, 0, 611, 612, 613, 1206,
	614, 1207, 1124, 615, 616, 617, 618, 0, 620, 621,
	0, 1107, 622, 623, 624, 626, 627, 625, 628, 1168,
	629, 0, 0, 630, 631, 632, 690, 1191, 1228, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1104, 0, 0, 2732,
	0, 2723, 2730, 1119, 1120, 1116, 1117, 1129, 0, 1099,
	0, 0, 0, 0, 0, 0, 1097, 1098, 280, 282,
	281, 283, 284, 285, 286, 1130, 287, 288, 0, 1128,
	0, 0, 0, 1170, 1134, 0, 0, 0, 289, 290,
	1210, 291, 292, 293, 294, 295, 296, 644, 1183, 0,
	297, 1190, 298, 1189, 0, 1200, 299, 300, 301, 302,
	303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651, 0,
	306, 307, 1176, 0, 1157, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1211, 330, 331, 332, 1160, 1158, 1159,
	1166, 1162, 1161, 1165, 333, 334, 335, 336, 337, 1193,
	2726, 340, 1187, 1186, 1106, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1178,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1112, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1201, 1202, 370, 1125, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1185, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1212, 378, 379, 380,
	1198, 1199, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1208, 0, 1135, 391, 0, 392, 393,
	394, 2727, 396, 1171, 1172, 1175, 481, 1214, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1213, 407, 1180, 1181, 0,
	1141, 0, 409, 410, 1215, 1173, 1216, 411, 412, 413,
	1217, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1209, 1218, 425,
	426, 1219, 0, 427, 428, 429, 430, 431, 432, 435,
	1164, 1163, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 2728, 445, 2725, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1220, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1221, 477, 465,
	1103, 279, 1222, 478, 479, 1126, 1174, 480, 1188, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 1223, 491, 1224, 1203, 492,
	493, 1113, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 1204, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1184, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1225, 546, 547, 548, 549, 550, 1114, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 2729, 0, 568, 569, 567, 570, 571, 572, 1167,
	573, 574, 556, 557, 575, 576, 1226, 577, 578, 579,
	580, 581, 582, 583, 1182, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1229, 591, 592, 593,
	594, 1205, 598, 599, 0, 600, 601, 1100, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 1194, 1195, 1196, 1197, 0, 619, 0, 611,
	612, 613, 1206, 614, 1207, 1124, 615, 616, 617, 618,
	0, 620, 621, 0, 1107, 622, 623, 624, 626, 627,
	625, 628, 1168, 629, 0, 0, 630, 631, 632, 690,
	1191, 1228, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 2724, 642, 1104,
	0, 0, 2720, 0, 2723, 2730, 1119, 1120, 1116, 1117,
	1129, 0, 1099, 0, 0, 0, 0, 0, 0, 1097,
	1098, 280, 282, 281, 283, 284, 285, 286, 1130, 287,
	288, 0, 1128, 0, 0, 0, 1170, 1134, 0, 0,
	0, 289, 290, 1210, 291, 292, 293, 294, 295, 296,
	644, 1183, 0, 297, 1190, 298, 1189, 0, 1200, 299,
	300, 301, 302, 303, 304, 1136, 1169, 1101, 305, 1230,
	1231, 651, 0, 306, 307, 1176, 0, 1157, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1211, 330, 331, 332,
	1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335,
	336, 337, 1193, 2726, 340, 1187, 1186, 1106, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1178, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1112, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1201, 1202, 370, 1125, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1185, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1212,
	378, 379, 380, 1198, 1199, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1208, 0, 1135, 391,
	0, 392, 393, 394, 2727, 396, 1171, 1172, 1175, 481,
	1214, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1213, 407,
	1180, 1181, 0, 1141, 0, 409, 410, 1215, 1173, 1216,
	411, 412, 413, 1217, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1209, 1218, 425, 426, 1219, 0, 427, 428, 429, 430,
	431, 432, 435, 1164, 1163, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 2728, 445, 2725, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1220, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1221, 477, 465, 1103, 279, 1222, 478, 479, 1126, 1174,
	480, 1188, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 1223, 491,
	1224, 1203, 492, 493, 1113, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 1204, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1184, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1225, 546, 547, 548, 549, 550,
	1114, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 2729, 0, 568, 569, 567, 570,
	571, 572, 1167, 573, 574, 556, 557, 575, 576, 1226,
	577, 578, 579, 580, 581, 582, 583, 1182, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 1229,
	591, 592, 593, 594, 1205, 598, 599, 0, 600, 601,
	1100, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 1194, 1195, 1196, 1197, 0,
	619, 0, 611, 612, 613, 1206, 614, 1207, 1124, 615,
	616, 617, 618, 0, 620, 621, 0, 1107, 622, 623,
	624, 626, 627, 625, 628, 1168, 629, 0, 0, 630,
	631, 632, 690, 1191, 1228, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	2724, 642, 1104, 0, 0, 0, 0, 1146, 1118, 1119,
	1120, 1116, 1117, 1129, 0, 1099, 0, 0, 0, 0,
	0, 0, 1097, 1098, 280, 282, 281, 283, 284, 285,
	286, 1130, 287, 288, 0, 1128, 0, 0, 0, 1170,
	1134, 0, 0, 0, 289, 290, 1210, 291, 292, 293,
	294, 295, 296, 644, 1183, 0, 297, 1190, 298, 1189,
	0, 1200, 299, 300, 301, 302, 303, 304, 1136, 1169,
	1101, 305, 1230, 1231, 651, 0, 306, 307, 1176, 0,
	1157, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1211,
	330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161, 1165,
	333, 334, 335, 336, 337, 1193, 338, 340, 1187, 1186,
	1106, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1178, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1112, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1201, 1202,
	370, 1125, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1185, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1212, 378, 379, 380, 1198, 1199, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1208,
	0, 1135, 391, 0, 392, 393, 394, 395, 396, 1171,
	1172, 1175, 481, 1214, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1213, 407, 1180, 1181, 0, 1141, 0, 409, 410,
	1215, 1173, 1216, 411, 412, 413, 1217, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1209, 1218, 425, 426, 1219, 0, 427,
	428, 429, 430, 431, 432, 435, 1164, 1163, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1220, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1221, 477, 465, 1103, 279, 1222, 478,
	479, 1126, 1174, 480, 1188, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 1223, 491, 1224, 1203, 492, 493, 1113, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 1204, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1184, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1225, 546, 547,
	548, 549, 550, 1114, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1167, 573, 574, 556, 557,
	575, 576, 1226, 577, 578, 579, 580, 581, 582, 583,
	1182, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1229, 591, 592, 593, 594, 1205, 598, 599,
	0, 600, 601, 1100, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 1194, 1195,
	1196, 1197, 0, 619, 0, 611, 612, 613, 1206, 614,
	1207, 1124, 615, 616, 617, 618, 0, 620, 621, 0,
	1107, 622, 623, 624, 626, 627, 625, 628, 1168, 629,
	0, 0, 630, 631, 632, 690, 1191, 1228, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1099, 0,
	0, 0, 0, 0, 0, 1097, 1098, 0, 0, 0,
	0, 0, 1906, 0, 1130, 0, 0, 0, 1128, 1146,
	1118, 1119, 1120, 1116, 1117, 1129, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 2475, 287, 288, 0, 0, 0, 0,
	0, 1170, 1134, 0, 0, 0, 289, 290, 1210, 291,
	292, 293, 294, 295, 296, 644, 1183, 0, 297, 1190,
	298, 1189, 0, 1200, 299, 300, 301, 302, 303, 304,
	1136, 1169, 1101, 305, 1230, 1231, 651, 0, 306, 307,
	1176, 0, 1157, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162,
	1161, 1165, 333, 334, 335, 336, 337, 1193, 338, 340,
	1187, 1186, 1106, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1178, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1112,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1201, 1202, 370, 1125, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1185, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1212, 378, 379, 380, 1198, 1199,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1208, 0, 1135, 391, 0, 392, 393, 394, 395,
	396, 1171, 1172, 1175, 481, 1214, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1213, 407, 1180, 1181, 0, 1141, 0,
	409, 410, 1215, 1173, 1216, 411, 412, 413, 1217, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1209, 1218, 425, 426, 1219,
	0, 427, 428, 429, 430, 431, 432, 435, 1164, 1163,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1220,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1221, 477, 465, 1103, 279,
	1222, 478, 479, 1126, 1174, 480, 1188, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 1223, 491, 1224, 1203, 492, 493, 1113,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	1204, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1184, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1225,
	546, 547, 548, 549, 550, 1114, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1167, 573, 574,
	556, 557, 575, 576, 1226, 577, 578, 579, 580, 581,
	582, 583, 1182, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1229, 591, 592, 593, 594, 1205,
	598, 599, 0, 600, 601, 1100, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	1194, 1195, 1196, 1197, 0, 619, 0, 611, 612, 613,
	1206, 614, 1207, 1124, 615, 616, 617, 618, 0, 620,
	621, 0, 1107, 622, 623, 624, 626, 627, 625, 628,
	1168, 629, 0, 0, 630, 631, 632, 690, 1191, 1228,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1104, 0, 0,
	2437, 0, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 0,
	1099, 0, 0, 0, 0, 0, 0, 1097, 1098, 280,
	282, 281, 283, 284, 285, 286, 1130, 287, 288, 0,
	1128, 0, 0, 0, 1170, 1134, 0, 0, 0, 289,
	290, 1210, 291, 292, 293, 294, 295, 296, 644, 1183,
	0, 297, 1190, 298, 1189, 0, 1200, 299, 300, 301,
	302, 303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651,
	0, 306, 307, 1176, 0, 1157, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1211, 330, 331, 332, 1160, 1158,
	1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336, 337,
	1193, 338, 340, 1187, 1186, 1106, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1178, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1112, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1201, 1202, 370, 1125, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1185, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1212, 378, 379,
	380, 1198, 1199, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1208, 0, 1135, 391, 0, 392,
	393, 394, 395, 396, 1171, 1172, 1175, 481, 1214, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1213, 407, 1180, 1181,
	0, 1141, 0, 409, 410, 1215, 1173, 1216, 411, 412,
	413, 1217, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1209, 1218,
	425, 426, 1219, 0, 427, 428, 429, 430, 431, 432,
	435, 1164, 1163, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1220, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1221, 477,
	465, 1103, 279, 1222, 478, 479, 1126, 1174, 480, 1188,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 1223, 491, 1224, 1203,
	492, 493, 1113, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 1204, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1184,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1225, 546, 547, 548, 549, 550, 1114, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1167, 573, 574, 556, 557, 575, 576, 1226, 577, 578,
	579, 580, 581, 582, 583, 1182, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1229, 591, 592,
	593, 594, 1205, 598, 599, 0, 600, 601, 1100, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 1194, 1195, 1196, 1197, 0, 619, 0,
	611, 612, 613, 1206, 614, 1207, 1124, 615, 616, 617,
	618, 0, 620, 621, 0, 1107, 622, 623, 624, 626,
	627, 625, 628, 1168, 629, 0, 0, 630, 631, 632,
	690, 1191, 1228, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1104, 0, 0, 2411, 0, 1146, 1118, 1119, 1120, 1116,
	1117, 1129, 0, 1099, 0, 0, 0, 0, 0, 0,
	1097, 1098, 280, 282, 281, 283, 284, 285, 286, 1130,
	287, 288, 0, 1128, 0, 0, 0, 1170, 1134, 0,
	0, 0, 289, 290, 1210, 291, 292, 293, 294, 295,
	296, 644, 1183, 0, 297, 1190, 298, 1189, 0, 1200,
	299, 300, 301, 302, 303, 304, 1136, 1169, 1101, 305,
	1230, 1231, 651, 0, 306, 307, 1176, 0, 1157, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1211, 330, 331,
	332, 1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334,
	335, 336, 337, 1193, 338, 340, 1187, 1186, 1106, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1178, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1112, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1201, 1202, 370, 1125,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1185,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1212, 378, 379, 380, 1198, 1199, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1208, 0, 1135,
	391, 0, 392, 393, 394, 395, 396, 1171, 1172, 1175,
	481, 1214, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1213,
	407, 1180, 1181, 0, 1141, 0, 409, 410, 1215, 1173,
	1216, 411, 412, 413, 1217, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1209, 1218, 425, 426, 1219, 0, 427, 428, 429,
	430, 431, 432, 435, 1164, 1163, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1220, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1221, 477, 465, 1103, 279, 1222, 478, 479, 1126,
	1174, 480, 1188, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 1223,
	491, 1224, 1203, 492, 493, 1113, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 1204, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1184, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1225, 546, 547, 548, 549,
	550, 1114, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1167, 573, 574, 556, 557, 575, 576,
	1226, 577, 578, 579, 580, 581, 582, 583, 1182, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	1229, 591, 592, 593, 594, 1205, 598, 599, 0, 600,
	601, 1100, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 1194, 1195, 1196, 1197,
	0, 619, 0, 611, 612, 613, 1206, 614, 1207, 1124,
	615, 616, 617, 618, 0, 620, 621, 0, 1107, 622,
	623, 624, 626, 627, 625, 628, 1168, 629, 0, 0,
	630, 631, 632, 690, 1191, 1228, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1104, 0, 0, 1744, 0, 1146, 1118,
	1119, 1120, 1116, 1117, 1129, 0, 1099, 0, 0, 0,
	0, 0, 0, 1097, 1098, 280, 282, 281, 283, 284,
	285, 286, 1130, 287, 288, 0, 1128, 0, 0, 0,
	1170, 1134, 0, 0, 0, 289, 290, 1210, 291, 292,
	293, 294, 295, 296, 644, 1183, 0, 297, 1190, 298,
	1189, 0, 1200, 299, 300, 301, 302, 303, 304, 1136,
	1169, 1101, 305, 1230, 1231, 651, 0, 306, 307, 1176,
	0, 1157, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161,
	1165, 333, 334, 335, 336, 337, 1193, 338, 340, 1187,
	1186, 1106, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1178, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1112, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1201,
	1202, 370, 1125, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1185, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1212, 378, 379, 380, 1198, 1199, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1208, 0, 1135, 391, 0, 392, 393, 394, 395, 396,
	1171, 1172, 1175, 481, 1214, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1213, 407, 1180, 1181, 0, 1141, 0, 409,
	410, 1215, 1173, 1216, 411, 412, 413, 1217, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1209, 1218, 425, 426, 1219, 0,
	427, 428, 429, 430, 431, 432, 435, 1164, 1163, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1220, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1221, 477, 465, 1103, 279, 1222,
	478, 479, 1126, 1174, 480, 1188, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 1223, 491, 1224, 1203, 492, 493, 1113, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 1204,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1184, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1225, 546,
	547, 548, 549, 550, 1114, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1167, 573, 574, 556,
	557, 575, 576, 1226, 577, 578, 579, 580, 581, 582,
	583, 1182, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1229, 591, 592, 593, 594, 1205, 598,
	599, 0, 600, 601, 1100, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 1194,
	1195, 1196, 1197, 0, 619, 0, 611, 612, 613, 1206,
	614, 1207, 1124, 615, 616, 617, 618, 0, 620, 621,
	0, 1107, 622, 623, 624, 626, 627, 625, 628, 1168,
	629, 0, 0, 630, 631, 632, 690, 1191, 1228, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1104, 0, 0, 1673,
	0, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 0, 1099,
	0, 0, 0, 0, 0, 0, 1097, 1098, 280, 282,
	281, 283, 284, 285, 286, 1130, 287, 288, 0, 1128,
	0, 0, 0, 1170, 1134, 0, 0, 0, 289, 290,
	1210, 291, 292, 293, 294, 295, 296, 644, 1183, 0,
	297, 1190, 298, 1189, 0, 1200, 299, 300, 301, 302,
	303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651, 0,
	306, 307, 1176, 0, 1157, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1211, 330, 331, 332, 1160, 1158, 1159,
	1166, 1162, 1161, 1165, 333, 334, 335, 336, 337, 1193,
	338, 340, 1187, 1186, 1106, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1178,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1112, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1201, 1202, 370, 1125, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1185, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1212, 378, 379, 380,
	1198, 1199, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1208, 0, 1135, 391, 0, 392, 393,
	394, 395, 396, 1171, 1172, 1175, 481, 1214, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1213, 407, 1180, 1181, 0,
	1141, 0, 409, 410, 1215, 1173, 1216, 411, 412, 413,
	1217, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1209, 1218, 425,
	426, 1219, 0, 427, 428, 429, 430, 431, 432, 435,
	1164, 1163, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1220, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1221, 477, 465,
	1103, 279, 1222, 478, 479, 1126, 1174, 480, 1188, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 1223, 491, 1224, 1203, 492,
	493, 1113, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 1204, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1184, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1225, 546, 547, 548, 549, 550, 1114, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1167,
	573, 574, 556, 557, 575, 576, 1226, 577, 578, 579,
	580, 581, 582, 583, 1182, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1229, 591, 592, 593,
	594, 1205, 598, 599, 0, 600, 601, 1100, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 1194, 1195, 1196, 1197, 0, 619, 0, 611,
	612, 613, 1206, 614, 1207, 1124, 615, 616, 617, 618,
	0, 620, 621, 0, 1107, 622, 623, 624, 626, 627,
	625, 628, 1168, 629, 0, 0, 630, 631, 632, 690,
	1191, 1228, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1104,
	0, 0, 1668, 0, 1146, 1118, 1119, 1120, 1116, 1117,
	1129, 0, 1099, 0, 0, 0, 0, 0, 0, 1097,
	1098, 280, 282, 281, 283, 284, 285, 286, 1130, 287,
	288, 0, 1128, 0, 0, 0, 1170, 1134, 0, 0,
	0, 289, 290, 1210, 291, 292, 293, 294, 295, 296,
	644, 1183, 0, 297, 1190, 298, 1189, 0, 1200, 299,
	300, 301, 302, 303, 304, 1136, 1169, 1101, 305, 1230,
	1231, 651, 0, 306, 307, 1176, 0, 1157, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1211, 330, 331, 332,
	1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335,
	336, 337, 1193, 338, 340, 1187, 1186, 1106, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1178, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1112, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1201, 1202, 370, 1125, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1185, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1212,
	378, 379, 380, 1198, 1199, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1208, 0, 1135, 391,
	0, 392, 393, 394, 395, 396, 1171, 1172, 1175, 481,
	1214, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1213, 407,
	1180, 1181, 0, 1141, 0, 409, 410, 1215, 1173, 1216,
	411, 412, 413, 1217, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1209, 1218, 425, 426, 1219, 0, 427, 428, 429, 430,
	431, 432, 435, 1164, 1163, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1220, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1221, 477, 465, 1103, 279, 1222, 478, 479, 1126, 1174,
	480, 1188, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 1223, 491,
	1224, 1203, 492, 493, 1113, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 1204, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1184, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1225, 546, 547, 548, 549, 550,
	1114, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1167, 573, 574, 556, 557, 575, 576, 1226,
	577, 578, 579, 580, 581, 582, 583, 1182, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 1229,
	591, 592, 593, 594, 1205, 598, 599, 0, 600, 601,
	1100, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 1194, 1195, 1196, 1197, 0,
	619, 0, 611, 612, 613, 1206, 614, 1207, 1124, 615,
	616, 617, 618, 0, 620, 621, 0, 1107, 622, 623,
	624, 626, 627, 625, 628, 1168, 629, 0, 0, 630,
	631, 632, 690, 1191, 1228, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1104, 0, 0, 1655, 0, 1146, 1118, 1119,
	1120, 1116, 1117, 1129, 0, 1099, 0, 0, 0, 0,
	0, 0, 1097, 1098, 280, 282, 281, 283, 284, 285,
	286, 1130, 287, 288, 0, 1128, 0, 0, 0, 1170,
	1134, 0, 0, 0, 289, 290, 1210, 291, 292, 293,
	294, 295, 296, 644, 1183, 0, 297, 1190, 298, 1189,
	0, 1200, 299, 300, 301, 302, 303, 304, 1136, 1169,
	1101, 305, 1230, 1231, 651, 0, 306, 307, 1176, 0,
	1157, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1211,
	330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161, 1165,
	333, 334, 335, 336, 337, 1193, 338, 340, 1187, 1186,
	1106, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1178, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1112, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1201, 1202,
	370, 1125, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1185, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1212, 378, 379, 380, 1198, 1199, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1208,
	0, 1135, 391, 0, 392, 393, 394, 395, 396, 1171,
	1172, 1175, 481, 1214, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1213, 407, 1180, 1181, 0, 1141, 0, 409, 410,
	1215, 1173, 1216, 411, 412, 413, 1217, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1209, 1218, 425, 426, 1219, 0, 427,
	428, 429, 430, 431, 432, 435, 1164, 1163, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1220, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1221, 477, 465, 1103, 279, 1222, 478,
	479, 1126, 1174, 480, 1188, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 1223, 491, 1224, 1203, 492, 493, 1113, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 1204, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1184, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1225, 546, 547,
	548, 549, 550, 1114, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1167, 573, 574, 556, 557,
	575, 576, 1226, 577, 578, 579, 580, 581, 582, 583,
	1182, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1229, 591, 592, 593, 594, 1205, 598, 599,
	0, 600, 601, 1100, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 1194, 1195,
	1196, 1197, 0, 619, 0, 611, 612, 613, 1206, 614,
	1207, 1124, 615, 616, 617, 618, 0, 620, 621, 0,
	1107, 622, 623, 624, 626, 627, 625, 628, 1168, 629,
	0, 0, 630, 631, 632, 690, 1191, 1228, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1104, 0, 0, 1650, 0,
	1146, 1118, 1119, 1120, 1116, 1117, 1129, 0, 1099, 0,
	0, 0, 0, 0, 0, 1097, 1098, 280, 282, 281,
	283, 284, 285, 286, 1130, 287, 288, 0, 1128, 0,
	0, 0, 1170, 1134, 0, 0, 0, 289, 290, 1210,
	291, 292, 293, 294, 295, 296, 644, 1183, 0, 297,
	1190, 298, 1189, 0, 1200, 299, 300, 301, 302, 303,
	304, 1136, 1169, 1101, 305, 1230, 1231, 651, 0, 306,
	307, 1176, 0, 1157, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166,
	1162, 1161, 1165, 333, 334, 335, 336, 337, 1193, 338,
	340, 1187, 1186, 1106, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1178, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1112, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1201, 1202, 370, 1125, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1185, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1212, 378, 379, 380, 1198,
	1199, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1208, 0, 1135, 391, 0, 392, 393, 394,
	395, 396, 1171, 1172, 1175, 481, 1214, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1213, 407, 1180, 1181, 0, 1141,
	0, 409, 410, 1215, 1173, 1216, 411, 412, 413, 1217,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1209, 1218, 425, 426,
	1219, 0, 427, 428, 429, 430, 431, 432, 435, 1164,
	1163, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1220, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1221, 477, 465, 1103,
	279, 1222, 478, 479, 1126, 1174, 480, 1188, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 1223, 491, 1224, 1203, 492, 493,
	1113, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 1204, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1184, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1225, 546, 547, 548, 549, 550, 1114, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 1167, 573,
	574, 556, 557, 575, 576, 1226, 577, 578, 579, 580,
	581, 582, 583, 1182, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 1229, 591, 592, 593, 594,
	1205, 598, 599, 0, 600, 601, 1100, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 1194, 1195, 1196, 1197, 0, 619, 0, 611, 612,
	613, 1206, 614, 1207, 1124, 615, 616, 617, 618, 0,
	620, 621, 0, 1107, 622, 623, 624, 626, 627, 625,
	628, 1168, 629, 0, 0, 630, 631, 632, 690, 1191,
	1228, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1104, 0,
	0, 1551, 0, 1146, 1118, 1119, 1120, 1116, 1117, 1129,
	0, 1099, 0, 0, 0, 0, 0, 0, 1097, 1098,
	280, 282, 281, 283, 284, 285, 286, 1130, 287, 288,
	0, 1128, 0, 0, 0, 1170, 1134, 0, 0, 0,
	289, 290, 1210, 291, 292, 293, 294, 295, 296, 644,
	1183, 0, 297, 1190, 298, 1189, 0, 1200, 299, 300,
	301, 302, 303, 304, 1136, 1169, 1101, 305, 1230, 1231,
	651, 0, 306, 307, 1176, 0, 1157, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1211, 330, 331, 332, 1160,
	1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336,
	337, 1193, 338, 340, 1187, 1186, 1106, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1178, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1112, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1201, 1202, 370, 1125, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1185, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1212, 378,
	379, 380, 1198, 1199, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1208, 0, 1135, 391, 0,
	392, 393, 394, 395, 396, 1550, 1172, 1175, 481, 1214,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1213, 407, 1180,
	1181, 0, 1141, 0, 409, 410, 1215, 1173, 1216, 411,
	412, 413, 1217, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1209,
	1218, 425, 426, 1219, 0, 427, 428, 429, 430, 431,
	432, 435, 1164, 1163, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1220, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1221,
	477, 465, 1103, 279, 1222, 478, 479, 1126, 1174, 480,
	1188, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 1223, 491, 1224,
	1203, 492, 493, 1113, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 1204, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1184, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1225, 546, 547, 548, 549, 550, 1114,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1167, 573, 574, 556, 557, 575, 576, 1226, 577,
	578, 579, 580, 581, 582, 583, 1182, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 1229, 591,
	592, 593, 594, 1205, 598, 599, 0, 600, 601, 1100,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 1194, 1195, 1196, 1197, 0, 619,
	0, 611, 612, 613, 1206, 614, 1207, 1124, 615, 616,
	617, 618, 0, 620, 621, 0, 1107, 622, 623, 624,
	626, 627, 625, 628, 1168, 629, 0, 0, 630, 631,
	632, 690, 1191, 1228, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 1104, 0, 0, 1545, 0, 1146, 1118, 1119, 1120,
	1116, 1117, 1129, 0, 1099, 0, 0, 0, 0, 0,
	0, 1097, 1098, 280, 282, 281, 283, 284, 285, 286,
	1130, 287, 288, 0, 1128, 0, 0, 0, 1170, 1134,
	0, 0, 0, 289, 290, 1210, 291, 292, 293, 294,
	295, 296, 644, 1183, 0, 297, 1190, 298, 1189, 0,
	1200, 299, 300, 301, 302, 303, 304, 1136, 1169, 1101,
	305, 1230, 1231, 651, 0, 306, 307, 1176, 0, 1157,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1211, 330,
	331, 332, 1160, 1158, 1159, 1166, 1162, 1161, 1165, 333,
	334, 335, 336, 337, 1193, 338, 340, 1187, 1186, 1106,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1178, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1112, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1201, 1202, 370,
	1125, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1185, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1212, 378, 379, 380, 1198, 1199, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1208, 0,
	1135, 391, 0, 392, 393, 394, 395, 396, 1544, 1172,
	1175, 481, 1214, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1213, 407, 1180, 1181, 0, 1141, 0, 409, 410, 1215,
	1173, 1216, 411, 412, 413, 1217, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1209, 1218, 425, 426, 1219, 0, 427, 428,
	429, 430, 431, 432, 435, 1164, 1163, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1220, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1221, 477, 465, 1103, 279, 1222, 478, 479,
	1126, 1174, 480, 1188, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	1223, 491, 1224, 1203, 492, 493, 1113, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 1204, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 1184, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1225, 546, 547, 548,
	549, 550, 1114, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1167, 573, 574, 556, 557, 575,
	576, 1226, 577, 578, 579, 580, 581, 582, 583, 1182,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 1229, 591, 592, 593, 594, 1205, 598, 599, 0,
	600, 601, 1100, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 1194, 1195, 1196,
	1197, 0, 619, 0, 611, 612, 613, 1206, 614, 1207,
	1124, 615, 616, 617, 618, 0, 620, 621, 0, 1107,
	622, 623, 624, 626, 627, 625, 628, 1168, 629, 0,
	0, 630, 631, 632, 690, 1191, 1228, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1104, 0, 0, 1538, 0, 1146,
	1118, 1119, 1120, 1116, 1117, 1129, 0, 1099, 0, 0,
	0, 0, 0, 0, 1097, 1098, 280, 282, 281, 283,
	284, 285, 286, 1130, 287, 288, 0, 1128, 0, 0,
	0, 1170, 1134, 0, 0, 0, 289, 290, 1210, 291,
	292, 293, 294, 295, 296, 644, 1183, 0, 297, 1190,
	298, 1189, 0, 1200, 299, 300, 301, 302, 303, 304,
	1136, 1169, 1101, 305, 1230, 1231, 651, 0, 306, 307,
	1176, 0, 1157, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162,
	1161, 1165, 333, 334, 335, 336, 337, 1193, 338, 340,
	1187, 1186, 1106, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1178, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1112,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1201, 1202, 370, 1125, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1185, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1212, 378, 379, 380, 1198, 1199,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1208, 0, 1135, 391, 0, 392, 393, 394, 395,
	396, 1171, 1172, 1175, 481, 1214, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1213, 407, 1180, 1181, 0, 1141, 0,
	409, 410, 1215, 1173, 1216, 411, 412, 413, 1217, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1209, 1218, 425, 426, 1219,
	0, 427, 428, 429, 430, 431, 432, 435, 1164, 1163,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1220,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1221, 477, 465, 1103, 279,
	1222, 478, 479, 1126, 1174, 480, 1188, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 1223, 491, 1224, 1203, 492, 493, 1113,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	1204, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1184, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1225,
	546, 547, 548, 549, 550, 1114, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1167, 573, 574,
	556, 557, 575, 576, 1226, 577, 578, 579, 580, 581,
	582, 583, 1182, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1229, 591, 592, 593, 594, 1205,
	598, 599, 0, 600, 601, 1100, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	1194, 1195, 1196, 1197, 0, 619, 0, 611, 612, 613,
	1206, 614, 1207, 1124, 615, 616, 617, 618, 0, 620,
	621, 0, 1107, 622, 623, 624, 626, 627, 625, 628,
	1168, 629, 0, 0, 630, 631, 632, 690, 1191, 1228,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1104, 0, 0,
	1352, 0, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 0,
	1099, 0, 0, 0, 0, 0, 0, 1097, 1098, 280,
	282, 281, 283, 284, 285, 286, 1130, 287, 288, 0,
	1128, 0, 0, 0, 1170, 1134, 0, 0, 0, 289,
	290, 1210, 291, 292, 293, 294, 295, 296, 644, 1183,
	0, 297, 1190, 298, 1189, 0, 1200, 299, 300, 301,
	302, 303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651,
	0, 306, 307, 1176, 0, 1157, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1211, 330, 331, 332, 1160, 1158,
	1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336, 337,
	1193, 338, 340, 1187, 1186, 1106, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1178, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1112, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1201, 1202, 370, 1125, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1185, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1212, 378, 379,
	380, 1198, 1199, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1208, 0, 1135, 391, 0, 392,
	393, 394, 395, 396, 1171, 1172, 1175, 481, 1214, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1213, 407, 1180, 1181,
	0, 1141, 0, 409, 410, 1215, 1173, 1216, 411, 412,
	413, 1217, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1209, 1218,
	425, 426, 1219, 0, 427, 428, 429, 430, 431, 432,
	435, 1164, 1163, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1220, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1221, 477,
	465, 1103, 279, 1222, 478, 479, 1126, 1174, 480, 1188,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 1223, 491, 1224, 1203,
	492, 493, 1113, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 1204, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1184,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1225, 546, 547, 548, 549, 550, 1114, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1167, 573, 574, 556, 557, 575, 576, 1226, 577, 578,
	579, 580, 581, 582, 583, 1182, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1229, 591, 592,
	593, 594, 1205, 598, 599, 0, 600, 601, 1100, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 1194, 1195, 1196, 1197, 0, 619, 0,
	611, 612, 613, 1206, 614, 1207, 1124, 615, 616, 617,
	618, 0, 620, 621, 0, 1107, 622, 623, 624, 626,
	627, 625, 628, 1168, 629, 0, 0, 630, 631, 632,
	690, 1191, 1228, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1104, 0, 0, 0, 0, 1146, 1118, 1119, 1120, 1116,
	1117, 1129, 0, 1099, 0, 0, 0, 0, 0, 0,
	1097, 1098, 280, 282, 281, 283, 284, 285, 286, 1130,
	287, 288, 0, 1128, 0, 0, 0, 1170, 1134, 0,
	0, 0, 289, 290, 1210, 291, 292, 293, 294, 295,
	296, 644, 1183, 0, 297, 1190, 298, 1189, 0, 1200,
	299, 300, 301, 302, 303, 304, 1136, 1169, 1101, 305,
	1230, 1231, 651, 0, 306, 307, 1176, 0, 1157, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1211, 330, 331,
	332, 1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334,
	335, 336, 337, 1193, 338, 340, 1187, 1186, 1106, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1178, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1112, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1201, 1202, 370, 1125,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1185,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1212, 378, 379, 380, 1198, 1199, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1208, 0, 1135,
	391, 0, 392, 393, 394, 395, 396, 1171, 1172, 1175,
	481, 1214, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1213,
	407, 1180, 1181, 0, 1141, 0, 409, 410, 1215, 1173,
	1216, 411, 412, 413, 1217, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1209, 1218, 425, 426, 1219, 0, 427, 428, 429,
	430, 431, 432, 435, 1164, 1163, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1220, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1221, 477, 465, 1103, 279, 1222, 478, 479, 1126,
	1174, 480, 1188, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 1223,
	491, 1224, 1203, 492, 493, 1113, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 1204, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1184, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1225, 546, 547, 548, 549,
	550, 1114, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1167, 573, 574, 556, 557, 575, 576,
	1226, 577, 578, 579, 580, 581, 582, 583, 1182, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	1229, 591, 592, 593, 594, 1205, 598, 599, 0, 600,
	601, 1100, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 1194, 1195, 1196, 1197,
	0, 619, 0, 611, 612, 613, 1206, 614, 1207, 1124,
	615, 616, 617, 618, 0, 620, 621, 0, 1107, 622,
	623, 624, 626, 627, 625, 628, 1168, 629, 0, 0,
	630, 631, 632, 690, 1191, 1228, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1104, 0, 0, 0, 0, 1146, 1118,
	1119, 1120, 1116, 1117, 1129, 0, 1099, 0, 0, 0,
	0, 0, 0, 1097, 1098, 280, 282, 281, 283, 284,
	285, 286, 1130, 287, 288, 0, 1128, 0, 0, 0,
	1170, 1134, 0, 0, 0, 289, 290, 1210, 291, 292,
	293, 294, 295, 296, 644, 1183, 0, 297, 1190, 298,
	1189, 0, 1200, 299, 300, 301, 302, 303, 304, 1136,
	1169, 1101, 305, 1230, 1231, 651, 0, 306, 307, 1176,
	0, 1157, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1211, 330, 331, 4785, 1160, 1158, 1159, 1166, 1162, 1161,
	1165, 333, 334, 335, 336, 337, 1193, 338, 340, 1187,
	1186, 1106, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1178, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1112, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1201,
	1202, 370, 1125, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1185, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1212, 378, 379, 380, 1198, 1199, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1208, 0, 1135, 391, 0, 392, 393, 394, 395, 396,
	1171, 1172, 1175, 481, 1214, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1213, 407, 1180, 1181, 0, 1141, 0, 409,
	410, 1215, 1173, 1216, 411, 412, 413, 1217, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1209, 1218, 425, 426, 1219, 0,
	427, 428, 429, 430, 431, 432, 435, 1164, 1163, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1220, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1221, 477, 465, 1103, 279, 1222,
	478, 479, 1126, 1174, 480, 1188, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 1223, 491, 1224, 1203, 492, 493, 1113, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 1204,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1184, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1225, 546,
	547, 548, 549, 550, 1114, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1167, 573, 574, 556,
	557, 575, 576, 1226, 577, 578, 579, 580, 581, 582,
	583, 1182, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1229, 591, 592, 593, 594, 1205, 598,
	599, 0, 600, 601, 1100, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 1194,
	1195, 1196, 1197, 0, 619, 0, 611, 612, 613, 1206,
	614, 1207, 1124, 615, 616, 617, 618, 0, 4784, 621,
	0, 1107, 622, 623, 624, 626, 627, 625, 628, 1168,
	629, 0, 0, 630, 631, 632, 690, 1191, 1228, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1104, 0, 0, 0,
	0, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 0, 1099,
	0, 0, 0, 0, 0, 0, 1097, 1098, 280, 282,
	281, 283, 284, 285, 286, 1130, 287, 288, 0, 1128,
	0, 0, 0, 1170, 1134, 0, 0, 0, 289, 290,
	1210, 291, 292, 293, 294, 295, 296, 4783, 1183, 0,
	297, 1190, 298, 1189, 0, 1200, 299, 300, 301, 302,
	303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651, 0,
	306, 307, 1176, 0, 1157, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1211, 330, 331, 4785, 1160, 1158, 1159,
	1166, 1162, 1161, 1165, 333, 334, 335, 336, 337, 1193,
	338, 340, 1187, 1186, 1106, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1178,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1112, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1201, 1202, 370, 1125, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1185, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1212, 378, 379, 380,
	1198, 1199, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1208, 0, 1135, 391, 0, 392, 393,
	394, 395, 396, 1171, 1172, 1175, 481, 1214, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1213, 407, 1180, 1181, 0,
	1141, 0, 409, 410, 1215, 1173, 1216, 411, 412, 413,
	1217, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1209, 1218, 425,
	426, 1219, 0, 427, 428, 429, 430, 431, 432, 435,
	1164, 1163, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1220, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1221, 477, 465,
	1103, 279, 1222, 478, 479, 1126, 1174, 480, 1188, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 1223, 491, 1224, 1203, 492,
	493, 1113, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 1204, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1184, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1225, 546, 547, 548, 549, 550, 1114, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1167,
	573, 574, 556, 557, 575, 576, 1226, 577, 578, 579,
	580, 581, 582, 583, 1182, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1229, 591, 592, 593,
	594, 1205, 598, 599, 0, 600, 601, 1100, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 1194, 1195, 1196, 1197, 0, 619, 0, 611,
	612, 613, 1206, 614, 1207, 1124, 615, 616, 617, 618,
	0, 4784, 621, 0, 1107, 622, 623, 624, 626, 627,
	625, 628, 1168, 629, 0, 0, 630, 631, 632, 690,
	1191, 1228, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1104,
	0, 0, 0, 0, 1146, 1118, 1119, 1120, 1116, 1117,
	1129, 0, 1099, 0, 0, 0, 0, 0, 0, 1097,
	1098, 280, 282, 281, 283, 284, 285, 286, 1130, 287,
	288, 0, 1128, 0, 0, 0, 1170, 1134, 0, 0,
	0, 289, 290, 1210, 291, 292, 293, 294, 295, 296,
	644, 1183, 0, 297, 1190, 298, 1189, 0, 1200, 299,
	300, 301, 302, 303, 304, 1136, 1169, 1101, 305, 1230,
	1231, 651, 0, 306, 307, 1176, 0, 1157, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1211, 330, 4406, 332,
	1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335,
	336, 337, 1193, 338, 340, 1187, 1186, 1106, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1178, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1112, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1201, 1202, 370, 1125, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1185, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1212,
	378, 379, 380, 1198, 1199, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1208, 0, 4407, 391,
	0, 392, 393, 394, 395, 396, 1171, 1172, 1175, 481,
	1214, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1213, 407,
	1180, 1181, 0, 1141, 0, 409, 410, 1215, 1173, 1216,
	411, 412, 413, 1217, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1209, 1218, 425, 426, 1219, 0, 427, 428, 429, 430,
	431, 432, 435, 1164, 1163, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1220, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1221, 477, 465, 1103, 279, 1222, 478, 479, 1126, 1174,
	480, 1188, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 1223, 491,
	1224, 1203, 492, 493, 1113, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 1204, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1184, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1225, 546, 547, 548, 4405, 550,
	1114, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1167, 573, 574, 556, 557, 575, 576, 1226,
	577, 578, 579, 580, 581, 582, 583, 1182, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 1229,
	591, 592, 593, 594, 1205, 598, 599, 0, 600, 601,
	1100, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 1194, 1195, 1196, 1197, 0,
	619, 0, 611, 612, 613, 1206, 614, 1207, 1124, 615,
	616, 617, 618, 0, 620, 621, 0, 1107, 622, 623,
	624, 626, 627, 625, 628, 1168, 629, 0, 0, 630,
	631, 632, 690, 1191, 1228, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1104, 0, 0, 0, 0, 1146, 1118, 1119,
	1120, 3225, 3226, 1129, 0, 1099, 0, 0, 0, 0,
	0, 0, 1097, 1098, 280, 282, 281, 283, 284, 285,
	286, 1130, 287, 288, 0, 1128, 0, 0, 0, 1170,
	1134, 0, 0, 0, 289, 290, 1210, 291, 292, 293,
	294, 295, 296, 644, 1183, 0, 297, 1190, 298, 1189,
	0, 1200, 299, 300, 301, 302, 303, 304, 1136, 1169,
	1101, 305, 1230, 1231, 651, 0, 306, 307, 1176, 0,
	1157, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1211,
	330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161, 1165,
	333, 334, 335, 336, 337, 1193, 338, 340, 1187, 1186,
	1106, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1178, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1112, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1201, 1202,
	370, 1125, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1185, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1212, 378, 379, 380, 1198, 1199, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1208,
	0, 1135, 391, 0, 392, 393, 394, 395, 396, 1171,
	1172, 1175, 481, 1214, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1213, 407, 1180, 1181, 0, 1141, 0, 409, 410,
	1215, 1173, 1216, 411, 412, 413, 1217, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1209, 1218, 425, 426, 1219, 0, 427,
	428, 429, 430, 431, 432, 435, 1164, 1163, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1220, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1221, 477, 465, 1103, 279, 1222, 478,
	479, 1126, 1174, 480, 1188, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 1223, 491, 1224, 1203, 492, 493, 1113, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 1204, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1184, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1225, 546, 547,
	548, 549, 550, 1114, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1167, 573, 574, 556, 557,
	575, 576, 1226, 577, 578, 579, 580, 581, 582, 583,
	1182, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1229, 591, 592, 593, 594, 1205, 598, 599,
	0, 600, 601, 1100, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 1194, 1195,
	1196, 1197, 0, 619, 0, 611, 612, 613, 1206, 614,
	1207, 1124, 615, 616, 617, 618, 0, 620, 621, 0,
	1107, 622, 623, 624, 626, 627, 625, 628, 1168, 629,
	0, 0, 630, 631, 632, 690, 1191, 1228, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1104, 0, 0, 0, 0,
	1146, 1118, 1119, 1120, 3223, 3224, 1129, 0, 1099, 0,
	0, 0, 0, 0, 0, 1097, 1098, 280, 282, 281,
	283, 284, 285, 286, 1130, 287, 288, 0, 1128, 0,
	0, 0, 1170, 1134, 0, 0, 0, 289, 290, 1210,
	291, 292, 293, 294, 295, 296, 644, 1183, 0, 297,
	1190, 298, 1189, 0, 1200, 299, 300, 301, 302, 303,
	304, 1136, 1169, 1101, 305, 1230, 1231, 651, 0, 306,
	307, 1176, 0, 1157, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166,
	1162, 1161, 1165, 333, 334, 335, 336, 337, 1193, 338,
	340, 1187, 1186, 1106, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1178, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1112, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1201, 1202, 370, 1125, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1185, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1212, 378, 379, 380, 1198,
	1199, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1208, 0, 1135, 391, 0, 392, 393, 394,
	395, 396, 1171, 1172, 1175, 481, 1214, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1213, 407, 1180, 1181, 0, 1141,
	0, 409, 410, 1215, 1173, 1216, 411, 412, 413, 1217,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1209, 1218, 425, 426,
	1219, 0, 427, 428, 429, 430, 431, 432, 435, 1164,
	1163, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1220, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1221, 477, 465, 1103,
	279, 1222, 478, 479, 1126, 1174, 480, 1188, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 1223, 491, 1224, 1203, 492, 493,
	1113, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 1204, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1184, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1225, 546, 547, 548, 549, 550, 1114, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 1167, 573,
	574, 556, 557, 575, 576, 1226, 577, 578, 579, 580,
	581, 582, 583, 1182, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 1229, 591, 592, 593, 594,
	1205, 598, 599, 0, 600, 601, 1100, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 1194, 1195, 1196, 1197, 0, 619, 0, 611, 612,
	613, 1206, 614, 1207, 1124, 615, 616, 617, 618, 0,
	620, 621, 0, 1107, 622, 623, 624, 626, 627, 625,
	628, 1168, 629, 0, 0, 630, 631, 632, 690, 1191,
	1228, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1104, 0,
	0, 0, 0, 1146, 1118, 1119, 1120, 1116, 1117, 1129,
	0, 1099, 0, 0, 0, 0, 0, 0, 1097, 1098,
	280, 282, 281, 283, 284, 285, 286, 1130, 287, 288,
	0, 1128, 0, 0, 0, 1170, 1134, 0, 0, 0,
	289, 290, 1210, 291, 292, 293, 294, 295, 296, 644,
	1183, 0, 297, 1190, 298, 1189, 0, 1200, 299, 300,
	301, 302, 303, 304, 1136, 1169, 1101, 305, 1230, 1231,
	651, 0, 306, 307, 1176, 0, 1157, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1211, 330, 331, 332, 1160,
	1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336,
	337, 1193, 338, 340, 1187, 1186, 1106, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1178, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1112, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1201, 1202, 370, 1125, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1185, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1212, 378,
	379, 380, 1198, 1199, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1208, 0, 1135, 391, 0,
	392, 393, 394, 395, 396, 1171, 1172, 1175, 481, 1214,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1213, 407, 1180,
	1181, 0, 1141, 0, 409, 410, 1215, 1173, 1216, 411,
	412, 413, 1217, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1209,
	1218, 425, 426, 1219, 0, 427, 428, 429, 430, 431,
	432, 435, 1164, 1163, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1220, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1221,
	477, 465, 1103, 279, 1222, 478, 479, 1126, 1174, 480,
	1188, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 1223, 491, 1224,
	1203, 492, 493, 1113, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 1204, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1184, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1225, 546, 547, 548, 549, 550, 1114,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1167, 573, 574, 556, 557, 575, 576, 1226, 577,
	578, 579, 580, 581, 582, 583, 1182, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 1229, 591,
	592, 593, 594, 1205, 598, 599, 0, 600, 601, 1100,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 1194, 1195, 1196, 1197, 0, 619,
	0, 611, 612, 613, 1206, 614, 1207, 1124, 615, 616,
	617, 618, 0, 620, 621, 0, 1107, 622, 623, 624,
	626, 627, 625, 628, 1168, 629, 0, 0, 630, 631,
	632, 690, 1191, 1228, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 1104, 0, 0, 0, 0, 1146, 1118, 1119, 1120,
	1116, 1117, 1129, 0, 1099, 0, 0, 0, 0, 0,
	0, 2483, 2484, 280, 282, 281, 283, 284, 285, 286,
	1130, 287, 288, 0, 1128, 0, 0, 0, 1170, 1134,
	0, 0, 0, 289, 290, 1210, 291, 292, 293, 294,
	295, 296, 644, 1183, 0, 297, 1190, 298, 1189, 0,
	1200, 299, 300, 301, 302, 303, 304, 1136, 1169, 0,
	305, 1230, 1231, 651, 0, 306, 307, 1176, 0, 1157,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1211, 330,
	331, 332, 1160, 1158, 1159, 1166, 1162, 1161, 1165, 333,
	334, 335, 336, 337, 1193, 338, 340, 1187, 1186, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1178, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1112, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1201, 1202, 370,
	1125, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1185, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1212, 378, 379, 380, 1198, 1199, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1208, 0,
	1135, 391, 0, 392, 393, 394, 395, 396, 1171, 1172,
	1175, 481, 1214, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1213, 407, 1180, 1181, 0, 1141, 0, 409, 410, 1215,
	1173, 1216, 411, 412, 413, 1217, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1209, 1218, 425, 426, 1219, 0, 427, 428,
	429, 430, 431, 432, 435, 1164, 1163, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1220, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1221, 477, 465, 0, 279, 1222, 478, 479,
	1126, 1174, 480, 1188, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	1223, 491, 1224, 1203, 492, 493, 1113, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 1204, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 1184, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1225, 546, 547, 548,
	549, 550, 1114, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1167, 573, 574, 556, 557, 575,
	576, 1226, 577, 578, 579, 580, 581, 582, 583, 1182,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 1229, 591, 592, 593, 594, 1205, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 1194, 1195, 1196,
	1197, 0, 619, 0, 611, 612, 613, 1206, 614, 1207,
	1124, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 1168, 629, 0,
	0, 630, 631, 632, 690, 1191, 1228, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 1146,
	1118, 1119, 1120, 1116, 1117, 1129, 0, 2742, 0, 0,
	0, 0, 0, 0, 2740, 2741, 280, 282, 281, 283,
	284, 285, 286, 1130, 287, 288, 0, 1128, 0, 0,
	0, 1170, 1134, 0, 0, 0, 289, 290, 1210, 291,
	292, 293, 294, 295, 296, 644, 1183, 0, 297, 1190,
	298, 1189, 0, 1200, 299, 300, 301, 302, 303, 304,
	1136, 1169, 0, 305, 1230, 1231, 651, 0, 306, 307,
	1176, 0, 1157, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162,
	1161, 1165, 333, 334, 335, 336, 337, 1193, 338, 340,
	1187, 1186, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1178, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1112,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1201, 1202, 370, 1125, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1185, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1212, 378, 379, 380, 1198, 1199,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1208, 0, 1135, 391, 0, 392, 393, 394, 395,
	396, 1171, 1172, 1175, 481, 1214, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1213, 407, 1180, 1181, 0, 1141, 0,
	409, 410, 1215, 1173, 1216, 411, 412, 413, 1217, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1209, 1218, 425, 426, 1219,
	0, 427, 428, 429, 430, 431, 432, 435, 1164, 1163,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1220,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1221, 477, 465, 0, 279,
	1222, 478, 479, 1126, 1174, 480, 1188, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 1223, 491, 1224, 1203, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	1204, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1184, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1225,
	546, 547, 548, 549, 550, 3218, 3219, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1167, 573, 574,
	556, 557, 575, 576, 1226, 577, 578, 579, 580, 581,
	582, 583, 1182, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1229, 591, 592, 593, 594, 1205,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	1194, 1195, 1196, 1197, 0, 619, 0, 611, 612, 613,
	1206, 614, 1207, 1124, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	1168, 629, 0, 0, 630, 631, 632, 690, 1191, 1228,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 1146, 1118, 1119, 1120, 1116, 1117, 1129, 0,
	0, 0, 0, 0, 0, 0, 0, 2151, 2152, 280,
	282, 281, 283, 284, 285, 286, 1130, 287, 288, 0,
	1128, 0, 0, 0, 1170, 1134, 0, 0, 0, 289,
	290, 1210, 291, 292, 293, 294, 295, 296, 0, 1183,
	0, 297, 1190, 298, 1189, 0, 1200, 299, 300, 301,
	302, 303, 304, 1136, 1169, 1101, 305, 1230, 1231, 651,
	0, 306, 307, 1176, 0, 1157, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1211, 330, 331, 4785, 1160, 1158,
	1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336, 337,
	1193, 338, 340, 1187, 1186, 1106, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1178, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1112, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1201, 1202, 370, 1125, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1185, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1212, 378, 379,
	380, 1198, 1199, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1208, 0, 1135, 391, 0, 392,
	393, 394, 395, 396, 1171, 1172, 1175, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1213, 407, 1180, 1181,
	0, 1141, 0, 409, 410, 0, 1173, 0, 411, 412,
	413, 1217, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1209, 1218,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 1164, 1163, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1220, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1221, 477,
	465, 1103, 279, 0, 478, 479, 1126, 1174, 480, 1188,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 1223, 491, 1224, 1203,
	492, 493, 1113, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 1204, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1184,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1225, 546, 547, 548, 549, 550, 1114, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1167, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 1182, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1229, 591, 592,
	593, 594, 1205, 598, 599, 0, 600, 601, 1100, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 1194, 1195, 1196, 1197, 0, 619, 0,
	611, 612, 613, 1206, 614, 1207, 1124, 615, 616, 617,
	618, 0, 4784, 621, 0, 1107, 622, 623, 624, 626,
	627, 625, 628, 1168, 629, 0, 0, 630, 631, 632,
	690, 1191, 1228, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 1090, 0, 1268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1097, 1098, 280, 282, 281, 283, 284, 285, 286, 1130,
	287, 288, 0, 1128, 0, 0, 0, 1170, 0, 0,
	0, 0, 289, 290, 1210, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 1169, 0, 305,
	649, 650, 651, 0, 306, 307, 1176, 0, 1157, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1211, 330, 331,
	332, 1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1201, 1202, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1212, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1208, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 1171, 1172, 1175,
	481, 1214, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1213,
	407, 666, 667, 0, 668, 0, 409, 410, 1215, 1173,
	1216, 411, 412, 413, 1217, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 1254, 421, 423, 422, 0,
	424, 1209, 1218, 425, 426, 1219, 0, 427, 428, 429,
	430, 431, 432, 435, 1164, 1163, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1220, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1221, 477, 465, 0, 279, 1222, 478, 479, 0,
	1174, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	1260, 486, 487, 488, 0, 0, 489, 490, 673, 1223,
	491, 1224, 1203, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 1204, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1225, 546, 547, 548, 549,
	550, 680, 1262, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 239, 568, 569, 567,
	570, 571, 572, 1167, 573, 574, 556, 557, 575, 576,
	1226, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 1205, 598, 599, 0, 600,
	601, 0, 597, 588, 241, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 1206, 614, 1207, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 1168, 629, 0, 0,
	630, 631, 632, 1639, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 233, 638, 639, 694,
	640, 641, 642, 1268, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	1258, 0, 1993, 0, 0, 1170, 0, 0, 0, 0,
	289, 290, 1210, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 1169, 0, 305, 649, 650,
	651, 0, 306, 307, 1176, 0, 1157, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1211, 330, 331, 332, 1160,
	1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1201, 1202, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1212, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1208, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 1171, 1172, 1175, 481, 1214,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1213, 407, 666,
	667, 0, 668, 0, 409, 410, 1215, 1173, 1216, 411,
	412, 413, 1217, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 1254, 421, 423, 422, 0, 424, 1209,
	1218, 425, 426, 1219, 0, 427, 428, 429, 430, 431,
	432, 435, 1164, 1163, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1220, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1221,
	477, 465, 0, 279, 1222, 478, 479, 0, 1174, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 1260, 486,
	487, 488, 0, 0, 489, 490, 673, 1223, 491, 1224,
	1203, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 1204, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1225, 546, 547, 548, 549, 550, 680,
	1262, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 239, 568, 569, 567, 570, 571,
	572, 1167, 573, 574, 556, 557, 575, 576, 1226, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 1205, 598, 599, 0, 600, 601, 0,
	597, 588, 241, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 1206, 614, 1207, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 1168, 629, 0, 0, 630, 631,
	632, 1639, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 233, 638, 639, 694, 640, 641,
	642, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 3382, 0, 1268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1258, 0,
	1993, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 1170, 0, 0, 0,
	0, 289, 290, 1210, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 1169, 0, 305, 649,
	650, 651, 0, 306, 307, 1176, 0, 1157, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1211, 330, 331, 332,
	1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1201, 1202, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1212,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1208, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 1171, 1172, 1175, 481,
	1214, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1213, 407,
	666, 667, 0, 668, 0, 409, 410, 1215, 1173, 1216,
	411, 412, 413, 1217, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 1254, 421, 423, 422, 0, 424,
	1209, 1218, 425, 426, 1219, 0, 427, 428, 429, 430,
	431, 432, 435, 1164, 1163, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1220, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1221, 477, 465, 0, 279, 1222, 478, 479, 0, 1174,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 1260,
	486, 487, 488, 0, 0, 489, 490, 673, 1223, 491,
	1224, 1203, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 1204, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1225, 546, 547, 548, 549, 550,
	680, 1262, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1167, 573, 574, 556, 557, 575, 576, 1226,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 1205, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 1206, 614, 1207, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 1168, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 0, 1250, 0, 1268, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 1170, 0, 1258,
	0, 1256, 289, 290, 1210, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 1169, 0, 305,
	649, 650, 651, 0, 306, 307, 1176, 0, 1157, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1211, 330, 331,
	332, 1160, 1158, 1159, 1166, 1162, 1161, 1165, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1201, 1202, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1212, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1208, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 1171, 1172, 1175,
	481, 1214, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1213,
	407, 666, 667, 0, 668, 0, 409, 410, 1215, 1173,
	1216, 411, 412, 413, 1217, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 1254, 421, 423, 422, 0,
	424, 1209, 1218, 425, 426, 1219, 0, 427, 428, 429,
	430, 431, 432, 435, 1164, 1163, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1220, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1221, 477, 465, 0, 279, 1222, 478, 479, 0,
	1174, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	1260, 486, 487, 488, 0, 0, 489, 490, 673, 1223,
	491, 1224, 1203, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 1204, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1225, 546, 547, 548, 549,
	550, 680, 1262, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1167, 573, 574, 556, 557, 575, 576,
	1226, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 1205, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 1206, 614, 1207, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 1168, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 1268, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 1170, 0,
	1258, 0, 1256, 289, 290, 1210, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 1169, 0,
	305, 649, 650, 651, 0, 306, 307, 1176, 0, 1157,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1211, 330,
	331, 332, 1160, 1158, 1159, 1166, 1162, 1161, 1165, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1201, 1202, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1212, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1208, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 1171, 1172,
	1175, 481, 1214, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1213, 407, 666, 667, 0, 668, 0, 409, 410, 1215,
	1173, 1216, 411, 412, 413, 1217, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 1254, 421, 423, 422,
	0, 424, 1209, 1218, 425, 426, 1219, 0, 427, 428,
	429, 430, 431, 432, 435, 1164, 1163, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1220, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1221, 477, 465, 0, 279, 1222, 478, 479,
	0, 1174, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 1260, 486, 487, 488, 0, 0, 489, 490, 673,
	1223, 491, 1224, 1203, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 1204, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1225, 546, 547, 548,
	549, 550, 680, 1262, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1167, 573, 574, 556, 557, 575,
	576, 1226, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 1205, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 1206, 614, 1207,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 1168, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 1268, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 1170,
	0, 1258, 0, 1256, 289, 290, 1210, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 1169,
	0, 305, 649, 650, 651, 0, 306, 307, 1176, 0,
	1157, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1211,
	330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161, 1165,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1201, 1202,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1212, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1208,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 1171,
	1172, 1175, 481, 1214, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1213, 407, 666, 667, 0, 668, 0, 409, 410,
	1215, 1173, 1216, 411, 412, 413, 1217, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1209, 1218, 425, 426, 1219, 0, 427,
	428, 429, 430, 431, 432, 435, 1164, 1163, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1220, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1221, 477, 465, 0, 279, 1222, 478,
	479, 0, 1174, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 1223, 491, 1224, 1203, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 1204, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1225, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1167, 573, 574, 556, 557,
	575, 576, 1226, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 1205, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 1206, 614,
	1207, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 1168, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 1268, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	1170, 0, 0, 0, 4226, 289, 290, 1210, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	1169, 0, 305, 649, 650, 651, 0, 306, 307, 1176,
	0, 1157, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1211, 330, 331, 332, 1160, 1158, 1159, 1166, 1162, 1161,
	1165, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1201,
	1202, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1212, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1208, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	1171, 1172, 1175, 481, 1214, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1213, 407, 666, 667, 0, 668, 0, 409,
	410, 1215, 1173, 1216, 411, 412, 413, 1217, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1209, 1218, 425, 426, 1219, 0,
	427, 428, 429, 430, 431, 432, 435, 1164, 1163, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1220, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1221, 477, 465, 0, 279, 1222,
	478, 479, 0, 1174, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 1223, 491, 1224, 1203, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 1204,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1225, 546,
	547, 548, 549, 550, 680, 1262, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1167, 573, 574, 556,
	557, 575, 576, 1226, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 1205, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 1206,
	614, 1207, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 1168,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 274, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 2587, 2588, 2589, 2606,
	2607, 2608, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 2609, 0, 643, 0,
	0, 0, 0, 289, 290, 1890, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 1875,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 2599, 0,
	316, 317, 318, 315, 319, 0, 320, 2595, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 2600, 2601, 2602, 2603, 371, 372, 373,
	658, 0, 0, 2594, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 2604, 2605,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 2597, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 2598, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 1874, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 1090, 0, 1565, 2584, 2585, 2586, 2610, 2596, 2590,
	0, 2592, 2593, 2591, 2578, 2579, 2580, 2581, 2582, 2583,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 1210, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 1492, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1211, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1212, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 1214,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 1213, 407, 666,
	667, 0, 668, 0, 409, 410, 1215, 669, 1216, 411,
	412, 413, 1217, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	1218, 425, 426, 1219, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1220, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1221,
	477, 465, 0, 0, 1222, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 1223, 491, 1224,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1225, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 239, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 1226, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 241, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 1639, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 233, 638, 639, 694, 640, 641,
	642, 0, 0, 234, 1636, 0, 1565, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	193, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 1210, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 1492,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1211, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1212, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 1214, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	1213, 407, 666, 667, 0, 668, 0, 409, 410, 1215,
	669, 1216, 411, 412, 413, 1217, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 1218, 425, 426, 1219, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1220, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1221, 477, 465, 0, 0, 1222, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	1223, 491, 1224, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1225, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 239, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 1226, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 241, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 1639, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 233, 638, 639,
	694, 640, 641, 642, 1565, 1564, 234, 0, 0, 0,
	1562, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 193, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 1210, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 1492, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1211, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1212,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 481,
	1214, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 1213, 407,
	666, 667, 0, 668, 0, 409, 410, 1215, 669, 1216,
	411, 412, 413, 1217, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 1218, 425, 426, 1219, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1220, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1221, 477, 465, 0, 0, 1222, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 1223, 491,
	1224, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1225, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 1226,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1565, 1564, 0, 0, 0, 0, 1562, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 1663, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 1210, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 1492, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1211, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1212, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 1214, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 1213, 407, 666, 667,
	0, 668, 0, 409, 410, 1215, 669, 1216, 411, 412,
	413, 1217, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 1218,
	425, 426, 1219, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1220, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1221, 477,
	465, 0, 0, 1222, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 1223, 491, 1224, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1225, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 1226, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1565, 1564, 0, 0, 0, 0, 1562, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 3681,
	0, 0, 643, 0, 0, 0, 0, 289, 290, 1210,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	307, 652, 0, 1492, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1211, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1212, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 1214, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 1213, 407, 666, 667, 0, 668,
	0, 409, 410, 1215, 669, 1216, 411, 412, 413, 1217,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 1218, 425, 426,
	1219, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1220, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1221, 477, 465, 0,
	0, 1222, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 1223, 491, 1224, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 2352,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1225, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 1226, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1565, 2260,
	0, 0, 0, 0, 2261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 1663, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 1210, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 1492, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1211, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1212, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 1214, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 1213, 407, 666, 667, 0, 668, 0, 409,
	410, 1215, 669, 1216, 411, 412, 413, 1217, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 2259,
	423, 422, 0, 424, 670, 1218, 425, 426, 1219, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1220, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1221, 477, 465, 0, 0, 1222,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 1223, 491, 1224, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1225, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 1226, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1565, 1564, 0, 0,
	0, 0, 1562, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 1663, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 1210, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 1492,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1211, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1212, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 1214, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	1213, 407, 666, 667, 0, 668, 0, 409, 410, 1215,
	669, 1216, 411, 412, 413, 1217, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 1218, 425, 426, 1219, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1220, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1221, 477, 465, 0, 0, 1222, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	1223, 491, 1224, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1225, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 1226, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 0, 1090, 0, 274, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 1645, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 239, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 241, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 1639, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 274, 0, 0, 233, 638,
	639, 694, 640, 641, 642, 0, 0, 234, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 193, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 279, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 1268, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 1170, 0,
	0, 0, 2007, 289, 290, 1210, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 1169, 0,
	305, 649, 650, 651, 0, 306, 307, 1176, 0, 1157,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1211, 330,
	331, 332, 1160, 1158, 1159, 1166, 1162, 1161, 1165, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1201, 1202, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1212, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1208, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 1171, 1172,
	1175, 481, 1214, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1213, 407, 666, 667, 0, 668, 0, 409, 410, 1215,
	1173, 1216, 411, 412, 413, 1217, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1209, 1218, 425, 426, 1219, 0, 427, 428,
	429, 430, 431, 432, 435, 1164, 1163, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1220, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1221, 477, 465, 0, 279, 1222, 478, 479,
	0, 1174, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	1223, 491, 1224, 1203, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 1204, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1225, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1167, 573, 574, 556, 557, 575,
	576, 1226, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 1205, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 1206, 614, 1207,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 1168, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 274, 3120, 0, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 0, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 274, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 4954, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 0, 409, 410, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 279, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	0, 274, 0, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 3631, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 279, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 0,
	274, 0, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 1633, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	307, 652, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 666, 667, 0, 668,
	0, 409, 410, 0, 669, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 0, 491, 0, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 274, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 3108, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 274, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 3796, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 0, 920, 0, 821, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 2339, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 828, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 918, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 279, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 826, 602, 603, 604,
	605, 606, 827, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 821, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 280, 282, 281, 283, 284,
	285, 286, 2078, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 831, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 828, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 279, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 2077, 563, 564, 565, 566, 0,
	2079, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 826, 602, 603,
	604, 605, 606, 827, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 2076, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 821,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 280, 282, 281, 283,
	284, 285, 286, 2029, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 831, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 828, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 279,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 2028, 563, 564, 565, 566,
	0, 2030, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 826, 602,
	603, 604, 605, 606, 827, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 2027, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 819, 0, 821,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 831,
	0, 643, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 828, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 279,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 826, 602,
	603, 604, 605, 606, 827, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 2051, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 831,
	0, 0, 0, 0, 289, 290, 1210, 291, 292, 293,
	294, 295, 296, 0, 2057, 0, 297, 2047, 298, 2063,
	0, 2070, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 2073, 2074, 0, 0, 306, 307, 0, 0,
	1492, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1211,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 1193, 338, 340, 2061, 2060,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1178, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 0, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 2059, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1212, 378, 379, 380, 2068, 2069, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 0,
	0, 0, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 481, 1214, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 1213, 407, 2054, 2055, 0, 2050, 0, 409, 410,
	1215, 0, 1216, 411, 412, 413, 1217, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 0, 1218, 425, 426, 1219, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1220, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1221, 477, 465, 0, 0, 1222, 478,
	479, 0, 0, 480, 2062, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	0, 1223, 491, 1224, 0, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	2044, 505, 506, 507, 2045, 508, 509, 510, 0, 511,
	0, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 2058, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1225, 546, 547,
	548, 549, 550, 0, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 1226, 577, 578, 579, 580, 581, 582, 583,
	2056, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 2072, 591, 592, 593, 594, 0, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 2064, 2065,
	2066, 2067, 0, 619, 0, 611, 612, 613, 0, 614,
	0, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 0, 2048, 2071, 0, 634,
	633, 635, 0, 636, 637, 0, 0, 0, 0, 638,
	639, 0, 640, 641, 642, 821, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 2038, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 828, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 279, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 826, 602, 603, 604, 605, 606,
	827, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 821, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 831, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 828, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 279, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 2390, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 2391, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 826, 602, 603, 604, 605,
	606, 827, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 2392, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 274, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 831, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 279, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 1565, 1564, 0, 0, 0, 0, 1562, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 831, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	1210, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 1492, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1211, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1212, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 1214, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 1213, 407, 666, 667, 0,
	668, 0, 409, 410, 1215, 669, 1216, 411, 412, 413,
	1217, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 1218, 425,
	426, 1219, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1220, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1221, 477, 465,
	0, 0, 1222, 478, 479, 3992, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 1223, 491, 1224, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1225, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 1226, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1565,
	1564, 0, 0, 0, 0, 1562, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 1210, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 1492, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1211, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1212, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 1214, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 1213, 407, 666, 667, 0, 668, 0,
	409, 410, 1215, 669, 1216, 411, 412, 413, 1217, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 1218, 425, 426, 1219,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1220,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1221, 477, 465, 0, 0,
	1222, 478, 479, 3592, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 1223, 491, 1224, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1225,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 1226, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1693, 0, 1565,
	1564, 0, 0, 0, 0, 1562, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 1210, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 1492, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1211, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 277, 0, 0, 0, 0, 0,
	1692, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1212, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 1214, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 1213, 407, 666, 667, 0, 668, 0,
	409, 410, 1215, 669, 1216, 411, 412, 413, 1217, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 1218, 425, 426, 1219,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1220,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1221, 477, 465, 0, 0,
	1222, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 1223, 491, 1224, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 1691, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1225,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 1690, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 1226, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1558, 0, 1565,
	1564, 0, 0, 0, 0, 1562, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 1210, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 1492, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1211, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1212, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 1560, 664, 665, 481, 1214, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 1213, 407, 666, 667, 0, 668, 0,
	409, 410, 1215, 669, 1216, 411, 412, 413, 1217, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 1218, 425, 426, 1219,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1220,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1221, 477, 465, 0, 0,
	1222, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 1223, 491, 1224, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1225,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 1226, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1565, 1564, 0,
	0, 0, 0, 1562, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 1210, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	1492, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1211,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1212, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 1214, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 1213, 407, 666, 667, 0, 668, 0, 409, 410,
	1215, 669, 1216, 411, 412, 413, 1217, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 1218, 425, 426, 1219, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1220, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1221, 477, 465, 0, 0, 1222, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 1223, 491, 1224, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1225, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 1226, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 1565, 1564, 0, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 1210, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 1492, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1211, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1212, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 1214, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 1213,
	407, 666, 667, 0, 668, 0, 409, 410, 1215, 669,
	1216, 411, 412, 413, 1217, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 1218, 425, 426, 1219, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1220, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1221, 477, 465, 0, 0, 1222, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 1223,
	491, 1224, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1225, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	1226, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 1565, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 1210, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 1492,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1211, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1212, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 1214, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	1213, 407, 666, 667, 0, 668, 0, 409, 410, 1215,
	669, 1216, 411, 412, 413, 1217, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 1218, 425, 426, 1219, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1220, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1221, 477, 465, 0, 0, 1222, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	1223, 491, 1224, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1225, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 1226, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 274, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 2912, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 2909, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 2916, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 3133, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	2915, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 3130, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 3132,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 3129, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 2914, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	3131, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 274, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 2912, 306, 307, 652,
	0, 0, 2906, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 2909, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 2916, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 2915, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	2905, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 2914, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 2913, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 1770, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 1769, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 1768, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 279, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 1771, 555, 562, 563, 564, 565, 566, 0,
	1767, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 1765, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	1766, 633, 635, 693, 636, 637, 1496, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	1498, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 279, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 1260, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 1493, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	1495, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 279, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 1260, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 1399, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	1401, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 279, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 1260, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 726, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 725,
	285, 286, 715, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 718, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 719, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 720,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 714, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 715, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 718, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 719, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 720,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 274,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 280, 282, 281, 283,
	284, 285, 286, 715, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 718, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 719,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 0,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	720, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	274, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 280, 282, 281,
	283, 284, 285, 286, 715, 287, 288, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	307, 652, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 718, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	4003, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 666, 667, 0, 668,
	0, 409, 410, 0, 669, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 0, 491, 0, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 720, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 274, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 279, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 1260, 486, 487, 488,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 274, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 0, 409, 410, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 3540, 477,
	465, 0, 279, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	3078, 0, 274, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 3077, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 0, 409, 410, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 279, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	2359, 0, 274, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 0, 409, 410, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 279, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 274, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 279, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 2295, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 2302, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 2301, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 279, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 2288, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 2290, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 279, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 274, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 2253, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 279, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 1260,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 1611, 0, 274, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 1610, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 279, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 1513, 0, 274, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 279, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 1506, 0, 274, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 1508, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 279, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 1335, 0, 274, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 1334, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 279, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 1325, 0, 274, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 1324, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 279, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 1322, 0, 274, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 1321, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 279, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 1317, 0, 274, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 1316, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 279, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 696, 0, 274, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 279, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 265, 0, 274, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 279, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 274, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 279, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 274, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 718, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 719, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 720, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 274, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 2399, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 279, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 274, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 2397, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 279, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 274,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 2395, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 279,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	274, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	307, 652, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 2308, 664, 665, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 0, 407, 666, 667, 0, 668,
	0, 409, 410, 0, 669, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	279, 0, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 0, 491, 0, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 274, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 2102, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 279, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 274, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 2096, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 0, 409, 410, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 279, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	905, 0, 274, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 904, 409, 410, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 903, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 274, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 3133, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 4303,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1363, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 1366, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	1364, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 786, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 785, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 784,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 1367,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 782, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1363, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 1366, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	1364, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 786, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 785, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 784,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 1367,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 782, 685, 686, 687, 0, 619,
	0, 611, 1365, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 705, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 704, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 703, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 274, 3120, 0, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 0, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 274,
	4313, 0, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 0,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	274, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	307, 652, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 666, 667, 0, 668,
	0, 409, 410, 0, 669, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 0, 491, 0, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 4598, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 274, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 0, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 4199, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 274, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 3958, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 0, 409, 410, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 274, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 2795, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 274, 3120, 0, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 0, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 3117,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 274, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 0, 409, 410, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 2219, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 785, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 784, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 782, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 274, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	280, 282, 281, 283, 284, 285, 286, 2369, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 2357, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1666, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1659, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 776, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 772, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	777, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 786, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 785, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 784,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 1644,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 782, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1617, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 1616, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1601, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 1599, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1594, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1571, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 1569, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1556, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1518, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1501, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1369, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 785, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 784,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 782, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1340, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 1339, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1331, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 1330, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 274, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 280, 282, 281, 283, 284, 285, 286, 1284, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 0, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 274, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 280, 282, 281, 283, 284, 285, 286, 791,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 776, 0, 274, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 772, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 771, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 777, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 786, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 785, 547, 548, 549,
	550, 773, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 784, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 774, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 782, 685, 686, 687,
	0, 619, 0, 611, 778, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 765, 0, 274, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 766, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 728, 0, 274, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 722, 0, 274, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 700, 0, 274, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 274, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 274, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 3651,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 274, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 785,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 784, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 782,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 274,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 3578, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 0,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	274, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	307, 652, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 3556, 664, 665, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 666, 667, 0, 668,
	0, 409, 410, 0, 669, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 0, 491, 0, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 274, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 3553, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 0, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 274, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 3505, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 0, 409, 410, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 274, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 3503, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 274, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 3489, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 0, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 274, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 3088, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 274, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 766, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 274, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 2326, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 0, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 274, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	1302, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 274,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 0,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 1233,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	274, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	307, 652, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 0, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 666, 667, 0, 668,
	0, 409, 410, 0, 669, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 0, 491, 0, 674, 492, 493,
	485, 494, 495, 0, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 0, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 0, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 1607, 0,
	1347, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 0, 0, 0, 297,
	0, 298, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 0, 0, 0, 0, 306,
	307, 0, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 1349, 333, 334, 335, 336, 337, 0, 338,
	340, 0, 0, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	0, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 0, 0, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 0, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 0, 0, 0, 391, 0, 392, 393, 394,
	395, 396, 1606, 0, 0, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 0, 0, 0, 0,
	0, 409, 410, 0, 0, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 0, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 478, 479, 0, 0, 480, 0, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 0, 0, 491, 0, 0, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 0, 508, 509,
	510, 0, 511, 0, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 0, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 0, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 1350, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 0, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 0, 591, 592, 593, 594,
	0, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 0, 0, 0, 0, 0, 619, 0, 611, 612,
	613, 0, 614, 0, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 0, 1521,
	0, 1347, 634, 633, 635, 0, 636, 637, 0, 0,
	0, 0, 638, 639, 0, 640, 641, 642, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 0, 0, 0,
	297, 0, 298, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 0, 0, 0, 0,
	306, 307, 0, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 1349, 333, 334, 335, 336, 337, 0,
	338, 340, 0, 0, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 0, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 0, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 0, 0, 0, 391, 0, 392, 393,
	394, 395, 396, 1520, 0, 0, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 0, 0, 0,
	0, 0, 409, 410, 0, 0, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 0, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 0, 0, 478, 479, 0, 0, 480, 0, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 0, 0, 491, 0, 0, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 0, 508,
	509, 510, 0, 511, 0, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 0, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 0, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1350,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 0, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 0, 591, 592, 593,
	594, 0, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 0, 0, 0, 0, 0, 619, 0, 611,
	612, 613, 0, 614, 0, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 0,
	1345, 0, 1347, 634, 633, 635, 0, 636, 637, 0,
	0, 0, 0, 638, 639, 0, 640, 641, 642, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 0, 0,
	0, 297, 0, 298, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 0, 0, 0,
	0, 306, 307, 0, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 1349, 333, 334, 335, 336, 337,
	0, 338, 340, 0, 0, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 0, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 0, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 0, 0, 0, 391, 0, 392,
	393, 394, 395, 396, 1344, 0, 0, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 0, 0,
	0, 0, 0, 409, 410, 0, 0, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 0, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 478, 479, 0, 0, 480, 0,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 0, 0, 491, 0, 0,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 0,
	508, 509, 510, 0, 511, 0, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 0,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 0, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1350, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 0, 591, 592,
	593, 594, 0, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 0, 0, 0, 0, 0, 619, 0,
	611, 612, 613, 0, 614, 0, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	0, 2116, 0, 1347, 634, 633, 635, 0, 636, 637,
	0, 0, 0, 0, 638, 639, 0, 640, 641, 642,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 0,
	0, 0, 297, 0, 298, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 0, 0,
	0, 0, 306, 307, 0, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 1349, 333, 334, 335, 336,
	337, 0, 338, 340, 0, 0, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 0, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 0, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 0, 0, 0, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 0,
	0, 0, 0, 0, 409, 410, 0, 0, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 0,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 0, 480,
	0, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 0, 0, 491, 0,
	0, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	0, 508, 509, 510, 0, 511, 0, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	0, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 0,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1350, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 0, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 0, 591,
	592, 593, 594, 0, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 0, 0, 0, 0, 0, 619,
	0, 611, 612, 613, 0, 614, 0, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 0, 2083, 0, 1347, 634, 633, 635, 0, 636,
	637, 0, 0, 0, 0, 638, 639, 0, 640, 641,
	642, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	0, 0, 0, 297, 0, 298, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 0,
	0, 0, 0, 306, 307, 0, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 1349, 333, 334, 335,
	336, 337, 0, 338, 340, 0, 0, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 0, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 0, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 0, 0, 0, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	0, 0, 0, 0, 0, 409, 410, 0, 0, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	0, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 0, 0, 478, 479, 0, 0,
	480, 0, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 0, 0, 491,
	0, 0, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 0, 508, 509, 510, 0, 511, 0, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 0, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	0, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1350, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 0, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 0,
	591, 592, 593, 594, 0, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 0, 0, 0, 0, 0,
	619, 0, 611, 612, 613, 0, 614, 0, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 0, 0, 0, 1347, 634, 633, 635, 0,
	636, 637, 0, 0, 0, 0, 638, 639, 0, 640,
	641, 642, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 0, 0, 0, 297, 0, 298, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	0, 0, 0, 0, 306, 307, 0, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 1349, 333, 334,
	335, 336, 337, 0, 338, 340, 0, 0, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 0, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 0,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 0, 0, 0,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 0, 0, 0, 0, 0, 409, 410, 0, 0,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 0, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	0, 480, 0, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 0, 0,
	491, 0, 0, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 0, 508, 509, 510, 0, 511, 0, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 0, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 0, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1350, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 0, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	0, 591, 592, 593, 594, 0, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 0, 0, 0, 0,
	0, 619, 0, 611, 612, 613, 0, 614, 0, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 0, 0, 0, 0, 634, 633, 635,
	0, 636, 637, 0, 0, 0, 0, 638, 639, 0,
	640, 641, 642, 1819, 1820, 0, 1852, 1853, 1854, 1863,
	1864, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1856, 1850, 0, 0, 0,
	0, 0, 0, 1822, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 0, 1819, 1820, 0, 1852, 1853, 1854,
	1863, 1864, 1865, 0, 0, 0, 0, 0, 0, 1875,
	0, 0, 0, 0, 0, 0, 1856, 1850, 1821, 0,
	0, 0, 0, 0, 1822, 0, 0, 0, 1841, 0,
	0, 0, 0, 1869, 0, 0, 0, 1838, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1875, 0, 0, 0, 0, 0, 0, 0, 0, 1821,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	0, 0, 0, 0, 0, 0, 0, 0, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1844, 1845, 1846, 1847, 0, 0, 0,
	0, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1844, 1845, 1846, 1847, 0, 0,
	0, 0, 1860, 0, 1827, 1870, 0, 0, 0, 0,
	0, 0, 1849, 1851, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	0, 1867, 0, 0, 0, 0, 0, 0, 1836, 1837,
	0, 0, 0, 1860, 0, 0, 1870, 0, 0, 0,
	0, 0, 0, 1849, 1851, 0, 1858, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 1842, 1867, 0, 0, 0, 0, 0, 0, 1836,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1842, 0, 0, 0, 0, 1868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1872, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1857, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1872, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 1820, 1843, 1852, 1853, 1854, 1863, 1864,
	1865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 1856, 1850, 0, 0, 0, 0,
	0, 1861, 1822, 0, 0, 0, 0, 0, 0, 0,
	0, 1869, 0, 1819, 1820, 1843, 1852, 1853, 1854, 1863,
	1864, 1865, 0, 0, 0, 0, 0, 0, 1875, 0,
	0, 0, 1874, 0, 0, 1856, 1850, 1821, 0, 0,
	0, 0, 1861, 1822, 0, 0, 0, 1841, 0, 0,
	0, 0, 1869, 0, 0, 0, 1838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1875,
	0, 0, 0, 1874, 0, 0, 0, 0, 1821, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 0, 0,
	0, 0, 0, 0, 1859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 1834, 1840, 1862, 1839, 1835,
	0, 1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829,
	0, 0, 1844, 1845, 1846, 1847, 0, 0, 3303, 0,
	0, 0, 1827, 0, 0, 1859, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 1834, 1840, 1862, 1839,
	1835, 0, 1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828,
	1829, 0, 0, 1844, 1845, 1846, 1847, 0, 0, 3302,
	0, 1860, 0, 1827, 1870, 0, 0, 0, 0, 0,
	0, 1849, 1851, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 0,
	1867, 0, 0, 0, 0, 0, 0, 1836, 1837, 0,
	0, 0, 1860, 0, 0, 1870, 0, 0, 0, 0,
	0, 0, 1849, 1851, 0, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	1842, 1867, 0, 0, 0, 0, 0, 0, 1836, 1837,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1858, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1842, 0, 0, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1857, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1872, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1872, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 1820, 1843, 1852, 1853, 1854, 1863, 1864, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 1856, 1850, 0, 0, 0, 0, 0,
	1861, 1822, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 1843, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 1874, 0, 0, 0, 0, 1821, 0, 0, 0,
	0, 1861, 0, 0, 0, 0, 1841, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1874, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 1834, 1840, 1862, 1839, 1835, 0,
	1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829, 0,
	0, 1844, 1845, 1846, 1847, 0, 0, 2621, 0, 0,
	0, 1827, 0, 0, 1859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 1834, 1840, 1862, 1839, 1835,
	0, 1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829,
	0, 0, 0, 0, 4712, 0, 0, 0, 0, 0,
	1860, 1819, 1820, 1870, 1852, 1853, 1854, 1863, 1864, 1865,
	1849, 1851, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1856, 1850, 0, 0, 1866, 0, 1867,
	0, 1822, 0, 0, 0, 0, 1836, 1837, 0, 0,
	1869, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1858, 0, 0, 1875, 0, 0,
	0, 0, 0, 0, 0, 0, 1821, 0, 0, 1842,
	0, 0, 0, 0, 0, 0, 1841, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1844, 1845, 1846, 1847, 0, 0, 0, 0, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 1820, 0, 1852, 1853,
	1854, 1863, 1864, 1865, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 1856, 1850, 0,
	1860, 0, 0, 1870, 0, 1822, 0, 0, 0, 0,
	1849, 1851, 1843, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 0, 1867,
	0, 1875, 0, 0, 0, 0, 1836, 1837, 0, 1861,
	1821, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1841, 0, 0, 0, 1858, 0, 0, 0, 0, 1838,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1842,
	1874, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 0, 1844, 1845, 1846, 1847, 0,
	0, 0, 1859, 0, 1872, 1827, 0, 0, 0, 0,
	0, 0, 1833, 1834, 1840, 1862, 1839, 1835, 0, 1832,
	1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829, 0, 0,
	0, 0, 4708, 0, 0, 1819, 1820, 0, 1852, 1853,
	1854, 1863, 1864, 1865, 1860, 0, 0, 1870, 0, 0,
	0, 0, 0, 0, 1849, 1851, 0, 1856, 1850, 1848,
	0, 0, 0, 0, 0, 1822, 0, 0, 0, 0,
	0, 1866, 0, 1867, 1869, 0, 0, 0, 0, 0,
	1836, 1837, 1843, 0, 0, 0, 0, 0, 0, 0,
	0, 1875, 0, 0, 0, 0, 0, 0, 1858, 0,
	1821, 0, 0, 0, 0, 0, 0, 0, 0, 1861,
	1841, 0, 0, 1842, 0, 0, 0, 0, 0, 1838,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1874, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1868,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1872, 0,
	0, 0, 0, 0, 0, 1844, 1845, 1846, 1847, 0,
	0, 0, 0, 0, 0, 1827, 0, 0, 0, 0,
	0, 0, 1859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1833, 1834, 1840, 1862, 1839, 1835, 0, 1832,
	1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829, 0, 0,
	0, 0, 4623, 1848, 1860, 0, 0, 1870, 0, 0,
	0, 0, 0, 0, 1849, 1851, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 0, 0, 0,
	0, 1866, 0, 1867, 0, 0, 0, 0, 0, 0,
	1836, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1861, 0, 0, 0, 0, 1858, 1819,
	1820, 0, 1852, 1853, 1854, 1863, 1864, 1865, 0, 0,
	0, 0, 0, 1842, 0, 0, 0, 0, 0, 0,
	0, 1856, 1850, 0, 1874, 0, 0, 0, 0, 1822,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 1868,
	0, 0, 0, 0, 1821, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1841, 0, 0, 1857, 0, 0,
	0, 0, 0, 1838, 0, 0, 0, 0, 1872, 0,
	0, 0, 0, 0, 0, 0, 1859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1833, 1834, 1840, 1862,
	1839, 1835, 0, 1832, 1830, 1831, 1823, 1824, 1825, 1826,
	1828, 1829, 0, 0, 0, 0, 4581, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1844,
	1845, 1846, 1847, 0, 0, 0, 1843, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 1820, 0, 1852, 1853, 1854, 1863,
	1864, 1865, 0, 1861, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1856, 1850, 0, 1860, 0,
	0, 1870, 0, 1822, 0, 0, 0, 0, 1849, 1851,
	0, 0, 1869, 0, 1874, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 0, 1867, 0, 1875,
	0, 0, 0, 0, 1836, 1837, 0, 0, 1821, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 0,
	0, 0, 1858, 0, 0, 0, 0, 1838, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1833, 1834, 1840, 1862,
	1839, 1835, 0, 1832, 1830, 1831, 1823, 1824, 1825, 1826,
	1828, 1829, 0, 1868, 0, 0, 4580, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1857, 0, 1844, 1845, 1846, 1847, 0, 0, 0,
	0, 0, 1872, 1827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 1820, 0, 1852, 1853, 1854, 1863,
	1864, 1865, 1860, 0, 0, 1870, 0, 0, 0, 0,
	0, 0, 1849, 1851, 0, 1856, 1850, 1848, 0, 0,
	0, 0, 0, 1822, 0, 0, 0, 0, 0, 1866,
	0, 1867, 1869, 0, 0, 0, 0, 0, 1836, 1837,
	1843, 0, 0, 0, 0, 0, 0, 0, 0, 1875,
	0, 0, 0, 0, 0, 0, 1858, 0, 1821, 0,
	0, 0, 0, 0, 0, 0, 0, 1861, 1841, 0,
	0, 1842, 0, 0, 0, 0, 0, 1838, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1874, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1872, 0, 0, 0,
	0, 0, 0, 1844, 1845, 1846, 1847, 0, 0, 0,
	0, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	1859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 1834, 1840, 1862, 1839, 1835, 0, 1832, 1830, 1831,
	1823, 1824, 1825, 1826, 1828, 1829, 0, 0, 0, 0,
	4390, 1848, 1860, 0, 0, 1870, 0, 0, 0, 0,
	0, 0, 1849, 1851, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 0, 0, 0, 0, 1866,
	0, 1867, 0, 0, 0, 0, 0, 0, 1836, 1837,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1861, 0, 0, 0, 0, 1858, 1819, 1820, 0,
	1852, 1853, 1854, 1863, 1864, 1865, 0, 0, 0, 0,
	0, 1842, 0, 0, 0, 0, 0, 0, 0, 1856,
	1850, 0, 1874, 0, 0, 0, 0, 1822, 0, 0,
	0, 0, 0, 0, 0, 0, 1869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1875, 0, 0, 0, 1868, 0, 0,
	0, 0, 1821, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1841, 0, 0, 1857, 0, 0, 0, 0,
	0, 1838, 0, 0, 0, 0, 1872, 0, 0, 0,
	0, 0, 0, 0, 1859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 1834, 1840, 1862, 1839, 1835,
	0, 1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829,
	0, 0, 0, 0, 4222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1844, 1845, 1846,
	1847, 0, 0, 0, 1843, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 1820, 0, 1852, 1853, 1854, 1863, 1864, 1865,
	0, 1861, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1856, 1850, 0, 1860, 0, 0, 1870,
	0, 1822, 0, 0, 0, 0, 1849, 1851, 0, 0,
	1869, 0, 1874, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 0, 1867, 0, 1875, 0, 0,
	0, 0, 1836, 1837, 0, 0, 1821, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1841, 0, 0, 0,
	1858, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1842, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 1834, 1840, 1862, 1839, 1835,
	0, 1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829,
	0, 1868, 0, 0, 4149, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1857,
	0, 1844, 1845, 1846, 1847, 0, 0, 0, 0, 0,
	1872, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 1820, 0, 1852, 1853, 1854, 1863, 1864, 1865,
	1860, 0, 0, 1870, 0, 0, 0, 0, 0, 0,
	1849, 1851, 0, 1856, 1850, 1848, 0, 0, 0, 0,
	0, 1822, 0, 0, 0, 0, 0, 1866, 0, 1867,
	1869, 0, 0, 0, 0, 0, 1836, 1837, 1843, 0,
	0, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 0, 0, 0, 1858, 0, 1821, 0, 0, 0,
	0, 0, 0, 0, 0, 1861, 1841, 0, 0, 1842,
	0, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1874, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1872, 0, 0, 0, 0, 0,
	0, 1844, 1845, 1846, 1847, 0, 0, 0, 0, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1833, 1834,
	1840, 1862, 1839, 1835, 0, 1832, 1830, 1831, 1823, 1824,
	1825, 1826, 1828, 1829, 0, 0, 0, 0, 4148, 1848,
	1860, 0, 0, 1870, 0, 0, 0, 0, 0, 0,
	1849, 1851, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 0, 0, 0, 0, 1866, 0, 1867,
	0, 0, 0, 0, 0, 0, 1836, 1837, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1861,
	0, 0, 0, 0, 1858, 1819, 1820, 0, 1852, 1853,
	1854, 1863, 1864, 1865, 0, 0, 0, 0, 0, 1842,
	0, 0, 0, 0, 0, 0, 0, 1856, 1850, 0,
	1874, 0, 0, 0, 0, 1822, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1875, 0, 0, 0, 1868, 0, 0, 0, 0,
	1821, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1841, 0, 0, 1857, 0, 0, 0, 0, 0, 1838,
	0, 0, 0, 0, 1872, 0, 0, 0, 0, 0,
	0, 0, 1859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1833, 1834, 1840, 1862, 1839, 1835, 0, 1832,
	1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829, 0, 0,
	0, 0, 4147, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1844, 1845, 1846, 1847, 0,
	0, 0, 1843, 0, 0, 1827, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1819,
	1820, 0, 1852, 1853, 1854, 1863, 1864, 1865, 0, 1861,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1856, 1850, 0, 1860, 0, 0, 1870, 0, 1822,
	0, 0, 0, 0, 1849, 1851, 0, 0, 1869, 0,
	1874, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 1867, 0, 1875, 0, 0, 0, 0,
	1836, 1837, 0, 0, 1821, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1841, 0, 0, 0, 1858, 0,
	0, 0, 0, 1838, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1842, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1833, 1834, 1840, 1862, 1839, 1835, 0, 1832,
	1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829, 0, 1868,
	0, 0, 3801, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 0, 1844,
	1845, 1846, 1847, 0, 0, 0, 0, 0, 1872, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1819,
	1820, 0, 1852, 1853, 1854, 1863, 1864, 1865, 1860, 0,
	0, 1870, 0, 0, 0, 0, 0, 0, 1849, 1851,
	0, 1856, 1850, 1848, 0, 0, 0, 0, 0, 1822,
	0, 0, 0, 0, 0, 1866, 0, 1867, 1869, 0,
	0, 0, 0, 0, 1836, 1837, 1843, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 0,
	0, 0, 1858, 0, 1821, 0, 0, 0, 0, 0,
	0, 0, 0, 1861, 1841, 0, 0, 1842, 0, 0,
	0, 0, 0, 1838, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1874, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1868, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1857, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1872, 0, 0, 0, 0, 0, 0, 1844,
	1845, 1846, 1847, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 1859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1833, 1834, 1840, 1862,
	1839, 1835, 0, 1832, 1830, 1831, 1823, 1824, 1825, 1826,
	1828, 1829, 0, 0, 0, 0, 3300, 1848, 1860, 0,
	0, 1870, 0, 0, 0, 0, 0, 0, 1849, 1851,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 0, 0, 0, 0, 1866, 0, 1867, 0, 0,
	0, 0, 0, 0, 1836, 1837, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1861, 0, 0,
	0, 0, 1858, 1819, 1820, 0, 1852, 1853, 1854, 1863,
	1864, 1865, 0, 0, 0, 0, 0, 1842, 0, 0,
	0, 0, 0, 0, 0, 1856, 1850, 0, 1874, 0,
	0, 0, 0, 1822, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1875,
	0, 0, 0, 1868, 0, 0, 0, 0, 1821, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 0,
	0, 1857, 0, 0, 0, 0, 0, 1838, 0, 0,
	0, 0, 1872, 0, 0, 0, 0, 0, 0, 0,
	1859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 1834, 1840, 1862, 1839, 1835, 0, 1832, 1830, 1831,
	1823, 1824, 1825, 1826, 1828, 1829, 0, 0, 0, 0,
	3299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1844, 1845, 1846, 1847, 0, 0, 0,
	1843, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1819, 1820, 0,
	1852, 1853, 1854, 1863, 1864, 1865, 0, 1861, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1856,
	1850, 0, 1860, 0, 0, 1870, 0, 1822, 0, 0,
	0, 0, 1849, 1851, 0, 0, 1869, 0, 1874, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	0, 1867, 0, 1875, 0, 0, 0, 0, 1836, 1837,
	0, 0, 1821, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1841, 0, 0, 0, 1858, 0, 0, 0,
	0, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1842, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 1834, 1840, 1862, 1839, 1835, 0, 1832, 1830, 1831,
	1823, 1824, 1825, 1826, 1828, 1829, 0, 1868, 0, 0,
	3298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 1844, 1845, 1846,
	1847, 0, 0, 0, 0, 0, 1872, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1860, 0, 0, 1870,
	0, 0, 0, 0, 0, 0, 1849, 1851, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 0, 1867, 0, 0, 0, 0,
	0, 0, 1836, 1837, 1843, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1858, 1819, 1820, 0, 1852, 1853, 1854, 1863, 1864, 1865,
	0, 1861, 0, 0, 0, 1842, 0, 0, 0, 0,
	0, 0, 0, 1856, 1850, 0, 0, 0, 0, 0,
	0, 1822, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 1874, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 1868, 0, 0, 0, 0, 1821, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1841, 0, 0, 1857,
	0, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	1872, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 1834, 1840, 1862, 1839, 1835,
	0, 1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829,
	0, 0, 0, 0, 3297, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1844, 1845, 1846, 1847, 0, 0, 0, 1843, 0,
	0, 1827, 4861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 1820, 0, 1852, 1853,
	1854, 1863, 1864, 1865, 0, 1861, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1856, 1850, 0,
	1860, 0, 0, 1870, 0, 1822, 0, 0, 0, 0,
	1849, 1851, 0, 0, 1869, 0, 1874, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 0, 1867,
	0, 1875, 0, 0, 0, 0, 1836, 1837, 0, 0,
	1821, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1841, 0, 0, 0, 1858, 0, 0, 0, 0, 1838,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1842,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1833, 1834,
	1840, 1862, 1839, 1835, 0, 1832, 1830, 1831, 1823, 1824,
	1825, 1826, 1828, 1829, 0, 1868, 3262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 0, 1844, 1845, 1846, 1847, 0,
	0, 0, 0, 0, 1872, 1827, 0, 3362, 0, 0,
	0, 0, 3361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4860, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1860, 0, 0, 1870, 0, 0,
	0, 0, 0, 0, 1849, 1851, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 1867, 0, 0, 0, 0, 0, 0,
	1836, 1837, 1843, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1861,
	0, 0, 0, 1842, 1819, 1820, 0, 1852, 1853, 1854,
	1863, 1864, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1856, 1850, 0, 0,
	1874, 0, 3233, 0, 1822, 0, 0, 0, 0, 0,
	0, 0, 0, 1869, 0, 0, 0, 0, 0, 1868,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1875, 0, 0, 0, 0, 0, 0, 1857, 0, 1821,
	0, 0, 0, 0, 0, 0, 0, 0, 1872, 1841,
	0, 0, 0, 0, 0, 0, 0, 0, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1833, 1834, 1840, 1862, 1839, 1835, 0, 1832,
	1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829, 3234, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 0, 0, 0,
	0, 0, 0, 0, 1844, 1845, 1846, 1847, 0, 0,
	0, 0, 0, 0, 1827, 0, 0, 0, 0, 0,
	0, 2768, 0, 1861, 0, 0, 0, 0, 1819, 1820,
	0, 1852, 1853, 1854, 1863, 1864, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1856, 1850, 0, 1860, 1874, 2767, 1870, 0, 1822, 0,
	0, 0, 0, 1849, 1851, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 1867, 0, 1875, 0, 0, 0, 0, 1836,
	1837, 0, 0, 1821, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1841, 0, 0, 0, 1858, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1842, 0, 0, 0, 1859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1833, 1834, 1840, 1862,
	1839, 1835, 0, 1832, 1830, 1831, 1823, 1824, 1825, 1826,
	1828, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1857, 0, 1844, 1845,
	1846, 1847, 0, 0, 0, 0, 0, 1872, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 1820,
	0, 1852, 1853, 1854, 1863, 1864, 1865, 1860, 0, 0,
	1870, 0, 0, 0, 0, 0, 0, 1849, 1851, 0,
	1856, 1850, 1848, 0, 0, 0, 0, 0, 1822, 0,
	0, 0, 0, 0, 1866, 0, 1867, 1869, 0, 0,
	0, 0, 0, 1836, 1837, 1843, 0, 0, 0, 0,
	0, 0, 0, 0, 1875, 0, 0, 0, 0, 0,
	0, 1858, 0, 1821, 0, 0, 0, 0, 0, 0,
	0, 0, 1861, 1841, 0, 0, 1842, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1874, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1857, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1872, 0, 0, 0, 0, 0, 0, 1844, 1845,
	1846, 1847, 0, 0, 0, 0, 0, 0, 1827, 0,
	0, 0, 0, 0, 0, 1859, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 1834, 1840, 1862, 1839,
	1835, 0, 1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828,
	1829, 0, 0, 0, 0, 0, 1848, 1860, 0, 0,
	1870, 0, 0, 0, 0, 0, 0, 1849, 1851, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	0, 0, 0, 0, 1866, 0, 1867, 0, 0, 0,
	0, 0, 0, 1836, 1837, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1861, 0, 0, 0,
	0, 1858, 1819, 1820, 0, 1852, 1853, 1854, 1863, 1864,
	1865, 0, 0, 0, 0, 0, 1842, 0, 0, 0,
	0, 0, 0, 0, 1856, 1850, 0, 1874, 0, 0,
	0, 0, 1822, 0, 0, 0, 0, 0, 0, 0,
	0, 1869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1875, 0,
	0, 0, 1868, 0, 0, 0, 0, 1821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 0, 0,
	1857, 1087, 0, 0, 0, 0, 1838, 0, 0, 0,
	0, 1872, 0, 0, 0, 0, 0, 0, 0, 1859,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1833,
	1834, 1840, 1862, 1839, 1835, 0, 1832, 1830, 1831, 1823,
	1824, 1825, 1826, 1828, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1844, 1845, 1846, 1847, 0, 0, 0, 1843,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1819, 1820, 0, 1852,
	1853, 1854, 1863, 1864, 1865, 0, 1861, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1856, 1850,
	0, 1860, 0, 0, 1870, 0, 1822, 0, 0, 0,
	0, 1849, 1851, 0, 0, 1869, 0, 1874, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 0,
	1867, 0, 1875, 0, 0, 0, 0, 1836, 1837, 0,
	0, 1821, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1841, 0, 0, 0, 1858, 0, 0, 0, 0,
	1838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1842, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1859,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1833,
	1834, 1840, 1862, 1839, 1835, 0, 1832, 1830, 1831, 1823,
	1824, 1825, 1826, 1828, 1829, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1857, 0, 1844, 1845, 1846, 1847,
	0, 0, 0, 0, 0, 1872, 1827, 0, 0, 0,
	0, 0, 0, 3368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1819, 1820, 0, 1852,
	1853, 1854, 1863, 1864, 1865, 1860, 0, 0, 1870, 0,
	0, 0, 0, 0, 0, 1849, 1851, 0, 1856, 1850,
	1848, 0, 0, 3363, 0, 0, 1822, 0, 0, 0,
	0, 0, 1866, 0, 1867, 1869, 0, 0, 0, 0,
	0, 1836, 1837, 1843, 0, 0, 0, 0, 0, 0,
	0, 0, 1875, 0, 0, 0, 0, 0, 0, 1858,
	0, 1821, 0, 0, 0, 0, 0, 0, 0, 0,
	1861, 1841, 0, 0, 1842, 0, 0, 0, 0, 0,
	1838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1874, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3782, 0, 0, 0, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1857, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1872,
	0, 0, 0, 0, 0, 0, 1844, 1845, 1846, 1847,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 1859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 1834, 1840, 1862, 1839, 1835, 0,
	1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829, 0,
	0, 0, 0, 0, 1848, 1860, 0, 0, 1870, 0,
	0, 0, 0, 0, 0, 1849, 1851, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 0, 0,
	0, 0, 1866, 0, 1867, 0, 0, 0, 0, 0,
	0, 1836, 1837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1861, 0, 0, 0, 0, 1858,
	1819, 1820, 0, 1852, 1853, 1854, 1863, 1864, 1865, 0,
	0, 0, 0, 0, 1842, 0, 0, 0, 0, 0,
	0, 0, 1856, 1850, 0, 1874, 0, 0, 0, 0,
	1822, 0, 0, 0, 0, 0, 0, 0, 0, 1869,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1875, 0, 0, 0,
	1868, 0, 0, 0, 0, 1821, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1841, 0, 0, 1857, 0,
	0, 0, 0, 0, 1838, 0, 0, 0, 0, 1872,
	0, 0, 0, 0, 0, 0, 0, 1859, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 1834, 1840,
	1862, 1839, 1835, 0, 1832, 1830, 1831, 1823, 1824, 1825,
	1826, 1828, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1844, 1845, 1846, 1847, 0, 0, 0, 1843, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1819, 1820, 0, 1852, 1853, 1854,
	1863, 1864, 1865, 0, 1861, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1856, 1850, 0, 1860,
	0, 3301, 1870, 0, 1822, 0, 0, 0, 0, 1849,
	1851, 0, 0, 1869, 0, 1874, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 0, 1867, 0,
	1875, 0, 0, 0, 0, 1836, 1837, 0, 0, 1821,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	0, 0, 0, 1858, 0, 0, 0, 0, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1859, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 1834, 1840,
	1862, 1839, 1835, 0, 1832, 1830, 1831, 1823, 1824, 1825,
	1826, 1828, 1829, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1857, 0, 1844, 1845, 1846, 1847, 0, 0,
	0, 0, 0, 1872, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 3328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1819, 1820, 0, 1852, 1853, 1854,
	1863, 1864, 1865, 1860, 0, 0, 1870, 0, 0, 0,
	0, 0, 0, 1849, 1851, 0, 1856, 1850, 1848, 0,
	0, 0, 0, 0, 1822, 0, 0, 0, 0, 0,
	1866, 0, 1867, 1869, 0, 0, 0, 0, 0, 1836,
	1837, 1843, 0, 0, 0, 0, 0, 0, 0, 0,
	1875, 0, 0, 0, 0, 0, 0, 1858, 0, 1821,
	0, 0, 0, 0, 0, 0, 0, 0, 1861, 1841,
	0, 0, 1842, 0, 0, 0, 0, 0, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1874,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1857, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1872, 0, 0,
	0, 0, 0, 0, 1844, 1845, 1846, 1847, 0, 0,
	0, 0, 0, 0, 1827, 0, 0, 0, 0, 0,
	0, 1859, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 1834, 1840, 1862, 1839, 1835, 0, 1832, 1830,
	1831, 1823, 1824, 1825, 1826, 1828, 1829, 0, 0, 0,
	0, 0, 1848, 1860, 0, 0, 1870, 0, 0, 0,
	0, 0, 0, 1849, 1851, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 0, 0, 0, 0,
	1866, 0, 1867, 0, 0, 0, 0, 0, 0, 1836,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1861, 0, 0, 0, 0, 1858, 1819, 1820,
	0, 1852, 1853, 1854, 1863, 1864, 1865, 0, 0, 0,
	0, 0, 1842, 0, 0, 0, 0, 0, 0, 0,
	1856, 1850, 0, 1874, 0, 0, 0, 0, 1822, 0,
	0, 0, 0, 0, 0, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1875, 0, 0, 0, 1868, 0,
	0, 0, 0, 1821, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1841, 0, 0, 1857, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 1872, 0, 0,
	0, 0, 0, 0, 0, 1859, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 1834, 1840, 1862, 1839,
	1835, 0, 1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1844, 1845,
	1846, 1847, 0, 0, 0, 1843, 0, 0, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 1820, 0, 1852, 1853, 1854, 1863, 1864,
	1865, 0, 1861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1850, 0, 1860, 0, 0,
	1870, 0, 1822, 0, 0, 0, 0, 1849, 1851, 0,
	0, 1869, 0, 1874, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 1867, 0, 1875, 0,
	0, 0, 0, 1836, 1837, 0, 0, 1821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 0, 0,
	0, 1858, 0, 0, 0, 0, 1838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1842, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2341, 0,
	0, 0, 0, 0, 0, 1859, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 1834, 1840, 1862, 1839,
	1835, 0, 1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828,
	1829, 0, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1857, 0, 1844, 1845, 1846, 1847, 0, 0, 0, 0,
	0, 1872, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1860, 0, 0, 1870, 0, 0, 0, 0, 0,
	0, 1849, 1851, 0, 0, 0, 1848, 0, 970, 0,
	1019, 0, 0, 0, 0, 0, 0, 0, 1866, 0,
	1867, 0, 0, 0, 0, 0, 0, 1836, 1837, 1843,
	0, 0, 0, 0, 978, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1858, 0, 0, 0, 0,
	993, 0, 976, 975, 0, 0, 1861, 0, 0, 0,
	1842, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 995, 0, 0, 0, 0, 0,
	977, 0, 0, 0, 0, 980, 0, 1874, 0, 0,
	1030, 0, 0, 0, 0, 0, 0, 0, 0, 990,
	991, 0, 0, 0, 0, 0, 1868, 0, 1008, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1020, 982, 0, 0,
	0, 0, 0, 983, 0, 1872, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 984, 0, 0, 0, 1859,
	0, 0, 0, 0, 1017, 0, 0, 0, 0, 1833,
	1834, 1840, 1862, 1839, 1835, 0, 1832, 1830, 1831, 1823,
	1824, 1825, 1826, 1828, 1829, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 1018, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 986, 0, 1843, 0, 0, 0, 0, 0, 974,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 987, 988,
	1861, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 996, 994, 0,
	0, 0, 0, 0, 0, 989, 0, 0, 0, 1005,
	0, 1874, 1025, 1024, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1027, 1016, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1021,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 1834, 1840, 1862, 1839, 1835, 0,
	1832, 1830, 1831, 1823, 1824, 1825, 1826, 1828, 1829, 0,
	0, 0, 0, 0, 981, 0, 0, 1029, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	979, 0, 0, 0, 1012, 1013, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1015, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1022, 1010, 0, 0, 0, 0, 0, 0, 0,
	1028, 1006, 0, 0, 999, 997, 0, 1002, 0, 0,
	0, 0, 0, 1003, 0, 0, 972, 0, 1023, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	973, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1014, 0, 1004, 0, 0, 0, 0, 0,
	1001, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1026, 0, 0, 0, 0, 0, 0, 0, 1007,
	0, 0, 0, 0, 0, 0, 0, 0, 985, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1009, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1011,
}

var sqlPact = [...]int{
	266, -1000, -1000, -1000, -1000, 188, -1000, -1000, 185, 184,
	180, 179, 178, 177, 176, 174, 173, 172, 171, -1000,
	-1000, -1000, -1000, -1000, -1000, 170, -1000, -1000, 169, -1000,
	168, 164, 163, -1000, -1000, 162, -1000, 161, -1000, -1000,
	-1000, -1000, 156, 155, 150, 91110, 90550, 91661, 2398, 115031,
	98309, 2071, 80524, 114471, 79964, 113911, 2244, 9881, 113351, 2841,
	149, -1000, 112791, 148, 146, 144, -1000, 112231, -1000, 2051,
	-1000, 141, -1000, 6088, 69875, 135, 134, 133, 131, 2862,
	128, -1000, 127, 119, -1000, -1000, 118, -1000, 10732, 1549,
	-1000, 116, 114, -1000, 6785, 96078, 110, 105, 104, 2838,
	103, 102, 68213, 101, 100, 98, 2779, 2982, -1000, -1000,
	2177, -1000, -1000, 97, 96, 90, 89, 85, 84, 83,
	82, 76, 74, 73, 71, 69, -1000, 67, 64, 63,
	60, 57, -1000, 49, 48, 47, -1000, 46, -1000, 45,
	43, 41, 40, 36, 31, 30, 29, 26, 25, 24,
	23, 22, 21, 134106, -1000, -1000, 19, 1978, 1720, 1718,
	1698, 1685, 1679, 1022, 18, 17, 15, 14, 13, 12,
	11, 9, 8, 5, 3, 1, -1, -5, -6, -7,
	-8, -9, 129, -10, -11, -12, -18, -19, -24, -25,
	2605, -1000, 1749, 1013, 32218, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 122745, 115582, -26, -138, -27, -1000, 3417,
	1035, 56391, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	278, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 461, 2576, 729,
	-1000, -1000, -1000, 111680, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2397, -68, -1000, 2070, -1000, -1000, -1000, -1000,
	-1000, 721, -1000, 2386, 340, 2337, -1000, -1000, -1000, 3487,
	2532, 3877, 3876, 3874, 3872, 3869, 122194, 1868, 3868, 2613,
	3867, 3864, 3863, 3861, 3860, 3859, 3855, -1000, 89990, 1076,
	89430, 88870, 3492, 111129, 88310, 110569, 124958, 48378, 1011, 3482,
	-1000, -1000, -1000, -1000, -1000, -1000, 115582, -1000, 1067, -1000,
	-1000, 3854, 2092, 720, 97749, -1000, -1000, 110009, 2020, -1000,
	-1000, -1000, 918, 1180, 33937, 33937, 33937, 275, -1000, -1000,
	-1000, -1000, -1000, -1000, 3852, 3851, 3849, 3847, 3846, -1000,
	-1000, 79404, 25154, 78844, 78284, 109449, 24584, 87750, 87190, 3845,
	3843, 3842, 108889, 124407, 3589, 3587, 1066, 2064, 1457, -1000,
	-1000, -1000, -1000, -1000, -1000, -44, 72103, 3627, 115582, -1000,
	274, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 47805, 753,
	47232, 822, 46659, 777, 108329, -1000, -1000, -1000, -1000, 74385,
	-1000, 107769, 2519, 3841, 3840, 1153, 3839, 3367, 1867, 3838,
	1916, 1241, 3835, 3833, 3832, 3831, 3830, 3829, 3828, 1505,
	107209, 3067, 1541, 106649, 1780, 123856, 1064, 86630, 91661, 2716,
	106089, 1464, 1405, -1000, -1000, -1000, -1000, 3205, 2953, 2940,
	1169, -1000, -1000, -1000, -1000, 59782, 8549, 7475, -1000, -1000,
	11479, 105529, 62622, 91661, 91661, -1000, -1000, -1000, -1000, -1000,
	-1000, 46086, 723, 45513, 1005, 104969, -1000, -1000, 60350, 3016,
	-1000, -1000, -1000, -1000, -1000, 104409, 44940, 301, 44367, 997,
	115582, -1000, 3066, 2022, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2611, 1701, 3637, 2840, 73815, 2161, 1397, 3439,
	3201, 3200, 1503, 2062, 3199, 3827, 2711, 3197, 3191, 3186,
	3185, 3184, 1631, 2670, 370, 2664, 31645, 3041, 1797, 43794,
	1536, 1518, 3179, 3177, 3651, 2053, 2073, 2028, 77724, 3826,
	3825, 3412, 3169, 3110, 2892, 3101, -1000, 3006, 1496, 269,
	-1000, -1000, -1000, -1000, -1000, -1000, 1449, -1000, -1000, -1000,
	-1000, -1000, 82177, -1000, -1000, 1334, -1000, -1000, 1334, -1000,
	-1000, -1000, -1000, -1000, 1295, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1749, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2441, -1000,
	2087, -1000, -1000, 2579, 3387, 3387, 3387, 3480, 447, 431,
	-1000, 129, -1000, -1000, 133687, -1000, -1000, 48951, 48951, 48951,
	48951, 48951, 48951, 48951, 48951, 2259, -1000, 718, -1000, -1000,
	762, -1000, 715, 638, 550, -1000, -1000, -1000, -1000, -1000,
	-1000, 714, -1000, -1000, -1000, -1000, -1000, -1000, 3627, -1000,
	28074, -1000, -1000, -1000, 464, 713, 48951, -1000, -1000, 3679,
	3674, 1009, -1000, 265, 927, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3062, 703, 700,
	-1000, 699, 688, 684, 683, 681, -1000, 678, -1000, 675,
	673, 672, 670, 660, 659, 658, 657, -1000, 2089, -1000,
	-1000, -1000, -1000, -1000, -1000, 626, 624, 624, 624, -1000,
	1052, -1000, -1000, -1000, 344, 606, 327, 602, 601, 600,
	-1000, 653, 652, 651, 650, 649, 648, 646, 645, 644,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1048, -1000, -1000,
	-1000, -1000, -45, 115582, -1000, 461, -45, -1000, -1000, 640,
	-1000, 36258, 36258, 36258, -1000, -1000, 2381, 48951, -1000, 2676,
	-1000, -37, -37, 827, 58074, -1000, 55249, 827, 368, 773,
	63741, -1000, 3004, -1000, -1000, 639, 259, -1000, -1000, -1000,
	-1000, 25722, 3003, 115582, 115582, 115582, 91661, 91661, 91661, 115582,
	3809, 3280, 48951, -1000, -1000, 69315, 126611, 92212, -1000, -1000,
	3572, 70433, 68764, 126611, 3053, 126060, 3807, -1000, -1000, -1000,
	-1000, -1000, 3256, 3805, 3804, 3802, -1000, 115582, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 236, 3255, -1000, -1000, 95518,
	236, 3254, -1000, 236, 3253, -1000, 94967, -1000, -1000, 2272,
	3252, -1000, -1000, 245, 3250, -1000, -1000, -1000, 243, 3249,
	-1000, -1000, 257, -77, 3248, -1000, -1000, -1000, -1000, -1000,
	-1000, 133687, -1000, -1000, -1000, 125509, -1000, 3399, -1000, 115582,
	-1000, 48951, -1000, -1000, 3571, 1688, 3428, 3516, -1000, -1000,
	-55, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2586, 2585,
	1164, 2416, -1000, 3297, 1776, 33937, 3355, -1000, -1000, -1000,
	-1000, -1000, 225, 25722, -1000, -1000, -1000, -1000, -1000, -1000,
	2310, 3246, 1431, -1000, 2415, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2215, 3244, -1000, 1946, 3243, 2200,
	-1000, -1000, 2148, -1000, 3386, -1000, -1000, 1719, 3232, -36,
	-1000, -1000, 2328, -1000, -1000, -1000, -1000, 2041, -1000, 1317,
	3230, -1000, 2839, 2839, 86070, 3218, 62054, 60350, 72103, -48,
	-1000, -1000, -1000, -1000, -117, -1000, 24010, 133687, -1000, -1000,
	-1000, -1000, 1809, 133687, 894, -1000, -1000, 3229, -1000, 133687,
	893, -1000, -1000, 3228, -1000, 2669, -1000, 3052, -1000, -1000,
	2477, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2476,
	-1000, -1000, 3799, -1000, -1000, 3796, -1000, 3795, 3792, 3791,
	-1000, 1816, 2058, 3790, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 85519, 2380, -1000, -1000, 84399, 3046, -1000, 2473,
	3515, -1000, 84959, 1059, -1000, 1004, 2472, -1000, 94416, 1003,
	2471, -1000, 3789, 3486, 2783, 1004, 2470, -1000, -1000, -1000,
	-1000, -1000, 879, -1000, 65977, -1000, 65977, -1000, 1619, -1000,
	121643, -37, 91661, 3627, -1000, -75, -1000, -1000, -1000, 1035,
	-1000, 59209, -1000, 59209, 97189, 74953, 934, 759, 67652, 133423,
	-1000, 1024, -1000, -1000, 133687, -1000, -1000, -1000, 2667, -1000,
	-151, 2837, -1000, 74953, 61486, 2631, -1000, 133687, -1000, -1000,
	-1000, -1000, 133687, -1000, -1000, -1000, 74953, 84399, -1000, 103849,
	83848, -1000, -1000, 1490, 2632, -1000, -1000, -1000, 74953, 1325,
	74953, 74953, 74953, -1000, 103289, -1000, -1000, 2135, 1287, 3391,
	2133, 91661, -1000, 1961, -1000, -1000, -1000, 3423, 3216, 115582,
	-1000, -1000, 3042, -1000, 71552, 93865, -1000, 93314, -1000, 92763,
	-1000, 91661, -1000, 91661, -1000, 3786, 3785, 3784, -1000, -1000,
	3780, -1000, 3779, 3419, -1000, 994, 43221, 133687, 3404, -1000,
	3778, 2032, 3041, 133687, -1000, 3207, 1700, 1696, 115582, -1000,
	-1000, 115582, -1000, 115582, -1000, -1000, -1000, 1566, -1000, -1000,
	2583, -1000, -1000, -1000, -1000, 91661, 91661, 91661, 91661, 1649,
	-1000, 42648, -1000, -1000, 3128, 3777, 1750, -1000, 1863, -1000,
	2995, 3418, -1000, 1487, 1704, 219, 3684, -1000, -1000, 252,
	-1000, -1000, -55, -1000, 121092, -1000, 2579, -1000, 115582, -1000,
	2620, 3027, 3038, 1687, 2403, 2712, -1000, 42075, 2635, 52389,
	2413, 129, -1000, -1000, 129, 129, 33364, -1000, -1000, 70433,
	70433, 25722, 1356, 48951, 48951, 48951, 48951, 48951, 48951, 48951,
	48951, 48951, 48951, 48951, 48951, 48951, 48951, 48951, 48951, 48951,
	48951, 48951, 48951, 48951, 48951, 48951, 48951, 48951, 48951, 48951,
	48951, 48951, 48951, 48951, 48951, 48951, 48951, 48951, 48951, 2625,
	48951, 1293, 48951, 48951, 48951, 48951, 2242, -1000, -1000, 2015,
	507, 2103, 638, -1000, -1000, -1000, 3622, 3622, 3622, 671,
	671, 671, 133871, 133871, 594, 3776, 762, -1000, 48951, -1000,
	145, 58632, 48951, 26292, -1000, 431, 11499, 2634, -1000, 425,
	26894, -1000, -1000, -1000, 28074, 550, 41473, 48951, 1032, 133687,
	-1000, -1000, 1347, 3638, 23436, 3075, 2878, 637, 831, 830,
	31043, 30441, 29839, 29237, 828, 817, 48951, 48951, 48951, 48951,
	48951, 48951, 48951, 48951, -1000, -1000, 3644, -1000, 3638, -1000,
	-1000, -1000, -1000, 3638, 1303, 1291, 3638, -1000, 3638, 3638,
	6441, 6441, 40900, 40327, 39754, 52962, 39181, 48951, 28664, 38608,
	38035, -1000, 115582, -45, 3568, 48951, 337, -1000, 131927, -1000,
	337, 337, 636, -82, 133687, 2615, 2615, 56952, 2206, 2267,
	2267, 2267, -1000, 827, 18236, 827, 101629, 2268, 827, 827,
	214, 255, 423, 54681, 2676, 101629, 749, 635, -28, -29,
	-30, -1000, -1000, -31, -34, -1000, -1000, 91661, 633, 26292,
	25722, 213, 2029, -84, 2687, 2685, -1000, 2683, 2681, -1000,
	2679, 2379, -1000, -1000, 1828, -87, 1286, 91661, 115582, 1442,
	3775, -51, -1000, 5996, -90, -1000, 1311, 212, 3638, -1000,
	-1000, -1000, -1000, -1000, 3774, 3768, -1000, 1046, 629, 628,
	400, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 626,
	624, 624, 624, -1000, 344, 606, 327, 602, 601, 600,
	-1000, -1000, -1000, -1000, -1000, 2986, 91661, 115582, 1436, 3767,
	-77, 92212, -85, -1000, -1000, 115582, -1000, -1000, -1000, 3766,
	-1000, 91661, -1000, -1000, 91661, 236, 3227, -1000, 91661, -1000,
	91661, 232, 3222, -1000, -1000, 115582, -1000, 91661, 91661, -1000,
	115582, 115582, 115582, 126611, 126611, 228, -1000, 91661, 850, -93,
	1162, -55, -1000, -1000, -1000, -1000, 1334, -1000, 1973, -1000,
	-1000, -1000, -1000, -1000, -1000, 1468, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1009, -1000, -1000, -1000, -1000, -1000,
	-1000, 3634, 3629, -46, -1000, -1000, 25722, -1000, -56, 1650,
	1949, 1285, -1000, 77164, 2405, 3400, 3760, 2768, 3374, 1614,
	-1000, 1563, -1000, 3497, 82177, 3527, 3541, 1338, -1000, 2984,
	-1000, -1000, 915, 1707, 1792, 1284, 1283, 82177, 1946, -1000,
	70433, -1000, 2731, 3472, 1382, 1409, 1382, 1382, 1355, -1000,
	82177, 1783, 1281, 1279, 1276, -1000, -1000, 1995, 1977, -1000,
	-1000, 102738, -1000, 1274, 1273, 3586, 2441, 2218, 796, 1965,
	-1000, -58, 3525, 3539, 1331, -1000, 2980, 1267, -1000, -1000,
	-1000, 3471, 91661, 25722, 1611, 1598, 1607, 1759, 1264, -47,
	-1000, 3522, 1263, 1260, -1000, 1038, 5472, 3330, -1000, 126611,
	1038, 1038, 1997, 3217, 2813, 1699, -1000, 2830, 871, 2829,
	-1000, -1000, -1000, 871, -48, 72103, 115582, 208, -1000, 145,
	48951, 48951, 145, 48951, 145, -1000, 3508, 3173, 3172, -1000,
	-1000, -1000, -1000, -1000, 3755, 2036, 2612, -1000, -1000, 599,
	2469, 2979, 115582, 2730, -49, 91661, -1000, 71001, 3170, 126611,
	1946, 2467, -1000, -1000, 83288, -1000, 3167, 461, 2465, -1000,
	689, 3750, 3166, -1000, 120541, -1000, 3399, 1390, 3165, 1111,
	814, 3566, -1000, 814, 66536, -1000, 115582, -1000, -37, 5598,
	76062, -95, -96, 406, -1000, 102187, 115582, 1110, 76613, 115582,
	3344, 2047, 2040, -1000, 993, 60350, -1000, 60350, -98, -1000,
	-151, 2824, 1531, -1000, 934, 934, 871, -1000, 871, -1000,
	91661, 3030, -1000, -1000, 74953, 934, 934, 934, -1000, -1000,
	-1000, -1000, 3749, 3746, 3744, 3742, -1000, -1000, 1001, 91661,
	115582, 91661, -1000, -1000, 1666, -1000, 206, -1000, 126611, -1000,
	126611, 115582, 91661, -1000, 1001, 115582, 1001, 115582, 1001, 115582,
	1001, 1001, -1000, -1000, -1000, -1000, -1000, 145, -1000, -1000,
	133687, -1000, 48951, -1000, -1000, 1539, 3740, 1669, -1000, 3029,
	-1000, 3028, -1000, 7, -1000, -1000, 1891, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3738, 133687, -1000, 2286, -1000,
	-1000, -1000, -1000, 91661, 91661, 91661, 91661, 115582, 3329, -1000,
	115582, 3318, 91661, -1000, 3683, -1000, -1000, 82177, -1000, 2620,
	3027, -1000, -1000, -1000, -1000, -1000, -1000, 1447, 2354, -1000,
	2648, -1000, 1596, -1000, -1000, -1000, 133687, 53535, -1000, -1000,
	133687, 1826, -1000, 51816, 51243, -1000, -1000, 1756, 91661, 2739,
	-1000, 2739, -89, -1000, 131743, 2642, 91661, -1000, -1000, -1000,
	-1000, -1000, 909, 1157, 1157, 1194, 1194, 1194, 1194, 3507,
	1443, 7727, 7087, 570, 570, 7794, 7794, 7794, 7794, 7794,
	570, 7073, 671, 671, 7073, 7073, 7073, 7073, 7073, 671,
	671, 671, 570, 570, 570, 671, 133871, 5056, 7865, 48951,
	48951, 1259, 2002, 507, 7126, 48951, 8052, 8052, 8052, 8052,
	-1000, 2351, -1000, -1000, -1000, -1000, 2978, 596, 52962, 52962,
	-1000, -1000, -1000, -1000, 27484, 48951, -1000, -1000, -1000, -1000,
	37433, -1000, -1000, 131016, -325, 402, -1000, 203, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 401, -80, -43, -1000, 48951, 48951, 48951, 396, -1000,
	202, 48951, 115582, -1000, 127601, 745, -101, -1000, -104, 1452,
	-1000, 48951, -1000, -1000, 1257, -1000, 1256, 1254, 1250, -1000,
	595, 393, -1000, 199, -1000, 2262, 593, 589, 48951, -1000,
	-1000, -1000, -1000, -1000, 130832, -1000, -1000, 130568, -1000, -1000,
	130368, -1000, -1000, 130184, -1000, -1000, -1000, -1000, -1000, 133223,
	127213, 127172, 17520, 10817, 17239, 16421, -105, 392, -106, 390,
	903, 902, 388, 386, 385, -111, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -112, 384,
	-1000, 2976, -80, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 383, -1000, 380, -1000, 133039, -80, 378, 6109, -1000,
	52962, 52962, 52962, 52962, -1000, 377, -1000, 131464, -1000, 132775,
	36860, 36860, 36860, 376, 132575, 48951, -80, -119, -1000, -120,
	-1000, -1000, 522, -121, 1029, 36258, 55830, 25722, -1000, 1029,
	1029, 48951, -1000, 48951, 2658, -1000, -1000, -1000, -1000, 2657,
	2154, 2615, 56952, -1000, -1000, -1000, -1000, 101629, -1000, 3627,
	3446, -1000, 101629, -1000, -1000, 115582, 461, -1000, 101629, 101629,
	25722, 827, -1000, 827, 101629, 804, -1000, -1000, -1000, -1000,
	-1000, 374, 64302, -43, 195, 25722, 1004, -1000, -1000, 2787,
	2787, 2787, 2787, 2787, 91661, -1000, -1000, 126611, 1244, -50,
	-127, 2818, -1000, 3593, -1000, 2128, -1000, 70433, -1000, 760,
	964, 25722, -1000, -1000, -1000, 588, -1000, 3638, 3638, -1000,
	3638, 126611, 2974, 286, 2815, -1000, 229, 126611, 3735, -1000,
	-1000, 236, -1000, 91661, 236, 236, -1000, 91661, 91661, 2272,
	-1000, 245, -1000, 243, -1000, -1000, -77, -1000, 1023, 33937,
	-1000, 1334, -1000, -1000, 1592, -1000, 2024, -1000, 1245, -1000,
	-1000, -1000, -1000, 33937, -1000, 2628, 115582, 115582, 91661, -1000,
	115582, -1000, 2239, 126611, -1000, 2463, 119990, 2451, 70433, 115582,
	-1000, -1000, 587, 924, 2640, 2630, 1108, 115582, 115582, 2629,
	119439, 118888, -1000, 3734, 115582, 2123, 48951, 3470, 2325, 2275,
	145, 145, -1000, 145, 145, 145, -1000, 574, 1470, 91661,
	91661, 115582, 126611, 91661, 1872, -1000, -1000, -1000, -1000, -1000,
	82728, -1000, -1000, 3643, 3642, -1000, 1382, -1000, -1000, -1000,
	1382, 1946, 1869, 115582, 126611, 91661, 126611, 118337, 117786, -1000,
	-1000, 1751, 115582, -1000, -1000, -1000, -1000, 1509, -1000, 796,
	2165, 145, 145, -1000, 145, 145, 145, 572, 25722, 1994,
	-1000, 3081, 115582, 3672, 117235, 3669, 115582, 115582, 115582, 126611,
	3396, 115582, 115582, 126611, -1000, 116684, 5472, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 73245, 1116,
	115582, 1317, -1000, -1000, 1748, 1243, 1242, 82177, 2137, 1730,
	1881, 126611, 60350, 968, 60350, 2791, -1000, -1000, 22862, -1000,
	133687, 133687, -1000, 133687, -1000, 71001, 74953, 115582, -1000, 1055,
	115582, 76613, 925, 3164, 65418, -117, 934, 74953, 91661, -49,
	2730, 115582, -1000, -1000, 1946, 3163, 461, 2460, -1000, 126611,
	3564, 3161, 571, 3733, 3731, -1000, 91661, 2376, 2453, -1000,
	-1000, 116133, 3268, 796, 115582, 1029, 56952, 1982, -1000, 63183,
	1085, 115582, 1850, 120, -1000, -1000, -1000, -13, 115582, -1000,
	764, -1000, -1000, 5598, 5598, 934, -277, 569, -1000, 852,
	851, 60918, 74953, -126, -1000, -1000, -1000, -1000, 2451, 91661,
	115582, 1320, 2782, 115582, -129, -1000, 194, 553, 847, 845,
	-1000, 4794, -1000, -151, -1000, 74953, 993, 60350, 2968, 2966,
	-1000, -1000, 1021, -1000, 1460, 934, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -39, 1861, 115582,
	-77, -77, -63, -50, -1000, 1001, -1000, 1001, -1000, 1001,
	-1000, -1000, -1000, 133687, -1000, -1000, -1000, 1653, 1625, 115582,
	-1000, -1000, 115582, -1000, 25722, 115582, 91661, 25722, 91661, 3025,
	3023, -1000, -1000, -1000, 115582, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1129, -1000, 1826, 2349, -1000, 550, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2562, -1000,
	-54, 33364, 874, -1000, -1000, 91661, -40, 48951, 48951, 7006,
	6905, 48951, 52962, 52962, -1000, 48951, 6393, -1000, -1000, -1000,
	-1000, -1000, 2964, 549, 48951, 70433, 5658, 5414, -1000, 372,
	14065, 7073, -1000, 48951, -1000, 5591, -1000, 371, 35685, -1000,
	132127, -52, -135, -1000, 18823, -80, -137, -1000, -1000, 758,
	-1000, 3264, -1000, 48951, 132391, 2513, 2113, 1840, 1686, 3638,
	3666, 22288, -1000, 67094, 1030, 2282, 129920, -1000, -1000, -1000,
	-1000, 70433, 70433, 48951, 48951, -1000, 48951, 48951, 48951, -1000,
	-1000, -1000, 3638, 905, -1000, -1000, -1000, 905, -1000, -1000,
	1382, -1000, 1382, -1000, 48951, -1000, -1000, 2961, 48951, -1000,
	70433, 70433, 52962, 52962, 52962, 52962, 52962, 52962, 52962, 52962,
	52962, 52962, 52962, 52962, 52962, 52962, 52962, 52962, 52962, 52962,
	52962, 52962, 2655, 52962, 3611, 3611, 3611, 1117, -1000, 2987,
	2961, 48951, 48951, 70433, 366, 365, 363, -1000, 48951, -80,
	-1000, -1000, 982, 548, -1000, 2555, -1000, 2877, -1000, 48951,
	-1000, -142, -1000, 2676, -1000, -1000, 2877, 2877, -143, 133687,
	56952, 56952, -1000, 547, 48951, 2643, -1000, -1000, 744, -317,
	-1000, 843, -1000, -1000, -1000, -1000, -1000, -1000, 842, -1000,
	461, -1000, -1000, -1000, 193, 101629, 101629, 743, -1000, -144,
	-1000, -1000, -145, -1000, 3563, 362, 25722, -1000, 1029, 2734,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2678, -77, 126611,
	126611, 1728, 2334, 3663, -1000, 3640, 756, 741, 191, 3638,
	360, 359, 358, -77, 126611, 126611, 1724, 126611, -1000, -1000,
	-1000, 236, -1000, -1000, -1000, 232, -1000, -1000, -1000, -1000,
	2702, -1000, -55, -1000, -1000, -1000, 48951, -1000, -1000, 3397,
	1240, 1238, -1000, -1000, -1000, 2967, -1000, 3159, -1000, 2444,
	-1000, 1089, -1000, 1954, 48951, 545, 2780, 542, 540, 3730,
	2241, 3729, 1109, 3158, 2272, 3156, 2272, -1000, -1000, -1000,
	884, -1000, 133687, 2325, -1000, 539, 537, -1000, -56, 1645,
	1862, 1236, 1016, -1000, -1000, -1000, -1000, 48951, 48951, 101078,
	-1000, 459, 3386, -41, -1000, -1000, -1000, 1710, 1228, 1227,
	-1000, -1000, -1000, -1000, 1946, 1702, 1225, 1222, -1000, -1000,
	-1000, -1000, -1000, 2442, -1000, -1000, 3152, 1012, -1000, 3093,
	3090, 891, 115582, -1000, 1010, -1000, -1000, -1000, -1000, 48951,
	-1000, -58, 1221, 3524, 2436, 91661, -1000, 2272, 3147, 1217,
	-1000, 1216, -1000, -1000, -1000, 3519, 3518, 1208, -1000, -1000,
	-1000, -1000, -1000, 72677, -1000, -1000, 1038, 115582, 126611, 91661,
	1857, -1000, -1000, 81075, 81626, 115582, 2813, -77, 871, -1000,
	2385, 871, 968, 2957, -1000, 2691, -1000, 1008, 91661, 3728,
	355, -146, -59, 70433, 3562, -1000, 2387, 612, 91661, 883,
	-1000, 3627, -1000, -1000, -1000, 1007, -1000, 3510, 91661, 3559,
	3146, 1004, 145, 91661, 3649, -1000, -1000, 3558, 91661, 3140,
	2368, 2431, 2584, 796, 75511, 1004, 2277, -67, -1000, 1850,
	35083, 3381, -152, -1000, -1000, -1000, 1029, 66536, 56952, 48951,
	3727, -153, -1000, -1000, -1000, -1000, -1000, 98867, 98867, 74953,
	74953, 74953, 934, 115582, 115582, 76613, -1000, -1000, 535, 115582,
	115582, 534, -1000, 115582, 115582, 3725, 74953, 74953, 74953, -60,
	531, -1000, 841, 840, 837, -1000, -1000, -1000, -1000, -1000,
	-1000, 836, 832, 993, -1000, -1000, -151, 60350, 145, -1000,
	2316, 91661, -1000, 21714, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1001, -117, -1000, -1000, 2180, 2408, 2180, 1871, 1847,
	-1000, -1000, 2345, -1000, -1000, -1000, -1000, 2714, 3382, 25722,
	3509, 8052, 48951, 48951, 590, 1527, 627, 8052, 48951, 48951,
	70433, 15411, -154, 48951, 48951, -1000, 48951, 740, 133687, -1000,
	3661, 48951, 354, 353, -1000, -1000, -1000, 3636, -1000, -1000,
	-1000, 133687, 48951, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	351, -1000, 130, -1000, -1000, -1000, 123296, -1000, 48951, 349,
	3467, -1000, 346, 338, 12229, 9346, 129720, 129536, 129272, 335,
	-1000, -1000, 329, 324, 133687, 2987, 133687, -1000, -1000, 1122,
	1122, 1365, 1365, 1365, 1365, 3611, 1034, 481, 716, 294,
	294, 294, 427, 1117, 1117, 294, 294, 294, 1117, 2948,
	2637, 529, 2240, -1000, -1000, 133687, 133687, 323, -1000, -1000,
	-1000, -80, 322, 982, -1000, 2872, 3464, 133687, -1000, 56952,
	2872, 2872, -1000, -1000, 2154, 115582, 133687, 56952, -1000, 3446,
	-1000, 19987, 19408, -1000, 25722, -1000, -1000, -1000, -1000, 3627,
	-1000, 64302, -1000, 526, -1000, 112, -1000, 2734, -1000, 826,
	-1000, -1000, 74953, 74953, 2787, -77, -264, 115582, -1000, -1000,
	739, 3724, 751, 25722, 319, -1000, -1000, -1000, -77, -77,
	115582, -77, -1000, -1000, -1000, 3343, 133687, 115582, 115582, 1512,
	100527, 115582, 3136, -1000, 2110, -1000, 1108, 129072, 57513, -1000,
	57513, 115582, -1000, -1000, -1000, -1000, 2090, 1799, 3721, 1145,
	-1000, 3426, 115582, -1000, 115582, -1000, -1000, -1000, 115582, 115582,
	91661, 115582, -1000, 126611, 3104, -159, 133687, -61, -1000, 820,
	-1000, 1371, -1000, 21140, 115582, 126611, 91661, 115582, 126611, 91661,
	3134, 115582, 2247, -1000, -1000, 3087, -1000, 3102, -160, 25722,
	-1000, 3659, 3658, 3125, 3432, -1000, 115582, 3657, 115582, 91661,
	3341, -1000, -1000, -1000, -1000, -1000, -1000, 1695, 1212, 1210,
	2366, -62, 2364, 2332, -63, 2137, 968, -64, 525, -1000,
	811, -1000, -1000, 809, -1000, 968, -1000, 74953, 60350, 3719,
	461, -1000, 2764, -1000, 96629, 2320, 145, -1000, 3717, 99425,
	523, -1000, 2314, -1000, 734, -1000, 2553, 126611, 1946, 145,
	91661, -1000, -1000, 461, 315, -65, -1000, 3211, 1092, 25722,
	91661, 3120, 2601, 796, 75511, -1000, 1390, 2712, -1000, -66,
	-1000, 451, 145, 2277, -1000, -67, 133687, -1000, 807, -1000,
	-161, -1000, -1000, 313, -1000, 3340, 3338, -1000, 2881, 57513,
	521, 520, 115582, 3333, -1000, -1000, -162, -1000, -1000, 3743,
	3743, 74953, 60350, 74953, 74953, 74953, -1000, 993, 871, -1000,
	2483, -1000, -1000, -1000, -1000, -1000, 25722, 1684, -1000, 519,
	518, -1000, -1000, -1000, -1000, 3382, 8052, 8052, 48951, 48951,
	48951, 8052, 15411, -170, -1000, 8052, 8052, -80, -1000, -1000,
	132127, -1000, -1000, -1000, 133687, -1000, 20566, 2223, -1000, 128888,
	-1000, 33364, -1000, -1000, 48951, 48951, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 52962, 2929, 517, 70433, -1000, -1000,
	306, 1027, 48951, 50670, 2676, 1027, 1027, -1000, -171, -1000,
	-1000, -1000, 3627, -1000, 3627, 112, -1000, -1000, 3713, 25722,
	-1000, 74953, -1000, -1000, -1000, 3711, -128, 403, -1000, 3710,
	-1000, -1000, 111, -1000, -1000, -1000, 2812, 3555, -1000, 1953,
	-1000, 115582, -1000, 115582, -1000, 25722, 115582, 2902, 1316, -1000,
	924, 2627, 516, 52962, 1127, 91661, 911, 2859, 2846, -1000,
	3582, 3463, 2868, -176, -1000, 115582, 48951, 115582, -184, -186,
	2421, -1000, -1000, 1125, 1314, 48951, 1120, -1000, -1000, -1000,
	70433, 514, 2272, 2272, -187, -192, -1000, -1000, -1000, 48951,
	1207, 115582, 34510, -1000, 3706, 3386, -1000, -1000, -1000, -1000,
	-1000, -1000, 115582, -1000, 115582, -1000, 48951, 1202, -1000, -1000,
	-1000, 3655, 2272, 25722, 2272, -1000, 2272, 3432, 1141, 115582,
	126611, 91661, 2016, 2016, 2972, -1000, -1000, -1000, 2560, 2560,
	74953, 60350, -1000, -69, 968, -1000, 3554, 2757, 3704, -1000,
	-1000, -1000, -1000, 2626, -1000, -1000, 115582, 2623, 939, -1000,
	-194, -1000, 805, 801, 76613, 925, 892, -1000, -70, 511,
	-1000, 800, -1000, -1000, -1000, -1000, 461, 3553, -1000, 3653,
	510, 509, 115582, 2363, 508, 25722, 3377, 796, 75511, -1000,
	3268, 1850, -1000, 2426, 115582, 3373, -1000, 2712, 507, -1000,
	934, 506, 505, 3202, 3202, -199, 57513, 57513, -200, 496,
	934, -1000, -201, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-71, -1000, 882, 881, -1000, -1000, 91661, 91661, 48951, 48951,
	-1000, 8052, 8052, 8052, -1000, 305, -1000, -1000, 2277, 3456,
	-1000, -72, 128624, 128424, 6314, 52962, 70433, -208, -1000, -1000,
	115582, 133687, -73, -1000, 133687, 495, 494, 441, -1000, -1000,
	-1000, 733, 591, -1000, -1000, -1000, 126611, 3702, -1000, 126611,
	99976, 115582, -1000, -1000, 1957, -1000, -1000, -1000, 115582, 2428,
	-1000, -1000, -1000, 1101, 48951, 2240, 52962, 493, 48951, -1000,
	492, 491, 3552, 3311, -1000, 2748, 2938, 2069, 57513, -1000,
	3382, -1000, 128240, -1000, 1087, 2001, -1000, -1000, -1000, -1000,
	133687, 52962, 3432, 57513, -1000, -1000, 490, 488, 133687, 487,
	797, 2921, -1000, -1000, -1000, -1000, -1000, 133687, 485, 3524,
	-1000, -1000, -1000, -1000, 2272, 91661, -1000, -1000, -1000, 1188,
	-1000, -1000, -1000, -1000, 3701, 3700, 2918, 81075, -1000, -209,
	-1000, -1000, 1951, 145, 2176, 2809, -1000, 2320, 470, -1000,
	-1000, 2352, 2700, -1000, 99425, 33937, 33937, 297, 3551, 892,
	-1000, 3619, -1000, 3299, 3299, 48951, 3550, 145, -1000, 3649,
	57513, -1000, 91661, 57513, 2361, 2082, 2578, 75511, -1000, 2584,
	-1000, -1000, -216, 115582, 1850, -1000, -1000, 74953, 74953, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1087, -217, -218, -1000, 74953, -1000, -1000, 2483, -1000, 115582,
	-1000, 115582, -1000, -1000, -219, -224, -1000, 2153, 48951, 33364,
	-1000, -1000, 6314, -225, -1000, -74, -1000, 3549, 50670, 3699,
	3698, 3694, -1000, -1000, -77, -1000, -77, -1000, 1927, -1000,
	-1000, -1000, 3108, 2865, 128030, 2240, 2554, 115582, 127642, 1946,
	1946, -1000, 3540, 2932, -1000, -1000, 2757, 467, -1000, -1000,
	-1000, -1000, 874, 115582, 2757, 2864, 91661, 2240, 1100, -227,
	2180, 2180, 48951, 32791, 2243, 48951, -1000, -1000, 3432, 126611,
	-1000, -1000, 126611, 2357, -1000, 2907, 3620, -1000, 925, -1000,
	2238, 115582, -1000, 3420, -1000, 3332, -1000, -1000, -1000, 2764,
	145, -1000, -1000, -1000, -232, 133687, 145, -1000, 296, -233,
	1092, -235, 91661, 1962, -1000, 796, -1000, 2601, 1029, -1000,
	-1000, -243, -244, 2069, 1087, 2165, -249, -1000, -250, -251,
	-1000, -1000, 293, 50097, 50097, 50097, -80, -89, -1000, 115582,
	465, -1000, -1000, -1000, -1000, -1000, 3084, 960, -1000, 833,
	1915, 291, 1082, 280, 246, -1000, -1000, -1000, 2165, 115582,
	-1000, -1000, -1000, 952, 461, -1000, 48951, 1087, -252, -1000,
	1083, -257, -1000, 1081, -259, -1000, 2913, -1000, -262, 2272,
	-271, 228, 2016, 941, 3506, -1000, -1000, -1000, 2352, 91661,
	-265, -1000, -1000, 2589, -1000, 2757, 939, -1000, -1000, -1000,
	1087, 457, 2069, 456, 1521, 796, -1000, -1000, 1382, 3377,
	3274, 934, 934, 2757, 2069, 933, -1000, 934, -1000, -1000,
	-1000, 3130, -1000, 54108, 2353, 1844, 131280, 3130, 3130, -1000,
	-1000, 115582, 3494, -1000, 863, 858, 1530, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2868, -268, 3491, 2554, 133687,
	2757, -1000, 2180, 2798, -1000, 2180, 2911, -1000, 2237, -1000,
	-1000, -1000, 2884, -1000, 2910, -1000, 1801, 3606, 2568, 454,
	-1000, 115582, 1827, 1820, 3692, 2176, 2352, 2069, 57513, 2757,
	57513, 2143, -1000, 115582, -1000, 2082, 1354, -1000, -1000, 2165,
	2757, 1029, 453, -1000, -1000, 2116, 3544, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 788, -1000, 3293, -1000, 1119,
	2254, 2254, 1029, -1000, 786, 833, -1000, -1000, 452, -1000,
	450, -1000, 2323, 126611, 2312, -1000, -1000, -1000, -1000, 115582,
	-1000, -1000, 3688, -1000, 925, -1000, 2757, -275, 2165, -276,
	-1000, -1000, -1000, -117, 1962, -1000, 1602, 933, 2165, -1000,
	1835, -1000, -1000, 2278, 49524, 48951, -1000, 3598, -1000, -1000,
	2638, -1000, -1000, 48951, 2868, 48951, 48951, -1000, 228, 64860,
	-282, -1000, 2352, 2165, 1087, 933, 2069, 1521, 66536, 1029,
	933, -1000, -1000, -1000, 133687, -1000, -1000, -1000, 133687, -1000,
	-283, -284, -1000, -277, 98867, 2265, 2568, 933, 2069, 1029,
	2757, 2143, -270, -1000, 1029, 2165, 1167, -285, -1000, -1000,
	-1000, -1000, 1029, 2757, -1000, 2165, -1000, -1000, -1000, -1000,
	-1000, 449, -1000, -1000, 2165, 933, 48951, 933, 1029, -292,
	1029, -1000, 2165, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4501, 4500, 4498, 4496, 4491, 4489, 4488, 4487, 4486,
	4485, 4484, 4483, 150, 4482, 4481, 4480, 4479, 4478, 4476,
	4474, 4473, 4471, 4469, 4468, 4463, 4460, 4457, 4456, 4455,
	4454, 4452, 4451, 4450, 4448, 4447, 4446, 4445, 4443, 4442,
	4441, 4440, 4438, 4436, 4434, 4433, 4432, 4427, 4424, 4419,
	4418, 4416, 4415, 4414, 4413, 4412, 4408, 4407, 4406, 4403,
	4400, 4398, 4392, 4391, 4390, 4388, 4387, 4384, 53, 4383,
	4375, 4374, 4373, 4372, 4371, 4370, 4368, 4364, 4363, 4362,
	4361, 4360, 4359, 4355, 4353, 4348, 4347, 4346, 4344, 65,
	4343, 277, 4342, 4340, 4338, 4337, 4335, 4334, 4333, 4332,
	4329, 4328, 4326, 4325, 276, 4321, 125, 163, 4320, 4319,
	3883, 4318, 4317, 273, 4316, 4315, 4314, 4313, 4312, 286,
	4311, 4310, 4309, 4308, 4307, 4306, 4305, 4303, 4302, 4301,
	4299, 4298, 90, 207, 4296, 4294, 2763, 4290, 4289, 4288,
	4287, 4286, 4285, 4284, 4283, 4282, 4280, 4278, 251, 174,
	4276, 272, 4273, 4272, 4269, 4268, 4266, 4262, 4261, 4260,
	4259, 4258, 4257, 4252, 4251, 4249, 4248, 4247, 4245, 4243,
	4242, 4240, 4239, 4235, 4233, 4231, 4230, 4229, 4226, 4225,
	4223, 4222, 4221, 4220, 4213, 4212, 4211, 4210, 4209, 4205,
	4204, 250, 220, 116, 4202, 4201, 271, 270, 4200, 4199,
	4198, 4196, 4195, 137, 6, 60, 4194, 4190, 115, 87,
	88, 105, 107, 100, 4189, 113, 4188, 128, 67, 4187,
	25, 2, 171, 254, 5370, 244, 4186, 4184, 4181, 248,
	194, 4179, 245, 4178, 4177, 4176, 4175, 4174, 4173, 76,
	55, 185, 181, 176, 170, 79, 4172, 164, 109, 85,
	59, 46, 12, 86, 221, 22, 4, 264, 4171, 263,
	11, 146, 5, 33, 4169, 4168, 4167, 4161, 3864, 132,
	4160, 267, 246, 175, 4157, 4156, 4153, 724, 4152, 4149,
	49, 4148, 200, 89, 130, 15, 131, 4147, 153, 173,
	38, 4144, 165, 61, 4143, 161, 101, 91, 8580, 12664,
	4135, 4134, 127, 71, 95, 274, 258, 229, 204, 186,
	162, 169, 114, 216, 213, 178, 183, 4132, 259, 4130,
	3551, 92, 189, 157, 6321, 4129, 4128, 4127, 84, 203,
	110, 4126, 4123, 73, 9, 31, 3, 1, 145, 26,
	19, 13, 4113, 27, 121, 50, 23, 4110, 32, 4105,
	4103, 4102, 4101, 4100, 42, 172, 4090, 4089, 279, 4088,
	106, 58, 28, 4087, 21, 227, 4085, 234, 136, 4084,
	4083, 261, 208, 187, 4082, 43, 239, 4081, 4079, 4078,
	4076, 4075, 4074, 139, 7, 135, 4072, 4071, 148, 4070,
	56, 247, 198, 4068, 62, 4067, 4066, 182, 52, 144,
	278, 190, 233, 120, 237, 191, 240, 4064, 4060, 4057,
	217, 4056, 4054, 225, 155, 4053, 4052, 209, 283, 93,
	48, 82, 241, 83, 193, 159, 4049, 206, 4048, 4047,
	281, 184, 222, 20, 16, 98, 138, 4046, 8, 243,
	160, 235, 119, 4045, 7345, 2013, 2067, 4044, 4042, 151,
	124, 80, 122, 154, 266, 97, 4041, 4039, 2574, 4037,
	4036, 4035, 4034, 188, 4032, 4031, 4030, 149, 223, 199,
	4029, 96, 69, 51, 29, 118, 256, 269, 117, 230,
	179, 252, 4028, 4027, 4026, 197, 4024, 77, 129, 166,
	205, 260, 66, 4021, 212, 4017, 152, 2176, 64, 156,
	4016, 253, 4015, 4014, 4013, 4010, 4009, 4008, 4005, 1799,
	238, 4000, 3998, 3995, 37, 202, 3993, 265, 158, 180,
	102, 78, 3991, 99, 3270, 3981, 231, 218, 70, 196,
	41, 3977, 2125, 141, 3976, 0, 13705, 9608, 12117, 13216,
	3974, 7867, 3972, 3968, 3965, 226, 147, 3963, 3957, 3956,
	108, 3955, 81, 3952, 3951, 72, 3950, 35, 17, 18,
	34, 30, 364, 325, 3949, 3948, 44, 140, 133, 3947,
	268, 236, 3946, 3945, 3944, 3943, 104, 3942, 47, 3941,
	45, 3938, 3937, 54, 14, 36, 3936, 3935, 210, 3930,
	224, 257, 3928, 167, 3925, 68, 143, 3924, 3921, 3916,
	74, 63, 262, 94, 3909, 288, 3908, 201, 3907, 3906,
	24, 3905, 3903, 249, 112, 111, 3902, 255, 142, 40,
	214, 177, 232, 3901, 3900, 168, 3899, 3898, 3897, 285,
	3896, 3895, 39, 3892, 3891, 3890, 10, 3888, 3886, 211,
	3268, 3885, 3881, 57, 3745, 192,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 52, 52, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 37, 39, 38,
	32, 32, 33, 33, 34, 35, 35, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 18, 18,
	40, 40, 19, 19, 42, 42, 20, 20, 43, 43,
	602, 602, 620, 620, 23, 23, 45, 45, 24, 46,
	17, 603, 603, 603, 603, 36, 25, 47, 29, 29,
	29, 29, 29, 206, 206, 206, 206, 22, 22, 41,
	41, 242, 242, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	598, 598, 244, 244, 243, 236, 236, 237, 237, 238,
	238, 604, 604, 245, 245, 245, 247, 247, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 498, 498,
	498, 529, 529, 529, 529, 530, 530, 624, 624, 625,
	625, 625, 625, 625, 135, 135, 396, 396, 396, 56,
	56, 56, 56, 56, 593, 593, 208, 208, 208, 210,
	210, 209, 209, 209, 209, 209, 80, 80, 610, 610,
	609, 608, 608, 608, 611, 611, 611, 207, 207, 207,
	131, 131, 131, 131, 131, 131, 132, 132, 133, 133,
	211, 211, 211, 213, 213, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 217, 16, 16, 16,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 109,
	109, 532, 532, 533, 533, 202, 202, 203, 203, 203,
	203, 204, 204, 205, 205, 205, 71, 71, 214, 214,
	216, 216, 215, 215, 215, 215, 215, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 59, 59, 59, 59,
	59, 60, 60, 60, 60, 60, 60, 61, 61, 61,
	61, 61, 61, 62, 62, 69, 69, 69, 69, 69,
	69, 69, 193, 193, 72, 72, 72, 72, 72, 72,
	72, 72, 72, 72, 72, 72, 72, 77, 77, 77,
	77, 626, 626, 626, 626, 626, 626, 626, 626, 626,
	626, 626, 626, 626, 626, 626, 626, 626, 626, 626,
	627, 627, 628, 628, 629, 629, 630, 630, 630, 630,
	630, 630, 630, 630, 630, 630, 630, 630, 630, 630,
	630, 630, 630, 630, 630, 75, 75, 75, 75, 75,
	75, 75, 75, 75, 75, 75, 75, 75, 75, 75,
	75, 75, 86, 86, 356, 356, 319, 319, 87, 87,
	87, 88, 88, 89, 89, 73, 73, 591, 591, 372,
	372, 489, 489, 74, 599, 599, 599, 601, 601, 600,
	600, 91, 91, 395, 395, 92, 92, 92, 92, 92,
	92, 93, 93, 93, 93, 93, 93, 93, 94, 94,
	94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
	94, 94, 101, 101, 101, 101, 101, 102, 102, 102,
	99, 99, 99, 96, 96, 96, 95, 95, 95, 100,
	100, 100, 590, 308, 308, 98, 98, 98, 97, 97,
	97, 373, 373, 103, 103, 103, 103, 320, 104, 104,
	104, 104, 104, 104, 104, 104, 107, 107, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 491, 491, 105, 105, 105, 456, 456, 110, 110,
	110, 411, 411, 111, 111, 111, 111, 111, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 134, 134, 134,
	134, 134, 134, 134, 134, 595, 595, 365, 365, 271,
	271, 271, 271, 123, 123, 123, 123, 124, 124, 124,
	125, 125, 198, 198, 141, 141, 141, 141, 140, 140,
	140, 140, 140, 140, 140, 140, 63, 63, 63, 64,
	64, 65, 65, 66, 66, 67, 67, 68, 68, 68,
	68, 68, 144, 144, 621, 621, 146, 143, 143, 143,
	143, 143, 142, 142, 145, 145, 145, 145, 147, 149,
	149, 149, 149, 149, 148, 148, 148, 148, 148, 150,
	150, 523, 523, 381, 381, 521, 521, 542, 542, 522,
	522, 326, 326, 326, 326, 326, 327, 327, 327, 531,
	531, 531, 531, 531, 531, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 199, 199,
	200, 201, 201, 201, 201, 201, 176, 176, 176, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	382, 382, 179, 179, 179, 163, 163, 152, 152, 152,
	152, 152, 152, 152, 157, 157, 157, 157, 157, 157,
	157, 157, 153, 153, 165, 165, 165, 165, 165, 158,
	158, 159, 159, 159, 160, 160, 160, 160, 186, 186,
	162, 162, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 154, 154, 154, 154, 167, 167, 167, 167, 418,
	418, 418, 191, 191, 166, 166, 166, 166, 166, 166,
	166, 166, 166, 166, 166, 166, 166, 166, 166, 166,
	189, 189, 189, 189, 189, 189, 612, 612, 613, 613,
	613, 183, 183, 183, 183, 183, 183, 470, 470, 177,
	177, 177, 177, 182, 182, 182, 182, 185, 185, 185,
	185, 401, 401, 174, 174, 174, 175, 175, 175, 180,
	180, 181, 357, 357, 178, 178, 184, 184, 184, 184,
	155, 155, 155, 155, 155, 155, 155, 155, 156, 156,
	156, 156, 187, 187, 173, 173, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 631, 631, 169,
	169, 169, 168, 168, 168, 168, 171, 171, 172, 172,
	172, 172, 172, 172, 170, 161, 190, 592, 592, 588,
	588, 588, 588, 588, 588, 588, 588, 589, 589, 589,
	589, 594, 594, 115, 115, 115, 115, 115, 115, 115,
	126, 126, 126, 126, 126, 126, 126, 129, 129, 116,
	116, 116, 116, 116, 116, 116, 119, 119, 117, 117,
	117, 117, 118, 118, 81, 81, 81, 81, 81, 15,
	15, 15, 82, 82, 262, 262, 220, 220, 220, 345,
	345, 221, 221, 334, 334, 334, 334, 218, 218, 219,
	219, 83, 83, 632, 632, 632, 605, 605, 605, 606,
	606, 606, 606, 606, 606, 328, 328, 329, 329, 436,
	436, 436, 436, 436, 332, 332, 332, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 335, 335, 246, 246,
	246, 343, 344, 344, 336, 336, 342, 341, 341, 340,
	340, 339, 339, 337, 338, 338, 338, 347, 347, 346,
	349, 349, 348, 435, 551, 551, 553, 553, 553, 553,
	553, 553, 553, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	419, 419, 633, 633, 634, 635, 549, 549, 549, 550,
	545, 545, 546, 546, 546, 546, 546, 330, 330, 331,
	331, 331, 331, 547, 548, 363, 363, 474, 552, 552,
	554, 554, 556, 636, 636, 636, 636, 636, 636, 637,
	637, 637, 434, 434, 433, 433, 354, 354, 557, 557,
	557, 557, 558, 558, 558, 558, 558, 561, 560, 559,
	559, 559, 559, 559, 85, 85, 85, 398, 398, 397,
	397, 399, 399, 399, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 195, 195, 274, 274,
	79, 79, 79, 12, 12, 12, 12, 12, 12, 12,
	289, 289, 13, 13, 13, 607, 607, 607, 84, 84,
	84, 84, 84, 84, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 597, 597, 596, 596, 275, 275,
	639, 639, 90, 90, 90, 90, 90, 90, 90, 90,
	492, 492, 493, 493, 78, 78, 78, 78, 78, 420,
	420, 417, 417, 416, 416, 362, 362, 472, 472, 472,
	473, 279, 279, 280, 280, 239, 239, 239, 31, 30,
	21, 21, 26, 26, 27, 27, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 28, 28, 49, 49, 49,
	49, 50, 50, 50, 50, 53, 53, 54, 54, 48,
	48, 48, 48, 51, 51, 44, 44, 55, 55, 55,
	55, 55, 614, 616, 616, 615, 615, 619, 619, 619,
	619, 619, 619, 617, 617, 618, 618, 622, 622, 623,
	623, 122, 122, 127, 127, 127, 127, 127, 128, 128,
	128, 128, 130, 130, 130, 130, 139, 139, 194, 194,
	194, 194, 194, 194, 194, 57, 57, 57, 57, 70,
	70, 70, 70, 137, 641, 641, 641, 138, 138, 138,
	640, 640, 272, 272, 430, 430, 431, 431, 642, 642,
	432, 432, 432, 432, 432, 265, 264, 266, 266, 267,
	267, 76, 76, 76, 255, 255, 254, 256, 256, 257,
	257, 252, 252, 534, 534, 259, 259, 259, 260, 260,
	248, 248, 249, 249, 250, 250, 251, 251, 263, 263,
	643, 643, 113, 113, 113, 197, 197, 318, 318, 318,
	427, 427, 427, 355, 355, 286, 286, 429, 429, 429,
	429, 394, 394, 394, 196, 196, 370, 370, 384, 384,
	385, 385, 486, 486, 386, 120, 120, 121, 121, 136,
	136, 224, 224, 222, 222, 222, 222, 222, 222, 222,
	222, 229, 229, 230, 230, 231, 231, 232, 233, 233,
	233, 233, 374, 374, 234, 234, 234, 223, 223, 223,
	225, 225, 225, 225, 225, 225, 225, 228, 228, 228,
	228, 235, 235, 235, 227, 227, 568, 568, 568, 570,
	570, 572, 572, 571, 571, 567, 567, 569, 569, 638,
	638, 400, 400, 400, 352, 353, 350, 350, 351, 351,
	360, 360, 358, 359, 359, 361, 361, 471, 471, 471,
	240, 240, 240, 391, 391, 391, 391, 392, 392, 423,
	423, 421, 421, 421, 421, 422, 422, 424, 424, 424,
	425, 425, 426, 426, 388, 388, 389, 389, 390, 390,
	390, 390, 452, 452, 226, 226, 226, 367, 367, 367,
	368, 368, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 443, 443, 441, 441, 441, 441, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 476, 477,
	477, 369, 369, 478, 428, 428, 586, 586, 586, 587,
	587, 469, 469, 479, 479, 479, 479, 479, 479, 467,
	467, 468, 468, 487, 488, 488, 404, 404, 404, 404,
	402, 402, 405, 405, 405, 405, 405, 403, 403, 480,
	480, 480, 480, 393, 393, 481, 481, 481, 481, 482,
	483, 483, 484, 484, 437, 438, 438, 494, 494, 494,
	494, 496, 366, 366, 366, 366, 366, 544, 543, 543,
	495, 495, 495, 495, 495, 495, 495, 495, 495, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 511, 511, 511, 511, 511, 511, 511, 497, 497,
	497, 497, 497, 501, 501, 501, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 502, 502, 507,
	507, 508, 508, 508, 503, 504, 509, 509, 509, 509,
	644, 644, 513, 513, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 499, 499, 499, 506, 506, 506, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 412, 412, 414, 414, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 446, 446, 446,
	446, 447, 447, 447, 447, 447, 447, 447, 447, 447,
	447, 447, 447, 447, 447, 447, 447, 447, 447, 447,
	447, 447, 447, 447, 447, 447, 562, 562, 562, 562,
	562, 562, 562, 562, 448, 448, 565, 565, 566, 566,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 573, 573, 574, 574, 576, 576, 577, 577, 578,
	579, 579, 579, 580, 581, 581, 575, 575, 582, 582,
	582, 582, 583, 583, 584, 584, 584, 584, 584, 585,
	585, 585, 585, 585, 458, 458, 459, 459, 465, 465,
	465, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 325, 325, 324, 276,
	276, 276, 276, 276, 276, 379, 379, 377, 377, 377,
	380, 380, 378, 378, 376, 376, 375, 375, 455, 455,
	453, 453, 457, 457, 406, 406, 512, 512, 512, 512,
	512, 512, 512, 512, 407, 407, 407, 415, 408, 408,
	409, 409, 409, 409, 409, 449, 450, 410, 410, 410,
	451, 451, 460, 464, 464, 463, 462, 462, 461, 461,
	439, 439, 440, 440, 387, 387, 645, 645, 383, 383,
	485, 485, 485, 485, 322, 322, 371, 371, 321, 321,
	313, 313, 314, 314, 314, 314, 364, 364, 466, 466,
	514, 514, 515, 515, 516, 516, 517, 517, 518, 519,
	520, 454, 454, 297, 296, 283, 284, 295, 294, 293,
	282, 285, 290, 291, 292, 287, 288, 304, 303, 302,
	253, 258, 309, 310, 310, 312, 312, 311, 311, 299,
	300, 301, 490, 281, 315, 315, 316, 316, 316, 317,
	317, 317, 317, 277, 277, 278, 278, 305, 305, 306,
	307, 307, 298, 298, 298, 268, 268, 268, 269, 269,
	270, 270, 528, 528, 525, 525, 525, 526, 526, 526,
	527, 527, 527, 527, 524, 524, 524, 524, 524, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 536, 536, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 538, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 541, 541,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 0, 6, 6, 6, 6, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	4, 4, 6, 5, 6, 5, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 3, 1, 3, 6,
	4, 6, 7, 9, 6, 2, 2, 3, 0, 8,
	6, 8, 7, 2, 0, 1, 2, 5, 0, 1,
	3, 3, 1, 1, 3, 1, 12, 3, 1, 1,
	2, 1, 4, 0, 3, 3, 0, 4, 6, 0,
	5, 7, 6, 8, 8, 2, 1, 3, 1, 3,
	2, 5, 0, 1, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 3, 3, 1, 3, 3, 3,
	6, 4, 9, 7, 12, 12, 12, 9, 2, 7,
	2, 1, 1, 1, 3, 3, 0, 3, 1, 3,
	1, 1, 3, 2, 5, 0, 7, 5, 2, 0,
	1, 2, 3, 1, 1, 2, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 2, 3, 3, 3, 3,
	3, 3, 5, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 4, 3, 6, 6, 6, 6, 6,
	8, 4, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 6, 3, 8,
	3, 4, 3, 3, 4, 3, 4, 4, 4, 3,
	5, 7, 3, 3, 4, 3, 3, 3, 3, 3,
	2, 0, 1, 0, 1, 0, 4, 3, 3, 3,
	3, 3, 6, 4, 4, 4, 3, 5, 3, 3,
	3, 3, 3, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 1, 2, 1, 2,
	1, 2, 7, 3, 2, 0, 1, 3, 3, 1,
	0, 1, 2, 2, 1, 6, 5, 1, 2, 1,
	3, 2, 0, 7, 2, 5, 0, 1, 3, 3,
	1, 9, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 6, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 1, 1, 3, 4, 6, 3, 3, 5,
	3, 1, 3, 2, 2, 2, 2, 1, 2, 2,
	5, 3, 3, 6, 6, 3, 1, 1, 1, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 3, 5, 7, 2, 3, 0, 3, 5,
	2, 3, 0, 2, 3, 2, 3, 2, 6, 4,
	7, 7, 7, 9, 10, 5, 2, 6, 4, 7,
	7, 7, 10, 5, 2, 2, 1, 1, 3, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 2,
	4, 3, 2, 2, 1, 2, 1, 3, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 3, 5,
	4, 6, 4, 3, 0, 1, 3, 2, 4, 2,
	4, 1, 6, 3, 1, 1, 5, 3, 3, 2,
	2, 6, 3, 3, 3, 3, 4, 4, 3, 1,
	3, 3, 2, 2, 1, 3, 3, 3, 1, 2,
	1, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 2, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 1, 1, 1, 2, 2, 2,
	1, 3, 3, 3, 3, 3, 2, 3, 3, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 3, 5, 7, 3, 3, 3, 4, 4, 6,
	5, 5, 5, 3, 4, 4, 3, 4, 4, 3,
	4, 4, 5, 3, 5, 5, 5, 7, 3, 3,
	3, 4, 6, 4, 2, 6, 4, 3, 2, 3,
	4, 3, 5, 3, 6, 5, 6, 3, 5, 6,
	3, 5, 3, 5, 3, 3, 4, 4, 5, 0,
	1, 1, 1, 1, 3, 2, 3, 4, 3, 4,
	3, 5, 3, 4, 4, 3, 4, 5, 3, 4,
	3, 4, 4, 5, 3, 3, 1, 1, 0, 2,
	3, 5, 4, 6, 4, 6, 4, 1, 0, 3,
	4, 4, 5, 7, 5, 3, 3, 3, 4, 4,
	5, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 5, 2, 0, 3, 3, 4, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 3, 4, 5,
	4, 4, 2, 3, 2, 3, 6, 6, 7, 9,
	7, 9, 4, 3, 4, 4, 5, 1, 1, 10,
	10, 3, 5, 5, 5, 3, 5, 6, 4, 4,
	5, 5, 2, 3, 2, 5, 4, 2, 0, 1,
	1, 1, 1, 3, 2, 2, 2, 2, 2, 2,
	1, 2, 0, 1, 2, 1, 2, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 2, 4, 3, 3,
	7, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 3, 3, 6, 5, 8, 3, 6,
	6, 3, 13, 16, 1, 0, 1, 2, 3, 0,
	2, 0, 4, 0, 4, 5, 4, 3, 3, 1,
	3, 10, 13, 0, 2, 3, 1, 1, 0, 1,
	2, 2, 2, 2, 1, 1, 0, 1, 3, 1,
	1, 1, 2, 3, 3, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 8, 0, 1, 1,
	0, 2, 1, 0, 1, 0, 1, 1, 0, 1,
	4, 1, 0, 3, 7, 7, 1, 1, 3, 7,
	1, 3, 11, 3, 2, 0, 3, 1, 2, 2,
	3, 2, 6, 2, 1, 2, 2, 2, 8, 4,
	2, 3, 5, 5, 5, 2, 5, 5, 2, 2,
	2, 0, 1, 1, 3, 4, 11, 12, 9, 5,
	3, 1, 5, 10, 7, 11, 3, 3, 0, 2,
	4, 3, 3, 1, 5, 1, 3, 1, 2, 0,
	1, 2, 2, 0, 1, 3, 3, 2, 2, 1,
	1, 1, 4, 0, 6, 0, 3, 0, 2, 2,
	2, 0, 1, 1, 2, 2, 0, 3, 3, 2,
	1, 1, 2, 2, 5, 8, 4, 1, 0, 1,
	2, 2, 1, 2, 3, 3, 2, 2, 3, 2,
	2, 2, 2, 2, 3, 1, 4, 2, 2, 2,
	4, 7, 3, 4, 6, 5, 7, 5, 5, 3,
	3, 0, 2, 2, 2, 1, 1, 1, 8, 10,
	11, 7, 10, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 3,
	0, 1, 8, 11, 3, 6, 6, 5, 3, 4,
	1, 0, 1, 3, 17, 20, 16, 19, 4, 2,
	0, 1, 0, 1, 0, 1, 3, 2, 4, 2,
	3, 1, 0, 2, 0, 1, 1, 0, 9, 6,
	6, 8, 6, 8, 5, 7, 2, 6, 7, 4,
	4, 5, 2, 4, 6, 6, 8, 6, 7, 8,
	9, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	7, 8, 9, 6, 8, 6, 8, 6, 6, 8,
	8, 4, 7, 3, 0, 7, 10, 1, 1, 1,
	1, 2, 2, 3, 0, 3, 0, 1, 0, 2,
	0, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 0, 2, 4, 2,
	1, 0, 2, 1, 1, 0, 1, 3, 1, 0,
	1, 1, 1, 1, 1, 2, 3, 2, 2, 1,
	2, 13, 16, 3, 1, 0, 4, 1, 0, 2,
	2, 3, 0, 1, 1, 4, 4, 5, 1, 0,
	3, 0, 3, 0, 3, 0, 3, 0, 4, 0,
	1, 0, 6, 7, 3, 6, 3, 1, 3, 1,
	1, 4, 2, 1, 3, 1, 3, 4, 8, 11,
	5, 2, 2, 0, 10, 3, 2, 0, 1, 3,
	1, 1, 3, 3, 5, 6, 4, 5, 4, 1,
	1, 3, 3, 1, 2, 4, 4, 2, 3, 5,
	5, 1, 3, 1, 0, 1, 2, 3, 2, 4,
	2, 3, 0, 2, 0, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 8, 8, 8,
	2, 4, 4, 4, 2, 2, 2, 2, 3, 1,
	3, 1, 2, 6, 7, 1, 0, 1, 0, 1,
	0, 1, 1, 0, 1, 5, 1, 0, 1, 0,
	1, 0, 3, 3, 5, 1, 3, 3, 4, 5,
	2, 2, 0, 2, 2, 1, 1, 1, 0, 1,
	0, 2, 2, 5, 4, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 3, 1, 3,
	3, 3, 2, 0, 4, 2, 5, 3, 2, 0,
	1, 3, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 1, 3, 2, 4, 4, 0, 4,
	4, 3, 4, 1, 5, 3, 4, 5, 5, 1,
	5, 1, 3, 2, 0, 3, 0, 2, 3, 1,
	3, 2, 0, 3, 5, 6, 4, 6, 4, 3,
	2, 1, 0, 5, 1, 0, 2, 2, 2, 1,
	1, 0, 1, 1, 1, 1, 0, 4, 2, 1,
	2, 2, 4, 1, 3, 1, 2, 3, 2, 4,
	1, 0, 1, 0, 2, 1, 0, 2, 5, 7,
	2, 1, 2, 4, 3, 5, 0, 1, 3, 5,
	1, 2, 1, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 6, 6, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 3, 0, 5,
	4, 1, 2, 1, 4, 1, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 2, 5, 1, 4, 2,
	5, 1, 4, 3, 3, 0, 1, 2, 4, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 1, 0, 1, 4, 1, 3, 3, 3,
	5, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 3,
	3, 3, 2, 2, 3, 5, 4, 6, 3, 5,
	4, 6, 4, 6, 5, 7, 3, 3, 3, 3,
	3, 4, 3, 2, 4, 2, 3, 3, 4, 3,
	4, 3, 4, 5, 6, 6, 7, 6, 7, 6,
	7, 3, 4, 4, 1, 3, 1, 3, 3, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 3, 5, 6, 6, 7, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 6, 1, 1, 1,
	1, 1, 1, 2, 1, 5, 5, 6, 3, 1,
	1, 1, 2, 2, 2, 4, 3, 5, 6, 8,
	6, 5, 4, 3, 2, 2, 4, 1, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 6, 8, 8, 6, 4, 6, 6,
	6, 4, 1, 3, 3, 3, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 3, 3, 4, 3, 4, 3, 4, 3, 4,
	4, 3, 6, 5, 5, 5, 4, 4, 3, 4,
	3, 5, 0, 5, 0, 2, 0, 1, 3, 3,
	2, 2, 0, 6, 1, 0, 3, 0, 3, 3,
	3, 0, 1, 4, 2, 2, 2, 2, 2, 3,
	2, 2, 3, 0, 4, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 1,
	1, 1, 2, 1, 2, 2, 3, 1, 2, 3,
	2, 3, 2, 3, 1, 0, 1, 3, 1, 3,
	3, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 3, 1, 2, 3, 0,
	3, 3, 2, 2, 1, 2, 2, 3, 2, 1,
	1, 1, 5, 1, 2, 4, 2, 0, 1, 0,
	3, 5, 1, 0, 1, 2, 1, 0, 1, 3,
	3, 2, 1, 1, 1, 3, 1, 3, 3, 1,
	1, 1, 1, 5, 3, 1, 1, 3, 1, 1,
	1, 1, 2, 2, 1, 1, 2, 2, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 7, 1,
	7, 5, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 0,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 604, -106, -103, -71, -69, -110, -111,
	-92, -112, -105, -134, -139, -120, -121, -122, -135, -141,
	-194, -199, -200, -201, -3, -56, -58, -72, -91, -93,
	-104, -114, -113, -115, -123, -131, -126, -109, -63, -136,
	-140, -151, -195, -196, -197, 32, 31, 100, 80, 155,
	129, 138, 204, 388, 433, 445, 403, 143, 424, 408,
	-145, -146, 463, -57, -70, -138, -137, 73, 130, 418,
	-4, -12, -16, 29, 46, -59, -60, -61, -62, 62,
	-79, -75, -86, -80, -73, -74, -77, -626, 102, -569,
	-94, -97, -130, -630, 162, 222, -116, -117, -118, 370,
	-124, -125, 426, -127, -128, -129, 429, 163, -65, -64,
	157, -222, -224, -143, -142, -144, -198, -152, -153, -154,
	-155, -156, -157, -158, -160, -186, -161, -162, -163, -164,
	-165, -166, -170, -189, -167, -168, -169, -172, -171, -173,
	-178, -174, -175, -176, -177, -179, -180, -182, -183, -184,
	-185, -187, -188, 468, -181, -190, -159, 529, 49, 483,
	82, 147, 437, 21, -5, -6, -7, -8, -9, -10,
	-11, -15, -14, -55, -76, -78, -81, -82, -83, -90,
	-84, -85, -568, -95, -96, -99, -101, -102, -98, -100,
	425, -225, -223, 601, 544, -18, -23, -24, -19, -20,
	-22, -25, -21, -26, -27, -28, -40, -45, -46, -42,
	-43, -41, -44, -47, -48, -49, -50, -51, -52, -53,
	-54, -30, -36, -37, -31, -32, -33, -34, -35, -38,
	-39, -17, -29, 565, 574, -228, -226, -227, -235, 455,
	552, 503, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, -320, 2, -299, -305, -306, -307,
	-298, -268, -538, -541, 4, -535, -539, 169, 232, 334,
	21, 23, 22, 24, 25, 26, 27, 29, 30, 41,
	42, 44, 45, 46, 47, 48, 49, 53, 55, 59,
	60, 61, 62, 63, 64, 68, 73, 74, 79, 80,
	81, 82, 83, 84, 85, 91, 88, 89, 90, 92,
	94, 96, 97, 98, 99, 100, 101, 103, 104, 105,
	107, 108, 109, 117, 118, 119, 120, 121, 123, 129,
	124, 130, 133, 128, 132, 134, 136, 137, 138, 141,
	142, 143, 145, 146, 148, 149, 150, 152, 153, 155,
	156, 157, 160, 158, 511, 159, 161, 162, 163, 164,
	167, 175, 176, 177, 182, 184, 185, 186, 190, 191,
	192, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	205, 209, 211, 212, 213, 214, 215, 221, 222, 224,
	225, 226, 227, 228, 233, 234, 235, 239, 236, 245,
	246, 250, 251, 252, 254, 258, 259, 260, 261, 262,
	263, 265, 267, 266, 269, 272, 273, 276, 277, 278,
	279, 280, 281, 285, 286, 282, 287, 288, 290, 291,
	294, 292, 295, 296, 293, 297, 299, 300, 301, 302,
	303, 304, 305, 306, 307, 308, 309, 310, 298, 313,
	311, 315, 316, 317, 318, 332, 327, 328, 329, 322,
	323, 319, 324, 320, 321, 325, 326, 331, 336, 337,
	340, 219, 342, 343, 346, 364, 350, 351, 352, 355,
	356, 359, 362, 363, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 375, 376, 378, 379, 380, 382, 383,
	384, 386, 388, 389, 391, 392, 394, 395, 396, 397,
	398, 399, 400, 402, 403, 405, 404, 406, 408, 410,
	411, 412, 418, 424, 420, 421, 422, 423, 425, 426,
	427, 428, 429, 431, 432, 433, 435, 436, 437, 438,
	439, 441, 443, 444, 448, 449, 465, 466, 485, 445,
	446, 447, 450, 451, 452, 453, 454, 458, 456, 457,
	459, 460, 461, 463, 464, 467, 468, 470, 471, 472,
	473, 474, 475, 476, 479, 481, 482, 483, 502, 484,
	486, 490, 491, 492, 493, 487, 488, 501, 495, 496,
	498, 499, 504, 505, 506, 507, 508, 509, 510, 512,
	514, 522, 523, 524, 526, 529, 530, 531, 532, 520,
	534, 535, 538, 539, 540, 543, 541, 542, 544, 546,
	549, 550, 551, 557, 556, 558, 560, 561, 566, 567,
	569, 570, 571, 36, 50, 51, 54, 56, 58, 69,
	70, 71, 75, 125, 126, 154, 165, 166, 178, 193,
	194, 206, 208, 216, 217, 218, 240, 241, 243, 248,
	270, 339, 341, 357, 361, 377, 381, 385, 387, 401,
	440, 477, 489, 494, 515, 516, 517, 518, 525, 527,
	552, 553, 554, 559, 568, -320, 2, -299, 348, -292,
	2, -268, -268, 388, 28, 2, 28, 376, 457, 506,
	508, 2, -595, -365, 2, 28, -271, -268, 102, 204,
	455, -292, 2, -595, -365, 25, 2, -268, 2, 362,
	22, 27, 66, 77, 98, 141, 164, 187, 190, -629,
	364, 395, 443, 459, 501, 512, 526, 2, 556, 291,
	456, 503, 232, 120, 531, 450, -607, 448, 449, 362,
	393, 435, 207, 545, -272, 2, 445, -268, 291, 2,
	604, 94, 74, 440, 460, -148, 2, 281, 523, -149,
	-150, -147, 515, -523, 450, 435, 313, -268, 604, 604,
	604, 28, -281, -268, 503, 232, 450, 120, 499, 604,
	2, 503, 367, 556, 456, 120, 398, 232, 531, 190,
	141, 27, 450, -607, 579, 580, 291, 127, -593, 2,
	-588, 4, -539, -535, -314, -313, 503, 509, 120, -307,
	-298, 594, -306, 604, 604, 604, 604, 2, 251, 252,
	397, 396, 460, 461, 28, 604, 604, 604, 604, 448,
	2, 164, 22, 27, 66, 93, 98, 127, 187, 190,
	353, -627, 364, 395, 459, 501, 505, 512, 526, -606,
	484, 68, 423, 450, -605, -607, 291, 531, 141, -416,
	120, 281, 202, 539, 508, 506, 537, 133, 239, 542,
	541, 604, 604, -107, 2, 601, 32, 31, -106, -110,
	143, 463, -217, 503, 244, 2, -268, 604, 604, 604,
	2, 251, 252, 448, 449, 28, 604, 604, 188, -588,
	2, 604, 604, 604, 2, 28, 251, 252, 448, 449,
	244, 2, 68, 452, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	2, -192, 460, 484, 213, 47, 46, 74, 28, 394,
	79, 368, 121, 127, 149, 532, 205, 232, 233, 259,
	93, 94, -418, 44, 252, 68, 251, 449, -612, 448,
	-470, 504, 451, 457, 498, 263, 445, 523, 102, 546,
	436, 571, 398, 399, 496, 412, 282, 158, 189, 4,
	120, 313, 435, 462, 267, 266, 515, 281, 444, 371,
	84, 604, -638, 2, 503, -640, 2, 523, 523, 2,
	-640, 2, -640, 2, -640, 2, -641, 523, 568, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, -223, -225, -224,
	604, 604, 604, 604, 604, 604, 604, -192, 460, 2,
	74, 28, -358, -360, 536, 242, 151, 354, -222, -224,
	2, -568, -521, 2, -444, -542, -446, 592, 593, 585,
	500, 67, -324, 333, 572, -458, 127, 537, 348, -541,
	-447, -460, 154, 364, 440, -380, 8, 9, 5, 6,
	7, -277, -448, -454, 528, 168, 338, -317, 605, 10,
	601, -565, -224, -459, 37, 208, 65, -525, -316, -278,
	-497, 243, -315, -298, -562, -563, 4, -535, -536, -526,
	-500, -508, -504, -505, -511, -268, -538, 77, 111, 112,
	110, 115, 114, 284, 283, 116, 113, 462, 545, 66,
	36, 216, 217, 248, 339, 218, 75, -564, 142, -537,
	240, 241, 477, 51, 401, 178, 126, 125, 341, 56,
	54, 553, -509, 122, 515, 516, 517, 518, 193, 194,
	58, 165, 166, 361, 385, 494, 525, 527, 206, 270,
	43, 106, 189, 238, 220, 247, 249, 253, 271, 274,
	314, 330, 335, 358, 360, 434, 469, -644, 554, 489,
	69, 70, -570, 404, -571, -292, -570, 604, 604, 606,
	604, -350, -352, -353, 2, 28, 139, 601, 2, -475,
	2, -476, -480, -224, 264, -479, 601, -477, 599, -299,
	349, -566, 441, -562, -563, -277, -298, -316, 4, -535,
	-537, 603, -354, 601, 120, 450, 503, 78, 232, 93,
	164, -411, 601, -268, 28, 348, 519, 606, -351, 392,
	-456, 601, 348, 188, 351, 60, 295, 2, 2, 2,
	2, 2, 216, -268, 503, 119, 2, 262, 2, 2,
	2, 2, 2, 2, 2, -373, 216, 2, -299, 556,
	-373, 216, 2, -373, 216, 2, -417, 2, 87, -282,
	216, 2, -268, -308, 216, 2, -303, -305, -312, 216,
	2, -310, -268, -530, 216, 2, -529, 4, -535, 116,
	462, -444, 2, -136, 2, 60, -268, 556, 2, 465,
	2, 601, -148, 2, 71, 523, 43, 460, -149, 2,
	-431, 2, -432, -264, -265, -266, -487, -267, 250, 391,
	400, 575, 131, 333, 571, -621, 188, 584, 519, -521,
	-521, -521, -381, 603, 2, 2, 2, 2, 2, 2,
	-480, 216, -299, 2, -296, -524, 4, -535, -539, -536,
	-540, -538, 28, 31, 32, 33, 35, 37, 38, 39,
	40, 57, 65, 66, 72, 76, 78, 87, 93, 102,
	110, 111, 113, 112, 114, 115, 116, 127, 131, 135,
	139, 140, 144, 147, 151, 168, 170, 183, 187, 188,
	204, 207, 210, 223, 237, 242, 244, 264, 268, 275,
	283, 284, 333, 338, 344, 348, 349, 353, 354, 374,
	390, 407, 430, 455, 462, 480, 497, 503, 513, 519,
	521, 528, 536, 537, 545, 547, 555, 562, 563, 564,
	565, -541, 77, 2, -480, 216, 2, -302, 216, -480,
	-305, 2, -282, 2, -295, -524, 2, -321, 216, -299,
	-301, -305, -303, 2, 2, 2, 2, -310, 2, -529,
	216, 2, 28, 28, 556, 392, 244, 519, 606, -371,
	-313, -314, -520, 8, -364, -268, 603, -444, 2, -136,
	-119, 2, 183, -444, 216, 2, -136, 216, 2, -444,
	216, 2, -136, 216, 2, -268, 2, -608, 2, -532,
	216, -528, 10, -527, 5, 4, -535, -539, -536, 216,
	-268, 2, 295, 2, 2, 526, 2, 98, 503, 119,
	2, 422, -628, 443, 530, 2, 2, 2, 2, 2,
	2, 2, 503, -287, 2, -268, 183, 487, -310, 216,
	-311, 2, 456, -639, 404, -529, 216, 2, 556, -303,
	216, 2, -303, 232, 246, -282, 216, 2, 508, 506,
	508, 506, 188, 2, 244, 2, 244, 2, -481, 2,
	-482, -476, -483, 599, 349, -491, 2, -490, -527, 552,
	-107, 601, -107, 601, 460, 601, -532, -299, -299, -444,
	2, -136, -119, 2, -444, 2, -136, 2, -268, 2,
	-133, -532, -132, 601, 188, -268, 2, -444, 2, -136,
	-119, 2, -444, 2, -136, 2, -217, 183, 2, 120,
	503, -192, 2, 183, 547, 2, 8, 2, 223, -532,
	451, 399, 175, 2, 465, 2, 466, 74, -418, 571,
	74, 188, 2, 188, 2, -401, 2, 565, 392, 188,
	2, 2, -592, 2, 348, 188, 2, 188, 2, 188,
	2, 188, 2, 188, 2, -191, 461, 524, 502, 396,
	252, 2, -136, 562, -119, 252, 251, -444, 562, 2,
	-613, 183, 449, -444, 2, 522, 261, 159, 188, -401,
	2, 188, 2, 188, 2, 5, 2, 397, 485, 2,
	250, 391, 485, 2, -299, 503, 556, 456, 120, 28,
	2, 448, 2, 2, 88, 89, 188, 2, 188, 2,
	203, 188, 2, 188, 503, -382, 603, 571, 2, -393,
	-480, -430, -431, -430, 519, -358, -360, -192, 465, 2,
	-229, -391, -231, 183, -421, -422, -232, 275, 170, 344,
	-233, -400, 28, 139, -400, -400, 60, 602, 602, 11,
	12, 76, 41, 592, 593, 594, 595, 181, 596, 597,
	590, 591, 589, 582, 583, 587, 256, 257, 95, 586,
	584, 86, 289, 442, 171, 172, 173, 174, 419, 230,
	34, 231, 14, 15, 16, -324, 33, 353, 274, 572,
	220, 469, 585, 17, 18, 19, 247, 249, 335, 50,
	223, -276, 364, -323, 500, 67, -444, -444, -444, -444,
	-444, -444, -444, -444, 360, 601, -387, -439, 599, -224,
	601, 601, 601, 601, -520, -224, -444, -458, 602, -378,
	601, -224, -458, -453, 601, 440, 599, 601, -461, -444,
	5, 5, 5, 601, 603, -573, 566, 183, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 387, -502, 601, -501, 601, -501,
	-501, 557, -499, 601, 574, 567, 601, -499, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 557, 606, -570, -354, 601, -383, -485, -444, 594,
	-383, -383, 348, -375, -444, 106, -404, 253, 314, 189,
	271, 434, 238, -441, 605, -441, -469, 574, -224, -477,
	-298, -224, -479, 601, -475, -469, -108, -520, -91, -104,
	-113, -136, -151, -196, -197, 594, -299, 601, 188, 601,
	603, -524, 188, -364, -282, -309, -268, -299, -315, -316,
	-321, -293, -268, 2, 138, -375, -588, 531, 450, 28,
	456, -530, -271, 38, -455, -494, -495, -544, 605, -543,
	-497, -507, -503, -506, 377, 381, -526, 54, 553, -509,
	243, 4, -535, -537, 240, 241, 477, 51, 401, 178,
	126, 125, 341, 56, 515, 516, 517, 518, 193, 194,
	58, 554, 489, 69, 70, -588, 531, 450, 28, 456,
	-530, 183, -530, 2, 2, 154, 2, 2, 2, -268,
	-245, 606, 64, 427, 154, -373, 216, -245, 154, -245,
	154, -322, 216, -321, -245, 154, -245, 606, 154, -245,
	606, 154, 603, 606, 154, -530, 2, -417, -523, -375,
	38, -431, 2, 127, 4, 5, -642, 606, 273, -327,
	288, 332, 212, 349, 569, 342, 131, -531, 5, 4,
	-454, -466, 127, 281, 243, -514, -516, 8, -515, 9,
	-517, 592, 593, -522, -521, 109, 603, -524, -242, 420,
	463, 363, -241, 24, 29, 143, 234, 318, 550, 160,
	-340, 235, -337, 367, 154, 481, 540, -602, -603, 447,
	510, 511, 90, 342, 463, 363, 420, 154, -397, -399,
	38, 118, 318, 362, 61, 227, 293, 294, 483, 559,
	154, 463, 363, 420, 363, -13, -257, 24, 143, -259,
	-254, 463, -603, 99, 420, 578, 425, 373, 495, 390,
	-603, -244, 481, 540, -602, -603, 447, 420, -243, -342,
	-337, 367, 154, 605, 24, 143, 420, 463, 363, -624,
	-625, 29, 420, 363, -596, -289, -567, 223, 565, 154,
	-289, -289, -480, 216, -617, 183, 2, -610, -132, 265,
	5, 10, -532, -132, -371, 606, 606, -524, 594, 449,
	448, 154, 154, 154, 154, 252, 183, 333, 333, 2,
	2, 2, 2, 2, 190, -605, -629, 2, 2, -299,
	216, -356, 348, -591, -372, 503, -299, 183, 333, 43,
	-302, 216, 2, -305, 556, -596, 333, -304, 216, -299,
	38, 601, 333, 2, -417, 2, 232, -567, 333, -481,
	-318, -299, -476, -318, 463, -292, 38, -441, -299, 602,
	606, -491, -491, -532, -205, 565, 188, 102, 601, 601,
	-217, 565, 565, 252, -488, 606, -487, 223, -533, -532,
	-133, -532, 423, 252, -532, -591, -282, 2, -299, 2,
	503, 254, -532, -205, 223, -532, -532, -532, -523, 28,
	466, 2, -191, 461, 524, 89, 466, 2, -299, 503,
	120, 232, 80, -617, 183, 2, -268, -594, 183, -589,
	435, 450, 531, -588, -299, 120, -299, 120, -299, 120,
	-299, -299, 2, 2, 2, 2, 2, 85, 2, -136,
	-444, 2, 85, 2, 46, 482, -613, 183, 2, 522,
	2, 522, 2, -268, -268, -268, 484, 273, -299, -299,
	-299, -300, -305, 504, 451, 449, -444, 2, -631, 2,
	188, 183, 2, 503, 232, 503, 232, 120, 188, 74,
	120, 28, 503, 446, 603, 4, -245, 606, -272, -229,
	-391, -523, -392, -391, -230, -229, -232, 183, 400, 541,
	318, 467, 258, -422, -421, 28, -444, -426, 177, 317,
	-444, -424, -446, 592, 593, -515, -517, -374, 342, -223,
	-223, -223, -361, -471, -444, 390, 232, -496, -494, -494,
	-297, -524, 515, -444, -444, -444, -444, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -444, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -444, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -444, -444, -444, 274,
	220, 469, 50, 223, -444, 519, -444, -444, -444, -444,
	311, 333, 338, 528, 168, 538, 139, 342, -645, 497,
	40, -451, -224, -379, 601, -465, 35, 480, 28, -458,
	601, 2, -439, -444, -440, -325, -323, -268, 592, 593,
	594, 595, 596, 597, 582, 583, 584, 14, 15, 16,
	587, 591, 589, 590, 181, 95, 586, 289, 442, 86,
	171, 172, 173, 174, 256, 257, 17, 18, 19, 34,
	585, -376, -375, -375, 602, 555, 28, 139, 594, 2,
	602, 606, 38, 602, -444, -376, -457, -453, -375, -464,
	-463, 562, -412, -413, 570, 298, 123, 214, 296, -414,
	454, -518, 8, -524, 594, -574, 176, 207, 601, 602,
	2, 602, 2, 602, -444, 2, 602, -444, 2, 602,
	-444, 2, 602, -444, 2, 602, 2, 602, 2, -444,
	-444, -444, -444, -444, -444, -444, -375, 8, -518, -518,
	515, 515, -518, -518, -518, -510, 377, 378, 379, 380,
	276, 277, 278, 279, 381, 382, 383, 384, 303, 304,
	305, 306, 299, 300, 301, 302, 307, 308, 309, 310,
	198, 199, 200, 201, 194, 195, 196, 197, -510, -406,
	2, -512, -375, 4, 570, 298, 123, 214, 296, 454,
	5, -406, 2, -407, 2, -444, -375, -408, -445, -446,
	592, 593, 585, -324, -458, -409, 2, -444, -376, -444,
	57, 268, 521, -410, -444, 188, -375, -375, 2, -375,
	2, -571, 38, -375, -367, 606, 188, 38, 4, -367,
	-367, 601, 602, 606, -405, 211, 292, 287, 246, -405,
	-475, -404, 253, -402, 358, -402, -402, -469, -283, 599,
	607, -524, -469, -468, -467, 38, -292, 355, -469, -469,
	603, 602, -468, 600, -586, 601, 604, 604, 604, 604,
	604, -299, 601, -375, -524, 603, 486, 2, 602, 247,
	247, 247, 247, 247, 348, 441, 602, 519, -590, -308,
	-312, 504, 2, 565, -106, 350, 602, 606, -366, 37,
	599, 603, -518, 2, 2, -513, 557, 601, 601, -413,
	601, 188, -590, -312, 504, 2, -365, 519, -268, 2,
	-299, -373, -245, 154, -373, -373, -245, 606, 154, -282,
	-303, -308, -310, -312, -268, -529, -530, -245, -304, -621,
	602, 523, -432, -326, 400, 479, 421, 458, 499, 8,
	9, 8, 9, 606, -524, 606, -622, 93, 519, 78,
	450, -261, 282, 519, -435, 216, 78, -545, -285, 93,
	-546, -268, 72, 537, 390, 187, 152, -622, 93, 390,
	-622, 93, 2, 234, 93, 463, 484, 28, 60, -480,
	41, 41, 28, -620, 331, 269, 561, 188, 571, 503,
	232, 450, 519, 519, -480, -399, -494, 118, 293, 294,
	60, -519, -514, 592, 593, -519, 60, -519, -519, -519,
	565, -302, -480, 450, 519, 519, 519, 410, 410, -254,
	-149, 519, 519, 28, -192, 428, 127, -643, 584, 410,
	606, 41, 41, 28, -620, 331, 269, 188, 519, -321,
	-283, 551, 42, 551, 42, 551, 519, 42, 450, 519,
	606, 42, 519, 519, -13, 463, -597, -273, 105, 324,
	286, 325, 97, 321, 96, 320, 103, 322, 104, 323,
	558, 336, 63, 319, 297, 326, -274, -275, 369, 549,
	120, -529, -13, -13, 463, 363, 420, 154, -618, 223,
	28, -607, 223, -488, 223, -488, -313, -268, 603, -136,
	-444, -444, -136, -444, -136, 46, 154, 154, 2, -639,
	262, 601, -330, 333, 188, -364, -489, 244, 606, -372,
	-588, 154, -529, -398, -397, 333, -304, 216, 2, 154,
	-354, 333, 148, 601, 398, 2, 154, -284, 216, -269,
	-268, -417, -248, 507, 154, -395, 547, -427, -136, 601,
	127, 38, -427, -384, -385, -486, -386, -285, 601, -292,
	-441, -107, -490, 602, 602, 602, -204, 352, -203, -268,
	5, -217, 547, -329, -436, -435, -549, -550, -545, 274,
	232, 537, 246, 169, -355, -286, -285, 119, 402, 402,
	-211, 565, -132, -133, 602, 606, -488, 223, 487, -205,
	-205, -488, -488, -299, 183, -532, -205, -205, -205, 2,
	2, 2, 2, -401, -299, -282, -321, -299, 28, 603,
	-530, -530, -312, -308, -401, -282, -401, -282, -401, -282,
	-401, -401, -136, -444, 484, 2, 460, 183, 183, 603,
	-401, -357, 430, 2, 398, 120, 503, 367, 232, -299,
	-321, -299, -321, -282, 120, -282, 121, -299, 4, -480,
	-392, -230, 349, 258, 467, -424, -425, -446, 440, 441,
	-425, 440, 441, 8, 9, 8, 9, -234, 471, 337,
	-373, 606, -239, 39, 135, 258, -299, 571, 150, -444,
	-444, 519, -645, 497, -451, 150, -444, 311, 338, 528,
	168, 538, 139, 342, 188, 601, -445, -445, 602, -377,
	-444, -444, 600, 609, 602, 603, 602, -360, 606, -358,
	-444, -375, -375, 602, 603, -375, -364, 600, 600, 606,
	602, -462, -463, 144, -444, 519, 519, 519, 519, 601,
	602, 603, -579, 359, 601, 601, -444, 602, 602, 602,
	602, 38, 606, 606, 606, 602, 606, 606, 606, 602,
	602, 602, 606, 602, 571, 571, 602, 602, 602, 602,
	606, 602, 606, 602, 188, 602, 602, -415, 374, 602,
	11, 12, 592, 593, 594, 595, 181, 596, 597, 590,
	591, 589, 582, 583, 584, 86, 289, 442, 14, 15,
	16, -324, 247, 223, -445, -445, -445, -445, 602, -449,
	-450, 188, 183, 38, -410, -410, -410, 602, 188, -375,
	602, 602, 601, -572, 291, 333, 602, -438, -437, 563,
	-485, -368, 2, -475, -294, -524, -438, -438, -375, -444,
	253, 253, -403, 547, 348, -405, -475, -468, -520, -443,
	-442, 185, 39, 135, 327, 328, 329, 219, 186, -468,
	-292, -354, -468, -468, -524, -469, -469, -467, 602, -587,
	-520, 602, -369, -478, -566, -360, 603, -524, -214, -567,
	-193, 5, 338, -193, -193, -193, -193, -299, -530, 519,
	519, 223, 25, 375, -494, 599, 600, 8, -524, 601,
	-518, -518, -518, -530, 188, 188, 223, 188, -529, 2,
	-245, -373, -245, -245, -321, -322, -245, -245, -245, -396,
	565, -521, -431, 535, 83, 400, 515, -521, -241, 420,
	-285, -285, -299, -309, 202, 411, -529, 333, -435, 216,
	-247, 333, -494, -293, 601, -419, 567, 258, 258, 547,
	-285, -293, 258, 216, -285, 216, -293, 2, -293, -598,
	400, 343, -444, 60, -338, 280, 398, 334, -242, 420,
	463, 363, -136, -136, -136, -136, -136, 601, -621, 547,
	138, -299, -321, -299, -309, -529, -304, 463, 363, 420,
	330, -315, -519, -519, -397, 463, 363, 420, -309, -529,
	-302, -529, -253, 216, -268, -253, 216, 450, -282, 410,
	571, 45, -643, -243, -136, -136, -136, -136, -136, 601,
	-283, -244, 420, 5, 216, -285, 5, -285, 216, 5,
	-268, -285, -309, -529, -625, 24, 143, -285, -309, -529,
	-273, -532, 338, 543, -282, -596, -289, 450, 519, 519,
	-480, -614, -615, 204, 433, 450, 436, -530, -132, -208,
	565, -132, -202, 228, 594, -593, -532, -268, 556, -268,
	-328, -331, -329, -285, -220, -221, 567, 565, 154, -319,
	-299, 599, -205, -532, -299, -489, -310, -311, 154, -354,
	333, -529, 38, 154, 601, 2, 2, -303, 348, 333,
	-284, 216, -249, 145, -643, -282, -438, -368, -394, -429,
	430, 348, -355, 552, -292, -394, -370, 606, 188, 584,
	603, -355, -484, 594, -107, -107, -205, 606, 601, 584,
	584, 601, -532, -532, 602, 606, -247, -299, -284, 232,
	232, -291, -269, 602, 606, 603, 601, 584, 584, -213,
	352, -212, 146, 260, 245, 473, 474, 475, 476, 137,
	472, 124, 316, -488, -532, -211, -133, 188, 188, -66,
	565, 503, -205, 605, 436, -268, -401, -401, -401, 460,
	460, -268, -364, -295, -282, -299, -296, -321, 183, 183,
	-282, 541, -425, 349, 285, -471, -240, 573, -299, 605,
	-444, -444, 150, 150, -444, -445, -445, -444, 150, 188,
	601, -444, -455, 33, 33, 602, 606, -440, -444, -323,
	602, 555, -360, -360, 602, 594, -524, 605, 602, -453,
	147, -444, 513, 298, 214, 296, -414, 296, -414, -414,
	-518, 5, -524, 594, -580, -288, 601, -268, 563, -359,
	354, 602, -496, -494, -444, -444, -444, -444, -444, -518,
	-499, -499, -514, -514, -444, -449, -444, -496, -494, -445,
	-445, -445, -445, -445, -445, -445, -445, -445, -445, -445,
	-445, -445, -445, -445, -445, -445, -445, -445, -445, 139,
	333, 342, -445, -450, -449, -444, -444, -494, 602, 602,
	602, -375, -106, 601, 291, -388, 207, -444, -488, 606,
	-388, -388, 602, -475, -475, 601, -444, 253, 600, 606,
	608, 584, 584, -354, 603, -467, -468, 600, 602, 606,
	602, 606, -428, 38, 602, -524, -438, -216, -215, 136,
	53, 107, 134, 338, 247, -530, -530, 450, 351, 5,
	8, 599, 600, 603, -518, 602, 602, 602, -530, -530,
	450, -530, -245, -245, 119, 318, -444, 519, 519, 60,
	223, 154, 333, 549, -551, -546, 152, -444, 601, 232,
	601, 601, 2, -236, -237, -238, 143, 463, 24, -623,
	2, 547, 154, -245, 154, -245, 569, -338, 601, 601,
	519, 450, -261, 519, 565, -375, -444, -206, 127, -523,
	-603, 605, -603, 605, 450, 519, 519, 450, 519, 519,
	333, 154, 565, 167, 167, 571, -253, 565, -375, 519,
	-498, 48, 26, 333, -303, -245, 154, 519, 519, 531,
	463, -532, 338, -13, -309, -529, -304, 463, 363, 420,
	-595, -365, -595, 204, -312, -618, -488, -210, 352, -209,
	146, 432, 137, 260, 225, -488, -208, 188, 244, 565,
	-304, 2, 602, 602, 606, -552, 38, 346, 346, 601,
	-299, -87, 565, -487, -520, -599, 565, 43, -302, 38,
	154, -596, -136, -304, -492, -493, 5, 38, -299, 154,
	348, 333, -250, 267, -643, -528, -567, -360, -394, -383,
	334, 91, 602, -438, -385, -368, -444, 2, 602, -203,
	-204, -532, -532, -532, -205, -217, -217, -436, -332, 601,
	-284, -269, 601, -217, -286, 2, -533, -532, -532, 606,
	601, 584, 584, 584, 584, 584, -211, -488, -132, -136,
	352, -299, 594, -401, -344, -343, 367, 342, -344, 440,
	440, 349, 177, 263, -239, -283, -444, -444, 150, 33,
	33, -444, -444, -455, 602, -444, -444, -375, 600, 5,
	-444, 602, 602, 8, -444, 602, 603, -581, -268, -444,
	602, 60, 602, 602, 606, 606, 602, 602, 602, 602,
	602, 602, 602, -450, 188, 139, 342, 601, 602, 602,
	-106, -452, 210, 60, -475, -452, -452, -403, -364, -475,
	-442, -283, 599, -283, 599, -524, -520, -478, 601, 603,
	-215, 584, -532, -532, -193, 565, -312, 600, 2, 599,
	-524, 602, -312, 119, -285, -285, 503, 440, -253, 390,
	-435, 154, -553, 93, -555, 76, 169, 102, 333, 338,
	537, 390, 72, 127, 348, 407, -633, -634, -635, 38,
	576, 577, 602, -362, -472, -566, 601, -268, -362, -364,
	333, 492, 127, 348, 333, 127, 348, 560, 119, 2,
	531, 79, -285, -293, -364, -364, -299, -309, -529, 161,
	602, 606, 584, 2, 594, 594, -309, -529, -304, -309,
	-529, -302, 154, -253, 365, 167, 161, 602, -283, 5,
	5, 154, -280, 76, -285, 5, -285, -303, 119, 450,
	519, 519, 348, 348, 351, -614, -615, -208, 606, 601,
	584, 584, -208, -533, -132, 2, -354, -345, 234, -285,
	-550, -547, -548, 390, -554, -556, 169, 390, -136, 2,
	-219, -218, -268, 5, 601, -330, 352, 600, -601, 352,
	-600, 117, 137, -529, -398, -136, -304, -354, 602, 606,
	148, -420, 547, -283, -299, 154, -251, 266, -643, -528,
	-248, -423, -421, 140, 601, 348, -136, -360, 584, 602,
	602, 119, 119, 226, 153, -362, 601, 601, -364, 119,
	602, -212, -213, -532, -132, -532, -532, -532, -211, -488,
	-67, -68, 232, 93, 372, -296, 503, 232, 601, 601,
	-239, -444, -444, -444, 602, -360, -524, 594, -575, 367,
	602, -471, -444, -444, -445, 188, 601, -455, 602, -576,
	564, -444, -389, -390, -444, 438, 108, 208, -576, -576,
	602, -520, -520, 2, -532, 2, 519, 599, 2, 188,
	223, 38, 410, -435, -293, -297, -290, -268, 169, 216,
	338, 560, -419, 258, 601, -445, 541, -299, 601, 2,
	215, 215, 30, 60, -636, 131, 237, 602, 606, -473,
	-279, -268, -444, -473, 602, 602, 338, 541, 338, 560,
	-444, 541, -494, 601, -245, -245, 602, 602, -444, 519,
	-523, 100, -521, 2, -603, -253, -282, -444, 519, 5,
	-245, -297, -245, -245, -280, 531, -309, -529, -304, -619,
	504, 457, 532, 451, 191, 439, -619, 183, -209, -210,
	-532, -132, -208, 38, -335, 236, 2, -552, 258, -290,
	258, -632, 565, 602, 606, 584, 584, -328, -220, -88,
	-89, 520, -487, 606, 601, 584, -354, 38, 5, 601,
	601, -268, 348, 601, -283, -263, 92, -643, -528, -249,
	-394, 334, -364, 93, -423, -451, -205, 601, 601, -333,
	81, 94, 128, 215, 192, 233, 484, 490, 28, -333,
	602, -362, -362, 602, 601, -205, 602, 606, 28, 601,
	28, 601, -299, -321, -375, -375, 602, -360, 60, 606,
	602, 602, -445, -455, 602, -577, -578, -288, 606, 601,
	601, 464, 600, 600, -530, 2, -530, -253, 390, -268,
	-555, -290, 333, 547, -444, -445, -270, 601, -444, 601,
	601, 38, 127, 237, 132, 221, -434, -637, 101, 493,
	224, -472, -239, 602, -433, 547, 407, -445, -280, -362,
	601, 601, 601, 584, 188, 601, -498, -245, -303, 519,
	2, 2, 188, -595, 602, -609, 405, -136, -339, -340,
	223, 601, -334, 348, 119, 318, -218, -521, -521, 602,
	38, -89, 9, -600, -601, -444, 38, -136, -492, -362,
	-299, -362, 348, -255, -254, 275, -528, -250, 602, -293,
	-394, -533, -533, -433, 602, 602, -533, -68, -364, -364,
	602, 602, -582, 398, 441, 209, -375, -361, 602, 606,
	38, -390, 2, 2, 2, 410, 154, 211, 602, -557,
	290, -268, 602, -398, -398, 38, 132, 221, -335, 601,
	-240, -473, -335, 211, -299, -604, 547, 602, -347, -346,
	-343, -349, -348, -343, -375, -521, 100, 365, -375, -280,
	-530, -530, 348, -611, 189, -610, 5, 10, -220, 365,
	-363, -474, -285, 82, 119, -345, -136, 602, -136, 602,
	602, -420, 602, -299, -252, -534, 410, 412, -643, -251,
	-438, 602, 602, -434, -433, -341, -337, 602, 602, 602,
	602, -583, -584, 50, 534, 109, -444, -583, -583, -578,
	-580, 169, 565, -558, -561, -560, 581, 470, 189, 366,
	602, 492, 559, 602, 602, -341, -364, 565, -354, -444,
	-433, 602, 606, 552, 602, 606, 552, 602, 188, 602,
	-245, -616, 565, -245, -619, -207, 565, 46, -334, -299,
	602, 606, 389, 133, 143, -335, -632, -433, 601, -434,
	601, -260, -259, -643, -514, -263, 140, -205, -205, -335,
	-434, -221, 565, -205, -585, 152, -584, 386, 182, 440,
	386, 182, -585, -585, -290, 55, -560, 581, -561, 581,
	541, 133, -636, 602, 55, -557, -335, -346, 223, -348,
	188, 365, 204, 188, 448, -610, 30, -262, -261, 601,
	-474, 441, 441, 2, -339, -334, -434, -362, -335, -362,
	-256, -257, -258, -364, -255, 334, 541, -341, -335, -438,
	109, 207, 514, 318, 33, 584, -559, 318, 427, 64,
	463, -559, -438, 584, -558, 601, 601, 351, -530, 352,
	-364, 2, -220, -335, 602, -341, 602, -252, 463, -221,
	-341, 440, 356, -584, -444, 23, 338, 127, -444, -636,
	-375, -375, -245, -204, 601, 602, -334, -341, -433, -221,
	-434, -260, -384, -438, -221, 602, 602, -204, -246, 64,
	427, -262, -221, -434, -438, -335, -256, -438, -438, -336,
	-337, 519, 602, -438, -335, -341, 601, -341, -221, -375,
	-221, -438, 602, -438, -336,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 558, 559, 561, 562, 563, 565,
	566, 568, 570, 572, 573, 574, 576, 577, 579, 580,
	581, 582, 583, 585, 587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	654, 656, 0, 1428, 1430, 1432, 1434, 0, 810, 0,
	36, 37, 39, 0, -2, 337, 339, 341, 343, 0,
	374, 376, 377, 379, 381, 382, 383, 385, -2, 0,
	491, 492, 494, 496, -2, 0, 1023, 1025, 1027, 0,
	643, 645, 0, 1030, 1032, 1034, 0, 0, 666, 667,
	0, 1539, -2, 658, 660, 662, 664, 735, 737, 739,
	741, 743, 745, 747, 749, 751, 753, 754, 756, 758,
	760, 762, 764, 765, 767, 769, 771, 772, 774, 775,
	777, 779, 781, 783, 785, 787, 789, 791, 793, 795,
	797, 799, 801, -2, 804, 805, 806, -2, -2, 0,
	-2, -2, -2, 1446, 41, 43, 45, 47, 49, 51,
	53, 55, 57, 59, 435, 437, 439, 441, 443, 446,
	448, 450, 1597, 498, 500, 502, 504, 506, 508, 510,
	0, -2, 1611, 0, 0, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 109, 110, 111, 112,
	113, 114, 115, 116, 75, 76, 77, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 107, 73, 0, 0, 1570, 1572, 1574, 1576, -2,
	0, 0, 5, 9, 11, 13, 15, 17, 19, 21,
	23, 25, 27, 29, 560, 564, 567, 569, 571, 575,
	578, 584, 586, 588, 543, 544, 547, 2309, 2327, 2328,
	2329, 2332, 2333, 2334, 2335, 2336, 2337, 2794, 2875, 2876,
	2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368,
	2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378,
	2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388,
	2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398,
	2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408,
	2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418,
	2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428,
	2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438,
	2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448,
	2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458,
	2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468,
	2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478,
	2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488,
	2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498,
	2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508,
	2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518,
	2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528,
	2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538,
	2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548,
	2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558,
	2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568,
	2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578,
	2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588,
	2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598,
	2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608,
	2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618,
	2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628,
	2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638,
	2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648,
	2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658,
	2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668,
	2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678,
	2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688,
	2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698,
	2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708,
	2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718,
	2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728,
	2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738,
	2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748,
	2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758,
	2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768,
	2769, 2770, 2771, 2772, 2773, 545, 546, 1217, 0, 612,
	610, 2294, 613, 2591, 615, 617, 485, 486, 487, 488,
	489, 490, 0, 636, 626, 1609, 637, 639, 640, 641,
	642, 607, 605, 0, 636, 2363, 634, 1426, 1427, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 497, 0, 0,
	0, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	414, 1275, 1276, 1277, 1411, 1412, 2638, 1453, 0, 235,
	655, -2, -2, 2759, -2, 689, 690, -2, -2, 704,
	708, 699, 2763, 0, 2641, 2625, -2, 711, 1429, 1431,
	1433, 808, 809, 2313, 0, 0, 0, 0, 0, 38,
	40, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	245, -2, -2, -2, -2, 0, 0, 2686, 2415, 2262,
	2329, 2265, 2260, 338, 340, 342, 344, 345, 0, 0,
	0, 0, 0, 0, 0, 375, 378, 380, 384, -2,
	386, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, 0,
	0, 0, 0, 1094, 1086, 1087, 1333, 0, 0, 0,
	-2, 493, 495, 548, 549, 0, 1598, 1598, 556, 557,
	-2, 0, 0, 0, 0, 308, 296, 1024, 1026, 1028,
	1029, 0, 0, 0, 0, 0, 644, 646, 0, 0,
	275, 1031, 1033, 1035, 1036, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 659, 661, 663, 665, 736, 738,
	740, 742, 744, 746, 748, 750, 752, 755, 757, 759,
	761, 763, 766, 768, 770, 773, 776, 778, 780, 782,
	784, 786, 788, 790, 792, 794, 796, 798, 800, 802,
	803, 816, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, -2, 0, -2, -2, -2, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 0, 918, 0, 0,
	0, -2, -2, -2, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 0, -2, 1004, 0, 0, 819,
	822, 823, 824, 825, 826, 827, 0, 891, 916, 917,
	927, 807, 0, 1257, 1599, 1455, 1436, 1450, 1455, 1438,
	1439, 1440, 1441, 1442, 1447, 1449, 1443, 1444, 1445, 42,
	44, 46, 48, 50, 52, 54, 56, 58, 60, 436,
	438, 440, 442, 444, 447, 449, 451, -2, 1568, 1569,
	499, 501, 503, 505, 507, 509, 511, 647, 0, 649,
	0, 821, -2, 0, 1603, 1603, 1603, 0, 0, 1569,
	1567, 0, 652, 653, 715, 716, 1876, 0, 0, 0,
	0, 0, 0, 0, 0, 2136, 1964, 0, 717, -2,
	1997, 1999, 2734, 2564, 2759, 2135, 2001, 2002, 2003, 2004,
	2005, 0, 2007, 2008, 2009, 2010, 2011, 2012, 0, 2014,
	0, 2019, 2020, 2021, 0, 2741, 2239, 2323, -2, 0,
	0, 2747, 2319, 0, 2102, 2037, -2, -2, 2346, 2325,
	1808, 1809, 1810, 1811, 1812, -2, -2, 2777, 2041, 2042,
	2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 0,
	2722, 2742, 2743, 2748, 2750, 2744, 2731, 2062, 2429, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1835, 1844, -2, -2, -2, -2, -2, -2,
	-2, 2735, 2736, 2753, 2756, 2762, 2767, 2768, 2740, 2749,
	2776, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786,
	2787, 2788, 2789, 2790, 2791, 2792, 2793, 1836, -2, -2,
	-2, -2, 1586, 2605, 1589, 1217, 1587, 1571, 1573, 0,
	1575, 0, 0, 0, 1580, 1606, 1604, 0, 1655, 1584,
	1585, 1678, 1678, 1702, 0, 1683, 0, 1702, 1598, 1729,
	0, 1689, 2630, 2038, 2039, 0, 2329, 2324, -2, -2,
	2774, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 608, 0, 614, 616, 0, 0, 0, 635, 1608,
	0, 0, 0, 0, 0, 0, 0, 417, 418, 419,
	420, 421, 2742, 0, 0, 0, 426, 0, 428, 429,
	430, 431, 432, 433, 434, 205, 2742, 516, 541, 0,
	205, 2742, 519, 205, 2742, 522, 0, 525, 1331, 205,
	2742, 528, 2290, 205, 2742, 531, 533, 2298, 205, 2742,
	537, 2305, 2303, 538, 0, 540, 225, 221, 222, 223,
	224, 1422, 1423, 1424, 1425, 0, 1452, 1332, 657, 0,
	683, 0, 687, 688, 2730, -2, 0, 2650, 692, 693,
	-2, 695, 1456, 1460, 1461, 1462, 1463, 1464, 0, 0,
	0, 0, 1469, 0, 0, 0, 0, 684, 685, 702,
	703, 709, 712, 0, 811, 812, 813, 814, 815, 72,
	0, 2742, 1729, 74, 0, 2284, 2354, 2355, 2356, 2357,
	2358, 2775, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802,
	2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812,
	2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822,
	2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832,
	2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842,
	2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852,
	2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862,
	2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872,
	2873, 2874, 2777, 78, 0, 2742, 83, 0, 2742, 0,
	-2, 96, 0, 108, 0, 2287, 117, 0, 2742, 0,
	2259, -2, 0, 217, 297, 298, 299, 0, 1061, -2,
	0, 1269, 1271, 1271, 0, -2, 0, 0, 0, 1014,
	2256, 2261, 1015, 2280, 1016, 2266, 0, 346, 347, 348,
	349, 350, 0, 351, 2742, 353, 354, 0, 356, 357,
	2742, 359, 360, 0, 362, 0, 364, 0, 257, 261,
	2742, 311, 312, 2342, 2343, 2350, 2351, 2352, 2353, 2742,
	388, 390, 0, 392, 393, 0, 395, 0, 0, 0,
	399, -2, 415, 0, 412, 402, 403, 405, 406, 407,
	408, 409, 0, 455, 453, 2295, 0, 0, -2, 2742,
	0, 1058, 0, 0, 1311, -2, 0, 1262, 0, 1318,
	2742, 1314, 0, -2, 0, 1596, 2742, 1473, 1090, 1091,
	1092, 1093, 1741, 482, 0, 1504, 0, 1506, 0, 1525,
	1735, 1678, 0, 0, 1740, 0, -2, 601, 2312, -2,
	551, 0, 552, 0, -2, 0, 325, 0, 0, 1039,
	1041, 1042, 1044, 1045, 1048, 1049, 1050, 1051, 0, 1053,
	1715, 276, 278, 0, 0, 0, 1038, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 0, 0, 668, 0,
	0, 817, 818, 0, 0, 834, 835, 836, 0, 325,
	2642, 2600, 2450, 843, 0, 846, 849, -2, 0, 0,
	0, 0, 853, 0, 858, 859, 860, 0, -2, 0,
	867, 869, 1022, 871, 0, 0, 873, 0, 877, 0,
	880, 0, 882, 0, 884, -2, -2, -2, 892, 893,
	-2, 898, -2, 0, 902, -2, 0, 905, 0, 908,
	-2, 0, 918, 914, 915, 0, 0, 0, 0, 935,
	936, 0, 945, 0, 948, 949, 950, 0, 954, 955,
	0, 957, 958, 959, 960, 0, 2713, 2647, 2415, 0,
	967, -2, 973, 975, 0, -2, 0, 991, 0, 995,
	0, 0, 1003, 0, 0, 820, 0, 828, 829, 205,
	1733, 1435, -2, 1437, 0, -2, 0, 648, 0, 651,
	1628, 1554, 1551, 0, 1625, 1626, 1555, 0, 0, 0,
	1562, 0, 1601, 1602, 0, 0, 0, 1541, 1542, 0,
	0, 0, 0, 2141, 2142, 2143, 2144, 2157, 2145, 2146,
	2156, 2154, 2155, 2147, 2148, 2153, 2167, 2168, 2158, 2159,
	2149, 2162, 2160, 2161, 2163, 2164, 2165, 2166, 0, 0,
	2172, 0, 2150, 2151, 2152, 2180, 0, 0, 2181, 0,
	2183, 0, 2173, 2169, 2170, 2171, 0, 1943, 1945, 2247,
	0, 0, 0, 2179, 2174, 2175, 1881, 1882, 1883, 1884,
	1885, 1918, 1922, 1923, 0, 0, 1998, 2244, 2243, 2000,
	0, 0, 2195, 0, 2013, -2, 0, 2136, 2190, 0,
	0, 2022, 2023, 2024, 0, 0, 2195, 0, 0, 2238,
	2034, 2035, 1873, 0, 0, 2104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1822, 1821, 0, 1823, 0, 1824,
	1825, 1832, 1845, 0, 0, 0, 0, 1849, 0, 0,
	0, 0, 0, 0, 0, 2219, -2, 0, 0, 0,
	0, 1837, 0, 1588, 0, 0, 1659, 2248, 2252, 2253,
	1659, 1659, 0, 0, 2196, 1726, 1726, 0, 0, 1721,
	1721, 1721, 1719, 1702, 0, 1702, 1712, 0, 1702, 1702,
	0, -2, 1683, 0, 0, 1712, 0, 1696, 589, 591,
	593, 595, 596, 597, 599, 1730, 1731, 0, 0, 0,
	0, 2330, 0, 0, 0, 0, 2302, 0, 0, 2315,
	0, 0, 2289, 371, 0, 0, 0, 2696, 2641, 0,
	-2, 619, 638, 1598, 0, 2198, 1756, 1760, 0, 1762,
	1763, 1764, 1765, 1766, 0, 0, 1757, -2, 1833, 1835,
	1856, 2347, 2348, 2349, 1816, 1817, 1818, 1819, 1820, 1828,
	1815, 1815, 1815, 1826, 1855, 1847, 1855, 1851, 1801, 1802,
	1803, 1838, 1839, 1840, 1841, 0, 2696, 2641, 0, -2,
	628, 0, 0, 1536, 416, 0, 423, 424, 425, 0,
	512, 0, 203, 204, 0, 205, 2742, 517, 0, 520,
	0, 205, 2742, 2254, 526, 0, 529, 0, 0, 535,
	0, 0, 0, 0, 0, 205, 1538, 0, 0, 0,
	0, -2, 697, 705, 706, 707, 0, 1458, 0, 1465,
	726, 727, 728, 1467, 1468, 0, 1470, 700, 729, 730,
	731, 732, 733, 734, 0, 2268, 2269, 2270, 2271, 2274,
	2275, 0, 0, 698, 719, 701, 0, 713, 118, 1408,
	0, 0, 161, 0, 1408, 1408, 0, 0, 0, 0,
	188, 0, 1129, 0, 0, 0, 0, 133, 146, 157,
	130, 131, 0, 0, 0, 0, 0, 0, 84, 1239,
	0, 1242, 0, 0, 0, 0, 0, 0, 0, 1255,
	0, 0, 0, 0, 0, 98, 99, 0, 0, 104,
	105, 0, 145, 0, 0, 0, 0, 0, 1501, 0,
	140, 120, 0, 0, 133, 147, 159, 0, 192, 194,
	1126, 0, 0, 0, 0, 0, 0, 0, 0, 216,
	227, 0, 0, 0, 1263, 0, 0, 0, 1595, 0,
	0, 0, 0, 2742, 1406, 0, 1391, 0, 1715, 2500,
	-2, -2, 276, 1715, 1013, 0, 0, 2330, 2264, 0,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 391,
	394, 396, 397, 398, 0, 1310, 0, 404, 445, 1188,
	2742, 0, 0, 472, 467, 0, 469, 0, 0, 0,
	1238, 2742, 1236, 2299, 0, 1260, 0, 1217, 2742, 2297,
	0, 0, 0, 1319, 2339, 1328, 1332, 1491, 0, 484,
	0, 1507, 1509, 0, 0, 1736, 0, 1738, 1678, 1598,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 1052, 282, 0, 1714, 0, 0, 313,
	1715, 276, 2616, 1037, 325, 325, 1715, 670, 1715, 672,
	0, 0, 837, 838, 0, 325, 325, 325, 844, 845,
	847, 848, -2, -2, -2, -2, 850, 851, 942, 0,
	0, 0, 941, 861, 0, 863, 866, 870, 0, 1007,
	2625, 2641, 2696, 1020, 942, 2415, 942, 2415, 942, 2415,
	942, 942, 886, 930, 938, 897, 904, 0, 899, 903,
	906, 909, 0, 911, 919, 0, -2, 0, 922, 0,
	924, 0, 926, 942, 943, 946, 953, 956, 961, 962,
	963, 964, 2310, 965, 966, -2, 970, 971, 0, 982,
	987, 988, 984, 0, 0, 0, 0, 0, 0, 998,
	999, 0, 0, 1006, 0, 830, 1256, 0, 1448, 1628,
	1554, 650, 1545, 1627, 1546, 1553, 1556, 0, 0, 1558,
	0, 1560, 0, 1623, 1624, 1631, 1632, 0, 1642, 1643,
	1635, 0, -2, 0, 0, 1638, 1639, 1564, 0, 1581,
	1582, 1583, 1612, 1615, 1347, 0, 2875, 1877, 1751, 1878,
	1879, 2283, 0, 1886, 1887, 1888, 1889, 1890, 1891, 1892,
	1893, 1894, 1895, -2, -2, -2, -2, -2, -2, -2,
	-2, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912,
	1913, 1914, -2, -2, -2, 1919, 1920, 1921, -2, 2182,
	2184, 0, 2247, 0, -2, 0, -2, -2, -2, -2,
	1940, 0, 1942, 1947, 1949, 1951, 0, 0, 0, 0,
	2246, 1961, 2230, 2231, 0, 0, 2138, 2139, 2140, 1946,
	0, 1965, 2245, 2242, 0, 0, 2176, 0, 2141, 2142,
	2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152,
	2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162,
	2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172,
	2173, 0, 2194, 1611, 2026, 0, 0, 0, 0, 2033,
	2018, 2192, 0, 2191, 0, 0, 0, 2202, 0, 2237,
	2233, 0, 2281, 1872, 1859, 1860, 1861, 1862, 1863, 1864,
	1874, 0, 2278, 2316, 2322, 2112, 0, 0, 0, 2063,
	2064, 2065, 2066, 2067, 0, 2069, 2070, 0, 2072, 2073,
	0, 2075, 2076, 0, 2078, 2079, 2080, 2081, 2082, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1769, 1770, 1771, 1772,
	1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782,
	1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792,
	1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 0, 0,
	2084, 0, 2205, -2, -2, -2, -2, -2, -2, -2,
	-2, 0, 2086, 0, 2088, 2196, 2216, 0, 0, 1966,
	0, 0, 0, 0, 2136, 0, 2091, 2196, 2224, 0,
	0, 0, 0, 0, 2196, 0, 2229, 0, 2098, 0,
	2100, 1590, 0, 0, 1746, 0, 0, 0, 2251, 1746,
	1746, 0, 1654, 0, 0, 1722, 1723, 1724, 1725, 0,
	0, 1726, 0, 1716, 1720, 1717, 1718, 1712, 1675, 0,
	0, 2285, 1712, 1681, 1711, 0, 1217, 1701, 1712, 1712,
	0, -2, 1685, 1702, 0, 0, 590, 592, 594, 598,
	600, 0, 0, 1611, -2, 0, -2, 327, 1216, 0,
	0, 0, 0, 0, 0, 609, 611, 0, 0, 532,
	0, 0, 625, 0, 603, 0, 606, 0, 1747, 1750,
	0, 0, 1761, 1767, 1768, 0, -2, 0, 0, 1857,
	0, 0, 0, 0, 0, 633, 0, 0, 0, 427,
	542, 205, 514, 0, 205, 205, 523, 0, 0, 205,
	534, 205, 2306, 205, 2304, 226, 539, 1537, 238, 0,
	686, 0, 1457, 1466, 0, 723, 0, 725, 0, 2272,
	2276, 2273, 2277, 0, 714, 0, 0, 0, 0, 1407,
	0, 1354, 0, 0, 165, 2742, 0, 207, 0, 0,
	1181, 2291, 0, 1171, 0, 0, 2436, 0, 0, 0,
	0, 0, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 132, 0, 0, 0,
	0, 0, 0, 0, 0, 1240, 1241, 1243, 1250, 1252,
	0, 1246, 2279, 0, 0, 1247, 0, 1249, 1251, 1253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 106,
	1272, 0, 0, 1273, 1274, 1479, 1480, 0, 1500, 1501,
	0, 0, 0, 129, 0, 0, 0, 0, 0, 0,
	2258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1265, 0, 1306, 1304, 1284, 1285,
	1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295,
	1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 0, 0,
	0, -2, 1267, 1268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 316, 2257, 2267, 0, 1046,
	1047, 352, 355, 358, 361, 244, 0, 0, 400, 0,
	0, 1096, 1071, 0, 0, 454, 325, 0, 0, 468,
	472, 2308, 1056, 1234, 1237, 0, 1217, 2742, 1283, 0,
	0, 0, 0, 0, 0, 1317, 0, 0, 2742, 2286,
	2338, 2339, 1493, 1501, 0, 1746, 0, 1523, 1510, 0,
	0, 0, 1523, 1527, 1528, 1530, 1531, 0, 0, 1737,
	1743, 550, 602, 1598, 1598, 325, 323, 2567, 321, 318,
	320, 0, 0, 0, 1097, 1099, 1100, 1101, 207, 0,
	2339, 1171, 2489, 2339, 0, 1513, 1515, 0, 0, 0,
	270, 0, 279, 1715, 277, 0, 282, 0, 0, 0,
	466, 669, 674, 832, 0, 325, 840, 841, 842, 888,
	932, 940, 986, 852, 854, 855, 856, 0, 0, 0,
	1021, 1017, 1018, 1019, 872, 942, 875, 942, 878, 942,
	881, 883, 901, 907, 920, 913, 921, 0, 0, 0,
	934, 951, 0, 969, 0, 0, 0, 0, 0, 0,
	0, 992, 993, 994, 996, 1001, 1000, 1005, 831, 1734,
	1549, 1550, 1552, 0, 1561, 0, 0, 1637, -2, -2,
	1636, 1640, 1641, -2, -2, -2, -2, 1557, 0, 1566,
	1563, 0, 1622, 1345, 1346, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 1962, 0, -2, 1941, 1944, 1948,
	1950, 1952, 0, 0, 0, 0, 0, 0, 2185, 0,
	2187, 1963, 2240, 2243, 2178, 0, 2134, 0, 0, 1610,
	1611, 1611, 0, 2032, 0, 2193, 0, 2200, 2201, 0,
	2025, 0, 2234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2036, 0, 0, 0, 0, 2068, 2071, 2074,
	2077, 0, 0, 0, 0, 2057, 0, 0, 0, 2061,
	1827, 1813, 0, 1855, 1853, 1854, 1848, 1855, 1852, 1805,
	0, 1804, 0, 2083, 0, 2085, 2087, 0, 0, 2089,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1969, 1970, 1971, 1991, 2090, 2222,
	2223, 0, 0, 0, 0, 0, 0, 2096, 0, 2228,
	2097, 2099, 1598, 0, 1591, 0, 1656, 1645, 1745, 0,
	2249, 1715, 1658, 1660, 2250, 2288, 1645, 1645, 0, 2197,
	0, 0, 1706, 0, 0, 0, 1708, 1679, 0, 0,
	1673, 0, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1680,
	1217, 1710, 1682, 1686, 2316, 0, 1712, 0, 1697, 0,
	1699, 1732, 0, 1691, 1694, 0, 0, 2331, 1746, 0,
	365, 372, 373, 366, 367, 368, 369, 0, 618, 0,
	0, 0, 0, 0, 2199, 0, 1752, 0, 1758, 0,
	0, 0, 0, 627, 0, 0, 0, 0, 1535, 422,
	513, 205, 518, 521, 2255, 205, 527, 530, 536, 234,
	0, 682, -2, 721, 722, 724, 0, 720, 162, 1408,
	0, 0, 1350, 1352, 1356, 1362, 1365, 0, 167, 2742,
	179, 0, 1145, 0, 0, 0, 0, 0, 0, 0,
	1410, 0, 0, 2742, 205, 2742, 205, 182, 184, 187,
	0, 191, 189, 0, 1133, 0, 0, 1136, 119, 1408,
	0, 0, 122, 126, 134, 135, 138, 0, 0, 0,
	144, 0, 0, 0, 1367, 1371, 1379, 0, 0, 0,
	1244, 1245, 1248, 1254, 85, 0, 0, 0, 1375, 1377,
	1383, 97, 100, 2742, 2300, 102, 2742, 0, 1349, 0,
	0, 0, 0, 193, 124, 128, 136, 137, 139, 0,
	1385, 121, 0, 220, 0, 0, 210, 205, 2742, 0,
	212, 0, 213, 214, 228, 0, 0, 0, 1059, 1060,
	1305, 1258, 1259, 0, 1270, 1264, 0, 0, 0, 0,
	0, 1387, 1388, 0, 0, 0, 1406, 1403, 1715, 240,
	0, 1715, 248, 0, 2263, 0, 262, 387, 0, 0,
	0, 0, 1095, 1199, 0, 1066, 0, 0, 0, 460,
	456, 0, 465, 471, 470, 476, -2, 0, 0, 0,
	0, -2, 0, 0, 1321, 1315, 1316, 0, 0, 0,
	0, 2742, 1495, 1501, 0, 1596, 1611, 483, 1502, 1523,
	0, 0, 0, 1512, 1508, 1505, 1746, 0, 0, 0,
	0, 0, 1739, 1742, 553, 554, 300, 0, 0, 0,
	0, 0, 325, 0, 0, 0, 1102, 1106, 0, 2339,
	2339, 0, 2293, 0, 0, 0, 0, 0, 0, 280,
	0, 283, 0, 0, 0, 288, 289, 290, 291, 292,
	293, 0, 0, 282, 314, 272, 1715, 0, 0, 671,
	0, 0, 839, 0, 862, 865, 874, 876, 879, 923,
	925, 942, 952, 976, 977, 1123, 0, 1123, 0, 0,
	997, 1559, 0, 1634, 1565, 1616, 1617, 0, 1347, 0,
	1880, 1925, 0, 0, -2, 0, 0, 1929, 0, 0,
	0, -2, 0, 0, 0, 2186, 2188, 0, 2242, 2177,
	2027, 0, 0, 0, 2031, 2015, 2016, 0, 2137, 2203,
	2232, 2236, 0, 1865, 1866, 1867, 1868, 1869, 1870, 1871,
	0, 2282, 2317, 2321, 2110, 2111, 2115, 2296, 0, 0,
	0, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	1846, 1850, 0, 0, 2204, 2215, 2217, 1967, 1968, 1972,
	1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, -2,
	-2, -2, 1985, 1986, 1987, -2, -2, -2, 1992, 0,
	0, 0, 2218, 2220, 2221, 2225, 2226, 0, 2093, 2094,
	2095, 2227, 0, 1598, 1592, 1653, 0, 1744, 1657, 0,
	1653, 1653, 1605, 1704, 0, 0, 1728, 0, 1676, 0,
	1677, 0, 0, 1709, 0, 1684, 1687, 1688, 1698, 0,
	1690, 0, 1693, 0, 2027, -2, 326, 328, 330, 0,
	333, 334, 0, 0, 0, 621, 622, 0, 620, 604,
	0, 0, 1754, 0, 0, 1830, 1834, 1858, 630, 631,
	0, 629, 515, 524, 236, 0, 1713, 0, 0, 0,
	0, 0, 0, 206, 1143, 1180, 0, 0, 0, 1170,
	0, 0, 1186, 169, 170, 171, 0, 0, 0, 0,
	180, 0, 0, 177, 0, 186, 190, 1130, 0, 0,
	0, 0, 1355, 0, 0, 0, 141, 142, 143, 0,
	148, 0, 149, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1485, 1486, 0, 1476, 0, 0, 0,
	208, 0, 0, 0, 1344, 230, 0, 0, 0, 0,
	0, 1308, 1309, 1266, 1368, 1372, 1380, 0, 0, 0,
	0, 636, 0, 641, 1405, 0, 248, 246, 0, 249,
	0, 252, 253, 0, 255, 248, 242, 0, 0, 0,
	1217, 401, 1069, 1187, 0, 1189, 0, 1067, 0, 0,
	1188, 452, 0, 459, 0, 473, 0, 0, 1238, 0,
	0, 1261, 1281, 1217, 0, 1320, 1322, 0, 1330, 0,
	0, 0, 1497, 1501, 0, 1490, 1491, 1630, 1503, 1521,
	-2, 0, 0, 1611, 1529, 1526, 1532, 1533, 0, 322,
	0, 317, 319, 0, 303, 0, 0, 1098, 1103, 0,
	0, 0, 0, 0, 1514, 1516, 0, 1040, 1043, 0,
	0, 0, 0, 0, 0, 0, 271, 282, 1715, 309,
	0, 833, 857, 933, 978, 1122, 0, 0, 980, 0,
	0, 1633, 1620, 1621, 1618, 1347, 1927, 1931, 0, 0,
	0, 1933, -2, 0, 1955, -2, -2, 2189, 2241, 2006,
	1611, 2028, 2030, 2017, 2235, 1875, 0, 2117, 2114, 0,
	2101, 0, 2052, 2053, 0, 0, 2056, 2058, 2059, 2060,
	1814, 1807, 1806, 2214, 0, 0, 0, 0, 2092, 1593,
	0, 2106, 0, 0, 1661, 2106, 2106, 1705, 0, 1707,
	1674, 1662, 0, 1671, 0, 2317, 1700, 1692, 0, 0,
	331, 0, 335, 336, 370, 0, 0, 1748, 1753, 0,
	1759, 1829, 0, 237, 163, 164, 1359, 1363, 1360, 0,
	166, 0, 1144, 0, 1147, 0, 0, 0, 0, 1154,
	1171, 0, 0, 0, 0, 0, 0, 1173, 0, 1172,
	0, 0, 1203, 0, 1335, 1342, 0, -2, 0, 0,
	0, 173, 196, 0, 0, 0, 0, 199, 1409, 175,
	0, 0, 205, 205, 0, 0, 1351, 1353, 1366, 0,
	0, 0, 0, 151, 0, 0, 1369, 1373, 1381, 1376,
	1378, 1384, 0, 103, 0, 1487, 0, 0, 1386, 218,
	219, 0, 205, 0, 205, 211, 205, 1344, 0, 0,
	0, 0, 0, 0, 0, 1389, 1390, 239, 0, 0,
	0, 0, 241, 315, 248, 389, 0, 1117, 0, 1199,
	1191, 1192, 1193, 0, 1198, 1200, 0, 0, 1083, 1068,
	0, 1079, 0, 0, 1096, 1071, 0, 457, 474, 0,
	477, 0, 480, 1057, 1235, 1278, 1217, 0, 1312, 0,
	0, 0, 0, 0, 0, 0, 1499, 1501, 0, 1492,
	1493, 1523, 1629, 0, 0, 0, 1511, 1630, 0, 324,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 284, 0, 285, 286, 287, 294, 295, 273, 274,
	673, 675, 0, 0, 681, 1121, 0, 0, 0, 0,
	1619, 1935, -2, -2, 1956, 0, 2318, 2320, 1611, 0,
	2103, 1613, 0, 0, -2, 0, 0, 0, 1594, 1577,
	0, 1652, 1644, 1646, 1648, 2628, 2410, 2741, 1578, 1579,
	1727, 0, 0, 1695, 332, 623, 0, 0, 1755, 0,
	0, 0, 1361, 168, 0, 1148, 1149, 2292, 1151, 0,
	1153, 1155, 1156, 1157, 0, 1160, 0, 2341, 0, 1165,
	1168, 1169, 0, 0, 1182, 1204, 0, 1213, 0, 1337,
	1347, 1341, 0, 1339, 1215, 0, 172, 198, 174, 200,
	195, 0, 1344, 0, 176, 185, 0, 0, 123, 0,
	0, 2404, 154, 152, 150, 101, 1348, 125, 0, 220,
	229, 1343, 231, 215, 205, 0, 1370, 1374, 1382, 0,
	1397, 1398, 1399, 1400, 0, 0, 0, 0, 250, 0,
	251, 254, 0, 0, 1132, 0, 1070, 1190, 0, 1201,
	1202, 1073, 0, 1072, 0, 0, 0, 0, 0, 458,
	461, 0, 464, 0, 0, 0, 0, 0, 1323, 1321,
	0, 1329, 0, 0, 0, 1475, 0, 0, 1494, 1495,
	481, 1517, 0, 0, 1523, 1534, 302, 0, 0, 1104,
	1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1105,
	1215, 0, 0, 1179, 0, 307, 281, 0, 677, 0,
	679, 0, 979, 981, 0, 0, 2029, 2121, 0, 0,
	2054, 2055, -2, 0, 1995, 2105, 2107, 0, 0, 0,
	0, 0, 1663, 1672, 624, 1749, 632, 1357, 0, 1364,
	1146, 1150, 0, 0, 0, 1161, 1221, 0, 0, 1238,
	1238, 1174, 0, 0, 1207, 1208, 1117, 0, 1209, 1210,
	1211, 1336, 1622, 1342, 1117, 0, 0, 197, 202, 0,
	0, 0, 0, 0, 0, 0, 209, 232, 1344, 0,
	1401, 1402, 0, 0, 247, 266, 0, 1279, 1071, 1131,
	0, 0, 1081, 0, 1084, 0, 1080, 1077, 1078, 1069,
	0, 462, 463, 478, 0, 479, 0, 1282, 0, 0,
	1330, 0, 0, 1482, 1474, 1501, 1496, 1497, 1746, 1520,
	1524, 0, 0, 1213, 1215, 1128, 0, 676, 0, 0,
	989, 990, 0, 0, 0, 0, 2116, 1614, 1996, 0,
	0, 1647, 1649, 1650, 1651, 1358, 0, 0, 1159, 1226,
	0, 0, 0, 0, 0, 1175, 1205, 1206, 1128, 0,
	1340, 1338, 1184, 0, 1217, 178, 0, 1215, 0, 1137,
	0, 0, 1140, 0, 0, 155, 2404, 153, 0, 205,
	1394, 205, 0, 269, 0, 260, 258, 259, 1073, 0,
	0, 1195, 1197, 0, 1085, 1117, 1083, 475, 1280, 1313,
	1215, 0, 1213, 0, 1489, 1501, 1483, 1484, 0, 1499,
	0, 325, 325, 1117, 1213, 1071, 1127, 325, 678, 680,
	2113, 2133, 2122, -2, 2699, 2411, 0, 2133, 2133, 2108,
	2109, 0, 0, 1162, 1222, 1223, 0, 1218, 1219, 1220,
	2340, 1163, 1164, 1166, 1167, 1203, 0, 0, 1221, 201,
	1117, 1134, 0, 0, 1135, 0, 0, 158, 0, 160,
	233, 1392, 0, 1395, 0, 256, 0, 0, 1065, 0,
	1194, 0, 0, 0, 0, 1132, 1073, 1213, 0, 1117,
	0, 1478, 1488, 0, 1498, 1475, 0, 304, 305, 1128,
	1117, 1746, 0, 306, 2118, 0, 0, 2124, 2125, 2126,
	2127, 2128, 2119, 2120, 1152, 0, 1224, 0, 1225, 0,
	0, 0, 1746, 1212, 0, 1226, 183, 1138, 0, 1141,
	0, 156, 0, 0, 0, 264, 265, 1062, 1064, 0,
	1196, 1074, 0, 1076, 1071, 1082, 1117, 0, 1128, 0,
	1471, 1477, 1481, 2301, 1482, 1518, 0, 1071, 1128, 1178,
	0, 2130, 2131, 0, 0, 0, 1227, 0, 1230, 1231,
	0, 1228, 1183, 0, 1203, 0, 0, 1393, 205, 0,
	0, 1075, 1073, 1128, 1215, 1071, 1213, 1489, 0, 1746,
	1071, 2129, 2132, 2123, 1158, 1229, 1232, 1233, 1214, 1185,
	0, 0, 1396, 267, 0, 1120, 1065, 1071, 1213, 1746,
	1117, 1478, 1746, 1176, 1746, 1125, 0, 0, 1116, 1118,
	1119, 1063, 1746, 1117, 1326, 1128, 1472, 1519, 1177, 1139,
	1124, 0, 268, 1324, 1128, 1071, 0, 1071, 1746, 0,
	1746, 1327, 1125, 1325, 1142,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 590, 3, 596, 591, 3,
	601, 602, 594, 592, 606, 593, 603, 595, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 609, 3,
	582, 584, 583, 587, 605, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 599, 3, 600, 597, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 607, 589, 608, 585,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 586,
	57925, 588, 57926, 598, 57927, 604, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1482
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1487
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1489
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1492
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1496
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1497
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1498
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1499
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1500
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1501
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1502
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1509
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1518
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1520
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1523
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1524
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1526
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1527
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1528
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1529
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1530
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1531
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1532
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1592
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1618
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1632
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1650
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1654
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1658
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1688
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1692
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1699
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1711
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1721
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1728
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1738
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1745
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1755
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1764
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1771
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1795
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1827
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1831
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1841
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1845
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1851
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1860
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1871
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1875
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1881
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1889
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1899
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1903
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1912
		{
		}
	case 133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1913
		{
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1917
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1926
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1938
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1943
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1950
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1962
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1969
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1977
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1982
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1986
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1991
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1997
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2005
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2016
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2026
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2036
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2045
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2056
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 152:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2062
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2078
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2082
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2088
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2093
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2104
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2108
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2114
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2118
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2125
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2130
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2135
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2140
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2145
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2155
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2160
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2165
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2170
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2175
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2180
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2184
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2189
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2198
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2210
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2220
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2227
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2230
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2236
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2251
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2258
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2267
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2276
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2281
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2288
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2296
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2297
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2301
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2305
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2311
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2319
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2323
		{
			sqlVAL.union.val = nil
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2329
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2333
		{
			sqlVAL.union.val = nil
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2339
		{
			sqlVAL.union.val = true
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2343
		{
			sqlVAL.union.val = false
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2349
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2353
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2360
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2364
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2368
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2374
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 208:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2403
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2425
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2434
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2444
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2453
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2462
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2471
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2475
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2478
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2482
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2489
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2496
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2502
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2509
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2516
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2530
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2534
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2555
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2562
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2566
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2574
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 239:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2604
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2616
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2626
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2646
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2650
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2654
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2662
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2666
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2670
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2681
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2690
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2694
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2698
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2702
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2706
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2788
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2799
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2804
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2808
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2818
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2824
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2828
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2832
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2841
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2845
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2849
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2855
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2859
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 269:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2863
		{
			sqlVAL.union.val = nil
		}
	case 270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2897
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2906
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2916
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2925
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2935
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2942
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2946
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2950
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2956
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2960
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2967
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 281:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2971
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2975
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2982
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2986
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2995
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2999
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3003
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3007
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3011
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3015
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3019
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3023
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3027
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3031
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3035
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3041
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3047
		{
			return unimplemented(sqllex, "alter function")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3051
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3055
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3092
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3097
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3101
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3107
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3112
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3117
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3122
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3127
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3131
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3148
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3151
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3155
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3159
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3167
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3171
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3177
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3181
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3187
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3191
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3195
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3205
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3209
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3215
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3219
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3223
		{
			sqlVAL.union.val = nil
		}
	case 326:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3235
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3249
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3255
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3259
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3265
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3269
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3277
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3281
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3285
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3289
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3293
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3301
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3302
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3303
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3304
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3305
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3315
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3323
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3325
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3329
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3332
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3342
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3351
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3359
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3361
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3365
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3368
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3378
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3387
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3395
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3397
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3401
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3404
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3412
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3415
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3419
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3423
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3427
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3431
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3444
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3449
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3452
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3456
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3461
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3473
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3475
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3476
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3479
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3480
		{
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3481
		{
			return helpWith(sqllex, "CREATE")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3488
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3491
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3494
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3495
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3498
		{
			return unimplemented(sqllex, "create access method")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3499
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3500
		{
			return unimplemented(sqllex, "create cast")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3501
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3502
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3503
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3504
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3505
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3506
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3507
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3508
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3509
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3510
		{
			return unimplemented(sqllex, "create publication")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3511
		{
			return unimplemented(sqllex, "create rule")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3512
		{
			return unimplemented(sqllex, "create server")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3513
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3514
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3515
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3516
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3519
		{
		}
	case 411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3520
		{
		}
	case 412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3523
		{
		}
	case 413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3524
		{
		}
	case 414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3527
		{
		}
	case 415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3528
		{
		}
	case 416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3531
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3532
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3533
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3534
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3535
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3536
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3537
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3538
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3539
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3540
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3541
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3542
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3543
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3544
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3545
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3546
		{
			return unimplemented(sqllex, "drop server")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3547
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3548
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3549
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3552
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3553
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3554
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3555
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3556
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3558
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3559
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3560
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3561
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3571
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3579
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3583
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3587
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3593
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3597
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3606
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3613
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3619
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3625
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3629
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3640
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3652
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3667
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3675
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3685
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3689
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3695
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3699
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3706
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 472:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3710
		{

			sqlVAL.union.val = nil
		}
	case 473:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3727
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3738
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 475:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3742
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3746
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3753
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3757
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3766
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3770
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3783
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3793
		{
			return helpWith(sqllex, "DELETE")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3796
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3797
		{
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3805
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3808
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3809
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3810
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3811
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3812
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3821
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3822
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3823
		{
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3824
		{
			return helpWith(sqllex, "DROP")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3827
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3828
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3829
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3830
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3831
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3832
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3833
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3841
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3845
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3849
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3858
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3866
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3874
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3878
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3881
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3889
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3893
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3896
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3904
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3913
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3921
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3929
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3937
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3944
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3951
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3959
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3966
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3970
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3976
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3980
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3989
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4004
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4012
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4016
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4019
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4023
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4028
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4041
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4046
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4048
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4053
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4057
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4080
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4087
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4089
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4097
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4105
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4113
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4121
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4132
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4140
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4143
		{
			return helpWith(sqllex, "DELETE")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4145
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4146
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4147
		{
			return helpWith(sqllex, "INSERT")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4150
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4152
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4155
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4160
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4161
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4162
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4167
		{
			return helpWith(sqllex, "DELETE")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4168
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4169
		{
			return helpWith(sqllex, "INSERT")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4171
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4175
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4176
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4180
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4184
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 603:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4194
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4202
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4210
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4214
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4218
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4228
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4235
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4243
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4247
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4251
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4261
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4265
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4269
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4273
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4276
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4299
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4303
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4307
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4311
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4315
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.roleSpecList(),
			}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4325
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4329
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.roleSpecList(),
			}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4340
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4343
		{
			return helpWith(sqllex, "GRANT")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4366
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4370
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4374
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4378
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList()}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4382
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.roleSpecList(),
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4392
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.roleSpecList(),
			}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4403
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4406
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4411
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4415
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4425
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4429
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4443
		{
			return helpWith(sqllex, "RESET")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4444
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4452
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4456
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4459
		{
			return helpWith(sqllex, "RESET")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4470
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4481
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4484
		{
			return helpWith(sqllex, "USE")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4488
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4489
		{
		}
	case 657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4490
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4494
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4495
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4496
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4497
		{
			return helpWith(sqllex, "USE")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4513
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4528
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4531
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4557
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4561
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 674:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4565
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4571
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4581
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4585
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4589
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4593
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4597
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4608
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4611
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4621
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4637
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4640
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4642
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4645
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4648
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4662
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4667
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4684
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4687
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4689
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4692
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4696
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4715
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4719
		{
			return unimplemented(sqllex, "set from current")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4723
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4728
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4737
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4742
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4746
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4758
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4763
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4770
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4774
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4780
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4784
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4791
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4812
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4816
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4822
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4826
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4830
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4834
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4838
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4844
		{
			sqlVAL.union.val = tree.Low
		}
	case 727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4848
		{
			sqlVAL.union.val = tree.Normal
		}
	case 728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4852
		{
			sqlVAL.union.val = tree.High
		}
	case 729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4863
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4867
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4871
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4876
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4880
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4895
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4896
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4897
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4898
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4899
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4900
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4901
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4902
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4903
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4905
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4906
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4907
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4908
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4909
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4911
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4912
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4913
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4915
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4917
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4918
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4919
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4920
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4921
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4922
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4923
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4924
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4925
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4926
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4927
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4928
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4929
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4930
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4931
		{
			return helpWith(sqllex, "SHOW")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4934
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4939
		{
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4940
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4943
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4947
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4952
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4957
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4962
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4967
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4977
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4978
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4979
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4994
		{
			sqlVAL.str = "client_encoding"
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5000
		{
			sqlVAL.str = "timezone"
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5001
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5005
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5009
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 832:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5025
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5029
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5033
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5044
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5052
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5060
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5066
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5074
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5083
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5092
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5101
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5109
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5119
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5123
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5126
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5128
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5131
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5133
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5137
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5140
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5148
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5151
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5159
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5163
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5167
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5171
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5174
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5182
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5185
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5191
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5196
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5201
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5208
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5212
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5222
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5231
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5238
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5241
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5254
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5262
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5270
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5273
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5275
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5279
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5283
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5286
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5288
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5292
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5295
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5303
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5306
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5308
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5311
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5319
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5322
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5324
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5327
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5331
		{
			sqlVAL.union.val = true
		}
	case 890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5333
		{
			sqlVAL.union.val = true
		}
	case 891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5335
		{
			sqlVAL.union.val = false
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5352
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5356
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5360
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5363
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5364
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5365
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5367
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5371
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5375
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5379
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5382
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5384
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5392
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5400
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5408
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5409
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5419
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5425
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5427
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5433
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5435
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5441
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5445
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5449
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 918:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5455
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5459
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5463
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5474
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5477
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5479
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5482
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5484
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5488
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5491
		{
			sqlVAL.union.val = true
		}
	case 928:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5492
		{
			sqlVAL.union.val = false
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5500
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5503
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5505
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5508
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5516
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5526
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5539
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5546
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5549
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5551
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5554
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5557
		{
			sqlVAL.union.val = true
		}
	case 942:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5558
		{
			sqlVAL.union.val = false
		}
	case 943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5565
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5569
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5572
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5579
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5583
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5586
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5593
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5597
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5601
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5608
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 953:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5612
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5623
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5626
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5634
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5639
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5644
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5648
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5659
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5663
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5668
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5673
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5678
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5683
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5687
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5690
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5700
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5703
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5705
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5708
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5716
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5719
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5727
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5730
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5740
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5744
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5748
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5756
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5764
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5771
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5777
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5779
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5782
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5784
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5787
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5791
		{
		}
	case 989:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5800
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5808
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5814
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5823
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5828
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5832
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5835
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5844
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5848
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5864
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5870
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5876
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5882
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5889
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5894
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5898
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5904
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5911
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5917
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5922
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6042
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6046
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6050
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6089
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6093
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6098
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6102
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6110
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6119
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6123
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6127
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6134
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6138
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6151
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6152
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6153
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6154
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6164
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6165
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6166
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6167
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6175
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6178
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6188
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6197
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6206
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6208
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6212
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6216
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6219
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6224
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6228
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6243
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6251
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6253
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6259
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6267
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6270
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6279
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6285
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6292
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6299
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6306
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6317
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6326
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6334
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6373
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6389
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6407
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6411
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6418
		{

			sqlVAL.union.val = nil
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6424
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6430
		{
			sqlVAL.str = ""
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6434
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6440
		{
			sqlVAL.union.val = nil
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6444
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6449
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6453
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6457
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6461
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6467
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6477
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6481
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6487
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6501
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6516
		{
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6517
		{
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6518
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6537
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6538
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6542
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6543
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6544
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6545
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6546
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6551
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6561
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6567
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6573
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6586
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6595
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6599
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6605
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6610
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6611
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6612
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6613
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6614
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6615
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6616
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6617
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6618
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6623
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6632
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6639
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6644
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6649
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6655
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6662
		{
			sqlVAL.str = ""
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6669
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6675
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6683
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6689
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6695
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6701
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6711
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6717
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6723
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6730
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6737
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6743
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6747
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6753
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6763
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6767
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6787
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6798
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6802
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6808
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6812
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6816
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6820
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6824
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6828
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6854
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6858
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6868
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6872
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6879
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6883
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6887
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6891
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6901
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6905
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6909
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6914
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6920
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6926
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6930
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6936
		{

			sqlVAL.union.val = true
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6941
		{
			sqlVAL.union.val = false
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6946
		{
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6950
		{
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6953
		{
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6957
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6970
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6985
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6998
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7010
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7015
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7021
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7028
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7041
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7053
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7064
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7071
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7075
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7081
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7091
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7102
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7106
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7113
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7119
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7130
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7134
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7140
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7146
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7150
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7156
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7160
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7166
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7171
		{
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7172
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7173
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7174
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7175
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7176
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7194
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7198
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7204
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7210
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7216
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7220
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7240
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7244
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7248
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7252
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7261
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7265
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7277
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7283
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7289
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7301
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7305
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7313
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7332
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7341
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7349
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7353
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7356
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7357
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7360
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7361
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7363
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7364
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7365
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7375
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7377
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7379
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7381
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7383
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7384
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7387
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7389
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7399
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7402
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7420
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7424
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7427
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7438
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7442
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7446
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7450
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7454
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7458
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7461
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7465
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7469
		{
			sqlVAL.str = ""
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7475
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7479
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7483
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7491
		{
			sqlVAL.union.val = true
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7495
		{

			sqlVAL.union.val = true
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7500
		{
			sqlVAL.union.val = false
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7510
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7524
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7536
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7548
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7558
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7568
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7580
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7584
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7588
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7596
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7600
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7604
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7608
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7612
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7616
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7620
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7624
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7628
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7632
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7636
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7640
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7653
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7659
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7663
		{
			sqlVAL.union.val = nil
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7669
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7673
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7678
		{
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7679
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7688
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7696
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7704
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7706
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7708
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7710
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7712
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7714
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7718
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7722
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7728
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7752
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7770
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7789
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7806
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7823
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7827
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7842
		{
			sqlVAL.union.val = false
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.union.val = true
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7852
		{
			sqlVAL.union.val = false
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7858
		{
			sqlVAL.union.val = true
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7862
		{
			sqlVAL.union.val = false
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7868
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7872
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7881
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7887
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7893
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7901
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7925
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7926
		{
			sqlVAL.str = ""
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7929
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7930
		{
			sqlVAL.str = ""
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7934
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7938
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7942
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7954
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7960
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7966
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7974
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7988
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7996
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8006
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8012
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8019
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8025
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8031
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8044
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8050
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8056
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8065
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8073
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8083
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8089
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8099
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8105
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8117
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8126
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8136
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8145
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8157
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8163
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8171
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8180
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8191
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8197
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8209
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8215
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8229
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8235
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8243
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8247
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8259
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8268
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8277
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8286
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8294
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8309
		{
			sqlVAL.union.val = true
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8313
		{
			sqlVAL.union.val = false
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8319
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8327
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8338
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8342
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8346
		{
			sqlVAL.union.val = tree.Types
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8350
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8354
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8358
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8364
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8373
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8377
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8382
		{
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8383
		{
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8386
		{
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8387
		{
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8395
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8398
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8408
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8416
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8425
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8446
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8448
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8454
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8467
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8475
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8477
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8483
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8491
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8494
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8498
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8499
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8500
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8516
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8519
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8521
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8524
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8534
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8537
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8539
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8542
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8551
		{
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8552
		{
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8553
		{
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8563
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8567
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8570
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8573
		{
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8574
		{
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8578
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8582
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8588
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8592
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8598
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8602
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8615
		{
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8617
		{
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8621
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8626
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8630
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8634
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8644
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8650
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8656
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8660
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8666
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8670
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8695
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8710
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8715
		{
			sqlVAL.str = ""
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8720
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8727
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8733
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8738
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8745
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8749
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8755
		{

		}
	case 1485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8762
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8766
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8770
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8779
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8785
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8789
		{
			sqlVAL.str = ""
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8795
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8799
		{
			sqlVAL.str = ""
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8805
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8809
		{
			sqlVAL.str = ""
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8815
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8819
		{
			sqlVAL.str = ""
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8825
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8833
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8838
		{
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8839
		{
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8854
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8861
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8868
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8879
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8886
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8890
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8899
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8904
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8910
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8914
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8918
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8924
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8928
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8948
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8952
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8959
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8967
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8975
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8979
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8984
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8988
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9005
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9017
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9029
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9033
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9046
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9049
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9053
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9064
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9070
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9079
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9085
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9126
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9136
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9151
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9155
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9159
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9167
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9171
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9175
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9179
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9184
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9185
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9193
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9197
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9203
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9212
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9213
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9214
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9215
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9218
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9219
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9222
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9224
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9229
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9264
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9265
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9266
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9288
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9315
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9327
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9340
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9349
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9364
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9371
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9383
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9387
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9392
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9408
		{
			sqlVAL.union.val = true
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9412
		{
			sqlVAL.union.val = false
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9418
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9428
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9440
		{
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9441
		{
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9445
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9449
		{
			sqlVAL.union.val = nil
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9454
		{
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9455
		{
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9459
		{
			sqlVAL.union.val = true
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.union.val = false
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = false
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = true
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9484
		{
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9485
		{
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9488
		{
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9489
		{
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9493
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9503
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9509
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9513
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9520
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9524
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9530
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9542
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9547
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9559
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9563
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9567
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9573
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9582
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9593
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9594
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9602
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9606
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9620
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9624
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9632
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9639
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9661
		{
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9662
		{
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9665
		{
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9666
		{
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9683
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9687
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9692
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9693
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9700
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9701
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9702
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9706
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9729
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9732
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9734
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9749
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9751
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9757
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9767
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9771
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9776
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9781
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9787
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9792
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9797
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9802
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9818
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9825
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9830
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9841
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9845
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9849
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9857
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9891
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9901
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9911
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9919
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9928
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9932
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9936
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9947
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9971
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9977
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9992
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9998
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10000
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10004
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10010
		{
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10012
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10015
		{
			sqlVAL.union.val = nil
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10017
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10021
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10025
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10031
		{
			sqlVAL.union.val = true
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10035
		{
			sqlVAL.union.val = false
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10055
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10059
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10063
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10067
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10071
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10075
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10081
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10085
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10092
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10098
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10105
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10111
		{
			sqlVAL.str = tree.AstFull
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10115
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10119
		{
			sqlVAL.str = tree.AstRight
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10123
		{
			sqlVAL.str = tree.AstInner
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10129
		{
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10130
		{
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10154
		{
			sqlVAL.str = tree.AstHash
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10158
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10162
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10166
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10170
		{
			sqlVAL.str = ""
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10183
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10187
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10192
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10193
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10194
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10195
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10199
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10204
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10222
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10228
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10234
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10244
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10254
		{
			sqlVAL.union.val = true
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10258
		{
			sqlVAL.union.val = false
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10264
		{
			sqlVAL.union.val = true
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10268
		{
			sqlVAL.union.val = false
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10293
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10306
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10314
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10315
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10325
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10332
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10333
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10335
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10343
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10344
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10356
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10363
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10372
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10412
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10424
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10425
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10428
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10430
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10431
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10432
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10433
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10435
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10436
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10439
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10440
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10441
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10442
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10443
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10444
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10446
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10447
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10448
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10449
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10450
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10451
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10452
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10454
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10455
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10456
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10457
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10458
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10459
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10462
		{
			sqlVAL.union.val = types.Geography
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10463
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10466
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10470
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10474
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10482
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10508
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10516
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10524
		{
			sqlVAL.union.val = nil
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = types.Int2
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = types.Int
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = types.Float4
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10555
		{
			sqlVAL.union.val = types.Float
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10559
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10567
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10575
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10583
		{
			sqlVAL.union.val = types.Bool
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10589
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10602
		{
			sqlVAL.union.val = types.Float
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10608
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10614
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10626
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10630
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10636
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10648
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = types.String
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10675
		{
			sqlVAL.union.val = true
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10676
		{
			sqlVAL.union.val = false
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10681
		{
			sqlVAL.union.val = types.Date
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10685
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10693
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10705
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10707
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10716
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10724
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10737
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10741
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10751
		{
			sqlVAL.union.val = true
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10752
		{
			sqlVAL.union.val = false
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10753
		{
			sqlVAL.union.val = false
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10757
		{
			sqlVAL.union.val = types.Interval
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10761
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10765
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10776
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10808
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10816
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10822
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10831
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10840
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10849
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10855
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10864
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10870
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10880
		{
			sqlVAL.union.val = nil
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10886
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10894
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10931
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10935
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10939
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10943
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10954
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10959
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10963
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10967
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10971
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10991
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10995
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10999
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11035
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11043
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11047
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11051
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11071
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11075
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11079
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11083
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11087
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11091
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11095
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11103
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11111
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11121
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11125
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11129
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11141
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11149
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11185
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11193
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11197
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11201
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11205
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11209
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11213
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11217
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11221
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11224
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11226
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11230
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11234
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11238
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11246
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11250
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11254
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11258
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11266
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11270
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11274
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11278
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11282
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11286
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11290
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11307
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11312
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11328
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11332
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11336
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11340
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11344
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11348
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11352
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11356
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11360
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11364
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11368
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11372
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11376
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11380
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11384
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11388
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11392
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11396
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11400
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11404
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11408
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11412
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11416
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11420
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11428
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11438
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11446
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11450
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11464
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11472
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11508
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11512
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11516
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11520
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11524
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11529
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11531
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11535
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11539
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11543
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11547
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11551
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11555
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11564
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11571
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11575
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11579
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11585
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11590
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11594
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11598
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11602
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11606
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11609
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11613
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11617
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11620
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11621
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11623
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11629
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11633
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11636
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11645
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11698
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11711
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11723
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11732
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11733
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11738
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11742
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11746
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11752
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11756
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11760
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11764
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11768
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11772
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11778
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11782
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11786
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11790
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11794
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11798
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11802
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11806
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11810
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11814
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11818
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11822
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11826
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11833
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11836
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11838
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11841
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11843
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11847
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11850
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11852
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11856
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11859
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11861
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11865
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11868
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11870
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11874
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11877
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11879
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11882
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11884
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11887
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11889
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11892
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11894
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11897
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11899
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11902
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11904
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11908
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11911
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11912
		{
			return unimplemented(sqllex, "treat")
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11914
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11918
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11922
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11926
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11930
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11933
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11935
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11938
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11944
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11948
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11954
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11958
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11965
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11969
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11975
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11979
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11985
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11993
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11997
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12001
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12008
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12028
		{
			sqlVAL.str = ""
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12034
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12038
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12044
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12052
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12060
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12068
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12074
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12087
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12115
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12119
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12123
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12127
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12134
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12143
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12147
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12151
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12155
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12160
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12173
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12177
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12184
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12196
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12200
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12204
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12220
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12221
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12222
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12223
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12224
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12225
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12226
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12227
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12228
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12229
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12230
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12231
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12233
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12234
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12235
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12236
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12237
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12238
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12239
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12240
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12241
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12242
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12243
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12244
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12245
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12246
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12247
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12248
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12249
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12250
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12251
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12252
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12253
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12254
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12255
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12260
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12276
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12283
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12284
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12285
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12286
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12309
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12313
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12319
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12323
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12327
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12338
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12342
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12348
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12352
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12359
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12365
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12369
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12375
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12379
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12385
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12389
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12395
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12399
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12405
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12409
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12432
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12436
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12440
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12446
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12453
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12457
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12474
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12478
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12482
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12486
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12490
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12496
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12502
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12508
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12512
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12516
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12522
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12534
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12541
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12545
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12551
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12557
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12561
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12568
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12574
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12578
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12585
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12591
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12595
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12600
		{
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12601
		{
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12605
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12609
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12615
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12624
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12628
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12632
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12640
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12644
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12650
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12654
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12673
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12681
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12704
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12713
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12717
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12721
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12725
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12731
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12735
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12750
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12754
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12766
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12770
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12779
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12790
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12799
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12807
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12824
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12909
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12917
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12921
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12927
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12931
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12939
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12966
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12973
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12977
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12981
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12995
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12999
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13003
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13016
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13025
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13043
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13056
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13063
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13088
		{
			sqlVAL.str = ""
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13094
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13098
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
