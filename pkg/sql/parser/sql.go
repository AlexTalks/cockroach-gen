// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:74

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}

//line sql-gen.y:690
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12034

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 33,
	-2, 1366,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 71,
	232, 206,
	485, 206,
	-2, 0,
	-1, 82,
	221, 1159,
	234, 1159,
	250, 348,
	374, 348,
	384, 941,
	416, 348,
	428, 941,
	470, 941,
	496, 348,
	522, 941,
	-2, 0,
	-1, 88,
	250, 352,
	-2, 0,
	-1, 89,
	129, 1366,
	227, 1366,
	507, 1366,
	508, 1366,
	-2, 0,
	-1, 105,
	146, 1337,
	164, 1337,
	177, 1337,
	230, 1337,
	263, 1337,
	327, 1337,
	337, 1337,
	502, 1337,
	-2, 1308,
	-1, 141,
	154, 818,
	249, 818,
	377, 787,
	433, 787,
	488, 818,
	490, 787,
	-2, 0,
	-1, 143,
	4, 1368,
	21, 1368,
	22, 1368,
	23, 1368,
	24, 1368,
	25, 1368,
	26, 1368,
	27, 1368,
	29, 1368,
	30, 1368,
	36, 1368,
	41, 1368,
	42, 1368,
	44, 1368,
	45, 1368,
	46, 1368,
	47, 1368,
	48, 1368,
	49, 1368,
	50, 1368,
	52, 1368,
	53, 1368,
	54, 1368,
	55, 1368,
	57, 1368,
	58, 1368,
	59, 1368,
	60, 1368,
	61, 1368,
	62, 1368,
	63, 1368,
	67, 1368,
	68, 1368,
	69, 1368,
	70, 1368,
	72, 1368,
	73, 1368,
	74, 1368,
	78, 1368,
	79, 1368,
	80, 1368,
	81, 1368,
	82, 1368,
	83, 1368,
	84, 1368,
	87, 1368,
	88, 1368,
	89, 1368,
	90, 1368,
	91, 1368,
	93, 1368,
	95, 1368,
	96, 1368,
	97, 1368,
	98, 1368,
	99, 1368,
	100, 1368,
	102, 1368,
	103, 1368,
	104, 1368,
	106, 1368,
	107, 1368,
	115, 1368,
	116, 1368,
	117, 1368,
	118, 1368,
	120, 1368,
	121, 1368,
	122, 1368,
	124, 1368,
	125, 1368,
	126, 1368,
	128, 1368,
	129, 1368,
	131, 1368,
	132, 1368,
	133, 1368,
	136, 1368,
	137, 1368,
	138, 1368,
	140, 1368,
	141, 1368,
	143, 1368,
	144, 1368,
	145, 1368,
	147, 1368,
	148, 1368,
	149, 1368,
	150, 1368,
	151, 1368,
	152, 1368,
	153, 1368,
	154, 1368,
	155, 1368,
	156, 1368,
	157, 1368,
	158, 1368,
	159, 1368,
	160, 1368,
	161, 1368,
	163, 1368,
	169, 1368,
	170, 1368,
	171, 1368,
	172, 1368,
	176, 1368,
	178, 1368,
	182, 1368,
	183, 1368,
	184, 1368,
	185, 1368,
	186, 1368,
	187, 1368,
	188, 1368,
	189, 1368,
	190, 1368,
	191, 1368,
	192, 1368,
	193, 1368,
	195, 1368,
	196, 1368,
	198, 1368,
	199, 1368,
	201, 1368,
	202, 1368,
	203, 1368,
	204, 1368,
	205, 1368,
	206, 1368,
	207, 1368,
	208, 1368,
	209, 1368,
	211, 1368,
	212, 1368,
	214, 1368,
	215, 1368,
	216, 1368,
	217, 1368,
	221, 1368,
	222, 1368,
	223, 1368,
	224, 1368,
	227, 1368,
	228, 1368,
	229, 1368,
	231, 1368,
	233, 1368,
	234, 1368,
	236, 1368,
	238, 1368,
	239, 1368,
	240, 1368,
	242, 1368,
	246, 1368,
	247, 1368,
	248, 1368,
	249, 1368,
	250, 1368,
	251, 1368,
	253, 1368,
	254, 1368,
	255, 1368,
	257, 1368,
	258, 1368,
	260, 1368,
	261, 1368,
	264, 1368,
	268, 1368,
	269, 1368,
	272, 1368,
	273, 1368,
	274, 1368,
	275, 1368,
	277, 1368,
	278, 1368,
	279, 1368,
	280, 1368,
	281, 1368,
	282, 1368,
	283, 1368,
	284, 1368,
	285, 1368,
	286, 1368,
	287, 1368,
	288, 1368,
	289, 1368,
	290, 1368,
	291, 1368,
	292, 1368,
	293, 1368,
	294, 1368,
	295, 1368,
	296, 1368,
	297, 1368,
	298, 1368,
	300, 1368,
	302, 1368,
	303, 1368,
	304, 1368,
	305, 1368,
	306, 1368,
	307, 1368,
	308, 1368,
	309, 1368,
	310, 1368,
	311, 1368,
	312, 1368,
	313, 1368,
	315, 1368,
	317, 1368,
	319, 1368,
	320, 1368,
	322, 1368,
	323, 1368,
	324, 1368,
	325, 1368,
	326, 1368,
	329, 1368,
	332, 1368,
	333, 1368,
	334, 1368,
	335, 1368,
	338, 1368,
	339, 1368,
	340, 1368,
	342, 1368,
	344, 1368,
	345, 1368,
	346, 1368,
	347, 1368,
	348, 1368,
	349, 1368,
	350, 1368,
	351, 1368,
	352, 1368,
	353, 1368,
	354, 1368,
	355, 1368,
	357, 1368,
	358, 1368,
	359, 1368,
	360, 1368,
	361, 1368,
	362, 1368,
	363, 1368,
	364, 1368,
	365, 1368,
	366, 1368,
	367, 1368,
	368, 1368,
	369, 1368,
	370, 1368,
	371, 1368,
	373, 1368,
	375, 1368,
	376, 1368,
	377, 1368,
	378, 1368,
	379, 1368,
	380, 1368,
	381, 1368,
	382, 1368,
	383, 1368,
	384, 1368,
	385, 1368,
	386, 1368,
	388, 1368,
	394, 1368,
	396, 1368,
	397, 1368,
	398, 1368,
	399, 1368,
	400, 1368,
	401, 1368,
	402, 1368,
	403, 1368,
	405, 1368,
	406, 1368,
	407, 1368,
	409, 1368,
	410, 1368,
	411, 1368,
	412, 1368,
	413, 1368,
	414, 1368,
	416, 1368,
	417, 1368,
	418, 1368,
	419, 1368,
	420, 1368,
	421, 1368,
	422, 1368,
	423, 1368,
	424, 1368,
	425, 1368,
	426, 1368,
	428, 1368,
	429, 1368,
	430, 1368,
	431, 1368,
	432, 1368,
	433, 1368,
	435, 1368,
	436, 1368,
	437, 1368,
	438, 1368,
	439, 1368,
	440, 1368,
	442, 1368,
	443, 1368,
	444, 1368,
	445, 1368,
	446, 1368,
	447, 1368,
	448, 1368,
	450, 1368,
	452, 1368,
	453, 1368,
	454, 1368,
	455, 1368,
	456, 1368,
	457, 1368,
	458, 1368,
	459, 1368,
	460, 1368,
	461, 1368,
	462, 1368,
	463, 1368,
	464, 1368,
	466, 1368,
	467, 1368,
	469, 1368,
	471, 1368,
	472, 1368,
	473, 1368,
	474, 1368,
	475, 1368,
	476, 1368,
	477, 1368,
	478, 1368,
	480, 1368,
	481, 1368,
	482, 1368,
	483, 1368,
	484, 1368,
	486, 1368,
	488, 1368,
	489, 1368,
	490, 1368,
	491, 1368,
	492, 1368,
	493, 1368,
	495, 1368,
	496, 1368,
	497, 1368,
	498, 1368,
	500, 1368,
	501, 1368,
	504, 1368,
	505, 1368,
	506, 1368,
	507, 1368,
	508, 1368,
	509, 1368,
	510, 1368,
	512, 1368,
	515, 1368,
	516, 1368,
	517, 1368,
	518, 1368,
	519, 1368,
	520, 1368,
	522, 1368,
	523, 1368,
	524, 1368,
	525, 1368,
	530, 1368,
	531, 1368,
	532, 1368,
	533, 1368,
	534, 1368,
	535, 1368,
	-2, 0,
	-1, 144,
	1, 1237,
	127, 1237,
	238, 1237,
	316, 1237,
	373, 1237,
	381, 1237,
	539, 1237,
	563, 1237,
	-2, 0,
	-1, 146,
	1, 1237,
	563, 1237,
	-2, 0,
	-1, 147,
	1, 1237,
	563, 1237,
	-2, 0,
	-1, 148,
	1, 1237,
	485, 1237,
	563, 1237,
	-2, 0,
	-1, 177,
	146, 1336,
	164, 1336,
	177, 1336,
	230, 1336,
	263, 1336,
	327, 1336,
	337, 1336,
	502, 1336,
	-2, 1311,
	-1, 215,
	4, 1375,
	5, 1375,
	6, 1375,
	7, 1375,
	8, 1375,
	9, 1375,
	10, 1375,
	21, 1375,
	22, 1375,
	23, 1375,
	24, 1375,
	25, 1375,
	26, 1375,
	27, 1375,
	29, 1375,
	30, 1375,
	36, 1375,
	37, 1375,
	41, 1375,
	42, 1375,
	43, 1375,
	44, 1375,
	45, 1375,
	46, 1375,
	47, 1375,
	48, 1375,
	49, 1375,
	50, 1375,
	52, 1375,
	53, 1375,
	54, 1375,
	55, 1375,
	57, 1375,
	58, 1375,
	59, 1375,
	60, 1375,
	61, 1375,
	62, 1375,
	63, 1375,
	64, 1375,
	65, 1375,
	66, 1375,
	67, 1375,
	68, 1375,
	69, 1375,
	70, 1375,
	72, 1375,
	73, 1375,
	74, 1375,
	76, 1375,
	78, 1375,
	79, 1375,
	80, 1375,
	81, 1375,
	82, 1375,
	83, 1375,
	84, 1375,
	87, 1375,
	88, 1375,
	89, 1375,
	90, 1375,
	91, 1375,
	93, 1375,
	95, 1375,
	96, 1375,
	97, 1375,
	98, 1375,
	99, 1375,
	100, 1375,
	102, 1375,
	103, 1375,
	104, 1375,
	105, 1375,
	106, 1375,
	107, 1375,
	108, 1375,
	109, 1375,
	110, 1375,
	111, 1375,
	112, 1375,
	113, 1375,
	114, 1375,
	115, 1375,
	116, 1375,
	117, 1375,
	118, 1375,
	119, 1375,
	120, 1375,
	121, 1375,
	122, 1375,
	123, 1375,
	124, 1375,
	125, 1375,
	126, 1375,
	128, 1375,
	129, 1375,
	131, 1375,
	132, 1375,
	133, 1375,
	136, 1375,
	137, 1375,
	138, 1375,
	140, 1375,
	141, 1375,
	143, 1375,
	144, 1375,
	145, 1375,
	147, 1375,
	148, 1375,
	149, 1375,
	150, 1375,
	151, 1375,
	152, 1375,
	153, 1375,
	154, 1375,
	155, 1375,
	156, 1375,
	157, 1375,
	158, 1375,
	159, 1375,
	160, 1375,
	161, 1375,
	162, 1375,
	163, 1375,
	169, 1375,
	170, 1375,
	171, 1375,
	172, 1375,
	176, 1375,
	178, 1375,
	181, 1375,
	182, 1375,
	183, 1375,
	184, 1375,
	185, 1375,
	186, 1375,
	187, 1375,
	188, 1375,
	189, 1375,
	190, 1375,
	191, 1375,
	192, 1375,
	193, 1375,
	195, 1375,
	196, 1375,
	198, 1375,
	199, 1375,
	201, 1375,
	202, 1375,
	203, 1375,
	204, 1375,
	205, 1375,
	206, 1375,
	207, 1375,
	208, 1375,
	209, 1375,
	210, 1375,
	211, 1375,
	212, 1375,
	214, 1375,
	215, 1375,
	216, 1375,
	217, 1375,
	221, 1375,
	222, 1375,
	223, 1375,
	224, 1375,
	226, 1375,
	227, 1375,
	228, 1375,
	229, 1375,
	231, 1375,
	233, 1375,
	234, 1375,
	235, 1375,
	236, 1375,
	237, 1375,
	238, 1375,
	239, 1375,
	240, 1375,
	241, 1375,
	242, 1375,
	246, 1375,
	247, 1375,
	248, 1375,
	249, 1375,
	250, 1375,
	251, 1375,
	253, 1375,
	254, 1375,
	255, 1375,
	257, 1375,
	258, 1375,
	259, 1375,
	260, 1375,
	261, 1375,
	262, 1375,
	264, 1375,
	268, 1375,
	269, 1375,
	270, 1375,
	271, 1375,
	272, 1375,
	273, 1375,
	274, 1375,
	275, 1375,
	277, 1375,
	278, 1375,
	279, 1375,
	280, 1375,
	281, 1375,
	282, 1375,
	283, 1375,
	284, 1375,
	285, 1375,
	286, 1375,
	287, 1375,
	288, 1375,
	289, 1375,
	290, 1375,
	291, 1375,
	292, 1375,
	293, 1375,
	294, 1375,
	295, 1375,
	296, 1375,
	297, 1375,
	298, 1375,
	300, 1375,
	301, 1375,
	302, 1375,
	303, 1375,
	304, 1375,
	305, 1375,
	306, 1375,
	307, 1375,
	308, 1375,
	309, 1375,
	310, 1375,
	311, 1375,
	312, 1375,
	313, 1375,
	314, 1375,
	315, 1375,
	316, 1375,
	317, 1375,
	318, 1375,
	319, 1375,
	320, 1375,
	321, 1375,
	322, 1375,
	323, 1375,
	324, 1375,
	325, 1375,
	326, 1375,
	329, 1375,
	333, 1375,
	334, 1375,
	335, 1375,
	338, 1375,
	339, 1375,
	340, 1375,
	341, 1375,
	342, 1375,
	343, 1375,
	344, 1375,
	345, 1375,
	346, 1375,
	347, 1375,
	348, 1375,
	349, 1375,
	350, 1375,
	351, 1375,
	352, 1375,
	353, 1375,
	354, 1375,
	355, 1375,
	357, 1375,
	358, 1375,
	359, 1375,
	360, 1375,
	361, 1375,
	362, 1375,
	363, 1375,
	364, 1375,
	365, 1375,
	366, 1375,
	367, 1375,
	368, 1375,
	369, 1375,
	370, 1375,
	371, 1375,
	373, 1375,
	375, 1375,
	376, 1375,
	377, 1375,
	378, 1375,
	379, 1375,
	380, 1375,
	381, 1375,
	382, 1375,
	383, 1375,
	384, 1375,
	385, 1375,
	386, 1375,
	388, 1375,
	394, 1375,
	396, 1375,
	397, 1375,
	398, 1375,
	399, 1375,
	400, 1375,
	401, 1375,
	402, 1375,
	403, 1375,
	405, 1375,
	406, 1375,
	407, 1375,
	408, 1375,
	409, 1375,
	410, 1375,
	411, 1375,
	412, 1375,
	413, 1375,
	414, 1375,
	416, 1375,
	417, 1375,
	418, 1375,
	419, 1375,
	420, 1375,
	421, 1375,
	422, 1375,
	423, 1375,
	424, 1375,
	425, 1375,
	426, 1375,
	428, 1375,
	429, 1375,
	430, 1375,
	431, 1375,
	432, 1375,
	433, 1375,
	434, 1375,
	435, 1375,
	436, 1375,
	437, 1375,
	438, 1375,
	439, 1375,
	440, 1375,
	441, 1375,
	442, 1375,
	443, 1375,
	444, 1375,
	445, 1375,
	446, 1375,
	447, 1375,
	448, 1375,
	450, 1375,
	452, 1375,
	453, 1375,
	454, 1375,
	455, 1375,
	456, 1375,
	457, 1375,
	458, 1375,
	459, 1375,
	460, 1375,
	461, 1375,
	462, 1375,
	463, 1375,
	464, 1375,
	466, 1375,
	467, 1375,
	468, 1375,
	469, 1375,
	471, 1375,
	472, 1375,
	473, 1375,
	474, 1375,
	475, 1375,
	476, 1375,
	477, 1375,
	478, 1375,
	480, 1375,
	481, 1375,
	482, 1375,
	483, 1375,
	484, 1375,
	486, 1375,
	488, 1375,
	489, 1375,
	490, 1375,
	491, 1375,
	492, 1375,
	493, 1375,
	494, 1375,
	495, 1375,
	496, 1375,
	497, 1375,
	498, 1375,
	500, 1375,
	501, 1375,
	503, 1375,
	504, 1375,
	505, 1375,
	506, 1375,
	507, 1375,
	508, 1375,
	509, 1375,
	510, 1375,
	511, 1375,
	512, 1375,
	515, 1375,
	516, 1375,
	517, 1375,
	518, 1375,
	519, 1375,
	520, 1375,
	522, 1375,
	523, 1375,
	524, 1375,
	525, 1375,
	530, 1375,
	531, 1375,
	532, 1375,
	533, 1375,
	534, 1375,
	535, 1375,
	536, 1375,
	544, 1375,
	551, 1375,
	552, 1375,
	553, 1375,
	560, 1375,
	564, 1375,
	-2, 0,
	-1, 674,
	180, 2121,
	485, 2121,
	543, 2121,
	562, 2121,
	-2, 0,
	-1, 675,
	180, 2219,
	485, 2219,
	543, 2219,
	562, 2219,
	-2, 0,
	-1, 676,
	180, 2108,
	485, 2108,
	543, 2108,
	562, 2108,
	-2, 0,
	-1, 678,
	180, 2343,
	485, 2343,
	543, 2343,
	562, 2343,
	-2, 0,
	-1, 680,
	180, 2378,
	485, 2378,
	543, 2378,
	562, 2378,
	-2, 0,
	-1, 687,
	180, 2245,
	485, 2245,
	543, 2245,
	562, 2245,
	-2, 628,
	-1, 719,
	562, 2058,
	565, 2058,
	-2, 876,
	-1, 720,
	562, 2060,
	565, 2060,
	-2, 877,
	-1, 721,
	562, 2059,
	565, 2059,
	-2, 878,
	-1, 722,
	565, 1992,
	-2, 879,
	-1, 745,
	177, 220,
	-2, 0,
	-1, 767,
	43, 2062,
	-2, 0,
	-1, 768,
	522, 1136,
	-2, 942,
	-1, 784,
	4, 1501,
	21, 1501,
	22, 1501,
	23, 1501,
	24, 1501,
	25, 1501,
	26, 1501,
	27, 1501,
	29, 1501,
	30, 1501,
	36, 1501,
	41, 1501,
	42, 1501,
	44, 1501,
	45, 1501,
	46, 1501,
	47, 1501,
	48, 1501,
	49, 1501,
	50, 1501,
	52, 1501,
	53, 1501,
	54, 1501,
	55, 1501,
	57, 1501,
	58, 1501,
	59, 1501,
	60, 1501,
	61, 1501,
	62, 1501,
	63, 1501,
	67, 1501,
	68, 1501,
	69, 1501,
	70, 1501,
	72, 1501,
	73, 1501,
	74, 1501,
	78, 1501,
	79, 1501,
	80, 1501,
	81, 1501,
	82, 1501,
	83, 1501,
	84, 1501,
	87, 1501,
	88, 1501,
	89, 1501,
	90, 1501,
	91, 1501,
	93, 1501,
	95, 1501,
	96, 1501,
	97, 1501,
	98, 1501,
	99, 1501,
	100, 1501,
	102, 1501,
	103, 1501,
	104, 1501,
	106, 1501,
	107, 1501,
	115, 1501,
	116, 1501,
	117, 1501,
	118, 1501,
	120, 1501,
	121, 1501,
	122, 1501,
	124, 1501,
	125, 1501,
	126, 1501,
	128, 1501,
	129, 1501,
	131, 1501,
	132, 1501,
	133, 1501,
	136, 1501,
	137, 1501,
	138, 1501,
	140, 1501,
	141, 1501,
	143, 1501,
	144, 1501,
	145, 1501,
	147, 1501,
	148, 1501,
	149, 1501,
	150, 1501,
	151, 1501,
	152, 1501,
	153, 1501,
	154, 1501,
	155, 1501,
	156, 1501,
	157, 1501,
	158, 1501,
	159, 1501,
	160, 1501,
	161, 1501,
	163, 1501,
	169, 1501,
	170, 1501,
	171, 1501,
	172, 1501,
	176, 1501,
	178, 1501,
	182, 1501,
	183, 1501,
	184, 1501,
	185, 1501,
	186, 1501,
	187, 1501,
	188, 1501,
	189, 1501,
	190, 1501,
	191, 1501,
	192, 1501,
	193, 1501,
	195, 1501,
	196, 1501,
	198, 1501,
	199, 1501,
	201, 1501,
	202, 1501,
	203, 1501,
	204, 1501,
	205, 1501,
	206, 1501,
	207, 1501,
	208, 1501,
	209, 1501,
	211, 1501,
	212, 1501,
	214, 1501,
	215, 1501,
	216, 1501,
	217, 1501,
	221, 1501,
	222, 1501,
	223, 1501,
	224, 1501,
	227, 1501,
	228, 1501,
	229, 1501,
	231, 1501,
	233, 1501,
	234, 1501,
	236, 1501,
	238, 1501,
	239, 1501,
	240, 1501,
	242, 1501,
	246, 1501,
	247, 1501,
	248, 1501,
	249, 1501,
	250, 1501,
	251, 1501,
	253, 1501,
	254, 1501,
	255, 1501,
	257, 1501,
	258, 1501,
	260, 1501,
	261, 1501,
	264, 1501,
	268, 1501,
	269, 1501,
	272, 1501,
	273, 1501,
	274, 1501,
	275, 1501,
	277, 1501,
	278, 1501,
	279, 1501,
	280, 1501,
	281, 1501,
	282, 1501,
	283, 1501,
	284, 1501,
	285, 1501,
	286, 1501,
	287, 1501,
	288, 1501,
	289, 1501,
	290, 1501,
	291, 1501,
	292, 1501,
	293, 1501,
	294, 1501,
	295, 1501,
	296, 1501,
	297, 1501,
	298, 1501,
	300, 1501,
	302, 1501,
	303, 1501,
	304, 1501,
	305, 1501,
	306, 1501,
	307, 1501,
	308, 1501,
	309, 1501,
	310, 1501,
	311, 1501,
	312, 1501,
	313, 1501,
	315, 1501,
	317, 1501,
	319, 1501,
	320, 1501,
	322, 1501,
	323, 1501,
	324, 1501,
	325, 1501,
	326, 1501,
	329, 1501,
	333, 1501,
	334, 1501,
	335, 1501,
	338, 1501,
	339, 1501,
	340, 1501,
	342, 1501,
	344, 1501,
	345, 1501,
	346, 1501,
	347, 1501,
	348, 1501,
	349, 1501,
	350, 1501,
	351, 1501,
	352, 1501,
	353, 1501,
	354, 1501,
	355, 1501,
	357, 1501,
	358, 1501,
	359, 1501,
	360, 1501,
	361, 1501,
	362, 1501,
	363, 1501,
	364, 1501,
	365, 1501,
	366, 1501,
	367, 1501,
	368, 1501,
	369, 1501,
	370, 1501,
	371, 1501,
	373, 1501,
	375, 1501,
	376, 1501,
	377, 1501,
	378, 1501,
	379, 1501,
	380, 1501,
	381, 1501,
	382, 1501,
	383, 1501,
	384, 1501,
	385, 1501,
	386, 1501,
	388, 1501,
	394, 1501,
	396, 1501,
	397, 1501,
	398, 1501,
	399, 1501,
	400, 1501,
	401, 1501,
	402, 1501,
	403, 1501,
	405, 1501,
	406, 1501,
	407, 1501,
	409, 1501,
	410, 1501,
	411, 1501,
	412, 1501,
	413, 1501,
	414, 1501,
	416, 1501,
	417, 1501,
	418, 1501,
	419, 1501,
	420, 1501,
	421, 1501,
	422, 1501,
	423, 1501,
	424, 1501,
	425, 1501,
	426, 1501,
	428, 1501,
	429, 1501,
	430, 1501,
	431, 1501,
	432, 1501,
	433, 1501,
	435, 1501,
	436, 1501,
	437, 1501,
	438, 1501,
	439, 1501,
	440, 1501,
	442, 1501,
	443, 1501,
	444, 1501,
	445, 1501,
	446, 1501,
	447, 1501,
	448, 1501,
	450, 1501,
	452, 1501,
	453, 1501,
	454, 1501,
	455, 1501,
	456, 1501,
	457, 1501,
	458, 1501,
	459, 1501,
	460, 1501,
	461, 1501,
	462, 1501,
	463, 1501,
	464, 1501,
	466, 1501,
	467, 1501,
	469, 1501,
	471, 1501,
	472, 1501,
	473, 1501,
	474, 1501,
	475, 1501,
	476, 1501,
	477, 1501,
	478, 1501,
	480, 1501,
	481, 1501,
	482, 1501,
	483, 1501,
	484, 1501,
	486, 1501,
	488, 1501,
	489, 1501,
	490, 1501,
	491, 1501,
	492, 1501,
	493, 1501,
	495, 1501,
	496, 1501,
	497, 1501,
	498, 1501,
	500, 1501,
	501, 1501,
	504, 1501,
	505, 1501,
	506, 1501,
	507, 1501,
	508, 1501,
	509, 1501,
	510, 1501,
	512, 1501,
	515, 1501,
	516, 1501,
	517, 1501,
	518, 1501,
	519, 1501,
	520, 1501,
	522, 1501,
	523, 1501,
	524, 1501,
	525, 1501,
	530, 1501,
	531, 1501,
	532, 1501,
	533, 1501,
	534, 1501,
	535, 1501,
	-2, 0,
	-1, 809,
	4, 1157,
	21, 1157,
	22, 1157,
	23, 1157,
	24, 1157,
	25, 1157,
	26, 1157,
	27, 1157,
	29, 1157,
	30, 1157,
	36, 1157,
	41, 1157,
	42, 1157,
	44, 1157,
	45, 1157,
	46, 1157,
	47, 1157,
	48, 1157,
	49, 1157,
	50, 1157,
	52, 1157,
	53, 1157,
	54, 1157,
	55, 1157,
	57, 1157,
	58, 1157,
	59, 1157,
	60, 1157,
	61, 1157,
	62, 1157,
	63, 1157,
	67, 1157,
	68, 1157,
	69, 1157,
	70, 1157,
	72, 1157,
	73, 1157,
	74, 1157,
	78, 1157,
	79, 1157,
	80, 1157,
	81, 1157,
	82, 1157,
	83, 1157,
	84, 1157,
	87, 1157,
	88, 1157,
	89, 1157,
	90, 1157,
	91, 1157,
	93, 1157,
	95, 1157,
	96, 1157,
	97, 1157,
	98, 1157,
	99, 1157,
	100, 1157,
	102, 1157,
	103, 1157,
	104, 1157,
	106, 1157,
	107, 1157,
	115, 1157,
	116, 1157,
	117, 1157,
	118, 1157,
	120, 1157,
	121, 1157,
	122, 1157,
	124, 1157,
	125, 1157,
	126, 1157,
	128, 1157,
	129, 1157,
	131, 1157,
	132, 1157,
	133, 1157,
	136, 1157,
	137, 1157,
	138, 1157,
	140, 1157,
	141, 1157,
	143, 1157,
	144, 1157,
	145, 1157,
	147, 1157,
	148, 1157,
	149, 1157,
	150, 1157,
	151, 1157,
	152, 1157,
	153, 1157,
	154, 1157,
	155, 1157,
	156, 1157,
	157, 1157,
	158, 1157,
	159, 1157,
	160, 1157,
	161, 1157,
	163, 1157,
	169, 1157,
	170, 1157,
	171, 1157,
	172, 1157,
	176, 1157,
	178, 1157,
	182, 1157,
	183, 1157,
	184, 1157,
	185, 1157,
	186, 1157,
	187, 1157,
	188, 1157,
	189, 1157,
	190, 1157,
	191, 1157,
	192, 1157,
	193, 1157,
	195, 1157,
	196, 1157,
	198, 1157,
	199, 1157,
	201, 1157,
	202, 1157,
	203, 1157,
	204, 1157,
	205, 1157,
	206, 1157,
	207, 1157,
	208, 1157,
	209, 1157,
	211, 1157,
	212, 1157,
	214, 1157,
	215, 1157,
	216, 1157,
	217, 1157,
	221, 1157,
	222, 1157,
	223, 1157,
	224, 1157,
	227, 1157,
	228, 1157,
	229, 1157,
	231, 1157,
	233, 1157,
	234, 1157,
	236, 1157,
	238, 1157,
	239, 1157,
	240, 1157,
	242, 1157,
	246, 1157,
	247, 1157,
	248, 1157,
	249, 1157,
	250, 1157,
	251, 1157,
	253, 1157,
	254, 1157,
	255, 1157,
	257, 1157,
	258, 1157,
	260, 1157,
	261, 1157,
	264, 1157,
	268, 1157,
	269, 1157,
	272, 1157,
	273, 1157,
	274, 1157,
	275, 1157,
	277, 1157,
	278, 1157,
	279, 1157,
	280, 1157,
	281, 1157,
	282, 1157,
	283, 1157,
	284, 1157,
	285, 1157,
	286, 1157,
	287, 1157,
	288, 1157,
	289, 1157,
	290, 1157,
	291, 1157,
	292, 1157,
	293, 1157,
	294, 1157,
	295, 1157,
	296, 1157,
	297, 1157,
	298, 1157,
	300, 1157,
	302, 1157,
	303, 1157,
	304, 1157,
	305, 1157,
	306, 1157,
	307, 1157,
	308, 1157,
	309, 1157,
	310, 1157,
	311, 1157,
	312, 1157,
	313, 1157,
	315, 1157,
	317, 1157,
	319, 1157,
	320, 1157,
	322, 1157,
	323, 1157,
	324, 1157,
	325, 1157,
	326, 1157,
	329, 1157,
	333, 1157,
	334, 1157,
	335, 1157,
	338, 1157,
	339, 1157,
	340, 1157,
	342, 1157,
	344, 1157,
	345, 1157,
	346, 1157,
	347, 1157,
	348, 1157,
	349, 1157,
	350, 1157,
	351, 1157,
	352, 1157,
	353, 1157,
	354, 1157,
	355, 1157,
	357, 1157,
	358, 1157,
	359, 1157,
	360, 1157,
	361, 1157,
	362, 1157,
	363, 1157,
	364, 1157,
	365, 1157,
	366, 1157,
	367, 1157,
	368, 1157,
	369, 1157,
	370, 1157,
	371, 1157,
	373, 1157,
	375, 1157,
	376, 1157,
	377, 1157,
	378, 1157,
	379, 1157,
	380, 1157,
	381, 1157,
	382, 1157,
	383, 1157,
	384, 1157,
	385, 1157,
	386, 1157,
	388, 1157,
	394, 1157,
	396, 1157,
	397, 1157,
	398, 1157,
	399, 1157,
	400, 1157,
	401, 1157,
	402, 1157,
	403, 1157,
	405, 1157,
	406, 1157,
	407, 1157,
	409, 1157,
	410, 1157,
	411, 1157,
	412, 1157,
	413, 1157,
	414, 1157,
	416, 1157,
	417, 1157,
	418, 1157,
	419, 1157,
	420, 1157,
	421, 1157,
	422, 1157,
	423, 1157,
	424, 1157,
	425, 1157,
	426, 1157,
	428, 1157,
	429, 1157,
	430, 1157,
	431, 1157,
	432, 1157,
	433, 1157,
	435, 1157,
	436, 1157,
	437, 1157,
	438, 1157,
	439, 1157,
	440, 1157,
	442, 1157,
	443, 1157,
	444, 1157,
	445, 1157,
	446, 1157,
	447, 1157,
	448, 1157,
	450, 1157,
	452, 1157,
	453, 1157,
	454, 1157,
	455, 1157,
	456, 1157,
	457, 1157,
	458, 1157,
	459, 1157,
	460, 1157,
	461, 1157,
	462, 1157,
	463, 1157,
	464, 1157,
	466, 1157,
	467, 1157,
	469, 1157,
	471, 1157,
	472, 1157,
	473, 1157,
	474, 1157,
	475, 1157,
	476, 1157,
	477, 1157,
	478, 1157,
	480, 1157,
	481, 1157,
	482, 1157,
	483, 1157,
	484, 1157,
	486, 1157,
	488, 1157,
	489, 1157,
	490, 1157,
	491, 1157,
	492, 1157,
	493, 1157,
	495, 1157,
	496, 1157,
	497, 1157,
	498, 1157,
	500, 1157,
	501, 1157,
	504, 1157,
	505, 1157,
	506, 1157,
	507, 1157,
	508, 1157,
	509, 1157,
	510, 1157,
	512, 1157,
	515, 1157,
	516, 1157,
	517, 1157,
	518, 1157,
	519, 1157,
	520, 1157,
	522, 1157,
	523, 1157,
	524, 1157,
	525, 1157,
	530, 1157,
	531, 1157,
	532, 1157,
	533, 1157,
	534, 1157,
	535, 1157,
	-2, 0,
	-1, 890,
	377, 788,
	433, 788,
	490, 788,
	-2, 0,
	-1, 891,
	377, 787,
	433, 787,
	490, 787,
	-2, 729,
	-1, 895,
	1, 832,
	559, 832,
	561, 832,
	563, 832,
	-2, 0,
	-1, 896,
	1, 764,
	559, 764,
	561, 764,
	563, 764,
	-2, 0,
	-1, 897,
	1, 766,
	559, 766,
	561, 766,
	563, 766,
	-2, 0,
	-1, 898,
	1, 875,
	177, 875,
	559, 875,
	561, 875,
	563, 875,
	-2, 0,
	-1, 906,
	1, 791,
	559, 791,
	561, 791,
	563, 791,
	-2, 0,
	-1, 912,
	1, 832,
	559, 832,
	561, 832,
	563, 832,
	-2, 0,
	-1, 913,
	1, 834,
	559, 834,
	561, 834,
	563, 834,
	-2, 0,
	-1, 914,
	1, 837,
	559, 837,
	561, 837,
	563, 837,
	-2, 0,
	-1, 920,
	1, 854,
	559, 854,
	561, 854,
	563, 854,
	-2, 0,
	-1, 921,
	1, 856,
	559, 856,
	561, 856,
	563, 856,
	-2, 0,
	-1, 970,
	164, 1377,
	177, 1377,
	263, 1377,
	327, 1377,
	-2, 1315,
	-1, 985,
	164, 1376,
	177, 1376,
	263, 1376,
	327, 1376,
	-2, 1312,
	-1, 1011,
	562, 2057,
	-2, 636,
	-1, 1039,
	5, 2049,
	560, 2047,
	-2, 2038,
	-1, 1047,
	5, 2070,
	560, 2067,
	-2, 2058,
	-1, 1048,
	5, 2071,
	560, 2068,
	-2, 2059,
	-1, 1056,
	562, 2055,
	-2, 2037,
	-1, 1057,
	560, 2460,
	-2, 2056,
	-1, 1080,
	560, 2459,
	-2, 2072,
	-1, 1081,
	5, 1576,
	-2, 2430,
	-1, 1082,
	5, 1577,
	-2, 2431,
	-1, 1083,
	5, 1578,
	-2, 2445,
	-1, 1084,
	5, 1579,
	-2, 2409,
	-1, 1085,
	5, 1580,
	-2, 2443,
	-1, 1086,
	5, 1588,
	-2, 2422,
	-1, 1087,
	5, 1575,
	-2, 2418,
	-1, 1088,
	5, 1575,
	-2, 2417,
	-1, 1089,
	5, 1575,
	-2, 2436,
	-1, 1090,
	5, 1586,
	-2, 2411,
	-1, 1091,
	5, 1591,
	-2, 2410,
	-1, 1092,
	5, 1593,
	-2, 2455,
	-1, 1095,
	5, 1615,
	-2, 2448,
	-1, 1096,
	5, 1607,
	-2, 2449,
	-1, 1097,
	5, 1615,
	-2, 2450,
	-1, 1098,
	5, 1611,
	-2, 2451,
	-1, 1099,
	5, 1561,
	-2, 2423,
	-1, 1100,
	5, 1562,
	-2, 2424,
	-1, 1101,
	5, 1563,
	-2, 2412,
	-1, 1129,
	5, 1598,
	-2, 2456,
	-1, 1130,
	5, 1599,
	-2, 2446,
	-1, 1131,
	5, 1600,
	523, 1600,
	-2, 2413,
	-1, 1132,
	5, 1601,
	523, 1601,
	-2, 2414,
	-1, 1169,
	560, 2067,
	-2, 2058,
	-1, 1170,
	560, 2068,
	-2, 2059,
	-1, 1201,
	180, 2378,
	485, 2378,
	543, 2378,
	562, 2378,
	-2, 0,
	-1, 1204,
	1, 614,
	563, 614,
	-2, 1245,
	-1, 1333,
	396, 2033,
	435, 2033,
	553, 2033,
	-2, 2030,
	-1, 1345,
	564, 2033,
	-2, 2034,
	-1, 1352,
	1, 1133,
	559, 1133,
	561, 1133,
	563, 1133,
	-2, 1364,
	-1, 1408,
	384, 941,
	522, 941,
	-2, 347,
	-1, 1427,
	43, 2061,
	-2, 2031,
	-1, 1432,
	1, 1133,
	559, 1133,
	561, 1133,
	563, 1133,
	-2, 1364,
	-1, 1439,
	4, 1157,
	21, 1157,
	22, 1157,
	23, 1157,
	24, 1157,
	25, 1157,
	26, 1157,
	27, 1157,
	29, 1157,
	30, 1157,
	36, 1157,
	41, 1157,
	42, 1157,
	44, 1157,
	45, 1157,
	46, 1157,
	47, 1157,
	48, 1157,
	49, 1157,
	50, 1157,
	52, 1157,
	53, 1157,
	54, 1157,
	55, 1157,
	57, 1157,
	58, 1157,
	59, 1157,
	60, 1157,
	61, 1157,
	62, 1157,
	63, 1157,
	67, 1157,
	68, 1157,
	69, 1157,
	70, 1157,
	72, 1157,
	73, 1157,
	74, 1157,
	78, 1157,
	79, 1157,
	80, 1157,
	81, 1157,
	82, 1157,
	83, 1157,
	84, 1157,
	87, 1157,
	88, 1157,
	89, 1157,
	90, 1157,
	91, 1157,
	93, 1157,
	95, 1157,
	96, 1157,
	97, 1157,
	98, 1157,
	99, 1157,
	100, 1157,
	102, 1157,
	103, 1157,
	104, 1157,
	106, 1157,
	107, 1157,
	115, 1157,
	116, 1157,
	117, 1157,
	118, 1157,
	120, 1157,
	121, 1157,
	122, 1157,
	124, 1157,
	125, 1157,
	126, 1157,
	128, 1157,
	129, 1157,
	131, 1157,
	132, 1157,
	133, 1157,
	136, 1157,
	137, 1157,
	138, 1157,
	140, 1157,
	141, 1157,
	143, 1157,
	144, 1157,
	145, 1157,
	147, 1157,
	148, 1157,
	149, 1157,
	150, 1157,
	151, 1157,
	152, 1157,
	153, 1157,
	154, 1157,
	155, 1157,
	156, 1157,
	157, 1157,
	158, 1157,
	159, 1157,
	160, 1157,
	161, 1157,
	169, 1157,
	170, 1157,
	171, 1157,
	172, 1157,
	176, 1157,
	178, 1157,
	182, 1157,
	183, 1157,
	184, 1157,
	185, 1157,
	186, 1157,
	187, 1157,
	188, 1157,
	189, 1157,
	190, 1157,
	191, 1157,
	192, 1157,
	193, 1157,
	195, 1157,
	196, 1157,
	198, 1157,
	199, 1157,
	201, 1157,
	202, 1157,
	203, 1157,
	204, 1157,
	205, 1157,
	206, 1157,
	207, 1157,
	208, 1157,
	209, 1157,
	211, 1157,
	212, 1157,
	214, 1157,
	215, 1157,
	216, 1157,
	217, 1157,
	222, 1157,
	223, 1157,
	224, 1157,
	227, 1157,
	228, 1157,
	229, 1157,
	231, 1157,
	233, 1157,
	234, 1157,
	236, 1157,
	238, 1157,
	239, 1157,
	240, 1157,
	242, 1157,
	246, 1157,
	247, 1157,
	248, 1157,
	249, 1157,
	250, 1157,
	251, 1157,
	253, 1157,
	254, 1157,
	255, 1157,
	257, 1157,
	258, 1157,
	260, 1157,
	261, 1157,
	264, 1157,
	268, 1157,
	269, 1157,
	272, 1157,
	273, 1157,
	274, 1157,
	275, 1157,
	277, 1157,
	278, 1157,
	279, 1157,
	280, 1157,
	281, 1157,
	282, 1157,
	283, 1157,
	284, 1157,
	285, 1157,
	286, 1157,
	287, 1157,
	288, 1157,
	289, 1157,
	290, 1157,
	291, 1157,
	292, 1157,
	293, 1157,
	294, 1157,
	295, 1157,
	296, 1157,
	297, 1157,
	298, 1157,
	300, 1157,
	302, 1157,
	303, 1157,
	304, 1157,
	305, 1157,
	306, 1157,
	307, 1157,
	308, 1157,
	309, 1157,
	310, 1157,
	311, 1157,
	312, 1157,
	313, 1157,
	315, 1157,
	319, 1157,
	320, 1157,
	322, 1157,
	323, 1157,
	324, 1157,
	325, 1157,
	326, 1157,
	329, 1157,
	331, 1157,
	333, 1157,
	334, 1157,
	335, 1157,
	338, 1157,
	339, 1157,
	340, 1157,
	342, 1157,
	344, 1157,
	345, 1157,
	346, 1157,
	347, 1157,
	348, 1157,
	349, 1157,
	350, 1157,
	351, 1157,
	352, 1157,
	353, 1157,
	354, 1157,
	355, 1157,
	357, 1157,
	358, 1157,
	359, 1157,
	360, 1157,
	361, 1157,
	362, 1157,
	363, 1157,
	364, 1157,
	365, 1157,
	366, 1157,
	367, 1157,
	368, 1157,
	369, 1157,
	370, 1157,
	371, 1157,
	373, 1157,
	375, 1157,
	376, 1157,
	377, 1157,
	378, 1157,
	379, 1157,
	380, 1157,
	381, 1157,
	382, 1157,
	383, 1157,
	384, 1157,
	385, 1157,
	386, 1157,
	388, 1157,
	394, 1157,
	396, 1157,
	397, 1157,
	398, 1157,
	399, 1157,
	400, 1157,
	401, 1157,
	402, 1157,
	403, 1157,
	405, 1157,
	406, 1157,
	407, 1157,
	409, 1157,
	410, 1157,
	411, 1157,
	412, 1157,
	413, 1157,
	414, 1157,
	416, 1157,
	417, 1157,
	418, 1157,
	419, 1157,
	420, 1157,
	421, 1157,
	422, 1157,
	423, 1157,
	424, 1157,
	425, 1157,
	426, 1157,
	428, 1157,
	429, 1157,
	430, 1157,
	431, 1157,
	432, 1157,
	433, 1157,
	435, 1157,
	436, 1157,
	437, 1157,
	438, 1157,
	439, 1157,
	440, 1157,
	442, 1157,
	443, 1157,
	444, 1157,
	445, 1157,
	446, 1157,
	447, 1157,
	448, 1157,
	450, 1157,
	452, 1157,
	453, 1157,
	454, 1157,
	455, 1157,
	456, 1157,
	457, 1157,
	458, 1157,
	459, 1157,
	460, 1157,
	461, 1157,
	462, 1157,
	463, 1157,
	464, 1157,
	466, 1157,
	467, 1157,
	469, 1157,
	471, 1157,
	472, 1157,
	473, 1157,
	474, 1157,
	475, 1157,
	476, 1157,
	477, 1157,
	478, 1157,
	480, 1157,
	481, 1157,
	482, 1157,
	483, 1157,
	484, 1157,
	486, 1157,
	488, 1157,
	489, 1157,
	490, 1157,
	491, 1157,
	492, 1157,
	493, 1157,
	495, 1157,
	496, 1157,
	497, 1157,
	498, 1157,
	500, 1157,
	501, 1157,
	504, 1157,
	505, 1157,
	506, 1157,
	507, 1157,
	508, 1157,
	509, 1157,
	510, 1157,
	512, 1157,
	515, 1157,
	516, 1157,
	517, 1157,
	518, 1157,
	519, 1157,
	520, 1157,
	522, 1157,
	523, 1157,
	524, 1157,
	525, 1157,
	530, 1157,
	531, 1157,
	532, 1157,
	533, 1157,
	534, 1157,
	535, 1157,
	-2, 0,
	-1, 1514,
	1, 487,
	559, 487,
	561, 487,
	563, 487,
	-2, 1335,
	-1, 1517,
	4, 2454,
	11, 2454,
	12, 2454,
	14, 2454,
	15, 2454,
	16, 2454,
	17, 2454,
	18, 2454,
	19, 2454,
	21, 2454,
	22, 2454,
	23, 2454,
	24, 2454,
	25, 2454,
	26, 2454,
	27, 2454,
	29, 2454,
	30, 2454,
	33, 2454,
	34, 2454,
	36, 2454,
	38, 2454,
	41, 2454,
	42, 2454,
	44, 2454,
	45, 2454,
	46, 2454,
	47, 2454,
	48, 2454,
	49, 2454,
	50, 2454,
	52, 2454,
	53, 2454,
	54, 2454,
	55, 2454,
	57, 2454,
	58, 2454,
	59, 2454,
	60, 2454,
	61, 2454,
	62, 2454,
	63, 2454,
	67, 2454,
	68, 2454,
	69, 2454,
	70, 2454,
	72, 2454,
	73, 2454,
	74, 2454,
	75, 2454,
	78, 2454,
	79, 2454,
	80, 2454,
	81, 2454,
	82, 2454,
	83, 2454,
	84, 2454,
	85, 2454,
	87, 2454,
	88, 2454,
	89, 2454,
	90, 2454,
	91, 2454,
	93, 2454,
	94, 2454,
	95, 2454,
	96, 2454,
	97, 2454,
	98, 2454,
	99, 2454,
	100, 2454,
	102, 2454,
	103, 2454,
	104, 2454,
	105, 2454,
	106, 2454,
	107, 2454,
	115, 2454,
	116, 2454,
	117, 2454,
	118, 2454,
	120, 2454,
	121, 2454,
	122, 2454,
	124, 2454,
	125, 2454,
	126, 2454,
	128, 2454,
	129, 2454,
	131, 2454,
	132, 2454,
	133, 2454,
	136, 2454,
	137, 2454,
	138, 2454,
	140, 2454,
	141, 2454,
	143, 2454,
	144, 2454,
	145, 2454,
	147, 2454,
	148, 2454,
	149, 2454,
	150, 2454,
	151, 2454,
	152, 2454,
	153, 2454,
	154, 2454,
	155, 2454,
	156, 2454,
	157, 2454,
	158, 2454,
	159, 2454,
	160, 2454,
	161, 2454,
	165, 2454,
	166, 2454,
	167, 2454,
	168, 2454,
	169, 2454,
	170, 2454,
	171, 2454,
	172, 2454,
	175, 2454,
	176, 2454,
	178, 2454,
	181, 2454,
	182, 2454,
	183, 2454,
	184, 2454,
	185, 2454,
	186, 2454,
	187, 2454,
	188, 2454,
	189, 2454,
	190, 2454,
	191, 2454,
	192, 2454,
	193, 2454,
	195, 2454,
	196, 2454,
	198, 2454,
	199, 2454,
	201, 2454,
	202, 2454,
	203, 2454,
	204, 2454,
	205, 2454,
	206, 2454,
	207, 2454,
	208, 2454,
	209, 2454,
	210, 2454,
	211, 2454,
	212, 2454,
	213, 2454,
	214, 2454,
	215, 2454,
	216, 2454,
	217, 2454,
	219, 2454,
	220, 2454,
	222, 2454,
	223, 2454,
	224, 2454,
	226, 2454,
	227, 2454,
	228, 2454,
	229, 2454,
	231, 2454,
	233, 2454,
	234, 2454,
	235, 2454,
	236, 2454,
	237, 2454,
	238, 2454,
	239, 2454,
	240, 2454,
	241, 2454,
	242, 2454,
	244, 2454,
	245, 2454,
	246, 2454,
	247, 2454,
	248, 2454,
	249, 2454,
	250, 2454,
	251, 2454,
	253, 2454,
	254, 2454,
	255, 2454,
	257, 2454,
	258, 2454,
	259, 2454,
	260, 2454,
	261, 2454,
	262, 2454,
	264, 2454,
	268, 2454,
	269, 2454,
	272, 2454,
	273, 2454,
	274, 2454,
	275, 2454,
	276, 2454,
	277, 2454,
	278, 2454,
	279, 2454,
	280, 2454,
	281, 2454,
	282, 2454,
	283, 2454,
	284, 2454,
	285, 2454,
	286, 2454,
	287, 2454,
	288, 2454,
	289, 2454,
	290, 2454,
	291, 2454,
	292, 2454,
	293, 2454,
	294, 2454,
	295, 2454,
	296, 2454,
	297, 2454,
	298, 2454,
	300, 2454,
	301, 2454,
	302, 2454,
	303, 2454,
	304, 2454,
	305, 2454,
	306, 2454,
	307, 2454,
	308, 2454,
	309, 2454,
	310, 2454,
	311, 2454,
	312, 2454,
	313, 2454,
	315, 2454,
	318, 2454,
	319, 2454,
	320, 2454,
	322, 2454,
	323, 2454,
	324, 2454,
	325, 2454,
	326, 2454,
	329, 2454,
	333, 2454,
	334, 2454,
	335, 2454,
	336, 2454,
	338, 2454,
	339, 2454,
	340, 2454,
	342, 2454,
	344, 2454,
	345, 2454,
	346, 2454,
	347, 2454,
	348, 2454,
	349, 2454,
	350, 2454,
	351, 2454,
	352, 2454,
	353, 2454,
	354, 2454,
	355, 2454,
	357, 2454,
	358, 2454,
	359, 2454,
	360, 2454,
	361, 2454,
	362, 2454,
	363, 2454,
	364, 2454,
	365, 2454,
	366, 2454,
	367, 2454,
	368, 2454,
	369, 2454,
	370, 2454,
	371, 2454,
	373, 2454,
	375, 2454,
	376, 2454,
	377, 2454,
	378, 2454,
	379, 2454,
	380, 2454,
	381, 2454,
	382, 2454,
	383, 2454,
	384, 2454,
	385, 2454,
	386, 2454,
	388, 2454,
	394, 2454,
	395, 2454,
	396, 2454,
	397, 2454,
	398, 2454,
	399, 2454,
	400, 2454,
	401, 2454,
	402, 2454,
	403, 2454,
	405, 2454,
	406, 2454,
	407, 2454,
	408, 2454,
	409, 2454,
	410, 2454,
	411, 2454,
	412, 2454,
	413, 2454,
	414, 2454,
	415, 2454,
	416, 2454,
	417, 2454,
	418, 2454,
	419, 2454,
	420, 2454,
	421, 2454,
	422, 2454,
	423, 2454,
	424, 2454,
	425, 2454,
	426, 2454,
	428, 2454,
	429, 2454,
	430, 2454,
	431, 2454,
	432, 2454,
	433, 2454,
	435, 2454,
	436, 2454,
	437, 2454,
	438, 2454,
	439, 2454,
	440, 2454,
	441, 2454,
	442, 2454,
	443, 2454,
	444, 2454,
	445, 2454,
	446, 2454,
	447, 2454,
	448, 2454,
	450, 2454,
	452, 2454,
	453, 2454,
	454, 2454,
	455, 2454,
	456, 2454,
	457, 2454,
	458, 2454,
	459, 2454,
	460, 2454,
	461, 2454,
	462, 2454,
	463, 2454,
	464, 2454,
	466, 2454,
	467, 2454,
	469, 2454,
	471, 2454,
	472, 2454,
	473, 2454,
	474, 2454,
	475, 2454,
	476, 2454,
	477, 2454,
	478, 2454,
	480, 2454,
	481, 2454,
	482, 2454,
	483, 2454,
	484, 2454,
	486, 2454,
	488, 2454,
	489, 2454,
	490, 2454,
	491, 2454,
	492, 2454,
	493, 2454,
	495, 2454,
	496, 2454,
	497, 2454,
	498, 2454,
	500, 2454,
	501, 2454,
	504, 2454,
	505, 2454,
	506, 2454,
	507, 2454,
	508, 2454,
	509, 2454,
	510, 2454,
	512, 2454,
	515, 2454,
	516, 2454,
	517, 2454,
	518, 2454,
	519, 2454,
	520, 2454,
	522, 2454,
	523, 2454,
	524, 2454,
	525, 2454,
	530, 2454,
	531, 2454,
	532, 2454,
	533, 2454,
	534, 2454,
	535, 2454,
	536, 2454,
	538, 2454,
	541, 2454,
	542, 2454,
	543, 2454,
	544, 2454,
	545, 2454,
	546, 2454,
	548, 2454,
	549, 2454,
	550, 2454,
	551, 2454,
	552, 2454,
	553, 2454,
	554, 2454,
	555, 2454,
	556, 2454,
	558, 2454,
	561, 2454,
	562, 2454,
	564, 2454,
	565, 2454,
	-2, 0,
	-1, 1522,
	180, 2343,
	485, 2343,
	543, 2343,
	562, 2343,
	-2, 0,
	-1, 1571,
	377, 788,
	433, 788,
	490, 788,
	-2, 0,
	-1, 1597,
	1, 783,
	559, 783,
	561, 783,
	563, 783,
	-2, 0,
	-1, 1598,
	1, 819,
	559, 819,
	561, 819,
	563, 819,
	-2, 0,
	-1, 1599,
	1, 827,
	559, 827,
	561, 827,
	563, 827,
	-2, 0,
	-1, 1600,
	1, 790,
	559, 790,
	561, 790,
	563, 790,
	-2, 0,
	-1, 1602,
	1, 794,
	559, 794,
	561, 794,
	563, 794,
	-2, 0,
	-1, 1608,
	1, 801,
	559, 801,
	561, 801,
	563, 801,
	-2, 0,
	-1, 1636,
	1, 2400,
	559, 2400,
	561, 2400,
	562, 2400,
	563, 2400,
	-2, 852,
	-1, 1637,
	1, 2340,
	559, 2340,
	561, 2340,
	562, 2340,
	563, 2340,
	-2, 853,
	-1, 1652,
	1, 1240,
	563, 1240,
	-2, 1245,
	-1, 1655,
	164, 1376,
	177, 1376,
	263, 1376,
	327, 1376,
	-2, 1316,
	-1, 1749,
	146, 1337,
	164, 1337,
	177, 1337,
	230, 1337,
	263, 1337,
	327, 1337,
	337, 1337,
	502, 1337,
	-2, 1776,
	-1, 1809,
	561, 1926,
	-2, 0,
	-1, 1844,
	146, 1337,
	164, 1337,
	177, 1337,
	230, 1337,
	263, 1337,
	327, 1337,
	337, 1337,
	502, 1337,
	-2, 1463,
	-1, 1893,
	560, 1603,
	-2, 1591,
	-1, 1936,
	1, 616,
	563, 616,
	-2, 1245,
	-1, 2048,
	213, 221,
	-2, 2066,
	-1, 2049,
	213, 222,
	-2, 264,
	-1, 2178,
	1, 785,
	559, 785,
	561, 785,
	563, 785,
	-2, 0,
	-1, 2179,
	1, 821,
	559, 821,
	561, 821,
	563, 821,
	-2, 0,
	-1, 2180,
	1, 829,
	559, 829,
	561, 829,
	563, 829,
	-2, 0,
	-1, 2213,
	1, 803,
	559, 803,
	561, 803,
	563, 803,
	-2, 0,
	-1, 2259,
	413, 1403,
	414, 1403,
	-2, 1636,
	-1, 2290,
	14, 0,
	15, 0,
	16, 0,
	541, 0,
	542, 0,
	543, 0,
	-2, 1656,
	-1, 2291,
	14, 0,
	15, 0,
	16, 0,
	541, 0,
	542, 0,
	543, 0,
	-2, 1657,
	-1, 2292,
	94, 0,
	244, 0,
	245, 0,
	545, 0,
	546, 0,
	-2, 1658,
	-1, 2293,
	94, 0,
	244, 0,
	245, 0,
	545, 0,
	546, 0,
	-2, 1659,
	-1, 2294,
	94, 0,
	244, 0,
	245, 0,
	545, 0,
	546, 0,
	-2, 1660,
	-1, 2295,
	94, 0,
	244, 0,
	245, 0,
	545, 0,
	546, 0,
	-2, 1661,
	-1, 2296,
	94, 0,
	244, 0,
	245, 0,
	545, 0,
	546, 0,
	-2, 1662,
	-1, 2297,
	14, 0,
	15, 0,
	16, 0,
	541, 0,
	542, 0,
	543, 0,
	-2, 1663,
	-1, 2309,
	14, 0,
	15, 0,
	16, 0,
	541, 0,
	542, 0,
	543, 0,
	-2, 1675,
	-1, 2310,
	14, 0,
	15, 0,
	16, 0,
	541, 0,
	542, 0,
	543, 0,
	-2, 1676,
	-1, 2311,
	14, 0,
	15, 0,
	16, 0,
	541, 0,
	542, 0,
	543, 0,
	-2, 1677,
	-1, 2314,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	441, 0,
	536, 0,
	544, 0,
	-2, 1682,
	-1, 2320,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	441, 0,
	536, 0,
	544, 0,
	-2, 1686,
	-1, 2322,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	441, 0,
	536, 0,
	544, 0,
	-2, 1694,
	-1, 2323,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	441, 0,
	536, 0,
	544, 0,
	-2, 1695,
	-1, 2324,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	441, 0,
	536, 0,
	544, 0,
	-2, 1696,
	-1, 2325,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	441, 0,
	536, 0,
	544, 0,
	-2, 1697,
	-1, 2461,
	5, 2070,
	180, 1937,
	560, 2067,
	-2, 2058,
	-1, 2462,
	180, 1938,
	-2, 2405,
	-1, 2463,
	180, 1939,
	-2, 2244,
	-1, 2464,
	180, 1940,
	-2, 2137,
	-1, 2465,
	180, 1941,
	-2, 2187,
	-1, 2466,
	180, 1942,
	-2, 2229,
	-1, 2467,
	180, 1943,
	-2, 2338,
	-1, 2468,
	180, 1944,
	-2, 1759,
	-1, 2537,
	1, 1464,
	2, 1464,
	105, 1464,
	146, 1464,
	164, 1464,
	177, 1464,
	181, 1464,
	197, 1464,
	200, 1464,
	226, 1464,
	230, 1464,
	241, 1464,
	259, 1464,
	263, 1464,
	301, 1464,
	327, 1464,
	331, 1464,
	337, 1464,
	404, 1464,
	408, 1464,
	502, 1464,
	513, 1464,
	527, 1464,
	528, 1464,
	529, 1464,
	539, 1464,
	559, 1464,
	561, 1464,
	563, 1464,
	565, 1464,
	-2, 1463,
	-1, 2550,
	560, 2039,
	-2, 2053,
	-1, 2552,
	52, 1364,
	131, 1364,
	-2, 280,
	-1, 2577,
	560, 1602,
	-2, 1592,
	-1, 2716,
	1, 1133,
	559, 1133,
	561, 1133,
	563, 1133,
	-2, 1364,
	-1, 2893,
	332, 1406,
	-2, 2444,
	-1, 2894,
	332, 1407,
	-2, 2324,
	-1, 2898,
	413, 2003,
	414, 2003,
	-2, 1757,
	-1, 2899,
	413, 2007,
	414, 2007,
	-2, 1758,
	-1, 2900,
	413, 2004,
	414, 2004,
	-2, 1757,
	-1, 2901,
	413, 2008,
	414, 2008,
	-2, 1758,
	-1, 2914,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	441, 0,
	536, 0,
	544, 0,
	-2, 1684,
	-1, 2915,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	441, 0,
	536, 0,
	544, 0,
	-2, 1688,
	-1, 2921,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	441, 0,
	536, 0,
	544, 0,
	-2, 1690,
	-1, 3151,
	1, 613,
	559, 613,
	561, 613,
	563, 613,
	-2, 1245,
	-1, 3283,
	1, 1133,
	559, 1133,
	561, 1133,
	563, 1133,
	-2, 1364,
	-1, 3393,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	441, 0,
	536, 0,
	544, 0,
	-2, 1692,
	-1, 3400,
	235, 0,
	237, 0,
	318, 0,
	-2, 1711,
	-1, 3467,
	14, 0,
	15, 0,
	16, 0,
	541, 0,
	542, 0,
	543, 0,
	-2, 1740,
	-1, 3468,
	14, 0,
	15, 0,
	16, 0,
	541, 0,
	542, 0,
	543, 0,
	-2, 1741,
	-1, 3469,
	14, 0,
	15, 0,
	16, 0,
	541, 0,
	542, 0,
	543, 0,
	-2, 1742,
	-1, 3473,
	14, 0,
	15, 0,
	16, 0,
	541, 0,
	542, 0,
	543, 0,
	-2, 1746,
	-1, 3474,
	14, 0,
	15, 0,
	16, 0,
	541, 0,
	542, 0,
	543, 0,
	-2, 1747,
	-1, 3475,
	14, 0,
	15, 0,
	16, 0,
	541, 0,
	542, 0,
	543, 0,
	-2, 1748,
	-1, 3521,
	560, 2040,
	-2, 2054,
	-1, 3558,
	562, 2055,
	-2, 1167,
	-1, 3661,
	562, 2561,
	-2, 1292,
	-1, 3719,
	235, 0,
	237, 0,
	318, 0,
	-2, 1712,
	-1, 3722,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	441, 0,
	536, 0,
	544, 0,
	-2, 1715,
	-1, 3723,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	441, 0,
	536, 0,
	544, 0,
	-2, 1717,
	-1, 3939,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	441, 0,
	536, 0,
	544, 0,
	-2, 1716,
	-1, 3940,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	441, 0,
	536, 0,
	544, 0,
	-2, 1718,
	-1, 3951,
	235, 0,
	-2, 1749,
	-1, 4109,
	235, 0,
	-2, 1750,
	-1, 4268,
	49, 0,
	210, 0,
	262, 0,
	441, 0,
	536, 0,
	544, 0,
	-2, 2408,
}

const sqlPrivate = 57344

const sqlLast = 115220

var sqlAct = [...]int{

	250, 4137, 3268, 3988, 2809, 3072, 4158, 4035, 2778, 4278,
	4242, 4379, 4226, 4267, 3702, 3991, 2615, 4208, 2045, 3267,
	4223, 3863, 4279, 4062, 4280, 3976, 4328, 1173, 4042, 1039,
	3432, 2654, 4113, 4266, 2147, 3896, 995, 3891, 3845, 3960,
	2269, 3928, 2156, 1505, 3295, 3653, 4051, 3554, 3300, 3877,
	3806, 3595, 3385, 1500, 3789, 1880, 4076, 2337, 3293, 3169,
	2131, 1664, 3901, 3263, 3629, 3253, 3613, 2818, 3615, 2277,
	685, 1989, 721, 3555, 2493, 3956, 1046, 2270, 1237, 3350,
	2907, 3348, 2767, 1330, 242, 2749, 2739, 3524, 2831, 1537,
	2820, 3095, 1928, 3758, 3115, 3055, 3701, 721, 2817, 2811,
	3078, 3087, 2762, 1045, 2828, 2679, 2779, 3076, 1579, 823,
	1372, 1850, 2617, 2040, 2764, 1999, 2274, 2039, 3054, 1795,
	1819, 2529, 4114, 986, 1757, 2891, 994, 168, 1338, 716,
	2350, 2530, 2018, 1536, 2693, 2129, 2827, 4, 2379, 244,
	1425, 2750, 3492, 2034, 1480, 1220, 2025, 1504, 1050, 243,
	1022, 4036, 1355, 1043, 1972, 1975, 2511, 1820, 2091, 2490,
	1652, 2370, 2381, 2334, 1153, 2258, 2239, 1962, 2241, 2562,
	1836, 1839, 3265, 3122, 1515, 2154, 2772, 1491, 722, 1501,
	1430, 1048, 2079, 2821, 2532, 723, 2606, 1206, 2561, 650,
	1790, 2653, 38, 2373, 1829, 1156, 2519, 1162, 2501, 1357,
	1135, 1665, 2351, 1742, 2457, 1666, 1608, 667, 2240, 679,
	2423, 727, 718, 2242, 177, 2078, 168, 1335, 1170, 178,
	104, 730, 2103, 1513, 1454, 796, 1367, 817, 1988, 768,
	2263, 1024, 653, 636, 43, 42, 727, 658, 40, 31,
	29, 1158, 27, 661, 1133, 2942, 730, 1168, 1671, 884,
	1651, 3506, 1378, 3507, 904, 2938, 4444, 2120, 3074, 990,
	2510, 4434, 2120, 1679, 1680, 3329, 2120, 4424, 4423, 2120,
	2120, 2510, 2510, 4396, 4394, 4390, 4308, 3805, 3805, 2053,
	4309, 4302, 1152, 4300, 4297, 2510, 1710, 2510, 4298, 3310,
	3329, 4294, 990, 1682, 1165, 4295, 3309, 4289, 4264, 3130,
	4263, 2053, 2053, 2118, 2053, 3145, 3144, 1215, 4262, 838,
	3027, 3028, 2140, 1881, 2503, 4257, 4256, 2951, 1150, 2140,
	2140, 1164, 4251, 2952, 4249, 4221, 3805, 1681, 3805, 3805,
	4198, 4191, 4190, 2155, 2568, 2510, 2510, 1701, 4185, 4184,
	4178, 4151, 3805, 3805, 2053, 3855, 1698, 4111, 4093, 4090,
	4087, 2568, 3690, 2053, 3805, 2675, 4044, 4009, 4008, 1545,
	4045, 2053, 2053, 4000, 1215, 3999, 3967, 2053, 1166, 3805,
	2053, 3941, 3920, 3909, 3840, 2568, 2140, 3329, 2510, 2138,
	1189, 3828, 3804, 971, 3042, 2510, 3805, 3721, 970, 3669,
	3496, 2568, 3663, 3345, 1136, 1136, 3345, 3715, 3627, 2639,
	991, 3516, 3628, 1601, 3514, 3517, 3499, 2906, 3515, 3416,
	2510, 1371, 3412, 2053, 2587, 2510, 2510, 1704, 1705, 1706,
	1707, 3344, 1184, 4199, 985, 3345, 980, 1687, 3336, 3071,
	3066, 2564, 3337, 2510, 2510, 1679, 1680, 4115, 1712, 1713,
	1714, 1722, 1723, 1724, 3065, 3018, 2992, 2984, 2510, 3019,
	2993, 2985, 2982, 1679, 1680, 1137, 2510, 1715, 1710, 2953,
	2834, 215, 2807, 2510, 2140, 1682, 2143, 2053, 1139, 4106,
	1140, 1709, 1711, 1728, 3033, 2806, 2590, 2567, 2559, 2143,
	2510, 2568, 2510, 1682, 2553, 2509, 2376, 2510, 2053, 2510,
	4094, 2142, 2140, 3496, 2586, 2143, 1696, 1697, 2502, 1681,
	3890, 3855, 1185, 3829, 217, 2053, 3690, 3337, 2670, 1701,
	2605, 1993, 1941, 2119, 2135, 2745, 2052, 1681, 1698, 2687,
	2941, 1679, 1680, 2603, 1815, 215, 1366, 3586, 1702, 3388,
	3366, 3027, 3028, 1837, 1380, 2028, 3311, 2546, 1581, 2545,
	2544, 2543, 2542, 1141, 1710, 1138, 979, 3027, 3028, 978,
	977, 1682, 216, 976, 215, 3312, 1371, 975, 974, 973,
	89, 969, 968, 209, 967, 966, 1531, 965, 217, 215,
	2377, 2871, 210, 3027, 3028, 3043, 964, 963, 1380, 962,
	961, 960, 959, 958, 957, 1681, 956, 955, 954, 1704,
	1705, 1706, 1707, 953, 179, 1701, 2121, 217, 935, 1687,
	882, 2121, 881, 880, 1698, 2121, 879, 878, 2121, 2121,
	877, 818, 217, 876, 875, 874, 216, 1687, 1679, 1680,
	873, 872, 871, 870, 869, 868, 867, 209, 866, 865,
	864, 863, 862, 861, 1719, 860, 210, 1729, 70, 859,
	821, 820, 858, 1709, 1711, 216, 857, 1708, 1682, 2378,
	856, 2375, 855, 854, 71, 3397, 853, 852, 179, 1725,
	216, 1726, 851, 841, 840, 836, 835, 1703, 1696, 1697,
	75, 209, 4285, 829, 3309, 1704, 1705, 1706, 1707, 828,
	210, 786, 1681, 785, 1048, 1687, 1717, 179, 1048, 2406,
	1185, 2138, 744, 743, 742, 3033, 741, 4265, 733, 2502,
	1702, 732, 179, 731, 1240, 3632, 700, 691, 1240, 690,
	82, 3033, 1360, 689, 3044, 673, 238, 237, 236, 235,
	1219, 234, 233, 1210, 1224, 232, 1379, 231, 230, 1709,
	1711, 229, 228, 227, 226, 225, 1048, 3033, 1048, 224,
	1048, 1380, 1727, 223, 222, 221, 1360, 88, 3027, 3028,
	220, 219, 218, 3774, 1696, 1697, 2150, 3733, 3903, 2795,
	1716, 103, 2392, 1346, 2119, 1185, 89, 100, 2138, 1341,
	1360, 2135, 2234, 3027, 3028, 3534, 3510, 3346, 3118, 2964,
	2947, 2758, 1687, 2726, 215, 2572, 1702, 2551, 2536, 2390,
	1333, 1970, 2380, 1345, 1348, 3069, 3043, 1699, 1695, 1840,
	1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689, 1863,
	1392, 1798, 3043, 1768, 1360, 1048, 1798, 1374, 1797, 1708,
	1360, 90, 1678, 1797, 1360, 1436, 1438, 217, 215, 1226,
	215, 1386, 1048, 3070, 1048, 2149, 1172, 1370, 1360, 1703,
	1801, 1204, 4165, 141, 1048, 1796, 1048, 3038, 3036, 3037,
	3029, 3030, 3031, 3032, 3034, 3035, 1348, 1348, 1349, 4118,
	1766, 4103, 3955, 3910, 727, 1720, 3889, 1233, 3781, 1327,
	1332, 217, 4097, 217, 730, 216, 4095, 1759, 3756, 3986,
	3755, 3749, 1428, 3027, 3028, 3748, 209, 3747, 1199, 3740,
	1360, 3739, 3737, 3732, 3729, 210, 1348, 3728, 3626, 3538,
	2374, 1380, 3537, 1369, 3536, 1708, 3520, 3487, 1048, 3486,
	1368, 1048, 3033, 3485, 3408, 1423, 3404, 179, 2060, 216,
	3113, 216, 3062, 3053, 3026, 1703, 2581, 1603, 3023, 1377,
	209, 1384, 209, 1390, 3022, 3044, 3633, 3033, 3340, 210,
	3020, 210, 2991, 2990, 1549, 2989, 2986, 168, 168, 1535,
	2983, 3044, 1485, 1488, 3905, 2963, 2946, 1550, 1518, 1520,
	1718, 179, 93, 179, 1759, 1693, 1694, 1700, 1721, 1699,
	1695, 2939, 1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688,
	1689, 1497, 1210, 1761, 3136, 1210, 3584, 2808, 2537, 3741,
	2363, 215, 1441, 1683, 1684, 1685, 1686, 1688, 1689, 1678,
	1149, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 1511, 176,
	96, 2094, 99, 3043, 1391, 1677, 4438, 2760, 2058, 1516,
	1512, 1617, 1760, 4388, 1758, 1529, 993, 1534, 1494, 4387,
	3633, 4318, 1048, 4316, 217, 1385, 215, 1543, 1048, 1548,
	991, 2775, 4307, 1174, 822, 3434, 4157, 3033, 4147, 141,
	4144, 4143, 4142, 4134, 4127, 1699, 1695, 4117, 1692, 1690,
	1691, 1683, 1684, 1685, 1686, 1688, 1689, 1457, 70, 3036,
	3037, 3029, 3030, 3031, 3032, 3034, 3035, 3067, 4116, 217,
	2570, 4091, 216, 4075, 71, 1530, 3037, 3029, 3030, 3031,
	3032, 3034, 3035, 209, 1656, 4074, 4119, 1544, 2340, 1602,
	75, 1650, 210, 4060, 143, 4057, 4005, 3982, 1455, 3110,
	3953, 2346, 3936, 3029, 3030, 3031, 3032, 3034, 3035, 180,
	3935, 3917, 1961, 3916, 179, 3880, 3856, 216, 3773, 3754,
	3691, 3685, 3682, 3574, 3573, 1555, 3560, 3559, 209, 3502,
	82, 1748, 3490, 1048, 1048, 1048, 1572, 210, 3043, 1048,
	3399, 215, 3044, 1746, 3347, 3330, 1170, 3286, 1170, 1604,
	1685, 1686, 1688, 1689, 1817, 3225, 3198, 4385, 3172, 819,
	3171, 3138, 2968, 1240, 2967, 2962, 2930, 88, 2738, 1804,
	1803, 1048, 1802, 3904, 721, 1168, 1799, 1168, 1898, 721,
	1791, 103, 1360, 1653, 217, 1661, 89, 100, 2759, 1048,
	1660, 1789, 2579, 1360, 2578, 2548, 2541, 1870, 2508, 971,
	2388, 1679, 1680, 1862, 970, 2151, 1655, 1800, 1818, 1813,
	1812, 1048, 1811, 1826, 1810, 1809, 1808, 1240, 1807, 1806,
	1805, 1657, 1165, 1786, 1165, 215, 1785, 1674, 1675, 1871,
	1784, 1682, 216, 1783, 1210, 1782, 1781, 3883, 2405, 1780,
	1959, 90, 991, 209, 1779, 1873, 215, 1968, 1847, 1164,
	1778, 1164, 210, 1345, 1823, 1824, 1777, 1933, 1776, 1775,
	1774, 1773, 1772, 1934, 1761, 1681, 1747, 3172, 217, 1792,
	1793, 1745, 1740, 1198, 179, 1866, 168, 3044, 3029, 3030,
	3031, 3032, 3034, 3035, 1187, 1877, 1180, 3777, 3725, 217,
	1924, 3533, 3513, 3505, 2950, 2539, 1166, 3971, 1166, 3779,
	3532, 1460, 3027, 3028, 1760, 3031, 3032, 3034, 3035, 1136,
	3831, 2391, 3134, 727, 1838, 1743, 216, 3315, 727, 1781,
	1848, 1869, 1858, 730, 4378, 1961, 1892, 209, 730, 3296,
	4145, 4047, 1216, 4046, 1929, 215, 210, 216, 2389, 3908,
	3858, 1215, 1854, 1845, 1961, 1939, 1223, 3857, 209, 3830,
	3776, 3694, 1936, 3693, 3692, 1360, 1360, 210, 179, 215,
	3508, 1932, 2566, 3332, 215, 1240, 3331, 4052, 991, 1816,
	3636, 1840, 3386, 1648, 1798, 1981, 2658, 2988, 217, 179,
	1215, 1797, 93, 1867, 1857, 1856, 1874, 1842, 1855, 1853,
	1852, 1921, 1851, 2987, 4098, 2912, 1947, 2014, 4096, 1993,
	2017, 2641, 217, 2022, 1222, 1767, 1218, 217, 1878, 3572,
	3038, 3036, 3037, 3029, 3030, 3031, 3032, 3034, 3035, 1781,
	1215, 3270, 951, 3269, 1571, 2170, 216, 3985, 1460, 176,
	96, 1221, 99, 3201, 1770, 215, 1618, 209, 4261, 1964,
	1954, 215, 2148, 1212, 2046, 2050, 210, 1580, 4043, 4305,
	216, 4290, 4277, 3254, 2832, 216, 215, 1581, 2041, 3592,
	3591, 209, 1998, 3577, 822, 952, 209, 3363, 2774, 141,
	210, 3149, 3957, 3074, 3436, 210, 2371, 2376, 217, 2577,
	3801, 4286, 1814, 2026, 217, 1794, 2956, 3261, 4299, 2088,
	1484, 2681, 179, 1435, 1363, 1193, 727, 179, 4296, 217,
	3305, 3549, 4138, 2084, 2087, 3892, 730, 4220, 4124, 3175,
	1360, 3567, 1360, 3797, 1360, 1953, 1952, 2815, 2043, 1961,
	1963, 1217, 2771, 2095, 143, 3135, 216, 1459, 1937, 1993,
	1360, 1360, 216, 3247, 2684, 1369, 3605, 209, 4369, 180,
	2089, 1360, 1368, 209, 4287, 2100, 210, 216, 1148, 1559,
	781, 4344, 210, 1360, 3380, 1360, 1360, 1360, 209, 4026,
	2021, 2377, 3153, 3819, 4345, 3798, 1345, 210, 179, 1410,
	1402, 1615, 2591, 2157, 179, 2219, 4433, 721, 1213, 949,
	4019, 1364, 4011, 2051, 947, 2249, 1214, 2609, 2169, 179,
	1093, 2571, 3853, 3601, 3600, 945, 943, 1948, 3604, 3594,
	2609, 3590, 2607, 940, 3588, 2178, 2217, 2097, 3546, 3545,
	3250, 3129, 2961, 2960, 1616, 2607, 2959, 2958, 2110, 2123,
	931, 2916, 2691, 2690, 2686, 2071, 2153, 1041, 2070, 2174,
	2677, 2108, 2669, 2662, 1956, 2668, 2667, 2666, 701, 2645,
	2378, 2632, 2375, 2247, 2560, 2321, 1654, 3155, 782, 1411,
	2419, 2418, 2279, 1216, 1459, 2655, 2656, 1447, 1048, 1446,
	1048, 2179, 2768, 2102, 2158, 2106, 1614, 1048, 3364, 1470,
	1898, 1898, 1240, 937, 1048, 1048, 1048, 1048, 1048, 1048,
	1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048,
	1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048,
	1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 1516,
	1048, 1516, 1048, 1048, 1048, 1048, 727, 2251, 2180, 2238,
	2245, 1457, 1199, 2105, 1557, 2105, 730, 2232, 4370, 1990,
	991, 989, 991, 2144, 1048, 2145, 1223, 1048, 1048, 2069,
	3934, 2148, 1958, 648, 1215, 1048, 1689, 2166, 1418, 1048,
	4373, 1048, 1048, 706, 1597, 2598, 1406, 2161, 3793, 1240,
	2552, 2162, 1986, 3794, 1212, 1048, 1048, 1048, 1048, 643,
	1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 2248, 2125,
	1957, 2631, 2127, 2380, 2336, 1223, 1991, 1992, 2132, 2195,
	1984, 2134, 2874, 2643, 1222, 2137, 1048, 1048, 1048, 1048,
	1048, 1048, 1048, 1048, 1048, 2336, 2249, 2213, 2223, 1048,
	1598, 2352, 2353, 3200, 3796, 988, 1987, 3993, 1892, 1892,
	1445, 1170, 1444, 1205, 2228, 2352, 2368, 2262, 1240, 3799,
	1569, 1627, 2344, 714, 1365, 3815, 2024, 1170, 2889, 2342,
	4374, 2904, 1217, 1222, 4397, 3563, 2246, 3035, 2630, 2107,
	1168, 2414, 2235, 1048, 1240, 2237, 2250, 708, 2243, 2023,
	2236, 3832, 2183, 1858, 2247, 3371, 1168, 1599, 2655, 2656,
	2460, 2460, 2474, 2371, 2352, 2367, 971, 2494, 2496, 971,
	971, 2266, 2177, 2500, 2267, 2268, 1573, 2655, 2656, 1631,
	1538, 2374, 2019, 3370, 1659, 1552, 2877, 1165, 2868, 1213,
	2380, 2000, 4283, 3852, 2332, 1613, 1647, 1214, 3589, 1197,
	2594, 1679, 1680, 1165, 712, 3587, 1991, 1992, 2619, 2476,
	849, 2516, 990, 2004, 1164, 3576, 2596, 2549, 784, 783,
	2927, 3995, 2330, 2524, 1710, 2348, 1431, 1847, 3249, 2231,
	1164, 1682, 4344, 2233, 2416, 3795, 2020, 4376, 1216, 2417,
	1348, 1610, 2420, 2365, 2421, 2422, 991, 3425, 2925, 2597,
	2538, 1240, 4382, 1581, 2903, 991, 2680, 3219, 2186, 991,
	2685, 1166, 2665, 1210, 1581, 1681, 2515, 2683, 2001, 2595,
	1429, 3152, 3802, 2275, 2276, 3611, 703, 1166, 3215, 3933,
	1136, 1898, 2318, 2644, 3552, 3575, 168, 1348, 2523, 2248,
	2528, 2469, 2485, 2534, 2535, 2456, 2498, 2565, 2608, 2682,
	1553, 698, 2506, 2507, 926, 707, 2517, 3208, 2610, 1240,
	2521, 2522, 1800, 1469, 3610, 2876, 2622, 3214, 3813, 779,
	4355, 778, 1845, 1360, 2611, 2057, 2056, 2573, 984, 2896,
	2897, 4361, 2642, 2230, 4360, 713, 2563, 2558, 1048, 1048,
	4400, 1048, 4333, 4195, 2873, 3707, 3207, 991, 710, 1212,
	1558, 2218, 1965, 1966, 705, 1215, 941, 2246, 2326, 2589,
	4284, 941, 2187, 2227, 1360, 1687, 3706, 2718, 2678, 2005,
	2580, 2588, 941, 942, 2663, 1333, 2327, 987, 1792, 1793,
	941, 2328, 2216, 2584, 2922, 2333, 1177, 3302, 734, 644,
	2380, 2583, 1345, 1976, 2647, 2585, 702, 1408, 1977, 2756,
	1405, 3303, 2012, 4139, 2782, 696, 2717, 2923, 2592, 1709,
	1711, 2928, 4153, 4375, 1431, 1628, 4414, 927, 842, 2120,
	1996, 1360, 1360, 709, 1360, 3422, 1175, 1217, 3186, 1892,
	2634, 938, 3564, 2006, 2007, 2875, 1360, 715, 830, 1984,
	2614, 2011, 2646, 2316, 2624, 2627, 2319, 2038, 704, 2829,
	3154, 1360, 1625, 4282, 816, 2664, 2748, 2002, 2029, 1995,
	645, 2638, 3618, 2036, 3814, 2803, 1702, 1787, 2742, 2798,
	3994, 3616, 727, 3132, 3302, 2837, 2838, 2657, 2659, 2660,
	2661, 1993, 730, 3185, 1213, 3228, 2844, 2845, 2846, 3872,
	2015, 1048, 1214, 4380, 2674, 2315, 4332, 2037, 2003, 2918,
	1348, 1348, 2721, 646, 3423, 647, 2723, 1978, 1984, 2621,
	3703, 1369, 3358, 3618, 3946, 4354, 1929, 4231, 2724, 3189,
	2335, 3351, 3616, 4193, 1980, 2833, 4156, 2752, 2853, 2727,
	1178, 2736, 2730, 3930, 2732, 1048, 3838, 666, 1739, 2814,
	2966, 1048, 1048, 2746, 1556, 2343, 926, 2789, 2520, 168,
	1629, 2792, 1345, 2793, 2329, 1568, 1570, 2766, 4194, 1348,
	2804, 2362, 2785, 2777, 2331, 4401, 2800, 850, 3191, 2879,
	984, 2881, 2035, 2850, 2784, 1626, 2773, 2533, 3619, 2773,
	2924, 2855, 2229, 2856, 2857, 2859, 2799, 2861, 2182, 2863,
	2926, 4381, 1982, 1345, 2648, 1345, 1048, 1048, 2805, 2801,
	928, 990, 1048, 4311, 2816, 1703, 697, 2008, 2176, 2872,
	3438, 2185, 4312, 3353, 2835, 1048, 1048, 4389, 2839, 1658,
	2840, 1048, 1048, 1516, 4383, 735, 736, 1048, 3352, 3619,
	3190, 2797, 1832, 1630, 1196, 3529, 1048, 1048, 1048, 3882,
	2620, 3697, 1048, 2609, 2858, 1190, 3708, 2380, 3382, 2887,
	1215, 699, 1048, 1554, 695, 843, 844, 2919, 2625, 927,
	4159, 1585, 3929, 4281, 2895, 3614, 4343, 4341, 4174, 1048,
	4059, 3651, 3289, 2077, 2317, 831, 832, 1835, 2009, 2884,
	1825, 1188, 2865, 2885, 2852, 1183, 2886, 1669, 4331, 635,
	2905, 1668, 2518, 3631, 4002, 2860, 3704, 2862, 3873, 2864,
	2890, 982, 2262, 926, 1663, 4001, 3476, 2790, 1007, 1668,
	1833, 2944, 2945, 2794, 2265, 1983, 2948, 3752, 1994, 1984,
	1949, 4406, 3980, 3123, 4068, 4123, 3652, 984, 3598, 2882,
	3548, 3290, 2255, 1946, 929, 3282, 3617, 3167, 2013, 999,
	1691, 1683, 1684, 1685, 1686, 1688, 1689, 3027, 3028, 3163,
	3045, 3046, 3047, 2949, 2757, 4415, 2751, 2940, 2121, 1048,
	1048, 1048, 2917, 738, 737, 3193, 2740, 3421, 1048, 1048,
	1048, 3097, 983, 1048, 2101, 2090, 2082, 2063, 4160, 1176,
	2032, 930, 3542, 1048, 1170, 1240, 1461, 3617, 2016, 1048,
	1667, 1048, 3081, 3082, 1399, 3491, 3931, 672, 3818, 1170,
	2512, 4209, 3383, 4175, 3194, 3817, 1944, 2224, 1667, 1942,
	1668, 2955, 3654, 1168, 3897, 3709, 927, 1240, 739, 740,
	2737, 3042, 2649, 1472, 3354, 3355, 3356, 3357, 1168, 1170,
	2030, 4041, 1240, 4039, 3981, 3178, 845, 846, 3174, 3173,
	3103, 991, 928, 1976, 2167, 4310, 1945, 3064, 1977, 1898,
	2910, 2888, 3504, 1240, 1669, 3086, 833, 834, 1168, 1834,
	1165, 3085, 3098, 3083, 2256, 1600, 1739, 1360, 1360, 2031,
	1048, 2557, 1669, 2514, 2556, 1165, 2555, 2554, 2513, 1828,
	3623, 1439, 2744, 988, 1048, 1979, 1453, 1164, 3477, 4130,
	1451, 848, 1352, 3864, 1440, 3710, 1898, 3478, 3341, 3091,
	2099, 3257, 1164, 3159, 3160, 1165, 3150, 4351, 3753, 1667,
	3096, 3033, 1048, 1360, 1210, 3989, 3914, 3093, 4037, 4405,
	3156, 3176, 2836, 2722, 3180, 3092, 1395, 3059, 3060, 3061,
	3101, 3229, 1164, 3112, 1166, 2720, 3104, 3105, 2626, 1562,
	3075, 3100, 4217, 4206, 4212, 4131, 3121, 3759, 1360, 1166,
	1432, 3128, 3109, 3117, 3090, 1832, 3493, 1978, 1240, 3146,
	3147, 3164, 1870, 3978, 2387, 3177, 4161, 1360, 3182, 3183,
	3543, 3048, 1360, 3142, 1980, 4235, 929, 4353, 3231, 1166,
	3057, 3234, 4301, 3913, 3203, 3239, 3241, 2650, 2651, 3107,
	1586, 3108, 1645, 1643, 1508, 1360, 3102, 1892, 3816, 928,
	1835, 1360, 4146, 1360, 1524, 3188, 3979, 1240, 1345, 3125,
	3126, 3127, 3043, 3990, 721, 1830, 3952, 3751, 1622, 1929,
	1929, 3139, 3140, 930, 3141, 1360, 3116, 4213, 4132, 3622,
	3217, 2087, 3151, 1833, 3056, 3266, 1360, 1981, 3162, 3124,
	3218, 3157, 1982, 3398, 1892, 3099, 3361, 3143, 1620, 1596,
	3021, 1594, 1170, 1592, 1590, 1588, 3298, 2929, 3275, 3236,
	3281, 1578, 1576, 3226, 3243, 1929, 1981, 3199, 1895, 3192,
	1563, 2829, 3205, 671, 1449, 1831, 2741, 2676, 2640, 2582,
	2829, 1168, 1865, 1861, 3206, 3213, 3210, 1646, 1540, 3379,
	3252, 3227, 3255, 3216, 2215, 1360, 1360, 3221, 3378, 1663,
	1929, 2870, 2026, 2386, 2869, 1886, 3307, 3244, 3195, 3196,
	2026, 3237, 3197, 3235, 3248, 2842, 1452, 1360, 3242, 1929,
	1450, 847, 2244, 3328, 1929, 2226, 1609, 2190, 1165, 2062,
	3211, 981, 3230, 929, 3212, 1925, 3321, 1771, 1551, 1422,
	4276, 3839, 1428, 3259, 3222, 3223, 2647, 3358, 3224, 3291,
	3827, 3044, 939, 727, 1240, 1164, 3351, 1240, 3365, 3299,
	1345, 1345, 3133, 730, 3251, 1983, 4205, 3220, 3279, 1984,
	1644, 1642, 3895, 3844, 3786, 3278, 3650, 3642, 3603, 3570,
	930, 3568, 1834, 3547, 3285, 3280, 3271, 1048, 2796, 2791,
	2769, 3304, 2755, 1048, 1048, 4329, 1621, 1048, 1048, 1048,
	3313, 1048, 1166, 2747, 3359, 2734, 3339, 4085, 3418, 3168,
	1048, 1898, 3322, 168, 168, 1973, 3318, 2719, 3377, 1048,
	2141, 3343, 1048, 2139, 3326, 3327, 1619, 1595, 1240, 1593,
	2136, 1591, 1589, 1587, 2133, 3376, 2128, 1048, 2126, 1577,
	1575, 3306, 1345, 2122, 2113, 1240, 2061, 2059, 3353, 3367,
	3360, 3368, 1448, 3369, 1974, 1898, 1898, 1048, 1048, 4077,
	1048, 1048, 1048, 3352, 3384, 2042, 3401, 3297, 2027, 2214,
	2010, 1997, 4078, 1985, 3294, 991, 4321, 3039, 3040, 3041,
	1872, 1145, 3373, 1672, 3038, 3036, 3037, 3029, 3030, 3031,
	3032, 3034, 3035, 3238, 4345, 3526, 3381, 2908, 2036, 944,
	946, 948, 1048, 4079, 1950, 3450, 1048, 1146, 1898, 1898,
	1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048,
	1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 4245,
	1048, 3451, 3919, 3912, 3911, 1979, 3851, 1048, 1048, 1898,
	3782, 2830, 1969, 2527, 1048, 1404, 4070, 3410, 3411, 3406,
	3349, 2629, 4063, 2609, 3662, 1048, 711, 3417, 2181, 1892,
	2609, 1993, 4081, 2098, 1640, 1641, 1170, 1170, 2607, 3433,
	1048, 3440, 3374, 3317, 3525, 2628, 3319, 3320, 3424, 3426,
	3427, 3323, 1493, 3324, 4080, 3325, 3448, 1492, 2909, 1673,
	3449, 4244, 2210, 2209, 2188, 1168, 1168, 3820, 3846, 1240,
	1574, 4082, 4105, 1892, 1892, 3428, 3522, 2035, 1679, 1680,
	3509, 3760, 1828, 1147, 3738, 2652, 2633, 1676, 3488, 1679,
	1680, 1191, 4347, 3453, 3455, 4339, 4306, 1976, 3447, 239,
	3480, 2733, 1977, 2212, 3639, 649, 1048, 3597, 1682, 769,
	2671, 2083, 1165, 1165, 1202, 813, 1056, 1493, 2681, 2689,
	2673, 2688, 1048, 1170, 3481, 2637, 1892, 1892, 3596, 3354,
	3355, 3356, 3357, 2672, 2635, 4377, 3500, 3501, 2636, 1164,
	1164, 1493, 1681, 4200, 168, 632, 4169, 4166, 4129, 1048,
	1048, 4055, 1168, 1681, 4034, 3489, 3641, 1892, 1832, 660,
	3630, 246, 246, 246, 3519, 638, 639, 3284, 654, 638,
	654, 664, 2776, 670, 3497, 3498, 1048, 688, 2499, 1935,
	3512, 1879, 694, 3987, 3131, 4404, 1166, 1166, 246, 3511,
	3527, 3528, 3027, 3028, 1371, 4237, 1679, 1680, 1360, 1165,
	4238, 4168, 3495, 1835, 3539, 3540, 3541, 827, 3730, 4237,
	2382, 1978, 4391, 246, 4238, 2601, 2602, 1898, 1830, 3531,
	4357, 3582, 2601, 3578, 3583, 3585, 1164, 2599, 1980, 2415,
	1895, 1895, 3551, 2599, 2600, 3599, 1833, 1561, 2275, 3441,
	4362, 1624, 4056, 1560, 1623, 4020, 1360, 3847, 3843, 3842,
	3593, 3535, 3726, 1048, 3648, 3530, 3429, 3232, 1765, 1764,
	4204, 1170, 1048, 4203, 3664, 3637, 1348, 1886, 1886, 4202,
	4120, 4015, 3621, 1166, 3972, 3969, 2782, 3875, 1831, 2647,
	3778, 3688, 1360, 1360, 1360, 3673, 3668, 3625, 3566, 3655,
	1168, 2275, 3456, 3561, 3316, 3288, 1982, 3287, 1360, 3017,
	3659, 3016, 3015, 3014, 4083, 3013, 3012, 3011, 3089, 4084,
	3010, 3009, 2829, 3008, 3640, 2087, 3007, 1240, 3006, 3677,
	3556, 3005, 3484, 3004, 3003, 3002, 638, 638, 3001, 3000,
	2999, 2998, 2997, 2996, 246, 2995, 3638, 1165, 2994, 1240,
	2867, 3689, 1048, 1048, 2849, 2848, 2847, 3608, 1048, 1048,
	1898, 3643, 2787, 1048, 1048, 2761, 1048, 2735, 2575, 3609,
	1048, 3657, 2574, 2347, 1164, 1892, 3665, 2211, 3666, 2208,
	3624, 1048, 3658, 3660, 2146, 2207, 2206, 2205, 3612, 3672,
	2204, 3620, 2116, 2115, 2114, 1834, 3680, 1048, 2112, 2096,
	1508, 2159, 2072, 3683, 3645, 3678, 3679, 2068, 3656, 2067,
	3687, 2160, 2066, 2065, 3686, 3720, 3684, 2064, 1639, 1638,
	1751, 1166, 1583, 2168, 1756, 2171, 2172, 2173, 3711, 1983,
	1582, 1479, 1478, 1984, 3705, 1477, 1476, 3644, 1475, 1474,
	3724, 3700, 1473, 1471, 3569, 1466, 3571, 1465, 1464, 1463,
	1462, 1417, 1416, 1415, 3712, 1414, 1413, 1170, 1412, 1407,
	1403, 1401, 1400, 1231, 1230, 1170, 1229, 1228, 1227, 1240,
	1195, 1240, 1194, 1128, 1940, 950, 936, 3992, 1170, 3158,
	3800, 1633, 87, 1409, 757, 81, 1168, 2033, 3565, 909,
	4234, 1393, 4152, 764, 1168, 1240, 3695, 4219, 3184, 2692,
	3088, 2189, 1584, 3602, 2191, 3111, 2540, 1168, 1892, 3750,
	4192, 3734, 2965, 4112, 3696, 3945, 2385, 1769, 1048, 3068,
	1170, 83, 3783, 3784, 1032, 1078, 3871, 3870, 3787, 3550,
	2819, 3868, 3867, 1165, 1883, 1885, 998, 1243, 1951, 1926,
	3168, 1165, 1038, 1967, 1960, 3821, 2576, 1240, 2459, 1168,
	1055, 3762, 3763, 1052, 1165, 1240, 1887, 3761, 3767, 1889,
	1164, 1895, 1054, 3764, 1053, 3766, 1888, 3811, 1164, 3810,
	1788, 3775, 3772, 3765, 3768, 3785, 1051, 168, 3848, 1882,
	3849, 1164, 3670, 1360, 1360, 3647, 3671, 3771, 3757, 3646,
	3822, 2743, 2780, 3314, 1458, 1456, 1165, 911, 1886, 1979,
	1360, 1955, 2341, 2369, 2954, 3865, 1762, 1166, 1013, 1034,
	2366, 1240, 3862, 1186, 1023, 1166, 1360, 1012, 3850, 3094,
	3073, 3301, 3518, 1164, 2254, 773, 3860, 3024, 1166, 2372,
	1179, 3812, 2482, 3888, 3837, 2087, 2475, 2471, 3854, 3148,
	2770, 1649, 3959, 1170, 3823, 3824, 3859, 1741, 2781, 1348,
	1225, 1016, 2339, 1360, 1360, 1360, 1753, 2934, 2264, 3898,
	3841, 3308, 3114, 2569, 1240, 4241, 3437, 2076, 1144, 1143,
	1166, 1142, 1168, 3861, 4225, 3116, 1048, 1048, 1048, 3866,
	3902, 3881, 4222, 3681, 3826, 3264, 3885, 1943, 2593, 1731,
	3915, 3272, 3884, 1028, 1240, 3834, 1344, 3836, 3079, 1048,
	3900, 3342, 1048, 1048, 1419, 693, 3807, 3835, 1040, 1730,
	2713, 2712, 1048, 4126, 1211, 1898, 3893, 3556, 1209, 1165,
	1048, 1048, 1208, 1207, 3166, 4413, 3562, 1238, 214, 2902,
	3921, 1339, 1670, 3922, 1662, 1240, 211, 1360, 213, 212,
	3876, 3523, 3932, 3924, 3926, 3120, 1164, 4304, 3907, 3580,
	3256, 1240, 1929, 3937, 22, 21, 3918, 20, 108, 1048,
	41, 3887, 19, 123, 140, 139, 1170, 1181, 3899, 116,
	3954, 138, 137, 136, 135, 142, 3948, 134, 1048, 133,
	1898, 128, 132, 3874, 131, 130, 129, 127, 1048, 126,
	125, 1048, 124, 1166, 3886, 1168, 1192, 122, 3965, 3966,
	1048, 121, 120, 119, 118, 688, 117, 1240, 3974, 115,
	114, 3942, 113, 112, 3973, 111, 3906, 110, 1360, 1360,
	3975, 109, 684, 681, 59, 58, 107, 4014, 106, 246,
	18, 246, 246, 1336, 39, 246, 246, 1351, 14, 3996,
	3556, 3968, 1165, 63, 64, 17, 13, 34, 3997, 4025,
	86, 246, 98, 1373, 97, 35, 1240, 3266, 4040, 1360,
	4012, 4049, 95, 1892, 94, 4016, 33, 16, 15, 1164,
	92, 91, 32, 30, 1397, 4054, 4022, 1170, 1170, 11,
	9, 8, 36, 4030, 4029, 4053, 1849, 4033, 12, 5,
	4038, 173, 1421, 172, 1427, 175, 1048, 1048, 246, 246,
	171, 1336, 4064, 2716, 4048, 4073, 1168, 1168, 4032, 174,
	4067, 85, 170, 1048, 1898, 4092, 1166, 169, 84, 4066,
	1468, 28, 10, 165, 4088, 4089, 4072, 4050, 1892, 3902,
	4071, 4086, 246, 3635, 246, 246, 78, 1336, 246, 1351,
	167, 166, 164, 1048, 163, 162, 1048, 79, 76, 688,
	161, 246, 246, 1165, 1165, 4100, 80, 160, 77, 159,
	4027, 4061, 26, 3556, 4122, 6, 1170, 62, 7, 4110,
	4101, 4102, 4028, 4133, 827, 4069, 3927, 3362, 101, 1345,
	1164, 1164, 102, 37, 74, 73, 72, 25, 61, 4121,
	24, 202, 201, 200, 199, 1168, 198, 197, 192, 191,
	196, 2802, 1508, 4140, 194, 193, 195, 1048, 1048, 4136,
	4135, 4065, 190, 4141, 205, 4155, 4017, 204, 1170, 206,
	203, 1170, 208, 189, 187, 1360, 183, 1166, 1166, 4104,
	182, 2843, 4148, 186, 188, 1360, 1360, 185, 184, 181,
	4150, 207, 1165, 4163, 4164, 157, 246, 1168, 158, 4183,
	1168, 69, 1360, 4053, 156, 4162, 155, 4167, 154, 153,
	152, 151, 1892, 246, 150, 4171, 1048, 1048, 4173, 1164,
	68, 1348, 4177, 23, 3556, 3556, 1048, 2, 4181, 4182,
	4180, 1, 0, 0, 0, 4006, 4007, 0, 0, 2259,
	4179, 0, 0, 4004, 1165, 4186, 4187, 1165, 0, 0,
	0, 4214, 0, 0, 0, 1048, 1048, 4197, 1048, 4021,
	0, 0, 4023, 4024, 0, 4201, 1166, 4224, 4227, 4216,
	0, 1164, 4239, 0, 1164, 0, 0, 0, 2345, 1895,
	0, 0, 4236, 0, 4243, 0, 0, 0, 0, 0,
	4196, 0, 4229, 1751, 4255, 0, 4259, 4246, 4260, 4233,
	0, 0, 248, 0, 1048, 1048, 1048, 0, 0, 4258,
	0, 0, 0, 3556, 0, 0, 1886, 4188, 1166, 4189,
	4250, 1166, 0, 4254, 0, 0, 1895, 4176, 4288, 4228,
	4253, 1048, 4232, 4293, 0, 0, 0, 4154, 4272, 4273,
	0, 4275, 4274, 0, 0, 0, 1864, 2481, 0, 0,
	0, 0, 0, 0, 0, 4215, 4291, 0, 4170, 0,
	0, 4315, 0, 1886, 4313, 3556, 0, 0, 3556, 0,
	0, 0, 0, 0, 2931, 2932, 4326, 4317, 2477, 1048,
	0, 0, 0, 0, 0, 4325, 4314, 0, 4320, 0,
	4324, 0, 4330, 0, 0, 4319, 0, 0, 0, 0,
	1971, 4322, 4323, 0, 4346, 0, 0, 4327, 0, 4336,
	4337, 638, 4338, 4342, 4340, 0, 0, 0, 0, 4348,
	4224, 4352, 0, 4227, 0, 4349, 4350, 1170, 0, 1170,
	4359, 4364, 246, 0, 246, 4356, 4243, 0, 246, 4149,
	0, 4365, 4371, 4363, 0, 0, 0, 0, 0, 4367,
	0, 1373, 1336, 246, 0, 246, 1168, 4372, 1168, 0,
	246, 1373, 654, 0, 0, 246, 1373, 4384, 4386, 4247,
	0, 0, 4248, 688, 4366, 0, 4368, 0, 0, 0,
	4392, 0, 0, 1011, 4398, 4395, 0, 0, 1048, 1048,
	4399, 0, 0, 0, 0, 0, 1048, 4393, 1048, 1048,
	4408, 4402, 0, 1165, 4411, 1165, 4417, 0, 4418, 0,
	0, 4416, 4422, 0, 4421, 0, 4420, 0, 3050, 3051,
	3052, 0, 4419, 0, 2782, 0, 0, 4425, 4358, 4426,
	1164, 3801, 1164, 0, 4428, 0, 4430, 0, 4431, 0,
	0, 4432, 4435, 4427, 0, 0, 0, 4437, 2054, 1048,
	4440, 4429, 4442, 0, 4439, 0, 4443, 0, 4445, 4436,
	0, 0, 4446, 0, 3797, 0, 0, 0, 3790, 0,
	0, 0, 4409, 4410, 0, 0, 0, 1166, 0, 1166,
	0, 0, 0, 0, 0, 3788, 0, 0, 0, 0,
	0, 0, 0, 0, 3792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3798, 0, 0, 0,
	0, 0, 0, 4441, 3556, 0, 3556, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 1895, 0, 246, 0, 0, 0, 4303, 0, 0,
	0, 0, 0, 0, 0, 0, 3791, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1886, 0,
	0, 0, 0, 0, 0, 1895, 1895, 0, 0, 0,
	0, 0, 70, 0, 0, 246, 0, 3027, 3028, 246,
	3045, 3046, 3047, 0, 0, 0, 246, 0, 71, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 3717,
	0, 0, 1886, 1886, 75, 3245, 0, 246, 0, 246,
	0, 0, 0, 638, 0, 246, 0, 0, 1895, 1895,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2117,
	0, 0, 0, 0, 0, 3276, 0, 0, 1679, 1680,
	0, 246, 0, 0, 82, 0, 3283, 0, 246, 1895,
	0, 3042, 0, 0, 0, 1886, 1886, 0, 0, 0,
	0, 1710, 0, 0, 0, 0, 0, 0, 1682, 0,
	0, 0, 0, 2481, 0, 0, 0, 0, 0, 688,
	0, 88, 0, 827, 0, 0, 1886, 0, 0, 3793,
	0, 0, 0, 0, 3794, 103, 0, 0, 0, 0,
	89, 100, 1681, 0, 2892, 3334, 3335, 0, 246, 0,
	1336, 246, 1701, 0, 0, 0, 0, 0, 0, 0,
	0, 1698, 0, 0, 0, 688, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 2278, 0, 0, 0, 0,
	0, 3033, 0, 246, 246, 3796, 246, 0, 246, 0,
	246, 0, 246, 2481, 2481, 90, 0, 0, 0, 0,
	3799, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3392, 2220, 0, 0, 2221, 0, 2222, 0,
	0, 0, 0, 0, 2477, 2477, 0, 0, 0, 0,
	246, 0, 1704, 1705, 1706, 1707, 0, 0, 0, 0,
	0, 3048, 1687, 0, 0, 0, 0, 0, 0, 0,
	0, 670, 0, 0, 0, 688, 0, 0, 0, 0,
	0, 0, 2383, 0, 0, 0, 0, 0, 0, 0,
	0, 1679, 1680, 0, 0, 0, 0, 3394, 3395, 0,
	0, 0, 3043, 0, 0, 0, 1709, 1711, 0, 0,
	0, 0, 0, 0, 1710, 0, 0, 1895, 0, 0,
	0, 1682, 0, 0, 0, 0, 1011, 0, 0, 0,
	1011, 1696, 1697, 0, 0, 0, 3795, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1324, 0, 0, 0,
	1324, 0, 0, 0, 1886, 1681, 93, 2481, 2481, 2481,
	0, 0, 0, 1702, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3802, 0, 0, 0, 2550, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2477, 2477,
	2477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 96, 0, 99, 0, 0, 3457,
	3458, 3459, 3460, 3461, 3462, 3463, 3464, 3465, 3466, 3467,
	3468, 3469, 3470, 3471, 3472, 3473, 3474, 3475, 0, 3479,
	215, 0, 638, 0, 0, 0, 0, 0, 822, 0,
	0, 3044, 0, 141, 0, 0, 0, 246, 0, 0,
	1895, 0, 0, 1679, 1680, 1687, 638, 0, 0, 1722,
	1723, 1724, 0, 246, 0, 638, 0, 1679, 1680, 0,
	0, 0, 0, 217, 0, 0, 1710, 246, 0, 0,
	0, 0, 1708, 1682, 2604, 0, 0, 1886, 0, 0,
	1710, 1728, 246, 1351, 0, 0, 0, 1682, 143, 1709,
	1711, 0, 1703, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1160, 180, 0, 0, 0, 1681, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 1701, 0, 0,
	0, 1681, 209, 0, 0, 0, 1698, 0, 0, 246,
	1351, 210, 654, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 1702, 241, 241, 634,
	0, 0, 0, 179, 0, 0, 0, 3039, 3040, 3041,
	0, 0, 0, 0, 3038, 3036, 3037, 3029, 3030, 3031,
	3032, 3034, 3035, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2618, 0, 0, 0, 0, 3606, 0,
	0, 0, 246, 0, 0, 0, 0, 1704, 1705, 1706,
	1707, 0, 0, 0, 246, 0, 0, 1687, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 1687, 1699, 1695, 0, 1692, 1690, 1691, 1683, 1684,
	1685, 1686, 1688, 1689, 246, 0, 0, 0, 0, 0,
	0, 0, 1719, 0, 0, 1729, 0, 0, 0, 0,
	0, 1709, 1711, 0, 0, 0, 0, 0, 0, 246,
	2725, 0, 0, 0, 0, 1709, 1711, 0, 0, 0,
	0, 0, 3674, 3675, 3676, 0, 1696, 1697, 0, 0,
	0, 0, 0, 0, 1373, 1703, 0, 246, 1508, 0,
	0, 0, 0, 0, 1717, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 2765, 0, 0, 0, 1702, 0,
	0, 0, 0, 0, 2618, 0, 638, 0, 0, 0,
	2786, 0, 1702, 0, 0, 0, 246, 0, 0, 246,
	0, 0, 0, 246, 0, 246, 0, 0, 0, 0,
	1336, 0, 246, 246, 0, 1351, 1351, 0, 0, 0,
	0, 0, 0, 0, 0, 2812, 827, 0, 2618, 2618,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2481, 2481, 0, 0,
	0, 0, 246, 1336, 246, 1895, 0, 1373, 0, 1373,
	1373, 246, 0, 0, 1336, 1324, 1336, 0, 1336, 0,
	0, 0, 0, 0, 0, 0, 0, 2477, 2477, 1690,
	1691, 1683, 1684, 1685, 1686, 1688, 1689, 1708, 0, 0,
	0, 0, 1886, 0, 246, 246, 246, 246, 1336, 246,
	0, 246, 0, 0, 0, 0, 0, 1703, 0, 0,
	0, 0, 0, 1011, 0, 0, 0, 0, 0, 1324,
	1895, 1703, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 1720, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1886, 2481, 2481,
	2481, 2481, 2481, 2481, 2481, 2481, 2481, 2481, 2481, 2481,
	2481, 2481, 2481, 2481, 2481, 2481, 2481, 0, 2481, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2477,
	2477, 2477, 2477, 2477, 2477, 2477, 2477, 2477, 2477, 2477,
	2477, 2477, 2477, 2477, 2477, 2477, 2477, 2477, 0, 2477,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1508, 0, 0, 0, 0, 1718, 1373,
	0, 0, 0, 0, 0, 0, 1721, 1699, 1695, 0,
	1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689, 0,
	0, 0, 1679, 1680, 1895, 0, 0, 1683, 1684, 1685,
	1686, 1688, 1689, 0, 0, 0, 0, 1324, 3080, 0,
	0, 0, 0, 0, 0, 1710, 0, 0, 0, 0,
	1679, 1680, 1682, 1712, 1713, 1714, 1722, 1723, 1724, 0,
	0, 1886, 0, 3923, 0, 3925, 0, 0, 0, 0,
	3106, 0, 0, 1710, 0, 0, 0, 0, 3027, 3028,
	1682, 3045, 3046, 3047, 0, 3119, 1681, 0, 1728, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3027,
	3028, 0, 3045, 3046, 3047, 0, 3137, 0, 0, 0,
	0, 0, 0, 0, 1681, 0, 0, 0, 0, 0,
	0, 3716, 0, 0, 1701, 0, 3027, 3028, 0, 3045,
	3046, 3047, 0, 1698, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 3970, 3403, 0,
	0, 3951, 3042, 0, 0, 246, 1827, 0, 0, 0,
	638, 0, 0, 0, 0, 638, 0, 0, 638, 0,
	0, 638, 638, 3042, 0, 0, 0, 638, 0, 0,
	0, 0, 0, 0, 0, 246, 1687, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1373, 3983, 0,
	3042, 0, 0, 0, 1704, 1705, 1706, 1707, 0, 0,
	0, 0, 0, 0, 1687, 0, 0, 0, 0, 1373,
	0, 0, 0, 0, 0, 0, 0, 0, 4031, 0,
	1709, 1711, 0, 0, 0, 1235, 0, 0, 0, 0,
	0, 1343, 3033, 2618, 2618, 246, 0, 1351, 0, 1719,
	2618, 0, 1729, 3170, 0, 0, 0, 0, 1709, 1711,
	3119, 2618, 3170, 3033, 2618, 3170, 3170, 0, 0, 0,
	0, 0, 0, 3027, 3028, 0, 3045, 3046, 3047, 246,
	246, 1351, 246, 1696, 1697, 0, 0, 1702, 0, 0,
	3033, 0, 0, 0, 0, 3402, 0, 0, 0, 0,
	0, 1717, 1351, 246, 0, 0, 1336, 0, 0, 0,
	0, 0, 0, 0, 0, 1702, 0, 0, 2618, 0,
	3233, 2618, 1351, 3048, 0, 2618, 2618, 1351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 997, 1483, 0,
	1483, 1483, 0, 3043, 1324, 0, 0, 3042, 0, 0,
	3048, 0, 4109, 0, 0, 0, 246, 1525, 1526, 0,
	0, 0, 0, 0, 3043, 0, 0, 0, 0, 0,
	246, 3260, 0, 0, 3262, 2618, 0, 0, 246, 0,
	0, 0, 246, 0, 1427, 0, 0, 0, 0, 0,
	0, 3043, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2765, 0, 0, 1336, 1339, 246, 0,
	1238, 2618, 0, 638, 0, 0, 0, 0, 0, 0,
	2618, 0, 0, 70, 0, 0, 1703, 0, 246, 0,
	0, 1324, 246, 246, 1708, 0, 0, 3033, 0, 71,
	0, 0, 0, 0, 0, 1508, 1508, 0, 0, 0,
	0, 0, 1632, 0, 1703, 75, 0, 0, 0, 246,
	2765, 0, 1508, 2765, 0, 0, 0, 0, 0, 0,
	0, 1679, 1680, 0, 0, 0, 0, 0, 0, 0,
	1720, 3414, 3044, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1710, 82, 0, 3048, 3430, 0,
	1324, 1682, 0, 3044, 0, 0, 0, 0, 3372, 0,
	0, 1336, 246, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1324, 0, 0, 0,
	3044, 0, 88, 0, 0, 1681, 0, 0, 3043, 0,
	0, 0, 0, 0, 0, 1701, 103, 246, 0, 0,
	0, 89, 100, 0, 1698, 0, 0, 0, 0, 1692,
	1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689, 0, 0,
	0, 0, 0, 0, 0, 1718, 0, 0, 0, 0,
	1693, 1694, 1700, 1721, 1699, 1695, 0, 1692, 1690, 1691,
	1683, 1684, 1685, 1686, 1688, 1689, 0, 0, 0, 0,
	0, 0, 0, 3435, 0, 3391, 90, 0, 3039, 3040,
	3041, 0, 0, 0, 0, 3038, 3036, 3037, 3029, 3030,
	3031, 3032, 3034, 3035, 0, 1704, 1705, 1706, 1707, 3039,
	3040, 3041, 0, 1324, 0, 1687, 3038, 3036, 3037, 3029,
	3030, 3031, 3032, 3034, 3035, 0, 0, 0, 0, 0,
	2481, 0, 3521, 0, 0, 0, 3039, 3040, 3041, 0,
	0, 0, 0, 3038, 3036, 3037, 3029, 3030, 3031, 3032,
	3034, 3035, 0, 0, 0, 0, 0, 3044, 0, 1709,
	1711, 2477, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1324, 0, 0, 1859, 0, 0, 2481, 0, 0,
	0, 0, 0, 0, 1696, 1697, 0, 0, 0, 1868,
	0, 1343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 246, 0, 0, 0, 0, 2477, 0,
	0, 0, 0, 0, 0, 0, 1702, 0, 0, 0,
	0, 0, 0, 0, 638, 638, 0, 93, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1373, 1373, 0, 0,
	0, 0, 0, 3027, 3028, 0, 3045, 3046, 3047, 0,
	1373, 1373, 1373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 96, 0, 99, 0, 0,
	0, 0, 0, 3039, 3040, 3041, 0, 0, 0, 3558,
	3038, 3036, 3037, 3029, 3030, 3031, 3032, 3034, 3035, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 822,
	0, 0, 0, 0, 141, 0, 0, 688, 0, 0,
	997, 0, 0, 0, 997, 0, 0, 3042, 0, 0,
	0, 2481, 0, 0, 0, 1708, 0, 0, 0, 0,
	1080, 0, 0, 0, 217, 1679, 1680, 0, 246, 0,
	0, 0, 0, 0, 0, 1703, 0, 0, 0, 0,
	0, 0, 2477, 0, 0, 0, 1351, 246, 1710, 143,
	0, 0, 1375, 0, 1381, 1682, 1387, 0, 246, 0,
	0, 0, 0, 0, 180, 0, 0, 0, 246, 0,
	0, 0, 216, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 246, 209, 0, 0, 246, 0, 0, 1681,
	0, 0, 210, 0, 0, 0, 0, 3033, 0, 1701,
	0, 0, 0, 0, 0, 0, 2618, 246, 1698, 0,
	0, 2074, 0, 0, 1521, 2081, 0, 0, 0, 0,
	70, 0, 0, 0, 0, 0, 2812, 2812, 2093, 0,
	0, 1509, 827, 827, 2618, 3049, 71, 2765, 2765, 0,
	0, 827, 2618, 2104, 0, 2104, 0, 0, 1527, 0,
	1532, 2111, 75, 0, 0, 0, 0, 3048, 0, 2920,
	1541, 246, 1546, 0, 0, 1699, 1695, 0, 1692, 1690,
	1691, 1683, 1684, 1685, 1686, 1688, 1689, 1483, 0, 1704,
	1705, 1706, 1707, 0, 1343, 0, 0, 0, 0, 1687,
	0, 0, 82, 0, 0, 0, 0, 0, 3043, 0,
	0, 0, 0, 0, 3770, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1605, 0, 0, 1611, 3780, 88,
	0, 3735, 0, 1709, 1711, 0, 0, 0, 1171, 0,
	0, 0, 0, 103, 2081, 0, 0, 2164, 89, 100,
	0, 0, 0, 0, 0, 0, 0, 0, 1696, 1697,
	0, 0, 0, 0, 0, 0, 0, 0, 2184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2196, 0, 2198, 0, 2200, 0, 2202, 0, 2203, 0,
	1702, 0, 0, 246, 0, 0, 0, 0, 0, 1373,
	0, 246, 0, 90, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 1732, 1733, 1734,
	1735, 1736, 1737, 1738, 0, 0, 2225, 1324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3044, 0, 0,
	0, 0, 2618, 2618, 2618, 0, 0, 0, 1750, 0,
	0, 0, 0, 3808, 1763, 3808, 3558, 1373, 0, 1324,
	0, 0, 0, 0, 0, 2618, 0, 3170, 0, 0,
	1373, 1373, 246, 1351, 1324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1351, 246, 1351, 246, 0, 0,
	0, 0, 0, 0, 0, 1324, 0, 1238, 2618, 0,
	2618, 246, 0, 0, 0, 0, 0, 0, 0, 1708,
	0, 0, 1011, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2618, 1011, 3943, 0, 1703,
	3878, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 93, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1821,
	1821, 1821, 0, 3039, 3040, 3041, 0, 0, 3943, 0,
	3038, 3036, 3037, 3029, 3030, 3031, 3032, 3034, 3035, 3558,
	0, 0, 1373, 0, 2278, 0, 0, 0, 0, 0,
	0, 176, 96, 0, 99, 0, 0, 0, 0, 0,
	1324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2708, 0, 0, 0, 215, 0,
	0, 0, 0, 0, 0, 0, 822, 0, 0, 0,
	0, 141, 0, 0, 0, 0, 0, 997, 0, 0,
	2278, 0, 0, 0, 0, 0, 0, 2700, 2698, 1324,
	0, 0, 0, 2547, 2702, 2704, 2694, 0, 0, 1699,
	1695, 217, 1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688,
	1689, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2618, 0, 3170, 143, 0, 3977, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 180, 3558, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 2093, 688, 0, 0, 210,
	0, 0, 0, 0, 0, 1336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1351,
	246, 1519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3977,
	0, 0, 0, 0, 0, 0, 0, 2618, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4058,
	0, 0, 0, 0, 0, 0, 1324, 0, 0, 1324,
	0, 1373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3558, 3558, 0, 0, 0, 0, 0,
	1343, 0, 0, 0, 1171, 2696, 0, 0, 1171, 0,
	246, 246, 1171, 0, 0, 0, 2710, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3435, 0, 0, 2709, 2701, 2699,
	2703, 2705, 2695, 2697, 2711, 0, 1171, 0, 0, 0,
	1324, 2707, 0, 2081, 0, 3977, 0, 0, 0, 0,
	0, 2093, 0, 0, 0, 0, 0, 1324, 0, 0,
	1171, 0, 0, 0, 0, 3808, 0, 0, 0, 0,
	0, 0, 3558, 0, 2714, 0, 0, 0, 0, 0,
	0, 0, 2788, 0, 0, 1483, 0, 0, 0, 1483,
	0, 1483, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1171, 0, 0, 0, 0, 0,
	1171, 0, 3878, 0, 1171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3558, 0, 246, 3558, 1171, 2841,
	0, 0, 0, 0, 0, 0, 0, 3170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2851, 0,
	2854, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1373, 0, 1373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2878, 1343, 2880, 1343, 4210, 2883, 0, 0, 0, 0,
	0, 1373, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 1324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 2618, 0, 0, 0, 1483, 0,
	0, 0, 0, 0, 0, 0, 2911, 2715, 0, 0,
	0, 246, 0, 0, 0, 0, 2706, 0, 0, 0,
	0, 0, 0, 0, 2253, 0, 2257, 0, 0, 0,
	0, 0, 0, 2271, 0, 0, 3435, 0, 0, 0,
	2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289,
	2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299,
	2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309,
	2310, 2311, 2312, 2313, 2314, 0, 2320, 0, 2322, 2323,
	2324, 2325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1750, 0, 3977, 0, 2364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2394, 2397, 2400, 2403, 0, 2407, 2408, 2409, 2410,
	2411, 2412, 2413, 0, 1373, 0, 2618, 1679, 1680, 0,
	0, 0, 0, 3558, 0, 3558, 0, 0, 0, 0,
	0, 0, 0, 0, 2473, 0, 2484, 2486, 2491, 0,
	1710, 0, 0, 0, 0, 0, 0, 1682, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1681, 0, 0, 0, 0, 1171, 0, 1171, 0,
	0, 1701, 0, 0, 0, 0, 2812, 0, 0, 1324,
	1698, 0, 0, 1171, 2618, 1679, 1680, 0, 1712, 1713,
	1714, 1722, 1723, 1724, 0, 0, 0, 0, 1899, 2812,
	0, 1324, 1171, 0, 0, 0, 0, 1715, 1710, 0,
	0, 0, 0, 1171, 0, 1682, 0, 0, 0, 0,
	0, 0, 0, 1728, 0, 1679, 1680, 0, 0, 0,
	0, 2913, 0, 0, 0, 0, 0, 1171, 0, 0,
	0, 0, 0, 0, 0, 0, 1679, 1680, 1710, 1681,
	0, 1704, 1705, 1706, 1707, 1682, 0, 0, 0, 1701,
	0, 1687, 0, 0, 0, 0, 0, 0, 1698, 1710,
	0, 0, 0, 0, 0, 0, 1682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1681,
	0, 3161, 0, 0, 0, 0, 0, 0, 0, 1701,
	0, 0, 0, 0, 0, 1709, 1711, 0, 1698, 0,
	1681, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1701, 1324, 0, 1324, 0, 3202, 3204, 0, 2093, 0,
	1696, 1697, 0, 0, 0, 0, 0, 0, 0, 1704,
	1705, 1706, 1707, 0, 0, 0, 0, 1324, 0, 1687,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1702, 0, 2728, 2729, 0, 2731, 0, 0,
	0, 0, 0, 0, 0, 1171, 1171, 0, 0, 1704,
	1705, 1706, 1707, 0, 1719, 1171, 0, 1729, 0, 1687,
	0, 0, 0, 1709, 1711, 0, 0, 0, 0, 1324,
	1704, 1705, 1706, 1707, 0, 0, 0, 1324, 0, 1725,
	1687, 1726, 0, 0, 0, 0, 0, 0, 1696, 1697,
	0, 0, 0, 0, 3273, 0, 0, 0, 3277, 0,
	0, 0, 0, 1709, 1711, 0, 1717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1702, 0, 0, 0, 1709, 1711, 0, 0, 1696, 1697,
	0, 0, 0, 1324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1483, 0, 0, 0, 1343, 1343,
	0, 1708, 0, 0, 0, 0, 0, 0, 0, 0,
	1702, 0, 1727, 0, 0, 0, 0, 0, 0, 0,
	0, 1703, 0, 0, 0, 3338, 0, 0, 0, 0,
	1716, 1702, 0, 0, 0, 0, 1324, 2866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1171, 0, 1171, 0, 1171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1324, 0, 0, 0,
	1171, 1171, 0, 0, 0, 0, 0, 0, 3375, 0,
	1343, 1171, 0, 0, 0, 0, 0, 1732, 1733, 1708,
	0, 0, 0, 1171, 0, 1171, 1171, 1171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1324, 0, 1703,
	0, 0, 0, 3387, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1324, 0, 0, 0, 0, 0, 1708,
	0, 0, 0, 0, 0, 1720, 0, 0, 0, 0,
	0, 0, 2914, 2915, 0, 0, 0, 0, 2921, 1703,
	1708, 1699, 1695, 0, 1692, 1690, 1691, 1683, 1684, 1685,
	1686, 1688, 1689, 1011, 0, 0, 0, 2935, 2936, 0,
	1703, 0, 0, 2364, 0, 0, 0, 0, 0, 1324,
	0, 0, 2943, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2957, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1899, 1899, 1171, 0, 0, 2969, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1324, 0,
	1718, 0, 0, 0, 0, 1693, 1694, 1700, 1721, 1699,
	1695, 0, 1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688,
	1689, 0, 0, 0, 0, 3743, 0, 0, 0, 3742,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1699,
	1695, 0, 1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688,
	1689, 0, 0, 0, 0, 0, 0, 0, 0, 1171,
	0, 0, 0, 1692, 1690, 1691, 1683, 1684, 1685, 1686,
	1688, 1689, 0, 0, 2491, 2491, 2491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1821,
	0, 0, 0, 0, 0, 0, 0, 3084, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1171, 0, 0, 0, 0, 0, 0, 1171, 0,
	0, 0, 0, 0, 0, 0, 0, 1171, 0, 1011,
	1011, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1171, 0, 1679, 1680, 0, 1712,
	1713, 1714, 1722, 1723, 1724, 2452, 2453, 2454, 2455, 2448,
	2449, 2450, 2451, 0, 0, 0, 997, 0, 1715, 1710,
	0, 0, 0, 0, 0, 0, 1682, 0, 0, 0,
	997, 0, 0, 0, 1728, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2093, 0, 0, 0, 0, 3187, 0,
	1681, 0, 0, 0, 2093, 0, 0, 0, 0, 0,
	1701, 0, 0, 0, 3634, 0, 0, 0, 1011, 1698,
	0, 0, 0, 0, 2428, 2429, 2430, 2431, 2093, 0,
	0, 0, 3649, 0, 0, 0, 0, 0, 0, 0,
	0, 1171, 0, 0, 0, 0, 2440, 2441, 2442, 2443,
	2436, 2437, 2438, 2439, 2444, 2445, 2446, 2447, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1899, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1704, 1705, 1706, 1707, 0, 0, 0, 0, 0, 1171,
	1687, 0, 0, 0, 0, 0, 0, 3698, 0, 0,
	0, 0, 0, 1171, 0, 0, 0, 0, 0, 2424,
	2425, 2426, 2427, 2432, 2433, 2434, 2435, 0, 0, 0,
	0, 0, 0, 0, 0, 1719, 0, 0, 1729, 0,
	0, 0, 0, 0, 1709, 1711, 0, 0, 0, 0,
	0, 0, 0, 0, 1171, 0, 0, 0, 0, 0,
	1725, 0, 1726, 0, 0, 0, 0, 0, 0, 1696,
	1697, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1702, 0, 0, 0, 0, 0, 804, 0, 0,
	0, 1171, 1171, 0, 1171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1171, 787, 0, 0,
	0, 0, 788, 0, 0, 0, 0, 0, 0, 0,
	0, 1171, 0, 1727, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1044, 0, 0, 0, 0, 0,
	0, 1716, 0, 0, 0, 0, 0, 0, 0, 0,
	789, 0, 0, 2271, 0, 0, 0, 0, 0, 3389,
	3390, 790, 0, 3393, 0, 0, 0, 3396, 0, 0,
	0, 0, 0, 0, 0, 0, 3400, 0, 0, 245,
	245, 245, 791, 0, 0, 3407, 0, 0, 3084, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3825, 0,
	1708, 0, 810, 3419, 0, 0, 728, 0, 0, 0,
	0, 2093, 0, 0, 0, 0, 0, 0, 0, 0,
	1703, 792, 0, 3442, 3443, 0, 3444, 3445, 3446, 0,
	0, 728, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 793, 0, 1720, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 794, 2093, 0, 795, 3452, 0,
	0, 0, 3454, 0, 3894, 0, 0, 0, 0, 0,
	0, 0, 714, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3482, 3483, 0, 809, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3503, 0, 0, 0,
	0, 1718, 0, 0, 0, 0, 1693, 1694, 1700, 1721,
	1699, 1695, 1167, 1692, 1690, 1691, 1683, 1684, 1685, 1686,
	1688, 1689, 0, 806, 0, 0, 2978, 0, 0, 0,
	2979, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3553, 0,
	0, 0, 3984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 797, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3579, 0, 0, 0,
	0, 0, 0, 0, 1171, 1171, 0, 0, 0, 816,
	0, 798, 0, 0, 0, 0, 0, 0, 0, 1171,
	0, 0, 0, 0, 0, 0, 2093, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1171, 0, 0,
	0, 0, 0, 0, 713, 0, 0, 0, 0, 1171,
	0, 799, 1171, 0, 0, 814, 815, 812, 0, 0,
	0, 0, 0, 807, 0, 0, 800, 0, 0, 1899,
	0, 0, 0, 1171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1171, 1171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1821,
	0, 0, 0, 0, 801, 808, 4099, 1343, 3667, 0,
	0, 0, 0, 802, 0, 0, 1899, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 803, 0, 0,
	0, 0, 811, 1171, 0, 0, 0, 1679, 1680, 0,
	1712, 1713, 1714, 1722, 1723, 1724, 715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 805, 0, 1715,
	1710, 0, 0, 0, 0, 0, 0, 1682, 1171, 0,
	0, 0, 0, 0, 0, 1728, 0, 0, 1171, 0,
	0, 0, 0, 0, 0, 0, 0, 1171, 3713, 3714,
	0, 0, 1171, 0, 3718, 3719, 0, 0, 0, 3722,
	3723, 1681, 0, 0, 0, 0, 3727, 0, 0, 0,
	0, 1701, 0, 0, 0, 1171, 0, 3731, 0, 0,
	1698, 1171, 0, 1171, 0, 0, 0, 1171, 0, 0,
	0, 0, 4172, 3736, 0, 746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 748, 1171, 0, 0, 0,
	749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1704, 1705, 1706, 1707, 0, 0, 0, 750, 0,
	766, 1687, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4218, 0, 0, 1171, 1171, 0, 0, 0,
	0, 0, 0, 0, 0, 751, 0, 0, 0, 4240,
	752, 0, 0, 0, 0, 0, 1719, 1171, 0, 1729,
	0, 0, 0, 0, 0, 1709, 1711, 4252, 0, 0,
	774, 0, 0, 0, 3809, 0, 753, 0, 0, 0,
	0, 1725, 0, 1726, 0, 0, 0, 0, 0, 772,
	1696, 1697, 0, 0, 1171, 0, 0, 1171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 1717, 245,
	245, 0, 747, 245, 245, 0, 0, 0, 0, 0,
	0, 0, 1702, 0, 0, 0, 0, 0, 0, 728,
	0, 0, 754, 0, 0, 755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 776, 0, 0, 0,
	714, 1899, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1727, 0, 0, 0, 1171, 0,
	0, 0, 0, 0, 0, 0, 245, 245, 0, 0,
	0, 0, 1716, 0, 0, 1171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1899, 1899, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 245, 245, 0, 0, 245, 0, 0, 0,
	0, 0, 775, 0, 0, 0, 0, 0, 0, 245,
	245, 770, 3938, 3939, 3940, 0, 0, 0, 0, 0,
	0, 1708, 0, 0, 0, 0, 0, 0, 1899, 1899,
	0, 0, 0, 0, 0, 2271, 0, 0, 3949, 3950,
	0, 1703, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3958, 3961, 0, 1899,
	0, 0, 0, 0, 0, 0, 0, 1720, 0, 756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	758, 0, 0, 0, 0, 0, 1171, 1171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 759,
	0, 0, 0, 0, 4003, 0, 0, 0, 0, 1171,
	0, 245, 0, 0, 4010, 0, 0, 997, 0, 0,
	0, 0, 0, 0, 0, 0, 4018, 0, 0, 0,
	0, 0, 713, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 745, 0, 767, 0, 0, 0, 0,
	0, 0, 1718, 0, 760, 0, 0, 1693, 1694, 1700,
	1721, 1699, 1695, 1171, 1692, 1690, 1691, 1683, 1684, 1685,
	1686, 1688, 1689, 0, 0, 0, 0, 2360, 765, 0,
	0, 2361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 761, 0, 0, 779, 0, 778, 0, 0,
	0, 762, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 763, 0, 0, 0, 0,
	771, 0, 0, 0, 0, 0, 780, 0, 777, 0,
	0, 0, 0, 0, 715, 0, 0, 0, 1171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1899, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4125,
	0, 0, 4128, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1171, 1171, 1171, 0, 0, 0, 0, 0,
	1843, 0, 1167, 997, 997, 0, 245, 0, 1171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 1843, 245, 0, 0, 0, 1171, 728, 0,
	0, 0, 0, 728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1899, 0, 0, 2271, 0, 0, 0, 0, 0, 0,
	0, 0, 3961, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 997, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4271, 4271, 4271, 0, 0, 0, 0, 1171, 0, 0,
	0, 0, 0, 0, 0, 1171, 0, 0, 0, 1171,
	0, 1171, 0, 0, 0, 0, 0, 4292, 1171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 728, 0, 0, 0, 0, 0, 0, 0, 0,
	1171, 0, 0, 0, 0, 4271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1057, 0, 0, 0, 1171, 0, 0,
	0, 0, 0, 0, 0, 1171, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 0,
	245, 0, 0, 1171, 1171, 0, 0, 0, 247, 247,
	247, 0, 0, 0, 0, 245, 0, 245, 0, 0,
	1171, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 1171, 0, 0, 0, 247, 1171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 4271, 4403, 245, 0, 0, 0,
	247, 0, 4407, 1171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1171, 1171, 1171, 0, 0, 0, 0,
	0, 0, 0, 0, 1171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1171, 0, 245, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1899, 0, 0, 0, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 728, 245, 0, 245, 1171, 245, 1171, 245, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1033, 105, 1171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	1899, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1171, 1171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 105, 0, 1171, 0, 0, 1171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1171, 1171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1899, 1679, 1680, 0, 1712, 1713,
	1714, 1722, 1723, 1724, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 972, 0, 0, 0, 1715, 1710, 0,
	0, 0, 0, 0, 992, 1682, 0, 0, 0, 0,
	0, 0, 0, 1728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1171, 0, 0, 0,
	0, 0, 0, 0, 0, 1167, 0, 0, 0, 1681,
	0, 0, 1154, 0, 0, 0, 0, 0, 0, 1701,
	0, 1167, 0, 0, 0, 0, 0, 0, 1698, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1171, 0,
	245, 1171, 0, 0, 0, 1171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1171, 1171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 1704,
	1705, 1706, 1707, 0, 0, 0, 0, 245, 0, 1687,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1719, 0, 0, 1729, 0, 0,
	0, 0, 0, 1709, 1711, 0, 0, 0, 0, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 1725,
	0, 1726, 245, 0, 0, 0, 0, 0, 1696, 1697,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1717, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	1702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 728, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1727, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	1716, 0, 0, 0, 0, 0, 247, 1244, 247, 247,
	0, 1244, 247, 247, 0, 1244, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 245, 247, 0,
	0, 245, 0, 245, 0, 0, 0, 1171, 0, 1171,
	245, 245, 0, 0, 0, 0, 0, 0, 0, 1244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1708,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 1244, 0, 247, 247, 0, 0, 1703,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 245, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 0, 1720, 0, 0, 0, 247,
	0, 247, 247, 0, 0, 247, 0, 1244, 0, 0,
	0, 0, 0, 1244, 0, 0, 0, 1244, 247, 247,
	0, 0, 245, 245, 245, 245, 0, 245, 0, 245,
	0, 1244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1244, 0, 0, 0, 0, 0, 0,
	1718, 0, 0, 0, 0, 1693, 1694, 1700, 1721, 1699,
	1695, 0, 1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688,
	1689, 0, 0, 247, 0, 0, 0, 0, 0, 3405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 105, 0, 105, 0, 105, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	105, 0, 0, 0, 992, 105, 105, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 105, 0, 105,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 105,
	0, 105, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1167, 0,
	1679, 1680, 0, 1712, 1713, 1714, 1722, 1723, 1724, 0,
	0, 0, 0, 1167, 0, 0, 0, 0, 0, 0,
	0, 105, 1715, 1710, 0, 0, 0, 0, 0, 0,
	1682, 0, 0, 0, 0, 0, 0, 0, 1728, 0,
	0, 0, 0, 1843, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 1681, 0, 1244, 0, 0, 0,
	247, 247, 247, 0, 1701, 0, 0, 247, 0, 0,
	0, 0, 247, 1698, 0, 1244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1244, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 972,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1244, 0, 0, 0, 0, 0, 0, 0, 0, 1744,
	0, 0, 0, 0, 0, 0, 0, 245, 245, 0,
	245, 0, 0, 0, 0, 0, 1749, 1843, 0, 0,
	1755, 0, 0, 0, 1704, 1705, 1706, 1707, 0, 0,
	0, 245, 0, 0, 1687, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1719,
	0, 0, 1729, 0, 0, 0, 0, 0, 1709, 1711,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1725, 0, 1726, 0, 728, 0,
	0, 0, 0, 1696, 1697, 0, 245, 0, 0, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1717, 0, 0, 0, 0, 0, 247, 1244, 1244,
	247, 0, 0, 0, 0, 1702, 1167, 0, 1244, 0,
	1841, 0, 1844, 0, 105, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	245, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1727, 0, 0,
	0, 0, 247, 0, 0, 0, 247, 245, 0, 0,
	0, 0, 0, 247, 0, 1716, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 247, 0, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 245, 0, 0, 0, 0, 0, 247, 0,
	0, 0, 0, 0, 1708, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1703, 245, 0, 0, 0, 0,
	0, 0, 0, 1244, 0, 1244, 0, 1244, 0, 0,
	0, 0, 0, 251, 0, 0, 0, 0, 0, 0,
	1720, 0, 0, 1244, 1244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1244, 247, 0, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 1244, 0, 1244, 1244,
	1244, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 247, 0, 247, 0, 247, 0, 247, 0, 247,
	0, 0, 0, 0, 0, 720, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	720, 0, 0, 0, 0, 1718, 0, 247, 0, 0,
	1693, 1694, 1700, 1721, 1699, 1695, 0, 1692, 1690, 1691,
	1683, 1684, 1685, 1686, 1688, 1689, 0, 0, 0, 0,
	0, 0, 0, 0, 2981, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1244, 0, 0, 0, 0,
	1167, 1167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 992, 0, 992, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1244, 0, 0, 0, 0, 1843, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 0, 0, 0, 0, 0,
	0, 70, 0, 45, 44, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 71, 0, 0,
	144, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 75, 0, 0, 245, 0, 0, 0,
	0, 1244, 0, 0, 65, 0, 0, 0, 0, 0,
	0, 47, 0, 146, 0, 245, 0, 0, 0, 0,
	0, 0, 1049, 0, 247, 0, 245, 1244, 0, 0,
	0, 46, 0, 82, 0, 0, 245, 0, 0, 247,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	245, 0, 0, 0, 245, 0, 972, 49, 66, 972,
	972, 0, 0, 0, 0, 50, 0, 0, 0, 0,
	88, 0, 0, 0, 147, 1167, 0, 0, 0, 0,
	0, 0, 48, 0, 103, 0, 247, 0, 0, 89,
	100, 0, 0, 0, 0, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 0, 0, 245,
	992, 0, 0, 0, 1244, 0, 0, 0, 0, 1749,
	0, 0, 0, 1749, 90, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 1244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1244, 0, 0, 0,
	0, 0, 0, 0, 0, 1154, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1844, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 0, 1244, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 1167, 0, 0, 105, 0, 0, 0, 0, 1167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 247, 0, 93, 247, 0, 0, 0,
	247, 0, 247, 0, 0, 0, 0, 0, 0, 247,
	247, 0, 52, 0, 1244, 1244, 0, 1244, 0, 0,
	0, 0, 0, 0, 0, 55, 0, 0, 0, 1244,
	57, 0, 0, 0, 1843, 0, 67, 0, 0, 0,
	247, 56, 176, 96, 1244, 99, 0, 0, 0, 53,
	245, 0, 0, 148, 0, 0, 0, 0, 0, 247,
	54, 247, 0, 245, 0, 245, 0, 0, 247, 215,
	0, 0, 0, 0, 0, 0, 0, 60, 0, 245,
	0, 0, 141, 105, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 0, 0, 0,
	0, 247, 247, 247, 247, 0, 247, 1241, 247, 0,
	0, 1241, 217, 0, 0, 1361, 105, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 1361,
	0, 105, 180, 0, 105, 0, 105, 1843, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 1361, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 105, 0,
	0, 105, 179, 0, 0, 3, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1361, 0, 0,
	0, 0, 0, 1361, 0, 0, 0, 1361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 105, 0, 0,
	0, 1361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 0,
	1843, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 105, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 1843, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 245,
	1244, 0, 0, 0, 2338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1749, 1242, 0, 0, 0,
	1242, 0, 0, 0, 1362, 0, 1244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1244, 1244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1362, 0,
	1843, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 1362, 0, 0, 0, 1244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 247, 0, 247,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 0,
	0, 0, 1843, 0, 245, 1843, 0, 0, 0, 0,
	247, 1244, 0, 0, 0, 0, 1362, 0, 0, 0,
	0, 1244, 1362, 0, 0, 0, 1362, 0, 0, 0,
	1244, 0, 0, 0, 0, 1244, 0, 0, 0, 0,
	1362, 0, 0, 0, 0, 0, 1241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 720, 1244, 0,
	0, 0, 720, 247, 1244, 1361, 1244, 0, 1154, 0,
	1244, 0, 0, 0, 0, 0, 1361, 247, 0, 0,
	0, 0, 0, 1154, 245, 247, 0, 0, 1244, 247,
	0, 0, 1362, 0, 0, 0, 0, 0, 0, 1244,
	1241, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 247,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1244, 1244,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	105, 105, 0, 0, 105, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1244, 0, 247,
	1244, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 105, 105, 1361, 1361,
	105, 0, 0, 0, 0, 0, 0, 0, 1241, 0,
	0, 0, 0, 0, 247, 0, 0, 0, 0, 0,
	0, 1843, 0, 1843, 1679, 1680, 0, 1712, 1713, 1714,
	1722, 1723, 1724, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1715, 1710, 0, 0,
	0, 1244, 0, 0, 1682, 0, 0, 0, 0, 0,
	0, 0, 1728, 0, 0, 0, 0, 0, 1244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1681, 0,
	0, 0, 0, 0, 0, 0, 1154, 0, 1701, 992,
	0, 0, 0, 0, 0, 0, 0, 1698, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 105, 105, 0, 0, 1242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1361, 1362, 1361, 0, 1361, 0, 0,
	0, 0, 0, 0, 0, 1362, 0, 0, 0, 0,
	0, 0, 0, 1361, 1361, 0, 0, 0, 1704, 1705,
	1706, 1707, 0, 0, 1361, 0, 0, 0, 1687, 1242,
	0, 0, 0, 0, 0, 0, 1361, 0, 1361, 1361,
	1361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	720, 0, 1244, 1719, 0, 0, 1729, 0, 0, 0,
	0, 0, 1709, 1711, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1725, 0,
	1726, 0, 0, 0, 0, 0, 0, 1696, 1697, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1702,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1362, 1362, 0,
	0, 1727, 0, 0, 0, 247, 0, 1242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1716,
	0, 1244, 0, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 0, 0, 0, 247,
	0, 0, 105, 247, 0, 0, 0, 0, 0, 1244,
	0, 0, 1241, 0, 0, 0, 0, 0, 1708, 0,
	1154, 1154, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1703, 0,
	0, 0, 0, 0, 0, 1244, 1244, 1244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1244, 0, 0, 1720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	1244, 1241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1362, 0, 1362, 0, 1362, 0, 0, 0,
	0, 0, 1244, 0, 0, 0, 0, 1241, 0, 0,
	0, 0, 1362, 1362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1362, 0, 1362, 1362, 1362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1718,
	0, 0, 0, 0, 1693, 1694, 1700, 1721, 1699, 1695,
	0, 1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689,
	0, 0, 0, 0, 0, 0, 0, 0, 2980, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1241, 0, 0, 0, 0, 105,
	0, 0, 1244, 0, 1244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1154, 0, 0, 1244, 0,
	0, 0, 0, 0, 1242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1361, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 105, 0, 0, 0,
	1244, 0, 247, 0, 247, 0, 0, 0, 1244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 1361, 0, 0,
	0, 0, 0, 0, 0, 0, 1244, 1244, 0, 0,
	0, 1242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1244, 0, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 1244, 247, 0, 0, 0, 1244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1361, 1361, 0, 1361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1361,
	0, 0, 0, 0, 0, 0, 1244, 1244, 1244, 0,
	1242, 0, 0, 0, 1361, 0, 0, 1244, 0, 0,
	0, 0, 0, 0, 0, 105, 0, 0, 0, 0,
	0, 1154, 0, 0, 0, 0, 1242, 0, 0, 1154,
	0, 0, 0, 0, 0, 0, 0, 1244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1679, 1680, 0, 1712,
	1713, 1714, 1722, 1723, 1724, 0, 0, 0, 1244, 0,
	1244, 0, 0, 0, 0, 0, 0, 0, 1715, 1710,
	0, 0, 0, 0, 1244, 0, 1682, 0, 0, 0,
	0, 0, 0, 247, 1728, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1681, 0, 0, 1242, 0, 0, 0, 0, 0, 0,
	1701, 0, 0, 0, 0, 0, 0, 0, 0, 1698,
	1244, 0, 0, 0, 0, 105, 0, 247, 0, 0,
	0, 1244, 1244, 0, 0, 0, 105, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 105, 0,
	0, 1242, 0, 0, 0, 0, 0, 0, 0, 1244,
	0, 0, 1244, 0, 0, 1362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1704, 1705, 1706, 1707, 0, 0, 0, 0, 0, 0,
	1687, 0, 0, 0, 0, 0, 0, 247, 247, 0,
	0, 0, 0, 0, 0, 0, 1362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1719, 0, 0, 1729, 0,
	0, 0, 0, 0, 1709, 1711, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1725, 0, 1726, 0, 0, 0, 0, 0, 0, 1696,
	1697, 0, 0, 1362, 1362, 0, 1362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1717, 1362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 1702, 0, 1362, 0, 0, 0, 0, 1241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 1244, 0,
	1241, 0, 0, 1727, 0, 0, 0, 0, 1244, 1244,
	0, 0, 0, 0, 0, 1241, 0, 0, 0, 0,
	0, 1716, 0, 0, 0, 1244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1361, 1361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1679, 1680, 2338, 1712, 1713, 1714, 1722, 1723, 1724,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	1708, 0, 0, 1715, 1710, 0, 0, 0, 0, 0,
	247, 1682, 0, 0, 0, 0, 1361, 0, 0, 1728,
	1703, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1681, 1720, 0, 0, 0,
	0, 1361, 0, 0, 0, 1701, 0, 0, 0, 0,
	0, 1241, 0, 0, 1698, 0, 0, 0, 0, 0,
	1361, 0, 0, 0, 0, 1361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1361, 0,
	0, 0, 0, 0, 1361, 0, 1361, 0, 0, 105,
	1241, 0, 0, 0, 0, 0, 0, 720, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1361, 0,
	105, 0, 0, 0, 0, 1704, 1705, 1706, 1707, 1361,
	0, 1718, 0, 0, 0, 1687, 1693, 1694, 1700, 1721,
	1699, 1695, 0, 1692, 1690, 1691, 1683, 1684, 1685, 1686,
	1688, 1689, 0, 0, 0, 0, 0, 0, 0, 0,
	2977, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1719, 0, 0, 1729, 0, 0, 0, 0, 0, 1709,
	1711, 0, 0, 0, 0, 0, 0, 0, 1361, 1361,
	0, 0, 0, 0, 0, 1725, 0, 1726, 0, 0,
	0, 0, 0, 0, 1696, 1697, 0, 1242, 0, 0,
	1361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1717, 0, 0, 0, 0, 0, 0, 0,
	0, 105, 0, 0, 105, 0, 1702, 0, 0, 1242,
	0, 0, 0, 0, 0, 0, 0, 1241, 0, 0,
	1241, 0, 0, 0, 1242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1242, 0, 0, 1727, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1362,
	1362, 0, 0, 0, 0, 0, 1716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1241, 0, 0, 1679, 1680, 0, 1712, 1713, 1714,
	1722, 1723, 1724, 0, 0, 1362, 0, 0, 1241, 0,
	0, 0, 0, 0, 0, 0, 1715, 1710, 0, 0,
	0, 0, 0, 0, 1682, 1708, 0, 0, 0, 0,
	0, 0, 1728, 0, 0, 0, 0, 0, 0, 0,
	1362, 0, 0, 0, 0, 1703, 0, 0, 0, 0,
	1242, 0, 0, 0, 0, 0, 0, 0, 1681, 1362,
	0, 0, 0, 0, 1362, 0, 0, 0, 1701, 0,
	0, 1720, 0, 0, 0, 0, 0, 1698, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1362, 0, 0,
	0, 0, 0, 1362, 0, 1362, 0, 0, 0, 1242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1704, 1705,
	1706, 1707, 0, 0, 0, 0, 0, 0, 1687, 0,
	0, 0, 1241, 0, 0, 0, 1718, 0, 0, 0,
	0, 1693, 1694, 1700, 1721, 1699, 1695, 0, 1692, 1690,
	1691, 1683, 1684, 1685, 1686, 1688, 1689, 1362, 1362, 0,
	0, 0, 0, 1719, 0, 2976, 1729, 0, 0, 0,
	0, 0, 1709, 1711, 0, 0, 0, 0, 0, 1362,
	0, 0, 0, 0, 0, 0, 0, 0, 1725, 0,
	1726, 0, 0, 0, 0, 0, 0, 1696, 1697, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1717, 1242, 0, 0, 1242,
	1679, 1680, 0, 1712, 1713, 1714, 1722, 1723, 1724, 1702,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1715, 1710, 0, 0, 0, 0, 0, 0,
	1682, 0, 0, 0, 0, 0, 0, 0, 1728, 0,
	0, 1361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1727, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1681, 0, 0, 0, 0, 1716,
	1242, 0, 0, 0, 1701, 0, 0, 0, 0, 0,
	0, 0, 0, 1698, 0, 0, 0, 1242, 0, 1361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1361, 1361, 1361, 1708, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1361, 0, 0, 0, 0, 0, 0, 1703, 0,
	0, 0, 0, 0, 1704, 1705, 1706, 1707, 0, 0,
	1241, 0, 0, 0, 1687, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1720, 0, 0, 0, 0, 0,
	0, 0, 1241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1719,
	0, 0, 1729, 0, 0, 0, 0, 0, 1709, 1711,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1725, 0, 1726, 0, 0, 0,
	0, 0, 0, 1696, 1697, 0, 0, 0, 0, 0,
	0, 1242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1702, 0, 0, 0, 1718,
	0, 0, 0, 0, 1693, 1694, 1700, 1721, 1699, 1695,
	0, 1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689,
	0, 0, 0, 0, 0, 0, 0, 0, 2975, 0,
	0, 0, 1241, 0, 1241, 0, 0, 1727, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1716, 0, 0, 1241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1241, 0, 0, 0, 1708, 0, 0, 0, 1241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1703, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1361, 1361, 1362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1720, 0, 0, 1361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1241, 0, 0, 0, 0, 1361,
	0, 0, 0, 0, 1362, 1362, 1362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1361, 1361, 1361, 1242,
	0, 0, 0, 0, 0, 0, 0, 1241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1718, 0, 1241, 0, 0,
	1693, 1694, 1700, 1721, 1699, 1695, 0, 1692, 1690, 1691,
	1683, 1684, 1685, 1686, 1688, 1689, 0, 0, 0, 0,
	0, 0, 0, 0, 2361, 0, 1679, 1680, 0, 1712,
	1713, 1714, 1722, 1723, 1724, 0, 0, 0, 1241, 0,
	1361, 0, 0, 0, 0, 0, 0, 0, 1715, 1710,
	0, 0, 0, 0, 1241, 0, 1682, 0, 0, 0,
	0, 0, 0, 0, 1728, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1681, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1701, 1242, 0, 1242, 0, 0, 0, 0, 0, 1698,
	1241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1361, 1361, 0, 0, 0, 0, 1242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1241,
	0, 0, 1361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1242,
	1704, 1705, 1706, 1707, 0, 0, 0, 1242, 0, 0,
	1687, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1362, 1362, 0, 0, 0,
	0, 0, 0, 0, 0, 1719, 0, 0, 1729, 0,
	0, 0, 1362, 0, 1709, 1711, 0, 0, 0, 0,
	0, 0, 0, 1242, 0, 0, 0, 0, 1362, 0,
	1725, 0, 1726, 0, 0, 0, 0, 0, 0, 1696,
	1697, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1717, 0, 0,
	0, 0, 0, 0, 0, 1362, 1362, 1362, 0, 0,
	0, 1702, 0, 0, 0, 0, 1242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1242, 0, 1361, 0,
	0, 0, 0, 1727, 0, 0, 0, 0, 1361, 1361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1716, 0, 0, 0, 1361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1242, 0, 1362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1708, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1703, 0, 0, 0, 0, 0, 0, 0, 0, 1242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1362, 1362, 0, 0, 0, 0, 1720, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1242, 0,
	0, 1362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1718, 0, 0, 0, 0, 1693, 1694, 1700, 1721,
	1699, 1695, 0, 1692, 1690, 1691, 1683, 1684, 1685, 1686,
	1688, 1689, 0, 0, 0, 0, 4211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1239, 0, 0, 1362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1362, 1362, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 1245, 262,
	263, 1246, 1247, 1248, 1362, 1249, 580, 1250, 1251, 1252,
	1253, 264, 265, 1111, 266, 267, 268, 269, 270, 581,
	582, 0, 271, 583, 272, 584, 1254, 585, 273, 274,
	275, 276, 277, 278, 1255, 1256, 0, 279, 586, 587,
	588, 1257, 280, 281, 589, 1258, 1325, 1259, 282, 283,
	284, 285, 286, 287, 288, 0, 1260, 290, 291, 292,
	289, 293, 1261, 294, 0, 295, 296, 297, 298, 299,
	300, 1262, 301, 302, 303, 1112, 304, 305, 1263, 1264,
	1266, 1265, 1267, 1268, 1269, 306, 307, 308, 309, 0,
	310, 590, 591, 1270, 314, 311, 312, 1271, 315, 313,
	1272, 316, 317, 318, 1273, 1274, 319, 320, 321, 1275,
	322, 323, 1276, 324, 325, 326, 1277, 327, 328, 592,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	593, 594, 1278, 252, 1279, 0, 0, 0, 0, 340,
	341, 342, 595, 0, 0, 0, 343, 1280, 344, 1281,
	1282, 1113, 345, 346, 596, 597, 347, 348, 349, 350,
	351, 352, 353, 354, 1283, 355, 598, 1284, 599, 356,
	1285, 357, 358, 359, 360, 361, 600, 601, 602, 436,
	1115, 362, 363, 1286, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 1287, 1114, 370, 603, 604,
	1288, 605, 1289, 372, 373, 1116, 606, 1117, 374, 375,
	376, 1118, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 1290, 384, 386, 385, 1291, 387, 607, 1119,
	388, 389, 1120, 1292, 390, 0, 0, 0, 391, 392,
	1293, 1294, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 1121, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 1122, 423, 1295, 254, 1123, 433,
	434, 1296, 608, 435, 609, 437, 438, 1297, 0, 439,
	0, 1298, 1299, 441, 442, 443, 1300, 1301, 444, 445,
	610, 1124, 446, 1125, 611, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 1302, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 614, 465, 615,
	466, 467, 1303, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 616, 476, 478, 477, 479, 1304, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 1305, 490, 491, 492, 1126, 493,
	494, 495, 496, 617, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 1306, 513, 514,
	512, 515, 516, 517, 1307, 518, 519, 502, 503, 520,
	521, 1127, 522, 523, 524, 525, 526, 527, 618, 0,
	528, 1308, 529, 530, 531, 532, 504, 533, 538, 619,
	534, 535, 536, 537, 620, 1309, 540, 541, 0, 539,
	1310, 542, 543, 544, 545, 546, 547, 334, 548, 1311,
	549, 621, 622, 623, 624, 1312, 558, 1313, 550, 551,
	552, 625, 553, 626, 1314, 554, 555, 556, 557, 0,
	559, 560, 1315, 1316, 561, 562, 563, 565, 566, 564,
	567, 1317, 568, 1318, 0, 569, 570, 571, 627, 628,
	629, 1319, 573, 572, 574, 630, 1320, 1321, 1322, 1323,
	575, 576, 631, 577, 578, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1239, 0, 0, 0, 0, 0, 0, 0, 2525, 0,
	0, 0, 0, 0, 0, 0, 2526, 255, 257, 256,
	258, 259, 260, 261, 1245, 262, 263, 1246, 1247, 1248,
	0, 1249, 580, 1250, 1251, 1252, 1253, 264, 265, 1111,
	266, 267, 268, 269, 270, 581, 582, 0, 271, 583,
	272, 584, 1254, 585, 273, 274, 275, 276, 277, 278,
	1255, 1256, 0, 279, 586, 587, 588, 1257, 280, 281,
	589, 1258, 1325, 1259, 282, 283, 284, 285, 286, 287,
	288, 0, 1260, 290, 291, 292, 289, 293, 1261, 294,
	0, 295, 296, 297, 298, 299, 300, 1262, 301, 302,
	303, 1112, 304, 305, 1263, 1264, 1266, 1265, 1267, 1268,
	1269, 306, 307, 308, 309, 0, 310, 590, 591, 1270,
	314, 311, 312, 1271, 315, 313, 1272, 316, 317, 318,
	1273, 1274, 319, 320, 321, 1275, 322, 323, 1276, 324,
	325, 326, 1277, 327, 328, 592, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 593, 594, 1278, 252,
	1279, 0, 0, 0, 0, 340, 341, 342, 595, 0,
	0, 0, 343, 1280, 344, 1281, 1282, 1113, 345, 346,
	596, 597, 347, 348, 349, 350, 351, 352, 353, 354,
	1283, 355, 598, 1284, 599, 356, 1285, 357, 358, 359,
	360, 361, 600, 601, 602, 436, 1115, 362, 363, 1286,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 1287, 1114, 370, 603, 604, 1288, 605, 1289, 372,
	373, 1116, 606, 1117, 374, 375, 376, 1118, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 1290, 384,
	386, 385, 1291, 387, 607, 1119, 388, 389, 1120, 1292,
	390, 0, 0, 0, 391, 392, 1293, 1294, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 1121, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	1122, 423, 1295, 254, 1123, 433, 434, 1296, 608, 435,
	609, 437, 438, 1297, 0, 439, 0, 1298, 1299, 441,
	442, 443, 1300, 1301, 444, 445, 610, 1124, 446, 1125,
	611, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 1302, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 614, 465, 615, 466, 467, 1303, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 616, 476,
	478, 477, 479, 1304, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	1305, 490, 491, 492, 1126, 493, 494, 495, 496, 617,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 1306, 513, 514, 512, 515, 516, 517,
	1307, 518, 519, 502, 503, 520, 521, 1127, 522, 523,
	524, 525, 526, 527, 618, 0, 528, 1308, 529, 530,
	531, 532, 504, 533, 538, 619, 534, 535, 536, 537,
	620, 1309, 540, 541, 0, 539, 1310, 542, 543, 544,
	545, 546, 547, 334, 548, 1311, 549, 621, 622, 623,
	624, 1312, 558, 1313, 550, 551, 552, 625, 553, 626,
	1314, 554, 555, 556, 557, 0, 559, 560, 1315, 1316,
	561, 562, 563, 565, 566, 564, 567, 1317, 568, 1318,
	0, 569, 570, 571, 627, 628, 629, 1319, 573, 572,
	574, 630, 1320, 1321, 1322, 1323, 575, 576, 631, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1239, 0, 0, 0, 0, 3413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3415, 255, 257, 256, 258, 259, 260, 261, 1245, 262,
	263, 1246, 1247, 1248, 0, 1249, 580, 1250, 1251, 1252,
	1253, 264, 265, 1111, 266, 267, 268, 269, 270, 581,
	582, 0, 271, 583, 272, 584, 1254, 585, 273, 274,
	275, 276, 277, 278, 1255, 1256, 0, 279, 586, 587,
	588, 1257, 280, 281, 589, 1258, 1325, 1259, 282, 283,
	284, 285, 286, 287, 288, 0, 1260, 290, 291, 292,
	289, 293, 1261, 294, 0, 295, 296, 297, 298, 299,
	300, 1262, 301, 302, 303, 1112, 304, 305, 1263, 1264,
	1266, 1265, 1267, 1268, 1269, 306, 307, 308, 309, 0,
	310, 590, 591, 1270, 314, 311, 312, 1271, 315, 313,
	1272, 316, 317, 318, 1273, 1274, 319, 320, 321, 1275,
	322, 323, 1276, 324, 325, 326, 1277, 327, 328, 592,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	593, 594, 1278, 252, 1279, 0, 0, 0, 0, 340,
	341, 342, 595, 0, 0, 0, 343, 1280, 344, 1281,
	1282, 1113, 345, 346, 596, 597, 347, 348, 349, 350,
	351, 352, 353, 354, 1283, 355, 598, 1284, 599, 356,
	1285, 357, 358, 359, 360, 361, 600, 601, 602, 436,
	1115, 362, 363, 1286, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 1287, 1114, 370, 603, 604,
	1288, 605, 1289, 372, 373, 1116, 606, 1117, 374, 375,
	376, 1118, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 1290, 384, 386, 385, 1291, 387, 607, 1119,
	388, 389, 1120, 1292, 390, 0, 0, 0, 391, 392,
	1293, 1294, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 1121, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 1122, 423, 1295, 254, 1123, 433,
	434, 1296, 608, 435, 609, 437, 438, 1297, 0, 439,
	0, 1298, 1299, 441, 442, 443, 1300, 1301, 444, 445,
	610, 1124, 446, 1125, 611, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 1302, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 614, 465, 615,
	466, 467, 1303, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 616, 476, 478, 477, 479, 1304, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 1305, 490, 491, 492, 1126, 493,
	494, 495, 496, 617, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 1306, 513, 514,
	512, 515, 516, 517, 1307, 518, 519, 502, 503, 520,
	521, 1127, 522, 523, 524, 525, 526, 527, 618, 0,
	528, 1308, 529, 530, 531, 532, 504, 533, 538, 619,
	534, 535, 536, 537, 620, 1309, 540, 541, 0, 539,
	1310, 542, 543, 544, 545, 546, 547, 334, 548, 1311,
	549, 621, 622, 623, 624, 1312, 558, 1313, 550, 551,
	552, 625, 553, 626, 1314, 554, 555, 556, 557, 0,
	559, 560, 1315, 1316, 561, 562, 563, 565, 566, 564,
	567, 1317, 568, 1318, 0, 569, 570, 571, 627, 628,
	629, 1319, 573, 572, 574, 630, 1320, 1321, 1322, 1323,
	575, 576, 631, 577, 578, 579, 0, 0, 0, 0,
	0, 0, 1239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3769, 255,
	257, 256, 258, 259, 260, 261, 1245, 262, 263, 1246,
	1247, 1248, 0, 1249, 580, 1250, 1251, 1252, 1253, 264,
	265, 1111, 266, 267, 268, 269, 270, 581, 582, 0,
	271, 583, 272, 584, 1254, 585, 273, 274, 275, 276,
	277, 278, 1255, 1256, 0, 279, 586, 587, 588, 1257,
	280, 281, 589, 1258, 1325, 1259, 282, 283, 284, 285,
	286, 287, 288, 0, 1260, 290, 291, 292, 289, 293,
	1261, 294, 0, 295, 296, 297, 298, 299, 300, 1262,
	301, 302, 303, 1112, 304, 305, 1263, 1264, 1266, 1265,
	1267, 1268, 1269, 306, 307, 308, 309, 0, 310, 590,
	591, 1270, 314, 311, 312, 1271, 315, 313, 1272, 316,
	317, 318, 1273, 1274, 319, 320, 321, 1275, 322, 323,
	1276, 324, 325, 326, 1277, 327, 328, 592, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 593, 594,
	1278, 252, 1279, 0, 0, 0, 0, 340, 341, 342,
	595, 0, 0, 0, 343, 1280, 344, 1281, 1282, 1113,
	345, 346, 596, 597, 347, 348, 349, 350, 351, 352,
	353, 354, 1283, 355, 598, 1284, 599, 356, 1285, 357,
	358, 359, 360, 361, 600, 601, 602, 436, 1115, 362,
	363, 1286, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 371, 1287, 1114, 370, 603, 604, 1288, 605,
	1289, 372, 373, 1116, 606, 1117, 374, 375, 376, 1118,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	1290, 384, 386, 385, 1291, 387, 607, 1119, 388, 389,
	1120, 1292, 390, 0, 0, 0, 391, 392, 1293, 1294,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 1121,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 1122, 423, 1295, 254, 1123, 433, 434, 1296,
	608, 435, 609, 437, 438, 1297, 0, 439, 0, 1298,
	1299, 441, 442, 443, 1300, 1301, 444, 445, 610, 1124,
	446, 1125, 611, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 1302, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 614, 465, 615, 466, 467,
	1303, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	616, 476, 478, 477, 479, 1304, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 1305, 490, 491, 492, 1126, 493, 494, 495,
	496, 617, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 1306, 513, 514, 512, 515,
	516, 517, 1307, 518, 519, 502, 503, 520, 521, 1127,
	522, 523, 524, 525, 526, 527, 618, 0, 528, 1308,
	529, 530, 531, 532, 504, 533, 538, 619, 534, 535,
	536, 537, 620, 1309, 540, 541, 0, 539, 1310, 542,
	543, 544, 545, 546, 547, 334, 548, 1311, 549, 621,
	622, 623, 624, 1312, 558, 1313, 550, 551, 552, 625,
	553, 626, 1314, 554, 555, 556, 557, 0, 559, 560,
	1315, 1316, 561, 562, 563, 565, 566, 564, 567, 1317,
	568, 1318, 0, 569, 570, 571, 627, 628, 629, 1319,
	573, 572, 574, 630, 1320, 1321, 1322, 1323, 575, 576,
	631, 577, 578, 579, 0, 1239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3944, 255, 257, 256, 258, 259, 260, 261, 1245,
	262, 263, 1246, 1247, 1248, 0, 1249, 580, 1250, 1251,
	1252, 1253, 264, 265, 1111, 266, 267, 268, 269, 270,
	581, 582, 0, 271, 583, 272, 584, 1254, 585, 273,
	274, 275, 276, 277, 278, 1255, 1256, 0, 279, 586,
	587, 588, 1257, 280, 281, 589, 1258, 1325, 1259, 282,
	283, 284, 285, 286, 287, 288, 0, 1260, 290, 291,
	292, 289, 293, 1261, 294, 0, 295, 296, 297, 298,
	299, 300, 1262, 301, 302, 303, 1112, 304, 305, 1263,
	1264, 1266, 1265, 1267, 1268, 1269, 306, 307, 308, 309,
	0, 310, 590, 591, 1270, 314, 311, 312, 1271, 315,
	313, 1272, 316, 317, 318, 1273, 1274, 319, 320, 321,
	1275, 322, 323, 1276, 324, 325, 326, 1277, 327, 328,
	592, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 593, 594, 1278, 252, 1279, 0, 0, 0, 0,
	340, 341, 342, 595, 0, 0, 0, 343, 1280, 344,
	1281, 1282, 1113, 345, 346, 596, 597, 347, 348, 349,
	350, 351, 352, 353, 354, 1283, 355, 598, 1284, 599,
	356, 1285, 357, 358, 359, 360, 361, 600, 601, 602,
	436, 1115, 362, 363, 1286, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 371, 1287, 1114, 370, 603,
	604, 1288, 605, 1289, 372, 373, 1116, 606, 1117, 374,
	375, 376, 1118, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 1290, 384, 386, 385, 1291, 387, 607,
	1119, 388, 389, 1120, 1292, 390, 0, 0, 0, 391,
	392, 1293, 1294, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 1121, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 1122, 423, 1295, 254, 1123,
	433, 434, 1296, 608, 435, 609, 437, 438, 1297, 0,
	439, 0, 1298, 1299, 441, 442, 443, 1300, 1301, 444,
	445, 610, 1124, 446, 1125, 611, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 1302, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 614, 465,
	615, 466, 467, 1303, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 616, 476, 478, 477, 479, 1304, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 1305, 490, 491, 492, 1126,
	493, 494, 495, 496, 617, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 1306, 513,
	514, 512, 515, 516, 517, 1307, 518, 519, 502, 503,
	520, 521, 1127, 522, 523, 524, 525, 526, 527, 618,
	0, 528, 1308, 529, 530, 531, 532, 504, 533, 538,
	619, 534, 535, 536, 537, 620, 1309, 540, 541, 0,
	539, 1310, 542, 543, 544, 545, 546, 547, 334, 548,
	1311, 549, 621, 622, 623, 624, 1312, 558, 1313, 550,
	551, 552, 625, 553, 626, 1314, 554, 555, 556, 557,
	0, 559, 560, 1315, 1316, 561, 562, 563, 565, 566,
	564, 567, 1317, 568, 1318, 0, 569, 570, 571, 627,
	628, 629, 1319, 573, 572, 574, 630, 1320, 1321, 1322,
	1323, 575, 576, 631, 577, 578, 579, 0, 1239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3833, 255, 257, 256, 258, 259,
	260, 261, 1245, 262, 263, 1246, 1247, 1248, 0, 1249,
	580, 1250, 1251, 1252, 1253, 264, 265, 1111, 266, 267,
	268, 269, 270, 581, 582, 0, 271, 583, 272, 584,
	1254, 585, 273, 274, 275, 276, 277, 278, 1255, 1256,
	0, 279, 586, 587, 588, 1257, 280, 281, 589, 1258,
	1325, 1259, 282, 283, 284, 285, 286, 287, 288, 0,
	1260, 290, 291, 292, 289, 293, 1261, 294, 0, 295,
	296, 297, 298, 299, 300, 1262, 301, 302, 303, 1112,
	304, 305, 1263, 1264, 1266, 1265, 1267, 1268, 1269, 306,
	307, 308, 309, 0, 310, 590, 591, 1270, 314, 311,
	312, 1271, 315, 313, 1272, 316, 317, 318, 1273, 1274,
	319, 320, 321, 1275, 322, 323, 1276, 324, 325, 326,
	1277, 327, 328, 592, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 593, 594, 1278, 252, 1279, 0,
	0, 0, 0, 340, 341, 342, 595, 0, 0, 0,
	343, 1280, 344, 1281, 1282, 1113, 345, 346, 596, 597,
	347, 348, 349, 350, 351, 352, 353, 354, 1283, 355,
	598, 1284, 599, 356, 1285, 357, 358, 359, 360, 361,
	600, 601, 602, 436, 1115, 362, 363, 1286, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 1287,
	1114, 370, 603, 604, 1288, 605, 1289, 372, 373, 1116,
	606, 1117, 374, 375, 376, 1118, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 1290, 384, 386, 385,
	1291, 387, 607, 1119, 388, 389, 1120, 1292, 390, 0,
	0, 0, 391, 392, 1293, 1294, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 1121, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 1122, 423,
	1295, 254, 1123, 433, 434, 1296, 608, 435, 609, 437,
	438, 1297, 0, 439, 0, 1298, 1299, 441, 442, 443,
	1300, 1301, 444, 445, 610, 1124, 446, 1125, 611, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	1302, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 614, 465, 615, 466, 467, 1303, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 616, 476, 478, 477,
	479, 1304, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 1305, 490,
	491, 492, 1126, 493, 494, 495, 496, 617, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 1306, 513, 514, 512, 515, 516, 517, 1307, 518,
	519, 502, 503, 520, 521, 1127, 522, 523, 524, 525,
	526, 527, 618, 0, 528, 1308, 529, 530, 531, 532,
	504, 533, 538, 619, 534, 535, 536, 537, 620, 1309,
	540, 541, 0, 539, 1310, 542, 543, 544, 545, 546,
	547, 334, 548, 1311, 549, 621, 622, 623, 624, 1312,
	558, 1313, 550, 551, 552, 625, 553, 626, 1314, 554,
	555, 556, 557, 0, 559, 560, 1315, 1316, 561, 562,
	563, 565, 566, 564, 567, 1317, 568, 1318, 0, 569,
	570, 571, 627, 628, 629, 1319, 573, 572, 574, 630,
	1320, 1321, 1322, 1323, 575, 576, 631, 577, 578, 579,
	0, 1239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3699, 255, 257,
	256, 258, 259, 260, 261, 1245, 262, 263, 1246, 1247,
	1248, 0, 1249, 580, 1250, 1251, 1252, 1253, 264, 265,
	1111, 266, 267, 268, 269, 270, 581, 582, 0, 271,
	583, 272, 584, 1254, 585, 273, 274, 275, 276, 277,
	278, 1255, 1256, 0, 279, 586, 587, 588, 1257, 280,
	281, 589, 1258, 1325, 1259, 282, 283, 284, 285, 286,
	287, 288, 0, 1260, 290, 291, 292, 289, 293, 1261,
	294, 0, 295, 296, 297, 298, 299, 300, 1262, 301,
	302, 303, 1112, 304, 305, 1263, 1264, 1266, 1265, 1267,
	1268, 1269, 306, 307, 308, 309, 0, 310, 590, 591,
	1270, 314, 311, 312, 1271, 315, 313, 1272, 316, 317,
	318, 1273, 1274, 319, 320, 321, 1275, 322, 323, 1276,
	324, 325, 326, 1277, 327, 328, 592, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 593, 594, 1278,
	252, 1279, 0, 0, 0, 0, 340, 341, 342, 595,
	0, 0, 0, 343, 1280, 344, 1281, 1282, 1113, 345,
	346, 596, 597, 347, 348, 349, 350, 351, 352, 353,
	354, 1283, 355, 598, 1284, 599, 356, 1285, 357, 358,
	359, 360, 361, 600, 601, 602, 436, 1115, 362, 363,
	1286, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 371, 1287, 1114, 370, 603, 604, 1288, 605, 1289,
	372, 373, 1116, 606, 1117, 374, 375, 376, 1118, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 1290,
	384, 386, 385, 1291, 387, 607, 1119, 388, 389, 1120,
	1292, 390, 0, 0, 0, 391, 392, 1293, 1294, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 1121, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 1122, 423, 1295, 254, 1123, 433, 434, 1296, 608,
	435, 609, 437, 438, 1297, 0, 439, 0, 1298, 1299,
	441, 442, 443, 1300, 1301, 444, 445, 610, 1124, 446,
	1125, 611, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 1302, 457, 458, 612, 459, 460, 461,
	613, 462, 463, 464, 614, 465, 615, 466, 467, 1303,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 616,
	476, 478, 477, 479, 1304, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 1305, 490, 491, 492, 1126, 493, 494, 495, 496,
	617, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 1306, 513, 514, 512, 515, 516,
	517, 1307, 518, 519, 502, 503, 520, 521, 1127, 522,
	523, 524, 525, 526, 527, 618, 0, 528, 1308, 529,
	530, 531, 532, 504, 533, 538, 619, 534, 535, 536,
	537, 620, 1309, 540, 541, 0, 539, 1310, 542, 543,
	544, 545, 546, 547, 334, 548, 1311, 549, 621, 622,
	623, 624, 1312, 558, 1313, 550, 551, 552, 625, 553,
	626, 1314, 554, 555, 556, 557, 0, 559, 560, 1315,
	1316, 561, 562, 563, 565, 566, 564, 567, 1317, 568,
	1318, 0, 569, 570, 571, 627, 628, 629, 1319, 573,
	572, 574, 630, 1320, 1321, 1322, 1323, 575, 576, 631,
	577, 578, 579, 0, 1239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3431, 255, 257, 256, 258, 259, 260, 261, 1245, 262,
	263, 1246, 1247, 1248, 0, 1249, 580, 1250, 1251, 1252,
	1253, 264, 265, 1111, 266, 267, 268, 269, 270, 581,
	582, 0, 271, 583, 272, 584, 1254, 585, 273, 274,
	275, 276, 277, 278, 1255, 1256, 0, 279, 586, 587,
	588, 1257, 280, 281, 589, 1258, 1325, 1259, 282, 283,
	284, 285, 286, 287, 288, 0, 1260, 290, 291, 292,
	289, 293, 1261, 294, 0, 295, 296, 297, 298, 299,
	300, 1262, 301, 302, 303, 1112, 304, 305, 1263, 1264,
	1266, 1265, 1267, 1268, 1269, 306, 307, 308, 309, 0,
	310, 590, 591, 1270, 314, 311, 312, 1271, 315, 313,
	1272, 316, 317, 318, 1273, 1274, 319, 320, 321, 1275,
	322, 323, 1276, 324, 325, 326, 1277, 327, 328, 592,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	593, 594, 1278, 252, 1279, 0, 0, 0, 0, 340,
	341, 342, 595, 0, 0, 0, 343, 1280, 344, 1281,
	1282, 1113, 345, 346, 596, 597, 347, 348, 349, 350,
	351, 352, 353, 354, 1283, 355, 598, 1284, 599, 356,
	1285, 357, 358, 359, 360, 361, 600, 601, 602, 436,
	1115, 362, 363, 1286, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 1287, 1114, 370, 603, 604,
	1288, 605, 1289, 372, 373, 1116, 606, 1117, 374, 375,
	376, 1118, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 1290, 384, 386, 385, 1291, 387, 607, 1119,
	388, 389, 1120, 1292, 390, 0, 0, 0, 391, 392,
	1293, 1294, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 1121, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 1122, 423, 1295, 254, 1123, 433,
	434, 1296, 608, 435, 609, 437, 438, 1297, 0, 439,
	0, 1298, 1299, 441, 442, 443, 1300, 1301, 444, 445,
	610, 1124, 446, 1125, 611, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 1302, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 614, 465, 615,
	466, 467, 1303, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 616, 476, 478, 477, 479, 1304, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 1305, 490, 491, 492, 1126, 493,
	494, 495, 496, 617, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 1306, 513, 514,
	512, 515, 516, 517, 1307, 518, 519, 502, 503, 520,
	521, 1127, 522, 523, 524, 525, 526, 527, 618, 0,
	528, 1308, 529, 530, 531, 532, 504, 533, 538, 619,
	534, 535, 536, 537, 620, 1309, 540, 541, 0, 539,
	1310, 542, 543, 544, 545, 546, 547, 334, 548, 1311,
	549, 621, 622, 623, 624, 1312, 558, 1313, 550, 551,
	552, 625, 553, 626, 1314, 554, 555, 556, 557, 0,
	559, 560, 1315, 1316, 561, 562, 563, 565, 566, 564,
	567, 1317, 568, 1318, 0, 569, 570, 571, 627, 628,
	629, 1319, 573, 572, 574, 630, 1320, 1321, 1322, 1323,
	575, 576, 631, 577, 578, 579, 0, 1239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3258, 255, 257, 256, 258, 259, 260,
	261, 1245, 262, 263, 1246, 1247, 1248, 0, 1249, 580,
	1250, 1251, 1252, 1253, 264, 265, 1111, 266, 267, 268,
	269, 270, 581, 582, 0, 271, 583, 272, 584, 1254,
	585, 273, 274, 275, 276, 277, 278, 1255, 1256, 0,
	279, 586, 587, 588, 1257, 280, 281, 589, 1258, 1325,
	1259, 282, 283, 284, 285, 286, 287, 288, 0, 1260,
	290, 291, 292, 289, 293, 1261, 294, 0, 295, 296,
	297, 298, 299, 300, 1262, 301, 302, 303, 1112, 304,
	305, 1263, 1264, 1266, 1265, 1267, 1268, 1269, 306, 307,
	308, 309, 0, 310, 590, 591, 1270, 314, 311, 312,
	1271, 315, 313, 1272, 316, 317, 318, 1273, 1274, 319,
	320, 321, 1275, 322, 323, 1276, 324, 325, 326, 1277,
	327, 328, 592, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 593, 594, 1278, 252, 1279, 0, 0,
	0, 0, 340, 341, 342, 595, 0, 0, 0, 343,
	1280, 344, 1281, 1282, 1113, 345, 346, 596, 597, 347,
	348, 349, 350, 351, 352, 353, 354, 1283, 355, 598,
	1284, 599, 356, 1285, 357, 358, 359, 360, 361, 600,
	601, 602, 436, 1115, 362, 363, 1286, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 371, 1287, 1114,
	370, 603, 604, 1288, 605, 1289, 372, 373, 1116, 606,
	1117, 374, 375, 376, 1118, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 1290, 384, 386, 385, 1291,
	387, 607, 1119, 388, 389, 1120, 1292, 390, 0, 0,
	0, 391, 392, 1293, 1294, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 1121, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 1122, 423, 1295,
	254, 1123, 433, 434, 1296, 608, 435, 609, 437, 438,
	1297, 0, 439, 0, 1298, 1299, 441, 442, 443, 1300,
	1301, 444, 445, 610, 1124, 446, 1125, 611, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 1302,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	614, 465, 615, 466, 467, 1303, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 616, 476, 478, 477, 479,
	1304, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 1305, 490, 491,
	492, 1126, 493, 494, 495, 496, 617, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	1306, 513, 514, 512, 515, 516, 517, 1307, 518, 519,
	502, 503, 520, 521, 1127, 522, 523, 524, 525, 526,
	527, 618, 0, 528, 1308, 529, 530, 531, 532, 504,
	533, 538, 619, 534, 535, 536, 537, 620, 1309, 540,
	541, 0, 539, 1310, 542, 543, 544, 545, 546, 547,
	334, 548, 1311, 549, 621, 622, 623, 624, 1312, 558,
	1313, 550, 551, 552, 625, 553, 626, 1314, 554, 555,
	556, 557, 0, 559, 560, 1315, 1316, 561, 562, 563,
	565, 566, 564, 567, 1317, 568, 1318, 0, 569, 570,
	571, 627, 628, 629, 1319, 573, 572, 574, 630, 1320,
	1321, 1322, 1323, 575, 576, 631, 577, 578, 579, 0,
	1239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2384, 255, 257, 256,
	258, 259, 260, 261, 1245, 262, 263, 1246, 1247, 1248,
	0, 1249, 580, 1250, 1251, 1252, 1253, 264, 265, 1111,
	266, 267, 268, 269, 270, 581, 582, 0, 271, 583,
	272, 584, 1254, 585, 273, 274, 275, 276, 277, 278,
	1255, 1256, 0, 279, 586, 587, 588, 1257, 280, 281,
	589, 1258, 1325, 1259, 282, 283, 284, 285, 286, 287,
	288, 0, 1260, 290, 291, 292, 289, 293, 1261, 294,
	0, 295, 296, 297, 298, 299, 300, 1262, 301, 302,
	303, 1112, 304, 305, 1263, 1264, 1266, 1265, 1267, 1268,
	1269, 306, 307, 308, 309, 0, 310, 590, 591, 1270,
	314, 311, 312, 1271, 315, 313, 1272, 316, 317, 318,
	1273, 1274, 319, 320, 321, 1275, 322, 323, 1276, 324,
	325, 326, 1277, 327, 328, 592, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 593, 594, 1278, 252,
	1279, 0, 0, 0, 0, 340, 341, 342, 595, 0,
	0, 0, 343, 1280, 344, 1281, 1282, 1113, 345, 346,
	596, 597, 347, 348, 349, 350, 351, 352, 353, 354,
	1283, 355, 598, 1284, 599, 356, 1285, 357, 358, 359,
	360, 361, 600, 601, 602, 436, 1115, 362, 363, 1286,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 1287, 1114, 370, 603, 604, 1288, 605, 1289, 372,
	373, 1116, 606, 1117, 374, 375, 376, 1118, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 1290, 384,
	386, 385, 1291, 387, 607, 1119, 388, 389, 1120, 1292,
	390, 0, 0, 0, 391, 392, 1293, 1294, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 1121, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	1122, 423, 1295, 254, 1123, 433, 434, 1296, 608, 435,
	609, 437, 438, 1297, 0, 439, 0, 1298, 1299, 441,
	442, 443, 1300, 1301, 444, 445, 610, 1124, 446, 1125,
	611, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 1302, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 614, 465, 615, 466, 467, 1303, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 616, 476,
	478, 477, 479, 1304, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	1305, 490, 491, 492, 1126, 493, 494, 495, 496, 617,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 1306, 513, 514, 512, 515, 516, 517,
	1307, 518, 519, 502, 503, 520, 521, 1127, 522, 523,
	524, 525, 526, 527, 618, 0, 528, 1308, 529, 530,
	531, 532, 504, 533, 538, 619, 534, 535, 536, 537,
	620, 1309, 540, 541, 0, 539, 1310, 542, 543, 544,
	545, 546, 547, 334, 548, 1311, 549, 621, 622, 623,
	624, 1312, 558, 1313, 550, 551, 552, 625, 553, 626,
	1314, 554, 555, 556, 557, 0, 559, 560, 1315, 1316,
	561, 562, 563, 565, 566, 564, 567, 1317, 568, 1318,
	0, 569, 570, 571, 627, 628, 629, 1319, 573, 572,
	574, 630, 1320, 1321, 1322, 1323, 575, 576, 631, 577,
	578, 579, 1337, 0, 1239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2055,
	0, 255, 257, 256, 258, 259, 260, 261, 1245, 262,
	263, 1246, 1247, 1248, 0, 1249, 580, 1250, 1251, 1252,
	1253, 264, 265, 1111, 266, 267, 268, 269, 270, 581,
	582, 0, 271, 583, 272, 584, 1254, 585, 273, 274,
	275, 276, 277, 278, 1255, 1256, 0, 279, 586, 587,
	588, 1257, 280, 281, 589, 1258, 1325, 1259, 282, 283,
	284, 285, 286, 287, 288, 0, 1260, 290, 291, 292,
	289, 293, 1261, 294, 0, 295, 296, 297, 298, 299,
	300, 1262, 301, 302, 303, 1112, 304, 305, 1263, 1264,
	1266, 1265, 1267, 1268, 1269, 306, 307, 308, 309, 0,
	310, 590, 591, 1270, 314, 311, 312, 1271, 315, 313,
	1272, 316, 317, 318, 1273, 1274, 319, 320, 321, 1275,
	322, 323, 1276, 324, 325, 326, 1277, 327, 328, 592,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	593, 594, 1278, 252, 1279, 0, 0, 0, 0, 340,
	341, 342, 595, 0, 0, 0, 343, 1280, 344, 1281,
	1282, 1113, 345, 346, 596, 597, 347, 348, 349, 350,
	351, 352, 353, 354, 1283, 355, 598, 1284, 599, 356,
	1285, 357, 358, 359, 360, 361, 600, 601, 602, 436,
	1115, 362, 363, 1286, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 1287, 1114, 370, 603, 604,
	1288, 605, 1289, 372, 373, 1116, 606, 1117, 374, 375,
	376, 1118, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 1290, 384, 386, 385, 1291, 387, 607, 1119,
	388, 389, 1120, 1292, 390, 0, 0, 0, 391, 392,
	1293, 1294, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 1121, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 1122, 423, 1295, 254, 1123, 433,
	434, 1296, 608, 435, 609, 437, 438, 1297, 0, 439,
	0, 1298, 1299, 441, 442, 443, 1300, 1301, 444, 445,
	610, 1124, 446, 1125, 611, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 1302, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 614, 465, 615,
	466, 467, 1303, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 616, 476, 478, 477, 479, 1304, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 1305, 490, 491, 492, 1126, 493,
	494, 495, 496, 617, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 1306, 513, 514,
	512, 515, 516, 517, 1307, 518, 519, 502, 503, 520,
	521, 1127, 522, 523, 524, 525, 526, 527, 618, 0,
	528, 1308, 529, 530, 531, 532, 504, 533, 538, 619,
	534, 535, 536, 537, 620, 1309, 540, 541, 0, 539,
	1310, 542, 543, 544, 545, 546, 547, 334, 548, 1311,
	549, 621, 622, 623, 624, 1312, 558, 1313, 550, 551,
	552, 625, 553, 626, 1314, 554, 555, 556, 557, 0,
	559, 560, 1315, 1316, 561, 562, 563, 565, 566, 564,
	567, 1317, 568, 1318, 0, 569, 570, 571, 627, 628,
	629, 1319, 573, 572, 574, 630, 1320, 1321, 1322, 1323,
	575, 576, 631, 577, 578, 579, 1236, 0, 1239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 1245, 262, 263, 1246, 1247, 1248, 0, 1249,
	580, 1250, 1251, 1252, 1253, 264, 265, 1111, 266, 267,
	268, 269, 270, 581, 582, 0, 271, 583, 272, 584,
	1254, 585, 273, 274, 275, 276, 277, 278, 1255, 1256,
	0, 279, 586, 587, 588, 1257, 280, 281, 589, 1258,
	1325, 1259, 282, 283, 284, 285, 286, 287, 288, 0,
	1260, 290, 291, 292, 289, 293, 1261, 294, 0, 295,
	296, 297, 298, 299, 300, 1262, 301, 302, 303, 1112,
	304, 305, 1263, 1264, 1266, 1265, 1267, 1268, 1269, 306,
	307, 308, 309, 0, 310, 590, 591, 1270, 314, 311,
	312, 1271, 315, 313, 1272, 316, 317, 318, 1273, 1274,
	319, 320, 321, 1275, 322, 323, 1276, 324, 325, 326,
	1277, 327, 328, 592, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 593, 594, 1278, 252, 1279, 0,
	0, 0, 0, 340, 341, 342, 595, 0, 0, 0,
	343, 1280, 344, 1281, 1282, 1113, 345, 346, 596, 597,
	347, 348, 349, 350, 351, 352, 353, 354, 1283, 355,
	598, 1284, 599, 356, 1285, 357, 358, 359, 360, 361,
	600, 601, 602, 436, 1115, 362, 363, 1286, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 1287,
	1114, 370, 603, 604, 1288, 605, 1289, 372, 373, 1116,
	606, 1117, 374, 375, 376, 1118, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 1290, 384, 386, 385,
	1291, 387, 607, 1119, 388, 389, 1120, 1292, 390, 0,
	0, 0, 391, 392, 1293, 1294, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 1121, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 1122, 423,
	1295, 254, 1123, 433, 434, 1296, 608, 435, 609, 437,
	438, 1297, 0, 439, 0, 1298, 1299, 441, 442, 443,
	1300, 1301, 444, 445, 610, 1124, 446, 1125, 611, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	1302, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 614, 465, 615, 466, 467, 1303, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 616, 476, 478, 477,
	479, 1304, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 1305, 490,
	491, 492, 1126, 493, 494, 495, 496, 617, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 1306, 513, 514, 512, 515, 516, 517, 1307, 518,
	519, 502, 503, 520, 521, 1127, 522, 523, 524, 525,
	526, 527, 618, 0, 528, 1308, 529, 530, 531, 532,
	504, 533, 538, 619, 534, 535, 536, 537, 620, 1309,
	540, 541, 0, 539, 1310, 542, 543, 544, 545, 546,
	547, 334, 548, 1311, 549, 621, 622, 623, 624, 1312,
	558, 1313, 550, 551, 552, 625, 553, 626, 1314, 554,
	555, 556, 557, 0, 559, 560, 1315, 1316, 561, 562,
	563, 565, 566, 564, 567, 1317, 568, 1318, 0, 569,
	570, 571, 627, 628, 629, 1319, 573, 572, 574, 630,
	1320, 1321, 1322, 1323, 575, 576, 631, 577, 578, 579,
	1239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 1245, 262, 263, 1246, 1247, 1248,
	0, 1249, 580, 1250, 1251, 1252, 1253, 264, 265, 1111,
	266, 267, 268, 269, 270, 581, 582, 0, 271, 583,
	272, 584, 1254, 585, 273, 274, 275, 276, 277, 278,
	1255, 1256, 0, 279, 586, 587, 588, 1257, 280, 281,
	589, 1258, 1325, 1259, 282, 283, 284, 285, 286, 287,
	288, 0, 1260, 290, 291, 292, 289, 293, 1261, 294,
	0, 295, 296, 297, 298, 299, 300, 1262, 301, 302,
	303, 1112, 304, 305, 1263, 1264, 1266, 1265, 1267, 1268,
	1269, 306, 307, 308, 309, 0, 310, 590, 591, 1270,
	314, 311, 312, 1271, 315, 313, 1272, 316, 317, 318,
	1273, 1274, 319, 320, 321, 1275, 322, 323, 1276, 324,
	325, 326, 1277, 327, 328, 592, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 593, 594, 1278, 252,
	1279, 0, 0, 0, 0, 340, 341, 342, 595, 0,
	0, 0, 343, 1280, 344, 1281, 1282, 1113, 345, 346,
	596, 597, 347, 348, 349, 350, 351, 352, 353, 354,
	1283, 355, 598, 1284, 599, 356, 1285, 357, 358, 359,
	360, 361, 600, 601, 602, 436, 1115, 362, 363, 1286,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 1287, 1114, 370, 603, 604, 1288, 605, 1289, 372,
	373, 1116, 606, 1117, 374, 375, 376, 1118, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 1290, 384,
	386, 385, 1291, 387, 607, 1119, 388, 389, 1120, 1292,
	390, 0, 0, 0, 391, 392, 1293, 1294, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 1121, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	1122, 423, 1295, 254, 1123, 433, 434, 1296, 608, 435,
	609, 437, 438, 1297, 0, 439, 0, 1298, 1299, 441,
	442, 443, 1300, 1301, 444, 445, 610, 1124, 446, 1125,
	611, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 1302, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 614, 465, 615, 466, 467, 1303, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 616, 476,
	478, 477, 479, 1304, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	1305, 490, 491, 492, 1126, 493, 494, 495, 496, 617,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 1306, 513, 514, 512, 515, 516, 517,
	1307, 518, 519, 502, 503, 520, 521, 1127, 522, 523,
	524, 525, 526, 527, 618, 0, 528, 1308, 529, 530,
	531, 532, 504, 533, 538, 619, 534, 535, 536, 537,
	620, 1309, 540, 541, 0, 539, 1310, 542, 543, 544,
	545, 546, 547, 334, 548, 1311, 549, 621, 622, 623,
	624, 1312, 558, 1313, 550, 551, 552, 625, 553, 626,
	1314, 554, 555, 556, 557, 0, 559, 560, 1315, 1316,
	561, 562, 563, 565, 566, 564, 567, 1317, 568, 1318,
	0, 569, 570, 571, 627, 628, 629, 1319, 573, 572,
	574, 630, 1320, 1321, 1322, 1323, 575, 576, 631, 577,
	578, 579, 2359, 0, 1047, 1019, 1020, 1021, 1017, 1018,
	1030, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 2356, 262,
	263, 0, 0, 0, 0, 0, 1071, 1035, 0, 0,
	0, 264, 265, 1111, 266, 267, 268, 269, 270, 581,
	1084, 0, 271, 1091, 272, 1090, 0, 1101, 273, 274,
	275, 276, 277, 278, 1037, 1070, 1004, 279, 1131, 1132,
	588, 0, 280, 281, 1077, 0, 1058, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1112, 304, 305, 1061, 1059,
	1060, 1067, 1063, 1062, 1066, 306, 307, 308, 309, 1094,
	310, 1088, 1087, 1008, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 2357, 0, 319, 1079, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 1014,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	1102, 1103, 1026, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 1086, 0, 0, 0, 343, 0, 344, 0,
	0, 1113, 345, 346, 1099, 1100, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 1109, 0, 1036, 356,
	0, 357, 358, 359, 360, 361, 1072, 1073, 1076, 436,
	1115, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 0, 1114, 370, 1081, 1082,
	0, 1042, 0, 372, 373, 1116, 1074, 1117, 374, 375,
	376, 1118, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 1110, 1119,
	388, 389, 1120, 0, 390, 0, 0, 0, 391, 392,
	1065, 1064, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 1121, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 1122, 423, 1005, 254, 1123, 433,
	434, 1027, 1075, 435, 1089, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 1124, 446, 1125, 1104, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 1105, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 1085, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 1126, 493,
	494, 495, 496, 1015, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 1068, 518, 519, 502, 503, 520,
	521, 1127, 522, 523, 524, 525, 526, 527, 1083, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 1130,
	534, 535, 536, 537, 1106, 0, 540, 541, 1003, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 1095, 1096, 1097, 1098, 0, 558, 0, 550, 551,
	552, 1107, 553, 1108, 1025, 554, 555, 556, 557, 0,
	559, 560, 0, 1009, 561, 562, 563, 565, 566, 564,
	567, 1069, 568, 0, 0, 569, 570, 571, 627, 1092,
	1129, 2355, 573, 572, 574, 630, 0, 0, 0, 0,
	575, 576, 631, 577, 578, 579, 1006, 0, 0, 0,
	0, 0, 0, 0, 1002, 0, 0, 0, 0, 0,
	0, 1000, 1001, 2358, 0, 0, 0, 0, 0, 0,
	1031, 2354, 0, 993, 1029, 1047, 1019, 1020, 1021, 1017,
	1018, 1030, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1071, 1035, 0,
	0, 0, 264, 265, 1111, 266, 267, 268, 269, 270,
	581, 1084, 0, 271, 1091, 272, 1090, 0, 1101, 273,
	274, 275, 276, 277, 278, 1037, 1070, 1004, 279, 1131,
	1132, 588, 0, 280, 281, 1077, 0, 1058, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1112, 304, 305, 1061,
	1059, 1060, 1067, 1063, 1062, 1066, 306, 307, 308, 309,
	1094, 310, 1088, 1087, 1008, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1079, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1014, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1102, 1103, 1026, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1086, 0, 0, 0, 343, 0, 344,
	0, 0, 1113, 345, 346, 1099, 1100, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1109, 0, 1036,
	356, 0, 357, 358, 359, 360, 361, 1072, 1073, 1076,
	436, 1115, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 371, 0, 1114, 370, 1081,
	1082, 0, 1042, 0, 372, 373, 1116, 1074, 1117, 374,
	375, 376, 1118, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 1110,
	1119, 388, 389, 1120, 0, 390, 0, 0, 0, 391,
	392, 1065, 1064, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 1121, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 1122, 423, 1005, 254, 1123,
	433, 434, 1027, 1075, 435, 1089, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 610, 1124, 446, 1125, 1104, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 1105, 465,
	615, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 1085, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 1126,
	493, 494, 495, 496, 1015, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 215, 513,
	514, 512, 515, 516, 517, 1068, 518, 519, 502, 503,
	520, 521, 1127, 522, 523, 524, 525, 526, 527, 1083,
	0, 528, 0, 529, 530, 531, 532, 504, 533, 538,
	1130, 534, 535, 536, 537, 1106, 0, 540, 541, 1003,
	539, 217, 542, 543, 544, 545, 546, 547, 334, 548,
	0, 549, 1095, 1096, 1097, 1098, 0, 558, 0, 550,
	551, 552, 1107, 553, 1108, 1025, 554, 555, 556, 557,
	0, 559, 560, 0, 1009, 561, 562, 563, 565, 566,
	564, 567, 1069, 568, 0, 0, 569, 570, 571, 1517,
	1092, 1129, 0, 573, 572, 574, 630, 0, 0, 0,
	209, 575, 576, 631, 577, 578, 579, 1006, 0, 210,
	0, 0, 0, 0, 0, 1002, 0, 0, 0, 0,
	0, 0, 1000, 1001, 1047, 1019, 1020, 1021, 1017, 1018,
	1030, 1754, 1752, 0, 0, 1029, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 1071, 1035, 0, 0,
	0, 264, 265, 1111, 266, 267, 268, 269, 270, 581,
	1084, 0, 271, 1091, 272, 1090, 0, 1101, 273, 274,
	275, 276, 277, 278, 1037, 1070, 1004, 279, 1131, 1132,
	588, 0, 280, 281, 1077, 0, 1058, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1112, 304, 305, 1061, 1059,
	1060, 1067, 1063, 1062, 1066, 306, 307, 308, 309, 1094,
	310, 1088, 1087, 1008, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 1079, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 1014,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	1102, 1103, 1026, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 1086, 0, 0, 0, 343, 0, 344, 0,
	0, 1113, 345, 346, 1099, 1100, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 1109, 0, 1036, 356,
	0, 357, 358, 359, 360, 361, 1072, 1073, 1076, 436,
	1115, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 0, 1114, 370, 1081, 1082,
	0, 1042, 0, 372, 373, 1116, 1074, 1117, 374, 375,
	376, 1118, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 1110, 1119,
	388, 389, 1120, 0, 390, 0, 0, 0, 391, 392,
	1065, 1064, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 1121, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 1122, 423, 1005, 254, 1123, 433,
	434, 1027, 1075, 435, 1089, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 1124, 446, 1125, 1104, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 1105, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 1085, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 1126, 493,
	494, 495, 496, 1015, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 215, 513, 514,
	512, 515, 516, 517, 1068, 518, 519, 502, 503, 520,
	521, 1127, 522, 523, 524, 525, 526, 527, 1083, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 1130,
	534, 535, 536, 537, 1106, 0, 540, 541, 1003, 539,
	217, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 1095, 1096, 1097, 1098, 0, 558, 0, 550, 551,
	552, 1107, 553, 1108, 1025, 554, 555, 556, 557, 0,
	559, 560, 0, 1009, 561, 562, 563, 565, 566, 564,
	567, 1069, 568, 0, 0, 569, 570, 571, 1517, 1092,
	1129, 0, 573, 572, 574, 630, 0, 0, 0, 209,
	575, 576, 631, 577, 578, 579, 1006, 0, 210, 0,
	0, 0, 0, 0, 1002, 0, 0, 0, 0, 0,
	0, 1000, 1001, 1047, 1019, 1020, 1021, 1017, 1018, 1030,
	1754, 2933, 0, 0, 1029, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1071, 1035, 0, 0, 0,
	264, 265, 1111, 266, 267, 268, 269, 270, 581, 1084,
	0, 271, 1091, 272, 1090, 0, 1101, 273, 274, 275,
	276, 277, 278, 1037, 1070, 1004, 279, 1131, 1132, 588,
	0, 280, 281, 1077, 0, 1058, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1112, 304, 305, 1061, 1059, 1060,
	1067, 1063, 1062, 1066, 306, 307, 308, 309, 1094, 310,
	1088, 1087, 1008, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1079, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1014, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1102,
	1103, 1026, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1086, 0, 0, 0, 343, 0, 344, 0, 0,
	1113, 345, 346, 1099, 1100, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1109, 0, 1036, 356, 0,
	357, 358, 359, 360, 361, 1072, 1073, 1076, 436, 1115,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 371, 0, 1114, 370, 1081, 1082, 0,
	1042, 0, 372, 373, 1116, 1074, 1117, 374, 375, 376,
	1118, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 1110, 1119, 388,
	389, 1120, 0, 390, 0, 0, 0, 391, 392, 1065,
	1064, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	1121, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 1122, 423, 1005, 254, 1123, 433, 434,
	1027, 1075, 435, 1089, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 610,
	1124, 446, 1125, 1104, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 1105, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 1085, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 1126, 493, 494,
	495, 496, 1015, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 215, 513, 514, 512,
	515, 516, 517, 1068, 518, 519, 502, 503, 520, 521,
	1127, 522, 523, 524, 525, 526, 527, 1083, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 1130, 534,
	535, 536, 537, 1106, 0, 540, 541, 1003, 539, 217,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	1095, 1096, 1097, 1098, 0, 558, 0, 550, 551, 552,
	1107, 553, 1108, 1025, 554, 555, 556, 557, 0, 559,
	560, 0, 1009, 561, 562, 563, 565, 566, 564, 567,
	1069, 568, 0, 0, 569, 570, 571, 1517, 1092, 1129,
	0, 573, 572, 574, 630, 0, 0, 0, 209, 575,
	576, 631, 577, 578, 579, 1006, 0, 210, 0, 0,
	0, 0, 0, 1002, 0, 0, 0, 0, 0, 0,
	1000, 1001, 1047, 1019, 1020, 1021, 1017, 1018, 1030, 1754,
	1752, 0, 0, 1029, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 1071, 1035, 0, 0, 0, 264,
	265, 1111, 266, 267, 268, 269, 270, 581, 1084, 0,
	271, 1091, 272, 1090, 2487, 1101, 273, 274, 275, 276,
	277, 278, 1037, 1070, 1004, 279, 1131, 1132, 588, 0,
	280, 281, 1077, 0, 1058, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 1112, 304, 305, 1061, 1059, 1060, 1067,
	1063, 1062, 1066, 306, 307, 308, 309, 1094, 310, 1088,
	1087, 1008, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 1079, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 1014, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 1102, 1103,
	1026, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	1086, 0, 0, 0, 343, 0, 344, 0, 2492, 1113,
	345, 346, 1099, 1100, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 1109, 0, 1036, 356, 0, 357,
	358, 359, 360, 361, 1072, 1073, 1076, 436, 1115, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 371, 0, 1114, 370, 1081, 1082, 0, 1042,
	0, 372, 373, 1116, 1074, 1117, 374, 375, 376, 1118,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 2488, 387, 1110, 1119, 388, 389,
	1120, 0, 390, 0, 0, 0, 391, 392, 1065, 1064,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 1121,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 1122, 423, 1005, 254, 1123, 433, 434, 1027,
	1075, 435, 1089, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 1124,
	446, 1125, 1104, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 1105, 465, 615, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	1085, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 1126, 493, 494, 495,
	496, 1015, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 1068, 518, 519, 502, 503, 520, 521, 1127,
	522, 523, 524, 525, 526, 527, 1083, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 1130, 534, 535,
	536, 537, 1106, 0, 540, 541, 1003, 539, 0, 542,
	543, 544, 545, 546, 547, 334, 548, 0, 549, 1095,
	1096, 1097, 1098, 0, 558, 2489, 550, 551, 552, 1107,
	553, 1108, 1025, 554, 555, 556, 557, 0, 559, 560,
	0, 1009, 561, 562, 563, 565, 566, 564, 567, 1069,
	568, 0, 0, 569, 570, 571, 627, 1092, 1129, 0,
	573, 572, 574, 630, 0, 0, 0, 0, 575, 576,
	631, 577, 578, 579, 1006, 0, 0, 0, 0, 0,
	0, 0, 1002, 0, 0, 0, 0, 0, 0, 1000,
	1001, 0, 0, 0, 0, 0, 0, 0, 1031, 0,
	0, 2404, 1029, 1047, 1019, 1020, 1021, 1017, 1018, 1030,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1071, 1035, 0, 0, 0,
	264, 265, 1111, 266, 267, 268, 269, 270, 581, 1084,
	0, 271, 1091, 272, 1090, 0, 1101, 273, 274, 275,
	276, 277, 278, 1037, 1070, 1004, 279, 1131, 1132, 588,
	0, 280, 281, 1077, 0, 1058, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1112, 304, 305, 1061, 1059, 1060,
	1067, 1063, 1062, 1066, 306, 307, 308, 309, 1094, 310,
	1088, 1087, 1008, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1079, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1014, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1102,
	1103, 1026, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1086, 0, 0, 0, 343, 0, 344, 0, 0,
	1113, 345, 346, 1099, 1100, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1109, 0, 1036, 356, 0,
	357, 358, 359, 360, 361, 1072, 1073, 1076, 436, 1115,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 371, 0, 1114, 370, 1081, 1082, 0,
	1042, 0, 372, 373, 1116, 1074, 1117, 374, 375, 376,
	1118, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 1110, 1119, 388,
	389, 1120, 0, 390, 0, 0, 0, 391, 392, 1065,
	1064, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	1121, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 1122, 423, 1005, 254, 1123, 433, 434,
	1027, 1075, 435, 1089, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 610,
	1124, 446, 1125, 1104, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 1105, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 1085, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 1126, 493, 494,
	495, 496, 1015, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 1068, 518, 519, 502, 503, 520, 521,
	1127, 522, 523, 524, 525, 526, 527, 1083, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 1130, 534,
	535, 536, 537, 1106, 0, 540, 541, 1003, 539, 0,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	1095, 1096, 1097, 1098, 0, 558, 0, 550, 551, 552,
	1107, 553, 1108, 1025, 554, 555, 556, 557, 0, 559,
	560, 0, 1009, 561, 562, 563, 565, 566, 564, 567,
	1069, 568, 0, 0, 569, 570, 571, 627, 1092, 1129,
	0, 573, 572, 574, 630, 0, 0, 0, 0, 575,
	576, 631, 577, 578, 579, 1006, 0, 0, 0, 0,
	0, 0, 0, 1002, 0, 0, 0, 0, 0, 0,
	1000, 1001, 0, 0, 0, 0, 0, 0, 0, 1031,
	2402, 0, 2401, 1029, 1047, 1019, 1020, 1021, 1017, 1018,
	1030, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 1071, 1035, 0, 0,
	0, 264, 265, 1111, 266, 267, 268, 269, 270, 581,
	1084, 0, 271, 1091, 272, 1090, 0, 1101, 273, 274,
	275, 276, 277, 278, 1037, 1070, 1004, 279, 1131, 1132,
	588, 0, 280, 281, 1077, 0, 1058, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1112, 304, 305, 1061, 1059,
	1060, 1067, 1063, 1062, 1066, 306, 307, 308, 309, 1094,
	310, 1088, 1087, 1008, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 1079, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 1014,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	1102, 1103, 1026, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 1086, 0, 0, 0, 343, 0, 344, 0,
	0, 1113, 345, 346, 1099, 1100, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 1109, 0, 1036, 356,
	0, 357, 358, 359, 360, 361, 1072, 1073, 1076, 436,
	1115, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 0, 1114, 370, 1081, 1082,
	0, 1042, 0, 372, 373, 1116, 1074, 1117, 374, 375,
	376, 1118, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 1110, 1119,
	388, 389, 1120, 0, 390, 0, 0, 0, 391, 392,
	1065, 1064, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 1121, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 1122, 423, 1005, 254, 1123, 433,
	434, 1027, 1075, 435, 1089, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 1124, 446, 1125, 1104, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 1105, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 1085, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 1126, 493,
	494, 495, 496, 1015, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 1068, 518, 519, 502, 503, 520,
	521, 1127, 522, 523, 524, 525, 526, 527, 1083, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 1130,
	534, 535, 536, 537, 1106, 0, 540, 541, 1003, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 1095, 1096, 1097, 1098, 0, 558, 0, 550, 551,
	552, 1107, 553, 1108, 1025, 554, 555, 556, 557, 0,
	559, 560, 0, 1009, 561, 562, 563, 565, 566, 564,
	567, 1069, 568, 0, 0, 569, 570, 571, 627, 1092,
	1129, 0, 573, 572, 574, 630, 0, 0, 0, 0,
	575, 576, 631, 577, 578, 579, 1006, 0, 0, 0,
	0, 0, 0, 0, 1002, 0, 0, 0, 0, 0,
	0, 1000, 1001, 0, 0, 0, 0, 0, 0, 0,
	1031, 2399, 0, 2398, 1029, 1047, 1019, 1020, 1021, 1017,
	1018, 1030, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1071, 1035, 0,
	0, 0, 264, 265, 1111, 266, 267, 268, 269, 270,
	581, 1084, 0, 271, 1091, 272, 1090, 0, 1101, 273,
	274, 275, 276, 277, 278, 1037, 1070, 1004, 279, 1131,
	1132, 588, 0, 280, 281, 1077, 0, 1058, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1112, 304, 305, 1061,
	1059, 1060, 1067, 1063, 1062, 1066, 306, 307, 308, 309,
	1094, 310, 1088, 1087, 1008, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1079, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1014, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1102, 1103, 1026, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1086, 0, 0, 0, 343, 0, 344,
	0, 0, 1113, 345, 346, 1099, 1100, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1109, 0, 1036,
	356, 0, 357, 358, 359, 360, 361, 1072, 1073, 1076,
	436, 1115, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 371, 0, 1114, 370, 1081,
	1082, 0, 1042, 0, 372, 373, 1116, 1074, 1117, 374,
	375, 376, 1118, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 1110,
	1119, 388, 389, 1120, 0, 390, 0, 0, 0, 391,
	392, 1065, 1064, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 1121, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 1122, 423, 1005, 254, 1123,
	433, 434, 1027, 1075, 435, 1089, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 610, 1124, 446, 1125, 1104, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 1105, 465,
	615, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 1085, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 1126,
	493, 494, 495, 496, 1015, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 1068, 518, 519, 502, 503,
	520, 521, 1127, 522, 523, 524, 525, 526, 527, 1083,
	0, 528, 0, 529, 530, 531, 532, 504, 533, 538,
	1130, 534, 535, 536, 537, 1106, 0, 540, 541, 1003,
	539, 0, 542, 543, 544, 545, 546, 547, 334, 548,
	0, 549, 1095, 1096, 1097, 1098, 0, 558, 0, 550,
	551, 552, 1107, 553, 1108, 1025, 554, 555, 556, 557,
	0, 559, 560, 0, 1009, 561, 562, 563, 565, 566,
	564, 567, 1069, 568, 0, 0, 569, 570, 571, 627,
	1092, 1129, 0, 573, 572, 574, 630, 0, 0, 0,
	0, 575, 576, 631, 577, 578, 579, 1006, 0, 0,
	0, 0, 0, 0, 0, 1002, 0, 0, 0, 0,
	0, 0, 1000, 1001, 0, 0, 0, 0, 0, 0,
	0, 1031, 2396, 0, 2395, 1029, 1047, 1019, 1020, 1021,
	1017, 1018, 1030, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 1071, 1035,
	0, 0, 0, 264, 265, 1111, 266, 267, 268, 269,
	270, 581, 1084, 0, 271, 1091, 272, 1090, 0, 1101,
	273, 274, 275, 276, 277, 278, 1037, 1070, 1004, 279,
	1131, 1132, 588, 0, 280, 281, 1077, 0, 1058, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1112, 304, 305,
	1061, 1059, 1060, 1067, 1063, 1062, 1066, 306, 307, 308,
	309, 1094, 310, 1088, 1087, 1008, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 1079,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 1014, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 1102, 1103, 1026, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 1086, 0, 0, 0, 343, 0,
	344, 0, 0, 1113, 345, 346, 1099, 1100, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 1109, 0,
	1036, 356, 0, 357, 358, 359, 360, 361, 1072, 1073,
	1076, 436, 1115, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 371, 0, 1114, 370,
	1081, 1082, 0, 1042, 0, 372, 373, 1116, 1074, 1117,
	374, 375, 376, 1118, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	1110, 1119, 388, 389, 1120, 0, 390, 0, 0, 0,
	391, 392, 1065, 1064, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 1121, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 1122, 423, 1005, 254,
	1123, 433, 434, 1027, 1075, 435, 1089, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 610, 1124, 446, 1125, 1104, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 612, 459, 460, 461, 613, 462, 463, 464, 1105,
	465, 615, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 1085, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	1126, 493, 494, 495, 496, 1015, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 1068, 518, 519, 502,
	503, 520, 521, 1127, 522, 523, 524, 525, 526, 527,
	1083, 0, 528, 0, 529, 530, 531, 532, 504, 533,
	538, 1130, 534, 535, 536, 537, 1106, 0, 540, 541,
	1003, 539, 0, 542, 543, 544, 545, 546, 547, 334,
	548, 0, 549, 1095, 1096, 1097, 1098, 0, 558, 0,
	550, 551, 552, 1107, 553, 1108, 1025, 554, 555, 556,
	557, 0, 559, 560, 0, 1009, 561, 562, 563, 565,
	566, 564, 567, 1069, 568, 0, 0, 569, 570, 571,
	627, 1092, 1129, 0, 573, 572, 574, 630, 0, 0,
	0, 0, 575, 576, 631, 577, 578, 579, 1006, 0,
	0, 0, 0, 0, 0, 0, 1002, 0, 0, 0,
	0, 0, 0, 1000, 1001, 0, 0, 0, 0, 0,
	0, 0, 1031, 2393, 0, 1607, 1029, 1047, 1019, 1020,
	1021, 1017, 1018, 1030, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1071,
	1035, 0, 0, 0, 264, 265, 1111, 266, 267, 268,
	269, 270, 581, 1084, 0, 271, 1091, 272, 1090, 0,
	1101, 273, 274, 275, 276, 277, 278, 1037, 1070, 1004,
	279, 1131, 1132, 588, 0, 280, 281, 1077, 0, 1058,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1112, 304,
	305, 1061, 1059, 1060, 1067, 1063, 1062, 1066, 306, 307,
	308, 309, 1094, 310, 1088, 1087, 1008, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1079, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1014, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1102, 1103, 1026, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1086, 0, 0, 0, 343,
	0, 344, 0, 0, 1113, 345, 346, 1099, 1100, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1109,
	0, 1036, 356, 0, 357, 358, 359, 360, 361, 1072,
	1073, 1076, 436, 1115, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 371, 0, 1114,
	370, 1081, 1082, 0, 1042, 0, 372, 373, 1116, 1074,
	1117, 374, 375, 376, 1118, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 1110, 1119, 388, 389, 1120, 0, 390, 0, 0,
	0, 391, 392, 1065, 1064, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 1121, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 1122, 423, 1005,
	254, 1123, 433, 434, 1027, 1075, 435, 1089, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 1124, 446, 1125, 1104, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	1105, 465, 615, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 1085, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 1126, 493, 494, 495, 496, 1015, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 1068, 518, 519,
	502, 503, 520, 521, 1127, 522, 523, 524, 525, 526,
	527, 1083, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 1130, 534, 535, 536, 537, 1106, 0, 540,
	541, 1003, 539, 0, 542, 543, 544, 545, 546, 547,
	334, 548, 0, 549, 1095, 1096, 1097, 1098, 0, 558,
	0, 550, 551, 552, 1107, 553, 1108, 1025, 554, 555,
	556, 557, 0, 559, 560, 0, 1009, 561, 562, 563,
	565, 566, 564, 567, 1069, 568, 0, 0, 569, 570,
	571, 627, 1092, 1129, 0, 573, 572, 574, 630, 1606,
	0, 0, 0, 575, 576, 631, 577, 578, 579, 1006,
	0, 0, 0, 0, 0, 0, 0, 1002, 0, 0,
	0, 0, 0, 0, 1000, 1001, 0, 0, 0, 0,
	0, 0, 0, 1031, 0, 0, 996, 1029, 1047, 1019,
	1020, 1021, 1017, 1018, 1030, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	1071, 1035, 0, 0, 0, 264, 265, 1111, 266, 267,
	268, 269, 270, 581, 1084, 0, 271, 1091, 272, 1090,
	0, 1101, 273, 274, 275, 276, 277, 278, 1037, 1070,
	1004, 279, 1131, 1132, 588, 0, 280, 281, 1077, 0,
	1058, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1112,
	304, 305, 1061, 1059, 1060, 1067, 1063, 1062, 1066, 306,
	307, 308, 309, 1094, 310, 1088, 1087, 1008, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 1079, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 1014, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 1102, 1103, 1026, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 1086, 0, 0, 0,
	343, 0, 344, 0, 0, 1113, 345, 346, 1099, 1100,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	1109, 0, 1036, 356, 0, 357, 358, 359, 360, 361,
	1072, 1073, 1076, 436, 1115, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 0,
	1114, 370, 1081, 1082, 0, 1042, 0, 372, 373, 1116,
	1074, 1117, 374, 375, 376, 1118, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 1110, 1119, 388, 389, 1120, 0, 390, 0,
	0, 0, 391, 392, 1065, 1064, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 1121, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 1122, 423,
	1005, 254, 1123, 433, 434, 1027, 1075, 435, 1089, 437,
	438, 0, 0, 439, 0, 1010, 0, 441, 442, 443,
	0, 0, 444, 445, 610, 1124, 446, 1125, 1104, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 1105, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 1085, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 1126, 493, 494, 495, 496, 1015, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 1068, 518,
	519, 502, 503, 520, 521, 1127, 522, 523, 524, 525,
	526, 527, 1083, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 1130, 534, 535, 536, 537, 1106, 0,
	540, 541, 1003, 539, 0, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 1095, 1096, 1097, 1098, 0,
	558, 0, 550, 551, 552, 1107, 553, 1108, 1025, 554,
	555, 556, 557, 0, 559, 560, 0, 1009, 561, 562,
	563, 565, 566, 564, 567, 1069, 568, 0, 0, 569,
	570, 571, 627, 1092, 1129, 0, 573, 572, 574, 630,
	0, 0, 0, 0, 575, 576, 631, 577, 578, 579,
	1006, 0, 0, 0, 0, 0, 0, 0, 1002, 0,
	0, 0, 0, 0, 0, 1000, 1001, 1047, 1019, 1020,
	1021, 1017, 1018, 1030, 1031, 0, 0, 0, 1029, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1071,
	1035, 0, 0, 0, 264, 265, 1111, 266, 267, 268,
	269, 270, 581, 1084, 0, 271, 1091, 272, 1090, 0,
	1101, 273, 274, 275, 276, 277, 278, 1037, 1070, 1004,
	279, 1131, 1132, 588, 0, 280, 281, 1077, 0, 1058,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 4230, 300, 0, 301, 302, 303, 1112, 304,
	305, 1061, 1059, 1060, 1067, 1063, 1062, 1066, 306, 307,
	308, 309, 1094, 310, 1088, 1087, 1008, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1079, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1014, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1102, 1103, 1026, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1086, 0, 0, 0, 343,
	0, 344, 0, 0, 1113, 345, 346, 1099, 1100, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1109,
	0, 1036, 356, 0, 357, 358, 359, 360, 361, 1072,
	1073, 1076, 436, 1115, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 371, 0, 1114,
	370, 1081, 1082, 0, 1042, 0, 372, 373, 1116, 1074,
	1117, 374, 375, 376, 1118, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 1110, 1119, 388, 389, 1120, 0, 390, 0, 0,
	0, 391, 392, 1065, 1064, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 1121, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 1122, 423, 1005,
	254, 1123, 433, 434, 1027, 1075, 435, 1089, 437, 438,
	0, 0, 439, 0, 1010, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 1124, 446, 1125, 1104, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	1105, 465, 615, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 1085, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 1126, 493, 494, 495, 496, 1015, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 1068, 518, 519,
	502, 503, 520, 521, 1127, 522, 523, 524, 525, 526,
	527, 1083, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 1130, 534, 535, 536, 537, 1106, 0, 540,
	541, 1003, 539, 0, 542, 543, 544, 545, 546, 547,
	334, 548, 0, 549, 1095, 1096, 1097, 1098, 0, 558,
	0, 550, 551, 552, 1107, 553, 1108, 1025, 554, 555,
	556, 557, 0, 559, 560, 0, 1009, 561, 562, 563,
	565, 566, 564, 567, 1069, 568, 0, 0, 569, 570,
	571, 627, 1092, 1129, 0, 573, 572, 574, 630, 0,
	0, 0, 0, 575, 576, 631, 577, 578, 579, 1006,
	0, 0, 0, 0, 0, 0, 0, 1002, 0, 0,
	0, 0, 0, 0, 1000, 1001, 1047, 1019, 1020, 1021,
	1017, 1018, 1030, 1031, 0, 0, 0, 1029, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 1071, 1035,
	0, 0, 0, 264, 265, 1111, 266, 267, 268, 269,
	270, 581, 1084, 0, 271, 1091, 272, 1090, 0, 1101,
	273, 274, 275, 276, 277, 278, 1037, 1070, 1004, 279,
	1131, 1132, 588, 0, 280, 281, 1077, 0, 1058, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1112, 304, 305,
	1061, 1059, 1060, 1067, 1063, 1062, 1066, 306, 307, 308,
	309, 1094, 310, 1088, 1087, 1008, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 1079,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 1014, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 1102, 1103, 1026, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 1086, 0, 0, 0, 343, 0,
	344, 0, 0, 1113, 345, 346, 1099, 1100, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 1109, 0,
	1036, 356, 0, 357, 358, 359, 360, 361, 1072, 1073,
	1076, 436, 1115, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 2273, 368, 369, 371, 0, 1114, 370,
	1081, 1082, 0, 1042, 0, 372, 373, 1116, 1074, 1117,
	374, 375, 376, 1118, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	1110, 1119, 388, 389, 1120, 0, 390, 0, 0, 0,
	391, 392, 1065, 1064, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 1121, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 1122, 423, 1005, 254,
	1123, 433, 434, 1027, 1075, 435, 1089, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 610, 1124, 446, 1125, 1104, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 612, 459, 460, 461, 613, 462, 463, 464, 1105,
	465, 615, 466, 467, 2272, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 1085, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	1126, 493, 494, 495, 496, 1015, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 1068, 518, 519, 502,
	503, 520, 521, 1127, 522, 523, 524, 525, 526, 527,
	1083, 0, 528, 0, 529, 530, 531, 532, 504, 533,
	538, 1130, 534, 535, 536, 537, 1106, 0, 540, 541,
	1003, 539, 0, 542, 543, 544, 545, 546, 547, 334,
	548, 0, 549, 1095, 1096, 1097, 1098, 0, 558, 0,
	550, 551, 552, 1107, 553, 1108, 1025, 554, 555, 556,
	557, 0, 559, 560, 0, 1009, 561, 562, 563, 565,
	566, 564, 567, 1069, 568, 0, 0, 569, 570, 571,
	627, 1092, 1129, 0, 573, 572, 574, 630, 0, 0,
	0, 0, 575, 576, 631, 577, 578, 579, 1006, 0,
	0, 0, 0, 0, 0, 0, 1002, 0, 0, 0,
	0, 0, 0, 1000, 1001, 1047, 1019, 1020, 1021, 1017,
	1018, 1030, 1031, 0, 0, 0, 1029, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1071, 1035, 0,
	0, 0, 264, 265, 1111, 266, 267, 268, 269, 270,
	581, 1084, 0, 271, 1091, 272, 1090, 0, 1101, 273,
	274, 275, 276, 277, 278, 1037, 1070, 1004, 279, 1131,
	1132, 588, 0, 280, 281, 1077, 0, 1058, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1112, 304, 305, 1061,
	1059, 1060, 1067, 1063, 1062, 1066, 306, 307, 308, 309,
	1094, 310, 1088, 1087, 1008, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1079, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1014, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1102, 1103, 1026, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1086, 0, 0, 0, 343, 0, 344,
	0, 0, 1113, 345, 346, 1099, 1100, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1109, 0, 1036,
	356, 0, 357, 358, 359, 360, 361, 1072, 1073, 1076,
	436, 1115, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 371, 0, 1114, 370, 1081,
	1082, 0, 1042, 0, 372, 373, 1116, 1074, 1117, 374,
	375, 376, 1118, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 1110,
	1119, 388, 389, 1120, 0, 390, 0, 0, 0, 391,
	392, 1065, 1064, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 1121, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 1122, 423, 1005, 254, 1123,
	433, 434, 1027, 1075, 435, 1089, 437, 438, 0, 0,
	439, 0, 1010, 0, 441, 442, 443, 0, 0, 444,
	445, 610, 1124, 446, 1125, 1104, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 1105, 465,
	615, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 1085, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 1126,
	493, 494, 495, 496, 1015, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 1068, 518, 519, 502, 503,
	520, 521, 1127, 522, 523, 524, 525, 526, 527, 1083,
	0, 528, 0, 529, 530, 531, 532, 504, 533, 538,
	1130, 534, 535, 536, 537, 1106, 0, 540, 541, 1003,
	539, 0, 542, 543, 544, 545, 546, 547, 334, 548,
	0, 549, 1095, 1096, 1097, 1098, 0, 558, 0, 550,
	551, 552, 1107, 553, 1108, 1025, 554, 555, 556, 557,
	0, 559, 560, 0, 1009, 561, 562, 563, 565, 566,
	564, 567, 1069, 568, 0, 0, 569, 570, 571, 627,
	1092, 1129, 0, 573, 572, 574, 630, 0, 0, 0,
	0, 575, 576, 631, 577, 578, 579, 1006, 0, 0,
	0, 0, 0, 0, 0, 1002, 0, 0, 0, 0,
	0, 0, 1000, 1001, 1047, 1019, 1020, 1021, 1017, 1018,
	1030, 1031, 0, 0, 0, 1029, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 1071, 1035, 0, 0,
	0, 264, 265, 1111, 266, 267, 268, 269, 270, 581,
	1084, 0, 271, 1091, 272, 1090, 0, 1101, 273, 274,
	275, 276, 277, 278, 1037, 1070, 1004, 279, 1131, 1132,
	588, 0, 280, 281, 1077, 0, 1058, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 4013,
	300, 0, 301, 302, 303, 1112, 304, 305, 1061, 1059,
	1060, 1067, 1063, 1062, 1066, 306, 307, 308, 309, 1094,
	310, 1088, 1087, 1008, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 1079, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 1014,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	1102, 1103, 1026, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 1086, 0, 0, 0, 343, 0, 344, 0,
	0, 1113, 345, 346, 1099, 1100, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 1109, 0, 1036, 356,
	0, 357, 358, 359, 360, 361, 1072, 1073, 1076, 436,
	1115, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 0, 1114, 370, 1081, 1082,
	0, 1042, 0, 372, 373, 1116, 1074, 1117, 374, 375,
	376, 1118, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 1110, 1119,
	388, 389, 1120, 0, 390, 0, 0, 0, 391, 392,
	1065, 1064, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 1121, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 1122, 423, 1005, 254, 1123, 433,
	434, 1027, 1075, 435, 1089, 437, 438, 0, 0, 439,
	0, 1010, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 1124, 446, 1125, 1104, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 1105, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 1085, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 1126, 493,
	494, 495, 496, 1015, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 1068, 518, 519, 502, 503, 520,
	521, 1127, 522, 523, 524, 525, 526, 527, 1083, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 1130,
	534, 535, 536, 537, 1106, 0, 540, 541, 1003, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 1095, 1096, 1097, 1098, 0, 558, 0, 550, 551,
	552, 1107, 553, 1108, 1025, 554, 555, 556, 557, 0,
	559, 560, 0, 1009, 561, 562, 563, 565, 566, 564,
	567, 1069, 568, 0, 0, 569, 570, 571, 627, 1092,
	1129, 0, 573, 572, 574, 630, 0, 0, 0, 0,
	575, 576, 631, 577, 578, 579, 1006, 0, 0, 0,
	0, 0, 0, 0, 1002, 0, 0, 0, 0, 0,
	0, 1000, 1001, 1047, 1019, 1020, 1021, 1017, 1018, 1030,
	1031, 0, 0, 0, 1029, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1071, 1035, 0, 0, 0,
	264, 265, 1111, 266, 267, 268, 269, 270, 581, 1084,
	0, 271, 1091, 272, 1090, 0, 1101, 273, 274, 275,
	276, 277, 278, 1037, 1070, 1004, 279, 1131, 1132, 588,
	0, 280, 281, 1077, 0, 1058, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1112, 304, 305, 1061, 1059, 1060,
	1067, 1063, 1062, 1066, 306, 307, 308, 309, 1094, 310,
	1088, 1087, 1008, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1079, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1014, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1102,
	1103, 1026, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1086, 0, 0, 0, 343, 0, 344, 0, 0,
	1113, 345, 346, 1099, 1100, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1109, 0, 1036, 356, 0,
	357, 358, 359, 360, 361, 1072, 1073, 1076, 436, 1115,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 371, 0, 1114, 370, 1081, 1082, 0,
	1042, 0, 372, 373, 1116, 1074, 1117, 374, 375, 376,
	1118, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 1110, 1119, 388,
	389, 1120, 0, 390, 0, 0, 0, 391, 392, 1065,
	1064, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	1121, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 1122, 423, 1005, 3661, 1123, 433, 434,
	1027, 1075, 435, 1089, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 610,
	1124, 446, 1125, 1104, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 1105, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 1085, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 1126, 493, 494,
	495, 496, 1015, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 1068, 518, 519, 502, 503, 520, 521,
	1127, 522, 523, 524, 525, 526, 527, 1083, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 1130, 534,
	535, 536, 537, 1106, 0, 540, 541, 1003, 539, 0,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	1095, 1096, 1097, 1098, 0, 558, 0, 550, 551, 552,
	1107, 553, 1108, 1025, 554, 555, 556, 557, 0, 559,
	560, 0, 1009, 561, 562, 563, 565, 566, 564, 567,
	1069, 568, 0, 0, 569, 570, 571, 627, 1092, 1129,
	0, 573, 572, 574, 630, 0, 0, 0, 0, 575,
	576, 631, 577, 578, 579, 1006, 0, 0, 0, 0,
	0, 0, 0, 1002, 0, 0, 0, 0, 0, 0,
	1000, 1001, 1822, 0, 0, 0, 0, 0, 0, 1031,
	0, 0, 0, 1029, 1047, 1019, 1020, 1021, 1017, 1018,
	1030, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 1071, 1035, 0, 0,
	0, 264, 265, 1111, 266, 267, 268, 269, 270, 581,
	1084, 0, 271, 1091, 272, 1090, 0, 1101, 273, 274,
	275, 276, 277, 278, 1037, 1070, 1004, 279, 1131, 1132,
	588, 0, 280, 281, 1077, 0, 1058, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1112, 304, 305, 1061, 1059,
	1060, 1067, 1063, 1062, 1066, 306, 307, 308, 309, 1094,
	310, 1088, 1087, 1008, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 1079, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 1014,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	1102, 1103, 1026, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 1086, 0, 0, 0, 343, 0, 344, 0,
	0, 1113, 345, 346, 1099, 1100, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 1109, 0, 1036, 356,
	0, 357, 358, 359, 360, 361, 1072, 1073, 1076, 436,
	1115, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 0, 1114, 370, 1081, 1082,
	0, 1042, 0, 372, 373, 1116, 1074, 1117, 374, 375,
	376, 1118, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 1110, 1119,
	388, 389, 1120, 0, 390, 0, 0, 0, 391, 392,
	1065, 1064, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 1121, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 1122, 423, 1005, 254, 1123, 433,
	434, 1027, 1075, 435, 1089, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 1124, 446, 1125, 1104, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 1105, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 1085, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 1126, 493,
	494, 495, 496, 1015, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 1068, 518, 519, 502, 503, 520,
	521, 1127, 522, 523, 524, 525, 526, 527, 1083, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 1130,
	534, 535, 536, 537, 1106, 0, 540, 541, 1003, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 1095, 1096, 1097, 1098, 0, 558, 0, 550, 551,
	552, 1107, 553, 1108, 1025, 554, 555, 556, 557, 0,
	559, 560, 0, 1009, 561, 562, 563, 565, 566, 564,
	567, 1069, 568, 0, 0, 569, 570, 571, 627, 1092,
	1129, 3409, 573, 572, 574, 630, 0, 0, 0, 0,
	575, 576, 631, 577, 578, 579, 1006, 0, 0, 0,
	0, 0, 0, 0, 1002, 0, 0, 0, 0, 0,
	0, 1000, 1001, 1047, 1019, 1020, 1021, 1017, 1018, 1030,
	1031, 0, 0, 0, 1029, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1071, 1035, 0, 0, 0,
	264, 265, 1111, 266, 267, 268, 269, 270, 581, 1084,
	0, 271, 1091, 272, 1090, 0, 1101, 273, 274, 275,
	276, 277, 278, 1037, 1070, 1004, 279, 1131, 1132, 588,
	0, 280, 281, 1077, 0, 1058, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1112, 304, 305, 1061, 1059, 1060,
	1067, 1063, 1062, 1066, 306, 307, 308, 309, 1094, 310,
	1088, 1087, 1008, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1079, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1014, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1102,
	1103, 1026, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1086, 0, 0, 0, 343, 0, 344, 0, 0,
	1113, 345, 346, 1099, 1100, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1109, 0, 1036, 356, 0,
	357, 358, 359, 360, 361, 1072, 1073, 1076, 436, 1115,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 371, 0, 1114, 370, 1081, 1082, 0,
	1042, 0, 372, 373, 1116, 1074, 1117, 374, 375, 376,
	1118, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 1110, 1119, 388,
	389, 1120, 0, 390, 0, 0, 0, 391, 392, 1065,
	1064, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	1121, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 1122, 423, 1005, 254, 1123, 433, 434,
	1027, 1075, 435, 1089, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 610,
	1124, 446, 1125, 1104, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 1105, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 1085, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 1126, 493, 494,
	495, 496, 1015, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 1068, 518, 519, 502, 503, 520, 521,
	1127, 522, 523, 524, 525, 526, 527, 1083, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 1130, 534,
	535, 536, 537, 1106, 0, 540, 541, 1003, 539, 0,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	1095, 1096, 1097, 1098, 0, 558, 0, 550, 551, 552,
	1107, 553, 1108, 1025, 554, 555, 556, 557, 0, 559,
	560, 0, 1009, 561, 562, 563, 565, 566, 564, 567,
	1069, 568, 0, 0, 569, 570, 571, 627, 1092, 1129,
	0, 573, 572, 574, 630, 0, 0, 0, 0, 575,
	576, 631, 577, 578, 579, 1006, 0, 0, 0, 0,
	0, 0, 0, 1002, 0, 0, 0, 0, 0, 0,
	1000, 1001, 1822, 0, 0, 0, 0, 0, 0, 1031,
	0, 0, 0, 1029, 1047, 1019, 1020, 1021, 1017, 1018,
	1030, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 1071, 1035, 0, 0,
	0, 264, 265, 1111, 266, 267, 268, 269, 270, 581,
	1084, 0, 271, 1091, 272, 1090, 0, 1101, 273, 274,
	275, 276, 277, 278, 1037, 1070, 1004, 279, 1131, 1132,
	588, 0, 280, 281, 1077, 0, 1058, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1112, 304, 305, 1061, 1059,
	1060, 1067, 1063, 1062, 1066, 306, 307, 308, 309, 1094,
	310, 1088, 1087, 1008, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 1079, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 1014,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	1102, 1103, 1026, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 1086, 0, 0, 0, 343, 0, 344, 0,
	2492, 1113, 345, 346, 1099, 1100, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 1109, 0, 1036, 356,
	0, 357, 358, 359, 360, 361, 1072, 1073, 1076, 436,
	1115, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 0, 1114, 370, 1081, 1082,
	0, 1042, 0, 372, 373, 1116, 1074, 1117, 374, 375,
	376, 1118, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 1110, 1119,
	388, 389, 1120, 0, 390, 0, 0, 0, 391, 392,
	1065, 1064, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 1121, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 1122, 423, 1005, 254, 1123, 433,
	434, 1027, 1075, 435, 1089, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 1124, 446, 1125, 1104, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 1105, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 1085, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 1126, 493,
	494, 495, 496, 1015, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 1068, 518, 519, 502, 503, 520,
	521, 1127, 522, 523, 524, 525, 526, 527, 1083, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 1130,
	534, 535, 536, 537, 1106, 0, 540, 541, 1003, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 1095, 1096, 1097, 1098, 0, 558, 0, 550, 551,
	552, 1107, 553, 1108, 1025, 554, 555, 556, 557, 0,
	559, 560, 0, 1009, 561, 562, 563, 565, 566, 564,
	567, 1069, 568, 0, 0, 569, 570, 571, 627, 1092,
	1129, 0, 573, 572, 574, 630, 0, 0, 0, 0,
	575, 576, 631, 577, 578, 579, 1006, 0, 0, 0,
	0, 0, 0, 0, 1002, 0, 0, 0, 0, 0,
	0, 1000, 1001, 1047, 1019, 1020, 1021, 1017, 1018, 1030,
	1031, 0, 0, 0, 1029, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1071, 1035, 0, 0, 0,
	264, 265, 1111, 266, 267, 268, 269, 270, 581, 1084,
	0, 271, 1091, 272, 1090, 0, 1101, 273, 274, 275,
	276, 277, 278, 1037, 1070, 1004, 279, 1131, 1132, 588,
	0, 280, 281, 1077, 0, 1058, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1112, 304, 305, 1061, 1059, 1060,
	1067, 1063, 1062, 1066, 306, 307, 308, 309, 1094, 310,
	1088, 1087, 1008, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1079, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1014, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1102,
	1103, 1026, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1086, 0, 0, 0, 343, 0, 344, 0, 0,
	1113, 345, 346, 1099, 1100, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1109, 0, 1036, 356, 0,
	357, 358, 359, 360, 361, 1072, 1073, 1076, 436, 1115,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 371, 0, 1114, 370, 1081, 1082, 0,
	1042, 0, 372, 373, 1116, 1074, 1117, 374, 375, 376,
	1118, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 1110, 1119, 388,
	389, 1120, 0, 390, 0, 0, 0, 391, 392, 1065,
	1064, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	1121, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 1122, 423, 1005, 254, 1123, 433, 434,
	1027, 1075, 435, 1089, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 610,
	1124, 446, 1125, 1104, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 1105, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 1085, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 1126, 493, 494,
	495, 496, 1015, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 1068, 518, 519, 502, 503, 520, 521,
	1127, 522, 523, 524, 525, 526, 527, 1083, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 1130, 534,
	535, 536, 537, 1106, 0, 540, 541, 1003, 539, 0,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	1095, 1096, 1097, 1098, 0, 558, 0, 550, 551, 552,
	1107, 553, 1108, 1025, 554, 555, 556, 557, 0, 559,
	560, 0, 1009, 561, 562, 563, 565, 566, 564, 567,
	1069, 568, 0, 0, 569, 570, 571, 627, 1092, 1129,
	0, 573, 572, 574, 630, 0, 0, 0, 0, 575,
	576, 631, 577, 578, 579, 1006, 0, 0, 0, 0,
	0, 0, 0, 1002, 0, 0, 0, 0, 0, 0,
	1000, 1001, 0, 0, 0, 0, 0, 0, 0, 1031,
	1752, 0, 2497, 1029, 1047, 1019, 1020, 1021, 1017, 1018,
	1030, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 1071, 1035, 0, 0,
	0, 264, 265, 1111, 266, 267, 268, 269, 270, 581,
	1084, 0, 271, 1091, 272, 1090, 0, 1101, 273, 274,
	275, 276, 277, 278, 1037, 1070, 1004, 279, 1131, 1132,
	588, 0, 280, 281, 1077, 0, 1058, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1112, 304, 305, 1061, 1059,
	1060, 1067, 1063, 1062, 1066, 306, 307, 308, 309, 1094,
	310, 1088, 1087, 1008, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 1079, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 1014,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	1102, 1103, 1026, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 1086, 0, 0, 0, 343, 0, 344, 0,
	0, 1113, 345, 346, 1099, 1100, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 1109, 0, 1036, 356,
	0, 357, 358, 359, 360, 361, 1072, 1073, 1076, 436,
	1115, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 0, 1114, 370, 1081, 1082,
	0, 1042, 0, 372, 373, 1116, 1074, 1117, 374, 375,
	376, 1118, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 1110, 1119,
	388, 389, 1120, 0, 390, 0, 0, 0, 391, 392,
	1065, 1064, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 1121, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 1122, 423, 1005, 254, 1123, 433,
	434, 1027, 1075, 435, 1089, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 1124, 446, 1125, 1104, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 1105, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 1085, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 1126, 493,
	494, 495, 496, 1015, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 1068, 518, 519, 502, 503, 520,
	521, 1127, 522, 523, 524, 525, 526, 527, 1083, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 1130,
	534, 535, 536, 537, 1106, 0, 540, 541, 1003, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 1095, 1096, 1097, 1098, 0, 558, 0, 550, 551,
	552, 1107, 553, 1108, 1025, 554, 555, 556, 557, 0,
	559, 560, 0, 1009, 561, 562, 563, 565, 566, 564,
	567, 1069, 568, 0, 0, 569, 570, 571, 627, 1092,
	1129, 0, 573, 572, 574, 630, 0, 0, 0, 0,
	575, 576, 631, 577, 578, 579, 1006, 0, 0, 0,
	0, 0, 0, 0, 1002, 0, 0, 0, 0, 0,
	0, 1000, 1001, 0, 0, 0, 0, 0, 0, 0,
	1031, 0, 0, 2495, 1029, 1047, 1019, 1020, 1021, 1017,
	1018, 1030, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1071, 1035, 0,
	0, 0, 264, 265, 1111, 266, 267, 268, 269, 270,
	581, 1084, 0, 271, 1091, 272, 1090, 0, 1101, 273,
	274, 275, 276, 277, 278, 1037, 1070, 1004, 279, 1131,
	1132, 588, 0, 280, 281, 1077, 0, 1058, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1112, 304, 305, 1061,
	1059, 1060, 1067, 1063, 1062, 1066, 306, 307, 308, 309,
	1094, 310, 1088, 1087, 1008, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1079, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1014, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1102, 1103, 1026, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1086, 0, 0, 0, 343, 0, 344,
	0, 0, 1113, 345, 346, 1099, 1100, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1109, 0, 1036,
	356, 0, 357, 358, 359, 360, 361, 1072, 1073, 1076,
	436, 1115, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 371, 0, 1114, 370, 1081,
	1082, 0, 1042, 0, 372, 373, 1116, 1074, 1117, 374,
	375, 376, 1118, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 1110,
	1119, 388, 389, 1120, 0, 390, 0, 0, 0, 391,
	392, 1065, 1064, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 1121, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 1122, 423, 1005, 254, 1123,
	433, 434, 1027, 1075, 435, 1089, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 610, 1124, 446, 1125, 1104, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 1105, 465,
	615, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 1085, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 1126,
	493, 494, 495, 496, 1015, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 1068, 518, 519, 502, 503,
	520, 521, 1127, 522, 523, 524, 525, 526, 527, 1083,
	0, 528, 0, 529, 530, 531, 532, 504, 533, 538,
	1130, 534, 535, 536, 537, 1106, 0, 540, 541, 1003,
	539, 0, 542, 543, 544, 545, 546, 547, 334, 548,
	0, 549, 1095, 1096, 1097, 1098, 0, 558, 0, 550,
	551, 552, 1107, 553, 1108, 1025, 554, 555, 556, 557,
	0, 559, 560, 0, 1009, 561, 562, 563, 565, 566,
	564, 567, 1069, 568, 0, 0, 569, 570, 571, 627,
	1092, 1129, 0, 573, 572, 574, 630, 0, 0, 0,
	0, 575, 576, 631, 577, 578, 579, 1006, 0, 0,
	0, 0, 0, 0, 0, 1002, 0, 0, 0, 0,
	0, 0, 1000, 1001, 0, 0, 0, 0, 0, 0,
	0, 1031, 0, 0, 2483, 1029, 1047, 1019, 1020, 1021,
	1017, 1018, 1030, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 1071, 1035,
	0, 0, 0, 264, 265, 1111, 266, 267, 268, 269,
	270, 581, 1084, 0, 271, 1091, 272, 1090, 0, 1101,
	273, 274, 275, 276, 277, 278, 1037, 1070, 1004, 279,
	1131, 1132, 588, 0, 280, 281, 1077, 0, 1058, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1112, 304, 305,
	1061, 1059, 1060, 1067, 1063, 1062, 1066, 306, 307, 308,
	309, 1094, 310, 1088, 1087, 1008, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 1079,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 1014, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 1102, 1103, 1026, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 1086, 0, 0, 0, 343, 0,
	344, 0, 0, 1113, 345, 346, 1099, 1100, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 1109, 0,
	1036, 356, 0, 357, 358, 359, 360, 361, 1072, 1073,
	1076, 436, 1115, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 371, 0, 1114, 370,
	1081, 1082, 0, 1042, 0, 372, 373, 1116, 1074, 1117,
	374, 375, 376, 1118, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	1110, 1119, 388, 389, 1120, 0, 390, 0, 0, 0,
	391, 392, 1065, 1064, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 1121, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 1122, 423, 1005, 254,
	1123, 433, 434, 1027, 1075, 435, 1089, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 610, 1124, 446, 1125, 1104, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 612, 459, 460, 461, 613, 462, 463, 464, 1105,
	465, 615, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 1085, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	1126, 493, 494, 495, 496, 1015, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 1068, 518, 519, 502,
	503, 520, 521, 1127, 522, 523, 524, 525, 526, 527,
	1083, 0, 528, 0, 529, 530, 531, 532, 504, 533,
	538, 1130, 534, 535, 536, 537, 1106, 0, 540, 541,
	1003, 539, 0, 542, 543, 544, 545, 546, 547, 334,
	548, 0, 549, 1095, 1096, 1097, 1098, 0, 558, 0,
	550, 551, 552, 1107, 553, 1108, 1025, 554, 555, 556,
	557, 0, 559, 560, 0, 1009, 561, 562, 563, 565,
	566, 564, 567, 1069, 568, 0, 0, 569, 570, 571,
	627, 1092, 1129, 0, 573, 572, 574, 630, 0, 0,
	0, 0, 575, 576, 631, 577, 578, 579, 1006, 0,
	0, 0, 0, 0, 0, 0, 1002, 0, 0, 0,
	0, 0, 0, 1000, 1001, 0, 0, 0, 0, 0,
	0, 0, 1031, 0, 0, 2472, 1029, 1047, 1019, 1020,
	1021, 1017, 1018, 1030, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1071,
	1035, 0, 0, 0, 264, 265, 1111, 266, 267, 268,
	269, 270, 581, 1084, 0, 271, 1091, 272, 1090, 0,
	1101, 273, 274, 275, 276, 277, 278, 1037, 1070, 1004,
	279, 1131, 1132, 588, 0, 280, 281, 1077, 0, 1058,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1112, 304,
	305, 1061, 1059, 1060, 1067, 1063, 1062, 1066, 306, 307,
	308, 309, 1094, 310, 1088, 1087, 1008, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1079, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1014, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1102, 1103, 1026, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1086, 0, 0, 0, 343,
	0, 344, 0, 0, 1113, 345, 346, 1099, 1100, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1109,
	0, 1036, 356, 0, 357, 358, 359, 360, 361, 1072,
	1073, 1076, 436, 1115, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 371, 0, 1114,
	370, 1081, 1082, 0, 1042, 0, 372, 373, 1116, 1074,
	1117, 374, 375, 376, 1118, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 1110, 1119, 388, 389, 1120, 0, 390, 0, 0,
	0, 391, 392, 1065, 1064, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 1121, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 1122, 423, 1005,
	254, 1123, 433, 434, 1027, 1075, 435, 1089, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 1124, 446, 1125, 1104, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	1105, 465, 615, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 1085, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 1126, 493, 494, 495, 496, 1015, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 1068, 518, 519,
	502, 503, 520, 521, 1127, 522, 523, 524, 525, 526,
	527, 1083, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 1130, 534, 535, 536, 537, 1106, 0, 540,
	541, 1003, 539, 0, 542, 543, 544, 545, 546, 547,
	334, 548, 0, 549, 1095, 1096, 1097, 1098, 0, 558,
	0, 550, 551, 552, 1107, 553, 1108, 1025, 554, 555,
	556, 557, 0, 559, 560, 0, 1009, 561, 562, 563,
	565, 566, 564, 567, 1069, 568, 0, 0, 569, 570,
	571, 627, 1092, 1129, 0, 573, 572, 574, 630, 0,
	0, 0, 0, 575, 576, 631, 577, 578, 579, 1006,
	0, 0, 0, 0, 0, 0, 0, 1002, 0, 0,
	0, 0, 0, 0, 1000, 1001, 0, 0, 0, 0,
	0, 0, 0, 1031, 0, 0, 2470, 1029, 2461, 2468,
	1020, 1021, 1017, 1018, 1030, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	1071, 1035, 0, 0, 0, 264, 265, 1111, 266, 267,
	268, 269, 270, 581, 1084, 0, 271, 1091, 272, 1090,
	0, 1101, 273, 274, 275, 276, 277, 278, 1037, 1070,
	1004, 279, 1131, 1132, 588, 0, 280, 281, 1077, 0,
	1058, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1112,
	304, 305, 1061, 1059, 1060, 1067, 1063, 1062, 1066, 306,
	307, 308, 309, 1094, 2464, 1088, 1087, 1008, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 1079, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 1014, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 1102, 1103, 1026, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 1086, 0, 0, 0,
	343, 0, 344, 0, 0, 1113, 345, 346, 1099, 1100,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	1109, 0, 1036, 356, 0, 357, 358, 359, 2465, 361,
	1072, 1073, 1076, 436, 1115, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 0,
	1114, 370, 1081, 1082, 0, 1042, 0, 372, 373, 1116,
	1074, 1117, 374, 375, 376, 1118, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 1110, 1119, 388, 389, 1120, 0, 390, 0,
	0, 0, 391, 392, 1065, 1064, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 2466, 404, 2463,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 1121, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 1122, 423,
	1005, 254, 1123, 433, 434, 1027, 1075, 435, 1089, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 610, 1124, 446, 1125, 1104, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 1105, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 1085, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 1126, 493, 494, 495, 496, 1015, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	2467, 0, 513, 514, 512, 515, 516, 517, 1068, 518,
	519, 502, 503, 520, 521, 1127, 522, 523, 524, 525,
	526, 527, 1083, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 1130, 534, 535, 536, 537, 1106, 0,
	540, 541, 1003, 539, 0, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 1095, 1096, 1097, 1098, 0,
	558, 0, 550, 551, 552, 1107, 553, 1108, 1025, 554,
	555, 556, 557, 0, 559, 560, 0, 1009, 561, 562,
	563, 565, 566, 564, 567, 1069, 568, 0, 0, 569,
	570, 571, 627, 1092, 1129, 0, 573, 572, 574, 630,
	0, 0, 0, 0, 575, 576, 631, 577, 2462, 579,
	1006, 0, 0, 0, 0, 0, 0, 0, 1002, 0,
	0, 0, 0, 0, 0, 1000, 1001, 0, 0, 0,
	0, 0, 0, 0, 1031, 0, 0, 2458, 1029, 2461,
	2468, 1020, 1021, 1017, 1018, 1030, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1071, 1035, 0, 0, 0, 264, 265, 1111, 266,
	267, 268, 269, 270, 581, 1084, 0, 271, 1091, 272,
	1090, 0, 1101, 273, 274, 275, 276, 277, 278, 1037,
	1070, 1004, 279, 1131, 1132, 588, 0, 280, 281, 1077,
	0, 1058, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1112, 304, 305, 1061, 1059, 1060, 1067, 1063, 1062, 1066,
	306, 307, 308, 309, 1094, 2464, 1088, 1087, 1008, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1079, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1014, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1102, 1103, 1026, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1086, 0, 0,
	0, 343, 0, 344, 0, 0, 1113, 345, 346, 1099,
	1100, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1109, 0, 1036, 356, 0, 357, 358, 359, 2465,
	361, 1072, 1073, 1076, 436, 1115, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 1114, 370, 1081, 1082, 0, 1042, 0, 372, 373,
	1116, 1074, 1117, 374, 375, 376, 1118, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 1110, 1119, 388, 389, 1120, 0, 390,
	0, 0, 0, 391, 392, 1065, 1064, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 2466, 404,
	2463, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1121, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1122,
	423, 1005, 254, 1123, 433, 434, 1027, 1075, 435, 1089,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 1124, 446, 1125, 1104,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 1105, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 1085, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 1126, 493, 494, 495, 496, 1015, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 2467, 0, 513, 514, 512, 515, 516, 517, 1068,
	518, 519, 502, 503, 520, 521, 1127, 522, 523, 524,
	525, 526, 527, 1083, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 1130, 534, 535, 536, 537, 1106,
	0, 540, 541, 1003, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 1095, 1096, 1097, 1098,
	0, 558, 0, 550, 551, 552, 1107, 553, 1108, 1025,
	554, 555, 556, 557, 0, 559, 560, 0, 1009, 561,
	562, 563, 565, 566, 564, 567, 1069, 568, 0, 0,
	569, 570, 571, 627, 1092, 1129, 0, 573, 572, 574,
	630, 0, 0, 0, 0, 575, 576, 631, 577, 2462,
	579, 1006, 0, 0, 0, 0, 0, 0, 0, 1002,
	0, 0, 0, 0, 0, 0, 1000, 1001, 1047, 1019,
	1020, 1021, 1017, 1018, 1030, 1031, 0, 0, 0, 1029,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	1071, 1035, 0, 0, 0, 264, 265, 1111, 266, 267,
	268, 269, 270, 581, 1084, 0, 271, 1091, 272, 1090,
	0, 1101, 273, 274, 275, 276, 277, 278, 1037, 1070,
	1004, 279, 1131, 1132, 588, 0, 280, 281, 1077, 0,
	1058, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1112,
	304, 305, 1061, 1059, 1060, 1067, 1063, 1062, 1066, 306,
	307, 308, 309, 1094, 310, 1088, 1087, 1008, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 1079, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 1014, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 1102, 1103, 1026, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 1086, 0, 0, 0,
	343, 0, 344, 0, 0, 1113, 345, 346, 1099, 1100,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	1109, 0, 1036, 356, 0, 357, 358, 359, 360, 361,
	1072, 1073, 1076, 436, 1115, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 0,
	1114, 370, 1081, 1082, 0, 1042, 0, 372, 373, 1116,
	1074, 1117, 374, 375, 376, 1118, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 1110, 1119, 388, 389, 1120, 0, 390, 0,
	0, 0, 391, 392, 1065, 1064, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 1121, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 1122, 423,
	1005, 254, 1123, 433, 434, 1027, 1075, 435, 1089, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 610, 1124, 446, 1125, 1104, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 1105, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 1085, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 1126, 493, 494, 495, 496, 1015, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 1068, 518,
	519, 502, 503, 520, 521, 1127, 522, 523, 524, 525,
	526, 527, 1083, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 1130, 534, 535, 536, 537, 1106, 0,
	540, 541, 1003, 539, 0, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 1095, 1096, 1097, 1098, 0,
	558, 0, 550, 551, 552, 1107, 553, 1108, 1025, 554,
	555, 556, 557, 0, 559, 560, 0, 1009, 561, 562,
	563, 565, 566, 564, 567, 1069, 568, 0, 0, 569,
	570, 571, 627, 1092, 1129, 0, 573, 572, 574, 630,
	0, 0, 0, 0, 575, 576, 631, 577, 578, 579,
	1006, 0, 0, 0, 0, 0, 0, 0, 1002, 0,
	0, 0, 0, 0, 0, 1000, 1001, 0, 0, 0,
	0, 0, 1760, 0, 1031, 0, 0, 0, 1029, 1047,
	1019, 1020, 1021, 1017, 1018, 1030, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 2252, 262, 263, 0, 0, 0, 0,
	0, 1071, 1035, 0, 0, 0, 264, 265, 1111, 266,
	267, 268, 269, 270, 581, 1084, 0, 271, 1091, 272,
	1090, 0, 1101, 273, 274, 275, 276, 277, 278, 1037,
	1070, 1004, 279, 1131, 1132, 588, 0, 280, 281, 1077,
	0, 1058, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1112, 304, 305, 1061, 1059, 1060, 1067, 1063, 1062, 1066,
	306, 307, 308, 309, 1094, 310, 1088, 1087, 1008, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1079, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1014, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1102, 1103, 1026, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1086, 0, 0,
	0, 343, 0, 344, 0, 0, 1113, 345, 346, 1099,
	1100, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1109, 0, 1036, 356, 0, 357, 358, 359, 360,
	361, 1072, 1073, 1076, 436, 1115, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 1114, 370, 1081, 1082, 0, 1042, 0, 372, 373,
	1116, 1074, 1117, 374, 375, 376, 1118, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 1110, 1119, 388, 389, 1120, 0, 390,
	0, 0, 0, 391, 392, 1065, 1064, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1121, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1122,
	423, 1005, 254, 1123, 433, 434, 1027, 1075, 435, 1089,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 1124, 446, 1125, 1104,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 1105, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 1085, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 1126, 493, 494, 495, 496, 1015, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 1068,
	518, 519, 502, 503, 520, 521, 1127, 522, 523, 524,
	525, 526, 527, 1083, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 1130, 534, 535, 536, 537, 1106,
	0, 540, 541, 1003, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 1095, 1096, 1097, 1098,
	0, 558, 0, 550, 551, 552, 1107, 553, 1108, 1025,
	554, 555, 556, 557, 0, 559, 560, 0, 1009, 561,
	562, 563, 565, 566, 564, 567, 1069, 568, 0, 0,
	569, 570, 571, 627, 1092, 1129, 0, 573, 572, 574,
	630, 0, 0, 0, 0, 575, 576, 631, 577, 578,
	579, 1006, 0, 0, 0, 0, 0, 0, 0, 1002,
	0, 0, 0, 0, 0, 0, 1000, 1001, 0, 0,
	0, 0, 0, 0, 0, 1031, 0, 0, 1612, 1029,
	1047, 1019, 1020, 1021, 1017, 1018, 1030, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 1071, 1035, 0, 0, 0, 264, 265, 1111,
	266, 267, 268, 269, 270, 581, 1084, 0, 271, 1091,
	272, 1090, 0, 1101, 273, 274, 275, 276, 277, 278,
	1037, 1070, 1004, 279, 1131, 1132, 588, 0, 280, 281,
	1077, 0, 1058, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 1112, 304, 305, 1061, 1059, 1060, 1067, 1063, 1062,
	1066, 306, 307, 308, 309, 1094, 310, 1088, 1087, 1008,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 1079, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 1014, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 1102, 1103, 1026, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 1086, 0,
	0, 0, 343, 0, 344, 0, 0, 1113, 345, 346,
	1099, 1100, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 1109, 0, 1036, 356, 0, 357, 358, 359,
	360, 361, 1072, 1073, 1076, 436, 1115, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 0, 1114, 370, 1081, 1082, 0, 1042, 0, 372,
	373, 1116, 1074, 1117, 374, 375, 376, 1118, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 1110, 1119, 388, 389, 1120, 0,
	390, 0, 0, 0, 391, 392, 1065, 1064, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 1121, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	1122, 423, 1005, 254, 1123, 433, 434, 1027, 1075, 435,
	1089, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 610, 1124, 446, 1125,
	1104, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 1105, 465, 615, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 1085, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 1126, 493, 494, 495, 496, 1015,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	1068, 518, 519, 502, 503, 520, 521, 1127, 522, 523,
	524, 525, 526, 527, 1083, 0, 528, 0, 529, 530,
	531, 532, 504, 533, 538, 1130, 534, 535, 536, 537,
	1106, 0, 540, 541, 1003, 539, 0, 542, 543, 544,
	545, 546, 547, 334, 548, 0, 549, 1095, 1096, 1097,
	1098, 0, 558, 0, 550, 551, 552, 1107, 553, 1108,
	1025, 554, 555, 556, 557, 0, 559, 560, 0, 1009,
	561, 562, 563, 565, 566, 564, 567, 1069, 568, 0,
	0, 569, 570, 571, 627, 1092, 1129, 0, 573, 572,
	574, 630, 0, 0, 0, 0, 575, 576, 631, 577,
	578, 579, 1006, 0, 0, 0, 0, 0, 0, 0,
	1002, 0, 0, 0, 0, 0, 0, 1000, 1001, 0,
	0, 0, 0, 0, 0, 0, 1031, 0, 0, 1547,
	1029, 1047, 1019, 1020, 1021, 1017, 1018, 1030, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1071, 1035, 0, 0, 0, 264, 265,
	1111, 266, 267, 268, 269, 270, 581, 1084, 0, 271,
	1091, 272, 1090, 0, 1101, 273, 274, 275, 276, 277,
	278, 1037, 1070, 1004, 279, 1131, 1132, 588, 0, 280,
	281, 1077, 0, 1058, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1112, 304, 305, 1061, 1059, 1060, 1067, 1063,
	1062, 1066, 306, 307, 308, 309, 1094, 310, 1088, 1087,
	1008, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1079, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1014, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1102, 1103, 1026,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1086,
	0, 0, 0, 343, 0, 344, 0, 0, 1113, 345,
	346, 1099, 1100, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1109, 0, 1036, 356, 0, 357, 358,
	359, 360, 361, 1072, 1073, 1076, 436, 1115, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 371, 0, 1114, 370, 1081, 1082, 0, 1042, 0,
	372, 373, 1116, 1074, 1117, 374, 375, 376, 1118, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 1110, 1119, 388, 389, 1120,
	0, 390, 0, 0, 0, 391, 392, 1065, 1064, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 1121, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 1122, 423, 1005, 254, 1123, 433, 434, 1027, 1075,
	435, 1089, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 610, 1124, 446,
	1125, 1104, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 612, 459, 460, 461,
	613, 462, 463, 464, 1105, 465, 615, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 1085,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 1126, 493, 494, 495, 496,
	1015, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 1068, 518, 519, 502, 503, 520, 521, 1127, 522,
	523, 524, 525, 526, 527, 1083, 0, 528, 0, 529,
	530, 531, 532, 504, 533, 538, 1130, 534, 535, 536,
	537, 1106, 0, 540, 541, 1003, 539, 0, 542, 543,
	544, 545, 546, 547, 334, 548, 0, 549, 1095, 1096,
	1097, 1098, 0, 558, 0, 550, 551, 552, 1107, 553,
	1108, 1025, 554, 555, 556, 557, 0, 559, 560, 0,
	1009, 561, 562, 563, 565, 566, 564, 567, 1069, 568,
	0, 0, 569, 570, 571, 627, 1092, 1129, 0, 573,
	572, 574, 630, 0, 0, 0, 0, 575, 576, 631,
	577, 578, 579, 1006, 0, 0, 0, 0, 0, 0,
	0, 1002, 0, 0, 0, 0, 0, 0, 1000, 1001,
	0, 0, 0, 0, 0, 0, 0, 1031, 0, 0,
	1542, 1029, 1047, 1019, 1020, 1021, 1017, 1018, 1030, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 1071, 1035, 0, 0, 0, 264,
	265, 1111, 266, 267, 268, 269, 270, 581, 1084, 0,
	271, 1091, 272, 1090, 0, 1101, 273, 274, 275, 276,
	277, 278, 1037, 1070, 1004, 279, 1131, 1132, 588, 0,
	280, 281, 1077, 0, 1058, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 1112, 304, 305, 1061, 1059, 1060, 1067,
	1063, 1062, 1066, 306, 307, 308, 309, 1094, 310, 1088,
	1087, 1008, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 1079, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 1014, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 1102, 1103,
	1026, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	1086, 0, 0, 0, 343, 0, 344, 0, 0, 1113,
	345, 346, 1099, 1100, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 1109, 0, 1036, 356, 0, 357,
	358, 359, 360, 361, 1072, 1073, 1076, 436, 1115, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 371, 0, 1114, 370, 1081, 1082, 0, 1042,
	0, 372, 373, 1116, 1074, 1117, 374, 375, 376, 1118,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 1110, 1119, 388, 389,
	1120, 0, 390, 0, 0, 0, 391, 392, 1065, 1064,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 1121,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 1122, 423, 1005, 254, 1123, 433, 434, 1027,
	1075, 435, 1089, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 1124,
	446, 1125, 1104, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 1105, 465, 615, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	1085, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 1126, 493, 494, 495,
	496, 1015, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 1068, 518, 519, 502, 503, 520, 521, 1127,
	522, 523, 524, 525, 526, 527, 1083, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 1130, 534, 535,
	536, 537, 1106, 0, 540, 541, 1003, 539, 0, 542,
	543, 544, 545, 546, 547, 334, 548, 0, 549, 1095,
	1096, 1097, 1098, 0, 558, 0, 550, 551, 552, 1107,
	553, 1108, 1025, 554, 555, 556, 557, 0, 559, 560,
	0, 1009, 561, 562, 563, 565, 566, 564, 567, 1069,
	568, 0, 0, 569, 570, 571, 627, 1092, 1129, 0,
	573, 572, 574, 630, 0, 0, 0, 0, 575, 576,
	631, 577, 578, 579, 1006, 0, 0, 0, 0, 0,
	0, 0, 1002, 0, 0, 0, 0, 0, 0, 1000,
	1001, 0, 0, 0, 0, 0, 0, 0, 1031, 0,
	0, 1533, 1029, 1047, 1019, 1020, 1021, 1017, 1018, 1030,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1071, 1035, 0, 0, 0,
	264, 265, 1111, 266, 267, 268, 269, 270, 581, 1084,
	0, 271, 1091, 272, 1090, 0, 1101, 273, 274, 275,
	276, 277, 278, 1037, 1070, 1004, 279, 1131, 1132, 588,
	0, 280, 281, 1077, 0, 1058, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1112, 304, 305, 1061, 1059, 1060,
	1067, 1063, 1062, 1066, 306, 307, 308, 309, 1094, 310,
	1088, 1087, 1008, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1079, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1014, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1102,
	1103, 1026, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1086, 0, 0, 0, 343, 0, 344, 0, 0,
	1113, 345, 346, 1099, 1100, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1109, 0, 1036, 356, 0,
	357, 358, 359, 360, 361, 1072, 1073, 1076, 436, 1115,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 371, 0, 1114, 370, 1081, 1082, 0,
	1042, 0, 372, 373, 1116, 1074, 1117, 374, 375, 376,
	1118, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 1110, 1119, 388,
	389, 1120, 0, 390, 0, 0, 0, 391, 392, 1065,
	1064, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	1121, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 1122, 423, 1005, 254, 1123, 433, 434,
	1027, 1075, 435, 1089, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 610,
	1124, 446, 1125, 1104, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 1105, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 1085, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 1126, 493, 494,
	495, 496, 1015, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 1068, 518, 519, 502, 503, 520, 521,
	1127, 522, 523, 524, 525, 526, 527, 1083, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 1130, 534,
	535, 536, 537, 1106, 0, 540, 541, 1003, 539, 0,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	1095, 1096, 1097, 1098, 0, 558, 0, 550, 551, 552,
	1107, 553, 1108, 1025, 554, 555, 556, 557, 0, 559,
	560, 0, 1009, 561, 562, 563, 565, 566, 564, 567,
	1069, 568, 0, 0, 569, 570, 571, 627, 1092, 1129,
	0, 573, 572, 574, 630, 0, 0, 0, 0, 575,
	576, 631, 577, 578, 579, 1006, 0, 0, 0, 0,
	0, 0, 0, 1002, 0, 0, 0, 0, 0, 0,
	1000, 1001, 0, 0, 0, 0, 0, 0, 0, 1031,
	0, 0, 1528, 1029, 1047, 1019, 1020, 1021, 1017, 1018,
	1030, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 1071, 1035, 0, 0,
	0, 264, 265, 1111, 266, 267, 268, 269, 270, 581,
	1084, 0, 271, 1091, 272, 1090, 0, 1101, 273, 274,
	275, 276, 277, 278, 1037, 1070, 1004, 279, 1131, 1132,
	588, 0, 280, 281, 1077, 0, 1058, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1112, 304, 305, 1061, 1059,
	1060, 1067, 1063, 1062, 1066, 306, 307, 308, 309, 1094,
	310, 1088, 1087, 1008, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 1079, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 1014,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	1102, 1103, 1026, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 1086, 0, 0, 0, 343, 0, 344, 0,
	0, 1113, 345, 346, 1099, 1100, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 1109, 0, 1036, 356,
	0, 357, 358, 359, 360, 361, 1072, 1073, 1076, 436,
	1115, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 0, 1114, 370, 1081, 1082,
	0, 1042, 0, 372, 373, 1116, 1074, 1117, 374, 375,
	376, 1118, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 1110, 1119,
	388, 389, 1120, 0, 390, 0, 0, 0, 391, 392,
	1065, 1064, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 1121, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 1122, 423, 1005, 254, 1123, 433,
	434, 1027, 1075, 435, 1089, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 1124, 446, 1125, 1104, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 1105, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 1085, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 1126, 493,
	494, 495, 496, 1015, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 1068, 518, 519, 502, 503, 520,
	521, 1127, 522, 523, 524, 525, 526, 527, 1083, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 1130,
	534, 535, 536, 537, 1106, 0, 540, 541, 1003, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 1095, 1096, 1097, 1098, 0, 558, 0, 550, 551,
	552, 1107, 553, 1108, 1025, 554, 555, 556, 557, 0,
	559, 560, 0, 1009, 561, 562, 563, 565, 566, 564,
	567, 1069, 568, 0, 0, 569, 570, 571, 627, 1092,
	1129, 0, 573, 572, 574, 630, 0, 0, 0, 0,
	575, 576, 631, 577, 578, 579, 1006, 0, 0, 0,
	0, 0, 0, 0, 1002, 0, 0, 0, 0, 0,
	0, 1000, 1001, 0, 0, 0, 0, 0, 0, 0,
	1031, 0, 0, 1510, 1029, 1047, 1019, 1020, 1021, 1017,
	1018, 1030, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1071, 1035, 0,
	0, 0, 264, 265, 1111, 266, 267, 268, 269, 270,
	581, 1084, 0, 271, 1091, 272, 1090, 0, 1101, 273,
	274, 275, 276, 277, 278, 1037, 1070, 1004, 279, 1131,
	1132, 588, 0, 280, 281, 1077, 0, 1058, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1112, 304, 305, 1061,
	1059, 1060, 1067, 1063, 1062, 1066, 306, 307, 308, 309,
	1094, 310, 1088, 1087, 1008, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1079, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1014, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1102, 1103, 1026, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1086, 0, 0, 0, 343, 0, 344,
	0, 0, 1113, 345, 346, 1099, 1100, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1109, 0, 1036,
	356, 0, 357, 358, 359, 360, 361, 1072, 1073, 1076,
	436, 1115, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 371, 0, 1114, 370, 1081,
	1082, 0, 1042, 0, 372, 373, 1116, 1074, 1117, 374,
	375, 376, 1118, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 1110,
	1119, 388, 389, 1120, 0, 390, 0, 0, 0, 391,
	392, 1065, 1064, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 1121, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 1122, 423, 1005, 254, 1123,
	433, 434, 1027, 1075, 435, 1089, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 610, 1124, 446, 1125, 1104, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 1105, 465,
	615, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 1085, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 1126,
	493, 494, 495, 496, 1015, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 1068, 518, 519, 502, 503,
	520, 521, 1127, 522, 523, 524, 525, 526, 527, 1083,
	0, 528, 0, 529, 530, 531, 532, 504, 533, 538,
	1130, 534, 535, 536, 537, 1106, 0, 540, 541, 1003,
	539, 0, 542, 543, 544, 545, 546, 547, 334, 548,
	0, 549, 1095, 1096, 1097, 1098, 0, 558, 0, 550,
	551, 552, 1107, 553, 1108, 1025, 554, 555, 556, 557,
	0, 559, 560, 0, 1009, 561, 562, 563, 565, 566,
	564, 567, 1069, 568, 0, 0, 569, 570, 571, 627,
	1092, 1129, 0, 573, 572, 574, 630, 0, 0, 0,
	0, 575, 576, 631, 577, 578, 579, 1006, 0, 0,
	0, 0, 0, 0, 0, 1002, 0, 0, 0, 0,
	0, 0, 1000, 1001, 0, 0, 0, 0, 0, 0,
	0, 1031, 0, 0, 1389, 1029, 1047, 1019, 1020, 1021,
	1017, 1018, 1030, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 1071, 1035,
	0, 0, 0, 264, 265, 1111, 266, 267, 268, 269,
	270, 581, 1084, 0, 271, 1091, 272, 1090, 0, 1101,
	273, 274, 275, 276, 277, 278, 1037, 1070, 1004, 279,
	1131, 1132, 588, 0, 280, 281, 1077, 0, 1058, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1112, 304, 305,
	1061, 1059, 1060, 1067, 1063, 1062, 1066, 306, 307, 308,
	309, 1094, 310, 1088, 1087, 1008, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 1079,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 1014, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 1102, 1103, 1026, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 1086, 0, 0, 0, 343, 0,
	344, 0, 0, 1113, 345, 346, 1099, 1100, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 1109, 0,
	1036, 356, 0, 357, 358, 359, 360, 361, 1388, 1073,
	1076, 436, 1115, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 371, 0, 1114, 370,
	1081, 1082, 0, 1042, 0, 372, 373, 1116, 1074, 1117,
	374, 375, 376, 1118, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	1110, 1119, 388, 389, 1120, 0, 390, 0, 0, 0,
	391, 392, 1065, 1064, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 1121, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 1122, 423, 1005, 254,
	1123, 433, 434, 1027, 1075, 435, 1089, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 610, 1124, 446, 1125, 1104, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 612, 459, 460, 461, 613, 462, 463, 464, 1105,
	465, 615, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 1085, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	1126, 493, 494, 495, 496, 1015, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 1068, 518, 519, 502,
	503, 520, 521, 1127, 522, 523, 524, 525, 526, 527,
	1083, 0, 528, 0, 529, 530, 531, 532, 504, 533,
	538, 1130, 534, 535, 536, 537, 1106, 0, 540, 541,
	1003, 539, 0, 542, 543, 544, 545, 546, 547, 334,
	548, 0, 549, 1095, 1096, 1097, 1098, 0, 558, 0,
	550, 551, 552, 1107, 553, 1108, 1025, 554, 555, 556,
	557, 0, 559, 560, 0, 1009, 561, 562, 563, 565,
	566, 564, 567, 1069, 568, 0, 0, 569, 570, 571,
	627, 1092, 1129, 0, 573, 572, 574, 630, 0, 0,
	0, 0, 575, 576, 631, 577, 578, 579, 1006, 0,
	0, 0, 0, 0, 0, 0, 1002, 0, 0, 0,
	0, 0, 0, 1000, 1001, 0, 0, 0, 0, 0,
	0, 0, 1031, 0, 0, 1383, 1029, 1047, 1019, 1020,
	1021, 1017, 1018, 1030, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1071,
	1035, 0, 0, 0, 264, 265, 1111, 266, 267, 268,
	269, 270, 581, 1084, 0, 271, 1091, 272, 1090, 0,
	1101, 273, 274, 275, 276, 277, 278, 1037, 1070, 1004,
	279, 1131, 1132, 588, 0, 280, 281, 1077, 0, 1058,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1112, 304,
	305, 1061, 1059, 1060, 1067, 1063, 1062, 1066, 306, 307,
	308, 309, 1094, 310, 1088, 1087, 1008, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1079, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1014, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1102, 1103, 1026, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1086, 0, 0, 0, 343,
	0, 344, 0, 0, 1113, 345, 346, 1099, 1100, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1109,
	0, 1036, 356, 0, 357, 358, 359, 360, 361, 1382,
	1073, 1076, 436, 1115, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 371, 0, 1114,
	370, 1081, 1082, 0, 1042, 0, 372, 373, 1116, 1074,
	1117, 374, 375, 376, 1118, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 1110, 1119, 388, 389, 1120, 0, 390, 0, 0,
	0, 391, 392, 1065, 1064, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 1121, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 1122, 423, 1005,
	254, 1123, 433, 434, 1027, 1075, 435, 1089, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 1124, 446, 1125, 1104, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	1105, 465, 615, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 1085, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 1126, 493, 494, 495, 496, 1015, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 1068, 518, 519,
	502, 503, 520, 521, 1127, 522, 523, 524, 525, 526,
	527, 1083, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 1130, 534, 535, 536, 537, 1106, 0, 540,
	541, 1003, 539, 0, 542, 543, 544, 545, 546, 547,
	334, 548, 0, 549, 1095, 1096, 1097, 1098, 0, 558,
	0, 550, 551, 552, 1107, 553, 1108, 1025, 554, 555,
	556, 557, 0, 559, 560, 0, 1009, 561, 562, 563,
	565, 566, 564, 567, 1069, 568, 0, 0, 569, 570,
	571, 627, 1092, 1129, 0, 573, 572, 574, 630, 0,
	0, 0, 0, 575, 576, 631, 577, 578, 579, 1006,
	0, 0, 0, 0, 0, 0, 0, 1002, 0, 0,
	0, 0, 0, 0, 1000, 1001, 0, 0, 0, 0,
	0, 0, 0, 1031, 0, 0, 1376, 1029, 1047, 1019,
	1020, 1021, 1017, 1018, 1030, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	1071, 1035, 0, 0, 0, 264, 265, 1111, 266, 267,
	268, 269, 270, 581, 1084, 0, 271, 1091, 272, 1090,
	0, 1101, 273, 274, 275, 276, 277, 278, 1037, 1070,
	1004, 279, 1131, 1132, 588, 0, 280, 281, 1077, 0,
	1058, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1112,
	304, 305, 1061, 1059, 1060, 1067, 1063, 1062, 1066, 306,
	307, 308, 309, 1094, 310, 1088, 1087, 1008, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 1079, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 1014, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 1102, 1103, 1026, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 1086, 0, 0, 0,
	343, 0, 344, 0, 0, 1113, 345, 346, 1099, 1100,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	1109, 0, 1036, 356, 0, 357, 358, 359, 360, 361,
	1072, 1073, 1076, 436, 1115, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 0,
	1114, 370, 1081, 1082, 0, 1042, 0, 372, 373, 1116,
	1074, 1117, 374, 375, 376, 1118, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 1110, 1119, 388, 389, 1120, 0, 390, 0,
	0, 0, 391, 392, 1065, 1064, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 1121, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 1122, 423,
	1005, 254, 1123, 433, 434, 1027, 1075, 435, 1089, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 610, 1124, 446, 1125, 1104, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 1105, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 1085, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 1126, 493, 494, 495, 496, 1015, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 1068, 518,
	519, 502, 503, 520, 521, 1127, 522, 523, 524, 525,
	526, 527, 1083, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 1130, 534, 535, 536, 537, 1106, 0,
	540, 541, 1003, 539, 0, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 1095, 1096, 1097, 1098, 0,
	558, 0, 550, 551, 552, 1107, 553, 1108, 1025, 554,
	555, 556, 557, 0, 559, 560, 0, 1009, 561, 562,
	563, 565, 566, 564, 567, 1069, 568, 0, 0, 569,
	570, 571, 627, 1092, 1129, 0, 573, 572, 574, 630,
	0, 0, 0, 0, 575, 576, 631, 577, 578, 579,
	1006, 0, 0, 0, 0, 0, 0, 0, 1002, 0,
	0, 0, 0, 0, 0, 1000, 1001, 1047, 1019, 1020,
	1021, 1017, 1018, 1030, 1031, 0, 0, 0, 1029, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1071,
	1035, 0, 0, 0, 264, 265, 1111, 266, 267, 268,
	269, 270, 581, 1084, 0, 271, 1091, 272, 1090, 0,
	1101, 273, 274, 275, 276, 277, 278, 1037, 1070, 1004,
	279, 1131, 1132, 588, 0, 280, 281, 1077, 0, 1058,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1112, 304,
	305, 1061, 1059, 1060, 1067, 1063, 1062, 1066, 306, 307,
	308, 309, 1094, 310, 1088, 1087, 1008, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1079, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1014, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1102, 1103, 1026, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1086, 0, 0, 0, 343,
	0, 344, 0, 0, 1113, 345, 346, 1099, 1100, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1109,
	0, 1036, 356, 0, 357, 358, 359, 360, 361, 1072,
	1073, 1076, 436, 1115, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 371, 0, 1114,
	370, 1081, 1082, 0, 1042, 0, 372, 373, 1116, 1074,
	1117, 374, 375, 376, 1118, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 1110, 1119, 388, 389, 1120, 0, 390, 0, 0,
	0, 391, 392, 1065, 1064, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 1121, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 1122, 423, 1005,
	254, 1123, 433, 434, 1027, 1075, 435, 1089, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 1124, 446, 1125, 1104, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	1105, 465, 615, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 1085, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 1126, 493, 494, 495, 496, 1015, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 1068, 518, 519,
	502, 503, 520, 521, 1127, 522, 523, 524, 525, 526,
	527, 1083, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 1130, 534, 535, 536, 537, 1106, 0, 540,
	541, 1003, 539, 0, 542, 543, 544, 545, 546, 547,
	334, 548, 0, 549, 1095, 1096, 1097, 1098, 0, 558,
	0, 550, 551, 552, 1107, 553, 1108, 1025, 554, 555,
	556, 557, 0, 559, 560, 0, 1009, 561, 562, 563,
	565, 566, 564, 567, 1069, 568, 0, 0, 569, 570,
	571, 627, 1092, 1129, 0, 573, 572, 574, 630, 0,
	0, 0, 0, 575, 576, 631, 577, 578, 579, 1006,
	0, 0, 0, 0, 0, 0, 0, 1002, 0, 0,
	0, 0, 0, 0, 1000, 1001, 1047, 1019, 1020, 1021,
	1017, 1018, 1030, 1031, 0, 0, 0, 1029, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 1071, 1035,
	0, 0, 0, 264, 265, 1111, 266, 267, 268, 269,
	270, 581, 1084, 0, 271, 1091, 272, 1090, 0, 1101,
	273, 274, 275, 276, 277, 278, 1037, 1070, 1004, 279,
	1131, 1132, 588, 0, 280, 281, 1077, 0, 1058, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1112, 304, 4270,
	1061, 1059, 1060, 1067, 1063, 1062, 1066, 306, 307, 308,
	309, 1094, 310, 1088, 1087, 1008, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 1079,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 1014, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 1102, 1103, 1026, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 1086, 0, 0, 0, 343, 0,
	344, 0, 0, 1113, 345, 346, 1099, 1100, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 1109, 0,
	1036, 356, 0, 357, 358, 359, 360, 361, 1072, 1073,
	1076, 436, 1115, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 371, 0, 1114, 370,
	1081, 1082, 0, 1042, 0, 372, 373, 1116, 1074, 1117,
	374, 375, 376, 1118, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	1110, 1119, 388, 389, 1120, 0, 390, 0, 0, 0,
	391, 392, 1065, 1064, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 1121, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 1122, 423, 1005, 254,
	1123, 433, 434, 1027, 1075, 435, 1089, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 610, 1124, 446, 1125, 1104, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 612, 459, 460, 461, 613, 462, 463, 464, 1105,
	465, 615, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 1085, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	1126, 493, 494, 495, 496, 1015, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 1068, 518, 519, 502,
	503, 520, 521, 1127, 522, 523, 524, 525, 526, 527,
	1083, 0, 528, 0, 529, 530, 531, 532, 504, 533,
	538, 1130, 534, 535, 536, 537, 1106, 0, 540, 541,
	1003, 539, 0, 542, 543, 544, 545, 546, 547, 334,
	548, 0, 549, 1095, 1096, 1097, 1098, 0, 558, 0,
	550, 551, 552, 1107, 553, 1108, 1025, 554, 555, 556,
	557, 0, 4269, 560, 0, 1009, 561, 562, 563, 565,
	566, 564, 567, 1069, 568, 0, 0, 569, 570, 571,
	627, 1092, 1129, 0, 573, 572, 574, 630, 0, 0,
	0, 0, 575, 576, 631, 577, 578, 579, 1006, 0,
	0, 0, 0, 0, 0, 0, 1002, 0, 0, 0,
	0, 0, 0, 1000, 1001, 1047, 1019, 1020, 1021, 1017,
	1018, 1030, 1031, 0, 0, 0, 1029, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1071, 1035, 0,
	0, 0, 264, 265, 1111, 266, 267, 268, 269, 270,
	4268, 1084, 0, 271, 1091, 272, 1090, 0, 1101, 273,
	274, 275, 276, 277, 278, 1037, 1070, 1004, 279, 1131,
	1132, 588, 0, 280, 281, 1077, 0, 1058, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1112, 304, 4270, 1061,
	1059, 1060, 1067, 1063, 1062, 1066, 306, 307, 308, 309,
	1094, 310, 1088, 1087, 1008, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1079, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1014, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1102, 1103, 1026, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1086, 0, 0, 0, 343, 0, 344,
	0, 0, 1113, 345, 346, 1099, 1100, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1109, 0, 1036,
	356, 0, 357, 358, 359, 360, 361, 1072, 1073, 1076,
	436, 1115, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 371, 0, 1114, 370, 1081,
	1082, 0, 1042, 0, 372, 373, 1116, 1074, 1117, 374,
	375, 376, 1118, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 1110,
	1119, 388, 389, 1120, 0, 390, 0, 0, 0, 391,
	392, 1065, 1064, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 1121, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 1122, 423, 1005, 254, 1123,
	433, 434, 1027, 1075, 435, 1089, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 610, 1124, 446, 1125, 1104, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 1105, 465,
	615, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 1085, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 1126,
	493, 494, 495, 496, 1015, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 1068, 518, 519, 502, 503,
	520, 521, 1127, 522, 523, 524, 525, 526, 527, 1083,
	0, 528, 0, 529, 530, 531, 532, 504, 533, 538,
	1130, 534, 535, 536, 537, 1106, 0, 540, 541, 1003,
	539, 0, 542, 543, 544, 545, 546, 547, 334, 548,
	0, 549, 1095, 1096, 1097, 1098, 0, 558, 0, 550,
	551, 552, 1107, 553, 1108, 1025, 554, 555, 556, 557,
	0, 4269, 560, 0, 1009, 561, 562, 563, 565, 566,
	564, 567, 1069, 568, 0, 0, 569, 570, 571, 627,
	1092, 1129, 0, 573, 572, 574, 630, 0, 0, 0,
	0, 575, 576, 631, 577, 578, 579, 1006, 0, 0,
	0, 0, 0, 0, 0, 1002, 0, 0, 0, 0,
	0, 0, 1000, 1001, 1047, 1019, 1020, 1021, 1017, 1018,
	1030, 1031, 0, 0, 0, 1029, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 1071, 1035, 0, 0,
	0, 264, 265, 1111, 266, 267, 268, 269, 270, 581,
	1084, 0, 271, 1091, 272, 1090, 0, 1101, 273, 274,
	275, 276, 277, 278, 1037, 1070, 1004, 279, 1131, 1132,
	588, 0, 280, 281, 1077, 0, 1058, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1112, 3963, 305, 1061, 1059,
	1060, 1067, 1063, 1062, 1066, 306, 307, 308, 309, 1094,
	310, 1088, 1087, 1008, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 1079, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 1014,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	1102, 1103, 1026, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 1086, 0, 0, 0, 343, 0, 344, 0,
	0, 1113, 345, 346, 1099, 1100, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 1109, 0, 3964, 356,
	0, 357, 358, 359, 360, 361, 1072, 1073, 1076, 436,
	1115, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 0, 1114, 370, 1081, 1082,
	0, 1042, 0, 372, 373, 1116, 1074, 1117, 374, 375,
	376, 1118, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 1110, 1119,
	388, 389, 1120, 0, 390, 0, 0, 0, 391, 392,
	1065, 1064, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 1121, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 1122, 423, 1005, 254, 1123, 433,
	434, 1027, 1075, 435, 1089, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 1124, 446, 1125, 1104, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 1105, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 1085, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 1126, 493,
	494, 495, 3962, 1015, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 1068, 518, 519, 502, 503, 520,
	521, 1127, 522, 523, 524, 525, 526, 527, 1083, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 1130,
	534, 535, 536, 537, 1106, 0, 540, 541, 1003, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 1095, 1096, 1097, 1098, 0, 558, 0, 550, 551,
	552, 1107, 553, 1108, 1025, 554, 555, 556, 557, 0,
	559, 560, 0, 1009, 561, 562, 563, 565, 566, 564,
	567, 1069, 568, 0, 0, 569, 570, 571, 627, 1092,
	1129, 0, 573, 572, 574, 630, 0, 0, 0, 0,
	575, 576, 631, 577, 578, 579, 1006, 0, 0, 0,
	0, 0, 0, 0, 1002, 0, 0, 0, 0, 0,
	0, 1000, 1001, 1047, 1019, 1020, 1021, 2900, 2901, 1030,
	1031, 0, 0, 0, 1029, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1071, 1035, 0, 0, 0,
	264, 265, 1111, 266, 267, 268, 269, 270, 581, 1084,
	0, 271, 1091, 272, 1090, 0, 1101, 273, 274, 275,
	276, 277, 278, 1037, 1070, 1004, 279, 1131, 1132, 588,
	0, 280, 281, 1077, 0, 1058, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1112, 304, 305, 1061, 1059, 1060,
	1067, 1063, 1062, 1066, 306, 307, 308, 309, 1094, 310,
	1088, 1087, 1008, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1079, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1014, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1102,
	1103, 1026, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1086, 0, 0, 0, 343, 0, 344, 0, 0,
	1113, 345, 346, 1099, 1100, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1109, 0, 1036, 356, 0,
	357, 358, 359, 360, 361, 1072, 1073, 1076, 436, 1115,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 371, 0, 1114, 370, 1081, 1082, 0,
	1042, 0, 372, 373, 1116, 1074, 1117, 374, 375, 376,
	1118, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 1110, 1119, 388,
	389, 1120, 0, 390, 0, 0, 0, 391, 392, 1065,
	1064, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	1121, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 1122, 423, 1005, 254, 1123, 433, 434,
	1027, 1075, 435, 1089, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 610,
	1124, 446, 1125, 1104, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 1105, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 1085, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 1126, 493, 494,
	495, 496, 1015, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 1068, 518, 519, 502, 503, 520, 521,
	1127, 522, 523, 524, 525, 526, 527, 1083, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 1130, 534,
	535, 536, 537, 1106, 0, 540, 541, 1003, 539, 0,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	1095, 1096, 1097, 1098, 0, 558, 0, 550, 551, 552,
	1107, 553, 1108, 1025, 554, 555, 556, 557, 0, 559,
	560, 0, 1009, 561, 562, 563, 565, 566, 564, 567,
	1069, 568, 0, 0, 569, 570, 571, 627, 1092, 1129,
	0, 573, 572, 574, 630, 0, 0, 0, 0, 575,
	576, 631, 577, 578, 579, 1006, 0, 0, 0, 0,
	0, 0, 0, 1002, 0, 0, 0, 0, 0, 0,
	1000, 1001, 1047, 1019, 1020, 1021, 2898, 2899, 1030, 1031,
	0, 0, 0, 1029, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 1071, 1035, 0, 0, 0, 264,
	265, 1111, 266, 267, 268, 269, 270, 581, 1084, 0,
	271, 1091, 272, 1090, 0, 1101, 273, 274, 275, 276,
	277, 278, 1037, 1070, 1004, 279, 1131, 1132, 588, 0,
	280, 281, 1077, 0, 1058, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 1112, 304, 305, 1061, 1059, 1060, 1067,
	1063, 1062, 1066, 306, 307, 308, 309, 1094, 310, 1088,
	1087, 1008, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 1079, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 1014, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 1102, 1103,
	1026, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	1086, 0, 0, 0, 343, 0, 344, 0, 0, 1113,
	345, 346, 1099, 1100, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 1109, 0, 1036, 356, 0, 357,
	358, 359, 360, 361, 1072, 1073, 1076, 436, 1115, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 371, 0, 1114, 370, 1081, 1082, 0, 1042,
	0, 372, 373, 1116, 1074, 1117, 374, 375, 376, 1118,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 1110, 1119, 388, 389,
	1120, 0, 390, 0, 0, 0, 391, 392, 1065, 1064,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 1121,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 1122, 423, 1005, 254, 1123, 433, 434, 1027,
	1075, 435, 1089, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 1124,
	446, 1125, 1104, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 1105, 465, 615, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	1085, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 1126, 493, 494, 495,
	496, 1015, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 1068, 518, 519, 502, 503, 520, 521, 1127,
	522, 523, 524, 525, 526, 527, 1083, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 1130, 534, 535,
	536, 537, 1106, 0, 540, 541, 1003, 539, 0, 542,
	543, 544, 545, 546, 547, 334, 548, 0, 549, 1095,
	1096, 1097, 1098, 0, 558, 0, 550, 551, 552, 1107,
	553, 1108, 1025, 554, 555, 556, 557, 0, 559, 560,
	0, 1009, 561, 562, 563, 565, 566, 564, 567, 1069,
	568, 0, 0, 569, 570, 571, 627, 1092, 1129, 0,
	573, 572, 574, 630, 0, 0, 0, 0, 575, 576,
	631, 577, 578, 579, 1006, 0, 0, 0, 0, 0,
	0, 0, 1002, 0, 0, 0, 0, 0, 0, 1000,
	1001, 1047, 1019, 1020, 1021, 1017, 1018, 1030, 1031, 0,
	0, 0, 1029, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1071, 1035, 0, 0, 0, 264, 265,
	1111, 266, 267, 268, 269, 270, 581, 1084, 0, 271,
	1091, 272, 1090, 0, 1101, 273, 274, 275, 276, 277,
	278, 1037, 1070, 1004, 279, 1131, 1132, 588, 0, 280,
	281, 1077, 0, 1058, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1112, 304, 305, 1061, 1059, 1060, 1067, 1063,
	1062, 1066, 306, 307, 308, 309, 1094, 310, 1088, 1087,
	1008, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1079, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1014, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1102, 1103, 1026,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1086,
	0, 0, 0, 343, 0, 344, 0, 0, 1113, 345,
	346, 1099, 1100, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1109, 0, 1036, 356, 0, 357, 358,
	359, 360, 361, 1072, 1073, 1076, 436, 1115, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 371, 0, 1114, 370, 1081, 1082, 0, 1042, 0,
	372, 373, 1116, 1074, 1117, 374, 375, 376, 1118, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 1110, 1119, 388, 389, 1120,
	0, 390, 0, 0, 0, 391, 392, 1065, 1064, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 1121, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 1122, 423, 1005, 254, 1123, 433, 434, 1027, 1075,
	435, 1089, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 610, 1124, 446,
	1125, 1104, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 612, 459, 460, 461,
	613, 462, 463, 464, 1105, 465, 615, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 1085,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 1126, 493, 494, 495, 496,
	1015, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 1068, 518, 519, 502, 503, 520, 521, 1127, 522,
	523, 524, 525, 526, 527, 1083, 0, 528, 0, 529,
	530, 531, 532, 504, 533, 538, 1130, 534, 535, 536,
	537, 1106, 0, 540, 541, 1003, 539, 0, 542, 543,
	544, 545, 546, 547, 334, 548, 0, 549, 1095, 1096,
	1097, 1098, 0, 558, 0, 550, 551, 552, 1107, 553,
	1108, 1025, 554, 555, 556, 557, 0, 559, 560, 0,
	1009, 561, 562, 563, 565, 566, 564, 567, 1069, 568,
	0, 0, 569, 570, 571, 627, 1092, 1129, 0, 573,
	572, 574, 630, 0, 0, 0, 0, 575, 576, 631,
	577, 578, 579, 1006, 0, 0, 0, 0, 0, 0,
	0, 1002, 0, 0, 0, 0, 0, 0, 2260, 2261,
	1047, 1019, 1020, 1021, 1017, 1018, 1030, 1031, 0, 0,
	0, 1029, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 1071, 1035, 0, 0, 0, 264, 265, 1111,
	266, 267, 268, 269, 270, 581, 1084, 0, 271, 1091,
	272, 1090, 0, 1101, 273, 274, 275, 276, 277, 278,
	1037, 1070, 0, 279, 1131, 1132, 588, 0, 280, 281,
	1077, 0, 1058, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 1112, 304, 305, 1061, 1059, 1060, 1067, 1063, 1062,
	1066, 306, 307, 308, 309, 1094, 310, 1088, 1087, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 1079, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 1014, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 1102, 1103, 1026, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 1086, 0,
	0, 0, 343, 0, 344, 0, 0, 1113, 345, 346,
	1099, 1100, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 1109, 0, 1036, 356, 0, 357, 358, 359,
	360, 361, 1072, 1073, 1076, 436, 1115, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 0, 1114, 370, 1081, 1082, 0, 1042, 0, 372,
	373, 1116, 1074, 1117, 374, 375, 376, 1118, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 1110, 1119, 388, 389, 1120, 0,
	390, 0, 0, 0, 391, 392, 1065, 1064, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 1121, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	1122, 423, 0, 254, 1123, 433, 434, 1027, 1075, 435,
	1089, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 610, 1124, 446, 1125,
	1104, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 1105, 465, 615, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 1085, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 1126, 493, 494, 495, 496, 1015,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	1068, 518, 519, 502, 503, 520, 521, 1127, 522, 523,
	524, 525, 526, 527, 1083, 0, 528, 0, 529, 530,
	531, 532, 504, 533, 538, 1130, 534, 535, 536, 537,
	1106, 0, 540, 541, 0, 539, 0, 542, 543, 544,
	545, 546, 547, 334, 548, 0, 549, 1095, 1096, 1097,
	1098, 0, 558, 0, 550, 551, 552, 1107, 553, 1108,
	1025, 554, 555, 556, 557, 0, 559, 560, 0, 0,
	561, 562, 563, 565, 566, 564, 567, 1069, 568, 0,
	0, 569, 570, 571, 627, 1092, 1129, 0, 573, 572,
	574, 630, 0, 0, 0, 0, 575, 576, 631, 577,
	578, 579, 1047, 1019, 1020, 1021, 1017, 1018, 1030, 0,
	2480, 0, 0, 0, 0, 0, 0, 2478, 2479, 255,
	257, 256, 258, 259, 260, 261, 1031, 262, 263, 0,
	1029, 0, 0, 0, 1071, 1035, 0, 0, 0, 264,
	265, 1111, 266, 267, 268, 269, 270, 581, 1084, 0,
	271, 1091, 272, 1090, 0, 1101, 273, 274, 275, 276,
	277, 278, 1037, 1070, 0, 279, 1131, 1132, 588, 0,
	280, 281, 1077, 0, 1058, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 1112, 304, 305, 1061, 1059, 1060, 1067,
	1063, 1062, 1066, 306, 307, 308, 309, 1094, 310, 1088,
	1087, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 1079, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 1014, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 1102, 1103,
	1026, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	1086, 0, 0, 0, 343, 0, 344, 0, 0, 1113,
	345, 346, 1099, 1100, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 1109, 0, 1036, 356, 0, 357,
	358, 359, 360, 361, 1072, 1073, 1076, 436, 1115, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 371, 0, 1114, 370, 1081, 1082, 0, 1042,
	0, 372, 373, 1116, 1074, 1117, 374, 375, 376, 1118,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 1110, 1119, 388, 389,
	1120, 0, 390, 0, 0, 0, 391, 392, 1065, 1064,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 1121,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 1122, 423, 0, 254, 1123, 433, 434, 1027,
	1075, 435, 1089, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 1124,
	446, 1125, 1104, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 1105, 465, 615, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	1085, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 1126, 493, 494, 495,
	496, 2893, 2894, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 1068, 518, 519, 502, 503, 520, 521, 1127,
	522, 523, 524, 525, 526, 527, 1083, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 1130, 534, 535,
	536, 537, 1106, 0, 540, 541, 0, 539, 0, 542,
	543, 544, 545, 546, 547, 334, 548, 0, 549, 1095,
	1096, 1097, 1098, 0, 558, 0, 550, 551, 552, 1107,
	553, 1108, 1025, 554, 555, 556, 557, 0, 559, 560,
	0, 0, 561, 562, 563, 565, 566, 564, 567, 1069,
	568, 0, 0, 569, 570, 571, 627, 1092, 1129, 0,
	573, 572, 574, 630, 0, 0, 0, 0, 575, 576,
	631, 577, 578, 579, 1047, 1019, 1020, 1021, 1017, 1018,
	1030, 0, 0, 0, 0, 0, 0, 0, 0, 1965,
	1966, 255, 257, 256, 258, 259, 260, 261, 1031, 262,
	263, 0, 1029, 0, 0, 0, 1071, 1035, 0, 0,
	0, 264, 265, 1111, 266, 267, 268, 269, 270, 0,
	1084, 0, 271, 1091, 272, 1090, 0, 1101, 273, 274,
	275, 276, 277, 278, 1037, 1070, 1004, 279, 1131, 1132,
	588, 0, 280, 281, 1077, 0, 1058, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1112, 304, 4270, 1061, 1059,
	1060, 1067, 1063, 1062, 1066, 306, 307, 308, 309, 1094,
	310, 1088, 1087, 1008, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 1079, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 1014,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	1102, 1103, 1026, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 1086, 0, 0, 0, 343, 0, 344, 0,
	0, 1113, 345, 346, 1099, 1100, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 1109, 0, 1036, 356,
	0, 357, 358, 359, 360, 361, 1072, 1073, 1076, 436,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 0, 1114, 370, 1081, 1082,
	0, 1042, 0, 372, 373, 0, 1074, 0, 374, 375,
	376, 1118, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 1110, 1119,
	388, 389, 0, 0, 390, 0, 0, 0, 391, 392,
	1065, 1064, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 1121, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 1122, 423, 1005, 254, 0, 433,
	434, 1027, 1075, 435, 1089, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 1124, 446, 1125, 1104, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 1105, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 1085, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 1126, 493,
	494, 495, 496, 1015, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 1068, 518, 519, 502, 503, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 1083, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 1130,
	534, 535, 536, 537, 1106, 0, 540, 541, 1003, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 1095, 1096, 1097, 1098, 0, 558, 0, 550, 551,
	552, 1107, 553, 1108, 1025, 554, 555, 556, 557, 0,
	4269, 560, 0, 1009, 561, 562, 563, 565, 566, 564,
	567, 1069, 568, 0, 0, 569, 570, 571, 627, 1092,
	1129, 0, 573, 572, 574, 630, 0, 0, 0, 0,
	575, 576, 631, 577, 578, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 993, 0, 1169, 0,
	0, 1000, 1001, 0, 0, 0, 0, 0, 0, 0,
	1031, 0, 0, 0, 1029, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	1071, 0, 0, 0, 0, 264, 265, 1111, 266, 267,
	268, 269, 270, 581, 582, 0, 271, 583, 272, 584,
	0, 585, 273, 274, 275, 276, 277, 278, 0, 1070,
	0, 279, 586, 587, 588, 0, 280, 281, 1077, 0,
	1058, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1112,
	304, 305, 1061, 1059, 1060, 1067, 1063, 1062, 1066, 306,
	307, 308, 309, 0, 310, 590, 591, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 592, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 1102, 1103, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 595, 0, 0, 0,
	343, 0, 344, 0, 0, 1113, 345, 346, 596, 597,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	1109, 0, 599, 356, 0, 357, 358, 359, 360, 361,
	1072, 1073, 1076, 436, 1115, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 0,
	1114, 370, 603, 604, 0, 605, 0, 372, 373, 1116,
	1074, 1117, 374, 375, 376, 1118, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 1155, 384, 386, 385,
	0, 387, 1110, 1119, 388, 389, 1120, 0, 390, 0,
	0, 0, 391, 392, 1065, 1064, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 1121, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 1122, 423,
	0, 254, 1123, 433, 434, 0, 1075, 435, 609, 437,
	438, 0, 0, 439, 0, 0, 1161, 441, 442, 443,
	0, 0, 444, 445, 610, 1124, 446, 1125, 1104, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 1105, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 616, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 1126, 493, 494, 495, 496, 617, 1163, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 215, 513, 514, 512, 515, 516, 517, 1068, 518,
	519, 502, 503, 520, 521, 1127, 522, 523, 524, 525,
	526, 527, 618, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 619, 534, 535, 536, 537, 1106, 0,
	540, 541, 0, 539, 217, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 621, 622, 623, 624, 0,
	558, 0, 550, 551, 552, 1107, 553, 1108, 0, 554,
	555, 556, 557, 0, 559, 560, 0, 0, 561, 562,
	563, 565, 566, 564, 567, 1069, 568, 0, 0, 569,
	570, 571, 1517, 628, 629, 0, 573, 572, 574, 630,
	0, 1169, 0, 209, 575, 576, 631, 577, 578, 579,
	0, 0, 210, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 1159, 1071, 1846, 0, 0, 0, 264, 265,
	1111, 266, 267, 268, 269, 270, 581, 582, 0, 271,
	583, 272, 584, 0, 585, 273, 274, 275, 276, 277,
	278, 0, 1070, 0, 279, 586, 587, 588, 0, 280,
	281, 1077, 0, 1058, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1112, 304, 305, 1061, 1059, 1060, 1067, 1063,
	1062, 1066, 306, 307, 308, 309, 0, 310, 590, 591,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 592, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1102, 1103, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 595,
	0, 0, 0, 343, 0, 344, 0, 0, 1113, 345,
	346, 596, 597, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1109, 0, 599, 356, 0, 357, 358,
	359, 360, 361, 1072, 1073, 1076, 436, 1115, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 371, 0, 1114, 370, 603, 604, 0, 605, 0,
	372, 373, 1116, 1074, 1117, 374, 375, 376, 1118, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 1155,
	384, 386, 385, 0, 387, 1110, 1119, 388, 389, 1120,
	0, 390, 0, 0, 0, 391, 392, 1065, 1064, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 1121, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 1122, 423, 0, 254, 1123, 433, 434, 0, 1075,
	435, 609, 437, 438, 0, 0, 439, 0, 0, 1161,
	441, 442, 443, 0, 0, 444, 445, 610, 1124, 446,
	1125, 1104, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 612, 459, 460, 461,
	613, 462, 463, 464, 1105, 465, 615, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 616,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 1126, 493, 494, 495, 496,
	617, 1163, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 215, 513, 514, 512, 515, 516,
	517, 1068, 518, 519, 502, 503, 520, 521, 1127, 522,
	523, 524, 525, 526, 527, 618, 0, 528, 0, 529,
	530, 531, 532, 504, 533, 538, 619, 534, 535, 536,
	537, 1106, 0, 540, 541, 0, 539, 217, 542, 543,
	544, 545, 546, 547, 334, 548, 0, 549, 621, 622,
	623, 624, 0, 558, 0, 550, 551, 552, 1107, 553,
	1108, 0, 554, 555, 556, 557, 0, 559, 560, 0,
	0, 561, 562, 563, 565, 566, 564, 567, 1069, 568,
	0, 0, 569, 570, 571, 1517, 628, 629, 0, 573,
	572, 574, 630, 0, 0, 0, 209, 575, 576, 631,
	577, 578, 579, 0, 0, 210, 0, 0, 0, 3077,
	0, 1169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1159, 0, 1846, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1071, 0, 0, 0, 0, 264, 265,
	1111, 266, 267, 268, 269, 270, 581, 582, 0, 271,
	583, 272, 584, 0, 585, 273, 274, 275, 276, 277,
	278, 0, 1070, 0, 279, 586, 587, 588, 0, 280,
	281, 1077, 0, 1058, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1112, 304, 305, 1061, 1059, 1060, 1067, 1063,
	1062, 1066, 306, 307, 308, 309, 0, 310, 590, 591,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 592, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1102, 1103, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 595,
	0, 0, 0, 343, 0, 344, 0, 0, 1113, 345,
	346, 596, 597, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1109, 0, 599, 356, 0, 357, 358,
	359, 360, 361, 1072, 1073, 1076, 436, 1115, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 371, 0, 1114, 370, 603, 604, 0, 605, 0,
	372, 373, 1116, 1074, 1117, 374, 375, 376, 1118, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 1155,
	384, 386, 385, 0, 387, 1110, 1119, 388, 389, 1120,
	0, 390, 0, 0, 0, 391, 392, 1065, 1064, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 1121, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 1122, 423, 0, 254, 1123, 433, 434, 0, 1075,
	435, 609, 437, 438, 0, 0, 439, 0, 0, 1161,
	441, 442, 443, 0, 0, 444, 445, 610, 1124, 446,
	1125, 1104, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 612, 459, 460, 461,
	613, 462, 463, 464, 1105, 465, 615, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 616,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 1126, 493, 494, 495, 496,
	617, 1163, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 1068, 518, 519, 502, 503, 520, 521, 1127, 522,
	523, 524, 525, 526, 527, 618, 0, 528, 0, 529,
	530, 531, 532, 504, 533, 538, 619, 534, 535, 536,
	537, 1106, 0, 540, 541, 0, 539, 0, 542, 543,
	544, 545, 546, 547, 334, 548, 0, 549, 621, 622,
	623, 624, 0, 558, 0, 550, 551, 552, 1107, 553,
	1108, 0, 554, 555, 556, 557, 0, 559, 560, 0,
	0, 561, 562, 563, 565, 566, 564, 567, 1069, 568,
	0, 0, 569, 570, 571, 627, 628, 629, 0, 573,
	572, 574, 630, 0, 1151, 0, 1169, 575, 576, 631,
	577, 578, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 1159, 0, 1157, 1071, 0,
	0, 0, 0, 264, 265, 1111, 266, 267, 268, 269,
	270, 581, 582, 0, 271, 583, 272, 584, 0, 585,
	273, 274, 275, 276, 277, 278, 0, 1070, 0, 279,
	586, 587, 588, 0, 280, 281, 1077, 0, 1058, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1112, 304, 305,
	1061, 1059, 1060, 1067, 1063, 1062, 1066, 306, 307, 308,
	309, 0, 310, 590, 591, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 592, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 1102, 1103, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 595, 0, 0, 0, 343, 0,
	344, 0, 0, 1113, 345, 346, 596, 597, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 1109, 0,
	599, 356, 0, 357, 358, 359, 360, 361, 1072, 1073,
	1076, 436, 1115, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 371, 0, 1114, 370,
	603, 604, 0, 605, 0, 372, 373, 1116, 1074, 1117,
	374, 375, 376, 1118, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 1155, 384, 386, 385, 0, 387,
	1110, 1119, 388, 389, 1120, 0, 390, 0, 0, 0,
	391, 392, 1065, 1064, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 1121, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 1122, 423, 0, 254,
	1123, 433, 434, 0, 1075, 435, 609, 437, 438, 0,
	0, 439, 0, 0, 1161, 441, 442, 443, 0, 0,
	444, 445, 610, 1124, 446, 1125, 1104, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 612, 459, 460, 461, 613, 462, 463, 464, 1105,
	465, 615, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 616, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	1126, 493, 494, 495, 496, 617, 1163, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 1068, 518, 519, 502,
	503, 520, 521, 1127, 522, 523, 524, 525, 526, 527,
	618, 0, 528, 0, 529, 530, 531, 532, 504, 533,
	538, 619, 534, 535, 536, 537, 1106, 0, 540, 541,
	0, 539, 0, 542, 543, 544, 545, 546, 547, 334,
	548, 0, 549, 621, 622, 623, 624, 0, 558, 0,
	550, 551, 552, 1107, 553, 1108, 0, 554, 555, 556,
	557, 0, 559, 560, 0, 0, 561, 562, 563, 565,
	566, 564, 567, 1069, 568, 0, 0, 569, 570, 571,
	627, 628, 629, 0, 573, 572, 574, 630, 0, 1169,
	0, 0, 575, 576, 631, 577, 578, 579, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	1159, 1071, 1157, 0, 0, 0, 264, 265, 1111, 266,
	267, 268, 269, 270, 581, 582, 0, 271, 583, 272,
	584, 0, 585, 273, 274, 275, 276, 277, 278, 0,
	1070, 0, 279, 586, 587, 588, 0, 280, 281, 1077,
	0, 1058, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1112, 304, 305, 1061, 1059, 1060, 1067, 1063, 1062, 1066,
	306, 307, 308, 309, 0, 310, 590, 591, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 592, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1102, 1103, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 595, 0, 0,
	0, 343, 0, 344, 0, 0, 1113, 345, 346, 596,
	597, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1109, 0, 599, 356, 0, 357, 358, 359, 360,
	361, 1072, 1073, 1076, 436, 1115, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 1114, 370, 603, 604, 0, 605, 0, 372, 373,
	1116, 1074, 1117, 374, 375, 376, 1118, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 1155, 384, 386,
	385, 0, 387, 1110, 1119, 388, 389, 1120, 0, 390,
	0, 0, 0, 391, 392, 1065, 1064, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1121, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1122,
	423, 0, 254, 1123, 433, 434, 0, 1075, 435, 609,
	437, 438, 0, 0, 439, 0, 0, 1161, 441, 442,
	443, 0, 0, 444, 445, 610, 1124, 446, 1125, 1104,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 1105, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 616, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 1126, 493, 494, 495, 496, 617, 1163,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 1068,
	518, 519, 502, 503, 520, 521, 1127, 522, 523, 524,
	525, 526, 527, 618, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 619, 534, 535, 536, 537, 1106,
	0, 540, 541, 0, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 621, 622, 623, 624,
	0, 558, 0, 550, 551, 552, 1107, 553, 1108, 0,
	554, 555, 556, 557, 0, 559, 560, 0, 0, 561,
	562, 563, 565, 566, 564, 567, 1069, 568, 0, 0,
	569, 570, 571, 627, 628, 629, 0, 573, 572, 574,
	630, 0, 1169, 0, 0, 575, 576, 631, 577, 578,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 1159, 1071, 1157, 0, 0, 0, 264,
	265, 1111, 266, 267, 268, 269, 270, 581, 582, 0,
	271, 583, 272, 584, 0, 585, 273, 274, 275, 276,
	277, 278, 0, 1070, 0, 279, 586, 587, 588, 0,
	280, 281, 1077, 0, 1058, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 1112, 304, 305, 1061, 1059, 1060, 1067,
	1063, 1062, 1066, 306, 307, 308, 309, 0, 310, 590,
	591, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 592, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 1102, 1103,
	0, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	595, 0, 0, 0, 343, 0, 344, 0, 0, 1113,
	345, 346, 596, 597, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 1109, 0, 599, 356, 0, 357,
	358, 359, 360, 361, 1072, 1073, 1076, 436, 1115, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 371, 0, 1114, 370, 603, 604, 0, 605,
	0, 372, 373, 1116, 1074, 1117, 374, 375, 376, 1118,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 1110, 1119, 388, 389,
	1120, 0, 390, 0, 0, 0, 391, 392, 1065, 1064,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 1121,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 1122, 423, 0, 254, 1123, 433, 434, 0,
	1075, 435, 609, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 1124,
	446, 1125, 1104, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 1105, 465, 615, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	616, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 1126, 493, 494, 495,
	496, 617, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 1068, 518, 519, 502, 503, 520, 521, 1127,
	522, 523, 524, 525, 526, 527, 618, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 619, 534, 535,
	536, 537, 1106, 0, 540, 541, 0, 539, 0, 542,
	543, 544, 545, 546, 547, 334, 548, 0, 549, 621,
	622, 623, 624, 0, 558, 0, 550, 551, 552, 1107,
	553, 1108, 0, 554, 555, 556, 557, 0, 559, 560,
	0, 0, 561, 562, 563, 565, 566, 564, 567, 1069,
	568, 0, 0, 569, 570, 571, 627, 628, 629, 0,
	573, 572, 574, 630, 1169, 0, 0, 0, 575, 576,
	631, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 1071, 0, 3557, 0,
	0, 264, 265, 1111, 266, 267, 268, 269, 270, 581,
	582, 0, 271, 583, 272, 584, 0, 585, 273, 274,
	275, 276, 277, 278, 0, 1070, 0, 279, 586, 587,
	588, 0, 280, 281, 1077, 0, 1058, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1112, 304, 305, 1061, 1059,
	1060, 1067, 1063, 1062, 1066, 306, 307, 308, 309, 0,
	310, 590, 591, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 592,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	1102, 1103, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 595, 0, 0, 0, 343, 0, 344, 0,
	0, 1113, 345, 346, 596, 597, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 1109, 0, 599, 356,
	0, 357, 358, 359, 360, 361, 1072, 1073, 1076, 436,
	1115, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 0, 1114, 370, 603, 604,
	0, 605, 0, 372, 373, 1116, 1074, 1117, 374, 375,
	376, 1118, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 1110, 1119,
	388, 389, 1120, 0, 390, 0, 0, 0, 391, 392,
	1065, 1064, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 1121, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 1122, 423, 0, 254, 1123, 433,
	434, 0, 1075, 435, 609, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 1124, 446, 1125, 1104, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 1105, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 616, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 1126, 493,
	494, 495, 496, 617, 1163, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 1068, 518, 519, 502, 503, 520,
	521, 1127, 522, 523, 524, 525, 526, 527, 618, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 619,
	534, 535, 536, 537, 1106, 0, 540, 541, 0, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 621, 622, 623, 624, 0, 558, 0, 550, 551,
	552, 1107, 553, 1108, 0, 554, 555, 556, 557, 0,
	559, 560, 0, 0, 561, 562, 563, 565, 566, 564,
	567, 1069, 568, 0, 0, 569, 570, 571, 627, 628,
	629, 0, 573, 572, 574, 630, 0, 993, 0, 1359,
	575, 576, 631, 577, 578, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	1745, 580, 0, 0, 0, 0, 264, 265, 1111, 266,
	267, 268, 269, 270, 581, 582, 0, 271, 583, 272,
	584, 0, 585, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 586, 587, 588, 0, 280, 281, 589,
	0, 1325, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1112, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 590, 591, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 592, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 593, 594, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 595, 0, 0,
	0, 343, 0, 344, 0, 0, 1113, 345, 346, 596,
	597, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 598, 0, 599, 356, 0, 357, 358, 359, 360,
	361, 600, 601, 602, 436, 1115, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 371,
	0, 1114, 370, 603, 604, 0, 605, 0, 372, 373,
	1116, 606, 1117, 374, 375, 376, 1118, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 607, 1119, 388, 389, 1120, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1121, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1122,
	423, 0, 0, 1123, 433, 434, 0, 608, 435, 609,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 1124, 446, 1125, 611,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 614, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 616, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 1126, 493, 494, 495, 496, 617, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 215, 513, 514, 512, 515, 516, 517, 0,
	518, 519, 502, 503, 520, 521, 1127, 522, 523, 524,
	525, 526, 527, 618, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 619, 534, 535, 536, 537, 620,
	0, 540, 541, 0, 539, 217, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 621, 622, 623, 624,
	0, 558, 0, 550, 551, 552, 625, 553, 626, 0,
	554, 555, 556, 557, 0, 559, 560, 0, 0, 561,
	562, 563, 565, 566, 564, 567, 0, 568, 0, 0,
	569, 570, 571, 1517, 628, 629, 0, 573, 572, 574,
	630, 0, 0, 0, 209, 575, 576, 631, 577, 578,
	579, 0, 0, 210, 0, 0, 0, 1514, 0, 1359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 580, 0, 0, 0, 0, 264, 265, 1111, 266,
	267, 268, 269, 270, 581, 582, 0, 271, 583, 272,
	584, 0, 585, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 586, 587, 588, 0, 280, 281, 589,
	0, 1325, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1112, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 590, 591, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 592, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 593, 594, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 595, 0, 0,
	0, 343, 0, 344, 0, 0, 1113, 345, 346, 596,
	597, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 598, 0, 599, 356, 0, 357, 358, 359, 360,
	361, 600, 601, 602, 436, 1115, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 371,
	0, 1114, 370, 603, 604, 0, 605, 0, 372, 373,
	1116, 606, 1117, 374, 375, 376, 1118, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 607, 1119, 388, 389, 1120, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1121, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1122,
	423, 0, 0, 1123, 433, 434, 0, 608, 435, 609,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 1124, 446, 1125, 611,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 614, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 616, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 1126, 493, 494, 495, 496, 617, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 215, 513, 514, 512, 515, 516, 517, 0,
	518, 519, 502, 503, 520, 521, 1127, 522, 523, 524,
	525, 526, 527, 618, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 619, 534, 535, 536, 537, 620,
	0, 540, 541, 0, 539, 217, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 621, 622, 623, 624,
	0, 558, 0, 550, 551, 552, 625, 553, 626, 0,
	554, 555, 556, 557, 0, 559, 560, 0, 0, 561,
	562, 563, 565, 566, 564, 567, 0, 568, 0, 0,
	569, 570, 571, 1517, 628, 629, 0, 573, 572, 574,
	630, 0, 0, 0, 209, 575, 576, 631, 577, 578,
	579, 1359, 1358, 210, 0, 0, 0, 1356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 179, 262, 263, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 0, 264, 265,
	1111, 266, 267, 268, 269, 270, 581, 582, 0, 271,
	583, 272, 584, 0, 585, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 586, 587, 588, 0, 280,
	281, 589, 0, 1325, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1112, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 590, 591,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 592, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 593, 594, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 595,
	0, 0, 0, 343, 0, 344, 0, 0, 1113, 345,
	346, 596, 597, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 598, 0, 599, 356, 0, 357, 358,
	359, 360, 361, 600, 601, 602, 436, 1115, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 371, 0, 1114, 370, 603, 604, 0, 605, 0,
	372, 373, 1116, 606, 1117, 374, 375, 376, 1118, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 607, 1119, 388, 389, 1120,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 1121, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 1122, 423, 0, 0, 1123, 433, 434, 0, 608,
	435, 609, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 610, 1124, 446,
	1125, 611, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 612, 459, 460, 461,
	613, 462, 463, 464, 614, 465, 615, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 616,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 1126, 493, 494, 495, 496,
	617, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 0, 518, 519, 502, 503, 520, 521, 1127, 522,
	523, 524, 525, 526, 527, 618, 0, 528, 0, 529,
	530, 531, 532, 504, 533, 538, 619, 534, 535, 536,
	537, 620, 0, 540, 541, 0, 539, 0, 542, 543,
	544, 545, 546, 547, 334, 548, 0, 549, 621, 622,
	623, 624, 0, 558, 0, 550, 551, 552, 625, 553,
	626, 0, 554, 555, 556, 557, 0, 559, 560, 0,
	0, 561, 562, 563, 565, 566, 564, 567, 0, 568,
	0, 0, 569, 570, 571, 627, 628, 629, 0, 573,
	572, 574, 630, 0, 0, 0, 0, 575, 576, 631,
	577, 578, 579, 1359, 1358, 0, 0, 0, 0, 1356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 1539, 262, 263,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 0,
	264, 265, 1111, 266, 267, 268, 269, 270, 581, 582,
	0, 271, 583, 272, 584, 0, 585, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 586, 587, 588,
	0, 280, 281, 589, 0, 1325, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1112, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	590, 591, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 592, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 593,
	594, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 595, 0, 0, 0, 343, 0, 344, 0, 0,
	1113, 345, 346, 596, 597, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 598, 0, 599, 356, 0,
	357, 358, 359, 360, 361, 600, 601, 602, 436, 1115,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 371, 0, 1114, 370, 603, 604, 0,
	605, 0, 372, 373, 1116, 606, 1117, 374, 375, 376,
	1118, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 607, 1119, 388,
	389, 1120, 0, 390, 0, 0, 0, 391, 392, 0,
	0, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	1121, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 1122, 423, 0, 0, 1123, 433, 434,
	0, 608, 435, 609, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 610,
	1124, 446, 1125, 611, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 614, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 616, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 1126, 493, 494,
	495, 496, 617, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 0, 518, 519, 502, 503, 520, 521,
	1127, 522, 523, 524, 525, 526, 527, 618, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 619, 534,
	535, 536, 537, 620, 0, 540, 541, 0, 539, 0,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	621, 622, 623, 624, 0, 558, 0, 550, 551, 552,
	625, 553, 626, 0, 554, 555, 556, 557, 0, 559,
	560, 0, 0, 561, 562, 563, 565, 566, 564, 567,
	0, 568, 0, 0, 569, 570, 571, 627, 628, 629,
	0, 573, 572, 574, 630, 0, 0, 0, 0, 575,
	576, 631, 577, 578, 579, 1359, 2048, 0, 0, 0,
	0, 2049, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 3333,
	262, 263, 0, 0, 0, 0, 0, 580, 0, 0,
	0, 0, 264, 265, 1111, 266, 267, 268, 269, 270,
	581, 582, 0, 271, 583, 272, 584, 0, 585, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 586,
	587, 588, 0, 280, 281, 589, 0, 1325, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1112, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 590, 591, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	592, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 593, 594, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 595, 0, 0, 0, 343, 0, 344,
	0, 0, 1113, 345, 346, 596, 597, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 598, 0, 599,
	356, 0, 357, 358, 359, 360, 361, 600, 601, 602,
	436, 1115, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 371, 0, 1114, 370, 603,
	604, 0, 605, 0, 372, 373, 1116, 606, 1117, 374,
	375, 376, 1118, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 2047, 386, 385, 0, 387, 607,
	1119, 388, 389, 1120, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 1121, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 1122, 423, 0, 0, 1123,
	433, 434, 0, 608, 435, 609, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 610, 1124, 446, 1125, 611, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 614, 465,
	615, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 616, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 1126,
	493, 494, 495, 496, 617, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 519, 502, 503,
	520, 521, 1127, 522, 523, 524, 525, 526, 527, 618,
	0, 528, 0, 529, 530, 531, 532, 504, 533, 538,
	619, 534, 535, 536, 537, 620, 0, 540, 541, 0,
	539, 0, 542, 543, 544, 545, 546, 547, 334, 548,
	0, 549, 621, 622, 623, 624, 0, 558, 0, 550,
	551, 552, 625, 553, 626, 0, 554, 555, 556, 557,
	0, 559, 560, 0, 0, 561, 562, 563, 565, 566,
	564, 567, 0, 568, 0, 0, 569, 570, 571, 627,
	628, 629, 0, 573, 572, 574, 630, 0, 0, 0,
	0, 575, 576, 631, 577, 578, 579, 1359, 1358, 0,
	0, 0, 0, 1356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 1539, 262, 263, 0, 0, 0, 0, 0, 580,
	0, 0, 0, 0, 264, 265, 1111, 266, 267, 268,
	269, 270, 581, 582, 0, 271, 583, 272, 584, 0,
	585, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 586, 587, 588, 0, 280, 281, 589, 0, 1325,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1112, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 590, 591, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 592, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 593, 594, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 595, 0, 0, 0, 343,
	0, 344, 0, 0, 1113, 345, 346, 596, 597, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 598,
	0, 599, 356, 0, 357, 358, 359, 360, 361, 600,
	601, 602, 436, 1115, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 371, 0, 1114,
	370, 603, 604, 0, 605, 0, 372, 373, 1116, 606,
	1117, 374, 375, 376, 1118, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 607, 1119, 388, 389, 1120, 0, 390, 0, 0,
	0, 391, 392, 0, 0, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 1121, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 1122, 423, 0,
	0, 1123, 433, 434, 0, 608, 435, 609, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 1124, 446, 1125, 611, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	614, 465, 615, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 616, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 1126, 493, 494, 495, 496, 617, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 0, 518, 519,
	502, 503, 520, 521, 1127, 522, 523, 524, 525, 526,
	527, 618, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 619, 534, 535, 536, 537, 620, 0, 540,
	541, 0, 539, 0, 542, 543, 544, 545, 546, 547,
	334, 548, 0, 549, 621, 622, 623, 624, 0, 558,
	0, 550, 551, 552, 625, 553, 626, 0, 554, 555,
	556, 557, 0, 559, 560, 0, 0, 561, 562, 563,
	565, 566, 564, 567, 0, 568, 0, 0, 569, 570,
	571, 627, 628, 629, 0, 573, 572, 574, 630, 1169,
	0, 0, 0, 575, 576, 631, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1071, 0, 1523, 0, 0, 264, 265, 1111, 266,
	267, 268, 269, 270, 581, 582, 0, 271, 583, 272,
	584, 0, 585, 273, 274, 275, 276, 277, 278, 0,
	1070, 0, 279, 586, 587, 588, 0, 280, 281, 1077,
	0, 1058, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1112, 304, 305, 1061, 1059, 1060, 1067, 1063, 1062, 1066,
	306, 307, 308, 309, 0, 310, 590, 591, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 592, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1102, 1103, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 595, 0, 0,
	0, 343, 0, 344, 0, 0, 1113, 345, 346, 596,
	597, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1109, 0, 599, 356, 0, 357, 358, 359, 360,
	361, 1072, 1073, 1076, 436, 1115, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 1114, 370, 603, 604, 0, 605, 0, 372, 373,
	1116, 1074, 1117, 374, 375, 376, 1118, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 1110, 1119, 388, 389, 1120, 0, 390,
	0, 0, 0, 391, 392, 1065, 1064, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1121, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1122,
	423, 0, 254, 1123, 433, 434, 0, 1075, 435, 609,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 1124, 446, 1125, 1104,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 1105, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 616, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 1126, 493, 494, 495, 496, 617, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 1068,
	518, 519, 502, 503, 520, 521, 1127, 522, 523, 524,
	525, 526, 527, 618, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 619, 534, 535, 536, 537, 1106,
	0, 540, 541, 0, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 621, 622, 623, 624,
	0, 558, 0, 550, 551, 552, 1107, 553, 1108, 0,
	554, 555, 556, 557, 0, 559, 560, 0, 0, 561,
	562, 563, 565, 566, 564, 567, 1069, 568, 0, 0,
	569, 570, 571, 627, 628, 629, 0, 573, 572, 574,
	630, 993, 0, 249, 0, 575, 576, 631, 577, 578,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 581, 582,
	0, 271, 583, 272, 584, 0, 585, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 586, 587, 588,
	0, 280, 281, 589, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	590, 591, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 592, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 593,
	594, 0, 0, 0, 0, 0, 0, 0, 340, 341,
	342, 595, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 596, 597, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 598, 0, 599, 356, 0,
	357, 358, 359, 360, 361, 600, 601, 602, 436, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 371, 0, 0, 370, 603, 604, 0,
	605, 0, 372, 373, 0, 606, 0, 374, 375, 376,
	0, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 607, 0, 388,
	389, 0, 0, 390, 0, 0, 0, 391, 392, 0,
	0, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	0, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 0, 423, 0, 0, 0, 433, 434,
	0, 608, 435, 609, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 610,
	0, 446, 0, 611, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 614, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 616, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 0, 493, 494,
	495, 496, 617, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 215, 513, 514, 512,
	515, 516, 517, 0, 518, 519, 502, 503, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 618, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 619, 534,
	535, 536, 537, 620, 0, 540, 541, 0, 539, 217,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	621, 622, 623, 624, 0, 558, 0, 550, 551, 552,
	625, 553, 626, 0, 554, 555, 556, 557, 0, 559,
	560, 0, 0, 561, 562, 563, 565, 566, 564, 567,
	0, 568, 0, 0, 569, 570, 571, 1517, 628, 629,
	0, 573, 572, 574, 630, 249, 0, 0, 209, 575,
	576, 631, 577, 578, 579, 0, 0, 210, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 580, 0, 179,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	581, 582, 0, 271, 583, 272, 584, 0, 585, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 586,
	587, 588, 0, 280, 281, 589, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 590, 591, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	592, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 593, 594, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 595, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 596, 597, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 598, 0, 599,
	356, 0, 357, 358, 359, 360, 361, 600, 601, 602,
	436, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 371, 0, 0, 370, 603,
	604, 0, 605, 0, 372, 373, 0, 606, 0, 374,
	375, 376, 0, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 607,
	0, 388, 389, 0, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 0, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 0, 423, 0, 254, 0,
	433, 434, 0, 608, 435, 609, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 610, 0, 446, 0, 611, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 614, 465,
	615, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 616, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 0,
	493, 494, 495, 496, 617, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 519, 502, 503,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 618,
	0, 528, 0, 529, 530, 531, 532, 504, 533, 538,
	619, 534, 535, 536, 537, 620, 0, 540, 541, 0,
	539, 0, 542, 543, 544, 545, 546, 547, 334, 548,
	0, 549, 621, 622, 623, 624, 0, 558, 0, 550,
	551, 552, 625, 553, 626, 0, 554, 555, 556, 557,
	0, 559, 560, 0, 0, 561, 562, 563, 565, 566,
	564, 567, 0, 568, 0, 0, 569, 570, 571, 627,
	628, 629, 0, 573, 572, 574, 630, 249, 2813, 0,
	0, 575, 576, 631, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 580,
	0, 1860, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 581, 582, 0, 271, 583, 272, 584, 0,
	585, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 586, 587, 588, 0, 280, 281, 589, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 590, 591, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 592, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 593, 594, 0, 0, 0, 0, 0,
	0, 0, 340, 341, 342, 595, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 596, 597, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 598,
	0, 599, 356, 0, 357, 358, 359, 360, 361, 600,
	601, 602, 436, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 371, 0, 0,
	370, 603, 604, 0, 605, 0, 372, 373, 0, 606,
	0, 374, 375, 376, 0, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 607, 0, 388, 389, 0, 0, 390, 0, 0,
	0, 391, 392, 0, 0, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 0, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 0, 423, 0,
	0, 0, 433, 434, 0, 608, 435, 609, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 0, 446, 0, 611, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	614, 465, 615, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 616, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 0, 493, 494, 495, 496, 617, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 0, 518, 519,
	502, 503, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 618, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 619, 534, 535, 536, 537, 620, 0, 540,
	541, 0, 539, 0, 542, 543, 544, 545, 546, 547,
	334, 548, 0, 549, 621, 622, 623, 624, 0, 558,
	0, 550, 551, 552, 625, 553, 626, 0, 554, 555,
	556, 557, 0, 559, 560, 0, 0, 561, 562, 563,
	565, 566, 564, 567, 0, 568, 0, 0, 569, 570,
	571, 627, 628, 629, 249, 573, 572, 574, 630, 0,
	0, 0, 0, 575, 576, 631, 577, 578, 579, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 580, 0, 0, 0,
	0, 264, 265, 4412, 266, 267, 268, 269, 270, 581,
	582, 0, 271, 583, 272, 584, 0, 585, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 586, 587,
	588, 0, 280, 281, 589, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 590, 591, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 592,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	593, 594, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 595, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 596, 597, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 598, 0, 599, 356,
	0, 357, 358, 359, 360, 361, 600, 601, 602, 436,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 0, 0, 370, 603, 604,
	0, 605, 0, 372, 373, 0, 606, 0, 374, 375,
	376, 0, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 607, 0,
	388, 389, 0, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 0, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 0, 423, 0, 254, 0, 433,
	434, 0, 608, 435, 609, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 0, 446, 0, 611, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 614, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 616, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 0, 493,
	494, 495, 496, 617, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 0, 518, 519, 502, 503, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 618, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 619,
	534, 535, 536, 537, 620, 0, 540, 541, 0, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 621, 622, 623, 624, 0, 558, 0, 550, 551,
	552, 625, 553, 626, 0, 554, 555, 556, 557, 0,
	559, 560, 0, 0, 561, 562, 563, 565, 566, 564,
	567, 0, 568, 0, 0, 569, 570, 571, 627, 628,
	629, 0, 573, 572, 574, 630, 0, 249, 0, 0,
	575, 576, 631, 577, 578, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 3274, 580,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 581, 582, 0, 271, 583, 272, 584, 0,
	585, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 586, 587, 588, 0, 280, 281, 589, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 590, 591, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 592, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 593, 594, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 595, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 596, 597, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 598,
	0, 599, 356, 0, 357, 358, 359, 360, 361, 600,
	601, 602, 436, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 371, 0, 0,
	370, 603, 604, 0, 605, 0, 372, 373, 0, 606,
	0, 374, 375, 376, 0, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 607, 0, 388, 389, 0, 0, 390, 0, 0,
	0, 391, 392, 0, 0, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 0, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 0, 423, 0,
	254, 0, 433, 434, 0, 608, 435, 609, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 0, 446, 0, 611, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	614, 465, 615, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 616, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 0, 493, 494, 495, 496, 617, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 0, 518, 519,
	502, 503, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 618, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 619, 534, 535, 536, 537, 620, 0, 540,
	541, 0, 539, 0, 542, 543, 544, 545, 546, 547,
	334, 548, 0, 549, 621, 622, 623, 624, 0, 558,
	0, 550, 551, 552, 625, 553, 626, 0, 554, 555,
	556, 557, 0, 559, 560, 0, 0, 561, 562, 563,
	565, 566, 564, 567, 0, 568, 0, 0, 569, 570,
	571, 627, 628, 629, 0, 573, 572, 574, 630, 0,
	249, 0, 0, 575, 576, 631, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 1459, 580, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 581, 582, 0, 271, 583,
	272, 584, 0, 585, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 586, 587, 588, 0, 280, 281,
	589, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 590, 591, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 592, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 593, 594, 0, 0,
	0, 0, 0, 0, 0, 340, 341, 342, 595, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	596, 597, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 598, 0, 599, 356, 0, 357, 358, 359,
	360, 361, 600, 601, 602, 436, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 0, 368, 369,
	371, 0, 0, 370, 603, 604, 0, 605, 0, 372,
	373, 0, 606, 0, 374, 375, 376, 0, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 607, 0, 388, 389, 0, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 0, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	0, 423, 0, 0, 0, 433, 434, 0, 608, 435,
	609, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 610, 0, 446, 0,
	611, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 614, 465, 615, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 616, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 0, 493, 494, 495, 496, 617,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	0, 518, 519, 502, 503, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 618, 0, 528, 0, 529, 530,
	531, 532, 504, 533, 538, 619, 534, 535, 536, 537,
	620, 0, 540, 541, 0, 539, 0, 542, 543, 544,
	545, 546, 547, 334, 548, 0, 549, 621, 622, 623,
	624, 0, 558, 0, 550, 551, 552, 625, 553, 626,
	0, 554, 555, 556, 557, 0, 559, 560, 0, 0,
	561, 562, 563, 565, 566, 564, 567, 0, 568, 0,
	0, 569, 570, 571, 627, 628, 629, 249, 573, 572,
	574, 630, 0, 0, 0, 0, 575, 576, 631, 577,
	578, 579, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 580,
	0, 0, 0, 0, 264, 265, 2783, 266, 267, 268,
	269, 270, 581, 582, 0, 271, 583, 272, 584, 0,
	585, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 586, 587, 588, 0, 280, 281, 589, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 590, 591, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 592, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 593, 594, 0, 0, 0, 0, 0,
	0, 0, 340, 341, 342, 595, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 596, 597, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 598,
	0, 599, 356, 0, 357, 358, 359, 360, 361, 600,
	601, 602, 436, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 371, 0, 0,
	370, 603, 604, 0, 605, 0, 372, 373, 0, 606,
	0, 374, 375, 376, 0, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 607, 0, 388, 389, 0, 0, 390, 0, 0,
	0, 391, 392, 0, 0, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 0, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 0, 423, 0,
	0, 0, 433, 434, 0, 608, 435, 609, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 0, 446, 0, 611, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	614, 465, 615, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 616, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 0, 493, 494, 495, 496, 617, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 0, 518, 519,
	502, 503, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 618, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 619, 534, 535, 536, 537, 620, 0, 540,
	541, 0, 539, 0, 542, 543, 544, 545, 546, 547,
	334, 548, 0, 549, 621, 622, 623, 624, 0, 558,
	0, 550, 551, 552, 625, 553, 626, 0, 554, 555,
	556, 557, 0, 559, 560, 0, 0, 561, 562, 563,
	565, 566, 564, 567, 0, 568, 0, 0, 569, 570,
	571, 627, 628, 629, 249, 573, 572, 574, 630, 0,
	0, 0, 0, 575, 576, 631, 577, 578, 579, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 580, 0, 0, 0,
	0, 264, 265, 3434, 266, 267, 268, 269, 270, 581,
	582, 0, 271, 583, 272, 584, 0, 585, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 586, 587,
	588, 0, 280, 281, 589, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 590, 591, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 592,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	593, 594, 0, 0, 0, 0, 0, 0, 0, 340,
	341, 342, 595, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 596, 597, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 598, 0, 599, 356,
	0, 357, 358, 359, 360, 361, 600, 601, 602, 436,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 371, 0, 0, 370, 603, 604,
	0, 605, 0, 372, 373, 0, 606, 0, 374, 375,
	376, 0, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 607, 0,
	388, 389, 0, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 0, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 0, 423, 0, 0, 0, 433,
	434, 0, 608, 435, 609, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 0, 446, 0, 611, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 614, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 616, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 0, 493,
	494, 495, 496, 617, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 0, 518, 519, 502, 503, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 618, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 619,
	534, 535, 536, 537, 620, 0, 540, 541, 0, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 621, 622, 623, 624, 0, 558, 0, 550, 551,
	552, 625, 553, 626, 0, 554, 555, 556, 557, 0,
	559, 560, 0, 0, 561, 562, 563, 565, 566, 564,
	567, 0, 568, 0, 0, 569, 570, 571, 627, 628,
	629, 0, 573, 572, 574, 630, 0, 839, 0, 719,
	575, 576, 631, 577, 578, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	2152, 580, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 581, 582, 0, 271, 583, 272,
	584, 0, 585, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 586, 587, 588, 0, 280, 281, 589,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 726, 309, 0, 310, 590, 591, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 592, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 593, 594, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 595, 0, 0,
	0, 343, 0, 344, 0, 837, 0, 345, 346, 596,
	597, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 598, 0, 599, 356, 0, 357, 358, 359, 360,
	361, 600, 601, 602, 436, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 0, 370, 603, 604, 0, 605, 0, 372, 373,
	0, 606, 0, 374, 375, 376, 0, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 607, 0, 388, 389, 0, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 0, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 0,
	423, 0, 254, 0, 433, 434, 0, 608, 435, 609,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 0, 446, 0, 611,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 614, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 616, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 0, 493, 494, 495, 496, 617, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 0,
	518, 519, 502, 503, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 618, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 619, 534, 535, 536, 537, 620,
	0, 540, 541, 0, 539, 724, 542, 543, 544, 545,
	725, 547, 334, 548, 0, 549, 621, 622, 623, 624,
	0, 558, 0, 550, 551, 552, 625, 553, 626, 0,
	554, 555, 556, 557, 0, 559, 560, 0, 0, 561,
	562, 563, 565, 566, 564, 567, 0, 568, 0, 0,
	569, 570, 571, 627, 628, 629, 0, 573, 572, 574,
	630, 0, 717, 0, 719, 575, 576, 631, 577, 578,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 729, 262,
	263, 0, 0, 0, 0, 0, 580, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 581,
	582, 0, 271, 583, 272, 584, 0, 585, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 586, 587,
	588, 0, 280, 281, 589, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 726, 309, 0,
	310, 590, 591, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 592,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	593, 594, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 595, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 596, 597, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 598, 0, 599, 356,
	0, 357, 358, 359, 360, 361, 600, 601, 602, 436,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 0, 0, 370, 603, 604,
	0, 605, 0, 372, 373, 0, 606, 0, 374, 375,
	376, 0, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 607, 0,
	388, 389, 0, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 0, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 0, 423, 0, 254, 0, 433,
	434, 0, 608, 435, 609, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 0, 446, 0, 611, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 614, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 616, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 0, 493,
	494, 495, 496, 617, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 0, 518, 519, 502, 503, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 618, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 619,
	534, 535, 536, 537, 620, 0, 540, 541, 0, 539,
	724, 542, 543, 544, 545, 725, 547, 334, 548, 0,
	549, 621, 622, 623, 624, 0, 558, 0, 550, 551,
	552, 625, 553, 626, 0, 554, 555, 556, 557, 0,
	559, 560, 0, 0, 561, 562, 563, 565, 566, 564,
	567, 0, 568, 0, 0, 569, 570, 571, 627, 628,
	629, 1897, 573, 572, 574, 630, 0, 0, 0, 0,
	575, 576, 631, 577, 578, 579, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 729, 0, 0, 0, 0, 264, 265,
	1111, 266, 267, 268, 269, 270, 0, 1903, 0, 271,
	1893, 272, 1909, 0, 1916, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 1919, 1920, 0, 0, 280,
	281, 0, 0, 1325, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1112, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 1094, 310, 1907, 1906,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1079, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 0, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 1905,
	0, 0, 0, 343, 0, 344, 0, 0, 1113, 345,
	346, 1914, 1915, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 0, 357, 358,
	359, 360, 361, 0, 0, 0, 436, 1115, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 371, 0, 1114, 370, 1900, 1901, 0, 1896, 0,
	372, 373, 1116, 0, 1117, 374, 375, 376, 1118, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 0, 1119, 388, 389, 1120,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 1121, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 1122, 423, 0, 0, 1123, 433, 434, 0, 0,
	435, 1908, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 0, 1124, 446,
	1125, 0, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 1890, 459, 460, 461,
	1891, 462, 463, 464, 0, 465, 0, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 1904,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 1126, 493, 494, 495, 496,
	0, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 0, 518, 519, 502, 503, 520, 521, 1127, 522,
	523, 524, 525, 526, 527, 1902, 0, 528, 0, 529,
	530, 531, 532, 504, 533, 538, 1918, 534, 535, 536,
	537, 0, 0, 540, 541, 0, 539, 0, 542, 543,
	544, 545, 546, 547, 334, 548, 0, 549, 1910, 1911,
	1912, 1913, 0, 558, 0, 550, 551, 552, 0, 553,
	0, 0, 554, 555, 556, 557, 0, 559, 560, 0,
	0, 561, 562, 563, 565, 566, 564, 567, 0, 568,
	0, 0, 569, 570, 571, 0, 1894, 1917, 0, 573,
	572, 574, 719, 0, 0, 0, 0, 575, 576, 0,
	577, 578, 579, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 580, 0, 0, 0, 0, 264,
	265, 1884, 266, 267, 268, 269, 270, 581, 582, 0,
	271, 583, 272, 584, 0, 585, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 586, 587, 588, 0,
	280, 281, 589, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 726, 309, 0, 310, 590,
	591, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 592, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 593, 594,
	0, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	595, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 596, 597, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 598, 0, 599, 356, 0, 357,
	358, 359, 360, 361, 600, 601, 602, 436, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 371, 0, 0, 370, 603, 604, 0, 605,
	0, 372, 373, 0, 606, 0, 374, 375, 376, 0,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 607, 0, 388, 389,
	0, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 0,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 0, 423, 0, 254, 0, 433, 434, 0,
	608, 435, 609, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 0,
	446, 0, 611, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 614, 465, 615, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	616, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 0, 493, 494, 495,
	496, 617, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 0, 518, 519, 502, 503, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 618, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 619, 534, 535,
	536, 537, 620, 0, 540, 541, 0, 539, 724, 542,
	543, 544, 545, 725, 547, 334, 548, 0, 549, 621,
	622, 623, 624, 0, 558, 0, 550, 551, 552, 625,
	553, 626, 0, 554, 555, 556, 557, 0, 559, 560,
	0, 0, 561, 562, 563, 565, 566, 564, 567, 0,
	568, 0, 0, 569, 570, 571, 627, 628, 629, 0,
	573, 572, 574, 630, 719, 0, 0, 0, 575, 576,
	631, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 729, 0, 0, 0, 0, 580, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 581,
	582, 0, 271, 583, 272, 584, 0, 585, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 586, 587,
	588, 0, 280, 281, 589, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 726, 309, 0,
	310, 590, 591, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 592,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	593, 594, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 595, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 596, 597, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 598, 0, 599, 356,
	0, 357, 358, 359, 360, 361, 600, 601, 602, 436,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 0, 0, 370, 603, 604,
	0, 605, 0, 372, 373, 0, 606, 0, 374, 375,
	376, 0, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 607, 0,
	388, 389, 0, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 0, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 0, 423, 0, 254, 0, 433,
	434, 0, 608, 435, 609, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 0, 446, 0, 611, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 614, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 616, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 0, 2192,
	494, 495, 496, 617, 497, 0, 498, 499, 505, 506,
	500, 501, 2193, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 0, 518, 519, 502, 503, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 618, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 619,
	534, 535, 536, 537, 620, 0, 540, 541, 0, 539,
	724, 542, 543, 544, 545, 725, 547, 334, 548, 0,
	549, 621, 622, 623, 624, 0, 558, 0, 550, 551,
	552, 625, 553, 626, 0, 554, 555, 2194, 557, 0,
	559, 560, 0, 0, 561, 562, 563, 565, 566, 564,
	567, 0, 568, 0, 0, 569, 570, 571, 627, 628,
	629, 0, 573, 572, 574, 630, 0, 0, 0, 0,
	575, 576, 631, 577, 578, 579, 1927, 0, 1359, 1358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 729, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	580, 0, 0, 0, 0, 264, 265, 1111, 266, 267,
	268, 269, 270, 581, 582, 0, 271, 583, 272, 584,
	0, 585, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 586, 587, 588, 0, 280, 281, 589, 0,
	1325, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1112,
	304, 305, 0, 0, 0, 0, 0, 0, 1930, 306,
	307, 308, 309, 0, 310, 590, 591, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 592, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 593, 594, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 595, 0, 0, 0,
	343, 0, 344, 0, 0, 1113, 345, 346, 596, 597,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	598, 0, 599, 356, 0, 357, 358, 359, 360, 361,
	600, 601, 602, 436, 1115, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 371, 0,
	1114, 370, 603, 604, 0, 605, 0, 372, 373, 1116,
	606, 1117, 374, 375, 376, 1118, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 607, 1119, 388, 389, 1120, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 1121, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 1122, 423,
	0, 0, 1123, 433, 434, 0, 608, 435, 609, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 610, 1124, 446, 1125, 611, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 614, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 616, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 1126, 493, 494, 495, 496, 617, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 1931, 518,
	519, 502, 503, 520, 521, 1127, 522, 523, 524, 525,
	526, 527, 618, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 619, 534, 535, 536, 537, 620, 0,
	540, 541, 0, 539, 0, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 621, 622, 623, 624, 0,
	558, 0, 550, 551, 552, 625, 553, 626, 0, 554,
	555, 556, 557, 0, 559, 560, 0, 0, 561, 562,
	563, 565, 566, 564, 567, 0, 568, 0, 0, 569,
	570, 571, 627, 628, 629, 719, 573, 572, 574, 630,
	0, 0, 0, 0, 575, 576, 631, 577, 578, 579,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 580, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	581, 582, 0, 271, 583, 272, 584, 0, 585, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 586,
	587, 588, 0, 280, 281, 589, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 726, 309,
	0, 310, 590, 591, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	592, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 593, 594, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 595, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 596, 597, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 598, 0, 599,
	356, 0, 357, 358, 359, 360, 361, 600, 601, 602,
	436, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 371, 0, 0, 370, 603,
	604, 0, 605, 0, 372, 373, 0, 606, 0, 374,
	375, 376, 0, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 607,
	0, 388, 389, 0, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 0, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 0, 423, 0, 254, 0,
	433, 434, 0, 608, 435, 609, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 610, 0, 446, 0, 611, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 614, 465,
	615, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 616, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 0,
	493, 494, 495, 496, 617, 497, 0, 498, 499, 505,
	506, 500, 501, 1923, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 519, 502, 503,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 618,
	0, 528, 0, 529, 530, 531, 532, 504, 533, 538,
	619, 534, 535, 536, 537, 620, 0, 540, 541, 0,
	539, 724, 542, 543, 544, 545, 725, 547, 334, 548,
	0, 549, 621, 622, 623, 624, 0, 558, 0, 550,
	551, 552, 625, 553, 626, 0, 554, 555, 1922, 557,
	0, 559, 560, 0, 0, 561, 562, 563, 565, 566,
	564, 567, 0, 568, 0, 0, 569, 570, 571, 627,
	628, 629, 0, 573, 572, 574, 630, 719, 0, 0,
	0, 575, 576, 631, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 729, 0, 0, 0, 0, 580,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 581, 582, 0, 271, 583, 272, 584, 0,
	585, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 586, 587, 588, 0, 280, 281, 589, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	726, 309, 0, 310, 590, 591, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 592, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 593, 594, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 595, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 596, 597, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 598,
	0, 599, 356, 0, 357, 358, 359, 360, 361, 600,
	601, 602, 436, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 371, 0, 0,
	370, 603, 604, 0, 605, 0, 372, 373, 0, 606,
	0, 374, 375, 376, 0, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 607, 0, 388, 389, 0, 0, 390, 0, 0,
	0, 391, 392, 0, 0, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 0, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 0, 423, 0,
	254, 0, 433, 434, 0, 608, 435, 609, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 0, 446, 0, 611, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	614, 465, 615, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 616, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 0, 493, 494, 495, 496, 617, 497, 0, 498,
	499, 505, 506, 500, 501, 1876, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 0, 518, 519,
	502, 503, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 618, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 619, 534, 535, 536, 537, 620, 0, 540,
	541, 0, 539, 724, 542, 543, 544, 545, 725, 547,
	334, 548, 0, 549, 621, 622, 623, 624, 0, 558,
	0, 550, 551, 552, 625, 553, 626, 0, 554, 555,
	1875, 557, 0, 559, 560, 0, 0, 561, 562, 563,
	565, 566, 564, 567, 0, 568, 0, 0, 569, 570,
	571, 627, 628, 629, 0, 573, 572, 574, 630, 1359,
	1358, 0, 0, 575, 576, 631, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 729, 0, 0, 0,
	0, 580, 0, 0, 0, 0, 264, 265, 1111, 266,
	267, 268, 269, 270, 581, 582, 0, 271, 583, 272,
	584, 0, 585, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 586, 587, 588, 0, 280, 281, 589,
	0, 1325, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1112, 304, 305, 0, 0, 0, 0, 0, 0, 1930,
	306, 307, 308, 309, 0, 310, 590, 591, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 592, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 593, 594, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 595, 0, 0,
	0, 343, 0, 344, 0, 0, 1113, 345, 346, 596,
	597, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 598, 0, 599, 356, 0, 357, 358, 359, 360,
	361, 600, 601, 602, 436, 1115, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 371,
	0, 1114, 370, 603, 604, 0, 605, 0, 372, 373,
	1116, 606, 1117, 374, 375, 376, 1118, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 607, 1119, 388, 389, 1120, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1121, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1122,
	423, 0, 0, 1123, 433, 434, 0, 608, 435, 609,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 1124, 446, 1125, 611,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 614, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 616, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 1126, 493, 494, 495, 496, 617, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 1931,
	518, 519, 502, 503, 520, 521, 1127, 522, 523, 524,
	525, 526, 527, 618, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 619, 534, 535, 536, 537, 620,
	0, 540, 541, 0, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 621, 622, 623, 624,
	0, 558, 0, 550, 551, 552, 625, 553, 626, 0,
	554, 555, 556, 557, 0, 559, 560, 0, 0, 561,
	562, 563, 565, 566, 564, 567, 0, 568, 0, 0,
	569, 570, 571, 627, 628, 629, 0, 573, 572, 574,
	630, 0, 0, 0, 0, 575, 576, 631, 577, 578,
	579, 1359, 1358, 0, 0, 0, 0, 1356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 0, 264, 265,
	1111, 266, 267, 268, 269, 270, 581, 582, 0, 271,
	583, 272, 584, 0, 585, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 586, 587, 588, 0, 280,
	281, 589, 0, 1325, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1112, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 590, 591,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 592, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 593, 594, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 595,
	0, 0, 0, 343, 0, 344, 0, 0, 1113, 345,
	346, 596, 597, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 598, 0, 599, 356, 0, 357, 358,
	359, 360, 361, 600, 601, 602, 436, 1115, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 371, 0, 1114, 370, 603, 604, 0, 605, 0,
	372, 373, 1116, 606, 1117, 374, 375, 376, 1118, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 607, 1119, 388, 389, 1120,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 1121, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 1122, 423, 0, 0, 1123, 433, 434, 3607, 608,
	435, 609, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 610, 1124, 446,
	1125, 611, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 612, 459, 460, 461,
	613, 462, 463, 464, 614, 465, 615, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 616,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 1126, 493, 494, 495, 496,
	617, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 0, 518, 519, 502, 503, 520, 521, 1127, 522,
	523, 524, 525, 526, 527, 618, 0, 528, 0, 529,
	530, 531, 532, 504, 533, 538, 619, 534, 535, 536,
	537, 620, 0, 540, 541, 0, 539, 0, 542, 543,
	544, 545, 546, 547, 334, 548, 0, 549, 621, 622,
	623, 624, 0, 558, 0, 550, 551, 552, 625, 553,
	626, 0, 554, 555, 556, 557, 0, 559, 560, 0,
	0, 561, 562, 563, 565, 566, 564, 567, 0, 568,
	0, 0, 569, 570, 571, 627, 628, 629, 0, 573,
	572, 574, 630, 0, 0, 0, 0, 575, 576, 631,
	577, 578, 579, 1359, 1358, 0, 0, 0, 0, 1356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 0,
	264, 265, 1111, 266, 267, 268, 269, 270, 581, 582,
	0, 271, 583, 272, 584, 0, 585, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 586, 587, 588,
	0, 280, 281, 589, 0, 1325, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1112, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	590, 591, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 592, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 593,
	594, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 595, 0, 0, 0, 343, 0, 344, 0, 0,
	1113, 345, 346, 596, 597, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 598, 0, 599, 356, 0,
	357, 358, 359, 360, 361, 600, 601, 602, 436, 1115,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 371, 0, 1114, 370, 603, 604, 0,
	605, 0, 372, 373, 1116, 606, 1117, 374, 375, 376,
	1118, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 607, 1119, 388,
	389, 1120, 0, 390, 0, 0, 0, 391, 392, 0,
	0, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	1121, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 1122, 423, 0, 0, 1123, 433, 434,
	3246, 608, 435, 609, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 610,
	1124, 446, 1125, 611, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 614, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 616, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 1126, 493, 494,
	495, 496, 617, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 0, 518, 519, 502, 503, 520, 521,
	1127, 522, 523, 524, 525, 526, 527, 618, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 619, 534,
	535, 536, 537, 620, 0, 540, 541, 0, 539, 0,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	621, 622, 623, 624, 0, 558, 0, 550, 551, 552,
	625, 553, 626, 0, 554, 555, 556, 557, 0, 559,
	560, 0, 0, 561, 562, 563, 565, 566, 564, 567,
	0, 568, 0, 0, 569, 570, 571, 627, 628, 629,
	249, 573, 572, 574, 630, 0, 0, 0, 0, 575,
	576, 631, 577, 578, 579, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 580, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 581, 582, 0, 271, 583,
	272, 584, 0, 585, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 586, 587, 588, 0, 280, 281,
	589, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 590, 591, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 592, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 593, 594, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 595, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	596, 597, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 598, 0, 599, 356, 0, 357, 358, 359,
	360, 361, 600, 601, 602, 436, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 0, 0, 370, 603, 604, 0, 605, 0, 372,
	373, 0, 606, 0, 374, 375, 376, 0, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 607, 0, 388, 389, 0, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 0, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	0, 423, 0, 254, 0, 433, 434, 0, 608, 435,
	609, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 610, 0, 446, 0,
	611, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 614, 465, 615, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 616, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 0, 493, 494, 495, 496, 617,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	0, 518, 519, 502, 503, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 618, 0, 528, 0, 529, 530,
	531, 532, 504, 533, 538, 619, 534, 535, 536, 537,
	620, 0, 540, 541, 0, 539, 0, 542, 543, 544,
	545, 546, 547, 334, 548, 0, 549, 621, 622, 623,
	624, 0, 558, 0, 550, 551, 552, 625, 553, 626,
	0, 554, 555, 556, 557, 0, 559, 560, 0, 0,
	561, 562, 563, 565, 566, 564, 567, 0, 568, 0,
	0, 569, 570, 571, 627, 628, 629, 0, 573, 572,
	574, 630, 0, 0, 0, 0, 575, 576, 631, 577,
	578, 579, 1567, 0, 1359, 1358, 0, 0, 0, 0,
	1356, 0, 0, 0, 0, 0, 0, 0, 0, 729,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 580, 0, 0, 0,
	0, 264, 265, 1111, 266, 267, 268, 269, 270, 581,
	582, 0, 271, 583, 272, 584, 0, 585, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 586, 587,
	588, 0, 280, 281, 589, 0, 1325, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1112, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 590, 591, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 592,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	593, 594, 0, 252, 0, 0, 0, 0, 0, 1566,
	341, 342, 595, 0, 0, 0, 343, 0, 344, 0,
	0, 1113, 345, 346, 596, 597, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 598, 0, 599, 356,
	0, 357, 358, 359, 360, 361, 600, 601, 602, 436,
	1115, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 371, 0, 1114, 370, 603, 604,
	0, 605, 0, 372, 373, 1116, 606, 1117, 374, 375,
	376, 1118, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 607, 1119,
	388, 389, 1120, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 1121, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 1122, 423, 0, 0, 1123, 433,
	434, 0, 608, 435, 609, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 1124, 446, 1125, 611, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 614, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	1565, 475, 616, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 1126, 493,
	494, 495, 496, 617, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 1564, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 0, 518, 519, 502, 503, 520,
	521, 1127, 522, 523, 524, 525, 526, 527, 618, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 619,
	534, 535, 536, 537, 620, 0, 540, 541, 0, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 621, 622, 623, 624, 0, 558, 0, 550, 551,
	552, 625, 553, 626, 0, 554, 555, 556, 557, 0,
	559, 560, 0, 0, 561, 562, 563, 565, 566, 564,
	567, 0, 568, 0, 0, 569, 570, 571, 627, 628,
	629, 0, 573, 572, 574, 630, 0, 0, 0, 0,
	575, 576, 631, 577, 578, 579, 1507, 0, 1359, 1358,
	0, 0, 0, 0, 1356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	580, 0, 0, 0, 0, 264, 265, 1111, 266, 267,
	268, 269, 270, 581, 582, 0, 271, 583, 272, 584,
	0, 585, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 586, 587, 588, 0, 280, 281, 589, 0,
	1325, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1112,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 590, 591, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 592, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 593, 594, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 595, 0, 0, 0,
	343, 0, 344, 0, 0, 1113, 345, 346, 596, 597,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	598, 0, 599, 356, 0, 357, 358, 359, 360, 361,
	1506, 601, 602, 436, 1115, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 371, 0,
	1114, 370, 603, 604, 0, 605, 0, 372, 373, 1116,
	606, 1117, 374, 375, 376, 1118, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 607, 1119, 388, 389, 1120, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 1121, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 1122, 423,
	0, 0, 1123, 433, 434, 0, 608, 435, 609, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 610, 1124, 446, 1125, 611, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 614, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 616, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 1126, 493, 494, 495, 496, 617, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 0, 518,
	519, 502, 503, 520, 521, 1127, 522, 523, 524, 525,
	526, 527, 618, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 619, 534, 535, 536, 537, 620, 0,
	540, 541, 0, 539, 0, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 621, 622, 623, 624, 0,
	558, 0, 550, 551, 552, 625, 553, 626, 0, 554,
	555, 556, 557, 0, 559, 560, 0, 0, 561, 562,
	563, 565, 566, 564, 567, 0, 568, 0, 0, 569,
	570, 571, 627, 628, 629, 0, 573, 572, 574, 630,
	0, 0, 0, 0, 575, 576, 631, 577, 578, 579,
	1434, 0, 1359, 1358, 0, 0, 0, 0, 1356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 580, 0, 0, 0, 0, 264,
	265, 1111, 266, 267, 268, 269, 270, 581, 582, 0,
	271, 583, 272, 584, 0, 585, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 586, 587, 588, 0,
	280, 281, 589, 0, 1325, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 1112, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 590,
	591, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 592, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 593, 594,
	0, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	595, 0, 0, 0, 343, 0, 344, 0, 0, 1113,
	345, 346, 596, 597, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 598, 0, 599, 356, 0, 357,
	358, 359, 360, 361, 1433, 601, 602, 436, 1115, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 371, 0, 1114, 370, 603, 604, 0, 605,
	0, 372, 373, 1116, 606, 1117, 374, 375, 376, 1118,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 607, 1119, 388, 389,
	1120, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 1121,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 1122, 423, 0, 0, 1123, 433, 434, 0,
	608, 435, 609, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 1124,
	446, 1125, 611, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 614, 465, 615, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	616, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 1126, 493, 494, 495,
	496, 617, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 0, 518, 519, 502, 503, 520, 521, 1127,
	522, 523, 524, 525, 526, 527, 618, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 619, 534, 535,
	536, 537, 620, 0, 540, 541, 0, 539, 0, 542,
	543, 544, 545, 546, 547, 334, 548, 0, 549, 621,
	622, 623, 624, 0, 558, 0, 550, 551, 552, 625,
	553, 626, 0, 554, 555, 556, 557, 0, 559, 560,
	0, 0, 561, 562, 563, 565, 566, 564, 567, 0,
	568, 0, 0, 569, 570, 571, 627, 628, 629, 0,
	573, 572, 574, 630, 0, 0, 0, 0, 575, 576,
	631, 577, 578, 579, 1394, 0, 1359, 1358, 0, 0,
	0, 0, 1356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 580, 0,
	0, 0, 0, 264, 265, 1111, 266, 267, 268, 269,
	270, 581, 582, 0, 271, 583, 272, 584, 0, 585,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	586, 587, 588, 0, 280, 281, 589, 0, 1325, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1112, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 590, 591, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 592, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 593, 594, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 595, 0, 0, 0, 343, 0,
	344, 0, 0, 1113, 345, 346, 596, 597, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 598, 0,
	599, 356, 0, 357, 358, 359, 360, 361, 600, 601,
	602, 436, 1115, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 371, 0, 1114, 370,
	603, 604, 0, 605, 0, 372, 373, 1116, 606, 1117,
	374, 375, 376, 1118, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	607, 1119, 388, 389, 1120, 0, 390, 0, 0, 0,
	391, 392, 0, 0, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 1121, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 1122, 423, 0, 0,
	1123, 433, 434, 0, 608, 435, 609, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 610, 1124, 446, 1125, 611, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 612, 459, 460, 461, 613, 462, 463, 464, 614,
	465, 615, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 616, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	1126, 493, 494, 495, 496, 617, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 0, 518, 519, 502,
	503, 520, 521, 1127, 522, 523, 524, 525, 526, 527,
	618, 0, 528, 0, 529, 530, 531, 532, 504, 533,
	538, 619, 534, 535, 536, 537, 620, 0, 540, 541,
	0, 539, 0, 542, 543, 544, 545, 546, 547, 334,
	548, 0, 549, 621, 622, 623, 624, 0, 558, 0,
	550, 551, 552, 625, 553, 626, 0, 554, 555, 556,
	557, 0, 559, 560, 0, 0, 561, 562, 563, 565,
	566, 564, 567, 0, 568, 0, 0, 569, 570, 571,
	627, 628, 629, 0, 573, 572, 574, 630, 0, 0,
	0, 0, 575, 576, 631, 577, 578, 579, 1354, 0,
	1359, 1358, 0, 0, 0, 0, 1356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 580, 0, 0, 0, 0, 264, 265, 1111,
	266, 267, 268, 269, 270, 581, 582, 0, 271, 583,
	272, 584, 0, 585, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 586, 587, 588, 0, 280, 281,
	589, 0, 1325, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 1112, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 590, 591, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 592, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 593, 594, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 595, 0,
	0, 0, 343, 0, 344, 0, 0, 1113, 345, 346,
	596, 597, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 598, 0, 599, 356, 0, 357, 358, 359,
	360, 361, 1353, 601, 602, 436, 1115, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 0, 368, 369,
	371, 0, 1114, 370, 603, 604, 0, 605, 0, 372,
	373, 1116, 606, 1117, 374, 375, 376, 1118, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 607, 1119, 388, 389, 1120, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 1121, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	1122, 423, 0, 0, 1123, 433, 434, 0, 608, 435,
	609, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 610, 1124, 446, 1125,
	611, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 614, 465, 615, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 616, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 1126, 493, 494, 495, 496, 617,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	0, 518, 519, 502, 503, 520, 521, 1127, 522, 523,
	524, 525, 526, 527, 618, 0, 528, 0, 529, 530,
	531, 532, 504, 533, 538, 619, 534, 535, 536, 537,
	620, 0, 540, 541, 0, 539, 0, 542, 543, 544,
	545, 546, 547, 334, 548, 0, 549, 621, 622, 623,
	624, 0, 558, 0, 550, 551, 552, 625, 553, 626,
	0, 554, 555, 556, 557, 0, 559, 560, 0, 0,
	561, 562, 563, 565, 566, 564, 567, 0, 568, 0,
	0, 569, 570, 571, 627, 628, 629, 0, 573, 572,
	574, 630, 0, 0, 0, 0, 575, 576, 631, 577,
	578, 579, 1359, 1358, 0, 0, 0, 0, 1356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 580, 0, 0, 0, 0, 264,
	265, 1111, 266, 267, 268, 269, 270, 581, 582, 0,
	271, 583, 272, 584, 0, 585, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 586, 587, 588, 0,
	280, 281, 589, 0, 1325, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 1112, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 590,
	591, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 592, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 593, 594,
	0, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	595, 0, 0, 0, 343, 0, 344, 0, 0, 1113,
	345, 346, 596, 597, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 598, 0, 599, 356, 0, 357,
	358, 359, 360, 361, 600, 601, 602, 436, 1115, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 371, 0, 1114, 370, 603, 604, 0, 605,
	0, 372, 373, 1116, 606, 1117, 374, 375, 376, 1118,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 607, 1119, 388, 389,
	1120, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 1121,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 1122, 423, 0, 0, 1123, 433, 434, 0,
	608, 435, 609, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 1124,
	446, 1125, 611, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 614, 465, 615, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	616, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 1126, 493, 494, 495,
	496, 617, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 0, 518, 519, 502, 503, 520, 521, 1127,
	522, 523, 524, 525, 526, 527, 618, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 619, 534, 535,
	536, 537, 620, 0, 540, 541, 0, 539, 0, 542,
	543, 544, 545, 546, 547, 334, 548, 0, 549, 621,
	622, 623, 624, 0, 558, 0, 550, 551, 552, 625,
	553, 626, 0, 554, 555, 556, 557, 0, 559, 560,
	0, 0, 561, 562, 563, 565, 566, 564, 567, 0,
	568, 0, 0, 569, 570, 571, 627, 628, 629, 0,
	573, 572, 574, 630, 1359, 1358, 0, 0, 575, 576,
	631, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 580, 0, 0, 0,
	0, 264, 265, 1111, 266, 267, 268, 269, 270, 581,
	582, 0, 271, 583, 272, 584, 0, 585, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 586, 587,
	588, 0, 280, 281, 589, 0, 1325, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1112, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 590, 591, 1938, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 592,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	593, 594, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 595, 0, 0, 0, 343, 0, 344, 0,
	0, 1113, 345, 346, 596, 597, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 598, 0, 599, 356,
	0, 357, 358, 359, 360, 361, 600, 601, 602, 436,
	1115, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 371, 0, 1114, 370, 603, 604,
	0, 605, 0, 372, 373, 1116, 606, 1117, 374, 375,
	376, 1118, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 607, 1119,
	388, 389, 1120, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 1121, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 1122, 423, 0, 0, 1123, 433,
	434, 0, 608, 435, 609, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 1124, 446, 1125, 611, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 614, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 616, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 1126, 493,
	494, 495, 496, 617, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 0, 518, 519, 502, 503, 520,
	521, 1127, 522, 523, 524, 525, 526, 527, 618, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 619,
	534, 535, 536, 537, 620, 0, 540, 541, 0, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 621, 622, 623, 624, 0, 558, 0, 550, 551,
	552, 625, 553, 626, 0, 554, 555, 556, 557, 0,
	559, 560, 0, 0, 561, 562, 563, 565, 566, 564,
	567, 0, 568, 0, 0, 569, 570, 571, 627, 628,
	629, 0, 573, 572, 574, 630, 1359, 1358, 0, 0,
	575, 576, 631, 577, 578, 579, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 580, 0,
	0, 0, 0, 264, 265, 1111, 266, 267, 268, 269,
	270, 581, 582, 0, 271, 583, 272, 584, 0, 585,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	586, 587, 588, 0, 280, 281, 589, 0, 1325, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1112, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 590, 591, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 592, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 593, 594, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 595, 0, 0, 0, 343, 0,
	344, 0, 0, 1113, 345, 346, 596, 597, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 598, 0,
	599, 356, 0, 357, 358, 359, 360, 361, 600, 601,
	602, 436, 1115, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 371, 0, 1114, 370,
	603, 604, 0, 605, 0, 372, 373, 1116, 606, 1117,
	374, 375, 376, 1118, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	607, 1119, 388, 389, 1120, 0, 390, 0, 0, 0,
	391, 392, 0, 0, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 1121, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 1122, 423, 0, 0,
	1123, 433, 434, 0, 608, 435, 609, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 610, 1124, 446, 1125, 611, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 612, 459, 460, 461, 613, 462, 463, 464, 614,
	465, 615, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 616, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	1126, 493, 494, 495, 496, 617, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 0, 518, 519, 502,
	503, 520, 521, 1127, 522, 523, 524, 525, 526, 527,
	618, 0, 528, 0, 529, 530, 531, 532, 504, 533,
	538, 619, 534, 535, 536, 537, 620, 0, 540, 541,
	0, 539, 0, 542, 543, 544, 545, 546, 547, 334,
	548, 0, 549, 621, 622, 623, 624, 0, 558, 0,
	550, 551, 552, 625, 553, 626, 0, 554, 555, 556,
	557, 0, 559, 560, 0, 0, 561, 562, 563, 565,
	566, 564, 567, 0, 568, 0, 0, 569, 570, 571,
	627, 628, 629, 1359, 573, 572, 574, 630, 0, 0,
	0, 0, 575, 576, 631, 577, 578, 579, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 0,
	264, 265, 1111, 266, 267, 268, 269, 270, 581, 582,
	0, 271, 583, 272, 584, 0, 585, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 586, 587, 588,
	0, 280, 281, 589, 0, 1325, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1112, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	590, 591, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 592, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 593,
	594, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 595, 0, 0, 0, 343, 0, 344, 0, 0,
	1113, 345, 346, 596, 597, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 598, 0, 599, 356, 0,
	357, 358, 359, 360, 361, 600, 601, 602, 436, 1115,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 371, 0, 1114, 370, 603, 604, 0,
	605, 0, 372, 373, 1116, 606, 1117, 374, 375, 376,
	1118, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 607, 1119, 388,
	389, 1120, 0, 390, 0, 0, 0, 391, 392, 0,
	0, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	1121, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 1122, 423, 0, 0, 1123, 433, 434,
	0, 608, 435, 609, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 610,
	1124, 446, 1125, 611, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 614, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 616, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 1126, 493, 494,
	495, 496, 617, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 0, 518, 519, 502, 503, 520, 521,
	1127, 522, 523, 524, 525, 526, 527, 618, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 619, 534,
	535, 536, 537, 620, 0, 540, 541, 0, 539, 0,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	621, 622, 623, 624, 0, 558, 0, 550, 551, 552,
	625, 553, 626, 0, 554, 555, 556, 557, 0, 559,
	560, 0, 0, 561, 562, 563, 565, 566, 564, 567,
	0, 568, 0, 0, 569, 570, 571, 627, 628, 629,
	249, 573, 572, 574, 630, 0, 0, 0, 0, 575,
	576, 631, 577, 578, 579, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 580, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 581, 582, 0, 271, 583,
	272, 584, 0, 585, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 586, 587, 588, 2619, 280, 281,
	589, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 2616, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 590, 591, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 2623, 328, 592, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 593, 594, 0, 2826,
	0, 0, 0, 0, 0, 340, 341, 342, 595, 0,
	0, 0, 343, 0, 344, 2622, 0, 0, 345, 346,
	596, 597, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 598, 0, 599, 356, 0, 357, 358, 359,
	360, 361, 600, 601, 602, 436, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 2823, 368, 369,
	371, 0, 0, 370, 603, 604, 0, 605, 0, 372,
	2825, 0, 606, 0, 374, 375, 376, 0, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 607, 0, 388, 389, 2822, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 0, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	0, 423, 0, 0, 0, 433, 434, 0, 608, 435,
	609, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 610, 0, 446, 0,
	611, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 614, 465, 615, 466, 467, 2621, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 616, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 0, 493, 494, 495, 496, 617,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	0, 518, 519, 502, 503, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 618, 0, 528, 0, 529, 530,
	531, 532, 504, 533, 538, 619, 534, 535, 536, 537,
	620, 0, 540, 541, 0, 539, 0, 542, 543, 544,
	545, 546, 547, 334, 548, 0, 549, 621, 622, 623,
	624, 0, 558, 0, 550, 551, 552, 625, 553, 626,
	0, 554, 555, 556, 557, 0, 559, 560, 0, 2824,
	561, 562, 563, 565, 566, 564, 567, 0, 568, 0,
	0, 569, 570, 571, 627, 628, 629, 249, 573, 572,
	574, 630, 0, 0, 0, 0, 575, 576, 631, 577,
	578, 579, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 580,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 581, 582, 0, 271, 583, 272, 584, 0,
	585, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 586, 587, 588, 2619, 280, 281, 589, 0, 0,
	2613, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 2616, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 590, 591, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	2623, 328, 592, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 593, 594, 0, 0, 0, 0, 0,
	0, 0, 340, 341, 342, 595, 0, 0, 0, 343,
	0, 344, 2622, 0, 0, 345, 346, 596, 597, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 598,
	0, 599, 356, 0, 357, 358, 359, 360, 361, 2612,
	601, 602, 436, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 371, 0, 0,
	370, 603, 604, 0, 605, 0, 372, 373, 0, 606,
	0, 374, 375, 376, 0, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 607, 0, 388, 389, 0, 0, 390, 0, 0,
	0, 391, 392, 0, 0, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 0, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 0, 423, 0,
	0, 0, 433, 434, 0, 608, 435, 609, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 0, 446, 0, 611, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	614, 465, 615, 466, 467, 2621, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 616, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 0, 493, 494, 495, 496, 617, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 0, 518, 519,
	502, 503, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 618, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 619, 534, 535, 536, 537, 620, 0, 540,
	541, 0, 539, 0, 542, 543, 544, 545, 546, 547,
	334, 548, 0, 549, 621, 622, 623, 624, 0, 558,
	0, 550, 551, 552, 625, 553, 626, 0, 554, 555,
	556, 557, 0, 559, 560, 0, 2620, 561, 562, 563,
	565, 566, 564, 567, 0, 568, 0, 0, 569, 570,
	571, 627, 628, 629, 0, 573, 572, 574, 630, 1634,
	0, 249, 0, 575, 576, 631, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 581, 582, 0, 271,
	583, 272, 584, 0, 585, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 586, 587, 588, 0, 280,
	281, 589, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 590, 591,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 592, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 593, 594, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 595,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 596, 597, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 598, 0, 599, 356, 0, 357, 358,
	359, 360, 361, 600, 601, 602, 436, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 371, 0, 0, 370, 603, 604, 0, 605, 0,
	372, 373, 0, 606, 0, 374, 375, 376, 0, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 607, 0, 388, 389, 0,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 0, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 0, 423, 0, 254, 0, 433, 434, 0, 608,
	435, 609, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 610, 0, 446,
	0, 611, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 612, 459, 460, 461,
	613, 462, 463, 464, 614, 465, 615, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 616,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 0, 493, 494, 495, 496,
	617, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 1637, 514, 512, 515, 516,
	517, 0, 518, 519, 502, 503, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 618, 0, 528, 0, 529,
	530, 531, 532, 504, 533, 538, 619, 534, 535, 536,
	537, 620, 0, 540, 541, 0, 539, 1635, 542, 543,
	544, 545, 546, 547, 334, 548, 0, 549, 621, 622,
	623, 624, 0, 558, 0, 550, 551, 552, 625, 553,
	626, 0, 554, 555, 556, 557, 0, 559, 560, 0,
	0, 561, 562, 563, 565, 566, 564, 567, 0, 568,
	0, 0, 569, 570, 571, 627, 628, 629, 0, 1636,
	572, 574, 630, 1329, 0, 249, 0, 575, 576, 631,
	577, 578, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 580, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	581, 582, 0, 271, 583, 272, 584, 0, 585, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 586,
	587, 588, 0, 280, 281, 589, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 590, 591, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	592, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 593, 594, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 595, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 596, 597, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 598, 0, 599,
	356, 0, 357, 358, 359, 360, 361, 1331, 601, 602,
	436, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 371, 0, 0, 370, 603,
	604, 0, 605, 0, 372, 373, 0, 606, 0, 374,
	375, 376, 0, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 607,
	0, 388, 389, 0, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 0, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 0, 423, 0, 254, 0,
	433, 434, 0, 608, 435, 609, 437, 438, 0, 0,
	439, 0, 0, 1161, 441, 442, 443, 0, 0, 444,
	445, 610, 0, 446, 0, 611, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 614, 465,
	615, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 616, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 0,
	493, 494, 495, 496, 617, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 519, 502, 503,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 618,
	0, 528, 0, 529, 530, 531, 532, 504, 533, 538,
	619, 534, 535, 536, 537, 620, 0, 540, 541, 0,
	539, 0, 542, 543, 544, 545, 546, 547, 334, 548,
	0, 549, 621, 622, 623, 624, 0, 558, 0, 550,
	551, 552, 625, 553, 626, 0, 554, 555, 556, 557,
	0, 559, 560, 0, 0, 561, 562, 563, 565, 566,
	564, 567, 0, 568, 0, 0, 569, 570, 571, 627,
	628, 629, 0, 573, 572, 574, 630, 1326, 0, 249,
	0, 575, 576, 631, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 580, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 581, 582, 0, 271, 583, 272,
	584, 0, 585, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 586, 587, 588, 0, 280, 281, 589,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 590, 591, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 592, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 593, 594, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 595, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 596,
	597, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 598, 0, 599, 356, 0, 357, 358, 359, 360,
	361, 1328, 601, 602, 436, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 0, 370, 603, 604, 0, 605, 0, 372, 373,
	0, 606, 0, 374, 375, 376, 0, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 607, 0, 388, 389, 0, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 0, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 0,
	423, 0, 254, 0, 433, 434, 0, 608, 435, 609,
	437, 438, 0, 0, 439, 0, 0, 1161, 441, 442,
	443, 0, 0, 444, 445, 610, 0, 446, 0, 611,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 614, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 616, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 0, 493, 494, 495, 496, 617, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 0,
	518, 519, 502, 503, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 618, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 619, 534, 535, 536, 537, 620,
	0, 540, 541, 0, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 621, 622, 623, 624,
	0, 558, 0, 550, 551, 552, 625, 553, 626, 0,
	554, 555, 556, 557, 0, 559, 560, 0, 0, 561,
	562, 563, 565, 566, 564, 567, 0, 568, 0, 0,
	569, 570, 571, 627, 628, 629, 0, 573, 572, 574,
	630, 1232, 0, 249, 0, 575, 576, 631, 577, 578,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 581, 582,
	0, 271, 583, 272, 584, 0, 585, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 586, 587, 588,
	0, 280, 281, 589, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	590, 591, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 592, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 593,
	594, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 595, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 596, 597, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 598, 0, 599, 356, 0,
	357, 358, 359, 360, 361, 1234, 601, 602, 436, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 371, 0, 0, 370, 603, 604, 0,
	605, 0, 372, 373, 0, 606, 0, 374, 375, 376,
	0, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 607, 0, 388,
	389, 0, 0, 390, 0, 0, 0, 391, 392, 0,
	0, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	0, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 0, 423, 0, 254, 0, 433, 434,
	0, 608, 435, 609, 437, 438, 0, 0, 439, 0,
	0, 1161, 441, 442, 443, 0, 0, 444, 445, 610,
	0, 446, 0, 611, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 614, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 616, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 0, 493, 494,
	495, 496, 617, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 0, 518, 519, 502, 503, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 618, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 619, 534,
	535, 536, 537, 620, 0, 540, 541, 0, 539, 0,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	621, 622, 623, 624, 0, 558, 0, 550, 551, 552,
	625, 553, 626, 0, 554, 555, 556, 557, 0, 559,
	560, 0, 0, 561, 562, 563, 565, 566, 564, 567,
	0, 568, 0, 0, 569, 570, 571, 627, 628, 629,
	0, 573, 572, 574, 630, 663, 0, 249, 0, 575,
	576, 631, 577, 578, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 662, 260,
	261, 652, 262, 263, 0, 0, 0, 0, 0, 580,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 581, 582, 0, 271, 583, 272, 584, 0,
	585, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 586, 587, 588, 0, 280, 281, 589, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 655, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 590, 591, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 592, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 593, 594, 0, 0, 0, 0, 0,
	0, 0, 340, 341, 342, 595, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 596, 597, 347,
	348, 349, 350, 351, 352, 353, 354, 656, 355, 598,
	0, 599, 356, 0, 357, 358, 359, 360, 361, 600,
	601, 602, 436, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 371, 0, 0,
	370, 603, 604, 0, 605, 0, 372, 373, 0, 606,
	0, 374, 375, 376, 0, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 607, 0, 388, 389, 0, 0, 390, 0, 0,
	0, 391, 392, 0, 0, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 0, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 0, 423, 0,
	0, 0, 433, 434, 0, 608, 435, 609, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 0, 446, 0, 611, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	614, 465, 615, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 616, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 0, 493, 494, 495, 496, 617, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	657, 513, 514, 512, 515, 516, 517, 0, 518, 519,
	502, 503, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 618, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 619, 534, 535, 536, 537, 620, 0, 540,
	541, 0, 539, 0, 542, 543, 544, 545, 546, 547,
	334, 548, 0, 549, 621, 622, 623, 624, 0, 558,
	0, 550, 551, 552, 625, 553, 626, 0, 554, 555,
	556, 557, 0, 559, 560, 0, 0, 561, 562, 563,
	565, 566, 564, 567, 0, 568, 0, 0, 569, 570,
	571, 627, 628, 629, 0, 573, 572, 574, 630, 651,
	0, 249, 0, 575, 576, 631, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 652, 262, 263, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 581, 582, 0, 271,
	583, 272, 584, 0, 585, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 586, 587, 588, 0, 280,
	281, 589, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 655, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 590, 591,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 592, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 593, 594, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 595,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 596, 597, 347, 348, 349, 350, 351, 352, 353,
	354, 656, 355, 598, 0, 599, 356, 0, 357, 358,
	359, 360, 361, 600, 601, 602, 436, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 371, 0, 0, 370, 603, 604, 0, 605, 0,
	372, 373, 0, 606, 0, 374, 375, 376, 0, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 607, 0, 388, 389, 0,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 0, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 0, 423, 0, 0, 0, 433, 434, 0, 608,
	435, 609, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 610, 0, 446,
	0, 611, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 612, 459, 460, 461,
	613, 462, 463, 464, 614, 465, 615, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 616,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 0, 493, 494, 495, 496,
	617, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 657, 513, 514, 512, 515, 516,
	517, 0, 518, 519, 502, 503, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 618, 0, 528, 0, 529,
	530, 531, 532, 504, 533, 538, 619, 534, 535, 536,
	537, 620, 0, 540, 541, 0, 539, 0, 542, 543,
	544, 545, 546, 547, 334, 548, 0, 549, 621, 622,
	623, 624, 0, 558, 0, 550, 551, 552, 625, 553,
	626, 0, 554, 555, 556, 557, 0, 559, 560, 0,
	0, 561, 562, 563, 565, 566, 564, 567, 0, 568,
	0, 0, 569, 570, 571, 627, 628, 629, 249, 573,
	572, 574, 630, 0, 0, 0, 0, 575, 576, 631,
	577, 578, 579, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	580, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 581, 582, 0, 271, 583, 272, 584,
	0, 585, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 586, 587, 588, 0, 280, 281, 589, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 590, 591, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 592, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 593, 594, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 595, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 596, 597,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	598, 0, 599, 356, 0, 357, 358, 359, 360, 361,
	600, 601, 602, 436, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 0,
	0, 370, 603, 604, 0, 605, 0, 372, 373, 0,
	606, 0, 374, 375, 376, 0, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 607, 0, 388, 389, 0, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 0, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 0, 423,
	0, 254, 0, 433, 434, 0, 608, 435, 609, 437,
	438, 0, 0, 439, 0, 0, 1161, 441, 442, 443,
	0, 0, 444, 445, 610, 0, 446, 0, 611, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 614, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 616, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 0, 493, 494, 495, 496, 617, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 0, 518,
	519, 502, 503, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 618, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 619, 534, 535, 536, 537, 620, 0,
	540, 541, 0, 539, 0, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 621, 622, 623, 624, 0,
	558, 0, 550, 551, 552, 625, 553, 626, 0, 554,
	555, 556, 557, 0, 559, 560, 0, 0, 561, 562,
	563, 565, 566, 564, 567, 0, 568, 0, 0, 569,
	570, 571, 627, 628, 629, 249, 573, 572, 574, 630,
	0, 0, 0, 0, 575, 576, 631, 577, 578, 579,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 580, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	581, 582, 0, 271, 583, 272, 584, 0, 585, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 586,
	587, 588, 0, 280, 281, 589, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 590, 591, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	592, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 593, 594, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 595, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 596, 597, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 598, 0, 599,
	356, 0, 357, 358, 359, 360, 361, 600, 601, 602,
	436, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 371, 0, 0, 370, 603,
	604, 0, 605, 0, 372, 373, 0, 606, 0, 374,
	375, 376, 0, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 607,
	0, 388, 389, 0, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 0, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 3209, 423, 0, 254, 0,
	433, 434, 0, 608, 435, 609, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 610, 0, 446, 0, 611, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 614, 465,
	615, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 616, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 0,
	493, 494, 495, 496, 617, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 519, 502, 503,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 618,
	0, 528, 0, 529, 530, 531, 532, 504, 533, 538,
	619, 534, 535, 536, 537, 620, 0, 540, 541, 0,
	539, 0, 542, 543, 544, 545, 546, 547, 334, 548,
	0, 549, 621, 622, 623, 624, 0, 558, 0, 550,
	551, 552, 625, 553, 626, 0, 554, 555, 556, 557,
	0, 559, 560, 0, 0, 561, 562, 563, 565, 566,
	564, 567, 0, 568, 0, 0, 569, 570, 571, 627,
	628, 629, 0, 573, 572, 574, 630, 2754, 0, 249,
	0, 575, 576, 631, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 580, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 581, 582, 0, 271, 583, 272,
	584, 0, 585, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 586, 587, 588, 0, 280, 281, 589,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 590, 591, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 592, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 593, 594, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 595, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 596,
	597, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 598, 0, 599, 356, 0, 357, 358, 359, 360,
	361, 2753, 601, 602, 436, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 0, 370, 603, 604, 0, 605, 0, 372, 373,
	0, 606, 0, 374, 375, 376, 0, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 607, 0, 388, 389, 0, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 0, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 0,
	423, 0, 254, 0, 433, 434, 0, 608, 435, 609,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 0, 446, 0, 611,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 614, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 616, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 0, 493, 494, 495, 496, 617, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 0,
	518, 519, 502, 503, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 618, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 619, 534, 535, 536, 537, 620,
	0, 540, 541, 0, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 621, 622, 623, 624,
	0, 558, 0, 550, 551, 552, 625, 553, 626, 0,
	554, 555, 556, 557, 0, 559, 560, 0, 0, 561,
	562, 563, 565, 566, 564, 567, 0, 568, 0, 0,
	569, 570, 571, 627, 628, 629, 0, 573, 572, 574,
	630, 2165, 0, 249, 0, 575, 576, 631, 577, 578,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 581, 582,
	0, 271, 583, 272, 584, 0, 585, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 586, 587, 588,
	0, 280, 281, 589, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	590, 591, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 592, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 593,
	594, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 595, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 596, 597, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 598, 0, 599, 356, 0,
	357, 358, 359, 360, 361, 600, 601, 602, 436, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 371, 0, 0, 370, 603, 604, 0,
	605, 0, 372, 373, 0, 606, 0, 374, 375, 376,
	0, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 607, 0, 388,
	389, 0, 0, 390, 0, 0, 0, 391, 392, 0,
	0, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	0, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 0, 423, 0, 254, 0, 433, 434,
	0, 608, 435, 609, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 610,
	0, 446, 0, 611, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 614, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 616, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 0, 493, 494,
	495, 496, 617, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 0, 518, 519, 502, 503, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 618, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 619, 534,
	535, 536, 537, 620, 0, 540, 541, 0, 539, 0,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	621, 622, 623, 624, 0, 558, 0, 550, 551, 552,
	625, 553, 626, 0, 554, 555, 556, 557, 0, 559,
	560, 0, 0, 561, 562, 563, 565, 566, 564, 567,
	0, 568, 0, 0, 569, 570, 571, 627, 628, 629,
	249, 573, 572, 574, 630, 0, 0, 0, 0, 575,
	576, 631, 577, 578, 579, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 580, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 581, 582, 0, 271, 583,
	272, 584, 0, 585, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 586, 587, 588, 0, 280, 281,
	589, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 590, 591, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 592, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 593, 594, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 595, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	596, 597, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 598, 0, 599, 356, 0, 357, 358, 359,
	360, 361, 600, 601, 602, 436, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 0, 0, 370, 603, 604, 0, 605, 0, 372,
	373, 0, 606, 0, 374, 375, 376, 0, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 607, 0, 388, 389, 0, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 0, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	0, 423, 0, 254, 0, 433, 434, 0, 608, 435,
	609, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 610, 0, 446, 0,
	611, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 614, 465, 615, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 616, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 0, 493, 494, 495, 496, 617,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	0, 518, 519, 502, 503, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 618, 0, 528, 0, 529, 530,
	531, 532, 504, 533, 538, 619, 534, 535, 536, 537,
	620, 0, 540, 541, 0, 539, 2080, 542, 543, 544,
	545, 546, 547, 334, 548, 0, 549, 621, 622, 623,
	624, 0, 558, 0, 550, 551, 552, 625, 553, 626,
	0, 554, 555, 556, 557, 0, 559, 560, 0, 0,
	561, 562, 563, 565, 566, 564, 567, 0, 568, 0,
	0, 569, 570, 571, 627, 628, 629, 0, 573, 572,
	574, 630, 2086, 0, 249, 0, 575, 576, 631, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 580, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 581,
	582, 0, 271, 583, 272, 584, 0, 585, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 586, 587,
	588, 0, 280, 281, 589, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 590, 591, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 592,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	593, 594, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 595, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 596, 597, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 598, 0, 599, 356,
	0, 357, 358, 359, 360, 361, 2085, 601, 602, 436,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 0, 0, 370, 603, 604,
	0, 605, 0, 372, 373, 0, 606, 0, 374, 375,
	376, 0, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 607, 0,
	388, 389, 0, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 0, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 0, 423, 0, 254, 0, 433,
	434, 0, 608, 435, 609, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 0, 446, 0, 611, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 614, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 616, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 0, 493,
	494, 495, 496, 617, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 0, 518, 519, 502, 503, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 618, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 619,
	534, 535, 536, 537, 620, 0, 540, 541, 0, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 621, 622, 623, 624, 0, 558, 0, 550, 551,
	552, 625, 553, 626, 0, 554, 555, 556, 557, 0,
	559, 560, 0, 0, 561, 562, 563, 565, 566, 564,
	567, 0, 568, 0, 0, 569, 570, 571, 627, 628,
	629, 0, 573, 572, 574, 630, 2073, 0, 249, 0,
	575, 576, 631, 577, 578, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	580, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 581, 582, 0, 271, 583, 272, 584,
	0, 585, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 586, 587, 588, 0, 280, 281, 589, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 590, 591, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 592, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 593, 594, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 595, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 596, 597,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	598, 0, 599, 356, 0, 357, 358, 359, 360, 361,
	2075, 601, 602, 436, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 0,
	0, 370, 603, 604, 0, 605, 0, 372, 373, 0,
	606, 0, 374, 375, 376, 0, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 607, 0, 388, 389, 0, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 0, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 0, 423,
	0, 254, 0, 433, 434, 0, 608, 435, 609, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 610, 0, 446, 0, 611, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 614, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 616, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 0, 493, 494, 495, 496, 617, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 0, 518,
	519, 502, 503, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 618, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 619, 534, 535, 536, 537, 620, 0,
	540, 541, 0, 539, 0, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 621, 622, 623, 624, 0,
	558, 0, 550, 551, 552, 625, 553, 626, 0, 554,
	555, 556, 557, 0, 559, 560, 0, 0, 561, 562,
	563, 565, 566, 564, 567, 0, 568, 0, 0, 569,
	570, 571, 627, 628, 629, 249, 573, 572, 574, 630,
	0, 0, 0, 0, 575, 576, 631, 577, 578, 579,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 580, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	581, 582, 0, 271, 583, 272, 584, 0, 585, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 586,
	587, 588, 0, 280, 281, 589, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 590, 591, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	592, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 593, 594, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 595, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 596, 597, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 598, 0, 599,
	356, 0, 357, 358, 359, 360, 361, 2044, 601, 602,
	436, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 371, 0, 0, 370, 603,
	604, 0, 605, 0, 372, 373, 0, 606, 0, 374,
	375, 376, 0, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 607,
	0, 388, 389, 0, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 0, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 0, 423, 0, 254, 0,
	433, 434, 0, 608, 435, 609, 437, 438, 0, 0,
	439, 0, 0, 1161, 441, 442, 443, 0, 0, 444,
	445, 610, 0, 446, 0, 611, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 614, 465,
	615, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 616, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 0,
	493, 494, 495, 496, 617, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 519, 502, 503,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 618,
	0, 528, 0, 529, 530, 531, 532, 504, 533, 538,
	619, 534, 535, 536, 537, 620, 0, 540, 541, 0,
	539, 0, 542, 543, 544, 545, 546, 547, 334, 548,
	0, 549, 621, 622, 623, 624, 0, 558, 0, 550,
	551, 552, 625, 553, 626, 0, 554, 555, 556, 557,
	0, 559, 560, 0, 0, 561, 562, 563, 565, 566,
	564, 567, 0, 568, 0, 0, 569, 570, 571, 627,
	628, 629, 0, 573, 572, 574, 630, 1499, 0, 249,
	0, 575, 576, 631, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 580, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 581, 582, 0, 271, 583, 272,
	584, 0, 585, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 586, 587, 588, 0, 280, 281, 589,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 590, 591, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 592, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 593, 594, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 595, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 596,
	597, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 598, 0, 599, 356, 0, 357, 358, 359, 360,
	361, 1498, 601, 602, 436, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 0, 370, 603, 604, 0, 605, 0, 372, 373,
	0, 606, 0, 374, 375, 376, 0, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 607, 0, 388, 389, 0, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 0, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 0,
	423, 0, 254, 0, 433, 434, 0, 608, 435, 609,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 0, 446, 0, 611,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 614, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 616, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 0, 493, 494, 495, 496, 617, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 0,
	518, 519, 502, 503, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 618, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 619, 534, 535, 536, 537, 620,
	0, 540, 541, 0, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 621, 622, 623, 624,
	0, 558, 0, 550, 551, 552, 625, 553, 626, 0,
	554, 555, 556, 557, 0, 559, 560, 0, 0, 561,
	562, 563, 565, 566, 564, 567, 0, 568, 0, 0,
	569, 570, 571, 627, 628, 629, 0, 573, 572, 574,
	630, 1490, 0, 249, 0, 575, 576, 631, 577, 578,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 581, 582,
	0, 271, 583, 272, 584, 0, 585, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 586, 587, 588,
	0, 280, 281, 589, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	590, 591, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 592, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 593,
	594, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 595, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 596, 597, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 598, 0, 599, 356, 0,
	357, 358, 359, 360, 361, 1489, 601, 602, 436, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 371, 0, 0, 370, 603, 604, 0,
	605, 0, 372, 373, 0, 606, 0, 374, 375, 376,
	0, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 607, 0, 388,
	389, 0, 0, 390, 0, 0, 0, 391, 392, 0,
	0, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	0, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 0, 423, 0, 254, 0, 433, 434,
	0, 608, 435, 609, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 610,
	0, 446, 0, 611, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 614, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 616, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 0, 493, 494,
	495, 496, 617, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 0, 518, 519, 502, 503, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 618, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 619, 534,
	535, 536, 537, 620, 0, 540, 541, 0, 539, 0,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	621, 622, 623, 624, 0, 558, 0, 550, 551, 552,
	625, 553, 626, 0, 554, 555, 556, 557, 0, 559,
	560, 0, 0, 561, 562, 563, 565, 566, 564, 567,
	0, 568, 0, 0, 569, 570, 571, 627, 628, 629,
	0, 573, 572, 574, 630, 1487, 0, 249, 0, 575,
	576, 631, 577, 578, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 580,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 581, 582, 0, 271, 583, 272, 584, 0,
	585, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 586, 587, 588, 0, 280, 281, 589, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 590, 591, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 592, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 593, 594, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 595, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 596, 597, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 598,
	0, 599, 356, 0, 357, 358, 359, 360, 361, 1486,
	601, 602, 436, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 371, 0, 0,
	370, 603, 604, 0, 605, 0, 372, 373, 0, 606,
	0, 374, 375, 376, 0, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 607, 0, 388, 389, 0, 0, 390, 0, 0,
	0, 391, 392, 0, 0, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 0, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 0, 423, 0,
	254, 0, 433, 434, 0, 608, 435, 609, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 0, 446, 0, 611, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	614, 465, 615, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 616, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 0, 493, 494, 495, 496, 617, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 0, 518, 519,
	502, 503, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 618, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 619, 534, 535, 536, 537, 620, 0, 540,
	541, 0, 539, 0, 542, 543, 544, 545, 546, 547,
	334, 548, 0, 549, 621, 622, 623, 624, 0, 558,
	0, 550, 551, 552, 625, 553, 626, 0, 554, 555,
	556, 557, 0, 559, 560, 0, 0, 561, 562, 563,
	565, 566, 564, 567, 0, 568, 0, 0, 569, 570,
	571, 627, 628, 629, 0, 573, 572, 574, 630, 1482,
	0, 249, 0, 575, 576, 631, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 581, 582, 0, 271,
	583, 272, 584, 0, 585, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 586, 587, 588, 0, 280,
	281, 589, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 590, 591,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 592, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 593, 594, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 595,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 596, 597, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 598, 0, 599, 356, 0, 357, 358,
	359, 360, 361, 1481, 601, 602, 436, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 371, 0, 0, 370, 603, 604, 0, 605, 0,
	372, 373, 0, 606, 0, 374, 375, 376, 0, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 607, 0, 388, 389, 0,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 0, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 0, 423, 0, 254, 0, 433, 434, 0, 608,
	435, 609, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 610, 0, 446,
	0, 611, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 612, 459, 460, 461,
	613, 462, 463, 464, 614, 465, 615, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 616,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 0, 493, 494, 495, 496,
	617, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 0, 518, 519, 502, 503, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 618, 0, 528, 0, 529,
	530, 531, 532, 504, 533, 538, 619, 534, 535, 536,
	537, 620, 0, 540, 541, 0, 539, 0, 542, 543,
	544, 545, 546, 547, 334, 548, 0, 549, 621, 622,
	623, 624, 0, 558, 0, 550, 551, 552, 625, 553,
	626, 0, 554, 555, 556, 557, 0, 559, 560, 0,
	0, 561, 562, 563, 565, 566, 564, 567, 0, 568,
	0, 0, 569, 570, 571, 627, 628, 629, 0, 573,
	572, 574, 630, 1437, 0, 249, 0, 575, 576, 631,
	577, 578, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 580, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	581, 582, 0, 271, 583, 272, 584, 0, 585, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 586,
	587, 588, 0, 280, 281, 589, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 590, 591, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	592, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 593, 594, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 595, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 596, 597, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 598, 0, 599,
	356, 0, 357, 358, 359, 360, 361, 600, 601, 602,
	436, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 371, 0, 0, 370, 603,
	604, 0, 605, 0, 372, 373, 0, 606, 0, 374,
	375, 376, 0, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 607,
	0, 388, 389, 0, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 0, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 0, 423, 0, 254, 0,
	433, 434, 0, 608, 435, 609, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 610, 0, 446, 0, 611, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 614, 465,
	615, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 616, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 0,
	493, 494, 495, 496, 617, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 519, 502, 503,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 618,
	0, 528, 0, 529, 530, 531, 532, 504, 533, 538,
	619, 534, 535, 536, 537, 620, 0, 540, 541, 0,
	539, 0, 542, 543, 544, 545, 546, 547, 334, 548,
	0, 549, 621, 622, 623, 624, 0, 558, 0, 550,
	551, 552, 625, 553, 626, 0, 554, 555, 556, 557,
	0, 559, 560, 0, 0, 561, 562, 563, 565, 566,
	564, 567, 0, 568, 0, 0, 569, 570, 571, 627,
	628, 629, 0, 573, 572, 574, 630, 1347, 0, 249,
	0, 575, 576, 631, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 580, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 581, 582, 0, 271, 583, 272,
	584, 0, 585, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 586, 587, 588, 0, 280, 281, 589,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 590, 591, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 592, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 593, 594, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 595, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 596,
	597, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 598, 0, 599, 356, 0, 357, 358, 359, 360,
	361, 600, 601, 602, 436, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 0, 370, 603, 604, 0, 605, 0, 372, 373,
	0, 606, 0, 374, 375, 376, 0, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 607, 0, 388, 389, 0, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 0, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 0,
	423, 0, 254, 0, 433, 434, 0, 608, 435, 609,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 0, 446, 0, 611,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 614, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 616, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 0, 493, 494, 495, 496, 617, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 0,
	518, 519, 502, 503, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 618, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 619, 534, 535, 536, 537, 620,
	0, 540, 541, 0, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 621, 622, 623, 624,
	0, 558, 0, 550, 551, 552, 625, 553, 626, 0,
	554, 555, 556, 557, 0, 559, 560, 0, 0, 561,
	562, 563, 565, 566, 564, 567, 0, 568, 0, 0,
	569, 570, 571, 627, 628, 629, 0, 573, 572, 574,
	630, 1340, 0, 249, 0, 575, 576, 631, 577, 578,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 581, 582,
	0, 271, 583, 272, 584, 0, 585, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 586, 587, 588,
	0, 280, 281, 589, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	590, 591, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 592, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 593,
	594, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 595, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 596, 597, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 598, 0, 599, 356, 0,
	357, 358, 359, 360, 361, 1342, 601, 602, 436, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 371, 0, 0, 370, 603, 604, 0,
	605, 0, 372, 373, 0, 606, 0, 374, 375, 376,
	0, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 607, 0, 388,
	389, 0, 0, 390, 0, 0, 0, 391, 392, 0,
	0, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	0, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 0, 423, 0, 254, 0, 433, 434,
	0, 608, 435, 609, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 610,
	0, 446, 0, 611, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 614, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 616, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 0, 493, 494,
	495, 496, 617, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 0, 518, 519, 502, 503, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 618, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 619, 534,
	535, 536, 537, 620, 0, 540, 541, 0, 539, 0,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	621, 622, 623, 624, 0, 558, 0, 550, 551, 552,
	625, 553, 626, 0, 554, 555, 556, 557, 0, 559,
	560, 0, 0, 561, 562, 563, 565, 566, 564, 567,
	0, 568, 0, 0, 569, 570, 571, 627, 628, 629,
	0, 573, 572, 574, 630, 633, 0, 249, 0, 575,
	576, 631, 577, 578, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 580,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 581, 582, 0, 271, 583, 272, 584, 0,
	585, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 586, 587, 588, 0, 280, 281, 589, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 590, 591, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 592, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 593, 594, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 595, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 596, 597, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 598,
	0, 599, 356, 0, 357, 358, 359, 360, 361, 600,
	601, 602, 436, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 371, 0, 0,
	370, 603, 604, 0, 605, 0, 372, 373, 0, 606,
	0, 374, 375, 376, 0, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 607, 0, 388, 389, 0, 0, 390, 0, 0,
	0, 391, 392, 0, 0, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 0, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 0, 423, 0,
	254, 0, 433, 434, 0, 608, 435, 609, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 0, 446, 0, 611, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	614, 465, 615, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 616, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 0, 493, 494, 495, 496, 617, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 0, 518, 519,
	502, 503, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 618, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 619, 534, 535, 536, 537, 620, 0, 540,
	541, 0, 539, 0, 542, 543, 544, 545, 546, 547,
	334, 548, 0, 549, 621, 622, 623, 624, 0, 558,
	0, 550, 551, 552, 625, 553, 626, 0, 554, 555,
	556, 557, 0, 559, 560, 0, 0, 561, 562, 563,
	565, 566, 564, 567, 0, 568, 0, 0, 569, 570,
	571, 627, 628, 629, 0, 573, 572, 574, 630, 240,
	0, 249, 0, 575, 576, 631, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 581, 582, 0, 271,
	583, 272, 584, 0, 585, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 586, 587, 588, 0, 280,
	281, 589, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 590, 591,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 592, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 593, 594, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 595,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 596, 597, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 598, 0, 599, 356, 0, 357, 358,
	359, 360, 361, 600, 601, 602, 436, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 371, 0, 0, 370, 603, 604, 0, 605, 0,
	372, 373, 0, 606, 0, 374, 375, 376, 0, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 607, 0, 388, 389, 0,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 0, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 0, 423, 0, 254, 0, 433, 434, 0, 608,
	435, 609, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 610, 0, 446,
	0, 611, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 612, 459, 460, 461,
	613, 462, 463, 464, 614, 465, 615, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 616,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 0, 493, 494, 495, 496,
	617, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 0, 518, 519, 502, 503, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 618, 0, 528, 0, 529,
	530, 531, 532, 504, 533, 538, 619, 534, 535, 536,
	537, 620, 0, 540, 541, 0, 539, 0, 542, 543,
	544, 545, 546, 547, 334, 548, 0, 549, 621, 622,
	623, 624, 0, 558, 0, 550, 551, 552, 625, 553,
	626, 0, 554, 555, 556, 557, 0, 559, 560, 0,
	0, 561, 562, 563, 565, 566, 564, 567, 0, 568,
	0, 0, 569, 570, 571, 627, 628, 629, 249, 573,
	572, 574, 630, 0, 0, 0, 0, 575, 576, 631,
	577, 578, 579, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	580, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 581, 582, 0, 271, 583, 272, 584,
	0, 585, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 586, 587, 588, 0, 280, 281, 589, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 590, 591, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 592, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 593, 594, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 595, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 596, 597,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	598, 0, 599, 356, 0, 357, 358, 359, 360, 361,
	600, 601, 602, 436, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 0,
	0, 370, 603, 604, 0, 605, 0, 372, 373, 0,
	606, 0, 374, 375, 376, 0, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 607, 0, 388, 389, 0, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 0, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 0, 423,
	0, 254, 0, 433, 434, 0, 608, 435, 609, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 610, 0, 446, 0, 611, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 614, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 616, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 0, 493, 494, 495, 496, 617, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 0, 518,
	519, 502, 503, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 618, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 619, 534, 535, 536, 537, 620, 0,
	540, 541, 0, 539, 0, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 621, 622, 623, 624, 0,
	558, 0, 550, 551, 552, 625, 553, 626, 0, 554,
	555, 556, 557, 0, 559, 560, 0, 0, 561, 562,
	563, 565, 566, 564, 567, 0, 568, 0, 0, 569,
	570, 571, 627, 628, 629, 249, 573, 572, 574, 630,
	0, 0, 0, 0, 575, 576, 631, 577, 578, 579,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 580, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	581, 582, 0, 271, 583, 272, 584, 0, 585, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 586,
	587, 588, 0, 280, 281, 589, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 655, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 590, 591, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	592, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 593, 594, 0, 0, 0, 0, 0, 0, 0,
	340, 341, 342, 595, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 596, 597, 347, 348, 349,
	350, 351, 352, 353, 354, 656, 355, 598, 0, 599,
	356, 0, 357, 358, 359, 360, 361, 600, 601, 602,
	436, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 371, 0, 0, 370, 603,
	604, 0, 605, 0, 372, 373, 0, 606, 0, 374,
	375, 376, 0, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 607,
	0, 388, 389, 0, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 0, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 0, 423, 0, 0, 0,
	433, 434, 0, 608, 435, 609, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 610, 0, 446, 0, 611, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 614, 465,
	615, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 616, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 0,
	493, 494, 495, 496, 617, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 657, 513,
	514, 512, 515, 516, 517, 0, 518, 519, 502, 503,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 618,
	0, 528, 0, 529, 530, 531, 532, 504, 533, 538,
	619, 534, 535, 536, 537, 620, 0, 540, 541, 0,
	539, 0, 542, 543, 544, 545, 546, 547, 334, 548,
	0, 549, 621, 622, 623, 624, 0, 558, 0, 550,
	551, 552, 625, 553, 626, 0, 554, 555, 556, 557,
	0, 559, 560, 0, 0, 561, 562, 563, 565, 566,
	564, 567, 0, 568, 0, 0, 569, 570, 571, 627,
	628, 629, 249, 573, 572, 574, 630, 0, 0, 0,
	0, 575, 576, 631, 577, 578, 579, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 580, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 581, 582, 0,
	271, 583, 272, 584, 0, 585, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 586, 587, 588, 0,
	280, 281, 589, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 2201, 309, 0, 310, 590,
	591, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 592, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 593, 594,
	0, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	595, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 596, 597, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 598, 0, 599, 356, 0, 357,
	358, 359, 360, 361, 600, 601, 602, 436, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 371, 0, 0, 370, 603, 604, 0, 605,
	0, 372, 373, 0, 606, 0, 374, 375, 376, 0,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 607, 0, 388, 389,
	0, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 0,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 0, 423, 0, 254, 0, 433, 434, 0,
	608, 435, 609, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 0,
	446, 0, 611, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 614, 465, 615, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	616, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 0, 493, 494, 495,
	496, 617, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 0, 518, 519, 502, 503, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 618, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 619, 534, 535,
	536, 537, 620, 0, 540, 541, 0, 539, 0, 542,
	543, 544, 545, 546, 547, 334, 548, 0, 549, 621,
	622, 623, 624, 0, 558, 0, 550, 551, 552, 625,
	553, 626, 0, 554, 555, 556, 557, 0, 559, 560,
	0, 0, 561, 562, 563, 565, 566, 564, 567, 0,
	568, 0, 0, 569, 570, 571, 627, 628, 629, 249,
	573, 572, 574, 630, 0, 0, 0, 0, 575, 576,
	631, 577, 578, 579, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 580, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 581, 582, 0, 271, 583, 272,
	584, 0, 585, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 586, 587, 588, 0, 280, 281, 589,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 2199, 309, 0, 310, 590, 591, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 592, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 593, 594, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 595, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 596,
	597, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 598, 0, 599, 356, 0, 357, 358, 359, 360,
	361, 600, 601, 602, 436, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 0, 370, 603, 604, 0, 605, 0, 372, 373,
	0, 606, 0, 374, 375, 376, 0, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 607, 0, 388, 389, 0, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 0, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 0,
	423, 0, 254, 0, 433, 434, 0, 608, 435, 609,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 0, 446, 0, 611,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 614, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 616, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 0, 493, 494, 495, 496, 617, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 0,
	518, 519, 502, 503, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 618, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 619, 534, 535, 536, 537, 620,
	0, 540, 541, 0, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 621, 622, 623, 624,
	0, 558, 0, 550, 551, 552, 625, 553, 626, 0,
	554, 555, 556, 557, 0, 559, 560, 0, 0, 561,
	562, 563, 565, 566, 564, 567, 0, 568, 0, 0,
	569, 570, 571, 627, 628, 629, 249, 573, 572, 574,
	630, 0, 0, 0, 0, 575, 576, 631, 577, 578,
	579, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 580, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 581, 582, 0, 271, 583, 272, 584, 0, 585,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	586, 587, 588, 0, 280, 281, 589, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 2197,
	309, 0, 310, 590, 591, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 592, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 593, 594, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 595, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 596, 597, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 598, 0,
	599, 356, 0, 357, 358, 359, 360, 361, 600, 601,
	602, 436, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 371, 0, 0, 370,
	603, 604, 0, 605, 0, 372, 373, 0, 606, 0,
	374, 375, 376, 0, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	607, 0, 388, 389, 0, 0, 390, 0, 0, 0,
	391, 392, 0, 0, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 0, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 0, 423, 0, 254,
	0, 433, 434, 0, 608, 435, 609, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 610, 0, 446, 0, 611, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 612, 459, 460, 461, 613, 462, 463, 464, 614,
	465, 615, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 616, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	0, 493, 494, 495, 496, 617, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 0, 518, 519, 502,
	503, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	618, 0, 528, 0, 529, 530, 531, 532, 504, 533,
	538, 619, 534, 535, 536, 537, 620, 0, 540, 541,
	0, 539, 0, 542, 543, 544, 545, 546, 547, 334,
	548, 0, 549, 621, 622, 623, 624, 0, 558, 0,
	550, 551, 552, 625, 553, 626, 0, 554, 555, 556,
	557, 0, 559, 560, 0, 0, 561, 562, 563, 565,
	566, 564, 567, 0, 568, 0, 0, 569, 570, 571,
	627, 628, 629, 249, 573, 572, 574, 630, 0, 0,
	0, 0, 575, 576, 631, 577, 578, 579, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 581, 582,
	0, 271, 583, 272, 584, 0, 585, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 586, 587, 588,
	0, 280, 281, 589, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	590, 591, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 592, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 593,
	594, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 595, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 596, 597, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 598, 0, 599, 356, 0,
	357, 358, 359, 360, 361, 2130, 601, 602, 436, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 371, 0, 0, 370, 603, 604, 0,
	605, 0, 372, 373, 0, 606, 0, 374, 375, 376,
	0, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 607, 0, 388,
	389, 0, 0, 390, 0, 0, 0, 391, 392, 0,
	0, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	0, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 0, 423, 0, 254, 0, 433, 434,
	0, 608, 435, 609, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 610,
	0, 446, 0, 611, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 614, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 616, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 0, 493, 494,
	495, 496, 617, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 0, 518, 519, 502, 503, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 618, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 619, 534,
	535, 536, 537, 620, 0, 540, 541, 0, 539, 0,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	621, 622, 623, 624, 0, 558, 0, 550, 551, 552,
	625, 553, 626, 0, 554, 555, 556, 557, 0, 559,
	560, 0, 0, 561, 562, 563, 565, 566, 564, 567,
	0, 568, 0, 0, 569, 570, 571, 627, 628, 629,
	249, 573, 572, 574, 630, 0, 0, 0, 0, 575,
	576, 631, 577, 578, 579, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 580, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 581, 582, 0, 271, 583,
	272, 584, 0, 585, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 586, 587, 588, 0, 280, 281,
	589, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 590, 591, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 592, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 593, 594, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 595, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	596, 597, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 598, 0, 599, 356, 0, 357, 358, 359,
	360, 361, 2124, 601, 602, 436, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 0, 0, 370, 603, 604, 0, 605, 0, 372,
	373, 0, 606, 0, 374, 375, 376, 0, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 607, 0, 388, 389, 0, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 0, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	0, 423, 0, 254, 0, 433, 434, 0, 608, 435,
	609, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 610, 0, 446, 0,
	611, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 614, 465, 615, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 616, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 0, 493, 494, 495, 496, 617,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	0, 518, 519, 502, 503, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 618, 0, 528, 0, 529, 530,
	531, 532, 504, 533, 538, 619, 534, 535, 536, 537,
	620, 0, 540, 541, 0, 539, 0, 542, 543, 544,
	545, 546, 547, 334, 548, 0, 549, 621, 622, 623,
	624, 0, 558, 0, 550, 551, 552, 625, 553, 626,
	0, 554, 555, 556, 557, 0, 559, 560, 0, 0,
	561, 562, 563, 565, 566, 564, 567, 0, 568, 0,
	0, 569, 570, 571, 627, 628, 629, 249, 573, 572,
	574, 630, 0, 0, 0, 0, 575, 576, 631, 577,
	578, 579, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 580,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 581, 582, 0, 271, 583, 272, 584, 0,
	585, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 586, 587, 588, 0, 280, 281, 589, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 590, 591, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 592, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 593, 594, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 595, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 596, 597, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 598,
	0, 599, 356, 0, 357, 358, 359, 360, 361, 2092,
	601, 602, 436, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 371, 0, 0,
	370, 603, 604, 0, 605, 0, 372, 373, 0, 606,
	0, 374, 375, 376, 0, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 607, 0, 388, 389, 0, 0, 390, 0, 0,
	0, 391, 392, 0, 0, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 0, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 0, 423, 0,
	254, 0, 433, 434, 0, 608, 435, 609, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 0, 446, 0, 611, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	614, 465, 615, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 616, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 0, 493, 494, 495, 496, 617, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 0, 518, 519,
	502, 503, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 618, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 619, 534, 535, 536, 537, 620, 0, 540,
	541, 0, 539, 0, 542, 543, 544, 545, 546, 547,
	334, 548, 0, 549, 621, 622, 623, 624, 0, 558,
	0, 550, 551, 552, 625, 553, 626, 0, 554, 555,
	556, 557, 0, 559, 560, 0, 0, 561, 562, 563,
	565, 566, 564, 567, 0, 568, 0, 0, 569, 570,
	571, 627, 628, 629, 0, 573, 572, 574, 630, 826,
	0, 249, 0, 575, 576, 631, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 581, 582, 0, 271,
	583, 272, 584, 0, 585, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 586, 587, 588, 0, 280,
	281, 589, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 590, 591,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 592, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 593, 594, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 595,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 596, 597, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 598, 0, 599, 356, 0, 357, 358,
	359, 360, 361, 600, 601, 602, 436, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 371, 0, 0, 370, 603, 604, 0, 605, 825,
	372, 373, 0, 606, 0, 374, 375, 376, 0, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 607, 0, 388, 389, 0,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 0, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 0, 423, 0, 0, 0, 433, 434, 0, 608,
	435, 609, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 610, 0, 446,
	0, 611, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 612, 459, 460, 461,
	613, 462, 463, 464, 614, 465, 615, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 616,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 0, 493, 494, 495, 496,
	617, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 0, 518, 519, 502, 503, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 618, 0, 528, 0, 529,
	530, 531, 532, 504, 533, 538, 619, 534, 535, 536,
	537, 620, 0, 540, 541, 0, 539, 824, 542, 543,
	544, 545, 546, 547, 334, 548, 0, 549, 621, 622,
	623, 624, 0, 558, 0, 550, 551, 552, 625, 553,
	626, 0, 554, 555, 556, 557, 0, 559, 560, 0,
	0, 561, 562, 563, 565, 566, 564, 567, 0, 568,
	0, 0, 569, 570, 571, 627, 628, 629, 249, 573,
	572, 574, 630, 0, 0, 0, 0, 575, 576, 631,
	577, 578, 579, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	580, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 581, 582, 0, 271, 583, 272, 584,
	0, 585, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 586, 587, 588, 0, 280, 281, 589, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 590, 591, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 592, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 593, 594, 0, 2826, 0, 0,
	0, 0, 0, 340, 341, 342, 595, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 596, 597,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	598, 0, 599, 356, 0, 357, 358, 359, 360, 361,
	600, 601, 602, 436, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 371, 0,
	0, 370, 603, 604, 0, 605, 0, 372, 373, 0,
	606, 0, 374, 375, 376, 0, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 607, 0, 388, 389, 0, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 0, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 0, 423,
	0, 0, 0, 433, 434, 0, 608, 435, 609, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 610, 0, 446, 0, 611, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 614, 465, 615, 466, 467, 3869, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 616, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 0, 493, 494, 495, 496, 617, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 0, 518,
	519, 502, 503, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 618, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 619, 534, 535, 536, 537, 620, 0,
	540, 541, 0, 539, 0, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 621, 622, 623, 624, 0,
	558, 0, 550, 551, 552, 625, 553, 626, 0, 554,
	555, 556, 557, 0, 559, 560, 0, 0, 561, 562,
	563, 565, 566, 564, 567, 0, 568, 0, 0, 569,
	570, 571, 627, 628, 629, 0, 573, 572, 574, 630,
	686, 0, 249, 0, 575, 576, 631, 577, 578, 579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 580, 0, 0, 0, 0, 264,
	265, 1202, 266, 267, 268, 269, 270, 581, 582, 0,
	271, 583, 272, 584, 0, 585, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 586, 587, 1200, 0,
	280, 281, 589, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 590,
	591, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 592, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 593, 594,
	0, 0, 0, 0, 0, 0, 0, 340, 341, 342,
	595, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 596, 597, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 598, 0, 599, 356, 0, 357,
	358, 359, 360, 361, 600, 601, 602, 436, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 371, 0, 0, 370, 603, 604, 0, 605,
	0, 372, 373, 0, 606, 0, 374, 375, 376, 0,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 607, 0, 388, 389,
	0, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 687, 0,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 0, 423, 0, 0, 0, 433, 434, 0,
	608, 435, 609, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 0,
	446, 0, 611, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 614, 465, 615, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	616, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 0, 493, 494, 495,
	496, 617, 497, 0, 498, 499, 505, 506, 500, 501,
	683, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	1203, 517, 0, 518, 519, 502, 503, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 618, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 619, 534, 535,
	536, 537, 620, 0, 540, 541, 0, 539, 0, 542,
	543, 544, 545, 546, 547, 334, 548, 0, 549, 682,
	622, 623, 624, 0, 558, 0, 550, 551, 552, 625,
	553, 626, 0, 554, 555, 556, 557, 0, 559, 560,
	0, 0, 561, 562, 563, 565, 566, 564, 567, 0,
	568, 0, 0, 569, 570, 571, 627, 628, 629, 0,
	573, 572, 574, 630, 686, 0, 249, 0, 575, 576,
	631, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 580, 0,
	0, 0, 0, 264, 265, 1202, 266, 267, 268, 269,
	270, 581, 582, 0, 271, 583, 272, 584, 0, 585,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	586, 587, 1200, 0, 280, 281, 589, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 590, 591, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 592, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 593, 594, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 595, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 596, 597, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 598, 0,
	599, 356, 0, 357, 358, 359, 360, 361, 600, 601,
	602, 436, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 371, 0, 0, 370,
	603, 604, 0, 605, 0, 372, 373, 0, 606, 0,
	374, 375, 376, 0, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	607, 0, 388, 389, 0, 0, 390, 0, 0, 0,
	391, 392, 0, 0, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 687, 0, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 0, 423, 0, 0,
	0, 433, 434, 0, 608, 435, 609, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 610, 0, 446, 0, 611, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 612, 459, 460, 461, 613, 462, 463, 464, 614,
	465, 615, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 616, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	0, 493, 494, 495, 496, 617, 497, 0, 498, 499,
	505, 506, 500, 501, 683, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 1203, 517, 0, 518, 519, 502,
	503, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	618, 0, 528, 0, 529, 530, 531, 532, 504, 533,
	538, 619, 534, 535, 536, 537, 620, 0, 540, 541,
	0, 539, 0, 542, 543, 544, 545, 546, 547, 334,
	548, 0, 549, 682, 622, 623, 624, 0, 558, 0,
	550, 1201, 552, 625, 553, 626, 0, 554, 555, 556,
	557, 0, 559, 560, 0, 0, 561, 562, 563, 565,
	566, 564, 567, 0, 568, 0, 0, 569, 570, 571,
	627, 628, 629, 0, 573, 572, 574, 630, 642, 0,
	249, 0, 575, 576, 631, 577, 578, 579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 641, 262, 263, 0, 0, 0,
	0, 0, 580, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 581, 582, 0, 271, 583,
	272, 584, 0, 585, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 586, 587, 588, 0, 280, 281,
	589, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 590, 591, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 592, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 593, 594, 0, 0,
	0, 0, 0, 0, 0, 340, 341, 342, 595, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	596, 597, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 598, 0, 599, 356, 0, 357, 358, 359,
	360, 361, 600, 601, 602, 436, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 0, 368, 369,
	371, 0, 0, 370, 603, 604, 0, 605, 0, 372,
	373, 0, 606, 0, 374, 375, 376, 0, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 607, 0, 388, 389, 0, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 0, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	0, 423, 0, 0, 0, 433, 434, 0, 608, 435,
	609, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 610, 0, 446, 0,
	611, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 614, 465, 615, 640, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 616, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 0, 493, 494, 495, 496, 617,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	0, 518, 519, 502, 503, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 618, 0, 528, 0, 529, 530,
	531, 532, 504, 533, 538, 619, 534, 535, 536, 537,
	620, 0, 540, 541, 0, 539, 0, 542, 543, 544,
	545, 546, 547, 334, 548, 0, 549, 621, 622, 623,
	624, 0, 558, 0, 550, 551, 552, 625, 553, 626,
	0, 554, 555, 556, 557, 0, 559, 560, 0, 0,
	561, 562, 563, 565, 566, 564, 567, 0, 568, 0,
	0, 569, 570, 571, 627, 628, 629, 0, 573, 572,
	574, 630, 249, 2813, 0, 0, 575, 576, 631, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 580, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 581, 582, 0,
	271, 583, 272, 584, 0, 585, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 586, 587, 588, 0,
	280, 281, 589, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 590,
	591, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 592, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 593, 594,
	0, 0, 0, 0, 0, 0, 0, 340, 341, 342,
	595, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 596, 597, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 598, 0, 599, 356, 0, 357,
	358, 359, 360, 361, 600, 601, 602, 436, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 371, 0, 0, 370, 603, 604, 0, 605,
	0, 372, 373, 0, 606, 0, 374, 375, 376, 0,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 607, 0, 388, 389,
	0, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 0,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 0, 423, 0, 0, 0, 433, 434, 0,
	608, 435, 609, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 0,
	446, 0, 611, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 614, 465, 615, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	616, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 0, 493, 494, 495,
	496, 617, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 0, 518, 519, 502, 503, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 618, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 619, 534, 535,
	536, 537, 620, 0, 540, 541, 0, 539, 0, 542,
	543, 544, 545, 546, 547, 334, 548, 0, 549, 621,
	622, 623, 624, 0, 558, 0, 550, 551, 552, 625,
	553, 626, 0, 554, 555, 556, 557, 0, 559, 560,
	0, 0, 561, 562, 563, 565, 566, 564, 567, 0,
	568, 0, 0, 569, 570, 571, 627, 628, 629, 0,
	573, 572, 574, 630, 249, 3879, 0, 0, 575, 576,
	631, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 580, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 581,
	582, 0, 271, 583, 272, 584, 0, 585, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 586, 587,
	588, 0, 280, 281, 589, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 590, 591, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 592,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	593, 594, 0, 0, 0, 0, 0, 0, 0, 340,
	341, 342, 595, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 596, 597, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 598, 0, 599, 356,
	0, 357, 358, 359, 360, 361, 600, 601, 602, 436,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 371, 0, 0, 370, 603, 604,
	0, 605, 0, 372, 373, 0, 606, 0, 374, 375,
	376, 0, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 607, 0,
	388, 389, 0, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 0, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 0, 423, 0, 0, 0, 433,
	434, 0, 608, 435, 609, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 0, 446, 0, 611, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 614, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 616, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 0, 493,
	494, 495, 496, 617, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 0, 518, 519, 502, 503, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 618, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 619,
	534, 535, 536, 537, 620, 0, 540, 541, 0, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 621, 622, 623, 624, 0, 558, 0, 550, 551,
	552, 625, 553, 626, 0, 554, 555, 556, 557, 0,
	559, 560, 0, 0, 561, 562, 563, 565, 566, 564,
	567, 0, 568, 0, 0, 569, 570, 571, 627, 628,
	629, 249, 573, 572, 574, 630, 0, 0, 0, 0,
	575, 576, 631, 577, 578, 579, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 581, 582, 0, 271,
	583, 272, 584, 0, 585, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 586, 587, 588, 0, 280,
	281, 589, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 590, 591,
	3581, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 592, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 593, 594, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 595,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 596, 597, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 598, 0, 599, 356, 0, 357, 358,
	359, 360, 361, 600, 601, 602, 436, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 371, 0, 0, 370, 603, 604, 0, 605, 0,
	372, 373, 0, 606, 0, 374, 375, 376, 0, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 607, 0, 388, 389, 0,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 0, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 0, 423, 0, 0, 0, 433, 434, 0, 608,
	435, 609, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 610, 0, 446,
	0, 611, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 612, 459, 460, 461,
	613, 462, 463, 464, 614, 465, 615, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 616,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 0, 493, 494, 495, 496,
	617, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 0, 518, 519, 502, 503, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 618, 0, 528, 0, 529,
	530, 531, 532, 504, 533, 538, 619, 534, 535, 536,
	537, 620, 0, 540, 541, 0, 539, 0, 542, 543,
	544, 545, 546, 547, 334, 548, 0, 549, 621, 622,
	623, 624, 0, 558, 0, 550, 551, 552, 625, 553,
	626, 0, 554, 555, 556, 557, 0, 559, 560, 0,
	0, 561, 562, 563, 565, 566, 564, 567, 0, 568,
	0, 0, 569, 570, 571, 627, 628, 629, 249, 573,
	572, 574, 630, 0, 0, 0, 0, 575, 576, 631,
	577, 578, 579, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	580, 0, 2531, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 581, 582, 0, 271, 583, 272, 584,
	0, 585, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 586, 587, 588, 0, 280, 281, 589, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 590, 591, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 592, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 593, 594, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 595, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 596, 597,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	598, 0, 599, 356, 0, 357, 358, 359, 360, 361,
	600, 601, 602, 436, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 371, 0,
	0, 370, 603, 604, 0, 605, 0, 372, 373, 0,
	606, 0, 374, 375, 376, 0, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 607, 0, 388, 389, 0, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 0, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 0, 423,
	0, 0, 0, 433, 434, 0, 608, 435, 609, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 610, 0, 446, 0, 611, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 614, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 616, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 0, 493, 494, 495, 496, 617, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 0, 518,
	519, 502, 503, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 618, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 619, 534, 535, 536, 537, 620, 0,
	540, 541, 0, 539, 0, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 621, 622, 623, 624, 0,
	558, 0, 550, 551, 552, 625, 553, 626, 0, 554,
	555, 556, 557, 0, 559, 560, 0, 0, 561, 562,
	563, 565, 566, 564, 567, 0, 568, 0, 0, 569,
	570, 571, 627, 628, 629, 0, 573, 572, 574, 630,
	249, 2813, 0, 0, 575, 576, 631, 577, 578, 579,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 580, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 581, 582, 0, 271, 583,
	272, 584, 0, 585, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 586, 587, 588, 0, 280, 281,
	589, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 590, 591, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 592, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 593, 594, 0, 0,
	0, 0, 0, 0, 0, 340, 341, 342, 595, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	596, 597, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 598, 0, 599, 356, 0, 357, 358, 359,
	360, 361, 600, 601, 602, 436, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 0, 368, 369,
	371, 0, 0, 370, 603, 604, 0, 605, 0, 372,
	373, 0, 606, 0, 374, 375, 376, 0, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 607, 0, 388, 389, 0, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 0, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	0, 423, 0, 0, 0, 433, 434, 0, 608, 435,
	609, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 2810, 0, 0, 444, 445, 610, 0, 446, 0,
	611, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 614, 465, 615, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 616, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 0, 493, 494, 495, 496, 617,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	0, 518, 519, 502, 503, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 618, 0, 528, 0, 529, 530,
	531, 532, 504, 533, 538, 619, 534, 535, 536, 537,
	620, 0, 540, 541, 0, 539, 0, 542, 543, 544,
	545, 546, 547, 334, 548, 0, 549, 621, 622, 623,
	624, 0, 558, 0, 550, 551, 552, 625, 553, 626,
	0, 554, 555, 556, 557, 0, 559, 560, 0, 0,
	561, 562, 563, 565, 566, 564, 567, 0, 568, 0,
	0, 569, 570, 571, 627, 628, 629, 249, 573, 572,
	574, 630, 0, 0, 0, 0, 575, 576, 631, 577,
	578, 579, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 2175, 262, 263, 0, 0, 0, 0, 0, 580,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 581, 582, 0, 271, 583, 272, 584, 0,
	585, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 586, 587, 588, 0, 280, 281, 589, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 590, 591, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 592, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 593, 594, 0, 0, 0, 0, 0,
	0, 0, 340, 341, 342, 595, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 596, 597, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 598,
	0, 599, 356, 0, 357, 358, 359, 360, 361, 600,
	601, 602, 436, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 371, 0, 0,
	370, 603, 604, 0, 605, 0, 372, 373, 0, 606,
	0, 374, 375, 376, 0, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 607, 0, 388, 389, 0, 0, 390, 0, 0,
	0, 391, 392, 0, 0, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 0, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 0, 423, 0,
	0, 0, 433, 434, 0, 608, 435, 609, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 0, 446, 0, 611, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	614, 465, 615, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 616, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 0, 493, 494, 495, 496, 617, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 0, 518, 519,
	502, 503, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 618, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 619, 534, 535, 536, 537, 620, 0, 540,
	541, 0, 539, 0, 542, 543, 544, 545, 546, 547,
	334, 548, 0, 549, 621, 622, 623, 624, 0, 558,
	0, 550, 551, 552, 625, 553, 626, 0, 554, 555,
	556, 557, 0, 559, 560, 0, 0, 561, 562, 563,
	565, 566, 564, 567, 0, 568, 0, 0, 569, 570,
	571, 627, 628, 629, 0, 573, 572, 574, 630, 2163,
	0, 249, 0, 575, 576, 631, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 581, 582, 0, 271,
	583, 272, 584, 0, 585, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 586, 587, 588, 0, 280,
	281, 589, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 590, 591,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 592, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 593, 594, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 595,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 596, 597, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 598, 0, 599, 356, 0, 357, 358,
	359, 360, 361, 600, 601, 602, 436, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 371, 0, 0, 370, 603, 604, 0, 605, 0,
	372, 373, 0, 606, 0, 374, 375, 376, 0, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 607, 0, 388, 389, 0,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 0, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 0, 423, 0, 0, 0, 433, 434, 0, 608,
	435, 609, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 610, 0, 446,
	0, 611, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 612, 459, 460, 461,
	613, 462, 463, 464, 614, 465, 615, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 616,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 0, 493, 494, 495, 496,
	617, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 0, 518, 519, 502, 503, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 618, 0, 528, 0, 529,
	530, 531, 532, 504, 533, 538, 619, 534, 535, 536,
	537, 620, 0, 540, 541, 0, 539, 0, 542, 543,
	544, 545, 546, 547, 334, 548, 0, 549, 621, 622,
	623, 624, 0, 558, 0, 550, 551, 552, 625, 553,
	626, 0, 554, 555, 556, 557, 0, 559, 560, 0,
	0, 561, 562, 563, 565, 566, 564, 567, 0, 568,
	0, 0, 569, 570, 571, 627, 628, 629, 0, 573,
	572, 574, 630, 686, 0, 249, 0, 575, 576, 631,
	577, 578, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 580, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	581, 582, 0, 271, 583, 272, 584, 0, 585, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 586,
	587, 588, 0, 280, 676, 589, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 590, 591, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	592, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 593, 594, 0, 0, 0, 0, 0, 0, 0,
	340, 341, 342, 595, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 596, 597, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 598, 0, 599,
	356, 0, 357, 358, 359, 360, 361, 600, 601, 602,
	436, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 371, 0, 0, 370, 603,
	604, 0, 605, 0, 372, 373, 0, 606, 0, 374,
	375, 376, 0, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 607,
	0, 388, 389, 0, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 687, 0, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 0, 423, 0, 0, 0,
	433, 434, 0, 608, 435, 609, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 610, 0, 446, 0, 611, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 614, 465,
	615, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 616, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 0,
	493, 494, 495, 496, 617, 497, 0, 498, 499, 505,
	506, 500, 501, 683, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 1522, 517, 0, 518, 519, 502, 503,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 618,
	0, 528, 0, 529, 530, 531, 532, 504, 533, 538,
	619, 534, 535, 536, 537, 620, 0, 540, 541, 0,
	539, 0, 542, 543, 544, 545, 546, 547, 334, 548,
	0, 549, 682, 622, 623, 624, 0, 558, 0, 550,
	551, 552, 625, 553, 626, 0, 554, 555, 556, 557,
	0, 559, 560, 0, 0, 561, 562, 563, 565, 566,
	564, 567, 0, 568, 0, 0, 569, 570, 571, 627,
	628, 629, 0, 573, 572, 574, 630, 1503, 0, 249,
	0, 575, 576, 631, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 580, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 581, 582, 0, 271, 583, 272,
	584, 0, 585, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 586, 587, 588, 0, 280, 281, 589,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 590, 591, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 592, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 593, 594, 0, 0, 0,
	0, 0, 0, 0, 340, 341, 342, 595, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 596,
	597, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 598, 0, 599, 356, 0, 357, 358, 359, 360,
	361, 1502, 601, 602, 436, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 371,
	0, 0, 370, 603, 604, 0, 605, 0, 372, 373,
	0, 606, 0, 374, 375, 376, 0, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 607, 0, 388, 389, 0, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 0, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 0,
	423, 0, 0, 0, 433, 434, 0, 608, 435, 609,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 0, 446, 0, 611,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 614, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 616, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 0, 493, 494, 495, 496, 617, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 0,
	518, 519, 502, 503, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 618, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 619, 534, 535, 536, 537, 620,
	0, 540, 541, 0, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 621, 622, 623, 624,
	0, 558, 0, 550, 551, 552, 625, 553, 626, 0,
	554, 555, 556, 557, 0, 559, 560, 0, 0, 561,
	562, 563, 565, 566, 564, 567, 0, 568, 0, 0,
	569, 570, 571, 627, 628, 629, 0, 573, 572, 574,
	630, 1496, 0, 249, 0, 575, 576, 631, 577, 578,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 581, 582,
	0, 271, 583, 272, 584, 0, 585, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 586, 587, 588,
	0, 280, 281, 589, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	590, 591, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 592, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 593,
	594, 0, 0, 0, 0, 0, 0, 0, 340, 341,
	342, 595, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 596, 597, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 598, 0, 599, 356, 0,
	357, 358, 359, 360, 361, 1495, 601, 602, 436, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 371, 0, 0, 370, 603, 604, 0,
	605, 0, 372, 373, 0, 606, 0, 374, 375, 376,
	0, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 607, 0, 388,
	389, 0, 0, 390, 0, 0, 0, 391, 392, 0,
	0, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	0, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 0, 423, 0, 0, 0, 433, 434,
	0, 608, 435, 609, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 610,
	0, 446, 0, 611, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 614, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 616, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 0, 493, 494,
	495, 496, 617, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 0, 518, 519, 502, 503, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 618, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 619, 534,
	535, 536, 537, 620, 0, 540, 541, 0, 539, 0,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	621, 622, 623, 624, 0, 558, 0, 550, 551, 552,
	625, 553, 626, 0, 554, 555, 556, 557, 0, 559,
	560, 0, 0, 561, 562, 563, 565, 566, 564, 567,
	0, 568, 0, 0, 569, 570, 571, 627, 628, 629,
	0, 573, 572, 574, 630, 1443, 0, 249, 0, 575,
	576, 631, 577, 578, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 580,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 581, 582, 0, 271, 583, 272, 584, 0,
	585, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 586, 587, 588, 0, 280, 281, 589, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 590, 591, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 592, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 593, 594, 0, 0, 0, 0, 0,
	0, 0, 340, 341, 342, 595, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 596, 597, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 598,
	0, 599, 356, 0, 357, 358, 359, 360, 361, 1442,
	601, 602, 436, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 371, 0, 0,
	370, 603, 604, 0, 605, 0, 372, 373, 0, 606,
	0, 374, 375, 376, 0, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 607, 0, 388, 389, 0, 0, 390, 0, 0,
	0, 391, 392, 0, 0, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 0, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 0, 423, 0,
	0, 0, 433, 434, 0, 608, 435, 609, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 0, 446, 0, 611, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	614, 465, 615, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 616, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 0, 493, 494, 495, 496, 617, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 0, 518, 519,
	502, 503, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 618, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 619, 534, 535, 536, 537, 620, 0, 540,
	541, 0, 539, 0, 542, 543, 544, 545, 546, 547,
	334, 548, 0, 549, 621, 622, 623, 624, 0, 558,
	0, 550, 551, 552, 625, 553, 626, 0, 554, 555,
	556, 557, 0, 559, 560, 0, 0, 561, 562, 563,
	565, 566, 564, 567, 0, 568, 0, 0, 569, 570,
	571, 627, 628, 629, 0, 573, 572, 574, 630, 1426,
	0, 249, 0, 575, 576, 631, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 581, 582, 0, 271,
	583, 272, 584, 0, 585, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 586, 587, 588, 0, 280,
	281, 589, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 590, 591,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 592, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 593, 594, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 595,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 596, 597, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 598, 0, 599, 356, 0, 357, 358,
	359, 360, 361, 1424, 601, 602, 436, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 371, 0, 0, 370, 603, 604, 0, 605, 0,
	372, 373, 0, 606, 0, 374, 375, 376, 0, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 607, 0, 388, 389, 0,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 0, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 0, 423, 0, 0, 0, 433, 434, 0, 608,
	435, 609, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 610, 0, 446,
	0, 611, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 612, 459, 460, 461,
	613, 462, 463, 464, 614, 465, 615, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 616,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 0, 493, 494, 495, 496,
	617, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 0, 518, 519, 502, 503, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 618, 0, 528, 0, 529,
	530, 531, 532, 504, 533, 538, 619, 534, 535, 536,
	537, 620, 0, 540, 541, 0, 539, 0, 542, 543,
	544, 545, 546, 547, 334, 548, 0, 549, 621, 622,
	623, 624, 0, 558, 0, 550, 551, 552, 625, 553,
	626, 0, 554, 555, 556, 557, 0, 559, 560, 0,
	0, 561, 562, 563, 565, 566, 564, 567, 0, 568,
	0, 0, 569, 570, 571, 627, 628, 629, 0, 573,
	572, 574, 630, 1420, 0, 249, 0, 575, 576, 631,
	577, 578, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 580, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	581, 582, 0, 271, 583, 272, 584, 0, 585, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 586,
	587, 588, 0, 280, 281, 589, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 590, 591, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	592, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 593, 594, 0, 0, 0, 0, 0, 0, 0,
	340, 341, 342, 595, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 596, 597, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 598, 0, 599,
	356, 0, 357, 358, 359, 360, 361, 600, 601, 602,
	436, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 371, 0, 0, 370, 603,
	604, 0, 605, 0, 372, 373, 0, 606, 0, 374,
	375, 376, 0, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 607,
	0, 388, 389, 0, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 0, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 0, 423, 0, 0, 0,
	433, 434, 0, 608, 435, 609, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 610, 0, 446, 0, 611, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 614, 465,
	615, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 616, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 0,
	493, 494, 495, 496, 617, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 519, 502, 503,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 618,
	0, 528, 0, 529, 530, 531, 532, 504, 533, 538,
	619, 534, 535, 536, 537, 620, 0, 540, 541, 0,
	539, 0, 542, 543, 544, 545, 546, 547, 334, 548,
	0, 549, 621, 622, 623, 624, 0, 558, 0, 550,
	551, 552, 625, 553, 626, 0, 554, 555, 556, 557,
	0, 559, 560, 0, 0, 561, 562, 563, 565, 566,
	564, 567, 0, 568, 0, 0, 569, 570, 571, 627,
	628, 629, 0, 573, 572, 574, 630, 1398, 0, 249,
	0, 575, 576, 631, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 580, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 581, 582, 0, 271, 583, 272,
	584, 0, 585, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 586, 587, 588, 0, 280, 281, 589,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 590, 591, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 592, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 593, 594, 0, 0, 0,
	0, 0, 0, 0, 340, 341, 342, 595, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 596,
	597, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 598, 0, 599, 356, 0, 357, 358, 359, 360,
	361, 1396, 601, 602, 436, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 371,
	0, 0, 370, 603, 604, 0, 605, 0, 372, 373,
	0, 606, 0, 374, 375, 376, 0, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 607, 0, 388, 389, 0, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 0, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 0,
	423, 0, 0, 0, 433, 434, 0, 608, 435, 609,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 0, 446, 0, 611,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 614, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 616, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 0, 493, 494, 495, 496, 617, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 0,
	518, 519, 502, 503, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 618, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 619, 534, 535, 536, 537, 620,
	0, 540, 541, 0, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 621, 622, 623, 624,
	0, 558, 0, 550, 551, 552, 625, 553, 626, 0,
	554, 555, 556, 557, 0, 559, 560, 0, 0, 561,
	562, 563, 565, 566, 564, 567, 0, 568, 0, 0,
	569, 570, 571, 627, 628, 629, 0, 573, 572, 574,
	630, 1350, 0, 249, 0, 575, 576, 631, 577, 578,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 581, 582,
	0, 271, 583, 272, 584, 0, 585, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 586, 587, 588,
	0, 280, 281, 589, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	590, 591, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 592, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 593,
	594, 0, 0, 0, 0, 0, 0, 0, 340, 341,
	342, 595, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 596, 597, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 598, 0, 599, 356, 0,
	357, 358, 359, 360, 361, 600, 601, 602, 436, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 371, 0, 0, 370, 603, 604, 0,
	605, 0, 372, 373, 0, 606, 0, 374, 375, 376,
	0, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 607, 0, 388,
	389, 0, 0, 390, 0, 0, 0, 391, 392, 0,
	0, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	0, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 0, 423, 0, 0, 0, 433, 434,
	0, 608, 435, 609, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 610,
	0, 446, 0, 611, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 614, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 616, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 0, 493, 494,
	495, 496, 617, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 0, 518, 519, 502, 503, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 618, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 619, 534,
	535, 536, 537, 620, 0, 540, 541, 0, 539, 0,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	621, 622, 623, 624, 0, 558, 0, 550, 551, 552,
	625, 553, 626, 0, 554, 555, 556, 557, 0, 559,
	560, 0, 0, 561, 562, 563, 565, 566, 564, 567,
	0, 568, 0, 0, 569, 570, 571, 627, 628, 629,
	0, 573, 572, 574, 630, 1334, 0, 249, 0, 575,
	576, 631, 577, 578, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 580,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 581, 582, 0, 271, 583, 272, 584, 0,
	585, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 586, 587, 588, 0, 280, 281, 589, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 590, 591, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 592, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 593, 594, 0, 0, 0, 0, 0,
	0, 0, 340, 341, 342, 595, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 596, 597, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 598,
	0, 599, 356, 0, 357, 358, 359, 360, 361, 600,
	601, 602, 436, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 371, 0, 0,
	370, 603, 604, 0, 605, 0, 372, 373, 0, 606,
	0, 374, 375, 376, 0, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 607, 0, 388, 389, 0, 0, 390, 0, 0,
	0, 391, 392, 0, 0, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 0, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 0, 423, 0,
	0, 0, 433, 434, 0, 608, 435, 609, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 0, 446, 0, 611, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	614, 465, 615, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 616, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 0, 493, 494, 495, 496, 617, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 0, 518, 519,
	502, 503, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 618, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 619, 534, 535, 536, 537, 620, 0, 540,
	541, 0, 539, 0, 542, 543, 544, 545, 546, 547,
	334, 548, 0, 549, 621, 622, 623, 624, 0, 558,
	0, 550, 551, 552, 625, 553, 626, 0, 554, 555,
	556, 557, 0, 559, 560, 0, 0, 561, 562, 563,
	565, 566, 564, 567, 0, 568, 0, 0, 569, 570,
	571, 627, 628, 629, 249, 573, 572, 574, 630, 0,
	0, 0, 0, 575, 576, 631, 577, 578, 579, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 1182, 262,
	263, 0, 0, 0, 0, 0, 580, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 581,
	582, 0, 271, 583, 272, 584, 0, 585, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 586, 587,
	588, 0, 280, 281, 589, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 590, 591, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 592,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	593, 594, 0, 0, 0, 0, 0, 0, 0, 340,
	341, 342, 595, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 596, 597, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 598, 0, 599, 356,
	0, 357, 358, 359, 360, 361, 600, 601, 602, 436,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 371, 0, 0, 370, 603, 604,
	0, 605, 0, 372, 373, 0, 606, 0, 374, 375,
	376, 0, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 607, 0,
	388, 389, 0, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 0, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 0, 423, 0, 0, 0, 433,
	434, 0, 608, 435, 609, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 0, 446, 0, 611, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 614, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 616, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 0, 493,
	494, 495, 496, 617, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 0, 518, 519, 502, 503, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 618, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 619,
	534, 535, 536, 537, 620, 0, 540, 541, 0, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 621, 622, 623, 624, 0, 558, 0, 550, 551,
	552, 625, 553, 626, 0, 554, 555, 556, 557, 0,
	559, 560, 0, 0, 561, 562, 563, 565, 566, 564,
	567, 0, 568, 0, 0, 569, 570, 571, 627, 628,
	629, 249, 573, 572, 574, 630, 0, 0, 0, 0,
	575, 576, 631, 577, 578, 579, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 692, 262, 263, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 581, 582, 0, 271,
	583, 272, 584, 0, 585, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 586, 587, 588, 0, 280,
	281, 589, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 590, 591,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 592, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 593, 594, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 595,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 596, 597, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 598, 0, 599, 356, 0, 357, 358,
	359, 360, 361, 600, 601, 602, 436, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 371, 0, 0, 370, 603, 604, 0, 605, 0,
	372, 373, 0, 606, 0, 374, 375, 376, 0, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 607, 0, 388, 389, 0,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 0, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 0, 423, 0, 0, 0, 433, 434, 0, 608,
	435, 609, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 610, 0, 446,
	0, 611, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 612, 459, 460, 461,
	613, 462, 463, 464, 614, 465, 615, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 616,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 0, 493, 494, 495, 496,
	617, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 0, 518, 519, 502, 503, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 618, 0, 528, 0, 529,
	530, 531, 532, 504, 533, 538, 619, 534, 535, 536,
	537, 620, 0, 540, 541, 0, 539, 0, 542, 543,
	544, 545, 546, 547, 334, 548, 0, 549, 621, 622,
	623, 624, 0, 558, 0, 550, 551, 552, 625, 553,
	626, 0, 554, 555, 556, 557, 0, 559, 560, 0,
	0, 561, 562, 563, 565, 566, 564, 567, 0, 568,
	0, 0, 569, 570, 571, 627, 628, 629, 0, 573,
	572, 574, 630, 686, 0, 249, 0, 575, 576, 631,
	577, 578, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 580, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	581, 582, 0, 271, 583, 272, 584, 0, 585, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 586,
	587, 588, 0, 280, 676, 589, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 674, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 590, 591, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	592, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 593, 594, 0, 0, 0, 0, 0, 0, 0,
	340, 341, 342, 595, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 596, 597, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 598, 0, 599,
	356, 0, 357, 358, 359, 360, 361, 600, 601, 602,
	436, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 371, 0, 0, 370, 603,
	604, 0, 605, 0, 372, 373, 0, 606, 0, 374,
	375, 376, 0, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 607,
	0, 388, 389, 0, 0, 390, 0, 0, 0, 391,
	675, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 687, 0, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 0, 423, 0, 0, 0,
	433, 434, 0, 608, 435, 609, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 610, 0, 446, 0, 611, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 614, 465,
	615, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 616, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 0,
	493, 494, 495, 496, 677, 497, 0, 498, 499, 505,
	506, 500, 501, 683, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 678, 517, 0, 518, 519, 502, 503,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 618,
	0, 528, 0, 529, 530, 531, 532, 504, 533, 538,
	619, 534, 535, 536, 537, 620, 0, 540, 541, 0,
	539, 0, 542, 543, 544, 545, 546, 547, 334, 548,
	0, 549, 682, 622, 623, 624, 0, 558, 0, 550,
	680, 552, 625, 553, 626, 0, 554, 555, 556, 557,
	0, 559, 560, 0, 0, 561, 562, 563, 565, 566,
	564, 567, 0, 568, 0, 0, 569, 570, 571, 627,
	628, 629, 0, 573, 572, 574, 630, 668, 0, 249,
	0, 575, 576, 631, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 580, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 581, 582, 0, 271, 583, 272,
	584, 0, 585, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 586, 587, 588, 0, 280, 281, 589,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 590, 591, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 592, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 593, 594, 0, 0, 0,
	0, 0, 0, 0, 340, 341, 342, 595, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 596,
	597, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 598, 0, 599, 356, 0, 357, 358, 359, 360,
	361, 600, 601, 602, 436, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 371,
	0, 0, 370, 603, 604, 0, 605, 0, 372, 373,
	0, 606, 0, 374, 375, 376, 0, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 607, 0, 388, 389, 0, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 0, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 0,
	423, 0, 0, 0, 433, 434, 0, 608, 435, 609,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 0, 446, 0, 611,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 614, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 616, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 0, 493, 494, 495, 496, 617, 497,
	0, 498, 499, 669, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 0,
	518, 519, 502, 503, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 618, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 619, 534, 535, 536, 537, 620,
	0, 540, 541, 0, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 621, 622, 623, 624,
	0, 558, 0, 550, 551, 552, 625, 553, 626, 0,
	554, 555, 556, 557, 0, 559, 560, 0, 0, 561,
	562, 563, 565, 566, 564, 567, 0, 568, 0, 0,
	569, 570, 571, 627, 628, 629, 0, 573, 572, 574,
	630, 665, 0, 249, 0, 575, 576, 631, 577, 578,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 581, 582,
	0, 271, 583, 272, 584, 0, 585, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 586, 587, 588,
	0, 280, 281, 589, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	590, 591, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 592, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 593,
	594, 0, 0, 0, 0, 0, 0, 0, 340, 341,
	342, 595, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 596, 597, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 598, 0, 599, 356, 0,
	357, 358, 359, 360, 361, 600, 601, 602, 436, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 371, 0, 0, 370, 603, 604, 0,
	605, 0, 372, 373, 0, 606, 0, 374, 375, 376,
	0, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 607, 0, 388,
	389, 0, 0, 390, 0, 0, 0, 391, 392, 0,
	0, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	0, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 0, 423, 0, 0, 0, 433, 434,
	0, 608, 435, 609, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 610,
	0, 446, 0, 611, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 614, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 616, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 0, 493, 494,
	495, 496, 617, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 0, 518, 519, 502, 503, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 618, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 619, 534,
	535, 536, 537, 620, 0, 540, 541, 0, 539, 0,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	621, 622, 623, 624, 0, 558, 0, 550, 551, 552,
	625, 553, 626, 0, 554, 555, 556, 557, 0, 559,
	560, 0, 0, 561, 562, 563, 565, 566, 564, 567,
	0, 568, 0, 0, 569, 570, 571, 627, 628, 629,
	0, 573, 572, 574, 630, 659, 0, 249, 0, 575,
	576, 631, 577, 578, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 580,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 581, 582, 0, 271, 583, 272, 584, 0,
	585, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 586, 587, 588, 0, 280, 281, 589, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 590, 591, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 592, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 593, 594, 0, 0, 0, 0, 0,
	0, 0, 340, 341, 342, 595, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 596, 597, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 598,
	0, 599, 356, 0, 357, 358, 359, 360, 361, 600,
	601, 602, 436, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 371, 0, 0,
	370, 603, 604, 0, 605, 0, 372, 373, 0, 606,
	0, 374, 375, 376, 0, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 607, 0, 388, 389, 0, 0, 390, 0, 0,
	0, 391, 392, 0, 0, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 0, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 0, 423, 0,
	0, 0, 433, 434, 0, 608, 435, 609, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 0, 446, 0, 611, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	614, 465, 615, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 616, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 0, 493, 494, 495, 496, 617, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 0, 518, 519,
	502, 503, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 618, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 619, 534, 535, 536, 537, 620, 0, 540,
	541, 0, 539, 0, 542, 543, 544, 545, 546, 547,
	334, 548, 0, 549, 621, 622, 623, 624, 0, 558,
	0, 550, 551, 552, 625, 553, 626, 0, 554, 555,
	556, 557, 0, 559, 560, 0, 0, 561, 562, 563,
	565, 566, 564, 567, 0, 568, 0, 0, 569, 570,
	571, 627, 628, 629, 0, 573, 572, 574, 630, 637,
	0, 249, 0, 575, 576, 631, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 581, 582, 0, 271,
	583, 272, 584, 0, 585, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 586, 587, 588, 0, 280,
	281, 589, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 590, 591,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 592, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 593, 594, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 595,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 596, 597, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 598, 0, 599, 356, 0, 357, 358,
	359, 360, 361, 600, 601, 602, 436, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 371, 0, 0, 370, 603, 604, 0, 605, 0,
	372, 373, 0, 606, 0, 374, 375, 376, 0, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 607, 0, 388, 389, 0,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 0, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 0, 423, 0, 0, 0, 433, 434, 0, 608,
	435, 609, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 610, 0, 446,
	0, 611, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 612, 459, 460, 461,
	613, 462, 463, 464, 614, 465, 615, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 616,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 0, 493, 494, 495, 496,
	617, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 0, 518, 519, 502, 503, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 618, 0, 528, 0, 529,
	530, 531, 532, 504, 533, 538, 619, 534, 535, 536,
	537, 620, 0, 540, 541, 0, 539, 0, 542, 543,
	544, 545, 546, 547, 334, 548, 0, 549, 621, 622,
	623, 624, 0, 558, 0, 550, 551, 552, 625, 553,
	626, 0, 554, 555, 556, 557, 0, 559, 560, 0,
	0, 561, 562, 563, 565, 566, 564, 567, 0, 568,
	0, 0, 569, 570, 571, 627, 628, 629, 249, 573,
	572, 574, 630, 0, 0, 0, 0, 575, 576, 631,
	577, 578, 579, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	580, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 581, 582, 0, 271, 583, 272, 584,
	0, 585, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 586, 587, 588, 0, 280, 281, 589, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 590, 591, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 592, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 593, 594, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 595, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 596, 597,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	598, 0, 599, 356, 0, 357, 358, 359, 360, 361,
	600, 601, 602, 436, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 371, 0,
	0, 370, 603, 604, 0, 605, 0, 372, 373, 0,
	606, 0, 374, 375, 376, 0, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 607, 0, 388, 389, 0, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 0, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 0, 423,
	0, 0, 0, 433, 434, 0, 608, 435, 609, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 610, 0, 446, 0, 611, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 614, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 616, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 0, 493, 494, 495, 496, 617, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 0, 518,
	519, 502, 503, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 618, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 619, 534, 535, 536, 537, 620, 0,
	540, 541, 0, 539, 0, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 621, 622, 623, 624, 0,
	558, 0, 550, 551, 552, 625, 553, 626, 0, 554,
	555, 556, 557, 0, 559, 560, 0, 0, 561, 562,
	563, 565, 566, 564, 567, 0, 568, 0, 0, 569,
	570, 571, 627, 628, 629, 249, 573, 572, 574, 630,
	0, 0, 0, 0, 575, 576, 631, 577, 578, 579,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 580, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	581, 582, 0, 271, 583, 272, 584, 0, 585, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 586,
	587, 588, 0, 280, 281, 589, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 590, 591, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	592, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 593, 594, 0, 0, 0, 0, 0, 0, 0,
	340, 341, 342, 595, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 596, 597, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 598, 0, 599,
	356, 0, 357, 358, 359, 360, 361, 3292, 601, 602,
	436, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 371, 0, 0, 370, 603,
	604, 0, 605, 0, 372, 373, 0, 606, 0, 374,
	375, 376, 0, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 607,
	0, 388, 389, 0, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 0, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 0, 423, 0, 0, 0,
	433, 434, 0, 608, 435, 609, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 610, 0, 446, 0, 611, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 614, 465,
	615, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 616, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 0,
	493, 494, 495, 496, 617, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 519, 502, 503,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 618,
	0, 528, 0, 529, 530, 531, 532, 504, 533, 538,
	619, 534, 535, 536, 537, 620, 0, 540, 541, 0,
	539, 0, 542, 543, 544, 545, 546, 547, 334, 548,
	0, 549, 621, 622, 623, 624, 0, 558, 0, 550,
	551, 552, 625, 553, 626, 0, 554, 555, 556, 557,
	0, 559, 560, 0, 0, 561, 562, 563, 565, 566,
	564, 567, 0, 568, 0, 0, 569, 570, 571, 627,
	628, 629, 249, 573, 572, 574, 630, 0, 0, 0,
	0, 575, 576, 631, 577, 578, 579, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 580, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 581, 582, 0,
	271, 583, 272, 584, 0, 585, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 586, 587, 588, 0,
	280, 281, 589, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 590,
	591, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 592, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 593, 594,
	0, 0, 0, 0, 0, 0, 0, 340, 341, 342,
	595, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 596, 597, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 598, 0, 599, 356, 0, 357,
	358, 359, 360, 361, 3240, 601, 602, 436, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 371, 0, 0, 370, 603, 604, 0, 605,
	0, 372, 373, 0, 606, 0, 374, 375, 376, 0,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 607, 0, 388, 389,
	0, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 0,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 0, 423, 0, 0, 0, 433, 434, 0,
	608, 435, 609, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 0,
	446, 0, 611, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 614, 465, 615, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	616, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 0, 493, 494, 495,
	496, 617, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 0, 518, 519, 502, 503, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 618, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 619, 534, 535,
	536, 537, 620, 0, 540, 541, 0, 539, 0, 542,
	543, 544, 545, 546, 547, 334, 548, 0, 549, 621,
	622, 623, 624, 0, 558, 0, 550, 551, 552, 625,
	553, 626, 0, 554, 555, 556, 557, 0, 559, 560,
	0, 0, 561, 562, 563, 565, 566, 564, 567, 0,
	568, 0, 0, 569, 570, 571, 627, 628, 629, 249,
	573, 572, 574, 630, 0, 0, 0, 0, 575, 576,
	631, 577, 578, 579, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 580, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 581, 582, 0, 271, 583, 272,
	584, 0, 585, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 586, 587, 588, 0, 280, 281, 589,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 590, 591, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 592, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 593, 594, 0, 0, 0,
	0, 0, 0, 0, 340, 341, 342, 595, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 596,
	597, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 598, 0, 599, 356, 0, 357, 358, 359, 360,
	361, 3181, 601, 602, 436, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 371,
	0, 0, 370, 603, 604, 0, 605, 0, 372, 373,
	0, 606, 0, 374, 375, 376, 0, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 607, 0, 388, 389, 0, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 0, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 0,
	423, 0, 0, 0, 433, 434, 0, 608, 435, 609,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 0, 446, 0, 611,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 614, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 616, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 0, 493, 494, 495, 496, 617, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 0,
	518, 519, 502, 503, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 618, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 619, 534, 535, 536, 537, 620,
	0, 540, 541, 0, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 621, 622, 623, 624,
	0, 558, 0, 550, 551, 552, 625, 553, 626, 0,
	554, 555, 556, 557, 0, 559, 560, 0, 0, 561,
	562, 563, 565, 566, 564, 567, 0, 568, 0, 0,
	569, 570, 571, 627, 628, 629, 249, 573, 572, 574,
	630, 0, 0, 0, 0, 575, 576, 631, 577, 578,
	579, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 580, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 581, 582, 0, 271, 583, 272, 584, 0, 585,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	586, 587, 588, 0, 280, 281, 589, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 590, 591, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 592, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 593, 594, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 595, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 596, 597, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 598, 0,
	599, 356, 0, 357, 358, 359, 360, 361, 3179, 601,
	602, 436, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 371, 0, 0, 370,
	603, 604, 0, 605, 0, 372, 373, 0, 606, 0,
	374, 375, 376, 0, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	607, 0, 388, 389, 0, 0, 390, 0, 0, 0,
	391, 392, 0, 0, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 0, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 0, 423, 0, 0,
	0, 433, 434, 0, 608, 435, 609, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 610, 0, 446, 0, 611, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 612, 459, 460, 461, 613, 462, 463, 464, 614,
	465, 615, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 616, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	0, 493, 494, 495, 496, 617, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 0, 518, 519, 502,
	503, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	618, 0, 528, 0, 529, 530, 531, 532, 504, 533,
	538, 619, 534, 535, 536, 537, 620, 0, 540, 541,
	0, 539, 0, 542, 543, 544, 545, 546, 547, 334,
	548, 0, 549, 621, 622, 623, 624, 0, 558, 0,
	550, 551, 552, 625, 553, 626, 0, 554, 555, 556,
	557, 0, 559, 560, 0, 0, 561, 562, 563, 565,
	566, 564, 567, 0, 568, 0, 0, 569, 570, 571,
	627, 628, 629, 249, 573, 572, 574, 630, 0, 0,
	0, 0, 575, 576, 631, 577, 578, 579, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 581, 582,
	0, 271, 583, 272, 584, 0, 585, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 586, 587, 588,
	0, 280, 281, 589, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	590, 591, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 592, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 593,
	594, 0, 0, 0, 0, 0, 0, 0, 340, 341,
	342, 595, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 596, 597, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 598, 0, 599, 356, 0,
	357, 358, 359, 360, 361, 3165, 601, 602, 436, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 371, 0, 0, 370, 603, 604, 0,
	605, 0, 372, 373, 0, 606, 0, 374, 375, 376,
	0, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 607, 0, 388,
	389, 0, 0, 390, 0, 0, 0, 391, 392, 0,
	0, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	0, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 0, 423, 0, 0, 0, 433, 434,
	0, 608, 435, 609, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 610,
	0, 446, 0, 611, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 614, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 616, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 0, 493, 494,
	495, 496, 617, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 0, 518, 519, 502, 503, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 618, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 619, 534,
	535, 536, 537, 620, 0, 540, 541, 0, 539, 0,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	621, 622, 623, 624, 0, 558, 0, 550, 551, 552,
	625, 553, 626, 0, 554, 555, 556, 557, 0, 559,
	560, 0, 0, 561, 562, 563, 565, 566, 564, 567,
	0, 568, 0, 0, 569, 570, 571, 627, 628, 629,
	249, 573, 572, 574, 630, 0, 0, 0, 0, 575,
	576, 631, 577, 578, 579, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 580, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 581, 582, 0, 271, 583,
	272, 584, 0, 585, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 586, 587, 588, 0, 280, 281,
	589, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 590, 591, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 592, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 593, 594, 0, 0,
	0, 0, 0, 0, 0, 340, 341, 342, 595, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	596, 597, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 598, 0, 599, 356, 0, 357, 358, 359,
	360, 361, 2763, 601, 602, 436, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 0, 368, 369,
	371, 0, 0, 370, 603, 604, 0, 605, 0, 372,
	373, 0, 606, 0, 374, 375, 376, 0, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 607, 0, 388, 389, 0, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 0, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	0, 423, 0, 0, 0, 433, 434, 0, 608, 435,
	609, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 610, 0, 446, 0,
	611, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 614, 465, 615, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 616, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 0, 493, 494, 495, 496, 617,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	0, 518, 519, 502, 503, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 618, 0, 528, 0, 529, 530,
	531, 532, 504, 533, 538, 619, 534, 535, 536, 537,
	620, 0, 540, 541, 0, 539, 0, 542, 543, 544,
	545, 546, 547, 334, 548, 0, 549, 621, 622, 623,
	624, 0, 558, 0, 550, 551, 552, 625, 553, 626,
	0, 554, 555, 556, 557, 0, 559, 560, 0, 0,
	561, 562, 563, 565, 566, 564, 567, 0, 568, 0,
	0, 569, 570, 571, 627, 628, 629, 249, 573, 572,
	574, 630, 0, 0, 0, 0, 575, 576, 631, 577,
	578, 579, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 580,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 581, 582, 0, 271, 583, 272, 584, 0,
	585, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 586, 587, 588, 0, 280, 281, 589, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 590, 591, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 592, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 593, 594, 0, 0, 0, 0, 0,
	0, 0, 340, 341, 342, 595, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 596, 597, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 598,
	0, 599, 356, 0, 357, 358, 359, 360, 361, 600,
	601, 602, 436, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 371, 0, 0,
	370, 603, 604, 0, 605, 0, 372, 373, 0, 606,
	0, 374, 375, 376, 0, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 607, 0, 388, 389, 0, 0, 390, 0, 0,
	0, 391, 392, 0, 0, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 0, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 0, 423, 0,
	0, 0, 433, 434, 0, 608, 435, 609, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 0, 446, 0, 611, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	614, 465, 615, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 616, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 0, 493, 494, 495, 496, 617, 497, 0, 498,
	499, 669, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 0, 518, 519,
	502, 503, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 618, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 619, 534, 535, 536, 537, 620, 0, 540,
	541, 0, 539, 0, 542, 543, 544, 545, 546, 547,
	334, 548, 0, 549, 621, 622, 623, 624, 0, 558,
	0, 550, 551, 552, 625, 553, 626, 0, 554, 555,
	556, 557, 0, 559, 560, 0, 0, 561, 562, 563,
	565, 566, 564, 567, 0, 568, 0, 0, 569, 570,
	571, 627, 628, 629, 249, 573, 572, 574, 630, 0,
	0, 0, 0, 575, 576, 631, 577, 578, 579, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 580, 0, 2109, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 581,
	582, 0, 271, 583, 272, 584, 0, 585, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 586, 587,
	588, 0, 280, 281, 589, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 590, 591, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 592,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	593, 594, 0, 0, 0, 0, 0, 0, 0, 340,
	341, 342, 595, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 596, 597, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 598, 0, 599, 356,
	0, 357, 358, 359, 360, 361, 600, 601, 602, 436,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 371, 0, 0, 370, 603, 604,
	0, 605, 0, 372, 373, 0, 606, 0, 374, 375,
	376, 0, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 607, 0,
	388, 389, 0, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 0, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 0, 423, 0, 0, 0, 433,
	434, 0, 608, 435, 609, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 0, 446, 0, 611, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 614, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 616, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 0, 493,
	494, 495, 496, 617, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 0, 0, 519, 502, 503, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 618, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 619,
	534, 535, 536, 537, 620, 0, 540, 541, 0, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 621, 622, 623, 624, 0, 558, 0, 550, 551,
	552, 625, 553, 626, 0, 554, 555, 556, 557, 0,
	559, 560, 0, 0, 561, 562, 563, 565, 566, 564,
	567, 0, 568, 0, 0, 569, 570, 571, 627, 628,
	629, 249, 573, 572, 574, 630, 0, 0, 0, 0,
	575, 576, 631, 577, 578, 579, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 581, 582, 0, 271,
	583, 272, 584, 0, 585, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 586, 587, 588, 0, 280,
	281, 589, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 590, 591,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 592, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 593, 594, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 595,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 596, 597, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 598, 0, 599, 356, 0, 357, 358,
	359, 360, 361, 1467, 601, 602, 436, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 371, 0, 0, 370, 603, 604, 0, 605, 0,
	372, 373, 0, 606, 0, 374, 375, 376, 0, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 607, 0, 388, 389, 0,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 0, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 0, 423, 0, 0, 0, 433, 434, 0, 608,
	435, 609, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 610, 0, 446,
	0, 611, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 612, 459, 460, 461,
	613, 462, 463, 464, 614, 465, 615, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 616,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 0, 493, 494, 495, 496,
	617, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 0, 518, 519, 502, 503, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 618, 0, 528, 0, 529,
	530, 531, 532, 504, 533, 538, 619, 534, 535, 536,
	537, 620, 0, 540, 541, 0, 539, 0, 542, 543,
	544, 545, 546, 547, 334, 548, 0, 549, 621, 622,
	623, 624, 0, 558, 0, 550, 551, 552, 625, 553,
	626, 0, 554, 555, 556, 557, 0, 559, 560, 0,
	0, 561, 562, 563, 565, 566, 564, 567, 0, 568,
	0, 0, 569, 570, 571, 627, 628, 629, 249, 573,
	572, 574, 630, 0, 0, 0, 0, 575, 576, 631,
	577, 578, 579, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	580, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 581, 582, 0, 271, 583, 272, 584,
	0, 585, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 586, 587, 588, 0, 280, 281, 589, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 590, 591, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 592, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 593, 594, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 595, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 596, 597,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	598, 0, 599, 356, 0, 357, 358, 359, 360, 361,
	600, 601, 602, 436, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 371, 0,
	0, 370, 603, 604, 0, 605, 0, 372, 373, 0,
	606, 0, 374, 375, 376, 0, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 607, 0, 388, 389, 0, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 0, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 0, 423,
	0, 0, 0, 433, 434, 0, 608, 435, 609, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 610, 0, 446, 0, 611, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 614, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 616, 476, 1134, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 0, 493, 494, 495, 496, 617, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 0, 518,
	519, 502, 503, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 618, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 619, 534, 535, 536, 537, 620, 0,
	540, 541, 0, 539, 0, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 621, 622, 623, 624, 0,
	558, 0, 550, 551, 552, 625, 553, 626, 0, 554,
	555, 556, 557, 0, 559, 560, 0, 0, 561, 562,
	563, 565, 566, 564, 567, 0, 568, 0, 0, 569,
	570, 571, 627, 628, 629, 249, 573, 572, 574, 630,
	0, 0, 0, 0, 575, 576, 631, 577, 578, 579,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 580, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	581, 582, 0, 271, 583, 272, 584, 0, 585, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 586,
	587, 588, 0, 280, 281, 589, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 590, 591, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	592, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 593, 594, 0, 0, 0, 0, 0, 0, 0,
	340, 341, 342, 595, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 596, 597, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 598, 0, 599,
	0, 0, 357, 358, 359, 360, 361, 600, 601, 602,
	436, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 371, 0, 0, 370, 603,
	604, 0, 605, 0, 372, 373, 0, 606, 0, 374,
	375, 376, 0, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 607,
	0, 388, 389, 0, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 0, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 0, 423, 0, 0, 0,
	433, 434, 0, 608, 435, 609, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 610, 0, 446, 0, 611, 447, 448, 440, 449,
	450, 0, 452, 453, 454, 455, 456, 0, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 614, 465,
	615, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	0, 474, 475, 616, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 0,
	493, 494, 495, 496, 617, 0, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 519, 502, 503,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 618,
	0, 528, 0, 529, 530, 531, 532, 504, 533, 538,
	619, 534, 535, 536, 537, 620, 0, 540, 541, 0,
	539, 0, 542, 543, 544, 545, 546, 547, 334, 548,
	0, 549, 621, 622, 623, 624, 0, 558, 0, 550,
	551, 552, 625, 553, 626, 0, 554, 555, 556, 557,
	0, 559, 560, 0, 0, 561, 562, 563, 565, 566,
	564, 567, 0, 568, 0, 0, 569, 570, 571, 627,
	628, 629, 0, 573, 572, 574, 630, 0, 0, 0,
	0, 575, 576, 631, 577, 578, 579, 1679, 1680, 0,
	1712, 1713, 1714, 1722, 1723, 1724, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1715,
	1710, 0, 0, 0, 0, 1679, 1680, 1682, 1712, 1713,
	1714, 1722, 1723, 1724, 0, 1728, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1715, 1710, 0,
	0, 0, 0, 0, 0, 1682, 0, 0, 0, 0,
	0, 1681, 0, 1728, 0, 0, 0, 0, 0, 0,
	0, 1701, 0, 0, 0, 0, 0, 0, 0, 0,
	1698, 0, 0, 0, 0, 0, 0, 0, 0, 1681,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1701,
	0, 0, 0, 0, 0, 0, 0, 0, 1698, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1704, 1705, 1706, 1707, 0, 0, 0, 0, 0,
	0, 1687, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1704,
	1705, 1706, 1707, 0, 0, 0, 0, 0, 0, 1687,
	0, 0, 0, 0, 0, 0, 1719, 0, 0, 1729,
	0, 0, 0, 0, 0, 1709, 1711, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1725, 0, 1726, 1719, 0, 0, 1729, 0, 0,
	1696, 1697, 0, 1709, 1711, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1717, 1725,
	0, 1726, 0, 0, 0, 0, 0, 0, 1696, 1697,
	0, 0, 1702, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1727, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1727, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1708, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1703, 0, 0, 0, 0, 0, 0, 0, 1708,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1720, 0, 1703,
	1679, 1680, 0, 1712, 1713, 1714, 1722, 1723, 1724, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1715, 1710, 0, 1720, 0, 0, 0, 0,
	1682, 0, 0, 0, 0, 0, 0, 0, 1728, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1681, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1701, 0, 0, 0, 0, 0,
	0, 0, 0, 1698, 0, 0, 0, 0, 0, 0,
	0, 0, 1718, 0, 0, 0, 0, 1693, 1694, 1700,
	1721, 1699, 1695, 0, 1692, 1690, 1691, 1683, 1684, 1685,
	1686, 1688, 1689, 0, 0, 0, 0, 4207, 0, 0,
	1718, 0, 0, 0, 0, 1693, 1694, 1700, 1721, 1699,
	1695, 0, 1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688,
	1689, 0, 0, 0, 0, 4108, 0, 0, 0, 0,
	0, 0, 0, 0, 1704, 1705, 1706, 1707, 0, 0,
	0, 0, 0, 0, 1687, 0, 0, 1679, 1680, 0,
	1712, 1713, 1714, 1722, 1723, 1724, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1715,
	1710, 0, 0, 0, 0, 0, 0, 1682, 0, 1719,
	0, 0, 1729, 0, 0, 1728, 0, 0, 1709, 1711,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1725, 0, 1726, 0, 0, 0,
	0, 1681, 0, 1696, 1697, 0, 0, 0, 0, 0,
	0, 1701, 0, 0, 0, 0, 0, 0, 0, 0,
	1698, 1717, 1679, 1680, 0, 1712, 1713, 1714, 1722, 1723,
	1724, 0, 0, 0, 0, 1702, 0, 0, 0, 0,
	0, 0, 0, 0, 1715, 1710, 0, 0, 0, 0,
	0, 0, 1682, 0, 0, 0, 0, 0, 0, 0,
	1728, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1727, 0, 0,
	0, 0, 0, 0, 0, 0, 1681, 0, 0, 0,
	0, 1704, 1705, 1706, 1707, 1716, 1701, 0, 0, 0,
	0, 1687, 0, 0, 0, 1698, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1719, 0, 0, 1729,
	0, 0, 0, 0, 0, 1709, 1711, 0, 0, 0,
	0, 0, 0, 0, 1708, 0, 0, 0, 0, 0,
	0, 1725, 0, 1726, 0, 0, 0, 0, 0, 0,
	1696, 1697, 0, 0, 1703, 0, 1704, 1705, 1706, 1707,
	0, 0, 0, 0, 0, 0, 1687, 0, 1717, 1679,
	1680, 0, 1712, 1713, 1714, 1722, 1723, 1724, 0, 0,
	1720, 0, 1702, 0, 0, 0, 0, 0, 0, 0,
	0, 1715, 1710, 0, 0, 0, 0, 0, 0, 1682,
	0, 1719, 0, 0, 1729, 0, 0, 1728, 0, 0,
	1709, 1711, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1727, 0, 1725, 0, 1726, 0,
	0, 0, 0, 1681, 0, 1696, 1697, 0, 0, 0,
	0, 0, 1716, 1701, 0, 0, 0, 0, 0, 0,
	0, 0, 1698, 1717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1702, 0, 0,
	0, 0, 0, 0, 0, 1718, 0, 0, 0, 0,
	1693, 1694, 1700, 1721, 1699, 1695, 0, 1692, 1690, 1691,
	1683, 1684, 1685, 1686, 1688, 1689, 0, 0, 0, 0,
	4107, 1708, 0, 0, 0, 0, 0, 0, 0, 1727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1703, 0, 1704, 1705, 1706, 1707, 1716, 0, 0,
	0, 0, 0, 1687, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1720, 0, 0,
	0, 0, 1679, 1680, 0, 1712, 1713, 1714, 1722, 1723,
	1724, 0, 0, 0, 0, 0, 0, 0, 1719, 0,
	0, 1729, 0, 0, 1715, 1710, 0, 1709, 1711, 0,
	0, 0, 1682, 0, 0, 0, 1708, 0, 0, 0,
	1728, 0, 0, 1725, 0, 1726, 0, 0, 0, 0,
	0, 0, 1696, 1697, 0, 0, 1703, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1681, 0, 0, 0,
	1717, 0, 0, 0, 0, 0, 1701, 0, 0, 0,
	0, 0, 1720, 0, 1702, 1698, 0, 0, 0, 0,
	0, 0, 1718, 0, 0, 0, 0, 1693, 1694, 1700,
	1721, 1699, 1695, 0, 1692, 1690, 1691, 1683, 1684, 1685,
	1686, 1688, 1689, 0, 0, 0, 0, 3998, 0, 0,
	0, 0, 0, 0, 0, 0, 1727, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1704, 1705, 1706, 1707,
	0, 0, 0, 0, 0, 0, 1687, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1718, 0, 0,
	0, 0, 1693, 1694, 1700, 1721, 1699, 1695, 0, 1692,
	1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689, 0, 0,
	0, 1719, 3947, 1708, 1729, 0, 0, 0, 0, 0,
	1709, 1711, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1703, 0, 0, 1725, 0, 1726, 0,
	0, 0, 0, 0, 0, 1696, 1697, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1720,
	0, 0, 0, 1717, 1679, 1680, 0, 1712, 1713, 1714,
	1722, 1723, 1724, 0, 0, 0, 0, 1702, 0, 0,
	0, 0, 0, 0, 0, 0, 1715, 1710, 0, 0,
	0, 0, 0, 0, 1682, 0, 0, 0, 0, 0,
	0, 0, 1728, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1727,
	0, 0, 0, 0, 0, 0, 0, 0, 1681, 0,
	0, 0, 0, 0, 0, 0, 0, 1716, 1701, 0,
	0, 0, 0, 0, 0, 0, 0, 1698, 0, 0,
	0, 0, 0, 0, 1718, 0, 0, 0, 0, 1693,
	1694, 1700, 1721, 1699, 1695, 0, 1692, 1690, 1691, 1683,
	1684, 1685, 1686, 1688, 1689, 0, 0, 0, 0, 3803,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1708, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1703, 0, 1704, 1705,
	1706, 1707, 0, 0, 0, 0, 0, 0, 1687, 0,
	0, 1679, 1680, 0, 1712, 1713, 1714, 1722, 1723, 1724,
	0, 0, 1720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1715, 1710, 0, 0, 0, 0, 0,
	0, 1682, 0, 1719, 0, 0, 1729, 0, 0, 1728,
	0, 0, 1709, 1711, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1725, 0,
	1726, 0, 0, 0, 0, 1681, 0, 1696, 1697, 0,
	0, 0, 0, 0, 0, 1701, 0, 0, 0, 0,
	0, 0, 0, 0, 1698, 1717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1702,
	0, 0, 0, 0, 0, 0, 0, 1718, 0, 0,
	0, 0, 1693, 1694, 1700, 1721, 1699, 1695, 0, 1692,
	1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689, 0, 0,
	0, 0, 3746, 0, 0, 0, 0, 0, 0, 0,
	0, 1727, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1704, 1705, 1706, 1707, 1716,
	0, 0, 0, 0, 0, 1687, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1679, 1680, 0, 1712, 1713, 1714,
	1722, 1723, 1724, 0, 0, 0, 0, 0, 0, 0,
	1719, 0, 0, 1729, 0, 0, 1715, 1710, 0, 1709,
	1711, 0, 0, 0, 1682, 0, 0, 0, 1708, 0,
	0, 0, 1728, 0, 0, 1725, 0, 1726, 0, 0,
	0, 0, 0, 0, 1696, 1697, 0, 0, 1703, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1681, 0,
	0, 0, 1717, 0, 0, 0, 0, 0, 1701, 0,
	0, 0, 0, 0, 1720, 0, 1702, 1698, 0, 0,
	0, 0, 1679, 1680, 0, 1712, 1713, 1714, 1722, 1723,
	1724, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1715, 1710, 0, 0, 0, 0,
	0, 0, 1682, 0, 0, 0, 0, 0, 1727, 0,
	1728, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1681, 0, 1704, 1705,
	1706, 1707, 0, 0, 0, 0, 1701, 0, 1687, 0,
	0, 0, 0, 0, 0, 1698, 0, 0, 0, 1718,
	0, 0, 0, 0, 1693, 1694, 1700, 1721, 1699, 1695,
	0, 1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689,
	0, 0, 0, 1719, 3745, 1708, 1729, 0, 0, 0,
	0, 0, 1709, 1711, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1703, 0, 0, 1725, 0,
	1726, 0, 0, 0, 0, 0, 0, 1696, 1697, 0,
	0, 0, 0, 0, 0, 0, 1704, 1705, 1706, 1707,
	0, 1720, 0, 0, 0, 1717, 1687, 0, 0, 1679,
	1680, 0, 1712, 1713, 1714, 1722, 1723, 1724, 0, 1702,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1715, 1710, 0, 0, 0, 0, 0, 0, 1682,
	0, 1719, 0, 0, 1729, 0, 0, 1728, 0, 0,
	1709, 1711, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1727, 0, 0, 0, 0, 1725, 0, 1726, 0,
	0, 0, 0, 1681, 0, 1696, 1697, 0, 0, 1716,
	0, 0, 0, 1701, 0, 0, 0, 0, 0, 0,
	0, 0, 1698, 1717, 0, 0, 1718, 0, 0, 0,
	0, 1693, 1694, 1700, 1721, 1699, 1695, 1702, 1692, 1690,
	1691, 1683, 1684, 1685, 1686, 1688, 1689, 0, 0, 0,
	0, 3744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1708, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1727,
	0, 0, 0, 0, 0, 0, 0, 0, 1703, 0,
	0, 0, 0, 1704, 1705, 1706, 1707, 1716, 0, 0,
	0, 0, 0, 1687, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1720, 0, 0, 0, 0, 0,
	0, 0, 1679, 1680, 0, 1712, 1713, 1714, 1722, 1723,
	1724, 0, 0, 0, 0, 0, 0, 0, 1719, 0,
	0, 1729, 0, 0, 1715, 1710, 0, 1709, 1711, 0,
	0, 0, 1682, 0, 0, 0, 1708, 0, 0, 0,
	1728, 0, 0, 1725, 0, 1726, 0, 0, 0, 0,
	0, 0, 1696, 1697, 0, 0, 1703, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1681, 0, 0, 0,
	1717, 0, 0, 0, 0, 0, 1701, 0, 0, 0,
	0, 0, 1720, 0, 1702, 1698, 0, 0, 0, 1718,
	0, 0, 0, 0, 1693, 1694, 1700, 1721, 1699, 1695,
	0, 1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689,
	0, 0, 0, 0, 3439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1727, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1704, 1705, 1706, 1707,
	0, 0, 0, 0, 0, 0, 1687, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1718, 0, 0,
	0, 0, 1693, 1694, 1700, 1721, 1699, 1695, 0, 1692,
	1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689, 0, 0,
	0, 1719, 2973, 1708, 1729, 0, 0, 0, 0, 0,
	1709, 1711, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1703, 0, 0, 1725, 0, 1726, 0,
	0, 0, 0, 0, 0, 1696, 1697, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1720,
	0, 0, 0, 1717, 1679, 1680, 0, 1712, 1713, 1714,
	1722, 1723, 1724, 0, 0, 0, 0, 1702, 0, 0,
	0, 0, 0, 0, 0, 0, 1715, 1710, 0, 0,
	0, 0, 0, 0, 1682, 0, 0, 0, 0, 0,
	0, 0, 1728, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1727,
	0, 0, 0, 0, 0, 0, 0, 0, 1681, 0,
	0, 0, 0, 0, 0, 0, 0, 1716, 1701, 0,
	0, 0, 0, 0, 0, 0, 0, 1698, 0, 0,
	0, 0, 0, 0, 1718, 0, 0, 0, 0, 1693,
	1694, 1700, 1721, 1699, 1695, 0, 1692, 1690, 1691, 1683,
	1684, 1685, 1686, 1688, 1689, 0, 0, 0, 0, 2972,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1708, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1703, 0, 1704, 1705,
	1706, 1707, 0, 0, 0, 0, 0, 0, 1687, 0,
	0, 1679, 1680, 0, 1712, 1713, 1714, 1722, 1723, 1724,
	0, 0, 1720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1715, 1710, 0, 0, 0, 0, 0,
	0, 1682, 0, 1719, 0, 0, 1729, 0, 0, 1728,
	0, 0, 1709, 1711, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1725, 0,
	1726, 0, 0, 0, 0, 1681, 0, 1696, 1697, 0,
	0, 0, 0, 0, 0, 1701, 0, 0, 0, 0,
	0, 0, 0, 0, 1698, 1717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1702,
	0, 0, 0, 0, 0, 0, 0, 1718, 0, 0,
	0, 0, 1693, 1694, 1700, 1721, 1699, 1695, 0, 1692,
	1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689, 0, 0,
	0, 0, 2971, 0, 0, 0, 0, 0, 0, 0,
	0, 1727, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1704, 1705, 1706, 1707, 1716,
	0, 0, 0, 0, 0, 1687, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1679, 1680, 0, 1712, 1713, 1714, 1722, 1723, 1724,
	1719, 0, 0, 1729, 0, 0, 0, 0, 0, 1709,
	1711, 0, 0, 1715, 1710, 0, 0, 0, 1708, 0,
	0, 1682, 0, 0, 0, 1725, 0, 1726, 0, 1728,
	0, 0, 0, 0, 1696, 1697, 0, 0, 1703, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1717, 0, 0, 1681, 0, 0, 0, 0,
	0, 0, 0, 0, 1720, 1701, 1702, 0, 0, 0,
	0, 0, 0, 0, 1698, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1727, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1704, 1705, 1706, 1707, 0,
	0, 0, 0, 0, 0, 1687, 4335, 0, 0, 1718,
	0, 0, 0, 0, 1693, 1694, 1700, 1721, 1699, 1695,
	0, 1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689,
	0, 0, 0, 0, 2970, 1708, 0, 0, 0, 0,
	1719, 0, 0, 1729, 0, 0, 0, 0, 0, 1709,
	1711, 0, 0, 0, 0, 1703, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1725, 0, 1726, 0, 0,
	0, 0, 0, 0, 1696, 1697, 0, 0, 0, 0,
	0, 1720, 1679, 1680, 0, 1712, 1713, 1714, 1722, 1723,
	1724, 0, 1717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1715, 1710, 1702, 0, 0, 0,
	0, 0, 1682, 0, 0, 0, 0, 0, 0, 0,
	1728, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1681, 0, 1727, 0,
	0, 0, 0, 0, 0, 0, 1701, 0, 0, 0,
	0, 0, 0, 0, 0, 1698, 1716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1718, 0, 0, 0,
	0, 1693, 1694, 1700, 1721, 1699, 1695, 0, 1692, 1690,
	1691, 1683, 1684, 1685, 1686, 1688, 1689, 0, 4334, 2937,
	0, 0, 0, 0, 1679, 1680, 0, 1712, 1713, 1714,
	1722, 1723, 1724, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1708, 1715, 1710, 0, 0,
	0, 0, 2908, 0, 1682, 0, 1704, 1705, 1706, 1707,
	0, 0, 1728, 0, 0, 1703, 1687, 0, 3057, 0,
	0, 3056, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1681, 0,
	0, 1720, 0, 0, 0, 0, 0, 0, 1701, 0,
	0, 1719, 0, 0, 1729, 0, 0, 1698, 0, 0,
	1709, 1711, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1725, 0, 1726, 0,
	0, 0, 0, 0, 0, 1696, 1697, 0, 0, 0,
	0, 0, 0, 2909, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1702, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1704, 1705,
	1706, 1707, 0, 0, 0, 0, 1718, 0, 1687, 0,
	0, 1693, 1694, 1700, 1721, 1699, 1695, 0, 1692, 1690,
	1691, 1683, 1684, 1685, 1686, 1688, 1689, 0, 0, 1727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1719, 0, 0, 1729, 1716, 0, 0,
	0, 0, 1709, 1711, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1725, 0,
	1726, 0, 0, 0, 0, 0, 0, 1696, 1697, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1708, 0, 2505, 1702,
	0, 0, 0, 0, 0, 1679, 1680, 0, 1712, 1713,
	1714, 1722, 1723, 1724, 0, 0, 1703, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1715, 1710, 0,
	0, 0, 2504, 0, 0, 1682, 0, 0, 0, 0,
	0, 1727, 1720, 1728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1681,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1701,
	0, 0, 0, 0, 0, 0, 0, 0, 1698, 0,
	0, 0, 0, 0, 1679, 1680, 0, 1712, 1713, 1714,
	1722, 1723, 1724, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1715, 1710, 1708, 0,
	0, 0, 0, 0, 1682, 0, 0, 0, 0, 0,
	0, 0, 1728, 0, 0, 0, 0, 1718, 1703, 0,
	0, 0, 1693, 1694, 1700, 1721, 1699, 1695, 0, 1692,
	1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689, 1681, 1704,
	1705, 1706, 1707, 0, 1720, 0, 0, 0, 1701, 1687,
	0, 0, 0, 0, 0, 0, 0, 1698, 1679, 1680,
	0, 1712, 1713, 1714, 1722, 1723, 1724, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1715, 1710, 0, 0, 1719, 0, 0, 1729, 1682, 0,
	0, 0, 0, 1709, 1711, 0, 1728, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1725,
	0, 1726, 0, 0, 0, 0, 0, 0, 1696, 1697,
	0, 0, 1681, 0, 0, 0, 0, 0, 1704, 1705,
	1706, 1707, 1701, 0, 0, 0, 1717, 0, 1687, 1718,
	0, 1698, 0, 0, 1693, 1694, 1700, 1721, 1699, 1695,
	1702, 1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1719, 0, 0, 1729, 0, 0, 0,
	0, 0, 1709, 1711, 0, 0, 0, 0, 0, 0,
	0, 0, 1727, 0, 0, 0, 0, 0, 1725, 0,
	1726, 0, 0, 0, 0, 0, 0, 1696, 1697, 0,
	1716, 0, 1704, 1705, 1706, 1707, 0, 0, 0, 0,
	0, 0, 1687, 0, 0, 1717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1702,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1719, 0, 0,
	1729, 0, 0, 0, 0, 0, 1709, 1711, 0, 1708,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1727, 1725, 0, 1726, 0, 0, 0, 0, 1703,
	0, 1696, 1697, 0, 0, 0, 0, 0, 0, 1716,
	990, 0, 0, 0, 0, 0, 0, 0, 0, 1717,
	0, 0, 0, 0, 0, 1720, 0, 0, 0, 0,
	0, 0, 0, 1702, 0, 0, 0, 0, 0, 1679,
	1680, 0, 1712, 1713, 1714, 1722, 1723, 1724, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1715, 1710, 0, 0, 0, 0, 0, 1708, 1682,
	0, 0, 0, 0, 0, 1727, 0, 1728, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1703, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1681, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1701, 1720, 0, 0, 0, 0, 0,
	1718, 0, 1698, 0, 0, 1693, 1694, 1700, 1721, 1699,
	1695, 0, 1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688,
	1689, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1708, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1703, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1704, 1705, 1706, 1707, 0, 1720, 0,
	0, 0, 0, 1687, 0, 0, 0, 0, 3063, 1718,
	0, 0, 0, 0, 1693, 1694, 1700, 1721, 1699, 1695,
	0, 1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689,
	0, 0, 0, 0, 0, 0, 3420, 0, 1719, 0,
	0, 1729, 0, 0, 0, 0, 0, 1709, 1711, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1725, 0, 1726, 0, 0, 0, 0,
	0, 0, 1696, 1697, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1717, 0, 0, 1718, 0, 0, 0, 0, 1693, 1694,
	1700, 1721, 1699, 1695, 1702, 1692, 1690, 1691, 1683, 1684,
	1685, 1686, 1688, 1689, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1727, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1679, 1680, 0,
	1712, 1713, 1714, 1722, 1723, 1724, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1715,
	1710, 0, 0, 0, 3058, 0, 0, 1682, 0, 0,
	0, 0, 0, 1708, 0, 1728, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1703, 0, 0, 0, 0, 0, 0,
	0, 1681, 1679, 1680, 0, 1712, 1713, 1714, 1722, 1723,
	1724, 1701, 0, 0, 0, 0, 0, 0, 0, 1720,
	1698, 0, 0, 0, 1715, 1710, 0, 0, 0, 0,
	0, 0, 1682, 0, 0, 0, 0, 0, 0, 0,
	1728, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1681, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1701, 0, 0, 0,
	0, 0, 0, 0, 0, 1698, 0, 0, 0, 0,
	0, 1704, 1705, 1706, 1707, 0, 0, 0, 0, 0,
	0, 1687, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1718, 0, 0, 0, 0, 1693,
	1694, 1700, 1721, 1699, 1695, 0, 1692, 1690, 1691, 1683,
	1684, 1685, 1686, 1688, 1689, 0, 1719, 0, 0, 1729,
	0, 0, 0, 0, 0, 1709, 1711, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1704, 1705, 1706, 1707,
	0, 1725, 0, 1726, 0, 0, 1687, 0, 0, 0,
	1696, 1697, 0, 0, 0, 0, 1679, 1680, 0, 1712,
	1713, 1714, 1722, 1723, 1724, 0, 0, 0, 1717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1715, 1710,
	0, 1719, 1702, 2974, 1729, 0, 1682, 0, 0, 0,
	1709, 1711, 0, 0, 1728, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1725, 0, 1726, 0,
	0, 0, 0, 0, 0, 1696, 1697, 0, 0, 0,
	1681, 0, 0, 0, 1727, 0, 0, 0, 0, 0,
	1701, 0, 0, 1717, 0, 0, 0, 0, 0, 1698,
	0, 0, 1716, 0, 0, 0, 0, 1702, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1708, 0, 0, 0, 0, 0, 1716, 0, 0,
	1704, 1705, 1706, 1707, 0, 0, 0, 0, 0, 0,
	1687, 1703, 0, 0, 0, 0, 0, 3025, 0, 0,
	1679, 1680, 0, 1712, 1713, 1714, 1722, 1723, 1724, 0,
	0, 0, 0, 0, 0, 0, 0, 1720, 0, 0,
	0, 0, 1715, 1710, 0, 1719, 0, 0, 1729, 0,
	1682, 0, 0, 0, 1709, 1711, 1708, 0, 1728, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1725, 0, 1726, 0, 0, 0, 1703, 0, 0, 1696,
	1697, 0, 0, 0, 1681, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1701, 0, 0, 1717, 0, 0,
	0, 0, 1720, 1698, 0, 0, 0, 0, 0, 0,
	0, 1702, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1718, 0, 0, 0, 0, 1693, 1694, 1700,
	1721, 1699, 1695, 0, 1692, 1690, 1691, 1683, 1684, 1685,
	1686, 1688, 1689, 1727, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1716, 0, 0, 1704, 1705, 1706, 1707, 0, 0,
	0, 0, 0, 0, 1687, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1718, 0, 0,
	0, 0, 1693, 1694, 1700, 1721, 1699, 1695, 0, 1692,
	1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689, 0, 1719,
	0, 0, 1729, 0, 0, 0, 0, 0, 1709, 1711,
	1708, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1725, 0, 1726, 0, 0, 0,
	1703, 0, 0, 1696, 1697, 0, 0, 0, 0, 1679,
	1680, 0, 1712, 1713, 1714, 1722, 1723, 1724, 0, 0,
	0, 1717, 0, 0, 0, 0, 1720, 0, 0, 0,
	0, 1715, 1710, 0, 0, 1702, 0, 0, 0, 1682,
	0, 0, 0, 0, 0, 0, 0, 1728, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1681, 0, 0, 0, 1727, 0, 0,
	0, 0, 0, 1701, 0, 0, 0, 0, 0, 0,
	0, 0, 1698, 0, 0, 1716, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1718, 0, 0, 0, 0, 1693, 1694, 1700, 1721,
	1699, 1695, 0, 1692, 1690, 1691, 1683, 1684, 1685, 1686,
	1688, 1689, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1708, 0, 0, 0, 0, 0,
	0, 0, 0, 1704, 1705, 1706, 1707, 0, 0, 0,
	0, 0, 0, 1687, 1703, 1679, 1680, 0, 1712, 1713,
	1714, 1722, 1723, 1724, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1710, 0,
	1720, 0, 0, 0, 0, 1682, 0, 0, 1719, 0,
	0, 1729, 0, 1728, 0, 0, 0, 1709, 1711, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1725, 0, 1726, 0, 0, 0, 1681,
	0, 0, 1696, 1697, 0, 0, 0, 0, 0, 1701,
	0, 0, 0, 0, 0, 0, 0, 0, 1698, 0,
	1717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1702, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1718, 0, 0, 0, 0,
	1693, 1694, 1700, 1721, 1699, 1695, 0, 1692, 1690, 1691,
	1683, 1684, 1685, 1686, 1688, 1689, 1727, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1704,
	1705, 1706, 1707, 0, 0, 0, 0, 0, 0, 1687,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1719, 0, 883, 1729, 926, 0,
	0, 0, 0, 1709, 1711, 0, 0, 0, 0, 0,
	0, 0, 0, 1708, 0, 0, 0, 0, 0, 1725,
	0, 1726, 891, 0, 0, 0, 0, 0, 1696, 1697,
	0, 0, 0, 1703, 0, 0, 0, 0, 905, 889,
	888, 0, 0, 0, 0, 0, 1717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1720,
	1702, 0, 0, 0, 0, 0, 0, 890, 0, 0,
	0, 0, 893, 0, 0, 0, 0, 934, 0, 0,
	0, 0, 0, 0, 0, 0, 902, 903, 0, 0,
	0, 0, 0, 0, 0, 919, 0, 0, 0, 0,
	0, 0, 1727, 0, 0, 0, 0, 0, 0, 0,
	0, 927, 895, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 896, 0,
	0, 0, 0, 0, 0, 0, 0, 925, 0, 0,
	0, 0, 0, 0, 1718, 0, 0, 0, 0, 1693,
	1694, 1700, 1721, 1699, 1695, 0, 1692, 1690, 1691, 1683,
	1684, 1685, 1686, 1688, 1689, 0, 0, 0, 0, 1708,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 898,
	0, 0, 0, 0, 0, 0, 0, 887, 0, 1703,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 899, 900, 0, 0, 0,
	0, 0, 0, 0, 0, 1720, 0, 0, 0, 0,
	0, 0, 0, 907, 906, 0, 0, 0, 0, 0,
	0, 901, 0, 0, 0, 916, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 931, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 928, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1718, 0, 0, 0, 0, 1693, 1694, 1700, 1721, 1699,
	1695, 0, 1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688,
	1689, 0, 0, 0, 0, 894, 0, 0, 933, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 892,
	0, 0, 0, 923, 924, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 921, 0, 0, 0, 0, 0,
	0, 932, 917, 0, 910, 908, 0, 913, 0, 0,
	0, 0, 0, 914, 0, 0, 885, 0, 929, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 886,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	915, 0, 0, 0, 0, 912, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 930, 0, 0, 0, 0,
	0, 0, 0, 918, 0, 0, 0, 0, 0, 0,
	0, 0, 897, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 920, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 922,
}
var sqlPact = [...]int{

	11742, -1000, -1000, -1000, -1000, 189, -1000, -1000, 188, 187,
	182, 181, 180, 176, 172, 171, 170, 169, -1000, -1000,
	-1000, -1000, -1000, -1000, 168, -1000, -1000, 165, -1000, 164,
	162, 159, -1000, -1000, 158, -1000, 156, -1000, -1000, -1000,
	-1000, 155, 154, 153, 84057, 83533, 84574, 2078, 102817, 90806,
	1751, 75177, 102293, 74653, 101769, 1912, 101245, 2515, 152, -1000,
	100721, 150, 146, 144, -1000, 100197, -1000, 1904, -1000, 143,
	1646, 61000, 140, 138, 135, 2106, 133, -1000, 131, 130,
	129, -1000, 9123, 1431, -1000, 120, 118, -1000, 8525, 609,
	88717, 116, 110, 2156, 103, 102, 60475, 101, 100, 2136,
	2609, -1000, -1000, 1863, -1000, -1000, 99, 94, 93, 90,
	89, 87, 83, 79, 76, 72, 70, -1000, 69, 68,
	67, 66, 65, 63, 62, 61, -1000, 60, 59, 58,
	57, 52, 51, 50, 47, 44, 43, 40, 39, 37,
	-1000, 114684, 35, 1681, 1611, 1604, 1603, 1592, 1587, 943,
	30, 25, 24, 23, 21, 20, 19, 18, 17, -1000,
	16, 14, 13, 4, 2, 1, -1, -2, 127, -4,
	-5, -6, -10, -13, -14, -17, 2419, -1000, 1595, 1024,
	28424, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 108504,
	103334, -18, -95, -20, -1000, 2999, 998, 50502, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 274, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 483, 2029, 736, -1000, -1000, -1000,
	99680, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2074,
	-63, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 734, -1000,
	2070, 200, 2031, -1000, -1000, -1000, 3082, -1000, -1000, 103334,
	-1000, 983, -1000, -1000, 3510, 3508, 1917, 723, 90282, -1000,
	1831, -1000, 881, 30071, -1000, 1261, -1000, 30071, 267, -1000,
	-1000, -1000, -1000, -1000, -1000, 3506, 3505, 3504, 3502, 3501,
	-1000, -1000, 74129, 21784, 73605, 73081, 99163, 21250, 83009, 82485,
	98639, 68906, 982, -1000, -1000, -1000, 1359, -1000, -1000, -1000,
	-1000, -1000, -1000, -39, 66236, 3236, 103334, -1000, 255, -1000,
	-1000, -1000, -1000, -1000, -1000, 42914, 724, 42353, 829, 41792,
	808, -1000, -1000, -1000, -1000, 68372, -1000, 98115, 2232, 3500,
	3499, 1088, 3498, 2968, 1650, 3497, 1719, 1163, 3496, 3494,
	3493, 3491, 3490, 3489, 1288, 97591, 2682, 97067, 1562, 67838,
	981, 81961, 84574, 2380, 96543, 1358, 1195, -1000, -1000, -1000,
	-1000, 2792, 2608, 2604, 1106, -1000, -1000, 2224, 3488, 3487,
	3486, 3485, 3483, 107987, 1563, 3481, 2293, 3480, 3477, 3476,
	3474, 3473, 3470, 3469, -1000, 81437, 978, 80913, 80389, 3105,
	96019, 79865, 95495, 67304, 41231, 1018, -1000, -1000, -1000, 53135,
	6461, 5924, 94971, 55263, 84574, 84574, -1000, -1000, -1000, -1000,
	-1000, 40670, 564, 40109, 947, -1000, -1000, 53667, 2628, -1000,
	-1000, -1000, -1000, 39548, 357, 38987, 942, 103334, -1000, 2681,
	1903, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2262, 1557, 3285, 2446, 66770,
	1838, 1361, 3047, 2780, 2779, 1455, 3468, 3460, 2379, 2773,
	2772, 2771, 2769, 2767, 1387, 2345, 401, 27863, 2669, 1540,
	38426, 1427, 1444, 2766, 2736, 3289, 1794, 1839, 1897, 72557,
	3457, 3456, 2997, 2711, 2710, 2627, -1000, -1000, -1000, -1000,
	1381, -1000, -1000, -1000, -1000, -1000, 75694, -1000, -1000, 1215,
	-1000, -1000, 1215, -1000, -1000, -1000, -1000, -1000, 1171, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1595, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2020, -1000, 1902, -1000, -1000, 2247, 2975, 2975, 2975,
	3078, 454, 438, -1000, 127, -1000, -1000, 114069, -1000, -1000,
	43463, 43463, 43463, 43463, 43463, 43463, 43463, 1915, -1000, 722,
	-1000, -1000, 767, -1000, 721, 593, -1000, -1000, -1000, -1000,
	-1000, -1000, 716, -1000, -1000, -1000, -1000, -1000, -1000, 3236,
	-1000, 24509, -1000, -1000, -1000, 464, 714, 43463, -1000, -1000,
	3304, 3303, 855, -1000, 251, 914, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2680, 712,
	711, -1000, 710, 709, 708, 706, 700, -1000, -1000, -1000,
	694, 689, 686, 685, 683, 680, 676, 673, -1000, 1818,
	-1000, -1000, -1000, -1000, -1000, -1000, 641, 630, 630, 630,
	-1000, 972, -1000, -1000, -1000, 285, 626, 280, 622, 620,
	619, -1000, 670, 669, 668, 666, 665, 664, 662, 660,
	659, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 969, -1000,
	-1000, -1000, -1000, -41, 103334, -1000, 483, -41, -1000, -1000,
	658, -1000, 32279, 32279, 32279, -1000, -1000, 2069, 43463, -1000,
	2494, -1000, -31, -31, 843, 52070, -1000, 49437, 843, 403,
	779, 56831, -1000, 2623, -1000, -1000, 653, 247, -1000, -1000,
	-1000, -1000, 22316, 2622, 103334, 103334, 84574, 84574, 84574, 2867,
	43463, -1000, -1000, 64133, 103334, 85091, 3193, 61517, 63611, 103334,
	2678, 63094, -1000, 3016, -1000, -1000, 103334, -1000, 43463, -1000,
	3191, 1536, 69960, 3121, -53, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2268, 2251, 1074, 2115, -1000, 2897, 1521, -1000,
	30071, 2955, -1000, -1000, -1000, 229, 22316, -1000, -1000, -1000,
	-1000, -1000, -1000, 2539, 2844, 1320, -1000, 2113, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1744, 2842, -1000,
	1873, 2841, 1726, -1000, -1000, 2112, -1000, -1000, 2992, -1000,
	-1000, 1450, 2839, -29, -1000, -1000, 2154, -1000, -1000, 1821,
	-1000, -1000, 939, 2836, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 79341, 54731, 53667, 66236, -49, -1000, -1000,
	-1000, -1000, -60, -1000, 20716, 114069, -1000, -1000, -1000, -1000,
	1625, 114069, 869, -1000, -1000, 2818, -1000, 114069, 769, -1000,
	-1000, 2817, -1000, 2672, -1000, -1000, 2181, -1000, -1000, 3455,
	-1000, -1000, 3451, -1000, 3450, 3447, 3445, -1000, 1567, 1800,
	3440, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 78824, 2062,
	-1000, -1000, 77776, -1000, 2180, 3118, -1000, -1000, -1000, 78300,
	977, -1000, 939, 2179, -1000, 88193, 973, -1000, 3437, 3081,
	2399, 939, 2178, -1000, -1000, -1000, -1000, -1000, 979, -1000,
	58393, -1000, 58393, -1000, 1424, -1000, 107470, -31, 84574, 3236,
	-1000, 3436, -1000, -1000, -1000, -1000, -1000, 2815, 3432, 3431,
	3430, -1000, 103334, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	199, 2814, -1000, -1000, 87676, 199, 2809, -1000, 199, 2807,
	-1000, 87159, -1000, -1000, 2076, 2805, -1000, 206, 2801, -1000,
	-1000, 203, 2794, -1000, -1000, -73, 2791, -1000, -1000, 114069,
	-1000, -1000, -1000, -70, -1000, -1000, -1000, 998, -1000, 52595,
	-1000, 52595, 89758, 69438, 923, 655, 59950, 114069, -1000, -1000,
	-1000, -1000, 114069, -1000, -1000, -1000, -232, -1000, -1000, 69438,
	53667, 114069, -1000, -1000, -1000, -1000, 114069, -1000, -1000, -1000,
	69438, 77776, -1000, 94447, 77259, -1000, -1000, 1287, 2322, -1000,
	-1000, -1000, 69438, 1222, 69438, 69438, 69438, -1000, 93923, -1000,
	-1000, 1890, 1238, 2990, 1870, 84574, -1000, 1861, -1000, -1000,
	-1000, 3035, -1000, -1000, 2670, -1000, 62560, 86642, -1000, 86125,
	-1000, 85608, -1000, 84574, -1000, 84574, -1000, 3428, 3425, 3424,
	3423, -1000, 3417, 3029, -1000, 114069, 3028, -1000, 3415, 3108,
	2669, 114069, -1000, 2812, 1614, 1583, 103334, -1000, -1000, 103334,
	-1000, 103334, -1000, -1000, -1000, 1363, -1000, -1000, 2266, -1000,
	-1000, -1000, -1000, 84574, -1000, -1000, -1000, -1000, -1000, -1000,
	2668, -1000, 1613, -1000, 1832, -1000, 1267, -1000, -1000, 207,
	-1000, -1000, -53, -1000, 106953, -1000, 2247, -1000, 103334, -1000,
	2265, 2642, 2665, 1349, 2080, 2366, -1000, 37865, 2281, 46757,
	2109, 127, -1000, -1000, 127, 127, 29522, -1000, -1000, 61517,
	61517, 22316, 1181, 43463, 43463, 43463, 43463, 43463, 43463, 43463,
	43463, 43463, 43463, 43463, 43463, 43463, 43463, 43463, 43463, 43463,
	43463, 43463, 43463, 43463, 43463, 43463, 43463, 43463, 43463, 43463,
	43463, 43463, 43463, 43463, 43463, 43463, 43463, 43463, 1953, 43463,
	1170, 43463, 43463, 43463, 43463, 1780, -1000, -1000, 1775, 538,
	1814, -1000, 3235, 3235, 3235, 442, 442, 114474, 114474, 551,
	3411, 767, -1000, 43463, -1000, 34, 43463, 22850, -1000, 438,
	9016, 2243, -1000, 429, 23411, -1000, -1000, -1000, 24509, 593,
	37304, 43463, 960, 114069, -1000, -1000, 1367, 3252, 20183, 2653,
	2487, 650, 787, 760, 27302, 26741, 26180, 25619, 687, 43463,
	43463, 43463, 43463, 43463, 43463, 43463, 43463, -1000, -1000, 3271,
	-1000, 3252, -1000, -1000, -1000, -1000, 3252, 1180, 1179, 3252,
	-1000, 3252, 3252, 8080, 8080, 36755, 36194, 35633, 47306, 35072,
	43463, 25058, 34511, 33950, -1000, 103334, -41, 3190, 43463, 134,
	-1000, 112864, -1000, 134, 134, 648, -76, 114069, 2319, 2319,
	51025, 2171, 1927, 1927, 1927, -1000, 843, 15890, 843, 92884,
	1959, 843, 843, 226, 261, 427, 48914, 2494, 92884, 746,
	646, -21, -22, -23, -1000, -1000, -24, -26, -1000, -1000,
	84574, 645, 22850, 22316, 225, 1313, -77, 2362, 2361, 2359,
	-1000, 2356, 1643, -83, 1169, 84574, 103334, -98, -1000, 1039,
	-84, -1000, 1043, 223, 3252, -1000, -1000, -1000, -1000, -1000,
	3410, 3406, -1000, 966, 644, 642, 366, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 641, 630, 630, 630, -1000,
	285, 626, 280, 622, 620, 619, -1000, -1000, -1000, -1000,
	-1000, 2619, 84574, 103334, -60, 85091, -71, -1000, -1000, -1000,
	-1000, -1000, 84574, 871, -85, 1093, -53, -1000, -1000, -1000,
	1215, -1000, 1539, -1000, -1000, -1000, -1000, -1000, -1000, 1298,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 855, -1000,
	-1000, -1000, -1000, -1000, -1000, 3275, 3257, -42, -1000, -1000,
	22316, -1000, -55, 1533, 1606, -1000, 72033, 2286, 3003, 2979,
	1423, -1000, 1336, 1166, 3077, 75694, 3143, 3147, 142, -1000,
	2618, -1000, -1000, 876, 1582, 1581, 1164, 75694, 1873, -1000,
	61517, -1000, 2427, 3076, 1346, 1327, 1346, 1346, 1114, -1000,
	75694, 1560, 1162, 1161, -1000, 1160, 1157, -1000, -57, 3119,
	3142, 98, -1000, 2617, 1155, -1000, -1000, 84574, 22316, 1459,
	1502, 1558, 1149, -46, -1000, 3129, 3127, 1148, 1147, -1000,
	6822, -1000, 69438, 1691, 2788, 2442, 812, 2430, -1000, -1000,
	812, -49, 66236, 103334, 221, -1000, 34, 43463, 43463, 34,
	43463, 34, 3106, 2776, -1000, -1000, -1000, -1000, -1000, 3405,
	1750, 2290, -1000, -1000, 618, 2170, 2616, 103334, 2370, -50,
	84574, -1000, 2774, 64655, 1873, 2160, -1000, -1000, 76735, -1000,
	2763, 483, 2158, -1000, 638, 3403, -1000, 106436, -1000, 3016,
	1199, 2761, 1019, 918, 3184, -1000, 918, 58916, -1000, 103334,
	-1000, -31, -1000, 103334, -1000, -1000, -1000, 3400, -1000, 84574,
	-1000, -1000, 84574, 199, 2760, -1000, 84574, -1000, 84574, 194,
	2759, -1000, -1000, 103334, -1000, 84574, 84574, -1000, 103334, 103334,
	69438, 69438, 4553, 70999, -86, -99, 426, -1000, 93406, 103334,
	1014, 71516, 103334, 2945, 935, 53667, -1000, -101, -232, 2429,
	923, 923, 812, -1000, 812, -1000, 84574, 2658, -1000, -1000,
	69438, 923, 923, 923, -1000, -1000, -1000, -1000, 3394, 3393,
	3392, -1000, -1000, -1000, 938, 84574, 103334, 84574, -1000, -1000,
	103334, -1000, 103334, 103334, 84574, -1000, 938, 103334, 938, 103334,
	938, 103334, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34,
	43463, -1000, -1000, 3388, 1476, -1000, 2647, -1000, 2644, -1000,
	9, -1000, -1000, -1000, -1000, -1000, 1685, 84574, 84574, 84574,
	84574, 103334, 84574, -1000, 75694, -1000, 2265, 2642, -1000, -1000,
	-1000, -1000, -1000, -1000, 1570, 2037, -1000, 2325, -1000, 1409,
	-1000, -1000, -1000, 114069, 47838, -1000, -1000, 114069, 1636, -1000,
	46208, 45659, -1000, -1000, 1531, 84574, 2373, -1000, 2373, -158,
	-1000, 112593, 2324, 84574, -1000, -1000, -1000, -1000, -1000, 870,
	607, 607, 1200, 1200, 1200, 1200, 3117, 1910, 5006, 4830,
	4992, 4992, 7615, 7615, 7615, 7615, 7615, 4992, 5541, 442,
	442, 5541, 5541, 5541, 5541, 5541, 442, 442, 442, 4992,
	4992, 4992, 114474, 114308, 7466, 43463, 43463, 1146, 1754, 538,
	6384, 43463, 7594, 7594, 7594, 7594, -1000, 1806, -1000, -1000,
	-1000, -1000, 2597, 616, 47306, 47306, -1000, -1000, -1000, -1000,
	23960, 43463, -1000, -1000, -1000, -1000, 33389, -1000, -1000, 112040,
	-313, 410, -150, -45, -1000, 43463, 43463, 43463, 395, -1000,
	218, 43463, 103334, -1000, 14699, 745, -242, -1000, -102, 1357,
	-1000, 43463, -1000, -1000, 1142, -1000, 1141, 1138, 1137, -1000,
	615, 394, -1000, 217, -1000, 1918, 614, 612, 43463, -1000,
	-1000, -1000, -1000, -1000, 111873, -1000, -1000, 111621, -1000, -1000,
	111438, -1000, -1000, 111271, -1000, -1000, -1000, 113895, 14443, 14090,
	13725, 8245, 12883, 11069, -109, 389, -114, 385, 868, 852,
	384, 382, 381, -115, -1000, 3386, 3383, 3381, -1000, 3380,
	3379, 3378, -1000, 3377, 3376, 3373, -1000, 3372, 3371, 3369,
	-1000, 3366, 3364, 3361, -1000, 3359, 3358, 3355, -1000, 3354,
	3353, 3351, -1000, 3350, 3349, 3347, -116, 379, -1000, 2590,
	-150, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 373,
	-1000, 367, -1000, 113721, -150, 363, 6292, -1000, 47306, 47306,
	47306, -1000, 362, -1000, 112471, -1000, 113656, 32840, 32840, 32840,
	361, 113308, 43463, -150, -117, -1000, -131, -1000, -1000, 517,
	-132, 956, 32279, 49977, 22316, -1000, 956, 956, 43463, -1000,
	43463, 2340, -1000, -1000, -1000, 2334, 3027, 2319, 51025, -1000,
	-1000, -1000, -1000, 92884, -1000, 3236, 2452, -1000, 92884, -1000,
	-1000, 103334, 483, -1000, 92884, 92884, 22316, 843, -1000, 843,
	92884, 548, -1000, -1000, -1000, -1000, -1000, 359, 55785, -45,
	216, 22316, 939, -1000, 2438, 2438, 2438, 2438, -1000, -1000,
	103334, 1136, -51, -186, 3209, -1000, 1836, -1000, 61517, -1000,
	764, 976, 22316, -1000, -1000, -1000, 611, -1000, 3252, 3252,
	-1000, 3252, 103334, 2587, 126, 125, 64655, 64655, 952, 30071,
	-1000, 1215, -1000, -1000, 1490, -1000, 1789, -1000, 1176, -1000,
	-1000, -1000, -1000, 30071, -1000, 3123, 103334, 103334, 84574, -1000,
	103334, -1000, 2153, 105919, 2141, 61517, 103334, -1000, -1000, 610,
	608, 2313, 2312, 1006, 103334, 103334, 2309, 105402, 104885, 103334,
	1822, 43463, 64655, 1971, 2089, 34, 34, -1000, -1000, 34,
	606, 1310, 84574, 84574, 103334, 84574, 1631, -1000, -1000, -1000,
	-1000, -1000, 76211, -1000, -1000, 3269, 3264, -1000, 1346, -1000,
	-1000, -1000, 1346, 1873, 1602, 103334, 84574, 64655, 1555, 103334,
	1878, 34, 34, -1000, -1000, 34, 605, 22316, 1809, -1000,
	2646, 103334, 3302, 103334, 103334, 103334, 64655, 2989, 104368, 103334,
	103334, 64655, 6822, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 65719, 1034, 939, 1526, 1135, 75694,
	53667, 934, 53667, 2404, -1000, -1000, 19650, -1000, 114069, 114069,
	-1000, 114069, -1000, 62038, 103334, -1000, 975, 103334, 71516, 902,
	2757, 57870, -60, 923, 69438, 84574, -50, 103334, -1000, -1000,
	1873, 2756, 483, 2139, -1000, 69438, 3179, 2755, 597, 3345,
	3343, -1000, 2061, 2135, -1000, -1000, 103851, 2854, 796, 103334,
	956, 51025, 1790, -1000, 56309, 992, 103334, 1703, 109, -1000,
	-1000, -1000, -7, 103334, -1000, 774, 3342, -1000, -1000, 199,
	-1000, 84574, 199, 199, -1000, 84574, 84574, 2076, -1000, 206,
	-1000, 203, -1000, -73, -1000, -1000, 4553, 4553, 923, -275,
	595, -1000, 833, 830, 54199, 69438, -133, -1000, -1000, -1000,
	-1000, -1000, 84574, 103334, 717, 2397, 103334, -140, -1000, 215,
	594, -1000, 2735, -1000, -1000, 935, 53667, 2586, -1000, -1000,
	948, -1000, 1208, 923, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -34, -60, -60, -60, -51, -1000,
	938, -1000, 938, -1000, 938, -1000, 114069, -1000, -1000, 1471,
	1443, 103334, -1000, 22316, 103334, 84574, 22316, 84574, 2641, 2632,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1057, -1000,
	1636, 2036, -1000, 593, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2250, -1000, -52, 29522, 845, -1000, -1000,
	84574, -35, 43463, 43463, 5990, 4637, 43463, 47306, 47306, -1000,
	43463, 510, -1000, -1000, -1000, -1000, -1000, 2583, 590, 43463,
	61517, 5792, 5645, -1000, 355, 10334, 5541, -1000, 43463, -1000,
	353, 31730, -1000, 112953, -78, -149, -1000, 16436, -150, -152,
	-1000, -1000, 756, -1000, 2786, -1000, 43463, 113037, 2202, 1941,
	1684, 1484, 3252, 3301, 19117, -1000, 59433, 957, 1993, 111183,
	-1000, -1000, -1000, -1000, 61517, 61517, 43463, 43463, -1000, 43463,
	43463, 43463, -1000, -1000, -1000, 3252, 853, -1000, -1000, -1000,
	853, -1000, -1000, 1346, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1346,
	-1000, 43463, -1000, -1000, 2574, 43463, -1000, 61517, 61517, 47306,
	47306, 47306, 47306, 47306, 47306, 47306, 47306, 47306, 47306, 47306,
	47306, 47306, 47306, 47306, 47306, 47306, 47306, 47306, 2292, 47306,
	3231, 3231, 3231, -1000, 2523, 2574, 43463, 43463, 61517, 352,
	348, 346, -1000, 43463, -150, -1000, -1000, 4553, 582, -1000,
	2237, -1000, 2479, -1000, 43463, -1000, -175, -1000, 2494, -1000,
	-1000, 2479, 2479, -155, 114069, 51025, 51025, -1000, 579, 43463,
	2331, -1000, -1000, 744, -314, -1000, 827, -1000, -1000, -1000,
	-1000, -1000, 483, -1000, -1000, -1000, 214, 92884, 92884, 743,
	-1000, -157, -1000, -1000, -160, -1000, 3176, 345, 22316, -1000,
	956, 2963, -1000, -1000, -1000, -1000, -1000, -1000, -60, 103334,
	103334, 2021, 3300, -1000, 3261, 752, 742, 213, 3252, 343,
	341, 338, -60, 103334, 103334, 103334, -1000, -1000, -1000, 2386,
	-1000, -53, -1000, -1000, -1000, 43463, -1000, -1000, 2996, 1134,
	1133, -1000, -1000, 2754, -1000, 2134, -1000, 996, -1000, 1857,
	-1000, 43463, 51548, 577, 576, 3341, 1717, 3336, 1008, 2752,
	2076, 2750, 2076, -1000, -1000, 886, -1000, 114069, -1000, 574,
	573, -1000, -55, 1520, 1513, 944, -1000, -1000, 43463, 43463,
	92367, -1000, 422, 2992, -37, -1000, -1000, 1503, 1129, -1000,
	-1000, -1000, -1000, 1873, 1496, 1126, -1000, -1000, -1000, 941,
	-1000, -1000, 940, -1000, -1000, 43463, -1000, -57, 1124, 3131,
	2132, 84574, 1119, -1000, 1118, -1000, -1000, -1000, 3126, 2076,
	2749, 1111, -1000, -1000, -1000, -1000, -1000, 65187, -1000, 103334,
	84574, 1599, 812, -1000, 2050, 812, 934, 2569, -1000, 2368,
	-1000, 84574, 3335, 337, -163, -58, 61517, 3172, -1000, 2084,
	376, 84574, 851, -1000, 3236, -1000, -1000, -1000, -1000, 3111,
	84574, 3168, 2748, 939, 34, 84574, 3299, -1000, -1000, 84574,
	2747, 2060, 2130, 2277, 796, 70482, -1000, 939, 1984, -72,
	-1000, 1703, 31169, 2984, -169, -1000, -1000, -1000, 956, 58916,
	51025, 43463, 3334, -172, -1000, -1000, -1000, -1000, 199, -1000,
	-1000, -1000, 194, -1000, -1000, -1000, -1000, -1000, -1000, 91328,
	91328, 69438, 69438, 69438, 923, 103334, 103334, 71516, -1000, 572,
	103334, 103334, 571, -1000, 103334, 103334, 3329, 69438, -59, 570,
	-1000, 821, 820, 818, -1000, -1000, -1000, -1000, -1000, -1000,
	-232, 34, -1000, 2026, 84574, -1000, 18584, -1000, -1000, -1000,
	-1000, -1000, 938, -1000, -1000, 1880, 2091, 1880, 1673, 1652,
	-1000, 2034, -1000, -1000, -1000, -1000, 2364, 2978, 22316, 3128,
	7594, 43463, 43463, 252, 5618, 4576, 7594, 43463, 43463, 61517,
	5569, -174, 43463, 43463, -1000, 43463, 739, 114069, 3297, 43463,
	336, 333, -1000, -1000, -1000, 3250, -1000, -1000, -1000, 114069,
	43463, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 332, -1000,
	195, -1000, -1000, -1000, 109021, -1000, 43463, 331, 3075, -1000,
	330, 328, 424, 7554, 111000, 110833, 110581, 326, -1000, -1000,
	324, 320, 114069, 2523, 114069, -1000, -1000, 762, 762, 1301,
	1301, 1301, 1301, 3231, 536, 737, 520, 299, 299, 299,
	872, 562, 562, 299, 299, 299, 2557, 2303, 569, 2456,
	-1000, -1000, 114069, 114069, 319, -1000, -1000, -1000, -150, 317,
	4553, -1000, 2467, 3072, 114069, -1000, 51025, 2467, 2467, -1000,
	-1000, 3027, 103334, 114069, 51025, -1000, 2452, -1000, 16980, -1000,
	22316, -1000, -1000, -1000, -1000, 3236, -1000, 55785, -1000, 568,
	-1000, 191, -1000, 2963, -1000, 817, -1000, -60, -60, -1000,
	-1000, 738, 3328, 751, 22316, 307, -1000, -1000, -1000, -60,
	-60, -60, -1000, 2944, 114069, 103334, 103334, 103334, 2745, -1000,
	4383, -1000, 1006, 110398, -179, -1000, 103334, 43463, 103334, 51548,
	103334, -1000, -1000, 1722, 2402, 1076, -1000, 3039, 103334, -1000,
	103334, -1000, -1000, 103334, 103334, 84574, 103334, 2714, -180, 114069,
	-62, -1000, 816, -1000, 1318, -1000, 18051, 103334, 84574, 103334,
	84574, 1908, 2705, -187, 22316, -1000, 3294, 3293, 2744, 3043,
	3292, 103334, -1000, 103334, 84574, 2940, -1000, -1000, -1000, -1000,
	1491, 1117, 934, -64, 566, -1000, 814, -1000, -1000, 807,
	934, -1000, 69438, 53667, 483, -1000, 2389, -1000, 89234, 2046,
	34, -1000, 3325, 91850, 565, -1000, 2024, -1000, 688, 64655,
	1873, 34, 84574, -1000, -1000, 483, 305, -65, -1000, 1002,
	22316, 84574, 2743, 2280, 796, 70482, -1000, 1199, 2366, -1000,
	-67, -1000, 623, 34, 1984, -1000, -72, 114069, -1000, 806,
	-1000, -1000, -1000, -188, -1000, -1000, 302, -1000, 2938, 2937,
	-1000, 2488, 51548, 563, 561, 103334, 2936, -1000, -1000, -189,
	2100, 2100, 69438, 53667, 69438, 935, -1000, 2161, -1000, -1000,
	-1000, -1000, -1000, 22316, 1529, -1000, 560, 552, -1000, -1000,
	-1000, -1000, 2978, 7594, 7594, 43463, 43463, 43463, 7594, 5569,
	-190, -1000, 7594, 7594, -150, -1000, -1000, 112953, -1000, -1000,
	-1000, 114069, -1000, 17518, 1884, -1000, 110231, -1000, 29522, -1000,
	-1000, 43463, 43463, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 47306, 2556, 550, 61517, -1000, -1000, 301, 954, 43463,
	45110, 2494, 954, 954, -1000, -195, -1000, -1000, -1000, 3236,
	191, -1000, -1000, 3323, 22316, -1000, 69438, 749, -1000, 3322,
	-1000, -1000, -1000, -1000, -1000, -1000, 103334, -1000, 103334, -1000,
	22316, 103334, 2520, 2121, -1000, -1000, 2308, 547, 47306, 84574,
	877, -1000, 3203, 2508, 1727, 51548, -1000, 2978, -1000, 110146,
	-1000, -196, -198, 2104, -1000, -1000, 2093, 43463, -1000, 61517,
	546, 2076, 2076, -203, -204, -1000, -1000, 43463, 1107, 103334,
	30620, -1000, 3319, 2992, -1000, -1000, -1000, -1000, 103334, 43463,
	1105, -1000, -1000, -1000, 3290, 2076, 22316, -1000, 2076, 2076,
	3043, 1072, 103334, 84574, -1000, 2101, 2101, 69438, 53667, -1000,
	-73, 934, 3166, 1878, 2425, -1000, -1000, -1000, -1000, 2307,
	-1000, -1000, 103334, 2305, 929, -1000, -205, -1000, 800, 798,
	71516, 902, 891, -1000, -1000, -1000, -1000, 483, 3163, -1000,
	3287, 545, 103334, 2059, 543, 22316, 2981, 796, 70482, -1000,
	2854, 1703, -1000, 2127, 103334, 2974, -1000, 2366, 538, -1000,
	923, 535, 523, 2899, 2899, -211, 51548, 51548, -212, 521,
	923, -1000, -213, -1000, -1000, -1000, -1000, -75, -1000, 848,
	844, -1000, -1000, 84574, 84574, 43463, 43463, -1000, 7594, 7594,
	7594, -1000, 300, -1000, -1000, 1984, 3063, -1000, -96, 109979,
	109574, 5597, 47306, 61517, -214, -1000, -1000, 103334, 114069, -128,
	-1000, 114069, 518, 497, 423, -1000, -1000, -1000, 537, -1000,
	-1000, 3318, -1000, -1000, 1452, -1000, -1000, -1000, 103334, 2129,
	-1000, 1005, 43463, 2456, 494, 43463, -1000, 3160, -1000, 2384,
	2537, 2389, 493, -1000, -1000, -1000, -1000, 845, 103334, 999,
	1736, -1000, -1000, 114069, 3043, 51548, -1000, -1000, 492, 491,
	114069, 490, 797, 2542, -1000, -1000, -1000, -1000, 114069, 488,
	3131, -1000, -1000, -1000, -1000, 2076, 84574, -1000, -1000, -1000,
	-220, -1000, -1000, 1747, 34, 902, -1000, 1898, 2046, 486,
	-1000, -1000, 2049, 2382, -1000, 91850, 30071, 30071, 281, 3159,
	891, -1000, 3242, -1000, 3158, 34, -1000, 51548, -1000, 84574,
	51548, 2057, -1000, 2260, 70482, -1000, 2277, -1000, -1000, -221,
	103334, 1703, -1000, -1000, 69438, 69438, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 999, -222, -223,
	-1000, 69438, -1000, -1000, 2161, -1000, 103334, -1000, 103334, -1000,
	-1000, -229, -230, -1000, 1864, 43463, 29522, -1000, -1000, 5597,
	-231, -1000, -142, -1000, 3155, 45110, 3317, 3311, 3308, -1000,
	-1000, -1000, -1000, 2737, 2462, 109546, 2244, 103334, 15255, -1000,
	2536, -1000, -1000, 1878, 103334, -1000, -1000, 2389, 2461, 84574,
	1004, -236, 1880, 1880, 43463, 28973, 1889, 43463, -1000, -1000,
	3043, -1000, 2514, 3254, -1000, 2049, 84574, 103334, -1000, 3030,
	-1000, 2933, -1000, -1000, -1000, 2389, 34, -1000, -1000, 34,
	-1000, -237, 1002, -239, 84574, 796, -1000, 2280, 956, -1000,
	-1000, -245, -246, 1727, 999, 919, -253, -1000, -261, -263,
	-1000, -1000, 136, 44561, 44561, 44561, -150, -158, -1000, 103334,
	485, -1000, -1000, -1000, -1000, 2697, 933, -1000, 2052, 1731,
	111, 1029, -1000, -1000, 2508, -264, -1000, 932, 483, -1000,
	43463, 999, -270, -1000, 990, -277, -1000, 980, -278, -1000,
	2522, -1000, -280, 2076, 930, 3101, -1000, -1000, -1000, -1000,
	482, -285, -1000, -1000, 2194, -1000, 1878, 929, -1000, 999,
	473, 1727, 471, 1346, 2981, 2861, 923, 923, 2389, 1727,
	956, 470, 923, -1000, -1000, -1000, 2768, -1000, 48370, 2040,
	1649, 112230, 2768, 2768, -1000, -1000, 103334, 3091, -1000, 2056,
	2055, 1445, -1000, -1000, -1000, -1000, -1000, -1000, 956, -1000,
	3088, 2244, 114069, 2389, -1000, 1880, 2414, -1000, 1880, 2517,
	-1000, 1887, -1000, -1000, -1000, 1620, 3240, 103334, -1000, 103334,
	1640, 1637, 3288, 902, 2049, 1727, 51548, 2389, 51548, -1000,
	-1000, 1231, -1000, -1000, 1878, 2389, -1000, -1000, -1000, 1653,
	3152, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 791,
	-1000, 2885, -1000, 1054, 1909, 1909, -1000, 624, 2052, -1000,
	-1000, 469, -1000, 463, -1000, 2002, -1000, -1000, -286, -1000,
	-1000, 3260, -1000, 2049, -1000, 2389, -287, 1878, -288, -1000,
	1419, 919, 1878, 1647, -1000, -1000, 1946, 44012, 43463, -1000,
	3212, -1000, -1000, 2318, -1000, 43463, 2508, 43463, 43463, 57353,
	2073, -1000, -1000, 1878, 999, 919, 1727, 58916, 956, 919,
	-1000, -1000, -1000, 114069, -1000, -1000, -1000, 114069, -1000, -293,
	-294, -275, 91328, -1000, -1000, -1000, 919, 1727, 956, 2389,
	-269, -1000, 956, 1878, 1101, -300, 956, 2389, -1000, 1878,
	-1000, -1000, -1000, 456, -1000, -1000, 1878, 919, 43463, 919,
	956, -305, 956, -1000, 1878, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4121, 4117, 4113, 4110, 4104, 4101, 4100, 4099, 4098,
	4096, 4094, 4091, 4088, 4085, 4081, 4079, 4078, 4077, 4074,
	4073, 4070, 4066, 4064, 4063, 4062, 4060, 4059, 4057, 4054,
	4052, 4046, 4045, 4044, 4040, 4039, 4038, 4037, 4036, 4034,
	4033, 4032, 4031, 4030, 4028, 4027, 4026, 4025, 4024, 4023,
	4022, 4018, 4017, 4016, 41, 4008, 4007, 4005, 4002, 3999,
	3998, 3997, 3996, 3990, 3988, 3987, 3985, 3984, 3982, 3981,
	3980, 3976, 3973, 3967, 46, 3963, 242, 3962, 3961, 3958,
	3957, 3952, 3951, 3949, 3940, 3935, 3933, 3931, 3929, 240,
	3928, 137, 3926, 3922, 3921, 3920, 3919, 239, 3913, 3912,
	3911, 3910, 252, 3908, 3907, 3906, 3904, 3902, 3895, 3894,
	3892, 3890, 3887, 89, 133, 3886, 3885, 192, 3884, 3883,
	3878, 3874, 3870, 3868, 3866, 3865, 3864, 3863, 209, 3862,
	238, 3861, 3857, 3855, 3853, 3852, 3850, 3849, 3846, 3844,
	3843, 3842, 3841, 3837, 3832, 3830, 3829, 3827, 3826, 3825,
	3824, 3822, 3821, 3819, 3817, 3815, 3814, 3813, 3812, 3811,
	3809, 3805, 3804, 3803, 249, 173, 3802, 3800, 235, 234,
	3798, 3797, 3795, 3794, 3790, 99, 4, 34, 3789, 3787,
	65, 68, 66, 88, 79, 81, 3785, 87, 3781, 109,
	49, 3780, 19, 2, 220, 219, 10194, 214, 3779, 3778,
	3776, 213, 168, 3774, 205, 3772, 3769, 3768, 3766, 80,
	52, 155, 154, 146, 132, 303, 3765, 3764, 82, 58,
	45, 35, 23, 3763, 3762, 3758, 3754, 3166, 114, 3753,
	232, 207, 134, 3751, 3750, 3749, 150, 3748, 3746, 38,
	3745, 217, 105, 102, 16, 104, 3744, 122, 25, 3741,
	184, 59, 3738, 128, 78, 69, 8574, 5062, 3736, 83,
	53, 158, 84, 149, 139, 169, 147, 140, 179, 185,
	178, 153, 29, 3733, 222, 3731, 3149, 60, 135, 3729,
	3728, 3727, 63, 172, 86, 3725, 3723, 56, 6, 21,
	7, 151, 14, 96, 20, 3722, 12, 3714, 3711, 3709,
	3708, 27, 136, 3707, 245, 3706, 123, 40, 47, 3705,
	110, 189, 3703, 198, 107, 3702, 3701, 226, 182, 144,
	3698, 74, 202, 3697, 3696, 3692, 3691, 3690, 120, 8,
	106, 3688, 3687, 142, 3682, 39, 208, 166, 3681, 48,
	3680, 3679, 141, 85, 115, 248, 108, 196, 101, 194,
	156, 204, 3677, 3676, 3672, 159, 3670, 3669, 193, 138,
	3667, 3665, 177, 254, 37, 61, 201, 62, 165, 125,
	3664, 176, 3662, 3661, 250, 160, 187, 1, 15, 67,
	98, 3660, 5, 203, 130, 170, 91, 3659, 5686, 1929,
	2459, 3657, 3654, 118, 95, 57, 93, 124, 231, 55,
	3653, 3650, 2428, 3649, 3648, 3646, 3644, 161, 3643, 3642,
	3641, 131, 121, 171, 3637, 77, 73, 50, 10, 100,
	282, 241, 94, 195, 164, 224, 3635, 3634, 3633, 157,
	3632, 42, 175, 3631, 174, 223, 3629, 3625, 313, 3619,
	116, 1637, 51, 119, 3616, 190, 3610, 3606, 3604, 3602,
	3599, 3596, 3593, 1600, 210, 3590, 3588, 3586, 31, 167,
	3584, 230, 162, 191, 111, 36, 3583, 70, 3063, 3582,
	148, 199, 152, 92, 3579, 3578, 1900, 43, 0, 11832,
	6390, 9973, 11503, 3577, 4192, 3576, 3575, 3574, 183, 112,
	3572, 3571, 3570, 90, 3569, 64, 3568, 3567, 54, 3566,
	17, 9, 11, 24, 22, 103, 76, 3565, 3564, 197,
	113, 126, 3561, 244, 200, 3559, 3557, 3556, 3555, 75,
	3553, 32, 3552, 30, 3551, 3550, 33, 13, 26, 3546,
	3545, 212, 3544, 188, 215, 3542, 129, 3541, 3155, 117,
	3539, 3538, 228, 71, 3537, 229, 3533, 3076, 3532, 3531,
	18, 3530, 3529, 206, 145, 186, 3528, 3527, 143, 3525,
	3524, 3523, 225, 3522, 3521, 28, 3520, 3, 3517, 3516,
	180, 2872, 3515, 3514, 44, 3513, 163,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 11, 11, 7, 7,
	7, 8, 8, 8, 8, 41, 41, 9, 9, 9,
	9, 9, 29, 10, 10, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 16, 16, 30, 30, 17, 17,
	32, 32, 18, 18, 33, 33, 542, 542, 21, 35,
	22, 36, 15, 543, 543, 543, 543, 28, 23, 37,
	25, 25, 25, 25, 25, 178, 178, 178, 178, 20,
	20, 31, 31, 212, 212, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 541, 541,
	214, 214, 213, 208, 208, 544, 544, 215, 215, 215,
	217, 217, 13, 13, 13, 13, 13, 13, 13, 13,
	13, 442, 442, 442, 474, 474, 473, 473, 473, 557,
	557, 558, 558, 558, 558, 558, 116, 116, 341, 341,
	341, 43, 43, 43, 43, 43, 536, 536, 180, 180,
	180, 182, 182, 181, 181, 181, 181, 65, 65, 549,
	549, 550, 550, 548, 551, 551, 551, 179, 179, 179,
	112, 112, 112, 112, 113, 113, 114, 114, 183, 183,
	183, 185, 185, 184, 184, 184, 184, 184, 184, 184,
	184, 189, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 93, 93, 476, 476, 477, 477, 174, 174, 175,
	175, 175, 175, 176, 176, 177, 177, 177, 57, 186,
	186, 188, 188, 187, 187, 45, 45, 45, 45, 45,
	45, 45, 46, 46, 46, 46, 46, 47, 47, 47,
	47, 47, 47, 48, 48, 48, 48, 48, 48, 55,
	55, 55, 55, 165, 165, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 62, 62, 62, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 560, 560, 561,
	561, 562, 562, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	71, 71, 303, 303, 275, 275, 72, 72, 72, 73,
	73, 74, 74, 59, 59, 534, 534, 318, 318, 433,
	433, 76, 76, 340, 340, 77, 77, 77, 77, 77,
	77, 78, 78, 78, 78, 78, 78, 78, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 86, 86, 86, 86, 86, 87, 87, 87,
	84, 84, 84, 81, 81, 81, 80, 80, 80, 85,
	85, 85, 533, 265, 265, 83, 83, 83, 268, 268,
	82, 82, 82, 319, 319, 88, 88, 88, 88, 276,
	89, 89, 89, 89, 89, 89, 89, 89, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 92,
	92, 92, 92, 92, 92, 92, 92, 92, 92, 92,
	92, 435, 435, 90, 90, 90, 400, 400, 94, 94,
	94, 356, 356, 95, 95, 95, 95, 95, 96, 96,
	96, 96, 96, 96, 115, 115, 115, 115, 115, 115,
	538, 538, 311, 311, 230, 230, 230, 230, 105, 105,
	105, 105, 106, 106, 106, 107, 107, 170, 170, 122,
	122, 122, 122, 122, 121, 121, 121, 121, 121, 121,
	49, 49, 49, 50, 50, 51, 51, 52, 52, 53,
	53, 54, 54, 54, 54, 54, 124, 124, 554, 554,
	126, 123, 123, 123, 125, 125, 125, 125, 127, 128,
	128, 128, 128, 128, 128, 128, 128, 129, 129, 467,
	467, 327, 327, 465, 465, 485, 485, 466, 466, 280,
	280, 280, 280, 280, 281, 281, 281, 475, 475, 475,
	475, 475, 475, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 171, 171, 172,
	173, 173, 173, 173, 173, 150, 150, 150, 164, 164,
	164, 164, 164, 164, 164, 153, 153, 153, 140, 140,
	131, 131, 131, 131, 131, 131, 131, 135, 135, 135,
	135, 135, 135, 135, 135, 132, 132, 142, 142, 142,
	142, 142, 136, 136, 137, 137, 160, 160, 139, 139,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 133,
	133, 133, 133, 144, 144, 144, 144, 363, 363, 363,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 163, 163, 163, 163, 163, 163, 552, 552, 553,
	553, 157, 157, 157, 157, 157, 157, 414, 414, 151,
	151, 151, 151, 156, 156, 156, 156, 159, 159, 159,
	159, 346, 346, 148, 148, 148, 149, 149, 149, 154,
	154, 155, 152, 152, 158, 158, 158, 158, 134, 134,
	134, 564, 564, 564, 161, 161, 147, 147, 162, 162,
	162, 162, 162, 162, 162, 162, 146, 146, 146, 145,
	145, 145, 145, 138, 535, 535, 531, 531, 531, 531,
	531, 531, 531, 531, 532, 532, 532, 532, 537, 537,
	99, 99, 99, 99, 99, 108, 108, 108, 108, 108,
	100, 100, 100, 100, 100, 102, 102, 101, 101, 101,
	101, 66, 66, 66, 66, 66, 14, 14, 14, 67,
	67, 192, 192, 192, 193, 193, 288, 288, 288, 288,
	190, 190, 191, 191, 68, 68, 565, 565, 565, 545,
	545, 545, 546, 546, 546, 546, 546, 546, 282, 282,
	283, 283, 380, 380, 380, 380, 380, 286, 286, 286,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 289,
	289, 216, 216, 216, 292, 293, 293, 290, 290, 291,
	291, 291, 295, 295, 294, 297, 297, 296, 379, 494,
	494, 496, 496, 496, 496, 496, 496, 496, 498, 498,
	498, 498, 498, 498, 498, 498, 498, 498, 498, 566,
	566, 492, 492, 492, 493, 488, 488, 489, 489, 489,
	489, 489, 284, 284, 285, 285, 285, 285, 490, 491,
	309, 309, 418, 495, 495, 497, 497, 499, 567, 567,
	567, 567, 567, 567, 568, 568, 568, 378, 378, 377,
	377, 301, 301, 500, 500, 500, 500, 501, 501, 501,
	501, 501, 504, 503, 502, 502, 502, 502, 502, 70,
	70, 70, 343, 343, 342, 342, 344, 344, 344, 344,
	344, 344, 344, 344, 344, 344, 344, 344, 344, 344,
	344, 167, 167, 233, 233, 64, 64, 64, 12, 12,
	12, 547, 547, 547, 69, 69, 69, 69, 69, 69,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	540, 540, 539, 539, 234, 234, 570, 570, 75, 75,
	75, 75, 75, 75, 75, 436, 436, 437, 437, 63,
	63, 63, 63, 63, 364, 364, 362, 362, 361, 361,
	308, 308, 416, 416, 416, 417, 238, 238, 239, 239,
	209, 209, 209, 27, 26, 19, 19, 24, 24, 39,
	39, 39, 39, 42, 42, 38, 38, 38, 38, 40,
	40, 34, 34, 555, 555, 556, 556, 104, 104, 109,
	109, 109, 109, 109, 110, 110, 110, 110, 111, 111,
	111, 111, 120, 120, 166, 166, 166, 166, 166, 166,
	166, 44, 44, 44, 44, 56, 56, 56, 56, 118,
	572, 572, 572, 119, 119, 119, 571, 571, 231, 231,
	374, 374, 375, 375, 573, 573, 376, 376, 376, 376,
	376, 224, 223, 225, 225, 226, 226, 61, 61, 61,
	218, 218, 219, 219, 220, 220, 221, 221, 222, 222,
	574, 574, 97, 97, 97, 169, 169, 274, 274, 274,
	371, 371, 371, 302, 302, 245, 245, 373, 373, 373,
	373, 339, 339, 339, 168, 168, 316, 316, 329, 329,
	330, 330, 430, 430, 331, 103, 103, 117, 117, 196,
	196, 194, 194, 194, 194, 194, 194, 194, 194, 201,
	201, 202, 202, 203, 203, 204, 205, 205, 205, 205,
	320, 320, 206, 206, 206, 195, 195, 195, 197, 197,
	197, 197, 197, 197, 197, 200, 200, 200, 200, 207,
	207, 207, 199, 199, 511, 511, 511, 513, 513, 515,
	515, 514, 514, 510, 510, 512, 512, 569, 569, 345,
	345, 345, 299, 300, 298, 298, 306, 306, 304, 305,
	305, 307, 307, 415, 415, 415, 210, 210, 210, 336,
	336, 336, 336, 337, 337, 367, 367, 365, 365, 365,
	365, 366, 366, 368, 368, 368, 369, 369, 370, 370,
	333, 333, 334, 334, 335, 335, 335, 335, 396, 396,
	198, 198, 198, 313, 313, 313, 314, 314, 386, 386,
	386, 386, 386, 386, 387, 387, 385, 385, 385, 385,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 420,
	421, 421, 315, 315, 422, 372, 372, 529, 529, 529,
	530, 530, 413, 413, 423, 423, 423, 423, 423, 423,
	411, 411, 412, 412, 431, 432, 432, 349, 349, 349,
	349, 347, 347, 350, 350, 350, 350, 348, 348, 424,
	424, 424, 424, 338, 338, 425, 425, 425, 425, 426,
	427, 427, 428, 428, 381, 382, 382, 438, 438, 438,
	438, 440, 312, 312, 312, 312, 312, 487, 486, 486,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 454,
	454, 454, 454, 454, 454, 454, 454, 454, 454, 454,
	454, 454, 454, 454, 454, 454, 454, 454, 454, 454,
	454, 454, 454, 454, 454, 454, 454, 454, 454, 454,
	454, 455, 455, 455, 455, 455, 455, 455, 441, 441,
	441, 441, 441, 445, 445, 445, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 446, 446, 451,
	451, 452, 452, 452, 447, 448, 453, 453, 453, 453,
	575, 575, 457, 457, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 443, 443, 443, 450, 450, 450, 358,
	358, 358, 358, 358, 358, 358, 358, 358, 358, 358,
	358, 358, 357, 357, 359, 359, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 390, 390, 390, 390, 391, 391, 391,
	391, 391, 391, 391, 391, 391, 391, 391, 391, 391,
	391, 391, 391, 391, 391, 391, 391, 391, 391, 391,
	391, 391, 505, 505, 505, 505, 505, 505, 505, 505,
	392, 392, 508, 508, 509, 509, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 516, 516, 517, 517, 519,
	519, 520, 520, 521, 522, 522, 522, 523, 524, 524,
	518, 518, 525, 525, 525, 525, 526, 526, 527, 527,
	527, 527, 527, 528, 528, 528, 528, 528, 402, 402,
	403, 403, 409, 409, 409, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 235, 235, 235, 235, 235, 325, 325, 323, 323,
	323, 326, 326, 324, 324, 322, 322, 321, 321, 399,
	399, 397, 397, 401, 401, 351, 351, 456, 456, 456,
	456, 456, 456, 456, 456, 352, 352, 352, 360, 353,
	353, 354, 354, 354, 354, 354, 393, 394, 355, 355,
	355, 395, 395, 404, 408, 408, 407, 406, 406, 405,
	405, 383, 383, 384, 384, 332, 332, 576, 576, 328,
	328, 429, 429, 429, 429, 278, 278, 317, 317, 277,
	277, 269, 269, 270, 270, 270, 270, 310, 310, 410,
	410, 458, 458, 459, 459, 460, 460, 461, 461, 462,
	463, 464, 398, 398, 255, 254, 242, 243, 253, 252,
	251, 241, 244, 248, 249, 250, 246, 247, 261, 260,
	259, 266, 267, 257, 258, 434, 240, 271, 271, 272,
	272, 272, 273, 273, 273, 273, 236, 236, 237, 237,
	262, 262, 263, 264, 264, 256, 256, 256, 227, 227,
	227, 228, 228, 229, 229, 472, 472, 469, 469, 469,
	470, 470, 470, 471, 471, 471, 471, 468, 468, 468,
	468, 468, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 482, 482, 479,
	479, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 481,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	484, 484,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	3, 1, 1, 1, 3, 4, 6, 1, 1, 1,
	1, 3, 6, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 6, 4, 6, 6, 9,
	6, 9, 6, 5, 6, 5, 1, 1, 5, 5,
	6, 6, 4, 4, 4, 4, 3, 4, 4, 4,
	7, 7, 9, 8, 9, 5, 3, 5, 7, 4,
	12, 4, 12, 1, 3, 5, 5, 2, 5, 3,
	6, 4, 6, 5, 6, 6, 4, 8, 3, 4,
	10, 3, 6, 4, 3, 1, 3, 3, 2, 1,
	1, 3, 1, 3, 2, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 8, 6, 6, 6, 9, 4,
	3, 2, 2, 0, 1, 3, 1, 1, 1, 1,
	3, 6, 4, 6, 7, 9, 6, 2, 2, 3,
	0, 8, 6, 8, 7, 2, 0, 1, 2, 5,
	0, 1, 3, 3, 1, 1, 3, 12, 3, 1,
	0, 1, 1, 2, 3, 3, 0, 4, 6, 0,
	5, 6, 8, 2, 1, 3, 1, 3, 2, 5,
	0, 1, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 6, 4, 9, 7, 12, 12, 12, 9,
	2, 7, 2, 1, 1, 1, 3, 3, 0, 3,
	1, 3, 1, 1, 3, 2, 5, 0, 7, 2,
	0, 1, 2, 3, 1, 1, 2, 1, 2, 1,
	2, 2, 3, 3, 3, 3, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 6,
	6, 6, 6, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 6, 3, 3, 4,
	3, 3, 4, 3, 4, 4, 4, 3, 5, 7,
	3, 3, 4, 3, 3, 3, 3, 2, 0, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 1, 2, 1, 2, 1, 2,
	7, 3, 2, 0, 1, 3, 3, 1, 0, 1,
	2, 2, 1, 6, 5, 1, 2, 1, 3, 2,
	0, 9, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 6, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 1, 1, 3, 4, 6, 3, 1, 3,
	3, 5, 3, 1, 3, 2, 2, 2, 2, 1,
	2, 2, 5, 3, 3, 6, 6, 3, 1, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 3, 5, 7, 2, 3, 0, 3, 5,
	2, 3, 0, 2, 3, 2, 3, 2, 6, 4,
	7, 7, 7, 2, 6, 4, 7, 7, 7, 2,
	1, 1, 1, 3, 1, 1, 1, 1, 1, 2,
	1, 2, 2, 3, 2, 4, 3, 2, 2, 1,
	2, 1, 3, 3, 1, 2, 1, 2, 1, 2,
	1, 1, 3, 5, 4, 6, 4, 3, 0, 1,
	3, 2, 4, 2, 4, 1, 6, 3, 1, 1,
	5, 3, 2, 6, 3, 3, 4, 4, 3, 1,
	3, 2, 3, 3, 1, 3, 1, 2, 1, 1,
	2, 2, 3, 1, 1, 1, 1, 1, 3, 2,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 2, 2, 1,
	3, 3, 3, 3, 3, 2, 3, 3, 1, 1,
	1, 1, 1, 2, 2, 5, 7, 3, 3, 3,
	4, 4, 6, 5, 5, 5, 3, 4, 4, 3,
	4, 4, 3, 4, 4, 5, 3, 5, 5, 5,
	7, 3, 3, 3, 2, 3, 2, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 4,
	3, 4, 3, 3, 4, 4, 5, 0, 1, 1,
	3, 2, 4, 3, 3, 5, 3, 4, 3, 5,
	3, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 5, 4, 6, 4, 6, 4, 1, 0, 3,
	4, 4, 5, 7, 5, 3, 3, 3, 4, 4,
	5, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 3, 4,
	3, 1, 1, 1, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 3, 4, 10, 10, 3, 5,
	5, 5, 3, 5, 2, 0, 1, 1, 1, 1,
	3, 2, 2, 2, 2, 2, 2, 1, 2, 0,
	1, 2, 1, 2, 2, 1, 2, 1, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 6, 5, 8, 3, 6, 6, 3, 11,
	14, 1, 2, 3, 0, 4, 0, 4, 5, 4,
	3, 3, 1, 3, 10, 13, 0, 2, 3, 1,
	1, 0, 1, 2, 2, 2, 2, 1, 1, 0,
	1, 3, 1, 1, 1, 1, 3, 3, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 8,
	0, 1, 1, 0, 2, 1, 0, 1, 0, 9,
	9, 3, 1, 3, 7, 1, 3, 11, 3, 2,
	0, 3, 1, 2, 2, 3, 2, 6, 2, 1,
	1, 2, 8, 4, 2, 5, 5, 5, 2, 1,
	3, 11, 12, 8, 5, 3, 1, 5, 9, 7,
	11, 3, 3, 0, 2, 4, 3, 3, 1, 5,
	1, 3, 1, 2, 0, 1, 2, 2, 0, 1,
	3, 3, 2, 2, 1, 1, 1, 4, 0, 6,
	0, 3, 0, 2, 2, 2, 0, 1, 1, 2,
	2, 0, 3, 3, 2, 1, 1, 2, 2, 5,
	8, 4, 1, 0, 1, 2, 2, 1, 2, 3,
	3, 2, 2, 3, 2, 2, 2, 2, 2, 3,
	1, 4, 2, 2, 2, 4, 7, 3, 4, 6,
	3, 1, 1, 1, 8, 10, 11, 7, 10, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 0, 3, 3, 0, 1, 8, 3,
	6, 6, 5, 3, 4, 1, 0, 1, 3, 17,
	20, 16, 19, 4, 2, 0, 1, 0, 1, 0,
	1, 3, 2, 4, 2, 3, 1, 0, 2, 0,
	1, 1, 0, 9, 6, 6, 8, 6, 8, 6,
	7, 8, 9, 6, 8, 6, 7, 8, 9, 6,
	8, 6, 8, 1, 0, 2, 0, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 3, 2, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 0, 2, 4, 2, 1, 0, 2, 1,
	1, 0, 1, 3, 1, 0, 1, 1, 1, 1,
	1, 2, 3, 2, 2, 1, 2, 9, 12, 3,
	3, 0, 3, 0, 3, 0, 3, 0, 4, 0,
	1, 0, 6, 7, 3, 6, 3, 1, 3, 1,
	1, 4, 2, 1, 3, 1, 3, 4, 8, 11,
	5, 2, 2, 0, 10, 3, 2, 0, 1, 3,
	1, 1, 3, 3, 5, 6, 4, 1, 1, 3,
	3, 1, 2, 4, 4, 2, 3, 5, 5, 1,
	3, 1, 0, 1, 2, 3, 2, 4, 2, 3,
	0, 2, 0, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 8, 8, 8, 2, 4,
	4, 4, 2, 2, 2, 2, 3, 1, 3, 1,
	2, 6, 7, 1, 0, 1, 0, 1, 0, 1,
	1, 0, 1, 5, 1, 0, 1, 0, 3, 3,
	5, 1, 3, 3, 4, 5, 2, 2, 0, 2,
	2, 1, 1, 1, 0, 1, 0, 2, 2, 5,
	4, 2, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 3, 1, 3, 3, 3, 2, 0,
	4, 2, 5, 3, 2, 0, 1, 3, 3, 5,
	1, 1, 1, 1, 1, 3, 2, 4, 4, 0,
	4, 4, 3, 4, 1, 5, 3, 4, 5, 5,
	1, 5, 1, 3, 2, 0, 3, 0, 2, 3,
	1, 3, 2, 0, 3, 5, 6, 4, 6, 4,
	3, 2, 1, 0, 5, 1, 0, 2, 2, 2,
	1, 1, 0, 1, 1, 1, 0, 4, 2, 1,
	2, 2, 4, 1, 3, 1, 2, 3, 2, 4,
	1, 0, 1, 0, 2, 1, 0, 2, 5, 7,
	2, 1, 2, 4, 3, 5, 0, 1, 3, 5,
	1, 2, 1, 1, 1, 1, 1, 2, 2, 1,
	2, 2, 2, 1, 2, 2, 2, 1, 2, 2,
	2, 1, 2, 2, 2, 1, 2, 2, 2, 1,
	2, 2, 2, 1, 2, 2, 2, 1, 2, 2,
	2, 1, 1, 1, 4, 4, 6, 6, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 3, 0, 5,
	4, 1, 2, 1, 4, 1, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 2, 5, 1, 4, 2,
	5, 1, 4, 3, 3, 0, 1, 2, 4, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 1, 0, 1, 4, 1, 3, 3, 3,
	5, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 3, 5, 4, 6, 3, 5, 4, 6,
	4, 6, 5, 7, 3, 3, 3, 3, 3, 4,
	3, 2, 4, 2, 3, 3, 4, 3, 4, 3,
	4, 5, 6, 6, 7, 6, 7, 6, 7, 3,
	4, 4, 1, 3, 1, 3, 3, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 5,
	6, 6, 7, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 6, 1, 1, 1, 1, 1, 1, 2,
	1, 5, 5, 6, 3, 1, 1, 1, 2, 2,
	2, 4, 3, 5, 6, 8, 6, 5, 4, 3,
	2, 2, 4, 1, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 6, 6,
	8, 8, 6, 4, 6, 6, 6, 4, 1, 3,
	3, 3, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 3, 4, 3, 4,
	3, 4, 3, 4, 4, 3, 6, 5, 5, 5,
	4, 4, 3, 4, 3, 5, 0, 5, 0, 2,
	0, 1, 3, 3, 2, 2, 0, 6, 1, 0,
	3, 0, 3, 3, 3, 0, 1, 4, 2, 2,
	2, 2, 2, 3, 2, 2, 3, 0, 4, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 1, 2,
	3, 2, 3, 2, 3, 1, 0, 1, 3, 1,
	3, 3, 3, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 3, 1, 2, 3,
	0, 3, 3, 2, 2, 1, 2, 2, 3, 2,
	1, 1, 1, 5, 1, 2, 4, 2, 0, 1,
	0, 3, 5, 1, 0, 1, 2, 1, 0, 1,
	3, 3, 2, 1, 1, 1, 3, 1, 3, 3,
	1, 1, 1, 1, 5, 3, 1, 1, 3, 1,
	1, 1, 1, 2, 2, 1, 1, 2, 2, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 7, 1, 7, 5, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 563, -91, -88, -57, -55, -94, -95,
	-77, -96, -90, -115, -120, -103, -104, -116, -122, -166,
	-171, -172, -173, -3, -43, -45, -58, -76, -78, -89,
	-98, -97, -99, -105, -112, -108, -93, -49, -117, -121,
	-130, -167, -168, -169, 32, 31, 99, 79, 150, 125,
	133, 194, 370, 407, 418, 383, 399, 388, -125, -126,
	435, -44, -56, -119, -118, 72, 126, 394, -4, -12,
	29, 45, -46, -47, -48, 61, -64, -60, -71, -65,
	-62, -559, 101, -512, -79, -82, -111, -563, 138, 157,
	212, -100, -101, 353, -106, -107, 401, -109, -110, 403,
	158, -51, -50, 152, -194, -196, -123, -124, -170, -131,
	-132, -133, -134, -135, -136, -137, -160, -138, -139, -140,
	-141, -142, -143, -163, -144, -145, -146, -147, -152, -148,
	-149, -150, -151, -153, -154, -156, -157, -158, -159, -161,
	-162, 440, -155, 495, 48, 454, 81, 142, 411, 21,
	-5, -6, -7, -8, -9, -10, -11, -14, -13, -59,
	-61, -63, -66, -67, -68, -75, -69, -70, -511, -80,
	-81, -84, -86, -87, -83, -85, 400, -197, -195, 560,
	510, -16, -21, -22, -17, -18, -20, -23, -19, -24,
	-30, -35, -36, -32, -33, -31, -34, -37, -38, -39,
	-40, -41, -42, -26, -28, -29, -27, -15, -25, 529,
	538, -200, -198, -199, -207, 427, 518, 470, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, -276,
	2, -257, -262, -263, -264, -256, -227, -481, -484, 4,
	-478, -482, 163, 221, 317, 21, 23, 22, 24, 25,
	26, 27, 29, 30, 41, 42, 44, 45, 46, 47,
	48, 52, 54, 58, 59, 60, 61, 62, 63, 67,
	72, 73, 78, 79, 80, 81, 82, 83, 84, 90,
	87, 88, 89, 91, 93, 95, 96, 97, 98, 99,
	100, 102, 103, 104, 106, 107, 115, 116, 117, 118,
	120, 125, 126, 129, 124, 128, 131, 132, 133, 136,
	137, 138, 140, 141, 143, 144, 145, 147, 148, 150,
	151, 152, 155, 153, 477, 154, 156, 157, 158, 159,
	169, 170, 171, 176, 178, 182, 183, 186, 187, 188,
	189, 190, 191, 192, 193, 195, 199, 201, 202, 203,
	204, 205, 211, 212, 214, 215, 216, 217, 222, 223,
	227, 224, 233, 234, 238, 239, 240, 242, 246, 247,
	248, 249, 250, 251, 253, 255, 254, 257, 260, 261,
	264, 268, 269, 272, 273, 274, 275, 277, 278, 281,
	279, 282, 283, 280, 284, 286, 287, 288, 289, 290,
	291, 292, 293, 294, 295, 296, 297, 285, 300, 298,
	302, 303, 304, 315, 313, 308, 309, 305, 310, 306,
	307, 311, 312, 319, 320, 323, 209, 325, 326, 329,
	347, 333, 334, 335, 338, 339, 342, 345, 346, 348,
	349, 350, 351, 352, 353, 354, 355, 357, 358, 360,
	361, 362, 364, 365, 366, 368, 370, 371, 373, 375,
	376, 377, 378, 379, 380, 381, 383, 385, 384, 386,
	388, 394, 399, 396, 397, 398, 400, 401, 402, 403,
	405, 406, 407, 409, 410, 411, 412, 414, 416, 417,
	420, 421, 437, 438, 456, 418, 419, 422, 423, 424,
	425, 426, 430, 428, 429, 431, 432, 433, 435, 436,
	439, 440, 442, 443, 444, 445, 446, 447, 450, 452,
	453, 454, 455, 457, 460, 461, 462, 463, 458, 469,
	466, 467, 471, 472, 473, 474, 475, 476, 478, 480,
	488, 489, 490, 492, 495, 496, 497, 498, 486, 500,
	501, 504, 505, 506, 509, 507, 508, 510, 512, 515,
	516, 517, 523, 522, 524, 530, 531, 533, 534, 535,
	36, 49, 50, 53, 55, 57, 68, 69, 70, 74,
	121, 122, 149, 160, 161, 172, 184, 185, 196, 198,
	206, 207, 208, 228, 229, 231, 236, 258, 322, 324,
	340, 344, 359, 363, 367, 369, 382, 413, 448, 459,
	464, 481, 482, 483, 484, 491, 493, 518, 519, 520,
	525, 532, -276, 2, -257, 331, -250, 2, -227, -227,
	370, 28, 2, 28, 358, 429, 472, 474, 2, -538,
	-311, 2, 28, -230, -227, 101, 194, 427, -250, 2,
	-538, -311, 25, 2, -227, 2, 345, -231, 2, 418,
	-227, 278, 2, 563, 93, 269, 73, 413, 432, -128,
	489, -127, 481, 422, -129, -467, 2, 300, -227, 563,
	563, 563, 28, -240, -227, 470, 221, 422, 117, 467,
	563, 2, 470, 350, 522, 428, 117, 379, 221, 497,
	422, -547, 278, 409, 197, 511, -536, 2, -531, 4,
	-482, -478, -270, -269, 470, 475, 117, -264, -256, 553,
	-263, 563, 563, 563, 2, 239, 240, 378, 377, 432,
	433, 563, 563, 563, 563, 420, 2, 159, 22, 27,
	65, 92, 97, 123, 179, 182, 336, -560, 347, 376,
	431, 469, 478, 492, -546, 455, 67, 422, -545, -547,
	278, 497, 136, -361, 117, 269, 193, 505, 474, 472,
	503, 129, 227, 508, 507, 563, 563, 22, 27, 65,
	76, 97, 136, 159, 179, 182, -562, 347, 376, 416,
	431, 469, 478, 492, 2, 522, 278, 428, 470, 221,
	117, 497, 422, -547, 420, 421, 374, -91, 2, 560,
	32, 31, 435, -189, 470, 232, 2, -227, 563, 563,
	2, 239, 240, 420, 421, 563, 563, 180, -531, 2,
	563, 563, 2, 239, 240, 420, 421, 232, 2, 67,
	424, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 2, -164, 432, 455, 203, 46, 45,
	73, 28, 375, 78, 351, 118, 144, 498, 195, 221,
	222, 247, 92, 93, -363, 44, 240, 239, 421, -552,
	420, -414, 471, 423, 429, 466, 251, 418, 489, 101,
	512, 410, 535, 379, 380, 153, 4, 117, 300, 434,
	481, 269, 417, 354, 83, 563, -569, 2, 470, -571,
	2, 489, 489, 2, -571, 2, -571, 2, -571, 2,
	-572, 489, 532, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	-195, -197, -196, 563, 563, 563, 563, 563, 563, 563,
	-164, 432, 2, 73, 28, -304, -306, 502, 230, 146,
	337, -194, -196, 2, -511, -465, 2, -388, -485, -390,
	551, 552, 544, 468, 66, 316, 536, -402, 123, 503,
	331, -484, -391, -404, 149, 413, -326, 8, 9, 5,
	6, 7, -236, -392, -398, 494, 162, 321, -273, 564,
	10, 560, -508, -196, -403, 37, 198, 64, -469, -272,
	-237, -441, 231, -271, -256, -505, -506, 4, -478, -479,
	-470, -444, -452, -448, -449, -455, -227, -481, 76, 109,
	110, 108, 113, 112, 271, 270, 114, 111, 434, 511,
	65, 36, 206, 207, 236, 322, 208, 74, -507, 137,
	-480, 228, 229, 448, 50, 382, 172, 122, 121, 324,
	55, 53, 519, -453, 119, 481, 482, 483, 484, 184,
	185, 57, 160, 161, 344, 367, 464, 491, 493, 196,
	258, 43, 105, 181, 226, 210, 235, 237, 241, 259,
	262, 301, 314, 318, 341, 343, 408, 441, -575, 520,
	459, 68, 69, -513, 384, -514, -250, -513, 563, 563,
	565, 563, -298, -299, -300, 2, 28, 134, 560, 2,
	-419, 2, -420, -424, -196, 252, -423, 560, -421, 558,
	-257, 332, -509, 414, -505, -506, -236, -256, -272, 4,
	-478, -480, 562, -301, 560, 117, 470, 77, 221, -356,
	560, -227, 28, 331, 485, 565, -400, 560, 331, 180,
	334, 59, -227, 522, 2, 2, 437, 2, 560, -128,
	70, 489, 43, 432, -375, 2, -376, -223, -224, -225,
	-431, -226, 238, 373, 381, 539, 127, 316, 535, -465,
	-554, 180, 543, 485, -465, -327, 562, 2, 2, 2,
	2, 2, 2, -424, 206, -257, 2, -254, -468, 4,
	-478, -482, -479, -483, -481, 28, 31, 32, 33, 35,
	37, 38, 39, 40, 56, 64, 65, 71, 75, 77,
	86, 92, 101, 108, 109, 111, 110, 112, 113, 114,
	123, 127, 130, 134, 135, 139, 142, 146, 162, 164,
	177, 179, 180, 194, 197, 200, 213, 225, 230, 232,
	252, 256, 263, 270, 271, 316, 321, 327, 331, 332,
	336, 337, 356, 372, 387, 404, 427, 434, 451, 465,
	470, 479, 485, 487, 494, 502, 503, 511, 513, 521,
	526, 527, 528, 529, -484, 76, 2, -424, 206, 2,
	-259, 206, -424, -262, 2, -241, -227, 2, -253, -468,
	2, -277, 206, -257, -258, -262, -260, 2, -262, -266,
	2, -227, -476, 206, 2, -472, 10, -471, 5, 4,
	-478, -482, -479, 522, 232, 485, 565, -317, -269, -270,
	-464, 8, -310, -227, 562, -388, 2, -117, -102, 2,
	177, -388, 206, 2, -117, 206, 2, -388, 206, 2,
	-117, 206, 2, -549, 2, -476, 206, -227, 2, 282,
	2, 2, 492, 2, 97, 470, 116, 2, 398, -561,
	416, 496, 2, 2, 2, 2, 2, 2, 470, -246,
	2, -227, 177, -266, 206, -267, 2, -227, -228, 428,
	-570, 384, -476, 206, 2, 522, -260, 2, -260, 221,
	234, -241, 206, 2, 474, 472, 474, 472, 180, 2,
	232, 2, 232, 2, -425, 2, -426, -420, -427, 558,
	332, 282, 2, 2, 2, 2, 2, 206, -227, 470,
	116, 2, 250, 2, 2, 2, 2, 2, 2, 2,
	-319, 206, 2, -257, 522, -319, 206, 2, -319, 206,
	2, -362, 2, 86, -241, 206, 2, -265, 206, 2,
	-260, -268, 206, 2, -266, -477, 206, 2, -476, -388,
	2, -117, 2, -435, 2, -434, -471, 518, -91, 560,
	-91, 560, 432, 560, -476, -257, -257, -388, 2, -117,
	-102, 2, -388, 2, -117, 2, -114, -113, -476, 560,
	180, -388, 2, -117, -102, 2, -388, 2, -117, 2,
	-189, 177, 2, 117, 470, -164, 2, 177, 513, 2,
	8, 2, 213, -476, 423, 380, 169, 2, 437, 2,
	438, 73, -363, 535, 73, 180, 2, 180, 2, -346,
	2, 529, 2, 2, -535, 2, 331, 180, 2, 180,
	2, 180, 2, 180, 2, 180, 2, 377, 433, 490,
	240, 2, -117, 526, -102, -388, 526, 2, -553, 177,
	421, -388, 2, 488, 249, 154, 180, -346, 2, 180,
	2, 180, 2, 5, 2, 378, 456, 2, 238, 373,
	456, 2, -257, -564, 2, 470, 522, 428, 2, 2,
	87, 88, 180, 2, 180, 2, 180, 535, 2, -338,
	-424, -374, -375, -374, 485, -304, -306, -164, 437, 2,
	-201, -336, -203, 177, -365, -366, -204, 263, 164, 327,
	-205, -345, 28, 134, -345, -345, 59, 561, 561, 11,
	12, 75, 41, 551, 552, 553, 554, 175, 555, 556,
	549, 550, 548, 541, 542, 546, 244, 245, 94, 545,
	543, 85, 276, 415, 165, 166, 167, 168, 395, 219,
	34, 220, 14, 15, 16, 33, 336, 262, 536, 210,
	441, 544, 17, 18, 19, 235, 237, 318, 49, 213,
	-235, -279, -388, -388, -388, -388, -388, -388, -388, 343,
	560, -332, -383, 558, -196, 560, 560, 560, -464, -196,
	-388, -402, 561, -324, 560, -196, -402, -397, 560, 413,
	558, 560, -405, -388, 5, 5, 5, 560, 562, -516,
	530, 177, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 369, -446, 560,
	-445, 560, -445, -445, 523, -443, 560, 538, 531, 560,
	-443, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 523, 565, -513, -301, 560, -328,
	-429, -388, 553, -328, -328, 331, -321, -388, 105, -349,
	241, 301, 181, 259, 408, 226, -385, 564, -385, -413,
	538, -196, -421, -256, -196, -423, 560, -419, -413, -92,
	-464, -76, -89, -97, -117, -130, -168, -169, 553, -257,
	560, 180, 560, 562, -468, 180, -310, -241, -257, -271,
	-272, -277, 133, -321, -531, 497, 422, -310, -230, 38,
	-399, -438, -439, -487, 564, -486, -441, -451, -447, -450,
	359, 363, -470, 53, 519, -453, 231, 4, -478, -480,
	228, 229, 448, 50, 382, 172, 122, 121, 324, 55,
	481, 482, 483, 484, 184, 185, 57, 520, 459, 68,
	69, -531, 497, 422, -310, 177, -474, 2, -473, -472,
	114, 434, -362, -467, -321, 38, -375, 2, 123, -472,
	-573, 565, 261, -281, 275, 315, 202, 332, 533, 325,
	127, -475, 5, 4, -398, -410, 123, 269, 231, -458,
	-460, 8, -459, 9, -461, 551, 552, -466, -465, 107,
	562, -468, -212, 396, 435, -211, 24, 29, 138, 516,
	155, -291, 223, 346, 350, 149, 452, 506, -542, -543,
	419, 476, 477, 89, 325, 435, 396, 149, -342, -344,
	38, 115, 304, 345, 60, 216, 280, 281, 454, 525,
	149, 435, 396, 346, -543, 98, 396, -543, -214, 452,
	506, -542, -543, 419, 396, -213, -291, 149, 564, 24,
	396, 435, 346, -557, -558, 138, 29, 396, 346, -539,
	-510, 529, 149, -424, 206, -550, -113, 253, 5, 10,
	-113, -317, 565, 565, -468, 553, 421, 420, 149, 149,
	149, 149, 177, 316, 2, 2, 2, 2, 2, 182,
	-545, -562, 2, 2, -257, 206, -303, 331, -534, -318,
	470, -257, 316, 43, -259, 206, 2, -262, 522, -539,
	316, -261, 206, -257, 38, 560, 2, -362, 2, 221,
	-510, 316, -425, -274, -257, -420, -274, 435, -250, 38,
	-385, -257, 2, 149, 2, 2, 2, -227, -215, 565,
	63, 402, 149, -319, 206, -215, 149, -215, 149, -278,
	206, -277, -215, 149, -215, 565, 149, -215, 565, 149,
	565, 149, 561, 565, -435, -435, -476, -177, 529, 180,
	101, 560, 560, -189, -432, 565, -431, -477, -114, -476,
	-476, -534, -241, 2, -257, 2, 470, 242, -476, -177,
	213, -476, -476, -476, -467, 28, 438, 2, 377, 433,
	490, 88, 438, 2, -257, 470, 117, 221, 79, -537,
	177, -532, 409, 422, 497, -531, -257, 117, -257, 117,
	-257, 117, -257, -257, 2, 2, 2, 2, 2, 84,
	84, 2, 45, -553, 177, 2, 488, 2, 488, 2,
	-227, -227, -227, 455, 261, -257, 177, 470, 221, 470,
	221, 117, 470, -215, 565, -231, -201, -336, -467, -337,
	-336, -202, -201, -204, 177, 381, 507, 304, 439, 246,
	-366, -365, 28, -388, -370, 171, 303, -388, -368, -390,
	551, 552, -459, -461, -320, 325, -195, -195, -195, -307,
	-415, -388, 372, 221, -440, -438, -438, -255, -468, 481,
	-388, -388, -388, -388, -388, -388, -388, -388, -388, -388,
	-388, -388, -388, -388, -388, -388, -388, -388, -388, -388,
	-388, -388, -388, -388, -388, -388, -388, -388, -388, -388,
	-388, -388, -388, -388, -388, 262, 210, 441, 49, 213,
	-388, 485, -388, -388, -388, -388, 298, 316, 321, 494,
	162, 504, 134, 325, -576, 465, 40, -395, -196, -325,
	560, -409, 35, 451, 28, -402, 560, 2, -383, -388,
	-384, -322, -321, -321, 561, 521, 28, 134, 553, 2,
	561, 565, 38, 561, -388, -322, -401, -397, -321, -408,
	-407, 526, -357, -358, 534, 285, 120, 204, 283, -359,
	426, -462, 8, -468, 553, -517, 170, 197, 560, 561,
	2, 561, 2, 561, -388, 2, 561, -388, 2, 561,
	-388, 2, 561, -388, 2, 561, 2, -388, -388, -388,
	-388, -388, -388, -388, -321, 8, -462, -462, 481, 481,
	-462, -462, -462, -454, 359, 360, 361, 362, 264, 265,
	266, 267, 363, 364, 365, 366, 290, 291, 292, 293,
	286, 287, 288, 289, 294, 295, 296, 297, 189, 190,
	191, 192, 185, 186, 187, 188, -454, -351, 2, -456,
	-321, 4, 534, 285, 120, 204, 283, 426, 5, -351,
	2, -352, 2, -388, -321, -353, -389, -390, 551, 552,
	544, -402, -354, 2, -388, -322, -388, 56, 256, 487,
	-355, -388, 180, -321, -321, 2, -321, 2, -514, 38,
	-321, -313, 565, 180, 38, 4, -313, -313, 560, 561,
	565, -350, 201, 279, 274, -350, -419, -349, 241, -347,
	341, -347, -347, -413, -242, 558, 566, -468, -413, -412,
	-411, 38, -250, 338, -413, -413, 562, 561, -412, 559,
	-529, 560, 563, 563, 563, 563, 563, -257, 560, -321,
	-468, 562, 457, 561, 235, 235, 235, 235, 414, 561,
	485, -533, -265, -268, 529, -91, 333, 561, 565, -312,
	37, 558, 562, -462, 2, 2, -457, 523, 560, 560,
	-358, 560, 180, -533, -268, -311, 565, 485, -261, -554,
	561, 489, -376, -280, 381, 450, 397, 430, 467, 8,
	9, 8, 9, 565, -468, 565, -555, 92, 485, 77,
	422, -379, 206, 77, -488, -244, 92, -489, -227, 71,
	503, 372, 179, 147, -555, 92, 372, -555, 92, 92,
	435, 455, 485, 59, -424, 41, 41, 28, -117, 257,
	180, 535, 470, 221, 422, 485, -424, -344, -438, 115,
	280, 281, 59, -463, -458, 551, 552, -463, 59, -463,
	-463, -463, 529, -259, -424, 422, 485, 485, 485, 485,
	565, 41, 41, 28, -117, 257, 180, 485, -277, -242,
	517, 42, 517, 485, 42, 422, 485, 565, 42, 42,
	485, 485, -540, -232, 104, 310, 273, 311, 96, 307,
	95, 306, 102, 308, 103, 309, 524, 319, 62, 305,
	284, 312, -233, -234, 352, 515, -476, 435, 396, 149,
	213, -432, 213, -432, -269, -227, 562, -117, -388, -388,
	-117, -388, -117, 45, 149, 2, -570, 250, 560, -284,
	316, 180, -310, -433, 232, 565, -318, 149, -473, -343,
	-342, 316, -261, 206, 2, 149, -301, 316, 143, 560,
	379, 2, -243, 206, -228, -227, -362, -218, 473, 149,
	-340, 513, -371, -117, 560, 123, 38, -371, -329, -330,
	-430, -331, -244, 560, -250, -385, -227, 2, -257, -319,
	-215, 149, -319, -319, -215, 565, 149, -241, -260, -265,
	-266, -268, -476, -477, -91, -434, 561, 561, 561, -176,
	335, -175, -227, 5, -189, 513, -283, -380, -379, -492,
	-493, -488, 262, 221, 503, 234, 163, -302, -245, -244,
	116, -183, 529, -113, 561, -432, 213, -177, -177, -432,
	-432, -257, 177, -476, -177, -177, -177, 2, 2, 2,
	-346, -257, -241, -277, -257, -310, -310, -310, -265, -346,
	-241, -346, -241, -346, -241, -117, -388, 2, 432, 177,
	177, 562, -346, 379, 117, 470, 350, 221, -257, -277,
	-257, -277, -241, -257, -424, -337, -202, 332, 246, 439,
	-368, -369, -390, 413, 414, -369, 413, 414, 8, 9,
	8, 9, -206, 443, 320, -319, 565, -209, 39, 130,
	246, -257, 535, 145, -388, -388, 485, -576, 465, -395,
	145, -388, 298, 321, 494, 162, 504, 134, 325, 180,
	560, -389, -389, 561, -323, -388, -388, 559, 568, 561,
	-306, 565, -304, -388, -321, -321, 561, 562, -321, -310,
	559, 559, 565, 561, -406, -407, 139, -388, 485, 485,
	485, 485, 560, 561, 562, -522, 342, 560, 560, -388,
	561, 561, 561, 561, 38, 565, 565, 565, 561, 565,
	565, 565, 561, 561, 561, 565, 561, 535, 535, 561,
	561, 561, 561, 565, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 561, 565,
	561, 180, 561, 561, -360, 356, 561, 11, 12, 551,
	552, 553, 554, 175, 555, 556, 549, 550, 548, 541,
	542, 543, 85, 276, 415, 14, 15, 16, 235, 213,
	-389, -389, -389, 561, -393, -394, 180, 177, 38, -355,
	-355, -355, 561, 180, -321, 561, 561, 560, -515, 278,
	316, 561, -382, -381, 527, -429, -314, 2, -419, -252,
	-468, -382, -382, -321, -388, 241, 241, -348, 513, 331,
	-350, -419, -412, -464, -387, -386, 178, 39, 130, 313,
	209, -412, -250, -301, -412, -412, -468, -413, -413, -411,
	561, -530, -464, 561, -315, -422, -509, -306, 562, -468,
	-186, -510, -165, 5, 321, -165, -165, -165, -310, 485,
	485, 25, 357, -438, 558, 559, 8, -468, 560, -462,
	-462, -462, -310, 180, 180, 180, -473, -473, -341, 529,
	-465, -375, 501, 82, 381, 481, -465, -211, 396, -244,
	-244, -257, -266, 316, -379, 206, -217, 316, -438, -251,
	-227, 560, 560, 246, 246, 513, -244, -251, 246, 206,
	-244, 206, -251, -251, -541, 381, 326, -388, -473, 268,
	379, 317, -212, 396, 435, -117, -117, -117, 560, -554,
	513, 133, -257, -277, -257, -266, -261, 435, 396, 314,
	-271, -463, -463, -342, 435, 396, -266, -259, -473, 422,
	-241, -213, -117, -117, -117, 560, -242, -214, 396, 5,
	206, -244, 5, -227, -244, -266, -473, -558, 24, -244,
	206, -244, -266, -473, -232, -476, 321, 509, -539, 422,
	485, -424, -113, -180, 529, -113, -174, 217, 553, -536,
	-227, 522, -227, -282, -285, -283, -244, -192, -193, 531,
	529, 149, -275, -257, 558, -177, -476, -257, -266, -267,
	149, -301, 316, -476, 38, 149, 560, 2, 2, 331,
	316, -243, 206, -219, 140, -574, 543, -241, -382, -314,
	-339, -373, 404, 331, -302, 518, -250, -339, -316, 565,
	180, 543, 562, -302, -428, 553, 2, -215, -319, -215,
	-215, -277, -278, -215, -215, -215, -91, -91, -177, 565,
	560, 543, 543, 560, -476, -476, 561, 565, -257, -243,
	221, 221, -249, -228, 561, 565, 562, 560, -185, 335,
	-184, 141, 248, 233, 444, 445, 446, 447, 132, -183,
	-114, 180, -52, 529, 470, -177, 564, -346, -346, -346,
	432, 432, -227, -253, -241, -257, -254, -277, 177, 177,
	507, -369, 332, 272, -415, -210, 537, -257, 564, -388,
	-388, 145, 145, -388, -389, -389, -388, 145, 180, 560,
	-388, -399, 33, 33, 561, 565, -384, -388, 561, 521,
	-306, -306, 561, 553, -468, 564, 561, -397, 142, -388,
	479, 285, 204, 283, -359, 283, -359, -359, -462, 5,
	-468, 553, -523, -247, 560, -227, 527, -305, 337, 561,
	-440, -438, -388, -388, -388, -388, -388, -462, -443, -443,
	-458, -458, -388, -393, -388, -440, -438, -389, -389, -389,
	-389, -389, -389, -389, -389, -389, -389, -389, -389, -389,
	-389, -389, -389, -389, -389, -389, 134, 316, 325, -389,
	-394, -393, -388, -388, -438, 561, 561, 561, -321, -91,
	560, 278, -333, 197, -388, -432, 565, -333, -333, 561,
	-419, -419, 560, -388, 241, 559, 565, 567, 543, -301,
	562, -411, -412, 559, 561, 565, 561, 565, -372, 38,
	561, -468, -382, -188, -187, 131, 52, -310, -310, 334,
	5, 8, 558, 559, 562, -462, 561, 561, 561, -310,
	-310, -310, 116, 304, -388, 485, 485, 149, 316, 515,
	-494, -489, 147, -388, -308, -416, -509, 560, -227, 560,
	560, 2, -208, 138, 435, -556, 2, 513, 149, -215,
	149, -215, 533, 560, 560, 485, 422, 529, -321, -388,
	-178, 123, -467, -543, 564, -543, 564, 422, 485, 422,
	485, 529, 529, -321, 485, -442, 47, 26, 316, -260,
	485, 485, -215, 149, 497, 435, -476, 321, -266, -261,
	435, 396, -432, -182, 335, -181, 141, 406, 132, 248,
	-432, -180, 180, 232, -261, 2, 561, 561, 565, -495,
	38, 329, 329, 560, -257, -72, 529, -431, -464, 43,
	-259, 38, 149, -539, -117, -261, -436, -437, 5, -257,
	149, 331, 316, -220, 255, -574, -472, -510, -306, -339,
	-328, 317, 90, 561, -382, -330, -314, -388, 2, 561,
	-215, -215, -175, -176, -476, -476, -476, -177, -189, -189,
	-380, -286, 560, -243, -228, 560, -189, -245, 2, -477,
	565, 560, 543, 543, 543, -432, -117, 335, -257, 553,
	-346, -293, -292, 350, 325, -293, 413, 413, 332, 171,
	251, -209, -242, -388, -388, 145, 33, 33, -388, -388,
	-399, 561, -388, -388, -321, 559, 5, -388, 561, 561,
	8, -388, 561, 562, -524, -227, -388, 561, 59, 561,
	561, 565, 565, 561, 561, 561, 561, 561, 561, 561,
	-394, 180, 134, 325, 560, 561, 561, -91, -396, 200,
	59, -419, -396, -396, -348, -310, -419, -386, -242, 558,
	-468, -464, -422, 560, 562, -187, 543, 559, 2, 558,
	-468, 561, 116, -244, -244, -379, 149, -496, 92, -498,
	75, 163, 101, 316, 321, 503, 372, 71, 123, 387,
	-566, 38, 540, 561, 561, 565, -417, -238, -227, -388,
	-417, -308, -310, 316, 462, 123, 316, 123, 116, 497,
	78, -244, -251, -310, -310, -257, -266, 156, 561, 565,
	543, 2, 553, 553, -266, -261, -266, -259, 348, 156,
	561, -242, 5, 5, 149, -239, 75, 5, -244, -244,
	-260, 116, 422, 485, -180, 565, 560, 543, 543, -180,
	-477, -113, -301, -289, 224, -244, -493, -490, -491, 372,
	-497, -499, 163, 372, -117, 2, -191, -190, -227, 5,
	560, -284, 335, 559, -473, -343, -117, -261, -301, 561,
	565, -364, 513, -242, -257, 149, -221, 254, -574, -472,
	-218, -367, -365, 135, 560, 331, -117, -306, 543, 561,
	561, 116, 116, 215, 148, -308, 560, 560, -310, 116,
	561, -184, -185, -476, -113, -476, -183, -53, -54, 221,
	92, 355, -254, 470, 221, 560, 560, -209, -388, -388,
	-388, 561, -306, -468, 553, -518, 350, 561, -415, -388,
	-388, -389, 180, 560, -399, 561, -519, 528, -388, -334,
	-335, -388, 412, 106, 198, -519, -519, 561, -464, 2,
	-476, 558, 2, -379, -251, -255, -248, -227, 163, 206,
	321, 246, 560, -389, -257, 560, 2, 30, -567, 127,
	225, -378, -568, 100, 463, 214, -416, -209, 561, 561,
	561, 321, 321, -388, -438, 560, -215, -215, 561, 561,
	-388, 485, -467, 99, -465, 2, -543, -241, -388, 485,
	5, -215, -255, -215, -215, -239, 497, -266, -261, -181,
	-182, -476, -113, -180, 38, -290, -291, 213, -495, 246,
	-248, 246, -565, 529, 561, 565, 543, 543, -282, -192,
	-73, -74, 486, -431, -301, 38, 5, 560, -227, 331,
	560, -242, -222, 91, -574, -472, -219, -339, 317, -310,
	92, -367, -395, -177, 560, 560, -287, 80, 93, 124,
	205, 183, 222, 455, 460, 28, -287, 561, -308, -308,
	561, 560, -177, 561, 565, 28, 560, 28, 560, -257,
	-277, -321, -321, 561, -306, 59, 565, 561, 561, -389,
	-399, 561, -520, -521, -247, 565, 560, 560, 436, 559,
	2, -498, -248, 316, 513, -388, -229, 560, -388, 38,
	225, 128, 211, -289, 560, -210, -417, -377, 513, 387,
	-239, -308, 560, 560, 560, 543, 180, 560, -442, -215,
	-260, 561, -548, 385, -117, -192, 348, 560, -288, 331,
	116, 304, -190, -465, -465, 561, 38, -74, 9, 38,
	-117, -308, -257, -308, 331, 263, -472, -220, 561, -251,
	-339, -477, -477, -377, 561, 561, -477, -54, -310, -310,
	561, 561, -525, 379, 414, 199, -321, -307, 561, 565,
	38, -335, 2, 2, 2, 149, 201, 561, -500, 277,
	-227, 561, 128, 211, -290, -310, -289, 201, -257, -544,
	513, 561, -295, -294, -292, -297, -296, -292, -321, -465,
	99, 348, -321, -239, -551, 181, -550, 5, 10, -288,
	-257, -309, -418, -244, 81, 116, -289, -117, -117, 561,
	-364, 561, -257, -574, -221, -382, 561, 561, -378, -377,
	-193, 529, 561, 561, 561, 561, -526, -527, 49, 500,
	107, -388, -526, -526, -521, -523, 163, 529, -501, -504,
	-503, 331, 442, 181, 349, 561, 462, 525, -567, 561,
	529, -301, -388, -377, 561, 565, 518, 561, 565, 518,
	561, 180, 561, -215, -179, 529, 45, 560, 561, 565,
	371, 129, 138, -290, -565, -377, 560, -378, 560, -458,
	-222, 135, -177, -177, -289, -378, -382, -177, -528, 147,
	-527, 368, 176, 413, 368, 176, -528, -528, -248, 54,
	-503, 331, -504, 331, 507, 129, -382, 54, -500, -289,
	-294, 213, -296, 180, 348, 420, -550, 30, -310, -418,
	414, 414, 2, -192, -288, -378, -308, -289, -308, 317,
	507, -290, -289, 107, 197, 480, 304, 33, 543, -502,
	304, 402, 63, 435, -502, 543, -501, 560, 560, 335,
	561, 2, -288, -289, 561, -290, 561, 435, -193, -290,
	413, 339, -527, -388, 23, 321, 123, -388, -567, -321,
	-321, -176, 560, -216, 63, 402, -290, -377, -193, -378,
	-329, -382, -193, 561, 561, -176, -193, -378, -382, -289,
	-382, -382, -290, 485, 561, -382, -289, -290, 560, -290,
	-193, -321, -193, -382, 561, -382, -290,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 29,
	30, 31, 32, 488, 489, 491, 492, 493, 495, 496,
	498, 500, 502, 503, 504, 506, 507, 509, 510, 511,
	512, 513, 515, 517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 579, 581,
	0, 1214, 1216, 1218, 1220, 0, 719, 0, 34, 35,
	0, -2, 285, 287, 289, 0, 315, 317, 318, 320,
	322, 324, -2, 0, 421, 422, 424, 426, -2, -2,
	0, 890, 892, 0, 568, 570, 0, 895, 897, 0,
	0, 590, 591, 0, 1307, -2, 584, 586, 588, 653,
	655, 657, 659, 661, 663, 665, 667, 669, 670, 672,
	674, 676, 678, 680, 682, 684, 686, 687, 689, 691,
	693, 695, 697, 699, 701, 703, 705, 707, 709, 711,
	713, -2, 715, -2, -2, 0, -2, -2, -2, 1232,
	38, 40, 42, 44, 46, 48, 50, 52, 54, 372,
	373, 375, 377, 379, 381, 384, 386, 388, 1365, 428,
	430, 432, 434, 436, 438, 440, 0, -2, 1377, 0,
	0, 56, 57, 58, 59, 60, 61, 62, 63, 64,
	85, 86, 87, 88, 89, 90, 91, 92, 68, 69,
	71, 72, 73, 77, 78, 79, 80, 83, 66, 0,
	0, 1338, 1340, 1342, 1344, -2, 0, 0, 5, 9,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 490,
	494, 497, 499, 501, 505, 508, 514, 516, 518, 475,
	476, 479, 2033, 2050, 2051, 2052, 2055, 2056, 2057, 2058,
	2059, 2060, 2479, 2560, 2561, 2082, 2083, 2084, 2085, 2086,
	2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096,
	2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106,
	2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116,
	2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126,
	2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136,
	2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146,
	2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156,
	2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166,
	2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176,
	2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186,
	2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196,
	2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206,
	2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216,
	2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226,
	2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236,
	2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246,
	2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256,
	2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266,
	2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276,
	2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286,
	2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296,
	2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306,
	2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316,
	2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326,
	2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336,
	2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346,
	2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356,
	2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366,
	2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376,
	2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386,
	2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396,
	2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406,
	2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416,
	2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426,
	2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436,
	2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446,
	2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456,
	2457, 2458, 477, 478, 1052, 0, 542, 540, 2025, 543,
	2293, 545, 547, 415, 416, 417, 418, 419, 420, 0,
	561, 553, 560, 562, 564, 565, 566, 567, 537, 535,
	0, 561, 2086, 559, 1212, 1213, 0, 1197, 1198, 2332,
	1239, 0, 197, 580, -2, -2, -2, 2444, -2, 612,
	-2, 619, 2448, 2334, 624, 0, 626, -2, 629, 1215,
	1217, 1219, 717, 718, 2036, 0, 0, 0, 0, 0,
	36, 37, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1101, 1102, 1103, 0, 205, 207, -2,
	-2, -2, -2, 0, 0, 2373, 2135, 1993, 2052, 1996,
	1991, 286, 288, 290, 291, 0, 0, 0, 0, 0,
	0, 316, 319, 321, 323, -2, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, 0, 0, 0, 0, 947, 939, 940,
	1158, 0, 0, 0, -2, 423, 425, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 427, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 0, 351, 480, 481, 0,
	1366, 1366, 0, 0, 0, 0, 260, 251, 891, 893,
	894, 0, 0, 0, 0, 569, 571, 0, 0, 233,
	896, 898, 899, 0, 0, 0, 0, 0, 262, 0,
	0, 585, 587, 589, 654, 656, 658, 660, 662, 664,
	666, 668, 671, 673, 675, 677, 679, 681, 683, 685,
	688, 690, 692, 694, 696, 698, 700, 702, 704, 706,
	708, 710, 712, 714, 725, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, -2, -2, -2, -2, 0,
	0, 0, 0, 0, 0, 0, -2, 0, 809, 0,
	0, 0, -2, -2, -2, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 0, 728, 730, 731, 732,
	0, 789, 807, 808, 817, 716, 0, 1092, 1367, 1241,
	1222, 1236, 1241, 1224, 1225, 1226, 1227, 1228, 1233, 1235,
	1229, 1230, 1231, 39, 41, 43, 45, 47, 49, 51,
	53, 55, 374, 376, 378, 380, 382, 385, 387, 389,
	-2, 1336, 1337, 429, 431, 433, 435, 437, 439, 441,
	572, 0, 574, 0, 729, -2, 0, 1371, 1371, 1371,
	0, 0, 1337, 1335, 0, 577, 578, 633, 634, 1636,
	0, 0, 0, 0, 0, 0, 0, 1890, 1722, 0,
	635, -2, 1753, 1755, 2419, 2444, 1889, 1757, 1758, 1759,
	1760, 1761, 0, 1763, 1764, 1765, 1766, 1767, 1768, 0,
	1770, 0, 1775, 1776, 1777, 0, 2426, 1970, 2046, -2,
	0, 0, 2432, 2042, 0, 1856, 1793, -2, -2, 2069,
	2048, 1568, 1569, 1570, 1571, 1572, -2, -2, 2462, 1797,
	1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807,
	0, 2407, 2427, 2428, 2433, 2435, 2429, 2416, 1818, 2147,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 1595, 1604, -2, -2, -2, -2, -2,
	-2, -2, 2420, 2421, 2438, 2441, 2447, 2452, 2453, 2425,
	2434, 2461, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470,
	2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 1596, -2,
	-2, -2, -2, 1354, 2305, 1357, 1052, 1355, 1339, 1341,
	0, 1343, 0, 0, 0, 1348, 1374, 1372, 0, 1421,
	1352, 1353, 1439, 1439, 1463, 0, 1444, 0, 1463, 1366,
	1489, 0, 1450, 2324, 1794, 1795, 0, 2052, 2047, -2,
	-2, 2459, 0, 0, 0, 0, 0, 0, 0, 538,
	0, 544, 546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1238, 1157, 582, 583, 0, 607, 0, 611,
	2415, -2, 0, 2343, -2, 615, 1242, 1246, 1247, 1248,
	1249, 1250, 0, 0, 0, 0, 1255, 0, 0, 621,
	0, 0, 608, 609, 627, 630, 0, 720, 721, 722,
	723, 724, 65, 0, 2427, 1489, 67, 0, 2015, 2077,
	2078, 2079, 2080, 2081, 2460, 2480, 2481, 2482, 2483, 2484,
	2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494,
	2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504,
	2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514,
	2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524,
	2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534,
	2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544,
	2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554,
	2555, 2556, 2557, 2558, 2559, 2462, 70, 0, 2427, 74,
	0, 2427, 0, -2, 81, 0, 2021, 84, 0, 2018,
	93, 0, 2427, 0, 1990, -2, 0, 180, 2029, 0,
	918, 2031, -2, 2427, 1100, 263, 264, 2065, 2066, 2073,
	2074, 2075, 2076, 0, 0, 0, 0, 881, 1987, 1992,
	882, 2011, 883, 1997, 0, 292, 293, 294, 295, 296,
	0, 297, 2427, 299, 300, 0, 302, 303, 2427, 305,
	306, 0, 308, 0, 218, 219, 2427, 327, 328, 0,
	330, 331, 0, 333, 0, 0, 0, 337, -2, 352,
	0, 349, 340, 341, 343, 344, 345, 346, 0, 393,
	391, 2026, 0, 911, 2427, 0, 915, -2, 2032, 0,
	0, 1137, -2, 2427, 1097, 0, 1143, 1139, 0, -2,
	0, 1364, 2427, 1259, 943, 944, 945, 946, 1501, 412,
	0, 1274, 0, 1276, 0, 1295, 1495, 1439, 0, 0,
	1500, 0, 354, 355, 356, 357, 358, 2427, 0, 0,
	0, 363, 0, 365, 366, 367, 368, 369, 370, 371,
	169, 2427, 446, 473, 0, 169, 2427, 449, 169, 2427,
	452, 0, 455, 1156, 169, 2427, 458, 169, 2427, 461,
	463, 169, 2427, 467, 468, 470, 2427, 472, 265, 1208,
	1209, 1210, 1211, 0, -2, 531, 2035, -2, 483, 0,
	484, 0, -2, 0, 277, 0, 0, 900, 901, 902,
	903, 904, 907, 908, 909, 910, 1476, 236, 234, 0,
	0, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207,
	0, 0, 592, 0, 0, 726, 727, 0, 0, 737,
	738, 739, 0, 277, 2335, 2301, 2167, 746, 0, 749,
	752, -2, 0, 0, 0, 0, 756, 0, 761, 762,
	763, 0, 765, 767, 889, 769, 0, 0, 771, 0,
	775, 0, 778, 0, 780, 0, 782, -2, -2, -2,
	-2, 793, -2, 0, 796, 798, 0, 800, -2, 0,
	809, 805, 806, 0, 0, 0, 0, 825, 826, 0,
	835, 0, 838, 839, 840, 0, 842, 843, 0, 845,
	846, 847, 848, 0, 850, 851, -2, -2, 855, 857,
	0, 864, 0, 868, 0, 872, 0, 733, 734, 169,
	1493, 1221, -2, 1223, 0, -2, 0, 573, 0, 576,
	1394, 1322, 1319, 0, 1391, 1392, 1323, 0, 0, 0,
	1330, 0, 1369, 1370, 0, 0, 0, 1309, 1310, 0,
	0, 0, 0, 1895, 1896, 1897, 1898, 1899, 1900, 1903,
	1904, 1901, 1902, 1905, 1906, 0, 0, 0, 0, 0,
	1907, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1908, 1909, 1910, 0, 0, 1912, 0, 1914,
	0, 0, 0, 0, 0, 0, 1701, 1703, 1978, 0,
	0, 1911, 1641, 1642, 1643, 1644, 1645, 1680, 1681, 0,
	0, 1754, 1975, 1974, 1756, 0, 1926, 0, 1769, -2,
	0, 1890, 1921, 0, 0, 1778, 1779, 1780, 0, 0,
	1926, 0, 0, 1969, 1790, 1791, 1633, 0, 0, 1858,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1582, 1581, 0,
	1583, 0, 1584, 1585, 1592, 1605, 0, 0, 0, 0,
	1609, 0, 0, 0, 0, 0, 0, 0, 1950, -2,
	0, 0, 0, 0, 1597, 0, 1356, 0, 0, 1425,
	1979, 1983, 1984, 1425, 1425, 0, 0, 1927, 1486, 1486,
	0, 0, 1482, 1482, 1482, 1480, 1463, 0, 1463, 1473,
	0, 1463, 1463, 0, -2, 1444, 0, 0, 1473, 0,
	1457, 519, 521, 523, 525, 526, 527, 529, 1490, 1491,
	0, 0, 0, 0, 2053, 0, 0, 0, 0, 0,
	2038, 0, 0, 0, 0, 2383, 2334, 549, 563, 1366,
	0, 1929, 1516, 1520, 0, 1522, 1523, 1524, 1525, 1526,
	0, 0, 1517, -2, 1593, 1595, 1616, 2070, 2071, 2072,
	1576, 1577, 1578, 1579, 1580, 1588, 1575, 1575, 1575, 1586,
	1615, 1607, 1615, 1611, 1561, 1562, 1563, 1598, 1599, 1600,
	1601, 0, 2383, 2334, 555, 0, 0, 1306, 184, 186,
	187, 188, 0, 0, 0, 0, -2, 617, 622, 623,
	0, 1244, 0, 1251, 644, 645, 646, 1253, 1254, 0,
	1256, 620, 647, 648, 649, 650, 651, 652, 0, 1999,
	2000, 2001, 2002, 2005, 2006, 0, 0, 618, 637, 625,
	0, 631, 94, 1194, 0, 133, 0, 1194, 1194, 0,
	0, 155, 0, 0, 0, 0, 0, 0, 0, 118,
	129, 106, 107, 0, 0, 0, 0, 0, 75, 1074,
	0, 1077, 0, 0, 0, 0, 0, 0, 0, 1090,
	0, 0, 0, 0, 117, 0, 0, 112, 96, 0,
	0, 0, 119, 131, 0, 160, 162, 0, 0, 0,
	0, 0, 0, 179, 189, 0, 0, 0, 0, 1098,
	0, 1363, 0, 0, 2427, 0, 1476, 2211, -2, -2,
	1476, 880, 0, 0, 2053, 1995, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 332, 334, 335, 336, 0,
	1136, 0, 342, 383, 1023, 2427, 0, 0, 410, 405,
	0, 407, 0, 0, 1073, 2427, 1071, 2030, 0, 1095,
	0, 1052, 2427, 2028, 0, 0, 1144, 2062, 1153, 1157,
	1261, 0, 414, 0, 1277, 1279, 0, 0, 1496, 0,
	1498, 1439, 353, 0, 360, 361, 362, 0, 442, 0,
	167, 168, 0, 169, 2427, 447, 0, 450, 0, 169,
	2427, 1985, 456, 0, 459, 0, 0, 465, 0, 0,
	0, 0, 1366, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 240, 0, 1475, 0, 1476, 234,
	277, 277, 1476, 594, 1476, 596, 0, 0, 740, 741,
	0, 277, 277, 277, 747, 748, 750, 751, -2, -2,
	-2, 865, 753, 754, 832, 0, 0, 0, 831, 768,
	0, 874, 2320, 2334, 2383, 887, 832, 2135, 832, 2135,
	832, 2135, 779, 781, 784, 820, 828, 792, 797, 0,
	0, 802, 810, -2, 0, 812, 0, 814, 0, 816,
	832, 833, 836, 841, 844, 849, 0, 0, 0, 0,
	0, 0, 0, 1091, 0, 1234, 1394, 1322, 575, 1313,
	1393, 1314, 1321, 1324, 0, 0, 1326, 0, 1328, 0,
	1389, 1390, 1397, 1398, 0, 1408, 1409, 1401, 0, -2,
	0, 0, 1404, 1405, 1332, 0, 1349, 1350, 1351, 1378,
	1381, 1172, 0, 2560, 1637, 1511, 1638, 1639, 2014, 0,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	-2, -2, -2, -2, -2, -2, -2, -2, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, -2,
	-2, -2, 1678, 1679, -2, 1913, 1915, 0, 1978, 0,
	-2, 0, -2, -2, -2, -2, 1698, 0, 1700, 1705,
	1707, 1709, 0, 0, 0, 0, 1977, 1719, 1961, 1962,
	0, 0, 1892, 1893, 1894, 1704, 0, 1723, 1976, 1973,
	0, 0, 1925, 1377, 1782, 0, 0, 0, 0, 1789,
	1774, 1923, 0, 1922, 0, 0, 0, 1933, 0, 1968,
	1964, 0, 2012, 1632, 1619, 1620, 1621, 1622, 1623, 1624,
	1634, 0, 2009, 2039, 2045, 1866, 0, 0, 0, 1819,
	1820, 1821, 1822, 1823, 0, 1825, 1826, 0, 1828, 1829,
	0, 1831, 1832, 0, 1834, 1835, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1529, 0, 0, 0, 1533, 0,
	0, 0, 1537, 0, 0, 0, 1541, 0, 0, 0,
	1545, 0, 0, 0, 1549, 0, 0, 0, 1553, 0,
	0, 0, 1557, 0, 0, 0, 0, 0, 1838, 0,
	1936, -2, -2, -2, -2, -2, -2, -2, -2, 0,
	1840, 0, 1842, 1927, 1947, 0, 0, 1724, 0, 0,
	0, 1890, 0, 1845, 1927, 1955, 0, 0, 0, 0,
	0, 1927, 0, 1960, 0, 1852, 0, 1854, 1358, 0,
	0, 1506, 0, 0, 0, 1982, 1506, 1506, 0, 1420,
	0, 0, 1483, 1484, 1485, 0, 0, 1486, 0, 1477,
	1481, 1478, 1479, 1473, 1436, 0, 0, 2016, 1473, 1442,
	1472, 0, 1052, 1462, 1473, 1473, 0, -2, 1446, 1463,
	0, 0, 520, 522, 524, 528, 530, 0, 0, 1377,
	-2, 0, -2, 1051, 0, 0, 0, 0, 539, 541,
	0, 0, 462, 0, 0, 533, 0, 536, 0, 1507,
	1510, 0, 0, 1521, 1527, 1528, 0, -2, 0, 0,
	1617, 0, 0, 0, 0, 0, 0, 0, 200, 0,
	610, 0, 1243, 1252, 0, 641, 0, 643, 0, 2003,
	2007, 2004, 2008, 0, 632, 0, 0, 0, 0, 1193,
	0, 137, 2427, 0, 171, 0, 0, 1016, 2022, 0,
	0, 0, 0, 2154, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 103, 108, 0,
	0, 0, 0, 0, 0, 0, 0, 1075, 1076, 1078,
	1085, 1087, 0, 1081, 2010, 0, 0, 1082, 0, 1084,
	1086, 1088, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 105, 109, 0, 0, 0, 0, 1989,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1132, 1130, 1110, 1111, 1112, 1113, 1114, 1115,
	1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125,
	1126, 1127, 1128, 1129, 0, 0, -2, 0, 0, 0,
	0, 210, 0, 268, 1988, 1998, 0, 905, 906, 298,
	301, 304, 307, 206, 0, 338, 0, 0, 949, 924,
	0, 0, 392, 277, 0, 0, 406, 2062, 913, 1069,
	1072, 0, 1052, 2427, 1109, 0, 0, 0, 0, 0,
	0, 1142, 0, 2427, 2017, 2061, 2062, 1263, 1271, 0,
	1506, 0, 1293, 1280, 0, 0, 0, 1293, 1297, 1298,
	1300, 1301, 0, 0, 1497, 1503, 0, 364, 474, 169,
	444, 0, 169, 169, 453, 0, 0, 169, 464, 169,
	469, 169, 266, 471, 482, 532, 1366, 1366, 277, 275,
	2270, 273, 270, 272, 0, 0, 0, 950, 952, 953,
	954, 955, 0, 2062, 0, 2200, 2062, 0, 1283, 1285,
	0, 230, 0, 237, 235, 240, 0, 0, 404, 593,
	598, 735, 0, 277, 743, 744, 745, 786, 822, 830,
	755, 757, 758, 759, 0, 888, 884, 885, 886, 770,
	832, 773, 832, 776, 832, 795, 799, 804, 811, 0,
	0, 0, 824, 0, 0, 0, 0, 0, 0, 0,
	869, 870, 871, 873, 1494, 1317, 1318, 1320, 0, 1329,
	0, 0, 1403, -2, -2, 1402, 1406, 1407, -2, -2,
	-2, -2, 1325, 0, 1334, 1331, 0, 1388, 1170, 1171,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 1720,
	0, -2, 1699, 1702, 1706, 1708, 1710, 0, 0, 0,
	0, 0, 0, 1916, 0, 1918, 1721, 1971, 1974, 1888,
	0, 0, 1376, 1377, 1377, 0, 1788, 0, 1924, 0,
	1931, 1932, 0, 1781, 0, 1965, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1792, 0, 0, 0, 0,
	1824, 1827, 1830, 1833, 0, 0, 0, 0, 1813, 0,
	0, 0, 1817, 1587, 1573, 0, 1615, 1613, 1614, 1608,
	1615, 1612, 1565, 0, 1530, 1531, 1532, 1534, 1535, 1536,
	1538, 1539, 1540, 1542, 1543, 1544, 1546, 1547, 1548, 1550,
	1551, 1552, 1554, 1555, 1556, 1558, 1559, 1560, 1564, 0,
	1837, 0, 1839, 1841, 0, 0, 1843, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1727, 1728, 1729, 1844, 1953, 1954, 0, 0, 0, 0,
	0, 0, 1850, 0, 1959, 1851, 1853, 1366, 0, 1359,
	0, 1422, 1411, 1505, 0, 1980, 1476, 1424, 1426, 1981,
	2019, 1411, 1411, 0, 1928, 0, 0, 1467, 0, 0,
	0, 1469, 1440, 0, 0, 1434, 0, 1430, 1431, 1432,
	1433, 1441, 1052, 1471, 1443, 1447, 2039, 0, 1473, 0,
	1458, 0, 1460, 1492, 0, 1452, 1455, 0, 0, 2054,
	1506, 0, 309, 313, 314, 310, 311, 312, 548, 0,
	0, 0, 0, 1930, 0, 1512, 0, 1518, 0, 0,
	0, 0, 554, 0, 0, 0, 185, 1305, 196, 0,
	606, -2, 639, 640, 642, 0, 638, 134, 1194, 0,
	0, 1175, 1177, 0, 139, 2427, 148, 0, 990, 0,
	2020, 0, 0, 0, 0, 0, 1196, 0, 0, 2427,
	169, 2427, 169, 151, 154, 0, 159, 156, 157, 0,
	0, 981, 95, 1194, 0, 98, 102, 110, 0, 0,
	0, 116, 0, 0, 0, 1179, 1185, 0, 0, 1079,
	1080, 1083, 1089, 76, 0, 0, 1183, 1189, 82, 0,
	1174, 161, 100, 104, 111, 0, 1191, 97, 0, 183,
	0, 0, 0, 175, 0, 176, 177, 190, 0, 169,
	2427, 0, 916, 917, 1131, 1093, 1094, 0, 1099, 0,
	0, 0, 1476, 202, 0, 1476, 210, 0, 1994, 0,
	326, 0, 0, 0, 0, 948, 1034, 0, 921, 0,
	0, 0, 398, 394, 0, 403, 409, 408, 912, 0,
	0, 0, 0, -2, 0, 0, 1146, 1140, 1141, 0,
	0, 0, 2427, 1265, 1271, 0, 1270, 1364, 1377, 413,
	1272, 1293, 0, 0, 0, 1282, 1278, 1275, 1506, 0,
	0, 0, 0, 0, 1499, 1502, 359, 443, 169, 448,
	451, 1986, 169, 457, 460, 466, 485, 486, 252, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 959, 0,
	2062, 2062, 0, 2024, 0, 0, 0, 0, 238, 0,
	241, 0, 0, 0, 246, 247, 248, 249, 250, 231,
	1476, 0, 595, 0, 0, 742, 0, 772, 774, 777,
	813, 815, 832, 858, 859, 976, 0, 976, 0, 0,
	1327, 0, 1400, 1333, 1382, 1383, 0, 1172, 0, 1640,
	1683, 0, 0, -2, 0, 0, 1687, 0, 0, 0,
	-2, 0, 0, 0, 1917, 1919, 0, 1973, 1783, 0,
	0, 0, 1787, 1771, 1772, 0, 1891, 1934, 1963, 1967,
	0, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 0, 2013,
	2040, 2044, 1864, 1865, 1869, 2027, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 0, 0, 0, 1606, 1610,
	0, 0, 1935, 1946, 1948, 1725, 1726, 1730, 1731, 1732,
	1733, 1734, 1735, 1736, 1737, 1738, 1739, -2, -2, -2,
	1743, 1744, 1745, -2, -2, -2, 0, 0, 0, 1949,
	1951, 1952, 1956, 1957, 0, 1847, 1848, 1849, 1958, 0,
	1366, 1360, 1419, 0, 1504, 1423, 0, 1419, 1419, 1373,
	1465, 0, 0, 1488, 0, 1437, 0, 1438, 0, 1470,
	0, 1445, 1448, 1449, 1459, 0, 1451, 0, 1454, 0,
	1783, -2, 278, 279, 281, 0, 284, 551, 552, 550,
	534, 0, 0, 1514, 0, 0, 1590, 1594, 1618, 557,
	558, 556, 198, 0, 1474, 0, 0, 0, 0, 170,
	988, 1015, 0, 0, 0, 1160, 1167, 0, -2, 0,
	0, 1021, 141, 0, 0, 0, 149, 0, 0, 146,
	0, 153, 158, 0, 0, 0, 0, 0, 0, 113,
	114, 115, 0, 120, 0, 121, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 0, 0, 1169,
	0, 0, 192, 0, 0, 0, 1134, 1135, 1180, 1186,
	0, 0, 210, 208, 0, 211, 0, 214, 215, 0,
	210, 204, 0, 0, 1052, 339, 970, 1022, 0, 1024,
	0, 922, 0, 0, 1023, 390, 0, 397, 0, 0,
	1073, 0, 0, 1096, 1107, 1052, 0, 1145, 1147, 1155,
	0, 0, 0, 1267, 1271, 0, 1260, 1261, 1396, 1273,
	1291, -2, 0, 0, 1377, 1299, 1296, 1302, 1303, 0,
	445, 454, 274, 0, 269, 271, 0, 255, 0, 0,
	951, 956, 0, 0, 0, 0, 0, 1284, 1286, 0,
	0, 0, 0, 0, 0, 240, 261, 0, 736, 760,
	823, 860, 975, 0, 0, 862, 0, 0, 1399, 1386,
	1387, 1384, 1172, 1685, 1689, 0, 0, 0, 1691, -2,
	0, 1713, -2, -2, 1920, 1972, 1762, 1377, 1784, 1786,
	1773, 1966, 1635, 0, 1871, 1868, 0, 1855, 0, 1808,
	1809, 0, 0, 1812, 1814, 1815, 1816, 1574, 1567, 1566,
	1945, 0, 0, 0, 0, 1846, 1361, 0, 1860, 0,
	0, 1427, 1860, 1860, 1466, 0, 1468, 1435, 1428, 0,
	2040, 1461, 1453, 0, 0, 282, 0, 1508, 1513, 0,
	1519, 1589, 199, 135, 136, 138, 0, 989, 0, 992,
	0, 0, 0, 0, 999, 1000, 0, 0, 0, 0,
	0, 1009, 0, 1038, 1048, 0, 1162, 1172, 1166, 0,
	1164, 0, 0, 0, 143, 164, 0, 0, 1195, 0,
	0, 169, 169, 0, 0, 1176, 1178, 0, 0, 0,
	0, 123, 0, 0, 1181, 1187, 1184, 1190, 0, 0,
	0, 1192, 181, 182, 0, 169, 0, 174, 169, 169,
	1169, 0, 0, 0, 201, 0, 0, 0, 0, 203,
	267, 210, 0, 978, 0, 1034, 1026, 1027, 1028, 0,
	1033, 1035, 0, 0, 936, 923, 0, 932, 0, 0,
	949, 924, 0, 395, 914, 1070, 1104, 1052, 0, 1138,
	0, 0, 0, 0, 0, 0, 1269, 1271, 0, 1262,
	1263, 1293, 1395, 0, 0, 0, 1281, 1396, 0, 276,
	277, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 242, 0, 243, 244, 245, 232, 597, 599, 0,
	0, 605, 974, 0, 0, 0, 0, 1385, 1693, -2,
	-2, 1714, 0, 2041, 2043, 1377, 0, 1857, 1379, 0,
	0, -2, 0, 0, 0, 1362, 1345, 0, 1418, 1410,
	1412, 1414, 2323, 2131, 2426, 1346, 1347, 1487, 0, 1456,
	283, 0, 1515, 140, 0, 993, 994, 2023, 996, 0,
	998, 1001, 0, 1004, 2064, 0, 1008, 0, 1017, 1039,
	0, 970, 0, 1044, 1045, 1046, 1161, 1388, 1167, 1050,
	0, 142, 144, 163, 1169, 0, 145, 152, 0, 0,
	99, 0, 0, 2126, 126, 124, 122, 1173, 101, 0,
	183, 191, 1168, 178, 193, 169, 0, 1182, 1188, 212,
	0, 213, 216, 0, 0, 924, 977, 0, 1025, 0,
	1036, 1037, 926, 0, 925, 0, 0, 0, 0, 0,
	396, 399, 0, 402, 0, 0, 1148, 0, 1154, 0,
	0, 0, 1257, 0, 0, 1264, 1265, 411, 1287, 0,
	0, 1293, 1304, 254, 0, 0, 957, 960, 961, 962,
	963, 964, 965, 966, 967, 968, 958, 1050, 0, 0,
	1014, 0, 259, 239, 0, 601, 0, 603, 0, 861,
	863, 0, 0, 1785, 1875, 0, 0, 1810, 1811, -2,
	0, 1751, 1859, 1861, 0, 0, 0, 0, 0, 1429,
	1509, 991, 995, 0, 0, 0, 1056, 0, 0, 1010,
	0, 1042, 1043, 978, 0, 1165, 1163, 970, 0, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 173, 194,
	1169, 209, 226, 0, 1105, 926, 0, 0, 934, 0,
	937, 0, 933, 930, 931, 970, 0, 400, 401, 0,
	1108, 0, 1155, 0, 0, 1271, 1266, 1267, 1506, 1290,
	1294, 0, 0, 1048, 1050, 924, 0, 600, 0, 0,
	866, 867, 0, 0, 0, 0, 1870, 1380, 1752, 0,
	0, 1413, 1415, 1416, 1417, 0, 0, 1003, 1061, 0,
	0, 0, 1040, 1041, 1038, 0, 1019, 0, 1052, 147,
	0, 1050, 0, 982, 0, 0, 985, 0, 0, 127,
	2126, 125, 0, 169, 229, 0, 223, 221, 222, 919,
	0, 0, 1030, 1032, 0, 938, 978, 936, 1106, 1050,
	0, 1048, 0, 0, 1269, 0, 277, 277, 970, 1048,
	1506, 0, 277, 602, 604, 1867, 1887, 1876, -2, 2386,
	2132, 0, 1887, 1887, 1862, 1863, 0, 0, 1005, 1057,
	1058, 0, 1053, 1054, 1055, 2063, 1006, 1007, 1506, 1047,
	0, 1056, 165, 970, 979, 0, 0, 980, 0, 0,
	130, 0, 132, 195, 217, 0, 0, 0, 1029, 0,
	0, 0, 0, 924, 926, 1048, 0, 970, 0, 1268,
	1258, 0, 256, 257, 978, 970, 1013, 258, 1872, 0,
	0, 1878, 1879, 1880, 1881, 1882, 1873, 1874, 997, 0,
	1059, 0, 1060, 0, 0, 0, 1018, 0, 1061, 150,
	983, 0, 986, 0, 128, 0, 224, 225, 0, 1031,
	927, 0, 929, 926, 935, 970, 0, 978, 0, 1288,
	0, 924, 978, 0, 1884, 1885, 0, 0, 0, 1062,
	0, 1065, 1066, 0, 1063, 0, 1038, 0, 0, 0,
	973, 928, 920, 978, 1050, 924, 1048, 0, 1506, 924,
	1883, 1886, 1877, 1002, 1064, 1067, 1068, 1049, 1020, 0,
	0, 227, 0, 969, 971, 972, 924, 1048, 1506, 970,
	1506, 1011, 1506, 978, 0, 0, 1506, 970, 1151, 978,
	1289, 1012, 984, 0, 228, 1149, 978, 924, 0, 924,
	1506, 0, 1506, 1152, 978, 1150, 987,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 549, 3, 555, 550, 3,
	560, 561, 553, 551, 565, 552, 562, 554, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 568, 3,
	541, 543, 542, 546, 564, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 558, 3, 559, 556, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 566, 548, 567, 544,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 545, 57884, 547,
	57885, 557, 57886, 563, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1237
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1242
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1244
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1247
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1248
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1249
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1250
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1251
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1252
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1253
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1254
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1255
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1256
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1263
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1272
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1273
		{
			return helpWith(sqllex, "ALTER")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1276
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1277
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1278
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1279
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1280
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1281
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1282
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1283
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1284
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1340
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1366
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1379
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1396
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1400
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 76:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1404
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1421
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1425
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].str}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1446
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1478
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1482
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1486
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1492
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1496
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1502
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1511
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1522
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1526
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1532
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1540
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1550
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1554
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1564
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1575
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1582
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1594
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1601
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1609
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1614
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1618
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1623
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1629
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1637
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1648
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 120:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1658
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 121:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1668
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1677
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 123:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1688
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 124:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1694
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1702
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1706
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1710
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 128:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1714
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1720
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1725
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1736
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1740
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1746
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1750
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1757
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1762
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1767
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1772
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1777
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1782
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1787
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1792
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1797
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1802
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1807
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1816
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1828
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1838
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1845
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 150:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1849
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1857
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1864
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1873
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1882
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1887
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1894
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1902
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].str,
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1909
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1910
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1914
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1918
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1924
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1932
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1936
		{
			sqlVAL.union.val = nil
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1942
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = nil
		}
	case 167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1953
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1957
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1961
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1967
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1971
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 172:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1996
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2007
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2018
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2028
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2037
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2046
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2055
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2059
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2062
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2066
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2073
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2080
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2085
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2089
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 196:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2115
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2122
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2126
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2130
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2134
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 201:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2163
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2175
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2185
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2196
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2205
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2209
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2213
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2221
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 209:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2225
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2229
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2236
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2240
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2249
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2253
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2257
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2261
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2340
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2351
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2356
		{
			sqlVAL.union.val = nil
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2364
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2368
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2386
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2390
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2394
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2400
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 228:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2404
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2408
		{
			sqlVAL.union.val = nil
		}
	case 230:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2439
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2457
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2466
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2470
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2474
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2480
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2484
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2491
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2495
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2499
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2506
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2510
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2519
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2523
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2527
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2531
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2535
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2539
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2543
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2547
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2553
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 252:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2590
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2595
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2599
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2605
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2610
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2615
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2620
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2625
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2629
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 261:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2645
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2648
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2652
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2656
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2664
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2668
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2674
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2678
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2684
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2688
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2696
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2702
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2706
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2712
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2716
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2720
		{
			sqlVAL.union.val = nil
		}
	case 278:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2732
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2748
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2752
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2758
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2762
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2770
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2774
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2782
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2783
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2784
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2785
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2795
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2803
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2805
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2809
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2812
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2822
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2831
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2839
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2841
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2845
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2848
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2858
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2867
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2875
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2877
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2881
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2884
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2888
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2892
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2896
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2909
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2915
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2920
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2932
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2934
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2935
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2936
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2937
		{
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2938
		{
			return helpWith(sqllex, "CREATE")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2945
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2948
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2951
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2954
		{
			return unimplemented(sqllex, "create access method")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2955
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2956
		{
			return unimplemented(sqllex, "create cast")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2957
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2958
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2959
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2960
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2961
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2962
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2963
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2964
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2965
		{
			return unimplemented(sqllex, "create operator")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2966
		{
			return unimplemented(sqllex, "create publication")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2967
		{
			return unimplemented(sqllex, "create rule")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2968
		{
			return unimplemented(sqllex, "create server")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2969
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2970
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2971
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2974
		{
		}
	case 348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2975
		{
		}
	case 349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2978
		{
		}
	case 350:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2979
		{
		}
	case 351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2982
		{
		}
	case 352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2983
		{
		}
	case 353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2986
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2987
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2988
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2989
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2990
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2991
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2992
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 360:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2993
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 361:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2994
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2995
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2996
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2997
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2998
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2999
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3000
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3001
		{
			return unimplemented(sqllex, "drop server")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3002
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3003
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3004
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3008
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3009
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3010
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3011
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3012
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3014
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3015
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3016
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3017
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3027
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3035
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3039
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3043
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3049
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3053
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3062
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3069
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3075
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3081
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3085
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3096
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3108
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3116
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3124
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3138
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3144
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3148
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3155
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3159
		{

			sqlVAL.union.val = nil
		}
	case 411:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3173
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3183
		{
			return helpWith(sqllex, "DELETE")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3186
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3187
		{
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3195
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3198
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3199
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3200
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3201
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3202
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3211
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3212
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3213
		{
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3214
		{
			return helpWith(sqllex, "DROP")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3217
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3218
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3219
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3220
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3221
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3222
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3223
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3231
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3235
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3239
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3248
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3256
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3264
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3268
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3271
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3279
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3283
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3286
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3294
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3303
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3311
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3319
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3327
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3334
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3341
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3349
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3356
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3360
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3370
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3379
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3387
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3394
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3398
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3402
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3412
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3416
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3419
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3423
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3428
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3441
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3446
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3448
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3453
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3457
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3479
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3486
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3488
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3496
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3504
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3512
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3520
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3531
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3535
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3538
		{
			return helpWith(sqllex, "DELETE")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3540
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3541
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3542
		{
			return helpWith(sqllex, "INSERT")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3545
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3547
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3550
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3555
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3556
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3557
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3562
		{
			return helpWith(sqllex, "DELETE")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3563
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3564
		{
			return helpWith(sqllex, "INSERT")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3566
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3570
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3571
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3575
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3579
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 533:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3589
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3597
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3605
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3609
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 537:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3613
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3623
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3630
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3638
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3642
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 542:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3646
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3671
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3693
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3697
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3701
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3705
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3709
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3718
		{
			return helpWith(sqllex, "GRANT")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3740
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3744
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3748
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3752
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3756
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3765
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3770
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3774
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3784
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3788
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3802
		{
			return helpWith(sqllex, "RESET")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3803
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3811
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3815
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3818
		{
			return helpWith(sqllex, "RESET")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3826
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3829
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3840
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3843
		{
			return helpWith(sqllex, "USE")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3847
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3848
		{
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3849
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3850
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3854
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3855
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3856
		{
			return helpWith(sqllex, "USE")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3872
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3887
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3890
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3908
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3916
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 598:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3924
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3930
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3934
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3940
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3944
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3948
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3952
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3956
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3967
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3970
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3980
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3996
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4000
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 613:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4005
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4024
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4027
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4029
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4032
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4036
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4055
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4062
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4067
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4072
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4077
		{
			return unimplemented(sqllex, "set from current")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4078
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4086
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4091
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4098
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4102
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4108
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4112
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4119
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4140
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4144
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4150
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4154
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4158
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4162
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4166
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4172
		{
			sqlVAL.union.val = tree.Low
		}
	case 645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4176
		{
			sqlVAL.union.val = tree.Normal
		}
	case 646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4180
		{
			sqlVAL.union.val = tree.High
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4191
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4195
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4199
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4204
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4208
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4222
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4223
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4224
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4225
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4226
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4227
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4228
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4229
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4231
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4232
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4233
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4234
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4235
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4236
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4237
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4238
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4240
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4241
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4242
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4243
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4244
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4245
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4246
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4247
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4248
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4249
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4250
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4251
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4252
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4254
		{
			return helpWith(sqllex, "SHOW")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4255
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4260
		{
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4261
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4264
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4268
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4273
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4278
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4283
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4288
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4298
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4299
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4300
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4311
		{
			sqlVAL.str = "client_encoding"
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4314
		{
			sqlVAL.str = "timezone"
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4315
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4329
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4333
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4337
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4348
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4356
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4364
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4370
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4378
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4396
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4405
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4413
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4423
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4427
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4430
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4432
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4435
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4437
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4441
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4444
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4452
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4455
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4463
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4471
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4475
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4478
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4486
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4489
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4496
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4499
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4506
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4509
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4522
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4530
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4538
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4541
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4543
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4547
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4551
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4554
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4556
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4560
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4563
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4571
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4574
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4576
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4579
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4590
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4592
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4595
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4599
		{
			sqlVAL.union.val = true
		}
	case 788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4601
		{
			sqlVAL.union.val = true
		}
	case 789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4603
		{
			sqlVAL.union.val = false
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4614
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4618
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4621
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4622
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4624
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4628
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4632
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4635
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4637
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4645
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4653
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4663
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4669
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4671
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4677
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4679
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4685
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4689
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4693
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 809:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4699
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4703
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4714
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4717
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4719
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4722
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4724
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4728
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4731
		{
			sqlVAL.union.val = true
		}
	case 818:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4732
		{
			sqlVAL.union.val = false
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4740
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4743
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4745
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4748
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4756
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4766
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4776
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4779
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4789
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4791
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4794
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4797
		{
			sqlVAL.union.val = true
		}
	case 832:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4798
		{
			sqlVAL.union.val = false
		}
	case 833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4805
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4809
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4812
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4819
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4823
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4826
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4833
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4837
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4844
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4854
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4857
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4865
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4870
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4875
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4879
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4887
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4891
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4895
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4908
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4911
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4919
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4922
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4926
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4930
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4934
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4942
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4950
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4957
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4964
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4968
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4979
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4987
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4993
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5002
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5007
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5011
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5014
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5018
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5025
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 875:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5030
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5150
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5154
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5158
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5197
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5201
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5206
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5210
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5218
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5227
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5231
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.nameList().ToStrings()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5235
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5242
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 889:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5246
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5259
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5260
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5261
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5271
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5272
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5273
		{
			return helpWith(sqllex, "RESUME")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5283
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5291
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5293
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5297
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5300
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5305
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5309
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5324
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5332
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5334
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5340
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5348
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5354
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5361
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].str,
				AuthRole: sqlDollar[5].str,
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5368
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
				AuthRole:    sqlDollar[8].str,
			}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5375
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5386
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5395
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5403
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5442
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5457
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5475
		{

			sqlVAL.union.val = nil
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5481
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5487
		{
			sqlVAL.union.val = nil
		}
	case 925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5491
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 926:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5498
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5502
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5507
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5512
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5519
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5523
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5529
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5533
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 934:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5539
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5553
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5568
		{
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5569
		{
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5570
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5588
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5589
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 941:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5590
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5594
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5595
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5596
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5597
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5598
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5603
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5609
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5619
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5629
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5638
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5642
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 959:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5648
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5653
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5654
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5655
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5656
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5657
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5658
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5659
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5660
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5661
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5666
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5675
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5682
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5687
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 973:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5692
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5698
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 976:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5705
		{
			sqlVAL.str = ""
		}
	case 978:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5712
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 979:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5718
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5725
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5732
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5738
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5742
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 984:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5748
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5758
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5762
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 987:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5768
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5782
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5793
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 990:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5797
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5803
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5807
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5811
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5815
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5819
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5827
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5845
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5849
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5853
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5857
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5861
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5868
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5872
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5876
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5886
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5890
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5894
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5901
		{
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5902
		{
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5907
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5920
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5935
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5947
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5959
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5964
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5970
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5976
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6000
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6011
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6018
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6022
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6028
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6038
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6049
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6053
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6060
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6077
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6081
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6087
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6093
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6097
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6103
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6107
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6113
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6118
		{
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6119
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6120
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6121
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6122
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6123
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6141
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6145
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6151
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6157
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6167
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6187
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6191
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6195
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6199
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6208
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6212
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6216
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6220
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6224
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6230
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6236
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6244
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6248
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6252
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6256
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6279
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6288
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6296
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6300
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6303
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6304
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6307
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6308
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6310
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6311
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6312
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6322
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6325
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6327
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6329
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6331
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6332
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6335
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6337
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6339
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6347
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6350
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6354
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6358
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6368
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6372
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6375
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6383
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6387
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6390
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6396
		{
			sqlVAL.union.val = true
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6400
		{

			sqlVAL.union.val = true
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6405
		{
			sqlVAL.union.val = false
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6415
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6429
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6441
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6453
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6463
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6473
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6477
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6481
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6485
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6489
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6493
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6497
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6501
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6505
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6513
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6521
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6525
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6529
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6533
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6537
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6541
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6545
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6554
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6558
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6564
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6568
		{
			sqlVAL.union.val = nil
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6574
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6578
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6583
		{
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6584
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6593
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6600
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6602
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6604
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6606
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6608
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6610
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6614
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6618
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6624
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6628
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6648
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6666
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6685
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6702
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6719
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6723
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6738
		{
			sqlVAL.union.val = false
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6744
		{
			sqlVAL.union.val = true
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = false
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6754
		{
			sqlVAL.union.val = true
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6758
		{
			sqlVAL.union.val = false
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6764
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6768
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6777
		{

			return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", sqlDollar[1].union))
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6782
		{

			return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", sqlDollar[2].union))
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6787
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6795
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6820
		{
			sqlVAL.str = ""
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6823
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6824
		{
			sqlVAL.str = ""
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6828
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6836
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6854
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6860
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6868
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6874
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6882
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6888
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         sqlDollar[7].str,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6898
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6904
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         sqlDollar[9].str,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6916
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6922
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6930
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6936
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6948
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6954
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6968
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6974
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6986
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6991
		{
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6992
		{
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6995
		{
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6996
		{
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7004
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7007
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7017
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7025
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7027
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7031
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7034
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7047
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7055
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7057
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7063
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7076
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7084
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7086
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7092
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7100
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7103
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7107
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7108
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7109
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7125
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7128
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7130
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7133
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7143
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7146
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7148
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7151
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7155
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7160
		{
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7161
		{
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7162
		{
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7172
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7176
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7179
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7182
		{
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7183
		{
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7187
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7191
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7201
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7207
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7211
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7224
		{
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7226
		{
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7230
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7235
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7239
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7247
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7259
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7265
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7275
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7289
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7300
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7311
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7315
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.str = ""
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7325
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.str = ""
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7335
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.str = ""
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7349
		{
			sqlVAL.str = ""
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7355
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7363
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7368
		{
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7369
		{
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7384
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7398
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7409
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7416
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7420
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7429
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7434
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7440
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7444
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7454
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7458
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7478
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7482
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7489
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7497
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7505
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7509
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7514
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7518
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7535
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7547
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7550
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7553
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7559
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7563
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7579
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7583
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7593
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.strs(),
				NewRole:  sqlDollar[6].str,
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7599
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7640
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7646
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7650
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7665
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7669
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7673
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7677
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7681
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7685
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7689
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7693
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7698
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7699
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7702
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7703
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7707
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7711
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7717
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7726
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7727
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7728
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7729
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7733
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7736
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7737
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7738
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7743
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7778
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7779
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7780
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7802
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7815
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7829
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7841
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7845
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7854
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7863
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7878
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7885
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7897
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7901
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7906
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7916
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7922
		{
			sqlVAL.union.val = true
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7926
		{
			sqlVAL.union.val = false
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7932
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7942
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7954
		{
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7955
		{
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7959
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7963
		{
			sqlVAL.union.val = nil
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7968
		{
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7969
		{
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.union.val = true
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7977
		{
			sqlVAL.union.val = false
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7981
		{
			sqlVAL.union.val = false
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7987
		{
			sqlVAL.union.val = true
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7993
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7998
		{
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7999
		{
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8003
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8007
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8013
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8019
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8023
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8040
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8061
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8066
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8082
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8086
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8095
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8104
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8115
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8116
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8120
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8124
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8128
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8142
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8146
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8154
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8161
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8183
		{
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8184
		{
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8187
		{
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8188
		{
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8205
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8209
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8214
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8215
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8221
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8222
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8223
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8224
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8228
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8232
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8251
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8254
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8256
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8268
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8271
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8273
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8283
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8289
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8293
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8298
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8303
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8309
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8314
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8321
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8326
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8337
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8341
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8345
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8353
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8384
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8394
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8404
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8412
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8421
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8425
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8429
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8440
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8470
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8491
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8493
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8497
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8503
		{
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8505
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8508
		{
			sqlVAL.union.val = nil
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8509
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8510
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8514
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8524
		{
			sqlVAL.union.val = true
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8528
		{
			sqlVAL.union.val = false
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8548
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8552
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8556
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8560
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8564
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8568
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8578
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8585
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8591
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8598
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8604
		{
			sqlVAL.str = tree.AstFull
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8608
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8612
		{
			sqlVAL.str = tree.AstRight
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8616
		{
			sqlVAL.str = tree.AstInner
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8622
		{
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8623
		{
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8644
		{
			sqlVAL.str = tree.AstHash
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8648
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8652
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8656
		{
			sqlVAL.str = ""
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8669
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8673
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8678
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8681
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8685
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8690
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8704
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8708
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8714
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8720
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8730
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8740
		{
			sqlVAL.union.val = true
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8744
		{
			sqlVAL.union.val = false
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8750
		{
			sqlVAL.union.val = true
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8754
		{
			sqlVAL.union.val = false
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8760
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8767
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8779
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8792
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8800
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8801
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8811
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8818
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8819
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8821
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8829
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8830
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8842
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8849
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8858
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8898
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8903
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8910
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8911
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8914
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8915
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8916
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8917
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8918
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8919
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8920
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8921
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8923
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8924
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8925
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8926
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8927
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8928
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8929
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8930
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8931
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8932
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8933
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8934
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8935
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8936
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8937
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8938
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8939
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8940
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8941
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8942
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8943
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8944
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8945
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8948
		{
			sqlVAL.union.val = types.Geography
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8952
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8956
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8960
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8968
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8994
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9002
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = nil
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9017
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9021
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9025
		{
			sqlVAL.union.val = types.Int2
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9029
		{
			sqlVAL.union.val = types.Int
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9033
		{
			sqlVAL.union.val = types.Float4
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9037
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9041
		{
			sqlVAL.union.val = types.Float
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9045
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9053
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9061
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9069
		{
			sqlVAL.union.val = types.Bool
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9075
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9088
		{
			sqlVAL.union.val = types.Float
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9094
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9100
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9112
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9116
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9122
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9134
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9152
		{
			sqlVAL.union.val = types.String
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9161
		{
			sqlVAL.union.val = true
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9162
		{
			sqlVAL.union.val = false
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9167
		{
			sqlVAL.union.val = types.Date
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9171
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9179
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9191
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9193
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9202
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9210
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9227
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqlVAL.union.val = true
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9238
		{
			sqlVAL.union.val = false
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9239
		{
			sqlVAL.union.val = false
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9243
		{
			sqlVAL.union.val = types.Interval
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9251
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9262
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9270
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9286
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9294
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9302
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9308
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9317
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9326
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9335
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9341
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9350
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9356
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9366
		{
			sqlVAL.union.val = nil
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9372
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9380
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9417
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9421
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9425
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9429
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9440
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9445
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9449
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9457
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9461
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9465
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9477
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9481
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9485
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9489
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9493
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9501
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9505
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9509
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9513
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9517
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9521
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9525
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9529
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9533
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9537
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9541
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9545
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9549
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9553
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9557
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9561
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9565
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9573
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9577
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9581
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9585
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9589
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9593
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9597
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9601
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9605
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9609
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9613
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9617
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9621
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9629
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9633
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9637
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9641
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9645
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9649
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9653
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9657
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9661
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9665
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9669
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9673
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9677
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9681
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9685
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9689
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9692
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9694
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9698
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9702
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9706
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9734
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9738
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9742
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9754
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9758
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9780
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9792
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9796
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9800
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9804
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9824
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9828
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9832
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9836
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9840
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9844
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9848
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9852
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9856
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9860
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9864
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9868
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9872
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9876
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9880
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9884
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9888
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9892
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9922
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9958
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9974
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9979
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9981
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9985
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9989
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9993
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9997
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10001
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10005
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10014
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10021
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10025
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10029
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10035
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10052
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10056
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10059
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10063
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10067
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10070
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10071
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10079
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10083
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10086
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10095
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10148
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10161
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10173
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10182
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10183
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10192
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10196
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10202
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10206
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10214
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10240
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10244
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10248
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10252
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10256
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10260
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10264
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10268
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10272
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10276
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10283
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10286
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10288
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10291
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10297
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10300
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10302
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10306
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10309
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10318
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10320
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10324
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10327
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10329
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10332
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10334
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10337
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10342
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10344
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10347
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10356
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10357
		{
			return unimplemented(sqllex, "treat")
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10378
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10383
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10410
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10414
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10420
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10424
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10430
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10442
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10446
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10473
		{
			sqlVAL.str = ""
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10489
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10497
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10505
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10513
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10519
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10532
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10560
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10564
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10568
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10572
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10579
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10588
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10596
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10600
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10605
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10629
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10641
		{
			sqlVAL.union.val = tree.Any
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10645
		{
			sqlVAL.union.val = tree.Some
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.union.val = tree.All
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10655
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10656
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10657
		{
			sqlVAL.union.val = tree.Div
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10659
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10660
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10661
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10663
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10664
		{
			sqlVAL.union.val = tree.LT
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = tree.GT
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10667
		{
			sqlVAL.union.val = tree.LE
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10668
		{
			sqlVAL.union.val = tree.GE
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10669
		{
			sqlVAL.union.val = tree.NE
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10673
		{
			sqlVAL.union.val = tree.Like
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10674
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10675
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10676
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10699
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10703
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10709
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10713
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10717
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10728
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10738
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10742
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10749
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10755
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10759
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10765
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10769
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10775
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10779
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10785
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10789
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10822
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10826
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10830
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10836
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10843
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10847
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10864
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10868
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10872
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10876
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10880
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10886
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10892
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10898
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10902
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10912
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10924
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10931
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10935
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10941
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10947
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10958
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10964
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10968
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10981
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10985
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10990
		{
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10991
		{
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10995
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10999
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11005
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11014
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11018
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11022
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11030
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11034
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11040
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11044
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11063
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11071
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11094
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11103
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11107
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11111
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11115
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11121
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11125
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11140
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11144
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11156
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11160
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11169
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11180
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11189
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11197
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11209
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11312
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11319
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11323
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11327
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11341
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11345
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11349
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11371
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11389
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11402
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11409
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11434
		{
			sqlVAL.str = ""
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11440
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11444
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
