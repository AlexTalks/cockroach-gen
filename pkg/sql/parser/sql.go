// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:170

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colTableDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) colDef() tree.ColumnDef {
	return u.val.(tree.ColumnDef)
}
func (u *sqlSymUnion) colDefList() tree.ColumnDefList {
	return u.val.(tree.ColumnDefList)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) backupTargetList() tree.BackupTargetList {
	return u.val.(tree.BackupTargetList)
}
func (u *sqlSymUnion) backupTargetListPtr() *tree.BackupTargetList {
	return u.val.(*tree.BackupTargetList)
}
func (u *sqlSymUnion) grantTargetList() tree.GrantTargetList {
	return u.val.(tree.GrantTargetList)
}
func (u *sqlSymUnion) grantTargetListPtr() *tree.GrantTargetList {
	return u.val.(*tree.GrantTargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterBackupScheduleCmd() tree.AlterBackupScheduleCmd {
	return u.val.(tree.AlterBackupScheduleCmd)
}
func (u *sqlSymUnion) alterBackupScheduleCmds() tree.AlterBackupScheduleCmds {
	return u.val.(tree.AlterBackupScheduleCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) scheduleLabelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}
func (u *sqlSymUnion) labelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) targetObjectType() privilege.TargetObjectType {
	return u.val.(privilege.TargetObjectType)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}
func (u *sqlSymUnion) functionOptions() tree.FunctionOptions {
	return u.val.(tree.FunctionOptions)
}
func (u *sqlSymUnion) functionOption() tree.FunctionOption {
	return u.val.(tree.FunctionOption)
}
func (u *sqlSymUnion) functionArgs() tree.FuncArgs {
	return u.val.(tree.FuncArgs)
}
func (u *sqlSymUnion) functionArg() tree.FuncArg {
	return u.val.(tree.FuncArg)
}
func (u *sqlSymUnion) functionArgClass() tree.FuncArgClass {
	return u.val.(tree.FuncArgClass)
}
func (u *sqlSymUnion) stmts() tree.Statements {
	return u.val.(tree.Statements)
}
func (u *sqlSymUnion) routineBody() *tree.RoutineBody {
	return u.val.(*tree.RoutineBody)
}
func (u *sqlSymUnion) functionObj() tree.FuncObj {
	return u.val.(tree.FuncObj)
}
func (u *sqlSymUnion) functionObjs() tree.FuncObjs {
	return u.val.(tree.FuncObjs)
}

//line sql-gen.y:982
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATOMIC = lexbase.ATOMIC
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CALLED = lexbase.CALLED
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONNECTIONS = lexbase.CONNECTIONS
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COST = lexbase.COST
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEFINER = lexbase.DEFINER
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DEPENDS = lexbase.DEPENDS
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTERNAL = lexbase.EXTERNAL
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const EXTREMES = lexbase.EXTREMES
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMMUTABLE = lexbase.IMMUTABLE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INDEX_BEFORE_PAREN = lexbase.INDEX_BEFORE_PAREN
const INDEX_BEFORE_NAME_THEN_PAREN = lexbase.INDEX_BEFORE_NAME_THEN_PAREN
const INDEX_AFTER_ORDER_BY_BEFORE_AT = lexbase.INDEX_AFTER_ORDER_BY_BEFORE_AT
const INNER = lexbase.INNER
const INOUT = lexbase.INOUT
const INPUT = lexbase.INPUT
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const INVOKER = lexbase.INVOKER
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LABEL = lexbase.LABEL
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEAKPROOF = lexbase.LEAKPROOF
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTHING_AFTER_RETURNING = lexbase.NOTHING_AFTER_RETURNING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARALLEL = lexbase.PARALLEL
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTART = lexbase.RESTART
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETURN = lexbase.RETURN
const RETURNS = lexbase.RETURNS
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMA_ONLY = lexbase.SCHEMA_ONLY
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SECONDARY = lexbase.SECONDARY
const SECURITY = lexbase.SECURITY
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETOF = lexbase.SETOF
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const STABLE = lexbase.STABLE
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SUPPORT = lexbase.SUPPORT
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TRANSFORM = lexbase.TRANSFORM
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLISTEN = lexbase.UNLISTEN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VERIFY_BACKUP_TABLE_DATA = lexbase.VERIFY_BACKUP_TABLE_DATA
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWDEBUG = lexbase.VIEWDEBUG
const VIEWCLUSTERMETADATA = lexbase.VIEWCLUSTERMETADATA
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOLATILE = lexbase.VOLATILE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATOMIC",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CALLED",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONNECTIONS",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COST",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEFINER",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DEPENDS",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"EXTRACT_DURATION",
	"EXTREMES",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INDEX_BEFORE_PAREN",
	"INDEX_BEFORE_NAME_THEN_PAREN",
	"INDEX_AFTER_ORDER_BY_BEFORE_AT",
	"INNER",
	"INOUT",
	"INPUT",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"INVOKER",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LABEL",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEAKPROOF",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTHING_AFTER_RETURNING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARALLEL",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETURN",
	"RETURNS",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMA_ONLY",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SECONDARY",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETOF",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"STABLE",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SUPPORT",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLISTEN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VERIFY_BACKUP_TABLE_DATA",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWDEBUG",
	"VIEWCLUSTERMETADATA",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOLATILE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"';'",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:15980

//line yacctab:1
var sqlExca = [...]int16{
	-1, 0,
	1, 5,
	-2, 1940,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 65,
	288, 588,
	-2, 0,
	-1, 77,
	8, 1072,
	29, 1072,
	656, 1072,
	657, 1072,
	-2, 0,
	-1, 78,
	8, 1072,
	29, 1072,
	656, 1072,
	657, 1072,
	-2, 0,
	-1, 81,
	170, 1210,
	286, 1210,
	432, 1171,
	507, 1171,
	554, 1171,
	574, 1210,
	576, 1171,
	-2, 0,
	-1, 82,
	1, 1787,
	140, 1787,
	275, 1787,
	363, 1787,
	427, 1787,
	437, 1787,
	637, 1787,
	669, 1787,
	-2, 0,
	-1, 83,
	1, 1787,
	669, 1787,
	-2, 0,
	-1, 89,
	268, 297,
	571, 297,
	-2, 0,
	-1, 104,
	206, 488,
	251, 1661,
	270, 1661,
	288, 488,
	429, 488,
	441, 1402,
	485, 488,
	502, 1402,
	555, 1402,
	584, 488,
	613, 1402,
	-2, 0,
	-1, 112,
	142, 1940,
	263, 1940,
	596, 1940,
	597, 1940,
	-2, 0,
	-1, 130,
	162, 1911,
	184, 1911,
	197, 1911,
	266, 1911,
	302, 1911,
	377, 1911,
	388, 1911,
	590, 1911,
	-2, 1882,
	-1, 179,
	4, 1942,
	21, 1942,
	22, 1942,
	23, 1942,
	24, 1942,
	25, 1942,
	26, 1942,
	27, 1942,
	28, 1942,
	30, 1942,
	31, 1942,
	37, 1942,
	41, 1942,
	43, 1942,
	44, 1942,
	45, 1942,
	47, 1942,
	48, 1942,
	49, 1942,
	50, 1942,
	51, 1942,
	52, 1942,
	53, 1942,
	54, 1942,
	55, 1942,
	57, 1942,
	58, 1942,
	59, 1942,
	60, 1942,
	62, 1942,
	63, 1942,
	64, 1942,
	65, 1942,
	66, 1942,
	67, 1942,
	68, 1942,
	69, 1942,
	73, 1942,
	74, 1942,
	75, 1942,
	76, 1942,
	78, 1942,
	79, 1942,
	80, 1942,
	84, 1942,
	85, 1942,
	86, 1942,
	87, 1942,
	88, 1942,
	89, 1942,
	90, 1942,
	91, 1942,
	94, 1942,
	95, 1942,
	96, 1942,
	97, 1942,
	98, 1942,
	99, 1942,
	101, 1942,
	103, 1942,
	104, 1942,
	105, 1942,
	106, 1942,
	107, 1942,
	108, 1942,
	109, 1942,
	111, 1942,
	112, 1942,
	113, 1942,
	115, 1942,
	116, 1942,
	117, 1942,
	125, 1942,
	126, 1942,
	127, 1942,
	128, 1942,
	129, 1942,
	131, 1942,
	132, 1942,
	133, 1942,
	134, 1942,
	136, 1942,
	137, 1942,
	138, 1942,
	139, 1942,
	141, 1942,
	142, 1942,
	143, 1942,
	144, 1942,
	146, 1942,
	147, 1942,
	148, 1942,
	151, 1942,
	152, 1942,
	153, 1942,
	155, 1942,
	156, 1942,
	157, 1942,
	159, 1942,
	160, 1942,
	161, 1942,
	163, 1942,
	164, 1942,
	165, 1942,
	166, 1942,
	167, 1942,
	168, 1942,
	169, 1942,
	170, 1942,
	171, 1942,
	172, 1942,
	173, 1942,
	174, 1942,
	175, 1942,
	176, 1942,
	177, 1942,
	178, 1942,
	179, 1942,
	180, 1942,
	181, 1942,
	183, 1942,
	189, 1942,
	190, 1942,
	191, 1942,
	192, 1942,
	196, 1942,
	198, 1942,
	199, 1942,
	200, 1942,
	202, 1942,
	203, 1942,
	206, 1942,
	207, 1942,
	208, 1942,
	209, 1942,
	210, 1942,
	211, 1942,
	212, 1942,
	213, 1942,
	214, 1942,
	215, 1942,
	216, 1942,
	217, 1942,
	218, 1942,
	219, 1942,
	221, 1942,
	222, 1942,
	224, 1942,
	225, 1942,
	227, 1942,
	228, 1942,
	229, 1942,
	230, 1942,
	231, 1942,
	232, 1942,
	233, 1942,
	234, 1942,
	235, 1942,
	236, 1942,
	237, 1942,
	239, 1942,
	240, 1942,
	241, 1942,
	243, 1942,
	244, 1942,
	245, 1942,
	246, 1942,
	247, 1942,
	251, 1942,
	252, 1942,
	253, 1942,
	254, 1942,
	256, 1942,
	257, 1942,
	258, 1942,
	260, 1942,
	261, 1942,
	262, 1942,
	263, 1942,
	264, 1942,
	265, 1942,
	267, 1942,
	269, 1942,
	270, 1942,
	271, 1942,
	273, 1942,
	275, 1942,
	276, 1942,
	277, 1942,
	279, 1942,
	283, 1942,
	284, 1942,
	285, 1942,
	286, 1942,
	287, 1942,
	288, 1942,
	289, 1942,
	291, 1942,
	292, 1942,
	293, 1942,
	295, 1942,
	296, 1942,
	297, 1942,
	299, 1942,
	300, 1942,
	303, 1942,
	304, 1942,
	305, 1942,
	306, 1942,
	307, 1942,
	308, 1942,
	309, 1942,
	312, 1942,
	313, 1942,
	314, 1942,
	315, 1942,
	317, 1942,
	318, 1942,
	319, 1942,
	320, 1942,
	321, 1942,
	322, 1942,
	323, 1942,
	324, 1942,
	325, 1942,
	326, 1942,
	327, 1942,
	328, 1942,
	329, 1942,
	330, 1942,
	331, 1942,
	332, 1942,
	333, 1942,
	334, 1942,
	335, 1942,
	336, 1942,
	337, 1942,
	338, 1942,
	339, 1942,
	341, 1942,
	343, 1942,
	344, 1942,
	345, 1942,
	346, 1942,
	347, 1942,
	348, 1942,
	349, 1942,
	350, 1942,
	351, 1942,
	352, 1942,
	353, 1942,
	354, 1942,
	355, 1942,
	356, 1942,
	357, 1942,
	358, 1942,
	359, 1942,
	361, 1942,
	362, 1942,
	364, 1942,
	365, 1942,
	367, 1942,
	368, 1942,
	369, 1942,
	370, 1942,
	372, 1942,
	373, 1942,
	374, 1942,
	375, 1942,
	376, 1942,
	379, 1942,
	381, 1942,
	383, 1942,
	384, 1942,
	385, 1942,
	386, 1942,
	389, 1942,
	390, 1942,
	391, 1942,
	393, 1942,
	395, 1942,
	396, 1942,
	397, 1942,
	398, 1942,
	399, 1942,
	400, 1942,
	401, 1942,
	402, 1942,
	403, 1942,
	404, 1942,
	405, 1942,
	406, 1942,
	407, 1942,
	408, 1942,
	410, 1942,
	411, 1942,
	412, 1942,
	413, 1942,
	414, 1942,
	415, 1942,
	416, 1942,
	417, 1942,
	418, 1942,
	419, 1942,
	420, 1942,
	421, 1942,
	422, 1942,
	423, 1942,
	424, 1942,
	426, 1942,
	427, 1942,
	428, 1942,
	430, 1942,
	431, 1942,
	432, 1942,
	433, 1942,
	434, 1942,
	435, 1942,
	436, 1942,
	437, 1942,
	438, 1942,
	439, 1942,
	440, 1942,
	441, 1942,
	442, 1942,
	443, 1942,
	445, 1942,
	447, 1942,
	448, 1942,
	449, 1942,
	455, 1942,
	456, 1942,
	457, 1942,
	459, 1942,
	460, 1942,
	461, 1942,
	462, 1942,
	463, 1942,
	464, 1942,
	465, 1942,
	466, 1942,
	467, 1942,
	468, 1942,
	469, 1942,
	471, 1942,
	472, 1942,
	473, 1942,
	474, 1942,
	475, 1942,
	477, 1942,
	478, 1942,
	479, 1942,
	480, 1942,
	481, 1942,
	482, 1942,
	483, 1942,
	485, 1942,
	486, 1942,
	487, 1942,
	488, 1942,
	489, 1942,
	490, 1942,
	491, 1942,
	492, 1942,
	493, 1942,
	494, 1942,
	495, 1942,
	496, 1942,
	497, 1942,
	498, 1942,
	499, 1942,
	500, 1942,
	502, 1942,
	503, 1942,
	504, 1942,
	505, 1942,
	506, 1942,
	507, 1942,
	509, 1942,
	510, 1942,
	511, 1942,
	512, 1942,
	513, 1942,
	514, 1942,
	515, 1942,
	517, 1942,
	518, 1942,
	519, 1942,
	520, 1942,
	521, 1942,
	522, 1942,
	523, 1942,
	524, 1942,
	526, 1942,
	528, 1942,
	529, 1942,
	530, 1942,
	531, 1942,
	532, 1942,
	533, 1942,
	534, 1942,
	535, 1942,
	536, 1942,
	537, 1942,
	538, 1942,
	539, 1942,
	540, 1942,
	541, 1942,
	542, 1942,
	543, 1942,
	544, 1942,
	545, 1942,
	546, 1942,
	547, 1942,
	548, 1942,
	550, 1942,
	551, 1942,
	553, 1942,
	554, 1942,
	556, 1942,
	557, 1942,
	558, 1942,
	559, 1942,
	560, 1942,
	561, 1942,
	563, 1942,
	564, 1942,
	566, 1942,
	567, 1942,
	568, 1942,
	569, 1942,
	570, 1942,
	572, 1942,
	574, 1942,
	575, 1942,
	576, 1942,
	577, 1942,
	578, 1942,
	579, 1942,
	580, 1942,
	581, 1942,
	583, 1942,
	584, 1942,
	585, 1942,
	586, 1942,
	587, 1942,
	588, 1942,
	589, 1942,
	592, 1942,
	593, 1942,
	594, 1942,
	595, 1942,
	596, 1942,
	597, 1942,
	598, 1942,
	599, 1942,
	600, 1942,
	602, 1942,
	605, 1942,
	606, 1942,
	607, 1942,
	608, 1942,
	609, 1942,
	610, 1942,
	612, 1942,
	613, 1942,
	614, 1942,
	615, 1942,
	616, 1942,
	617, 1942,
	618, 1942,
	619, 1942,
	620, 1942,
	621, 1942,
	622, 1942,
	623, 1942,
	628, 1942,
	629, 1942,
	630, 1942,
	631, 1942,
	632, 1942,
	633, 1942,
	-2, 0,
	-1, 181,
	1, 1787,
	669, 1787,
	672, 1787,
	-2, 0,
	-1, 182,
	1, 1787,
	571, 1787,
	669, 1787,
	672, 1787,
	-2, 0,
	-1, 218,
	162, 1910,
	184, 1910,
	197, 1910,
	266, 1910,
	302, 1910,
	377, 1910,
	388, 1910,
	590, 1910,
	-2, 1885,
	-1, 279,
	4, 1949,
	5, 1949,
	6, 1949,
	7, 1949,
	8, 1949,
	9, 1949,
	10, 1949,
	21, 1949,
	22, 1949,
	23, 1949,
	24, 1949,
	25, 1949,
	26, 1949,
	27, 1949,
	28, 1949,
	30, 1949,
	31, 1949,
	37, 1949,
	38, 1949,
	41, 1949,
	43, 1949,
	44, 1949,
	45, 1949,
	46, 1949,
	47, 1949,
	48, 1949,
	49, 1949,
	50, 1949,
	51, 1949,
	52, 1949,
	53, 1949,
	54, 1949,
	55, 1949,
	57, 1949,
	58, 1949,
	59, 1949,
	60, 1949,
	62, 1949,
	63, 1949,
	64, 1949,
	65, 1949,
	66, 1949,
	67, 1949,
	68, 1949,
	69, 1949,
	70, 1949,
	71, 1949,
	72, 1949,
	73, 1949,
	74, 1949,
	75, 1949,
	76, 1949,
	78, 1949,
	79, 1949,
	80, 1949,
	82, 1949,
	84, 1949,
	85, 1949,
	86, 1949,
	87, 1949,
	88, 1949,
	89, 1949,
	90, 1949,
	91, 1949,
	94, 1949,
	95, 1949,
	96, 1949,
	97, 1949,
	98, 1949,
	99, 1949,
	101, 1949,
	103, 1949,
	104, 1949,
	105, 1949,
	106, 1949,
	107, 1949,
	108, 1949,
	109, 1949,
	111, 1949,
	112, 1949,
	113, 1949,
	114, 1949,
	115, 1949,
	116, 1949,
	117, 1949,
	118, 1949,
	119, 1949,
	120, 1949,
	121, 1949,
	122, 1949,
	123, 1949,
	124, 1949,
	125, 1949,
	126, 1949,
	127, 1949,
	128, 1949,
	129, 1949,
	130, 1949,
	131, 1949,
	132, 1949,
	133, 1949,
	134, 1949,
	135, 1949,
	136, 1949,
	137, 1949,
	138, 1949,
	139, 1949,
	141, 1949,
	142, 1949,
	143, 1949,
	144, 1949,
	146, 1949,
	147, 1949,
	148, 1949,
	151, 1949,
	152, 1949,
	153, 1949,
	155, 1949,
	156, 1949,
	157, 1949,
	159, 1949,
	160, 1949,
	161, 1949,
	163, 1949,
	164, 1949,
	165, 1949,
	166, 1949,
	167, 1949,
	168, 1949,
	169, 1949,
	170, 1949,
	171, 1949,
	172, 1949,
	173, 1949,
	174, 1949,
	175, 1949,
	176, 1949,
	177, 1949,
	178, 1949,
	179, 1949,
	180, 1949,
	181, 1949,
	182, 1949,
	183, 1949,
	189, 1949,
	190, 1949,
	191, 1949,
	192, 1949,
	196, 1949,
	198, 1949,
	199, 1949,
	200, 1949,
	202, 1949,
	203, 1949,
	205, 1949,
	206, 1949,
	207, 1949,
	208, 1949,
	209, 1949,
	210, 1949,
	211, 1949,
	212, 1949,
	213, 1949,
	214, 1949,
	215, 1949,
	216, 1949,
	217, 1949,
	218, 1949,
	219, 1949,
	221, 1949,
	222, 1949,
	224, 1949,
	225, 1949,
	227, 1949,
	228, 1949,
	229, 1949,
	230, 1949,
	231, 1949,
	232, 1949,
	233, 1949,
	234, 1949,
	235, 1949,
	236, 1949,
	237, 1949,
	238, 1949,
	239, 1949,
	240, 1949,
	241, 1949,
	243, 1949,
	244, 1949,
	245, 1949,
	246, 1949,
	247, 1949,
	251, 1949,
	252, 1949,
	253, 1949,
	254, 1949,
	256, 1949,
	257, 1949,
	258, 1949,
	259, 1949,
	260, 1949,
	261, 1949,
	262, 1949,
	263, 1949,
	264, 1949,
	265, 1949,
	267, 1949,
	269, 1949,
	270, 1949,
	271, 1949,
	272, 1949,
	273, 1949,
	274, 1949,
	275, 1949,
	276, 1949,
	277, 1949,
	278, 1949,
	279, 1949,
	283, 1949,
	284, 1949,
	285, 1949,
	286, 1949,
	287, 1949,
	288, 1949,
	289, 1949,
	291, 1949,
	292, 1949,
	293, 1949,
	295, 1949,
	296, 1949,
	297, 1949,
	298, 1949,
	299, 1949,
	300, 1949,
	301, 1949,
	303, 1949,
	304, 1949,
	305, 1949,
	306, 1949,
	307, 1949,
	308, 1949,
	309, 1949,
	310, 1949,
	311, 1949,
	312, 1949,
	313, 1949,
	314, 1949,
	315, 1949,
	317, 1949,
	318, 1949,
	319, 1949,
	320, 1949,
	321, 1949,
	322, 1949,
	323, 1949,
	324, 1949,
	325, 1949,
	326, 1949,
	327, 1949,
	328, 1949,
	329, 1949,
	330, 1949,
	331, 1949,
	332, 1949,
	333, 1949,
	334, 1949,
	335, 1949,
	336, 1949,
	337, 1949,
	338, 1949,
	339, 1949,
	341, 1949,
	342, 1949,
	343, 1949,
	344, 1949,
	345, 1949,
	346, 1949,
	347, 1949,
	348, 1949,
	349, 1949,
	350, 1949,
	351, 1949,
	352, 1949,
	353, 1949,
	354, 1949,
	355, 1949,
	356, 1949,
	357, 1949,
	358, 1949,
	359, 1949,
	360, 1949,
	361, 1949,
	362, 1949,
	363, 1949,
	364, 1949,
	365, 1949,
	366, 1949,
	367, 1949,
	368, 1949,
	369, 1949,
	370, 1949,
	371, 1949,
	372, 1949,
	373, 1949,
	374, 1949,
	375, 1949,
	376, 1949,
	379, 1949,
	381, 1949,
	384, 1949,
	385, 1949,
	386, 1949,
	389, 1949,
	390, 1949,
	391, 1949,
	392, 1949,
	393, 1949,
	394, 1949,
	395, 1949,
	396, 1949,
	397, 1949,
	398, 1949,
	399, 1949,
	400, 1949,
	401, 1949,
	402, 1949,
	403, 1949,
	404, 1949,
	405, 1949,
	406, 1949,
	407, 1949,
	408, 1949,
	410, 1949,
	411, 1949,
	412, 1949,
	413, 1949,
	414, 1949,
	415, 1949,
	416, 1949,
	417, 1949,
	418, 1949,
	419, 1949,
	420, 1949,
	421, 1949,
	422, 1949,
	423, 1949,
	424, 1949,
	426, 1949,
	427, 1949,
	428, 1949,
	430, 1949,
	431, 1949,
	432, 1949,
	433, 1949,
	434, 1949,
	435, 1949,
	436, 1949,
	437, 1949,
	438, 1949,
	439, 1949,
	440, 1949,
	441, 1949,
	442, 1949,
	443, 1949,
	445, 1949,
	447, 1949,
	448, 1949,
	449, 1949,
	455, 1949,
	456, 1949,
	457, 1949,
	459, 1949,
	460, 1949,
	461, 1949,
	462, 1949,
	463, 1949,
	464, 1949,
	465, 1949,
	466, 1949,
	467, 1949,
	468, 1949,
	469, 1949,
	471, 1949,
	472, 1949,
	473, 1949,
	474, 1949,
	475, 1949,
	476, 1949,
	477, 1949,
	478, 1949,
	479, 1949,
	480, 1949,
	481, 1949,
	482, 1949,
	483, 1949,
	485, 1949,
	486, 1949,
	487, 1949,
	488, 1949,
	489, 1949,
	490, 1949,
	491, 1949,
	492, 1949,
	493, 1949,
	494, 1949,
	495, 1949,
	496, 1949,
	497, 1949,
	498, 1949,
	499, 1949,
	500, 1949,
	502, 1949,
	503, 1949,
	504, 1949,
	505, 1949,
	506, 1949,
	507, 1949,
	508, 1949,
	509, 1949,
	510, 1949,
	511, 1949,
	512, 1949,
	513, 1949,
	514, 1949,
	515, 1949,
	516, 1949,
	517, 1949,
	518, 1949,
	519, 1949,
	520, 1949,
	521, 1949,
	522, 1949,
	523, 1949,
	524, 1949,
	526, 1949,
	528, 1949,
	529, 1949,
	530, 1949,
	531, 1949,
	532, 1949,
	533, 1949,
	534, 1949,
	535, 1949,
	536, 1949,
	537, 1949,
	538, 1949,
	539, 1949,
	540, 1949,
	541, 1949,
	542, 1949,
	543, 1949,
	544, 1949,
	545, 1949,
	546, 1949,
	547, 1949,
	548, 1949,
	550, 1949,
	551, 1949,
	552, 1949,
	553, 1949,
	554, 1949,
	556, 1949,
	557, 1949,
	558, 1949,
	559, 1949,
	560, 1949,
	561, 1949,
	563, 1949,
	564, 1949,
	566, 1949,
	567, 1949,
	568, 1949,
	569, 1949,
	570, 1949,
	572, 1949,
	574, 1949,
	575, 1949,
	576, 1949,
	577, 1949,
	578, 1949,
	579, 1949,
	580, 1949,
	581, 1949,
	582, 1949,
	583, 1949,
	584, 1949,
	585, 1949,
	586, 1949,
	587, 1949,
	588, 1949,
	589, 1949,
	591, 1949,
	592, 1949,
	593, 1949,
	594, 1949,
	595, 1949,
	596, 1949,
	597, 1949,
	598, 1949,
	599, 1949,
	600, 1949,
	601, 1949,
	602, 1949,
	605, 1949,
	606, 1949,
	607, 1949,
	608, 1949,
	609, 1949,
	610, 1949,
	612, 1949,
	613, 1949,
	614, 1949,
	615, 1949,
	616, 1949,
	617, 1949,
	618, 1949,
	619, 1949,
	620, 1949,
	621, 1949,
	622, 1949,
	623, 1949,
	628, 1949,
	629, 1949,
	630, 1949,
	631, 1949,
	632, 1949,
	633, 1949,
	634, 1949,
	649, 1949,
	656, 1949,
	657, 1949,
	658, 1949,
	666, 1949,
	670, 1949,
	-2, 0,
	-1, 865,
	4, 1659,
	21, 1659,
	22, 1659,
	23, 1659,
	24, 1659,
	25, 1659,
	26, 1659,
	27, 1659,
	28, 1659,
	30, 1659,
	31, 1659,
	37, 1659,
	41, 1659,
	43, 1659,
	44, 1659,
	45, 1659,
	47, 1659,
	48, 1659,
	49, 1659,
	50, 1659,
	51, 1659,
	52, 1659,
	53, 1659,
	54, 1659,
	55, 1659,
	57, 1659,
	58, 1659,
	59, 1659,
	60, 1659,
	62, 1659,
	63, 1659,
	64, 1659,
	65, 1659,
	66, 1659,
	67, 1659,
	68, 1659,
	69, 1659,
	73, 1659,
	74, 1659,
	75, 1659,
	76, 1659,
	78, 1659,
	79, 1659,
	80, 1659,
	84, 1659,
	85, 1659,
	86, 1659,
	87, 1659,
	88, 1659,
	89, 1659,
	90, 1659,
	91, 1659,
	94, 1659,
	95, 1659,
	96, 1659,
	97, 1659,
	98, 1659,
	99, 1659,
	101, 1659,
	103, 1659,
	104, 1659,
	105, 1659,
	106, 1659,
	107, 1659,
	108, 1659,
	109, 1659,
	111, 1659,
	112, 1659,
	113, 1659,
	115, 1659,
	116, 1659,
	117, 1659,
	125, 1659,
	126, 1659,
	127, 1659,
	128, 1659,
	129, 1659,
	131, 1659,
	132, 1659,
	133, 1659,
	134, 1659,
	136, 1659,
	137, 1659,
	138, 1659,
	139, 1659,
	141, 1659,
	142, 1659,
	143, 1659,
	144, 1659,
	146, 1659,
	147, 1659,
	148, 1659,
	151, 1659,
	152, 1659,
	153, 1659,
	155, 1659,
	156, 1659,
	157, 1659,
	159, 1659,
	160, 1659,
	161, 1659,
	163, 1659,
	164, 1659,
	165, 1659,
	166, 1659,
	167, 1659,
	168, 1659,
	169, 1659,
	170, 1659,
	171, 1659,
	172, 1659,
	173, 1659,
	174, 1659,
	175, 1659,
	176, 1659,
	177, 1659,
	178, 1659,
	179, 1659,
	180, 1659,
	181, 1659,
	183, 1659,
	189, 1659,
	190, 1659,
	191, 1659,
	192, 1659,
	196, 1659,
	198, 1659,
	199, 1659,
	200, 1659,
	202, 1659,
	203, 1659,
	206, 1659,
	207, 1659,
	208, 1659,
	209, 1659,
	210, 1659,
	211, 1659,
	212, 1659,
	213, 1659,
	214, 1659,
	215, 1659,
	216, 1659,
	217, 1659,
	218, 1659,
	219, 1659,
	221, 1659,
	222, 1659,
	224, 1659,
	225, 1659,
	227, 1659,
	228, 1659,
	229, 1659,
	230, 1659,
	231, 1659,
	232, 1659,
	233, 1659,
	234, 1659,
	235, 1659,
	236, 1659,
	237, 1659,
	239, 1659,
	240, 1659,
	241, 1659,
	243, 1659,
	244, 1659,
	245, 1659,
	246, 1659,
	247, 1659,
	251, 1659,
	252, 1659,
	253, 1659,
	254, 1659,
	256, 1659,
	257, 1659,
	258, 1659,
	260, 1659,
	261, 1659,
	262, 1659,
	263, 1659,
	264, 1659,
	265, 1659,
	267, 1659,
	269, 1659,
	270, 1659,
	271, 1659,
	273, 1659,
	275, 1659,
	276, 1659,
	277, 1659,
	279, 1659,
	283, 1659,
	284, 1659,
	285, 1659,
	286, 1659,
	287, 1659,
	288, 1659,
	289, 1659,
	291, 1659,
	292, 1659,
	293, 1659,
	295, 1659,
	296, 1659,
	297, 1659,
	299, 1659,
	300, 1659,
	303, 1659,
	304, 1659,
	305, 1659,
	306, 1659,
	307, 1659,
	308, 1659,
	309, 1659,
	312, 1659,
	313, 1659,
	314, 1659,
	315, 1659,
	317, 1659,
	318, 1659,
	319, 1659,
	320, 1659,
	321, 1659,
	322, 1659,
	323, 1659,
	324, 1659,
	325, 1659,
	326, 1659,
	327, 1659,
	328, 1659,
	329, 1659,
	330, 1659,
	331, 1659,
	332, 1659,
	333, 1659,
	334, 1659,
	335, 1659,
	336, 1659,
	337, 1659,
	338, 1659,
	339, 1659,
	341, 1659,
	343, 1659,
	344, 1659,
	345, 1659,
	346, 1659,
	347, 1659,
	348, 1659,
	349, 1659,
	350, 1659,
	351, 1659,
	352, 1659,
	353, 1659,
	354, 1659,
	355, 1659,
	356, 1659,
	357, 1659,
	358, 1659,
	359, 1659,
	361, 1659,
	362, 1659,
	364, 1659,
	365, 1659,
	367, 1659,
	368, 1659,
	369, 1659,
	370, 1659,
	372, 1659,
	373, 1659,
	374, 1659,
	375, 1659,
	376, 1659,
	379, 1659,
	381, 1659,
	384, 1659,
	385, 1659,
	386, 1659,
	389, 1659,
	390, 1659,
	391, 1659,
	393, 1659,
	395, 1659,
	396, 1659,
	397, 1659,
	398, 1659,
	399, 1659,
	400, 1659,
	401, 1659,
	402, 1659,
	403, 1659,
	404, 1659,
	405, 1659,
	406, 1659,
	407, 1659,
	408, 1659,
	410, 1659,
	411, 1659,
	412, 1659,
	413, 1659,
	414, 1659,
	415, 1659,
	416, 1659,
	417, 1659,
	418, 1659,
	419, 1659,
	420, 1659,
	421, 1659,
	422, 1659,
	423, 1659,
	424, 1659,
	426, 1659,
	427, 1659,
	428, 1659,
	430, 1659,
	431, 1659,
	432, 1659,
	433, 1659,
	434, 1659,
	435, 1659,
	436, 1659,
	437, 1659,
	438, 1659,
	439, 1659,
	440, 1659,
	441, 1659,
	442, 1659,
	443, 1659,
	445, 1659,
	447, 1659,
	448, 1659,
	449, 1659,
	455, 1659,
	456, 1659,
	457, 1659,
	459, 1659,
	460, 1659,
	461, 1659,
	462, 1659,
	463, 1659,
	464, 1659,
	465, 1659,
	466, 1659,
	467, 1659,
	468, 1659,
	469, 1659,
	471, 1659,
	472, 1659,
	473, 1659,
	474, 1659,
	475, 1659,
	477, 1659,
	478, 1659,
	479, 1659,
	480, 1659,
	481, 1659,
	482, 1659,
	483, 1659,
	485, 1659,
	486, 1659,
	487, 1659,
	488, 1659,
	489, 1659,
	490, 1659,
	491, 1659,
	492, 1659,
	493, 1659,
	494, 1659,
	495, 1659,
	496, 1659,
	497, 1659,
	498, 1659,
	499, 1659,
	500, 1659,
	502, 1659,
	503, 1659,
	504, 1659,
	505, 1659,
	506, 1659,
	507, 1659,
	509, 1659,
	510, 1659,
	511, 1659,
	512, 1659,
	513, 1659,
	514, 1659,
	515, 1659,
	517, 1659,
	518, 1659,
	519, 1659,
	520, 1659,
	521, 1659,
	522, 1659,
	523, 1659,
	524, 1659,
	526, 1659,
	528, 1659,
	529, 1659,
	530, 1659,
	531, 1659,
	532, 1659,
	533, 1659,
	534, 1659,
	535, 1659,
	536, 1659,
	537, 1659,
	538, 1659,
	539, 1659,
	540, 1659,
	541, 1659,
	542, 1659,
	543, 1659,
	544, 1659,
	545, 1659,
	546, 1659,
	547, 1659,
	548, 1659,
	550, 1659,
	551, 1659,
	553, 1659,
	554, 1659,
	556, 1659,
	557, 1659,
	558, 1659,
	559, 1659,
	560, 1659,
	561, 1659,
	563, 1659,
	564, 1659,
	566, 1659,
	567, 1659,
	568, 1659,
	569, 1659,
	570, 1659,
	572, 1659,
	574, 1659,
	575, 1659,
	576, 1659,
	577, 1659,
	578, 1659,
	579, 1659,
	580, 1659,
	581, 1659,
	583, 1659,
	584, 1659,
	585, 1659,
	586, 1659,
	587, 1659,
	588, 1659,
	589, 1659,
	592, 1659,
	593, 1659,
	594, 1659,
	595, 1659,
	596, 1659,
	597, 1659,
	598, 1659,
	599, 1659,
	600, 1659,
	602, 1659,
	605, 1659,
	606, 1659,
	607, 1659,
	608, 1659,
	609, 1659,
	610, 1659,
	612, 1659,
	613, 1659,
	614, 1659,
	615, 1659,
	616, 1659,
	617, 1659,
	618, 1659,
	619, 1659,
	620, 1659,
	621, 1659,
	622, 1659,
	623, 1659,
	628, 1659,
	629, 1659,
	630, 1659,
	631, 1659,
	632, 1659,
	633, 1659,
	-2, 0,
	-1, 885,
	204, 2768,
	571, 2768,
	648, 2768,
	668, 2768,
	-2, 0,
	-1, 886,
	204, 2753,
	571, 2753,
	648, 2753,
	668, 2753,
	-2, 0,
	-1, 888,
	204, 3054,
	571, 3054,
	648, 3054,
	668, 3054,
	-2, 0,
	-1, 891,
	204, 2895,
	571, 2895,
	648, 2895,
	668, 2895,
	-2, 0,
	-1, 892,
	204, 3101,
	571, 3101,
	648, 3101,
	668, 3101,
	-2, 0,
	-1, 900,
	204, 2923,
	571, 2923,
	648, 2923,
	668, 2923,
	-2, 932,
	-1, 916,
	8, 1071,
	29, 1071,
	656, 1071,
	657, 1071,
	-2, 1076,
	-1, 920,
	1, 2827,
	669, 2827,
	672, 2827,
	-2, 1076,
	-1, 921,
	1, 2882,
	669, 2882,
	672, 2882,
	-2, 1076,
	-1, 924,
	1, 2928,
	669, 2928,
	672, 2928,
	-2, 1069,
	-1, 925,
	1, 2986,
	669, 2986,
	672, 2986,
	-2, 1070,
	-1, 926,
	1, 2832,
	669, 2832,
	672, 2832,
	-2, 1073,
	-1, 927,
	1, 2739,
	669, 2739,
	672, 2739,
	-2, 1074,
	-1, 945,
	204, 1116,
	-2, 0,
	-1, 946,
	432, 1172,
	507, 1172,
	554, 1172,
	576, 1172,
	-2, 0,
	-1, 947,
	432, 1171,
	507, 1171,
	554, 1171,
	576, 1171,
	-2, 1089,
	-1, 951,
	1, 1228,
	665, 1228,
	667, 1228,
	669, 1228,
	672, 1228,
	-2, 0,
	-1, 953,
	1, 1144,
	665, 1144,
	667, 1144,
	669, 1144,
	672, 1144,
	-2, 0,
	-1, 954,
	1, 1148,
	665, 1148,
	667, 1148,
	669, 1148,
	672, 1148,
	-2, 0,
	-1, 955,
	1, 1307,
	197, 1307,
	665, 1307,
	667, 1307,
	669, 1307,
	672, 1307,
	-2, 0,
	-1, 965,
	1, 1177,
	665, 1177,
	667, 1177,
	669, 1177,
	672, 1177,
	-2, 0,
	-1, 972,
	1, 1228,
	665, 1228,
	667, 1228,
	669, 1228,
	672, 1228,
	-2, 0,
	-1, 973,
	1, 1221,
	665, 1221,
	667, 1221,
	669, 1221,
	672, 1221,
	-2, 0,
	-1, 974,
	1, 1230,
	665, 1230,
	667, 1230,
	669, 1230,
	672, 1230,
	-2, 0,
	-1, 975,
	1, 1233,
	665, 1233,
	667, 1233,
	669, 1233,
	672, 1233,
	-2, 0,
	-1, 983,
	1, 1270,
	665, 1270,
	667, 1270,
	669, 1270,
	672, 1270,
	-2, 0,
	-1, 984,
	1, 1272,
	665, 1272,
	667, 1272,
	669, 1272,
	672, 1272,
	-2, 0,
	-1, 989,
	1, 1300,
	665, 1300,
	667, 1300,
	669, 1300,
	672, 1300,
	-2, 0,
	-1, 1039,
	668, 2696,
	671, 2696,
	-2, 1318,
	-1, 1040,
	668, 2698,
	671, 2698,
	-2, 1319,
	-1, 1041,
	668, 2697,
	671, 2697,
	-2, 1320,
	-1, 1042,
	671, 2619,
	-2, 1321,
	-1, 1069,
	197, 331,
	-2, 0,
	-1, 1092,
	46, 2668,
	-2, 0,
	-1, 1093,
	613, 1637,
	-2, 1403,
	-1, 1110,
	4, 2097,
	21, 2097,
	22, 2097,
	23, 2097,
	24, 2097,
	25, 2097,
	26, 2097,
	27, 2097,
	28, 2097,
	30, 2097,
	31, 2097,
	37, 2097,
	41, 2097,
	43, 2097,
	44, 2097,
	45, 2097,
	47, 2097,
	48, 2097,
	49, 2097,
	50, 2097,
	51, 2097,
	52, 2097,
	53, 2097,
	54, 2097,
	55, 2097,
	57, 2097,
	58, 2097,
	59, 2097,
	60, 2097,
	62, 2097,
	63, 2097,
	64, 2097,
	65, 2097,
	66, 2097,
	67, 2097,
	68, 2097,
	69, 2097,
	73, 2097,
	74, 2097,
	75, 2097,
	76, 2097,
	78, 2097,
	79, 2097,
	80, 2097,
	84, 2097,
	85, 2097,
	86, 2097,
	87, 2097,
	88, 2097,
	89, 2097,
	90, 2097,
	91, 2097,
	94, 2097,
	95, 2097,
	96, 2097,
	97, 2097,
	98, 2097,
	99, 2097,
	101, 2097,
	103, 2097,
	104, 2097,
	105, 2097,
	106, 2097,
	107, 2097,
	108, 2097,
	109, 2097,
	111, 2097,
	112, 2097,
	113, 2097,
	115, 2097,
	116, 2097,
	117, 2097,
	125, 2097,
	126, 2097,
	127, 2097,
	128, 2097,
	129, 2097,
	131, 2097,
	132, 2097,
	133, 2097,
	134, 2097,
	136, 2097,
	137, 2097,
	138, 2097,
	139, 2097,
	141, 2097,
	142, 2097,
	143, 2097,
	144, 2097,
	146, 2097,
	147, 2097,
	148, 2097,
	151, 2097,
	152, 2097,
	153, 2097,
	155, 2097,
	156, 2097,
	157, 2097,
	159, 2097,
	160, 2097,
	161, 2097,
	163, 2097,
	164, 2097,
	165, 2097,
	166, 2097,
	167, 2097,
	168, 2097,
	169, 2097,
	170, 2097,
	171, 2097,
	172, 2097,
	173, 2097,
	174, 2097,
	175, 2097,
	176, 2097,
	177, 2097,
	178, 2097,
	179, 2097,
	180, 2097,
	181, 2097,
	183, 2097,
	189, 2097,
	190, 2097,
	191, 2097,
	192, 2097,
	196, 2097,
	198, 2097,
	199, 2097,
	200, 2097,
	202, 2097,
	203, 2097,
	206, 2097,
	207, 2097,
	208, 2097,
	209, 2097,
	210, 2097,
	211, 2097,
	212, 2097,
	213, 2097,
	214, 2097,
	215, 2097,
	216, 2097,
	217, 2097,
	218, 2097,
	219, 2097,
	221, 2097,
	222, 2097,
	224, 2097,
	225, 2097,
	227, 2097,
	228, 2097,
	229, 2097,
	230, 2097,
	231, 2097,
	232, 2097,
	233, 2097,
	234, 2097,
	235, 2097,
	236, 2097,
	237, 2097,
	239, 2097,
	240, 2097,
	241, 2097,
	243, 2097,
	244, 2097,
	245, 2097,
	246, 2097,
	247, 2097,
	251, 2097,
	252, 2097,
	253, 2097,
	254, 2097,
	256, 2097,
	257, 2097,
	258, 2097,
	260, 2097,
	261, 2097,
	262, 2097,
	263, 2097,
	264, 2097,
	265, 2097,
	267, 2097,
	269, 2097,
	270, 2097,
	271, 2097,
	273, 2097,
	275, 2097,
	276, 2097,
	277, 2097,
	279, 2097,
	283, 2097,
	284, 2097,
	285, 2097,
	286, 2097,
	287, 2097,
	288, 2097,
	289, 2097,
	291, 2097,
	292, 2097,
	293, 2097,
	295, 2097,
	296, 2097,
	297, 2097,
	299, 2097,
	300, 2097,
	303, 2097,
	304, 2097,
	305, 2097,
	306, 2097,
	307, 2097,
	308, 2097,
	309, 2097,
	312, 2097,
	313, 2097,
	314, 2097,
	315, 2097,
	317, 2097,
	318, 2097,
	319, 2097,
	320, 2097,
	321, 2097,
	322, 2097,
	323, 2097,
	324, 2097,
	325, 2097,
	326, 2097,
	327, 2097,
	328, 2097,
	329, 2097,
	330, 2097,
	331, 2097,
	332, 2097,
	333, 2097,
	334, 2097,
	335, 2097,
	336, 2097,
	337, 2097,
	338, 2097,
	339, 2097,
	341, 2097,
	343, 2097,
	344, 2097,
	345, 2097,
	346, 2097,
	347, 2097,
	348, 2097,
	349, 2097,
	350, 2097,
	351, 2097,
	352, 2097,
	353, 2097,
	354, 2097,
	355, 2097,
	356, 2097,
	357, 2097,
	358, 2097,
	359, 2097,
	361, 2097,
	362, 2097,
	364, 2097,
	365, 2097,
	367, 2097,
	368, 2097,
	369, 2097,
	370, 2097,
	372, 2097,
	373, 2097,
	374, 2097,
	375, 2097,
	376, 2097,
	379, 2097,
	381, 2097,
	384, 2097,
	385, 2097,
	386, 2097,
	389, 2097,
	390, 2097,
	391, 2097,
	393, 2097,
	395, 2097,
	396, 2097,
	397, 2097,
	398, 2097,
	399, 2097,
	400, 2097,
	401, 2097,
	402, 2097,
	403, 2097,
	404, 2097,
	405, 2097,
	406, 2097,
	407, 2097,
	408, 2097,
	410, 2097,
	411, 2097,
	412, 2097,
	413, 2097,
	414, 2097,
	415, 2097,
	416, 2097,
	417, 2097,
	418, 2097,
	419, 2097,
	420, 2097,
	421, 2097,
	422, 2097,
	423, 2097,
	424, 2097,
	426, 2097,
	427, 2097,
	428, 2097,
	430, 2097,
	431, 2097,
	432, 2097,
	433, 2097,
	434, 2097,
	435, 2097,
	436, 2097,
	437, 2097,
	438, 2097,
	439, 2097,
	440, 2097,
	441, 2097,
	442, 2097,
	443, 2097,
	445, 2097,
	447, 2097,
	448, 2097,
	449, 2097,
	455, 2097,
	456, 2097,
	457, 2097,
	459, 2097,
	460, 2097,
	461, 2097,
	462, 2097,
	463, 2097,
	464, 2097,
	465, 2097,
	466, 2097,
	467, 2097,
	468, 2097,
	469, 2097,
	471, 2097,
	472, 2097,
	473, 2097,
	474, 2097,
	475, 2097,
	477, 2097,
	478, 2097,
	479, 2097,
	480, 2097,
	481, 2097,
	482, 2097,
	483, 2097,
	485, 2097,
	486, 2097,
	487, 2097,
	488, 2097,
	489, 2097,
	490, 2097,
	491, 2097,
	492, 2097,
	493, 2097,
	494, 2097,
	495, 2097,
	496, 2097,
	497, 2097,
	498, 2097,
	499, 2097,
	500, 2097,
	502, 2097,
	503, 2097,
	504, 2097,
	505, 2097,
	506, 2097,
	507, 2097,
	509, 2097,
	510, 2097,
	511, 2097,
	512, 2097,
	513, 2097,
	514, 2097,
	515, 2097,
	517, 2097,
	518, 2097,
	519, 2097,
	520, 2097,
	521, 2097,
	522, 2097,
	523, 2097,
	524, 2097,
	526, 2097,
	528, 2097,
	529, 2097,
	530, 2097,
	531, 2097,
	532, 2097,
	533, 2097,
	534, 2097,
	535, 2097,
	536, 2097,
	537, 2097,
	538, 2097,
	539, 2097,
	540, 2097,
	541, 2097,
	542, 2097,
	543, 2097,
	544, 2097,
	545, 2097,
	546, 2097,
	547, 2097,
	548, 2097,
	550, 2097,
	551, 2097,
	553, 2097,
	554, 2097,
	556, 2097,
	557, 2097,
	558, 2097,
	559, 2097,
	560, 2097,
	561, 2097,
	563, 2097,
	564, 2097,
	566, 2097,
	567, 2097,
	568, 2097,
	569, 2097,
	570, 2097,
	572, 2097,
	574, 2097,
	575, 2097,
	576, 2097,
	577, 2097,
	578, 2097,
	579, 2097,
	580, 2097,
	581, 2097,
	583, 2097,
	584, 2097,
	585, 2097,
	586, 2097,
	587, 2097,
	588, 2097,
	589, 2097,
	592, 2097,
	593, 2097,
	594, 2097,
	595, 2097,
	596, 2097,
	597, 2097,
	598, 2097,
	599, 2097,
	600, 2097,
	602, 2097,
	605, 2097,
	606, 2097,
	607, 2097,
	608, 2097,
	609, 2097,
	610, 2097,
	612, 2097,
	613, 2097,
	614, 2097,
	615, 2097,
	616, 2097,
	617, 2097,
	618, 2097,
	619, 2097,
	620, 2097,
	621, 2097,
	622, 2097,
	623, 2097,
	628, 2097,
	629, 2097,
	630, 2097,
	631, 2097,
	632, 2097,
	633, 2097,
	-2, 0,
	-1, 1122,
	288, 588,
	-2, 0,
	-1, 1123,
	170, 1210,
	286, 1210,
	432, 1171,
	507, 1171,
	554, 1171,
	574, 1210,
	576, 1171,
	-2, 0,
	-1, 1234,
	184, 1953,
	197, 1953,
	302, 1953,
	377, 1953,
	-2, 1889,
	-1, 1251,
	184, 1952,
	197, 1952,
	302, 1952,
	377, 1952,
	-2, 1886,
	-1, 1280,
	668, 2695,
	-2, 940,
	-1, 1287,
	666, 2685,
	-2, 3317,
	-1, 1310,
	5, 2687,
	666, 2684,
	-2, 2675,
	-1, 1318,
	5, 2708,
	666, 2705,
	-2, 2696,
	-1, 1319,
	5, 2709,
	666, 2706,
	-2, 2697,
	-1, 1329,
	668, 2693,
	-2, 2674,
	-1, 1330,
	666, 3216,
	-2, 2694,
	-1, 1353,
	5, 2710,
	38, 2710,
	135, 2710,
	648, 2710,
	664, 2710,
	667, 2710,
	668, 2710,
	671, 2710,
	-2, 3215,
	-1, 1354,
	5, 2172,
	-2, 3185,
	-1, 1355,
	5, 2173,
	-2, 3186,
	-1, 1356,
	5, 2174,
	-2, 3201,
	-1, 1357,
	5, 2175,
	-2, 3163,
	-1, 1358,
	5, 2176,
	-2, 3198,
	-1, 1359,
	5, 2184,
	-2, 3176,
	-1, 1360,
	5, 2171,
	-2, 3172,
	-1, 1361,
	5, 2171,
	-2, 3171,
	-1, 1362,
	5, 2171,
	-2, 3191,
	-1, 1363,
	5, 2182,
	-2, 3165,
	-1, 1364,
	5, 2187,
	666, 2199,
	-2, 3164,
	-1, 1365,
	5, 2189,
	-2, 3211,
	-1, 1368,
	5, 2211,
	-2, 3204,
	-1, 1369,
	5, 2203,
	-2, 3205,
	-1, 1370,
	5, 2211,
	-2, 3206,
	-1, 1371,
	5, 2207,
	-2, 3207,
	-1, 1372,
	5, 2155,
	-2, 3177,
	-1, 1373,
	5, 2156,
	-2, 3178,
	-1, 1374,
	5, 2157,
	-2, 3166,
	-1, 1402,
	5, 2194,
	666, 2194,
	-2, 3212,
	-1, 1403,
	5, 2195,
	666, 2195,
	-2, 3202,
	-1, 1404,
	5, 2196,
	614, 2196,
	666, 2196,
	-2, 3167,
	-1, 1405,
	5, 2197,
	614, 2197,
	666, 2197,
	-2, 3168,
	-1, 1443,
	666, 2705,
	-2, 2696,
	-1, 1444,
	666, 2706,
	-2, 2697,
	-1, 1555,
	204, 3101,
	571, 3101,
	648, 3101,
	668, 3101,
	-2, 0,
	-1, 1560,
	1, 916,
	669, 916,
	672, 916,
	-2, 1795,
	-1, 1618,
	204, 1117,
	-2, 3044,
	-1, 1619,
	204, 1118,
	-2, 2825,
	-1, 1620,
	204, 1119,
	-2, 2995,
	-1, 1621,
	204, 1120,
	-2, 3124,
	-1, 1636,
	432, 1172,
	507, 1172,
	554, 1172,
	576, 1172,
	-2, 0,
	-1, 1647,
	1, 1734,
	242, 1734,
	665, 1734,
	667, 1734,
	669, 1734,
	672, 1734,
	-2, 0,
	-1, 1666,
	1, 1167,
	665, 1167,
	667, 1167,
	669, 1167,
	672, 1167,
	-2, 0,
	-1, 1667,
	1, 1211,
	665, 1211,
	667, 1211,
	669, 1211,
	672, 1211,
	-2, 0,
	-1, 1668,
	1, 1223,
	665, 1223,
	667, 1223,
	669, 1223,
	672, 1223,
	-2, 0,
	-1, 1671,
	1, 1176,
	665, 1176,
	667, 1176,
	669, 1176,
	672, 1176,
	-2, 0,
	-1, 1673,
	1, 1182,
	665, 1182,
	667, 1182,
	669, 1182,
	672, 1182,
	-2, 0,
	-1, 1677,
	1, 1178,
	665, 1178,
	667, 1178,
	669, 1178,
	672, 1178,
	-2, 0,
	-1, 1682,
	1, 1192,
	665, 1192,
	667, 1192,
	669, 1192,
	672, 1192,
	-2, 0,
	-1, 1721,
	1, 3033,
	665, 3033,
	667, 3033,
	668, 3033,
	669, 3033,
	672, 3033,
	-2, 0,
	-1, 1726,
	1, 1281,
	665, 1281,
	667, 1281,
	669, 1281,
	672, 1281,
	-2, 0,
	-1, 1743,
	1, 1790,
	669, 1790,
	672, 1790,
	-2, 1795,
	-1, 1843,
	397, 2669,
	459, 2669,
	509, 2669,
	658, 2669,
	-2, 2657,
	-1, 1851,
	204, 172,
	295, 172,
	361, 172,
	623, 172,
	-2, 3096,
	-1, 1852,
	204, 173,
	295, 173,
	361, 173,
	623, 173,
	-2, 2816,
	-1, 1853,
	204, 174,
	295, 174,
	361, 174,
	623, 174,
	-2, 3009,
	-1, 1859,
	670, 2669,
	-2, 2671,
	-1, 1862,
	25, 3033,
	242, 3033,
	-2, 0,
	-1, 1875,
	1, 1634,
	464, 1588,
	509, 1588,
	640, 1588,
	645, 1588,
	665, 1634,
	667, 1634,
	669, 1634,
	672, 1634,
	-2, 1938,
	-1, 1881,
	220, 1734,
	242, 1734,
	475, 1734,
	-2, 0,
	-1, 1950,
	46, 2667,
	-2, 1365,
	-1, 1957,
	1, 1634,
	665, 1634,
	667, 1634,
	669, 1634,
	672, 1634,
	-2, 1938,
	-1, 1960,
	441, 1402,
	613, 1402,
	-2, 487,
	-1, 1966,
	4, 1659,
	21, 1659,
	22, 1659,
	23, 1659,
	24, 1659,
	25, 1659,
	26, 1659,
	27, 1659,
	28, 1659,
	30, 1659,
	31, 1659,
	37, 1659,
	41, 1659,
	43, 1659,
	44, 1659,
	45, 1659,
	47, 1659,
	48, 1659,
	49, 1659,
	50, 1659,
	51, 1659,
	52, 1659,
	53, 1659,
	54, 1659,
	55, 1659,
	57, 1659,
	58, 1659,
	59, 1659,
	60, 1659,
	62, 1659,
	63, 1659,
	64, 1659,
	65, 1659,
	66, 1659,
	67, 1659,
	68, 1659,
	69, 1659,
	73, 1659,
	74, 1659,
	75, 1659,
	76, 1659,
	78, 1659,
	79, 1659,
	80, 1659,
	84, 1659,
	85, 1659,
	86, 1659,
	87, 1659,
	88, 1659,
	89, 1659,
	90, 1659,
	91, 1659,
	94, 1659,
	95, 1659,
	96, 1659,
	97, 1659,
	98, 1659,
	99, 1659,
	101, 1659,
	103, 1659,
	104, 1659,
	105, 1659,
	106, 1659,
	107, 1659,
	108, 1659,
	109, 1659,
	111, 1659,
	112, 1659,
	113, 1659,
	115, 1659,
	116, 1659,
	117, 1659,
	125, 1659,
	126, 1659,
	127, 1659,
	128, 1659,
	129, 1659,
	131, 1659,
	132, 1659,
	133, 1659,
	134, 1659,
	136, 1659,
	137, 1659,
	138, 1659,
	139, 1659,
	141, 1659,
	142, 1659,
	143, 1659,
	144, 1659,
	146, 1659,
	147, 1659,
	148, 1659,
	151, 1659,
	152, 1659,
	153, 1659,
	155, 1659,
	156, 1659,
	157, 1659,
	159, 1659,
	160, 1659,
	161, 1659,
	163, 1659,
	164, 1659,
	165, 1659,
	166, 1659,
	167, 1659,
	168, 1659,
	169, 1659,
	170, 1659,
	171, 1659,
	172, 1659,
	173, 1659,
	174, 1659,
	175, 1659,
	176, 1659,
	177, 1659,
	178, 1659,
	179, 1659,
	180, 1659,
	181, 1659,
	189, 1659,
	190, 1659,
	191, 1659,
	192, 1659,
	196, 1659,
	198, 1659,
	199, 1659,
	200, 1659,
	202, 1659,
	203, 1659,
	206, 1659,
	207, 1659,
	208, 1659,
	209, 1659,
	210, 1659,
	211, 1659,
	212, 1659,
	213, 1659,
	214, 1659,
	215, 1659,
	216, 1659,
	217, 1659,
	218, 1659,
	219, 1659,
	221, 1659,
	222, 1659,
	224, 1659,
	225, 1659,
	227, 1659,
	228, 1659,
	229, 1659,
	230, 1659,
	231, 1659,
	232, 1659,
	233, 1659,
	234, 1659,
	235, 1659,
	236, 1659,
	237, 1659,
	239, 1659,
	240, 1659,
	241, 1659,
	243, 1659,
	244, 1659,
	245, 1659,
	246, 1659,
	247, 1659,
	251, 1659,
	252, 1659,
	253, 1659,
	254, 1659,
	260, 1659,
	261, 1659,
	262, 1659,
	263, 1659,
	264, 1659,
	265, 1659,
	267, 1659,
	269, 1659,
	270, 1659,
	271, 1659,
	273, 1659,
	275, 1659,
	276, 1659,
	277, 1659,
	279, 1659,
	283, 1659,
	284, 1659,
	285, 1659,
	286, 1659,
	287, 1659,
	288, 1659,
	289, 1659,
	291, 1659,
	292, 1659,
	293, 1659,
	295, 1659,
	296, 1659,
	297, 1659,
	299, 1659,
	300, 1659,
	303, 1659,
	304, 1659,
	305, 1659,
	306, 1659,
	307, 1659,
	308, 1659,
	309, 1659,
	312, 1659,
	313, 1659,
	314, 1659,
	315, 1659,
	317, 1659,
	318, 1659,
	319, 1659,
	320, 1659,
	321, 1659,
	322, 1659,
	323, 1659,
	324, 1659,
	325, 1659,
	326, 1659,
	327, 1659,
	328, 1659,
	329, 1659,
	330, 1659,
	331, 1659,
	332, 1659,
	333, 1659,
	334, 1659,
	335, 1659,
	336, 1659,
	337, 1659,
	338, 1659,
	339, 1659,
	341, 1659,
	343, 1659,
	344, 1659,
	345, 1659,
	346, 1659,
	347, 1659,
	348, 1659,
	349, 1659,
	350, 1659,
	351, 1659,
	352, 1659,
	353, 1659,
	354, 1659,
	355, 1659,
	356, 1659,
	357, 1659,
	358, 1659,
	359, 1659,
	361, 1659,
	362, 1659,
	364, 1659,
	367, 1659,
	368, 1659,
	369, 1659,
	370, 1659,
	372, 1659,
	373, 1659,
	374, 1659,
	375, 1659,
	376, 1659,
	379, 1659,
	381, 1659,
	382, 1659,
	384, 1659,
	385, 1659,
	386, 1659,
	389, 1659,
	390, 1659,
	391, 1659,
	393, 1659,
	395, 1659,
	396, 1659,
	397, 1659,
	398, 1659,
	399, 1659,
	400, 1659,
	401, 1659,
	402, 1659,
	403, 1659,
	404, 1659,
	405, 1659,
	406, 1659,
	407, 1659,
	408, 1659,
	410, 1659,
	411, 1659,
	412, 1659,
	413, 1659,
	414, 1659,
	415, 1659,
	416, 1659,
	417, 1659,
	418, 1659,
	419, 1659,
	420, 1659,
	421, 1659,
	422, 1659,
	423, 1659,
	424, 1659,
	426, 1659,
	427, 1659,
	428, 1659,
	430, 1659,
	431, 1659,
	432, 1659,
	433, 1659,
	434, 1659,
	435, 1659,
	436, 1659,
	437, 1659,
	438, 1659,
	439, 1659,
	440, 1659,
	441, 1659,
	442, 1659,
	443, 1659,
	445, 1659,
	447, 1659,
	448, 1659,
	449, 1659,
	455, 1659,
	456, 1659,
	457, 1659,
	459, 1659,
	460, 1659,
	461, 1659,
	462, 1659,
	463, 1659,
	464, 1659,
	465, 1659,
	466, 1659,
	467, 1659,
	468, 1659,
	469, 1659,
	471, 1659,
	472, 1659,
	473, 1659,
	474, 1659,
	475, 1659,
	477, 1659,
	478, 1659,
	479, 1659,
	480, 1659,
	481, 1659,
	482, 1659,
	483, 1659,
	485, 1659,
	486, 1659,
	487, 1659,
	488, 1659,
	489, 1659,
	490, 1659,
	491, 1659,
	492, 1659,
	493, 1659,
	494, 1659,
	495, 1659,
	496, 1659,
	497, 1659,
	498, 1659,
	499, 1659,
	500, 1659,
	502, 1659,
	503, 1659,
	504, 1659,
	505, 1659,
	506, 1659,
	507, 1659,
	509, 1659,
	510, 1659,
	511, 1659,
	512, 1659,
	513, 1659,
	514, 1659,
	515, 1659,
	517, 1659,
	518, 1659,
	519, 1659,
	520, 1659,
	521, 1659,
	522, 1659,
	523, 1659,
	524, 1659,
	526, 1659,
	528, 1659,
	529, 1659,
	530, 1659,
	531, 1659,
	532, 1659,
	533, 1659,
	534, 1659,
	535, 1659,
	536, 1659,
	537, 1659,
	538, 1659,
	539, 1659,
	540, 1659,
	541, 1659,
	542, 1659,
	543, 1659,
	544, 1659,
	545, 1659,
	546, 1659,
	547, 1659,
	548, 1659,
	550, 1659,
	551, 1659,
	553, 1659,
	554, 1659,
	556, 1659,
	557, 1659,
	558, 1659,
	559, 1659,
	560, 1659,
	561, 1659,
	563, 1659,
	564, 1659,
	566, 1659,
	567, 1659,
	568, 1659,
	569, 1659,
	570, 1659,
	572, 1659,
	574, 1659,
	575, 1659,
	576, 1659,
	577, 1659,
	578, 1659,
	579, 1659,
	580, 1659,
	581, 1659,
	583, 1659,
	584, 1659,
	585, 1659,
	586, 1659,
	587, 1659,
	588, 1659,
	589, 1659,
	592, 1659,
	593, 1659,
	594, 1659,
	595, 1659,
	596, 1659,
	597, 1659,
	598, 1659,
	599, 1659,
	600, 1659,
	602, 1659,
	605, 1659,
	606, 1659,
	607, 1659,
	608, 1659,
	609, 1659,
	610, 1659,
	612, 1659,
	613, 1659,
	614, 1659,
	615, 1659,
	616, 1659,
	617, 1659,
	618, 1659,
	619, 1659,
	620, 1659,
	621, 1659,
	622, 1659,
	623, 1659,
	628, 1659,
	629, 1659,
	630, 1659,
	631, 1659,
	632, 1659,
	633, 1659,
	-2, 0,
	-1, 1989,
	1, 740,
	665, 740,
	667, 740,
	669, 740,
	672, 740,
	-2, 1909,
	-1, 1992,
	4, 3210,
	11, 3210,
	12, 3210,
	14, 3210,
	15, 3210,
	16, 3210,
	17, 3210,
	18, 3210,
	19, 3210,
	21, 3210,
	22, 3210,
	23, 3210,
	24, 3210,
	25, 3210,
	26, 3210,
	27, 3210,
	28, 3210,
	30, 3210,
	31, 3210,
	34, 3210,
	35, 3210,
	37, 3210,
	39, 3210,
	41, 3210,
	43, 3210,
	44, 3210,
	45, 3210,
	47, 3210,
	48, 3210,
	49, 3210,
	50, 3210,
	51, 3210,
	52, 3210,
	53, 3210,
	54, 3210,
	55, 3210,
	57, 3210,
	58, 3210,
	59, 3210,
	60, 3210,
	62, 3210,
	63, 3210,
	64, 3210,
	65, 3210,
	66, 3210,
	67, 3210,
	68, 3210,
	69, 3210,
	72, 3210,
	73, 3210,
	74, 3210,
	75, 3210,
	76, 3210,
	78, 3210,
	79, 3210,
	80, 3210,
	81, 3210,
	84, 3210,
	85, 3210,
	86, 3210,
	87, 3210,
	88, 3210,
	89, 3210,
	90, 3210,
	91, 3210,
	92, 3210,
	94, 3210,
	95, 3210,
	96, 3210,
	97, 3210,
	98, 3210,
	99, 3210,
	101, 3210,
	102, 3210,
	103, 3210,
	104, 3210,
	105, 3210,
	106, 3210,
	107, 3210,
	108, 3210,
	109, 3210,
	111, 3210,
	112, 3210,
	113, 3210,
	114, 3210,
	115, 3210,
	116, 3210,
	117, 3210,
	125, 3210,
	126, 3210,
	127, 3210,
	128, 3210,
	129, 3210,
	131, 3210,
	132, 3210,
	133, 3210,
	134, 3210,
	136, 3210,
	137, 3210,
	138, 3210,
	139, 3210,
	141, 3210,
	142, 3210,
	143, 3210,
	144, 3210,
	146, 3210,
	147, 3210,
	148, 3210,
	151, 3210,
	152, 3210,
	153, 3210,
	155, 3210,
	156, 3210,
	157, 3210,
	159, 3210,
	160, 3210,
	161, 3210,
	163, 3210,
	164, 3210,
	165, 3210,
	166, 3210,
	167, 3210,
	168, 3210,
	169, 3210,
	170, 3210,
	171, 3210,
	172, 3210,
	173, 3210,
	174, 3210,
	175, 3210,
	176, 3210,
	177, 3210,
	178, 3210,
	179, 3210,
	180, 3210,
	181, 3210,
	185, 3210,
	186, 3210,
	187, 3210,
	188, 3210,
	189, 3210,
	190, 3210,
	191, 3210,
	192, 3210,
	195, 3210,
	196, 3210,
	198, 3210,
	199, 3210,
	200, 3210,
	202, 3210,
	203, 3210,
	205, 3210,
	206, 3210,
	207, 3210,
	208, 3210,
	209, 3210,
	210, 3210,
	211, 3210,
	212, 3210,
	213, 3210,
	214, 3210,
	215, 3210,
	216, 3210,
	217, 3210,
	218, 3210,
	219, 3210,
	221, 3210,
	222, 3210,
	224, 3210,
	225, 3210,
	227, 3210,
	228, 3210,
	229, 3210,
	230, 3210,
	231, 3210,
	232, 3210,
	233, 3210,
	234, 3210,
	235, 3210,
	236, 3210,
	237, 3210,
	238, 3210,
	239, 3210,
	240, 3210,
	241, 3210,
	242, 3210,
	243, 3210,
	244, 3210,
	245, 3210,
	246, 3210,
	247, 3210,
	249, 3210,
	250, 3210,
	251, 3210,
	252, 3210,
	253, 3210,
	254, 3210,
	259, 3210,
	260, 3210,
	261, 3210,
	262, 3210,
	263, 3210,
	264, 3210,
	265, 3210,
	267, 3210,
	269, 3210,
	270, 3210,
	271, 3210,
	272, 3210,
	273, 3210,
	274, 3210,
	275, 3210,
	276, 3210,
	277, 3210,
	278, 3210,
	279, 3210,
	281, 3210,
	282, 3210,
	283, 3210,
	284, 3210,
	285, 3210,
	286, 3210,
	287, 3210,
	288, 3210,
	289, 3210,
	291, 3210,
	292, 3210,
	293, 3210,
	295, 3210,
	296, 3210,
	297, 3210,
	298, 3210,
	299, 3210,
	300, 3210,
	301, 3210,
	303, 3210,
	304, 3210,
	305, 3210,
	306, 3210,
	307, 3210,
	308, 3210,
	309, 3210,
	312, 3210,
	313, 3210,
	314, 3210,
	315, 3210,
	316, 3210,
	317, 3210,
	318, 3210,
	319, 3210,
	320, 3210,
	321, 3210,
	322, 3210,
	323, 3210,
	324, 3210,
	325, 3210,
	326, 3210,
	327, 3210,
	328, 3210,
	329, 3210,
	330, 3210,
	331, 3210,
	332, 3210,
	333, 3210,
	334, 3210,
	335, 3210,
	336, 3210,
	337, 3210,
	338, 3210,
	339, 3210,
	341, 3210,
	342, 3210,
	343, 3210,
	344, 3210,
	345, 3210,
	346, 3210,
	347, 3210,
	348, 3210,
	349, 3210,
	350, 3210,
	351, 3210,
	352, 3210,
	353, 3210,
	354, 3210,
	355, 3210,
	356, 3210,
	357, 3210,
	358, 3210,
	359, 3210,
	361, 3210,
	362, 3210,
	364, 3210,
	366, 3210,
	367, 3210,
	368, 3210,
	369, 3210,
	370, 3210,
	372, 3210,
	373, 3210,
	374, 3210,
	375, 3210,
	376, 3210,
	379, 3210,
	381, 3210,
	384, 3210,
	385, 3210,
	386, 3210,
	387, 3210,
	389, 3210,
	390, 3210,
	391, 3210,
	393, 3210,
	395, 3210,
	396, 3210,
	397, 3210,
	398, 3210,
	399, 3210,
	400, 3210,
	401, 3210,
	402, 3210,
	403, 3210,
	404, 3210,
	405, 3210,
	406, 3210,
	407, 3210,
	408, 3210,
	410, 3210,
	411, 3210,
	412, 3210,
	413, 3210,
	414, 3210,
	415, 3210,
	416, 3210,
	417, 3210,
	418, 3210,
	419, 3210,
	420, 3210,
	421, 3210,
	422, 3210,
	423, 3210,
	424, 3210,
	426, 3210,
	427, 3210,
	428, 3210,
	430, 3210,
	431, 3210,
	432, 3210,
	433, 3210,
	434, 3210,
	435, 3210,
	436, 3210,
	437, 3210,
	438, 3210,
	439, 3210,
	440, 3210,
	441, 3210,
	442, 3210,
	443, 3210,
	445, 3210,
	447, 3210,
	448, 3210,
	449, 3210,
	455, 3210,
	456, 3210,
	457, 3210,
	458, 3210,
	459, 3210,
	460, 3210,
	461, 3210,
	462, 3210,
	463, 3210,
	464, 3210,
	465, 3210,
	466, 3210,
	467, 3210,
	468, 3210,
	469, 3210,
	471, 3210,
	472, 3210,
	473, 3210,
	474, 3210,
	475, 3210,
	476, 3210,
	477, 3210,
	478, 3210,
	479, 3210,
	480, 3210,
	481, 3210,
	482, 3210,
	483, 3210,
	484, 3210,
	485, 3210,
	486, 3210,
	487, 3210,
	488, 3210,
	489, 3210,
	490, 3210,
	491, 3210,
	492, 3210,
	493, 3210,
	494, 3210,
	495, 3210,
	496, 3210,
	497, 3210,
	498, 3210,
	499, 3210,
	500, 3210,
	502, 3210,
	503, 3210,
	504, 3210,
	505, 3210,
	506, 3210,
	507, 3210,
	509, 3210,
	510, 3210,
	511, 3210,
	512, 3210,
	513, 3210,
	514, 3210,
	515, 3210,
	516, 3210,
	517, 3210,
	518, 3210,
	519, 3210,
	520, 3210,
	521, 3210,
	522, 3210,
	523, 3210,
	524, 3210,
	526, 3210,
	528, 3210,
	529, 3210,
	530, 3210,
	531, 3210,
	532, 3210,
	533, 3210,
	534, 3210,
	535, 3210,
	536, 3210,
	537, 3210,
	538, 3210,
	539, 3210,
	540, 3210,
	541, 3210,
	542, 3210,
	543, 3210,
	544, 3210,
	545, 3210,
	546, 3210,
	547, 3210,
	548, 3210,
	550, 3210,
	551, 3210,
	552, 3210,
	553, 3210,
	554, 3210,
	556, 3210,
	557, 3210,
	558, 3210,
	559, 3210,
	560, 3210,
	561, 3210,
	563, 3210,
	564, 3210,
	566, 3210,
	567, 3210,
	568, 3210,
	569, 3210,
	570, 3210,
	572, 3210,
	574, 3210,
	575, 3210,
	576, 3210,
	577, 3210,
	578, 3210,
	579, 3210,
	580, 3210,
	581, 3210,
	583, 3210,
	584, 3210,
	585, 3210,
	586, 3210,
	587, 3210,
	588, 3210,
	589, 3210,
	592, 3210,
	593, 3210,
	594, 3210,
	595, 3210,
	596, 3210,
	597, 3210,
	598, 3210,
	599, 3210,
	600, 3210,
	602, 3210,
	605, 3210,
	606, 3210,
	607, 3210,
	608, 3210,
	609, 3210,
	610, 3210,
	612, 3210,
	613, 3210,
	614, 3210,
	615, 3210,
	616, 3210,
	617, 3210,
	618, 3210,
	619, 3210,
	620, 3210,
	621, 3210,
	622, 3210,
	623, 3210,
	628, 3210,
	629, 3210,
	630, 3210,
	631, 3210,
	632, 3210,
	633, 3210,
	634, 3210,
	636, 3210,
	646, 3210,
	647, 3210,
	648, 3210,
	649, 3210,
	650, 3210,
	651, 3210,
	653, 3210,
	654, 3210,
	655, 3210,
	656, 3210,
	657, 3210,
	658, 3210,
	659, 3210,
	660, 3210,
	661, 3210,
	664, 3210,
	667, 3210,
	668, 3210,
	670, 3210,
	671, 3210,
	-2, 0,
	-1, 1997,
	204, 3054,
	571, 3054,
	648, 3054,
	668, 3054,
	-2, 0,
	-1, 2039,
	184, 1952,
	197, 1952,
	302, 1952,
	377, 1952,
	-2, 1890,
	-1, 2141,
	162, 1911,
	184, 1911,
	197, 1911,
	266, 1911,
	302, 1911,
	377, 1911,
	388, 1911,
	590, 1911,
	-2, 2376,
	-1, 2188,
	666, 2198,
	-2, 2188,
	-1, 2205,
	667, 2551,
	-2, 0,
	-1, 2242,
	162, 1911,
	184, 1911,
	197, 1911,
	266, 1911,
	302, 1911,
	377, 1911,
	388, 1911,
	590, 1911,
	-2, 2052,
	-1, 2281,
	668, 2696,
	671, 2696,
	-2, 1308,
	-1, 2282,
	668, 2698,
	671, 2698,
	-2, 1309,
	-1, 2283,
	668, 2697,
	671, 2697,
	-2, 1310,
	-1, 2284,
	671, 2619,
	-2, 1311,
	-1, 2320,
	666, 2199,
	-2, 2187,
	-1, 2337,
	204, 3051,
	668, 3051,
	671, 3051,
	-2, 0,
	-1, 2389,
	1, 918,
	669, 918,
	672, 918,
	-2, 1795,
	-1, 2453,
	1, 1169,
	665, 1169,
	667, 1169,
	669, 1169,
	672, 1169,
	-2, 0,
	-1, 2454,
	1, 1213,
	665, 1213,
	667, 1213,
	669, 1213,
	672, 1213,
	-2, 0,
	-1, 2455,
	1, 1225,
	665, 1225,
	667, 1225,
	669, 1225,
	672, 1225,
	-2, 0,
	-1, 2456,
	1, 1283,
	665, 1283,
	667, 1283,
	669, 1283,
	672, 1283,
	-2, 0,
	-1, 2500,
	1, 1194,
	665, 1194,
	667, 1194,
	669, 1194,
	672, 1194,
	-2, 0,
	-1, 2527,
	1, 1262,
	665, 1262,
	667, 1262,
	669, 1262,
	672, 1262,
	-2, 0,
	-1, 2706,
	242, 325,
	-2, 2704,
	-1, 2707,
	242, 326,
	-2, 389,
	-1, 2832,
	482, 1979,
	483, 1979,
	-2, 2232,
	-1, 2865,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2252,
	-1, 2866,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2253,
	-1, 2867,
	102, 0,
	281, 0,
	282, 0,
	650, 0,
	651, 0,
	-2, 2254,
	-1, 2868,
	102, 0,
	281, 0,
	282, 0,
	650, 0,
	651, 0,
	-2, 2255,
	-1, 2869,
	102, 0,
	281, 0,
	282, 0,
	650, 0,
	651, 0,
	-2, 2256,
	-1, 2870,
	102, 0,
	281, 0,
	282, 0,
	650, 0,
	651, 0,
	-2, 2257,
	-1, 2871,
	102, 0,
	281, 0,
	282, 0,
	650, 0,
	651, 0,
	-2, 2258,
	-1, 2872,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2259,
	-1, 2884,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2271,
	-1, 2885,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2272,
	-1, 2886,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2273,
	-1, 2890,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2280,
	-1, 2896,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2284,
	-1, 2898,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2292,
	-1, 2899,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2293,
	-1, 2900,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2294,
	-1, 2901,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2295,
	-1, 3078,
	5, 2708,
	204, 2562,
	666, 2705,
	-2, 2696,
	-1, 3079,
	204, 2563,
	-2, 3140,
	-1, 3080,
	204, 2564,
	-2, 2921,
	-1, 3081,
	204, 2565,
	-2, 2787,
	-1, 3082,
	204, 2566,
	-2, 2853,
	-1, 3083,
	204, 2567,
	-2, 2906,
	-1, 3084,
	204, 2568,
	-2, 3047,
	-1, 3085,
	204, 2569,
	-2, 2359,
	-1, 3180,
	1, 2053,
	2, 2053,
	114, 2053,
	162, 2053,
	184, 2053,
	197, 2053,
	205, 2053,
	223, 2053,
	226, 2053,
	259, 2053,
	266, 2053,
	278, 2053,
	298, 2053,
	302, 2053,
	342, 2053,
	377, 2053,
	382, 2053,
	388, 2053,
	470, 2053,
	476, 2053,
	590, 2053,
	603, 2053,
	625, 2053,
	626, 2053,
	627, 2053,
	637, 2053,
	665, 2053,
	667, 2053,
	669, 2053,
	671, 2053,
	672, 2053,
	-2, 2052,
	-1, 3196,
	666, 2676,
	-2, 2691,
	-1, 3198,
	1, 406,
	625, 406,
	672, 406,
	-2, 1938,
	-1, 3263,
	38, 2708,
	135, 2708,
	648, 2708,
	664, 2708,
	667, 2708,
	668, 2708,
	671, 2708,
	-2, 2705,
	-1, 3264,
	38, 2709,
	135, 2709,
	648, 2709,
	664, 2709,
	667, 2709,
	668, 2709,
	671, 2709,
	-2, 2706,
	-1, 3369,
	1, 1266,
	665, 1266,
	667, 1266,
	669, 1266,
	672, 1266,
	-2, 0,
	-1, 3572,
	1, 1634,
	464, 1588,
	509, 1588,
	640, 1588,
	645, 1588,
	665, 1634,
	667, 1634,
	669, 1634,
	672, 1634,
	-2, 1938,
	-1, 3686,
	383, 1982,
	-2, 3199,
	-1, 3687,
	383, 1983,
	-2, 3030,
	-1, 3691,
	482, 2630,
	483, 2630,
	-2, 2357,
	-1, 3692,
	482, 2634,
	483, 2634,
	-2, 2358,
	-1, 3693,
	482, 2631,
	483, 2631,
	-2, 2357,
	-1, 3694,
	482, 2635,
	483, 2635,
	-2, 2358,
	-1, 3708,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2282,
	-1, 3709,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2286,
	-1, 3715,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2288,
	-1, 3964,
	1, 913,
	665, 913,
	667, 913,
	669, 913,
	672, 913,
	-2, 1795,
	-1, 4223,
	46, 2667,
	-2, 1366,
	-1, 4228,
	1, 1634,
	665, 1634,
	667, 1634,
	669, 1634,
	672, 1634,
	-2, 1938,
	-1, 4313,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2290,
	-1, 4320,
	272, 0,
	274, 0,
	366, 0,
	-2, 2309,
	-1, 4389,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2338,
	-1, 4390,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2339,
	-1, 4391,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2340,
	-1, 4395,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2344,
	-1, 4396,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2345,
	-1, 4397,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2346,
	-1, 4449,
	666, 2677,
	-2, 2692,
	-1, 4714,
	668, 3319,
	-2, 1864,
	-1, 4757,
	272, 0,
	274, 0,
	366, 0,
	-2, 2310,
	-1, 4760,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2313,
	-1, 4761,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2315,
	-1, 4898,
	668, 2693,
	-2, 1669,
	-1, 5071,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2314,
	-1, 5072,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2316,
	-1, 5083,
	272, 0,
	-2, 2349,
	-1, 5286,
	272, 0,
	-2, 2350,
	-1, 5519,
	54, 0,
	238, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 3162,
}

const sqlPrivate = 57344

const sqlLast = 165179

var sqlAct = [...]int16{
	322, 5682, 3643, 5574, 5744, 3312, 5653, 5447, 5448, 5724,
	5342, 5567, 5592, 4, 3495, 3851, 1120, 6, 5667, 5152,
	1536, 5505, 1121, 10, 5403, 5532, 5387, 5486, 5518, 5334,
	4515, 5462, 4210, 2703, 5533, 1260, 207, 5459, 5534, 2443,
	5438, 5601, 5239, 5259, 2563, 4211, 5224, 5478, 4687, 1592,
	5209, 5530, 1447, 1623, 4353, 5517, 5290, 5036, 5031, 4990,
	4305, 2420, 4026, 2842, 4954, 5025, 3924, 3612, 5092, 5064,
	4698, 3852, 5157, 4706, 3110, 4029, 2794, 4246, 5370, 4148,
	821, 4681, 3256, 4895, 3404, 4605, 3700, 4875, 1252, 3663,
	1041, 2048, 1524, 5041, 4194, 2913, 4098, 3511, 1533, 2792,
	4663, 4645, 2295, 4647, 4178, 4240, 2852, 4679, 4018, 4032,
	2572, 2248, 4199, 5088, 4439, 2370, 4275, 3632, 4273, 897,
	4013, 1041, 3602, 4201, 4198, 3627, 4191, 4172, 2769, 4171,
	4015, 2843, 3857, 3210, 3900, 4014, 3314, 3907, 1528, 1426,
	4452, 3874, 3866, 833, 2015, 3658, 1309, 4796, 207, 1749,
	3629, 1840, 3832, 3855, 2692, 1125, 3644, 3579, 5575, 3524,
	4053, 2584, 3330, 2622, 2690, 2277, 4192, 2013, 2217, 4514,
	1886, 3181, 3173, 935, 2673, 1887, 3891, 4416, 3172, 2214,
	2993, 5291, 2191, 2346, 1891, 3831, 2849, 2119, 2149, 1952,
	2926, 2742, 1115, 1036, 2991, 893, 2667, 3613, 3684, 1644,
	3657, 3541, 2671, 2649, 2551, 2645, 2653, 2368, 1314, 2555,
	1590, 1500, 3254, 3153, 3255, 1743, 3107, 2982, 2910, 1990,
	2218, 1531, 1575, 1319, 2419, 2416, 2790, 1503, 1594, 1510,
	2831, 2814, 3637, 1955, 1514, 3403, 3175, 1625, 2234, 2756,
	1948, 3216, 2812, 870, 2676, 3428, 940, 5725, 2409, 2741,
	4202, 3211, 3389, 1562, 1506, 2183, 1477, 1480, 1465, 2985,
	1043, 2227, 3429, 1430, 1409, 1042, 2691, 913, 5404, 3162,
	1281, 2133, 4894, 3122, 1427, 3074, 2050, 2049, 5483, 2813,
	218, 2815, 1444, 3040, 1263, 878, 2237, 219, 889, 1981,
	1093, 1043, 2963, 133, 808, 1988, 1042, 1915, 831, 852,
	2464, 5593, 316, 1666, 5654, 1682, 2468, 1587, 315, 1850,
	2681, 119, 1295, 1436, 826, 52, 51, 49, 40, 822,
	1407, 835, 2055, 38, 129, 36, 1742, 3738, 1432, 1737,
	1675, 963, 1031, 4430, 3732, 2348, 4431, 2348, 2348, 2348,
	3853, 2348, 2348, 906, 909, 5759, 5747, 5734, 1094, 3152,
	3976, 2065, 2066, 3925, 2098, 2099, 2100, 2109, 2110, 2111,
	5732, 5731, 5691, 5689, 3152, 3152, 5156, 5156, 5623, 5576,
	5528, 5527, 2711, 5577, 2102, 2096, 5558, 5556, 1116, 2025,
	3152, 3152, 5112, 2068, 5553, 5550, 4255, 5515, 5554, 5551,
	5120, 2711, 1047, 5111, 2115, 5514, 5513, 2381, 1050, 2711,
	3668, 5503, 5117, 5501, 5110, 5156, 88, 5156, 1119, 1118,
	1256, 5492, 2121, 5490, 1424, 5156, 5457, 5156, 5421, 5116,
	5156, 2067, 3227, 1047, 5408, 89, 5386, 5384, 2711, 1050,
	2711, 5156, 2087, 5382, 5363, 5311, 5310, 5156, 4979, 3152,
	3152, 5288, 2084, 94, 5273, 3227, 5241, 5233, 4731, 5175,
	4524, 5156, 5115, 2711, 5174, 5163, 3802, 3803, 2711, 2711,
	5162, 5155, 5099, 1245, 5156, 5156, 2711, 5073, 1571, 5051,
	4949, 3227, 4922, 3668, 3152, 5019, 3152, 4856, 4832, 4811,
	4759, 3976, 2378, 4812, 3227, 4722, 104, 4716, 1235, 4268,
	4660, 4268, 4555, 2378, 4661, 1234, 4556, 1571, 4256, 4523,
	3802, 3803, 2791, 4524, 2378, 1517, 3917, 1256, 4445, 4443,
	1410, 1410, 4446, 4444, 4423, 4337, 4333, 4267, 3152, 2711,
	3152, 4268, 2381, 2444, 1949, 2090, 2091, 2092, 2093, 1122,
	3944, 4420, 3850, 3248, 3945, 2073, 3152, 3817, 3941, 3848,
	3747, 3935, 57, 3849, 128, 1257, 3748, 1251, 3843, 3842,
	112, 125, 3152, 3152, 3793, 1462, 3791, 3976, 3794, 1672,
	3792, 3802, 3803, 3222, 3820, 3821, 3822, 3607, 3780, 3778,
	3124, 3749, 3781, 3152, 1676, 3152, 3667, 3654, 2106, 3653,
	3668, 2779, 2116, 2779, 4755, 2711, 1472, 3288, 2988, 2095,
	2097, 3152, 2065, 2066, 1413, 1411, 1414, 3226, 2109, 2110,
	2111, 3227, 2381, 3699, 3208, 3200, 2378, 2381, 3152, 2711,
	3152, 3151, 2112, 5422, 2113, 3152, 2096, 113, 279, 2778,
	5292, 2082, 2083, 2779, 2068, 5283, 5275, 3668, 4420, 3123,
	1317, 5029, 4979, 2381, 2378, 2115, 4923, 4731, 4662, 4655,
	3808, 2104, 3817, 3502, 2577, 3388, 2395, 2710, 3299, 88,
	3607, 4144, 2374, 2121, 2347, 1463, 2088, 3521, 3217, 2212,
	2361, 1463, 2067, 1884, 4573, 4308, 3980, 2235, 89, 2660,
	1646, 4257, 281, 2087, 3192, 3191, 3190, 3189, 3188, 1415,
	1412, 1244, 1243, 2084, 3808, 1242, 94, 1241, 279, 2989,
	1910, 4258, 4816, 3152, 1240, 1239, 1238, 1237, 1233, 1232,
	2006, 1231, 1230, 1229, 1228, 1227, 2114, 1890, 1226, 1225,
	1224, 3359, 5278, 1223, 1222, 1221, 1220, 1219, 1218, 1217,
	1216, 1215, 3802, 3803, 1214, 280, 1213, 2103, 1212, 104,
	2065, 2066, 1211, 2349, 1198, 2349, 2349, 2349, 2118, 2349,
	2349, 1197, 281, 1196, 273, 3808, 1195, 1194, 1193, 1192,
	1191, 1190, 1189, 274, 1676, 1188, 1187, 1186, 1185, 1184,
	1183, 3818, 2068, 1182, 1181, 1180, 2090, 2091, 2092, 2093,
	1179, 1178, 1122, 1177, 1176, 1175, 2073, 1174, 1173, 1172,
	2990, 117, 2987, 220, 1171, 57, 4771, 128, 2065, 2066,
	3737, 1170, 1169, 112, 125, 280, 1168, 1167, 2094, 1166,
	2067, 1165, 1164, 1163, 1162, 3818, 1161, 1160, 1159, 1158,
	1147, 1146, 2096, 1145, 1140, 1139, 1132, 1131, 1130, 2106,
	2068, 1114, 3824, 2116, 2089, 1113, 1112, 1111, 1068, 1067,
	2095, 2097, 1066, 1065, 1064, 1890, 5043, 2378, 2378, 1063,
	216, 1054, 120, 2118, 1053, 124, 1052, 1051, 1013, 2121,
	1012, 904, 903, 220, 902, 3622, 2107, 2378, 2067, 884,
	113, 310, 2082, 2083, 309, 308, 3818, 2151, 307, 2378,
	306, 1538, 1319, 112, 305, 304, 303, 279, 279, 302,
	301, 300, 2104, 299, 4478, 1124, 2378, 2118, 298, 297,
	296, 1123, 2120, 295, 294, 1676, 293, 2088, 292, 1319,
	1319, 1319, 291, 290, 1464, 289, 3808, 288, 287, 286,
	285, 284, 1439, 283, 2073, 282, 3020, 4435, 1474, 2378,
	4269, 3985, 1909, 3903, 3018, 3760, 3743, 3607, 3734, 3819,
	3396, 281, 281, 3846, 3004, 3588, 2238, 2381, 3396, 3274,
	2378, 2374, 3123, 2347, 2807, 3361, 1628, 3334, 2118, 3231,
	3197, 3179, 2549, 2422, 2380, 2992, 2261, 2160, 3002, 179,
	1579, 1580, 1581, 1893, 1738, 4255, 1898, 2062, 1319, 1583,
	1446, 1319, 2073, 3819, 2105, 5543, 222, 5542, 3847, 2118,
	5539, 5516, 5500, 5391, 280, 280, 2079, 2080, 2086, 2108,
	2085, 2081, 1566, 2078, 2076, 2077, 2069, 2070, 2071, 2072,
	2074, 2075, 5280, 273, 273, 1463, 1310, 4781, 2378, 5295,
	5147, 4780, 274, 274, 5087, 5049, 217, 1752, 5028, 3640,
	4794, 221, 1319, 2194, 117, 1628, 2095, 2097, 1319, 1319,
	2193, 4793, 1538, 2151, 3819, 4787, 4786, 3123, 2194, 2094,
	4785, 4778, 1117, 220, 1423, 2193, 4777, 4775, 4770, 2152,
	4767, 2150, 1875, 1463, 4766, 4675, 4659, 1319, 279, 1319,
	2197, 1319, 4654, 4479, 4448, 2089, 4410, 4409, 5045, 4408,
	1628, 4369, 4329, 4324, 3898, 2192, 2158, 3839, 3802, 3803,
	3830, 1904, 3801, 216, 3798, 120, 3797, 1558, 124, 2986,
	3795, 1509, 1513, 2088, 3790, 1538, 3789, 2107, 3813, 3811,
	3812, 3804, 3805, 3806, 3807, 3809, 3810, 1566, 1560, 2118,
	2492, 3788, 281, 3785, 4561, 1957, 1860, 3784, 1628, 1521,
	279, 3783, 3394, 3236, 2716, 3779, 1628, 3759, 1124, 1597,
	1598, 3624, 3742, 2120, 1123, 1319, 3735, 1319, 1855, 3733,
	3655, 3180, 1628, 3811, 3812, 3804, 3805, 3806, 3807, 3809,
	3810, 1319, 2975, 1319, 207, 207, 2759, 1888, 2062, 2714,
	2061, 1676, 5753, 5675, 2153, 280, 5674, 3802, 3803, 5591,
	5589, 2029, 1691, 1448, 281, 2118, 4355, 1552, 5449, 4676,
	5368, 1674, 1586, 5354, 273, 5350, 5349, 5348, 1608, 279,
	1962, 1965, 5328, 274, 5327, 5325, 3814, 3815, 3816, 279,
	279, 5294, 179, 3813, 3811, 3812, 3804, 3805, 3806, 3807,
	3809, 3810, 2010, 5293, 1123, 2105, 1982, 2922, 4571, 222,
	5277, 5271, 1544, 220, 1589, 2916, 5257, 280, 1599, 1600,
	2108, 2085, 2081, 5254, 2078, 2076, 2077, 2069, 2070, 2071,
	2072, 2074, 2075, 281, 3262, 5253, 273, 3930, 5237, 5235,
	1984, 5171, 1873, 281, 281, 274, 5142, 5085, 5012, 217,
	5008, 2089, 3808, 5006, 221, 3802, 3803, 1259, 5004, 1319,
	1319, 1319, 1319, 1319, 1319, 1319, 1319, 1845, 4980, 1637,
	4861, 3844, 4860, 4792, 4732, 220, 1885, 3393, 1442, 4666,
	1745, 4559, 1837, 1842, 4558, 3393, 280, 4539, 4538, 1869,
	4536, 3393, 1566, 1319, 3892, 2215, 280, 280, 4426, 1319,
	2030, 1993, 1995, 1903, 1950, 273, 4413, 4319, 2138, 4270,
	3170, 4232, 4124, 2040, 274, 273, 273, 4064, 4031, 2120,
	3977, 1739, 3764, 3763, 274, 274, 2939, 2940, 2941, 2958,
	2959, 2960, 4676, 3758, 3724, 3601, 3599, 1047, 3421, 5279,
	2200, 3808, 5044, 1050, 220, 1991, 2199, 2961, 2198, 3802,
	3803, 2195, 3623, 2189, 220, 220, 2184, 3804, 3805, 3806,
	3807, 3809, 3810, 2182, 2065, 2066, 1316, 2071, 2072, 2074,
	2075, 3194, 3187, 3150, 3031, 279, 1304, 130, 1897, 3000,
	2137, 2352, 2260, 2216, 2121, 2209, 2208, 2207, 3802, 3803,
	2206, 3820, 3821, 3822, 2205, 2204, 2068, 2203, 2202, 2201,
	2190, 2179, 2140, 2178, 2951, 2177, 2176, 1319, 1319, 1319,
	1293, 4754, 2175, 1319, 2947, 2174, 2173, 2172, 2171, 2170,
	1444, 2169, 1444, 2069, 2070, 2071, 2072, 2074, 2075, 281,
	2168, 2167, 1257, 5297, 2067, 2166, 2165, 1752, 2164, 3808,
	2153, 2139, 2136, 2131, 1551, 1469, 1458, 5296, 5018, 1319,
	4837, 4763, 2283, 1538, 4477, 279, 2005, 4442, 4429, 207,
	2308, 2283, 3818, 1538, 2036, 3746, 1538, 1628, 3185, 3817,
	5113, 1987, 2024, 4839, 2063, 4476, 2065, 2066, 3229, 2152,
	3928, 4261, 280, 2041, 3895, 2134, 2256, 2224, 4067, 130,
	3802, 3803, 4925, 1576, 3496, 5666, 1578, 2952, 2953, 2954,
	2955, 273, 4656, 5358, 5351, 5048, 4965, 2946, 2068, 281,
	274, 4964, 4963, 1593, 2415, 4962, 1847, 4961, 4924, 2037,
	2271, 4818, 2045, 2276, 2044, 4739, 4738, 4737, 4736, 4735,
	1593, 1235, 1593, 3808, 4734, 4733, 1538, 1593, 1234, 4525,
	3639, 4433, 1319, 2196, 2118, 4432, 2067, 4272, 2073, 2577,
	2635, 2291, 2039, 1591, 2245, 4271, 4153, 3979, 3978, 2270,
	3818, 2339, 280, 1593, 2342, 1571, 1319, 2058, 2059, 5535,
	279, 3019, 3808, 1577, 1752, 5619, 2221, 2222, 5617, 3017,
	5531, 273, 1593, 2238, 1236, 2194, 3447, 1987, 4306, 3003,
	274, 4114, 2193, 2956, 2957, 3539, 1968, 1258, 1741, 279,
	4596, 3787, 3786, 3706, 3432, 1574, 1628, 2185, 2186, 1628,
	1628, 1628, 1628, 3001, 2413, 2174, 2387, 1257, 4554, 2401,
	220, 1209, 2286, 2264, 281, 2575, 2333, 2284, 2949, 4033,
	3819, 2286, 1692, 1636, 2383, 1410, 2284, 2988, 4213, 5321,
	4212, 4668, 2118, 5320, 2283, 1566, 2162, 2444, 1438, 3824,
	2174, 2268, 5240, 281, 3818, 4682, 2236, 1572, 1428, 2386,
	279, 4500, 2266, 4501, 5146, 1645, 5564, 5321, 4682, 1319,
	2693, 5026, 3664, 5089, 2359, 4179, 1210, 280, 4969, 2694,
	2364, 4653, 4602, 4593, 2366, 2243, 4684, 4564, 2983, 1646,
	4299, 2371, 1440, 3818, 3962, 2373, 273, 2788, 1422, 4684,
	2725, 279, 2377, 2514, 3853, 274, 280, 2362, 3853, 2246,
	4680, 279, 1319, 3430, 281, 3806, 3807, 3809, 3810, 2213,
	1571, 3853, 4357, 2442, 5683, 273, 2634, 2159, 3819, 5166,
	5717, 2633, 3509, 1571, 274, 220, 2118, 5540, 2989, 2255,
	2254, 2253, 2251, 2449, 2566, 2654, 1257, 2250, 2240, 2249,
	2439, 2118, 1986, 2188, 1047, 281, 279, 3752, 2210, 5555,
	1050, 2389, 4229, 1047, 220, 281, 2752, 280, 2292, 1050,
	5138, 1961, 2385, 2760, 1880, 2118, 1547, 1505, 3518, 2644,
	5552, 4941, 4937, 4251, 2658, 4530, 273, 3515, 3513, 3498,
	3581, 5343, 1568, 2641, 5032, 274, 2950, 1612, 2018, 3813,
	3811, 3812, 3804, 3805, 3806, 3807, 3809, 3810, 280, 2474,
	281, 5456, 4036, 2677, 2286, 5541, 4549, 3636, 280, 2284,
	4163, 5658, 3819, 5620, 5169, 220, 5165, 273, 5144, 2990,
	4300, 2987, 1107, 3966, 1690, 1262, 274, 273, 5621, 2064,
	5202, 4128, 4615, 5198, 4911, 2427, 274, 2428, 1931, 1207,
	3289, 3332, 2506, 5746, 2657, 2644, 2517, 2435, 2436, 2644,
	1578, 3819, 1003, 280, 2120, 2504, 220, 2402, 1986, 1205,
	1203, 1011, 1008, 1628, 1628, 1689, 220, 2408, 5359, 5191,
	1573, 1882, 273, 3968, 1752, 5177, 4972, 5598, 2429, 2430,
	4971, 274, 4613, 4612, 3929, 2433, 2434, 3392, 4604, 3812,
	3804, 3805, 3806, 3807, 3809, 3810, 4579, 3392, 4578, 1628,
	2576, 1578, 4576, 4575, 3390, 4563, 1261, 4522, 4614, 2822,
	4521, 220, 4169, 4168, 3390, 4116, 3916, 3757, 3756, 1924,
	3755, 2453, 2211, 3754, 3710, 3537, 3536, 1577, 1661, 3520,
	1628, 2678, 2573, 4066, 1569, 2265, 1047, 3508, 2630, 3500,
	2639, 2475, 1050, 1108, 1570, 3489, 2650, 3488, 2936, 2937,
	2938, 2962, 2948, 2942, 2669, 2944, 2945, 2943, 2930, 2931,
	2932, 2933, 2934, 2935, 3476, 3465, 3463, 2390, 2745, 5167,
	2500, 2569, 5684, 2820, 876, 1628, 1561, 1628, 1577, 1628,
	4112, 1688, 1610, 3458, 3804, 3805, 3806, 3807, 3809, 3810,
	3457, 2407, 2406, 2655, 2992, 1593, 2415, 1628, 1628, 2069,
	2070, 2071, 2072, 2074, 2075, 4657, 2574, 2704, 2708, 4033,
	5139, 1628, 3437, 3814, 3815, 3816, 3436, 3397, 2583, 2783,
	3813, 3811, 3812, 3804, 3805, 3806, 3807, 3809, 3810, 2528,
	3209, 2643, 1319, 2897, 1319, 876, 2293, 2571, 2570, 2038,
	1439, 1319, 1439, 5659, 1319, 2694, 2308, 2308, 1752, 3036,
	1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319,
	1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319,
	1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319,
	1319, 1319, 1319, 1319, 1319, 1319, 2749, 1319, 2772, 1319,
	1319, 1319, 1319, 2642, 3230, 1984, 2627, 2771, 2444, 2771,
	4909, 2256, 2753, 2766, 2605, 1572, 2709, 2643, 4906, 5599,
	3035, 2643, 3633, 2854, 1572, 1319, 2075, 2744, 2032, 1319,
	1319, 2824, 2410, 1255, 3973, 2696, 2697, 1319, 2986, 2626,
	3810, 1319, 2623, 1319, 1319, 2698, 4859, 2786, 4926, 2640,
	2821, 1752, 2811, 2683, 1571, 2648, 2683, 1319, 1319, 1319,
	1319, 2417, 2418, 1319, 1319, 1319, 1319, 1319, 1319, 1319,
	1319, 2682, 2700, 2686, 2682, 2796, 4113, 1047, 1595, 1596,
	1595, 1596, 3453, 1050, 1883, 1595, 1596, 1638, 2547, 4867,
	1200, 2763, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319,
	1319, 3451, 1319, 2964, 2965, 3242, 2721, 1319, 1926, 2806,
	2774, 1595, 1596, 2776, 3434, 2729, 5661, 2964, 2980, 1444,
	4848, 2822, 1991, 4890, 1991, 2541, 1752, 2983, 2437, 1740,
	1595, 1596, 2819, 1935, 1105, 1444, 1104, 1254, 875, 1491,
	5201, 2755, 3215, 1974, 3028, 1973, 1972, 5214, 1971, 130,
	1568, 1319, 1752, 933, 2033, 2768, 1943, 1646, 2461, 1568,
	3296, 4883, 4866, 1736, 2412, 2912, 3077, 3077, 3091, 2836,
	2964, 2801, 2835, 3111, 3113, 2538, 1552, 2848, 2847, 1687,
	2780, 3121, 2781, 1670, 1538, 2820, 1110, 1109, 2637, 4149,
	1646, 3406, 5620, 3373, 3199, 2912, 3420, 2679, 3354, 875,
	2512, 3224, 3479, 1670, 3517, 2411, 3477, 1927, 3487, 1257,
	2810, 1257, 2809, 2816, 2808, 2928, 2823, 2920, 3697, 4884,
	207, 2577, 5662, 3167, 2918, 3195, 1235, 1750, 1710, 1235,
	1235, 2979, 1538, 2839, 3965, 5336, 2840, 2841, 1573, 3682,
	3516, 1704, 130, 3264, 1550, 4903, 4905, 1573, 2540, 3514,
	3512, 3159, 4146, 2527, 3481, 3030, 1708, 2524, 2454, 1256,
	3032, 3033, 877, 3034, 2498, 4907, 3037, 2245, 3038, 3039,
	1634, 4145, 1538, 1538, 2458, 2818, 931, 4533, 1667, 2452,
	3990, 2462, 3223, 5223, 2684, 4560, 2680, 2043, 2226, 5695,
	5660, 4637, 3283, 3525, 2924, 3391, 2687, 2575, 1611, 3419,
	3480, 2773, 1569, 3989, 3478, 1669, 5537, 3356, 3212, 3244,
	4222, 1569, 1570, 1752, 3469, 3409, 3376, 5726, 2525, 1956,
	4546, 1570, 1009, 877, 2505, 1669, 1442, 2455, 1442, 2685,
	3247, 3158, 1628, 1628, 130, 2977, 130, 2503, 130, 1410,
	2992, 3971, 1009, 1202, 1009, 1009, 5664, 1668, 2526, 2269,
	4858, 1257, 2821, 4638, 5309, 5670, 4346, 3277, 3238, 5308,
	1538, 1257, 1538, 3219, 3239, 1257, 3696, 3117, 3086, 5338,
	3232, 3284, 3115, 3184, 3073, 3317, 3318, 3319, 3320, 2230,
	1954, 3160, 1319, 820, 1566, 3148, 3149, 1319, 3102, 3261,
	994, 3164, 3165, 1156, 1258, 130, 130, 2196, 2243, 2908,
	4970, 3241, 4577, 4636, 3292, 4574, 3721, 4484, 3281, 3253,
	815, 3166, 130, 3171, 130, 1249, 3177, 3178, 3433, 3218,
	4084, 5215, 1628, 4483, 2894, 4482, 4151, 3294, 130, 2802,
	130, 4471, 2906, 2233, 2819, 5213, 3269, 3221, 3213, 3719,
	4470, 4469, 3273, 5211, 3486, 4175, 4167, 4879, 4544, 4110,
	4343, 3981, 2228, 3519, 3240, 4880, 3235, 3285, 3335, 1257,
	3336, 1253, 3267, 2185, 2186, 3464, 4885, 3375, 3328, 4847,
	3456, 3295, 2231, 4901, 4150, 3435, 2308, 3311, 1047, 2537,
	1047, 1684, 4085, 1509, 1050, 1513, 1050, 3272, 2654, 3246,
	3280, 3214, 4904, 3293, 5632, 3249, 5210, 3250, 2548, 3287,
	3372, 3337, 5538, 3303, 4908, 2491, 2490, 5645, 4173, 4882,
	3271, 5644, 1571, 5697, 995, 3286, 2229, 3278, 932, 3689,
	3690, 1571, 3207, 5606, 4520, 4519, 5212, 2658, 4886, 1705,
	1047, 2992, 4083, 4075, 4176, 3982, 1050, 1236, 3290, 3408,
	4986, 4344, 5418, 4249, 3378, 2624, 3380, 4248, 3576, 3325,
	2629, 1752, 2539, 2417, 2418, 2598, 3868, 2413, 2413, 3398,
	2135, 1934, 2580, 1628, 5568, 5663, 3342, 1490, 3344, 1321,
	3346, 3494, 3348, 3349, 3364, 3533, 934, 2348, 3596, 2141,
	930, 2034, 2576, 2147, 2652, 2460, 1538, 3304, 3305, 2902,
	1960, 3306, 3307, 2661, 2689, 4076, 3716, 3360, 2668, 3333,
	1956, 5507, 3395, 5508, 2296, 1319, 3572, 1319, 2892, 1734,
	3577, 4147, 2895, 2903, 2651, 3341, 2577, 2599, 5536, 4106,
	3374, 2904, 1148, 5433, 2581, 2909, 2631, 5130, 3717, 4107,
	4105, 4248, 3722, 5668, 4104, 3439, 4108, 4622, 3454, 1538,
	4020, 1452, 2585, 1201, 5344, 4074, 4101, 4620, 3302, 1149,
	2232, 3497, 4902, 2646, 4151, 3662, 2688, 2262, 1454, 3611,
	3575, 3661, 3967, 1702, 874, 3510, 1881, 2597, 2589, 5337,
	1628, 2891, 3712, 2625, 2579, 4881, 1647, 4048, 1000, 999,
	1467, 1706, 1628, 5000, 1628, 2638, 1449, 5605, 2574, 1628,
	3445, 3446, 3448, 3449, 3450, 3452, 1438, 3401, 1438, 3620,
	3411, 3414, 2911, 2180, 207, 3407, 2239, 3926, 2242, 4158,
	130, 5067, 2636, 4054, 3484, 2919, 2992, 2658, 1319, 3490,
	2647, 2662, 4891, 4892, 1319, 1319, 4516, 996, 3198, 2586,
	3673, 3674, 2567, 3424, 1455, 4826, 3526, 4624, 4047, 1319,
	1440, 5078, 1440, 4827, 2499, 3538, 2655, 3438, 5379, 1439,
	3573, 3574, 5416, 5669, 1549, 3534, 3473, 3474, 2684, 1709,
	2230, 3455, 5630, 4174, 1456, 1439, 3483, 5467, 3276, 3460,
	4056, 3586, 3492, 4943, 1703, 4623, 5693, 3867, 841, 3392,
	1633, 1635, 1319, 1319, 3506, 2457, 2130, 3482, 1319, 1707,
	2451, 3762, 816, 3499, 2423, 5671, 3412, 2042, 3950, 2974,
	5417, 1319, 1319, 2685, 4545, 5371, 4825, 1319, 1319, 1453,
	3530, 5584, 3163, 1319, 2233, 3605, 1157, 3531, 3532, 5698,
	5372, 3583, 5585, 3176, 5677, 3585, 3665, 1256, 4359, 5015,
	3656, 2556, 2905, 3161, 4745, 3333, 2557, 4975, 4836, 3718,
	4626, 4055, 2907, 4472, 1473, 1471, 4746, 4302, 2590, 3720,
	3680, 3666, 5388, 2231, 5473, 5373, 3671, 3327, 1319, 1319,
	1319, 3651, 5065, 997, 1319, 5402, 4109, 5066, 4622, 5256,
	4021, 4984, 3606, 3343, 1319, 3345, 4646, 3347, 4620, 3619,
	1652, 3713, 3615, 4974, 817, 4973, 2893, 4704, 4236, 3652,
	3631, 1319, 2226, 5205, 998, 3642, 1150, 1151, 4094, 3647,
	4092, 3939, 3649, 1047, 3493, 3467, 3650, 1991, 1133, 1050,
	3206, 3659, 5604, 3669, 2740, 2223, 1470, 2621, 1461, 3675,
	3688, 3676, 807, 2591, 2592, 5001, 4674, 5375, 2636, 4399,
	2053, 2511, 3679, 3740, 3741, 1138, 4790, 3381, 3744, 818,
	3383, 819, 3678, 2836, 3736, 2638, 2835, 2052, 3683, 4517,
	2587, 2052, 5374, 1002, 130, 4187, 1513, 2838, 3698, 2558,
	2047, 2578, 2403, 3705, 4621, 2665, 5703, 3908, 4624, 5164,
	5106, 5376, 3677, 1001, 5265, 2349, 4161, 2562, 4582, 2632,
	4093, 4162, 5569, 2230, 2635, 3468, 1319, 1319, 1319, 1319,
	4027, 5318, 4454, 2400, 1267, 1319, 1319, 1319, 4705, 2588,
	1319, 4608, 4583, 3711, 4531, 4529, 4623, 4237, 4227, 4023,
	3621, 3614, 3603, 2767, 1319, 1444, 1752, 2761, 5068, 2754,
	2747, 2724, 2720, 3529, 2828, 4342, 3441, 2663, 5389, 2628,
	5250, 2232, 4496, 1928, 1482, 883, 4414, 2233, 4303, 5439,
	3154, 1319, 3396, 1319, 5405, 2513, 1055, 3876, 2556, 3745,
	4455, 1450, 1444, 2557, 3860, 3861, 2228, 2052, 2396, 2559,
	2564, 4707, 3472, 5037, 3600, 2051, 4747, 2637, 2594, 2051,
	1752, 1492, 5230, 1062, 3841, 5228, 2231, 2664, 4456, 2398,
	5141, 4453, 4039, 3157, 4035, 1444, 4034, 3703, 1752, 3751,
	4464, 3681, 4428, 5583, 2438, 3865, 4462, 3864, 1678, 1677,
	1538, 2799, 3782, 2789, 2712, 2718, 1671, 4465, 3205, 3204,
	1152, 1153, 3203, 1451, 3202, 3862, 3201, 1966, 2308, 1980,
	2229, 3413, 1752, 4095, 3470, 1442, 2399, 3156, 1538, 4651,
	1254, 1257, 3155, 4463, 1978, 2593, 1967, 4935, 4459, 1538,
	2053, 1442, 1155, 4400, 2053, 3264, 2308, 1947, 4581, 4669,
	4670, 5331, 3877, 2560, 2130, 4401, 2426, 5153, 4537, 3942,
	2634, 4991, 4791, 4460, 4748, 2633, 3417, 2522, 2765, 4182,
	3872, 2577, 2674, 5627, 3902, 2051, 2558, 922, 1319, 2829,
	5128, 5122, 1134, 1135, 3870, 4526, 5121, 3580, 3331, 3897,
	1319, 4296, 5445, 3974, 2562, 4621, 3938, 3937, 3915, 3936,
	2850, 2851, 5702, 4060, 5232, 3920, 3875, 3882, 2567, 3919,
	3918, 3836, 3837, 3838, 3670, 923, 3940, 3584, 1949, 3582,
	3442, 3443, 2793, 2595, 1538, 2693, 3933, 3947, 3949, 4129,
	3910, 3911, 3912, 3913, 3854, 3871, 1615, 4587, 3972, 3963,
	3883, 3975, 5332, 3906, 3881, 3885, 3886, 3887, 5390, 3894,
	5249, 3969, 4497, 5377, 2232, 5149, 4853, 4096, 3471, 5378,
	1653, 5136, 5148, 1752, 3869, 4058, 1752, 4852, 2065, 2066,
	2565, 1258, 5154, 1258, 5453, 5436, 2559, 2564, 2853, 1566,
	3956, 3093, 4797, 4417, 5231, 2999, 5109, 2566, 1538, 1654,
	5446, 3261, 2096, 4473, 2308, 3922, 1731, 2533, 5475, 1976,
	2068, 3884, 5631, 5629, 5557, 5217, 4457, 3932, 4022, 5361,
	3890, 1319, 5137, 5352, 4458, 4059, 5119, 4592, 1733, 2702,
	1056, 1057, 3983, 2566, 3943, 4851, 1730, 1538, 1728, 2121,
	5084, 1698, 1236, 3909, 4844, 1236, 1236, 4789, 2067, 4650,
	5333, 3952, 4160, 4489, 1696, 3954, 3955, 4072, 1538, 3921,
	3958, 882, 3959, 3833, 1694, 3960, 1538, 3889, 3948, 3946,
	1665, 1663, 3893, 4527, 3878, 3879, 3880, 1538, 4087, 4461,
	2560, 2995, 3953, 3957, 1660, 1658, 4091, 2425, 4038, 1656,
	1649, 4043, 4002, 4318, 4045, 1979, 1643, 4097, 4297, 2672,
	1641, 1319, 1319, 2914, 4117, 3964, 1136, 1137, 3901, 1752,
	1977, 2657, 4115, 4024, 3934, 3796, 3723, 3604, 1154, 2657,
	1047, 1538, 2561, 1258, 3507, 4001, 1050, 3501, 3431, 3367,
	2554, 3237, 2798, 2141, 2784, 2567, 2723, 2141, 1538, 2546,
	2542, 4139, 2521, 3986, 4071, 3987, 2441, 3988, 2341, 3994,
	4069, 2263, 4051, 2259, 47, 2017, 1735, 2502, 4156, 3834,
	4004, 2466, 2073, 4003, 2998, 4086, 3993, 2047, 4130, 3358,
	3357, 4154, 3309, 4090, 2817, 2719, 4102, 1247, 1683, 994,
	2469, 2340, 3196, 1628, 2338, 1628, 1059, 1058, 2163, 1752,
	2031, 5529, 2552, 1406, 1041, 1628, 1628, 2565, 4007, 4221,
	3264, 1007, 2535, 4159, 1249, 1438, 4125, 5435, 5017, 2534,
	4088, 1975, 4944, 4595, 4473, 1428, 2095, 2097, 4594, 1538,
	4580, 1438, 4948, 4921, 2701, 4010, 4011, 5602, 4138, 4057,
	1732, 2242, 5035, 5030, 5597, 4953, 4939, 1444, 1729, 4228,
	1727, 4936, 2553, 1697, 4872, 4155, 4218, 4037, 4242, 1440,
	4041, 4244, 4082, 4078, 1248, 4065, 1695, 1628, 4079, 4339,
	1060, 1061, 4080, 4241, 4081, 1440, 1693, 4871, 4226, 1628,
	4703, 1628, 1664, 1662, 4693, 4611, 4585, 4073, 4552, 4550,
	4528, 130, 4231, 2088, 4225, 1010, 1659, 1657, 4214, 207,
	207, 1655, 1648, 3634, 3626, 4264, 3618, 3610, 1642, 3597,
	1319, 3594, 1640, 995, 3578, 3275, 3270, 1319, 1319, 4120,
	2717, 1319, 1319, 1319, 4127, 1319, 4126, 2715, 4140, 4235,
	4253, 2695, 2659, 2596, 1319, 2308, 2582, 4177, 2568, 4180,
	4152, 2382, 2379, 1319, 2376, 3484, 2375, 4165, 1319, 2561,
	5512, 2372, 4157, 3300, 1752, 2367, 3261, 2365, 2360, 4131,
	2354, 4133, 2501, 1319, 4137, 1439, 2465, 4238, 4143, 4293,
	2350, 1752, 4141, 2056, 1043, 2118, 1419, 2668, 2275, 1042,
	3466, 2308, 2308, 1319, 1319, 3439, 1319, 1319, 1319, 5621,
	3701, 2404, 5330, 1204, 1206, 3384, 3571, 4184, 3385, 1312,
	4245, 3382, 1439, 1420, 2392, 2393, 5494, 1319, 5396, 4219,
	4224, 1319, 2545, 2308, 2308, 1319, 1319, 1319, 1319, 1319,
	1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319,
	1319, 1319, 1319, 1319, 1319, 1439, 1319, 4321, 4331, 4332,
	3440, 4304, 4223, 5050, 1319, 1319, 2308, 4197, 4294, 4166,
	4250, 1319, 4372, 4960, 4373, 4850, 4262, 4263, 3660, 4259,
	3970, 2089, 2543, 4170, 1319, 1038, 2421, 1933, 5267, 3418,
	3369, 4412, 2577, 5260, 3392, 1444, 1444, 1000, 999, 1319,
	1609, 4715, 994, 3220, 2531, 3659, 130, 130, 4252, 3999,
	207, 3390, 4301, 2057, 3659, 3702, 3392, 1918, 4005, 1476,
	4142, 4006, 2456, 4291, 1725, 1726, 1047, 1249, 4295, 2764,
	1515, 2544, 1050, 3415, 1752, 1516, 2496, 2489, 5493, 2463,
	4912, 4955, 3535, 1421, 1588, 4411, 996, 1538, 1538, 2120,
	1248, 4450, 4328, 4326, 1639, 2391, 911, 5282, 3422, 2065,
	2066, 2065, 2066, 5151, 4798, 1538, 1538, 4338, 4776, 4349,
	2283, 4052, 1538, 3423, 4354, 3444, 3264, 2308, 2060, 2308,
	4345, 4347, 4348, 1545, 1475, 5615, 311, 4361, 1585, 5565,
	4625, 2068, 4368, 3423, 1257, 3593, 5635, 4690, 4370, 1319,
	2748, 1556, 4371, 3515, 3513, 1628, 1142, 4607, 3522, 1628,
	1628, 1752, 4466, 4505, 4403, 4375, 3505, 3503, 3425, 4377,
	1516, 1516, 914, 914, 3427, 4111, 995, 4424, 4425, 2067,
	3504, 2067, 4606, 1701, 2674, 928, 5444, 5423, 3426, 5394,
	5392, 804, 5329, 5251, 5248, 4467, 4468, 5129, 4404, 4701,
	2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 4492,
	4692, 4493, 1319, 4480, 4481, 4673, 4230, 3641, 4421, 4422,
	4490, 3609, 3595, 3118, 2388, 2294, 5665, 5150, 4161, 2556,
	4161, 5276, 997, 4162, 2557, 4162, 3491, 1879, 1878, 1872,
	1250, 3923, 4436, 5701, 4434, 1319, 1319, 4437, 3802, 3803,
	2065, 2066, 4441, 4447, 5634, 4161, 4966, 4164, 5016, 1890,
	4162, 1246, 4419, 998, 2432, 3298, 2431, 3297, 2670, 1889,
	4509, 1614, 3261, 1890, 1890, 4768, 4475, 1613, 2994, 3362,
	3029, 2432, 130, 2431, 130, 4485, 1700, 5572, 4700, 1699,
	2286, 5252, 4491, 4504, 4532, 2284, 5192, 1319, 1319, 4503,
	4957, 4588, 4952, 4951, 4828, 1319, 4824, 4823, 4764, 4513,
	4474, 1442, 4350, 4135, 4132, 3365, 2157, 4494, 3184, 4565,
	4243, 4495, 1002, 2156, 3387, 4510, 1628, 1628, 2550, 2305,
	5686, 5646, 5498, 5427, 1628, 5426, 130, 5425, 5360, 130,
	1000, 999, 1001, 5302, 1628, 130, 5298, 5226, 1442, 1538,
	5181, 5114, 4518, 5108, 5107, 5105, 5104, 2558, 5010, 4570,
	4572, 4985, 4910, 4838, 4822, 4627, 4569, 4821, 4727, 4634,
	4721, 4512, 4629, 4658, 4548, 2562, 4540, 4234, 2308, 4603,
	4233, 1442, 4044, 3996, 3951, 3625, 3598, 3416, 3368, 996,
	3355, 3324, 4597, 4557, 3323, 3322, 3321, 3266, 4562, 4590,
	4591, 3234, 3233, 1319, 4609, 4551, 2923, 4553, 2762, 2735,
	2734, 2733, 2732, 2731, 2730, 2536, 2497, 2488, 2487, 2486,
	2485, 2484, 1047, 1628, 3439, 2357, 2356, 2355, 1050, 1319,
	2353, 4619, 2274, 2273, 4639, 4640, 4708, 1444, 1319, 1942,
	1941, 1940, 1939, 1938, 1937, 4664, 1628, 1439, 1936, 1932,
	4717, 1628, 1628, 1628, 1930, 1929, 4633, 2559, 2564, 1866,
	1865, 1724, 2914, 1723, 1650, 1605, 4649, 4685, 1604, 1603,
	1602, 4618, 1601, 1548, 1499, 1498, 4709, 1628, 4628, 1497,
	1496, 1495, 1494, 2141, 4616, 1493, 4724, 1487, 1486, 1752,
	1485, 1329, 1319, 1319, 4642, 4683, 1484, 4610, 1319, 1319,
	2308, 1483, 1401, 1319, 1319, 4712, 1319, 3526, 2394, 4686,
	4632, 1319, 1208, 4711, 4643, 1199, 5335, 4889, 4888, 4887,
	2532, 2743, 1319, 111, 1925, 997, 3459, 4728, 103, 2666,
	4547, 5566, 5678, 5710, 2726, 2600, 5477, 5476, 1319, 4672,
	5365, 3251, 2351, 4190, 4189, 318, 318, 318, 5571, 810,
	811, 2560, 827, 810, 827, 839, 998, 4691, 881, 2604,
	5222, 4740, 901, 1074, 969, 4742, 5474, 908, 908, 908,
	908, 4689, 318, 4694, 4749, 1913, 1089, 5455, 4710, 4046,
	4762, 318, 3540, 1651, 4644, 5245, 4750, 4648, 2470, 4635,
	4719, 3896, 4718, 3186, 4726, 5415, 4772, 4713, 3761, 5289,
	5077, 1444, 4758, 4725, 2997, 1129, 2567, 1543, 2161, 1444,
	4795, 3845, 318, 1752, 1752, 1002, 1752, 105, 1303, 1351,
	4999, 2308, 4998, 4873, 4534, 4200, 3859, 1444, 4995, 207,
	4994, 2269, 2298, 2300, 1266, 1001, 1755, 1628, 1628, 3126,
	3128, 5506, 2405, 5692, 4743, 2414, 2187, 3076, 1328, 4695,
	1366, 4697, 3927, 1323, 1324, 2302, 1327, 1325, 1326, 1752,
	2181, 1322, 2297, 4008, 4699, 4220, 3645, 4260, 2565, 1985,
	1538, 3647, 1983, 971, 3182, 1439, 1439, 2917, 2981, 3750,
	3888, 1438, 2154, 1282, 3659, 1305, 2978, 1468, 1294, 3873,
	4247, 1428, 3119, 4438, 2827, 1099, 3799, 1752, 3904, 2984,
	1673, 4741, 1457, 3099, 3092, 3088, 1319, 3961, 4788, 3635,
	4806, 4808, 2035, 4009, 4830, 4831, 5091, 1444, 1438, 1444,
	2132, 3646, 4854, 4855, 1582, 1440, 1286, 2915, 1428, 2145,
	3728, 2837, 3931, 4799, 4254, 3899, 4814, 3228, 5485, 4358,
	3363, 4804, 2739, 1418, 1538, 1417, 1466, 1416, 4802, 4800,
	4801, 1438, 4805, 5461, 1752, 5458, 1538, 2656, 5002, 1538,
	4195, 4815, 1440, 4196, 4920, 810, 810, 4865, 4849, 2397,
	3291, 2927, 4817, 318, 4215, 1299, 4929, 3338, 3339, 4932,
	1858, 2519, 1319, 4829, 3997, 1752, 3858, 4671, 4833, 4834,
	4835, 4803, 1896, 1944, 1902, 1440, 1908, 5158, 1311, 2117,
	4845, 4841, 4842, 4843, 4868, 3567, 4846, 3566, 4914, 5324,
	2561, 1567, 1565, 1564, 1563, 5655, 3528, 3523, 2675, 4543,
	4542, 4870, 4541, 1442, 278, 3695, 2054, 2046, 4030, 275,
	277, 1628, 1628, 276, 4050, 4451, 3264, 1319, 1319, 4967,
	4864, 3905, 1616, 5563, 4567, 4181, 4857, 1444, 27, 915,
	4919, 916, 917, 3301, 2424, 1584, 4499, 26, 25, 24,
	23, 134, 4938, 4928, 28, 4940, 4931, 4915, 50, 4942,
	2004, 1538, 2009, 3998, 31, 30, 1750, 5, 22, 178,
	176, 153, 4950, 174, 1752, 173, 2023, 4959, 2028, 1628,
	144, 5020, 172, 171, 170, 169, 168, 167, 175, 166,
	165, 160, 5038, 164, 4900, 163, 162, 4982, 161, 159,
	157, 4933, 158, 152, 1628, 1628, 1628, 1628, 1628, 1628,
	1628, 156, 155, 4916, 4917, 2305, 2305, 154, 5024, 4978,
	5027, 4685, 151, 4981, 1319, 1319, 1319, 4862, 4863, 5021,
	3901, 5014, 5039, 4968, 150, 149, 148, 147, 146, 145,
	143, 4977, 1752, 4976, 177, 142, 141, 1319, 223, 4683,
	1319, 1319, 4987, 140, 139, 4993, 4913, 4997, 138, 137,
	1319, 29, 136, 2308, 5005, 135, 4983, 5011, 1319, 1319,
	5013, 5033, 3261, 5042, 894, 895, 5047, 69, 68, 131,
	132, 4899, 130, 130, 21, 130, 4930, 1752, 48, 1628,
	16, 73, 74, 20, 15, 43, 108, 123, 5040, 122,
	121, 5061, 44, 118, 42, 19, 18, 5069, 17, 116,
	115, 114, 41, 39, 13, 1538, 11, 4956, 5052, 4958,
	4896, 5053, 4896, 45, 5074, 2247, 14, 7, 110, 215,
	212, 1319, 1319, 211, 214, 210, 213, 107, 209, 109,
	208, 1442, 1442, 106, 37, 12, 203, 1752, 4678, 5055,
	97, 206, 205, 5059, 204, 1319, 102, 1439, 202, 201,
	130, 130, 200, 130, 197, 5086, 98, 4992, 1319, 95,
	199, 101, 100, 198, 1434, 96, 99, 1319, 5080, 3904,
	35, 8, 2308, 72, 5097, 5098, 9, 5063, 4298, 5100,
	126, 5101, 1319, 127, 46, 1319, 5135, 5102, 93, 92,
	91, 90, 34, 5023, 71, 5126, 5127, 33, 272, 5003,
	270, 271, 269, 5118, 268, 193, 1319, 248, 5132, 1319,
	5133, 247, 246, 245, 244, 243, 1752, 242, 313, 313,
	806, 241, 1628, 1319, 240, 1628, 1628, 235, 239, 2296,
	5062, 5161, 1538, 237, 236, 5125, 238, 234, 264, 263,
	4896, 262, 261, 5134, 5131, 1628, 5180, 260, 2252, 259,
	258, 5140, 5207, 257, 251, 250, 256, 255, 254, 2566,
	253, 252, 249, 267, 86, 1444, 233, 1444, 232, 231,
	229, 225, 228, 1438, 230, 2850, 4362, 227, 226, 224,
	266, 265, 196, 1428, 5197, 5216, 1258, 87, 191, 192,
	85, 190, 2305, 5183, 189, 5225, 1752, 188, 5182, 1628,
	130, 130, 187, 5178, 186, 185, 5243, 2850, 4378, 5229,
	184, 1439, 5261, 5186, 84, 195, 194, 1440, 32, 1439,
	2, 1, 5194, 0, 4335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5247, 1439, 0, 5206,
	4407, 4351, 5219, 5218, 0, 1319, 2308, 4685, 5220, 5270,
	0, 5272, 5262, 5227, 0, 0, 0, 5172, 5173, 0,
	0, 0, 0, 0, 0, 0, 0, 5242, 0, 5203,
	5204, 1538, 1538, 1538, 0, 4683, 1538, 1538, 1538, 5264,
	1538, 1538, 5184, 5244, 1459, 0, 5185, 0, 0, 0,
	0, 0, 0, 5258, 0, 827, 0, 0, 5193, 5042,
	5195, 5268, 5196, 1319, 5269, 1319, 5263, 1319, 5246, 827,
	0, 0, 5274, 0, 0, 318, 0, 1444, 2832, 2771,
	0, 0, 1489, 0, 0, 0, 5281, 1439, 0, 1439,
	1319, 0, 1444, 318, 0, 318, 318, 0, 1520, 318,
	1525, 1532, 0, 0, 0, 5317, 0, 5319, 5287, 0,
	0, 0, 1546, 5238, 0, 0, 0, 0, 0, 0,
	901, 0, 0, 901, 0, 0, 0, 0, 0, 5299,
	5300, 5301, 5208, 0, 5303, 5304, 5305, 5315, 5306, 5307,
	0, 5316, 0, 2308, 4449, 5312, 908, 0, 0, 5266,
	0, 130, 2493, 0, 0, 5346, 1444, 0, 1444, 0,
	5339, 1438, 1438, 0, 5381, 5340, 0, 0, 4197, 0,
	1606, 1428, 1428, 0, 0, 1444, 0, 5367, 1444, 2301,
	0, 5393, 1628, 1442, 0, 2305, 0, 0, 0, 0,
	0, 0, 1628, 0, 0, 0, 5369, 5234, 5355, 5236,
	0, 0, 0, 1319, 1319, 1440, 1440, 0, 0, 0,
	0, 5357, 0, 1319, 318, 0, 0, 1439, 5362, 0,
	5364, 0, 0, 0, 0, 5366, 0, 0, 0, 3094,
	0, 5380, 0, 0, 0, 5406, 4685, 0, 4896, 0,
	4896, 0, 0, 0, 5398, 0, 5014, 318, 0, 318,
	318, 318, 1520, 0, 318, 318, 0, 5407, 0, 0,
	0, 0, 1532, 5409, 4683, 5412, 5410, 5420, 5411, 0,
	0, 1319, 1319, 0, 0, 1319, 318, 5419, 1892, 1628,
	1538, 5424, 1538, 0, 0, 0, 5428, 5429, 5430, 0,
	0, 0, 0, 0, 1911, 0, 0, 0, 5434, 5460,
	5463, 5356, 0, 0, 1919, 1922, 0, 0, 5452, 0,
	0, 0, 5491, 5489, 5484, 5442, 5443, 0, 0, 0,
	0, 5450, 1946, 0, 1532, 0, 0, 0, 1276, 318,
	318, 5488, 1520, 5465, 5451, 0, 0, 1319, 1319, 1319,
	5509, 0, 5469, 0, 5511, 5464, 0, 1442, 0, 5468,
	0, 0, 0, 0, 0, 1442, 901, 0, 318, 318,
	0, 0, 4030, 0, 5347, 0, 0, 5431, 5432, 5187,
	2011, 5495, 0, 1442, 0, 0, 0, 1319, 5471, 5502,
	5472, 2019, 5413, 5499, 5414, 5510, 1129, 5544, 5549, 0,
	4896, 0, 0, 5523, 5524, 0, 0, 0, 5526, 5525,
	0, 1628, 0, 0, 0, 4896, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5578, 0, 0, 0,
	5582, 5580, 0, 5470, 2566, 5546, 0, 5547, 5383, 0,
	5385, 318, 5588, 0, 0, 0, 0, 0, 0, 5579,
	1319, 5594, 0, 0, 5562, 5570, 0, 5399, 1538, 1538,
	5401, 0, 0, 5590, 5573, 0, 0, 5581, 5560, 5587,
	5225, 0, 5586, 1442, 0, 1442, 0, 0, 5603, 4896,
	0, 4896, 0, 5600, 5596, 0, 0, 0, 0, 5595,
	5622, 0, 0, 0, 2296, 5609, 5610, 0, 4896, 5618,
	1319, 4896, 5616, 0, 0, 0, 5614, 0, 5613, 0,
	0, 0, 5460, 0, 0, 5463, 5628, 5640, 5624, 5626,
	1444, 0, 1444, 0, 0, 5625, 0, 5642, 5651, 5633,
	0, 0, 0, 0, 5487, 5638, 0, 0, 0, 0,
	5641, 0, 0, 0, 5648, 0, 0, 130, 5649, 5647,
	0, 5657, 5637, 0, 5639, 0, 5611, 5612, 5643, 0,
	0, 0, 1538, 1438, 5545, 1439, 0, 1439, 0, 0,
	5672, 0, 0, 1428, 0, 0, 0, 0, 0, 5681,
	5673, 0, 0, 5559, 0, 5679, 5561, 5688, 0, 5685,
	0, 2607, 0, 5696, 0, 0, 1319, 1319, 0, 0,
	0, 0, 0, 1442, 5687, 1319, 1319, 1440, 0, 5694,
	0, 5714, 0, 5708, 130, 4813, 5680, 5718, 0, 0,
	5713, 5719, 5712, 5704, 5699, 6, 5715, 5690, 5729, 0,
	5721, 10, 0, 2617, 0, 0, 5722, 5728, 5727, 0,
	0, 0, 5730, 0, 207, 5733, 0, 5735, 0, 0,
	810, 5723, 0, 0, 5739, 0, 0, 5716, 1538, 0,
	5676, 5740, 5736, 0, 5720, 5742, 5737, 0, 5748, 5749,
	5745, 318, 0, 318, 0, 5743, 5750, 318, 5741, 5705,
	5706, 5738, 5752, 0, 1319, 0, 4810, 5758, 0, 5760,
	1892, 1520, 1532, 318, 5761, 318, 2272, 5755, 5745, 0,
	5757, 0, 2613, 318, 0, 827, 0, 0, 0, 5656,
	0, 0, 318, 0, 0, 0, 5751, 1439, 0, 0,
	0, 0, 0, 0, 0, 0, 5754, 1438, 0, 4840,
	130, 0, 1439, 0, 2358, 1438, 0, 1428, 0, 0,
	0, 0, 0, 5487, 0, 1428, 0, 318, 0, 2065,
	2066, 0, 0, 1438, 0, 0, 318, 320, 5756, 0,
	0, 0, 0, 0, 0, 2610, 0, 1750, 0, 0,
	0, 1440, 0, 2096, 0, 0, 0, 0, 4890, 1440,
	0, 2068, 0, 0, 0, 2301, 2301, 0, 0, 0,
	5707, 901, 5650, 0, 5652, 0, 1439, 1440, 1439, 4285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2121, 0, 0, 0, 4283, 1439, 4883, 1711, 1439, 2067,
	4876, 0, 2615, 0, 4276, 0, 3647, 0, 0, 908,
	0, 908, 0, 4896, 0, 4896, 0, 2305, 0, 4874,
	0, 908, 908, 1438, 0, 1438, 0, 0, 0, 4878,
	1747, 0, 0, 0, 0, 0, 0, 1857, 0, 0,
	0, 3647, 3685, 0, 2305, 2305, 0, 0, 2065, 2066,
	0, 0, 0, 0, 4884, 901, 0, 0, 0, 0,
	0, 0, 318, 88, 0, 0, 0, 1440, 2616, 1440,
	2467, 0, 2096, 0, 0, 318, 0, 318, 0, 318,
	2068, 318, 89, 0, 318, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 4287, 0, 0, 130, 0, 0,
	94, 0, 4877, 0, 2620, 0, 0, 0, 0, 2121,
	0, 0, 2507, 2073, 0, 2508, 4278, 2509, 2067, 2510,
	0, 1442, 0, 1442, 0, 3094, 3094, 0, 0, 2087,
	0, 0, 4277, 0, 318, 318, 318, 318, 0, 0,
	318, 2000, 2001, 104, 0, 0, 0, 2296, 0, 0,
	0, 0, 0, 1438, 3350, 3351, 0, 0, 0, 0,
	1280, 0, 0, 0, 0, 0, 0, 2095, 2097, 0,
	130, 0, 3461, 0, 0, 0, 0, 2608, 0, 0,
	0, 0, 0, 0, 0, 0, 1122, 0, 2618, 130,
	0, 4286, 0, 2305, 0, 0, 0, 1440, 0, 0,
	0, 128, 5075, 0, 0, 2614, 0, 112, 125, 0,
	0, 0, 0, 130, 3462, 0, 0, 0, 0, 0,
	0, 0, 2090, 2091, 2092, 2093, 0, 0, 0, 0,
	0, 0, 2073, 4274, 2088, 0, 2611, 0, 0, 0,
	0, 0, 0, 2609, 0, 0, 0, 5075, 0, 0,
	0, 2619, 2301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5170, 0, 0, 0,
	0, 0, 0, 1442, 113, 0, 0, 0, 0, 0,
	0, 0, 4879, 0, 0, 0, 2095, 2097, 1442, 0,
	4880, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4885, 318, 0, 0, 0, 318, 2853, 0, 0,
	3094, 3094, 3094, 3094, 0, 0, 2118, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2612, 0, 0,
	1439, 0, 1439, 0, 0, 0, 0, 0, 0, 0,
	0, 4289, 0, 0, 4882, 0, 318, 0, 130, 0,
	0, 0, 1442, 2088, 1442, 0, 0, 0, 0, 0,
	0, 0, 0, 4886, 0, 318, 4284, 4279, 4280, 4281,
	4282, 1442, 0, 0, 1442, 0, 318, 0, 0, 0,
	3590, 0, 3592, 318, 0, 0, 2853, 0, 0, 2305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	0, 318, 2089, 0, 0, 810, 0, 318, 4288, 0,
	0, 0, 3725, 3726, 0, 0, 0, 3225, 0, 901,
	0, 0, 0, 1129, 3802, 3803, 0, 3820, 3821, 3822,
	0, 0, 0, 0, 3638, 2118, 0, 3638, 117, 0,
	2296, 0, 0, 0, 0, 0, 0, 4323, 0, 0,
	2257, 0, 0, 0, 0, 1520, 318, 0, 0, 4290,
	881, 0, 0, 0, 901, 0, 2267, 0, 1857, 0,
	2120, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2301, 0, 0, 0, 0,
	0, 1438, 0, 1438, 0, 2094, 0, 216, 0, 120,
	0, 0, 124, 0, 0, 3817, 0, 0, 0, 0,
	4881, 0, 0, 0, 2305, 0, 0, 0, 0, 0,
	0, 2089, 0, 0, 0, 0, 0, 0, 0, 1857,
	0, 0, 0, 0, 279, 1440, 0, 1440, 0, 0,
	0, 0, 1124, 0, 0, 2914, 0, 1871, 1123, 0,
	0, 0, 0, 0, 0, 0, 0, 4891, 4892, 2929,
	2305, 2305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075,
	0, 0, 2440, 0, 0, 0, 0, 0, 281, 2120,
	0, 0, 2305, 2305, 0, 0, 0, 3826, 3827, 3828,
	3829, 0, 3802, 3803, 0, 3820, 3821, 3822, 3808, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 1273, 0,
	0, 0, 0, 0, 0, 2305, 0, 0, 0, 0,
	0, 0, 0, 222, 810, 0, 0, 3120, 0, 0,
	0, 280, 0, 1438, 0, 0, 0, 0, 0, 0,
	318, 0, 0, 0, 0, 2459, 0, 0, 1438, 810,
	273, 0, 0, 0, 0, 0, 318, 0, 810, 274,
	2476, 0, 2478, 217, 2480, 0, 0, 2482, 221, 2483,
	318, 0, 0, 3817, 0, 3824, 130, 1440, 0, 0,
	2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 220,
	318, 1532, 1440, 0, 0, 0, 1442, 318, 1442, 318,
	1892, 0, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1438, 0, 1438, 0, 0, 2515, 2516, 3818,
	0, 0, 0, 0, 0, 2305, 2305, 0, 2305, 0,
	0, 1438, 0, 0, 1438, 130, 0, 0, 130, 0,
	0, 0, 0, 0, 0, 0, 318, 1532, 0, 318,
	827, 0, 827, 0, 0, 0, 1440, 0, 1440, 318,
	0, 0, 318, 0, 0, 0, 3265, 0, 0, 0,
	0, 0, 318, 318, 0, 1440, 3808, 318, 1440, 318,
	0, 0, 0, 0, 1520, 0, 318, 318, 3279, 0,
	1532, 1532, 3282, 0, 0, 0, 0, 318, 0, 0,
	0, 2118, 3802, 3803, 0, 3820, 3821, 3822, 0, 0,
	0, 2143, 0, 0, 0, 2148, 0, 0, 0, 0,
	0, 0, 0, 3825, 0, 0, 1280, 1280, 1280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 908, 908, 0, 0, 908, 908, 0, 0, 318,
	0, 0, 0, 3824, 0, 0, 3315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 1520, 318, 0, 0, 0, 0, 130,
	0, 130, 0, 3817, 3340, 318, 0, 3819, 0, 1520,
	0, 1520, 0, 1520, 0, 0, 0, 3818, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3094, 3094, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1835, 0, 0, 0, 2737, 318,
	318, 318, 318, 1520, 0, 0, 1520, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 2758, 0, 3405, 0,
	0, 0, 0, 0, 4285, 0, 0, 2305, 0, 2118,
	318, 0, 2770, 0, 2770, 0, 3808, 0, 0, 4283,
	2777, 0, 0, 0, 318, 0, 0, 0, 0, 4276,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 3094,
	3094, 3094, 3094, 3094, 3094, 3094, 3094, 3094, 3094, 3094,
	3094, 3094, 3094, 3094, 3094, 3094, 3094, 3094, 3094, 0,
	3094, 3475, 0, 0, 0, 0, 0, 0, 0, 2804,
	901, 0, 0, 0, 0, 901, 0, 0, 0, 3814,
	3815, 3816, 0, 0, 0, 0, 3813, 3811, 3812, 3804,
	3805, 3806, 3807, 3809, 3810, 3819, 1438, 0, 1438, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	4061, 4062, 0, 4063, 0, 0, 0, 0, 2607, 4287,
	0, 3315, 1892, 0, 0, 0, 0, 0, 0, 2305,
	0, 0, 0, 0, 0, 0, 0, 3818, 0, 0,
	1440, 4278, 1440, 0, 0, 0, 0, 2301, 0, 0,
	0, 0, 318, 3587, 0, 0, 0, 4277, 0, 0,
	2617, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 88, 0, 0, 2301, 2301, 0, 0, 0, 0,
	0, 0, 1892, 0, 0, 318, 0, 0, 4121, 4122,
	89, 4123, 0, 0, 318, 130, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3630, 0, 0, 94, 0,
	0, 0, 0, 0, 0, 3405, 4286, 810, 0, 2118,
	0, 0, 0, 0, 0, 0, 1129, 3405, 0, 2613,
	0, 0, 0, 4314, 4315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	2305, 104, 0, 0, 0, 0, 0, 3814, 3815, 3816,
	0, 0, 0, 0, 3813, 3811, 3812, 3804, 3805, 3806,
	3807, 3809, 3810, 0, 0, 0, 0, 0, 0, 0,
	318, 0, 0, 0, 0, 0, 0, 0, 318, 0,
	0, 0, 2610, 3193, 1122, 0, 0, 0, 0, 3802,
	3803, 0, 3820, 3821, 3822, 3819, 0, 57, 0, 128,
	0, 0, 0, 0, 0, 112, 125, 0, 0, 0,
	0, 0, 4322, 2301, 0, 0, 4379, 4380, 4381, 4382,
	4383, 4384, 4385, 4386, 4387, 4388, 4389, 4390, 4391, 4392,
	4393, 4394, 4395, 4396, 4397, 4398, 0, 4402, 0, 2615,
	0, 0, 0, 2065, 2066, 0, 2098, 2099, 2100, 2109,
	2110, 2111, 0, 0, 0, 0, 4289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2096, 0, 0,
	3817, 0, 113, 0, 0, 2068, 0, 0, 0, 0,
	0, 4284, 4279, 4280, 4281, 4282, 2115, 0, 0, 2606,
	0, 0, 0, 0, 1835, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2121, 2616, 1892, 0, 0, 0,
	2758, 0, 0, 2067, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4288, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2084, 0, 0, 0, 0, 2603,
	0, 2620, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2305, 0, 3814, 3815, 3816,
	0, 0, 3308, 0, 3813, 3811, 3812, 3804, 3805, 3806,
	3807, 3809, 3810, 3808, 4290, 0, 0, 0, 0, 0,
	0, 0, 0, 2065, 2066, 3326, 0, 3329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2601, 0, 0, 0, 0, 0, 2096, 0, 2301,
	0, 0, 0, 0, 2608, 2068, 0, 2090, 2091, 2092,
	2093, 0, 0, 1280, 0, 2618, 0, 2073, 0, 0,
	0, 1835, 0, 0, 0, 0, 117, 0, 1617, 0,
	0, 0, 2614, 0, 2121, 0, 3366, 0, 0, 0,
	3824, 2602, 0, 2067, 3802, 3803, 318, 3820, 3821, 3822,
	0, 0, 3377, 1857, 3379, 1857, 0, 0, 0, 0,
	2106, 0, 3386, 2611, 2116, 0, 0, 0, 0, 0,
	2609, 2095, 2097, 0, 0, 0, 0, 0, 2619, 0,
	0, 0, 2305, 318, 3818, 216, 0, 120, 810, 0,
	124, 0, 0, 810, 0, 0, 810, 0, 0, 810,
	810, 0, 0, 2082, 2083, 810, 0, 1863, 810, 0,
	0, 0, 0, 0, 0, 0, 318, 0, 0, 0,
	0, 0, 279, 2104, 2301, 3817, 0, 0, 318, 0,
	1124, 0, 0, 0, 0, 0, 1123, 0, 2088, 318,
	0, 0, 1892, 0, 0, 0, 0, 0, 0, 2921,
	0, 0, 1916, 0, 2612, 0, 0, 2073, 0, 0,
	0, 0, 0, 0, 0, 2143, 2118, 827, 0, 0,
	2301, 2301, 0, 0, 1857, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 0, 0, 0, 318, 318, 0, 0,
	0, 2305, 2301, 2301, 179, 0, 0, 0, 1999, 0,
	0, 2095, 2097, 0, 0, 0, 0, 0, 0, 0,
	2118, 222, 0, 1871, 2014, 0, 0, 0, 3808, 280,
	1871, 0, 0, 0, 0, 2301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 3819, 0, 0, 0, 3984, 274, 3608, 0,
	0, 217, 0, 0, 0, 0, 221, 2758, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2088, 0,
	2094, 3991, 0, 3992, 0, 0, 1892, 1996, 0, 318,
	0, 0, 0, 0, 0, 1520, 318, 0, 318, 0,
	0, 0, 0, 0, 1520, 3824, 2089, 1520, 0, 0,
	0, 3405, 3405, 318, 0, 4016, 4019, 0, 0, 0,
	0, 0, 3405, 0, 2272, 0, 0, 0, 0, 0,
	0, 1835, 0, 3405, 2272, 0, 3405, 2272, 2107, 0,
	2272, 0, 0, 4016, 0, 2301, 2301, 0, 2301, 3818,
	0, 0, 0, 0, 0, 318, 318, 4019, 0, 318,
	2118, 3704, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2120, 2305, 0, 0, 4019, 0,
	318, 0, 0, 0, 2101, 4089, 4019, 0, 0, 0,
	0, 0, 0, 0, 0, 4696, 0, 0, 0, 4100,
	0, 4100, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1520, 0, 0, 3814, 3815, 3816, 0, 0, 0,
	0, 3813, 3811, 3812, 3804, 3805, 3806, 3807, 3809, 3810,
	0, 2118, 0, 0, 0, 3405, 0, 3405, 0, 4136,
	3405, 4019, 0, 0, 3405, 0, 2089, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2105, 0, 4019, 0,
	0, 901, 4744, 0, 5479, 0, 0, 0, 2079, 2080,
	2086, 2108, 2085, 2081, 0, 2078, 2076, 2077, 2069, 2070,
	2071, 2072, 2074, 2075, 0, 0, 0, 0, 0, 0,
	0, 2607, 0, 1520, 0, 0, 0, 0, 0, 0,
	318, 1280, 0, 0, 3094, 1835, 0, 0, 0, 0,
	0, 0, 2305, 0, 2120, 318, 0, 3819, 0, 4188,
	0, 0, 4193, 3405, 0, 0, 318, 0, 0, 0,
	0, 0, 1532, 2617, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 0,
	0, 0, 0, 3630, 0, 0, 1520, 0, 318, 2344,
	0, 3405, 0, 810, 0, 0, 0, 0, 0, 0,
	3405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2301, 1835, 3094,
	0, 0, 2613, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2077, 2069, 2070,
	2071, 2072, 2074, 2075, 0, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2101, 0, 0, 0, 0, 2610, 0, 0, 0, 0,
	0, 0, 0, 1835, 0, 0, 0, 0, 0, 3814,
	3815, 3816, 0, 0, 4356, 0, 3813, 3811, 3812, 3804,
	3805, 3806, 3807, 3809, 3810, 0, 0, 0, 0, 1835,
	0, 2445, 2446, 2447, 2448, 0, 0, 0, 0, 0,
	0, 0, 0, 5480, 0, 0, 0, 0, 0, 2301,
	0, 3914, 2615, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2065, 2066, 0, 2098, 2099,
	2100, 2109, 2110, 2111, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2102, 2096,
	0, 0, 0, 0, 0, 4946, 0, 2068, 0, 0,
	0, 4415, 0, 0, 0, 0, 0, 0, 2115, 0,
	0, 0, 0, 0, 0, 0, 318, 318, 2616, 1857,
	1857, 5083, 0, 0, 0, 0, 2121, 0, 2101, 3094,
	0, 0, 0, 0, 2101, 2067, 0, 0, 0, 0,
	0, 810, 0, 0, 4440, 810, 2087, 0, 0, 0,
	0, 0, 0, 810, 2620, 0, 2084, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5009, 0,
	2301, 0, 0, 0, 0, 0, 1871, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 5022, 0, 3094,
	1835, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 5046, 3995, 0, 3094, 0, 5143, 0, 0, 4000,
	0, 1857, 0, 0, 0, 318, 0, 2608, 3315, 3315,
	0, 0, 0, 4019, 0, 0, 4012, 3282, 2618, 2090,
	2091, 2092, 2093, 0, 0, 0, 0, 0, 0, 2073,
	0, 0, 0, 0, 0, 2614, 0, 0, 0, 1871,
	1871, 0, 0, 0, 3462, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4068, 4070,
	0, 0, 2758, 0, 0, 0, 2611, 0, 0, 0,
	0, 0, 2106, 2609, 0, 0, 2116, 0, 2101, 0,
	0, 2619, 0, 2095, 2097, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2101, 0, 901, 0,
	0, 0, 0, 0, 0, 0, 2112, 0, 2113, 0,
	0, 1916, 0, 5481, 0, 2082, 2083, 0, 0, 0,
	0, 0, 0, 2101, 0, 0, 5123, 0, 2101, 0,
	0, 0, 0, 4584, 2101, 2104, 4586, 0, 0, 4589,
	0, 0, 2746, 0, 0, 0, 0, 4100, 0, 0,
	2088, 0, 0, 0, 0, 0, 0, 2612, 0, 0,
	0, 5482, 0, 318, 0, 2301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2782, 0, 0, 0, 0, 5286, 0, 0, 4019,
	2114, 318, 0, 0, 0, 827, 827, 1532, 1835, 2795,
	2797, 0, 0, 0, 0, 0, 0, 0, 0, 4652,
	0, 2103, 0, 2800, 1871, 1871, 1871, 1871, 0, 4216,
	0, 2101, 2118, 0, 0, 318, 2101, 4667, 0, 0,
	3630, 2272, 0, 0, 0, 0, 318, 0, 0, 0,
	2101, 0, 0, 4688, 0, 2101, 5323, 318, 0, 0,
	0, 318, 0, 318, 0, 0, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 5345, 0, 0, 0, 0, 0, 3405, 318, 0,
	0, 0, 2094, 0, 0, 0, 0, 0, 0, 1129,
	3405, 0, 2301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2089, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2107, 2101, 2101, 2101, 2101, 2101, 2101, 2101, 2101, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2101, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2101, 0, 2120, 4773, 0, 0,
	0, 0, 0, 0, 0, 0, 1280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3098, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2101, 0,
	0, 0, 318, 0, 2101, 0, 0, 0, 1892, 0,
	318, 0, 0, 0, 5353, 0, 0, 0, 2105, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 0,
	2079, 2080, 2086, 2108, 2085, 2081, 0, 2078, 2076, 2077,
	2069, 2070, 2071, 2072, 2074, 2075, 0, 0, 0, 0,
	0, 1532, 1532, 1532, 0, 4779, 0, 0, 0, 0,
	0, 0, 0, 0, 1532, 1532, 1532, 0, 318, 1532,
	0, 0, 0, 5395, 0, 0, 5397, 0, 0, 0,
	3558, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3405, 3405, 0, 4016, 0, 0, 4100,
	3405, 0, 0, 0, 0, 3548, 3546, 0, 4898, 0,
	4898, 1892, 0, 3550, 3552, 3542, 0, 0, 0, 0,
	0, 0, 3405, 0, 2272, 0, 0, 0, 4016, 0,
	1892, 1892, 318, 4019, 0, 2301, 0, 0, 4502, 0,
	2225, 0, 0, 0, 0, 0, 4019, 0, 318, 4019,
	0, 318, 4934, 0, 0, 0, 0, 4100, 3568, 0,
	4100, 0, 0, 0, 4100, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3310, 0, 0, 0, 0, 0,
	0, 0, 0, 3405, 0, 3405, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3315, 0,
	0, 0, 0, 0, 0, 0, 0, 5496, 0, 5497,
	0, 0, 0, 1835, 0, 0, 0, 0, 3069, 3070,
	3071, 3072, 3065, 3066, 3067, 3068, 0, 0, 0, 0,
	0, 0, 0, 3405, 3405, 0, 0, 0, 4898, 0,
	3630, 0, 5007, 0, 0, 0, 0, 0, 4016, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2101, 3370, 318, 0, 1835, 0, 0,
	0, 0, 2301, 0, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 1835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2101, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3045, 3046, 3047, 3048, 3544, 0, 0, 0, 1835,
	0, 0, 0, 0, 0, 0, 3560, 0, 0, 0,
	0, 0, 0, 0, 2758, 3057, 3058, 3059, 3060, 3053,
	3054, 3055, 3056, 3061, 3062, 3063, 3064, 0, 0, 0,
	3559, 3549, 3547, 3551, 3553, 3543, 3545, 3561, 3563, 0,
	0, 0, 0, 1265, 0, 0, 0, 0, 4665, 3555,
	3557, 3565, 0, 0, 0, 1280, 0, 0, 0, 4677,
	1871, 1871, 0, 0, 4440, 0, 0, 1280, 0, 0,
	0, 0, 0, 0, 2758, 0, 2758, 0, 0, 0,
	0, 4702, 0, 0, 0, 3527, 3569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3041, 3042, 3043, 3044, 3049, 3050, 3051, 3052, 0, 0,
	318, 318, 0, 0, 0, 2065, 2066, 0, 0, 0,
	0, 0, 0, 3405, 2272, 0, 2272, 0, 0, 4688,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 2096,
	1835, 0, 0, 1835, 0, 0, 0, 2068, 5159, 0,
	5159, 0, 0, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
	1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
	1871, 1871, 1871, 0, 1871, 901, 2121, 0, 0, 0,
	0, 0, 0, 0, 0, 2067, 0, 0, 4100, 1892,
	0, 0, 0, 1892, 0, 1520, 2087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 3672, 3562, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4019, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4688, 0, 0, 0, 4898, 0, 4898, 0,
	1892, 0, 0, 0, 3405, 4753, 0, 0, 0, 0,
	0, 318, 0, 0, 0, 2101, 1835, 0, 0, 2101,
	0, 0, 0, 0, 5255, 0, 0, 3570, 0, 2090,
	2091, 2092, 2093, 2101, 0, 0, 1892, 3554, 3556, 2073,
	0, 3564, 0, 0, 2101, 2101, 2101, 2101, 2101, 2101,
	2101, 2101, 2101, 2101, 2101, 2101, 2101, 2101, 2101, 2101,
	2101, 2101, 2101, 2101, 2101, 2101, 2101, 2101, 2101, 2101,
	2101, 2101, 2101, 2101, 2101, 2101, 2101, 2101, 2101, 2101,
	0, 4356, 0, 0, 0, 2101, 0, 2101, 2101, 2101,
	2101, 0, 0, 2095, 2097, 0, 1835, 0, 0, 3098,
	3098, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2101, 0, 0, 0, 0, 0,
	4100, 5314, 0, 0, 0, 2082, 2083, 0, 4688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4918, 0, 0, 4898, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2088, 2758, 0, 4898, 0, 2101, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 0, 0, 0, 0, 2101, 0, 0, 2101, 0,
	0, 2101, 0, 0, 2101, 0, 0, 0, 0, 827,
	2101, 2101, 2101, 2101, 2101, 2101, 2101, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4898, 0, 4898,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2118, 0, 0, 0, 4898, 0, 318, 4898,
	0, 1835, 0, 0, 0, 0, 0, 0, 0, 2272,
	0, 0, 0, 0, 0, 0, 0, 0, 1835, 1892,
	0, 1892, 0, 0, 0, 0, 0, 0, 2758, 2101,
	0, 0, 3823, 0, 3098, 3098, 3098, 3098, 0, 5034,
	2101, 0, 2101, 0, 0, 0, 0, 2101, 0, 0,
	1532, 1532, 2094, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 5440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2089, 88,
	0, 0, 0, 5159, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 89, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3405, 0, 0, 0, 0, 0, 94, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 0, 2120, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 104,
	0, 1835, 0, 0, 4356, 2065, 2066, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 1541, 0, 0, 0, 0, 0, 0, 2096,
	0, 1892, 0, 5124, 1857, 0, 0, 2068, 0, 0,
	0, 0, 1122, 0, 0, 0, 0, 0, 0, 1265,
	1265, 1265, 0, 0, 0, 57, 0, 128, 0, 0,
	0, 5145, 0, 112, 125, 0, 2121, 0, 0, 0,
	0, 0, 0, 0, 0, 2067, 0, 0, 1835, 0,
	0, 0, 0, 0, 2085, 2081, 2087, 2078, 2076, 2077,
	2069, 2070, 2071, 2072, 2074, 2075, 2084, 0, 937, 0,
	0, 0, 0, 0, 0, 2065, 2066, 0, 0, 0,
	0, 4688, 0, 0, 0, 0, 0, 0, 1679, 0,
	0, 1685, 0, 0, 0, 0, 0, 0, 0, 2096,
	113, 2101, 2101, 0, 0, 0, 0, 2068, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2758, 0, 0,
	0, 0, 0, 0, 0, 4317, 0, 0, 0, 3405,
	0, 0, 0, 0, 0, 0, 2121, 0, 0, 0,
	0, 4898, 1849, 4898, 0, 2067, 1892, 0, 1867, 2090,
	2091, 2092, 2093, 0, 0, 0, 2087, 0, 0, 2073,
	0, 0, 0, 0, 2770, 0, 2084, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1894, 0, 1899,
	0, 1905, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 88, 0, 0, 0, 0, 0,
	0, 0, 3405, 2095, 2097, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 0, 4312, 0, 0, 0, 3315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 94, 0, 0, 0, 2082, 2083, 3405, 0, 2090,
	2091, 2092, 2093, 0, 0, 2002, 0, 2007, 0, 2073,
	0, 3315, 0, 0, 117, 0, 0, 0, 0, 0,
	0, 2021, 0, 2026, 0, 0, 0, 0, 0, 0,
	2088, 0, 0, 0, 104, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4185, 4186, 0,
	0, 0, 0, 2095, 2097, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 120, 0, 1122, 124, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2101, 0,
	2101, 0, 128, 0, 0, 2082, 2083, 0, 112, 125,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 2118, 0, 0, 0, 0, 0, 1124, 4266,
	0, 0, 0, 0, 1123, 0, 1835, 0, 0, 0,
	2088, 4292, 0, 0, 0, 0, 0, 0, 0, 2122,
	2123, 2124, 2125, 2126, 2127, 2128, 2129, 0, 0, 0,
	0, 5400, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 113, 0, 0, 0, 0,
	0, 0, 2094, 2142, 0, 0, 0, 0, 0, 2155,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 2089, 0,
	0, 0, 0, 0, 0, 0, 0, 2101, 2101, 222,
	3098, 3098, 2118, 0, 2101, 0, 0, 280, 0, 0,
	0, 0, 0, 0, 3823, 3823, 0, 0, 2101, 2101,
	0, 0, 0, 0, 0, 0, 273, 0, 2101, 5454,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 217,
	1835, 1835, 2101, 1835, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2101, 0, 2120, 0, 0, 0,
	0, 0, 2094, 0, 0, 1994, 0, 0, 0, 0,
	0, 0, 0, 1871, 0, 0, 0, 2219, 2219, 2219,
	0, 0, 0, 0, 0, 0, 1835, 5504, 2089, 0,
	0, 0, 0, 3098, 3098, 3098, 3098, 3098, 3098, 3098,
	3098, 3098, 3098, 3098, 3098, 3098, 3098, 3098, 3098, 3098,
	3098, 3098, 3098, 0, 3098, 3823, 3823, 3823, 3823, 117,
	0, 0, 0, 0, 1835, 0, 0, 0, 0, 0,
	0, 0, 0, 1280, 0, 1315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2101, 0, 2085, 2081, 2120, 2078, 2076, 2077,
	2069, 2070, 2071, 2072, 2074, 2075, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	120, 1835, 0, 124, 0, 0, 0, 0, 0, 317,
	317, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1835, 0, 0, 279, 317, 0, 0, 0,
	0, 0, 0, 1124, 0, 1048, 0, 0, 0, 1123,
	0, 4506, 4507, 0, 0, 0, 1265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2085, 2081, 1048, 2078, 2076, 2077,
	2069, 2070, 2071, 2072, 2074, 2075, 0, 0, 0, 281,
	0, 0, 0, 1871, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1835, 0, 0, 222, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1871, 0, 0, 0, 0, 2101, 2494,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 217, 0, 0, 0, 1871, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1481, 0, 0, 0, 0, 0, 0, 0, 1835,
	220, 0, 2529, 0, 0, 0, 0, 0, 0, 1504,
	0, 1504, 1504, 0, 0, 937, 0, 0, 4617, 0,
	0, 0, 0, 0, 0, 0, 0, 2101, 2101, 0,
	0, 0, 0, 0, 0, 0, 4630, 1441, 0, 0,
	0, 0, 0, 0, 1835, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1835, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4723, 0,
	0, 0, 0, 2795, 4729, 4730, 0, 0, 0, 0,
	0, 0, 1280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 1481, 0, 0,
	1859, 937, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1835, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2101, 2101,
	0, 0, 2101, 3823, 3823, 2101, 0, 0, 0, 2101,
	0, 0, 0, 0, 0, 0, 2101, 0, 0, 0,
	0, 0, 0, 0, 0, 937, 937, 0, 0, 2101,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1835, 0, 0, 0, 0, 0, 0,
	0, 0, 2101, 2101, 2101, 2101, 2101, 0, 0, 0,
	0, 0, 0, 2101, 0, 2101, 0, 0, 3823, 3823,
	3823, 3823, 3823, 3823, 3823, 3823, 3823, 3823, 3823, 3823,
	3823, 3823, 3823, 3823, 3823, 3823, 3823, 3823, 0, 0,
	0, 3823, 0, 0, 2101, 2101, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2101, 0, 4819,
	4820, 0, 2826, 0, 2830, 0, 2101, 0, 0, 0,
	0, 2844, 0, 0, 1265, 0, 0, 0, 0, 0,
	2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864,
	2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873, 2874,
	2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884,
	2885, 2886, 2887, 2888, 2889, 2890, 0, 2896, 0, 2898,
	2899, 2900, 2901, 0, 0, 0, 0, 0, 0, 0,
	0, 2065, 2066, 0, 0, 0, 0, 2101, 0, 0,
	0, 0, 0, 0, 0, 2925, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2096, 0, 2142, 0, 0,
	0, 2976, 0, 2068, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2101, 0, 0, 3006, 3009, 3012,
	3015, 0, 0, 3021, 3022, 3023, 3024, 3025, 3026, 3027,
	0, 0, 2121, 0, 1353, 0, 0, 0, 0, 0,
	0, 2067, 0, 0, 0, 2101, 0, 0, 0, 0,
	0, 0, 2087, 0, 3090, 0, 3101, 3103, 3108, 0,
	0, 0, 2084, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2101, 2101, 0,
	0, 0, 0, 2065, 2066, 0, 0, 0, 0, 0,
	0, 0, 0, 2795, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2096, 0, 0,
	0, 0, 0, 0, 0, 2068, 0, 0, 0, 0,
	0, 4311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2121, 2090, 2091, 2092, 2093, 1280,
	0, 0, 0, 2067, 0, 2073, 0, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 0, 0, 0, 317,
	0, 1859, 0, 0, 2084, 0, 5054, 0, 5056, 5057,
	5058, 0, 5060, 0, 0, 0, 0, 317, 0, 317,
	317, 0, 0, 317, 0, 0, 0, 0, 0, 2101,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2095,
	2097, 0, 0, 0, 0, 0, 0, 0, 0, 2065,
	2066, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	2101, 2101, 1859, 3714, 0, 2101, 2101, 0, 0, 2101,
	2101, 2082, 2083, 2096, 2101, 0, 0, 0, 2101, 0,
	0, 2068, 0, 2101, 0, 0, 0, 2090, 2091, 2092,
	2093, 5103, 0, 0, 0, 0, 0, 2073, 3098, 0,
	0, 0, 0, 0, 0, 0, 2088, 0, 0, 0,
	2121, 0, 0, 0, 0, 0, 0, 0, 0, 2067,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2087, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	2084, 0, 0, 0, 0, 0, 1445, 0, 0, 0,
	0, 2095, 2097, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 3352, 317, 317, 317, 0, 3353, 317, 317,
	0, 0, 0, 2082, 2083, 0, 0, 0, 2118, 0,
	0, 0, 0, 3098, 0, 0, 0, 0, 0, 3707,
	1048, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2088, 0,
	0, 0, 0, 2090, 2091, 2092, 2093, 0, 0, 0,
	0, 0, 0, 2073, 5199, 0, 0, 0, 1014, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2094, 0,
	0, 0, 0, 317, 317, 0, 2101, 5221, 0, 0,
	0, 0, 2518, 2520, 1026, 0, 2523, 0, 0, 0,
	0, 0, 0, 0, 2089, 0, 0, 0, 0, 0,
	0, 0, 317, 317, 0, 1024, 0, 2095, 2097, 0,
	0, 0, 0, 0, 0, 0, 0, 2101, 2101, 0,
	2118, 0, 0, 0, 0, 0, 0, 0, 0, 1027,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2082,
	2083, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2120, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2088, 317, 0, 0, 0, 0,
	2094, 0, 0, 0, 1020, 0, 0, 0, 0, 0,
	0, 1035, 0, 0, 0, 0, 0, 0, 0, 2101,
	2101, 2101, 0, 0, 0, 0, 2089, 1025, 0, 0,
	2101, 2101, 3823, 3098, 0, 3589, 0, 3591, 0, 2101,
	0, 0, 2101, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2118, 0, 0, 0,
	2085, 2081, 1019, 2078, 2076, 2077, 2069, 2070, 2071, 2072,
	2074, 2075, 3823, 3098, 2120, 0, 0, 0, 0, 876,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2101,
	0, 0, 2728, 0, 0, 0, 0, 2101, 3098, 0,
	0, 0, 0, 0, 0, 2101, 0, 1022, 0, 0,
	0, 0, 0, 0, 0, 0, 2094, 2101, 0, 2101,
	0, 0, 2518, 0, 0, 0, 0, 0, 0, 2101,
	0, 0, 0, 0, 2122, 2123, 0, 0, 0, 0,
	0, 0, 2089, 0, 0, 0, 0, 0, 0, 1265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2795, 0, 0, 0, 0, 0,
	0, 0, 2085, 2081, 1034, 2078, 2076, 2077, 2069, 2070,
	2071, 2072, 2074, 2075, 0, 0, 0, 0, 0, 0,
	0, 0, 3708, 3709, 0, 0, 0, 0, 3715, 0,
	0, 0, 0, 0, 0, 2241, 0, 1441, 0, 0,
	2120, 317, 0, 0, 0, 3823, 0, 3729, 3730, 0,
	0, 0, 0, 2976, 0, 0, 0, 317, 2241, 317,
	0, 0, 0, 0, 0, 0, 0, 1048, 0, 0,
	0, 0, 0, 0, 0, 0, 1048, 0, 0, 0,
	0, 2101, 3823, 0, 0, 2101, 0, 0, 1016, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3739, 0,
	0, 0, 0, 0, 3823, 0, 0, 0, 0, 0,
	0, 317, 0, 0, 3753, 0, 0, 0, 0, 0,
	317, 1021, 0, 0, 0, 0, 0, 0, 0, 2065,
	2066, 3765, 2098, 2099, 2100, 2109, 2110, 2111, 2085, 2081,
	0, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075,
	0, 0, 2102, 2096, 0, 0, 0, 0, 0, 0,
	0, 2068, 0, 875, 0, 0, 0, 0, 0, 0,
	0, 0, 2115, 0, 0, 0, 0, 0, 0, 1030,
	0, 0, 0, 0, 0, 0, 0, 0, 1018, 0,
	2121, 0, 0, 0, 0, 0, 0, 0, 0, 2067,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3108, 3108, 3108, 0, 0,
	0, 1015, 0, 0, 0, 0, 317, 1028, 0, 0,
	0, 0, 0, 0, 2219, 0, 0, 0, 0, 1048,
	1445, 317, 0, 317, 0, 317, 0, 0, 317, 0,
	317, 1023, 0, 0, 0, 0, 937, 0, 0, 0,
	0, 2101, 0, 3863, 0, 0, 0, 877, 1481, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1017,
	0, 0, 0, 2090, 2091, 2092, 2093, 2101, 0, 0,
	0, 0, 0, 2073, 0, 0, 0, 0, 317, 317,
	317, 317, 0, 0, 317, 0, 0, 1032, 1033, 0,
	1029, 1445, 937, 0, 0, 0, 0, 0, 0, 1445,
	0, 0, 0, 0, 0, 1481, 0, 0, 1481, 0,
	0, 0, 0, 0, 0, 0, 2106, 0, 1504, 3268,
	2116, 0, 0, 1504, 0, 1504, 0, 2095, 2097, 0,
	0, 0, 937, 937, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1445, 0, 0, 0, 0, 0,
	2112, 0, 2113, 0, 0, 2101, 0, 0, 0, 2082,
	2083, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2065, 2066, 0, 0, 0, 1265, 2104,
	0, 0, 0, 0, 0, 0, 860, 0, 0, 0,
	1265, 0, 1445, 0, 2088, 0, 0, 2096, 0, 0,
	1445, 0, 0, 0, 0, 2068, 0, 844, 0, 0,
	0, 0, 845, 0, 0, 0, 1445, 0, 0, 2101,
	1859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 937, 0, 0, 2121, 0, 0, 0, 0, 0,
	0, 0, 0, 2067, 2114, 0, 317, 0, 0, 0,
	1048, 0, 0, 0, 2087, 846, 0, 0, 0, 0,
	0, 0, 0, 0, 2084, 2103, 847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2118, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 848,
	317, 0, 0, 0, 0, 0, 1859, 0, 1859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	0, 4049, 866, 0, 0, 0, 0, 0, 0, 0,
	317, 0, 0, 0, 0, 0, 0, 317, 0, 0,
	0, 0, 0, 0, 0, 849, 2094, 0, 0, 0,
	0, 0, 0, 317, 0, 317, 0, 2090, 2091, 2092,
	2093, 317, 0, 0, 1843, 0, 0, 2073, 0, 0,
	850, 842, 2089, 0, 0, 0, 0, 860, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 851, 0, 0, 844, 0,
	843, 4118, 4119, 845, 2107, 0, 0, 0, 0, 0,
	317, 0, 0, 0, 0, 0, 0, 876, 0, 0,
	0, 2095, 2097, 0, 0, 0, 0, 1859, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2120, 0, 0, 0, 0, 865, 846, 0, 0, 0,
	0, 0, 0, 2082, 2083, 0, 0, 847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	848, 0, 0, 0, 0, 0, 0, 0, 2088, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 866, 0, 0, 0, 0, 0, 0,
	0, 0, 862, 0, 1445, 0, 1445, 0, 0, 0,
	0, 0, 2105, 0, 0, 0, 849, 0, 0, 0,
	0, 1445, 0, 0, 2079, 2080, 2086, 2108, 2085, 2081,
	0, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075,
	0, 850, 842, 0, 2309, 3774, 0, 0, 0, 3775,
	0, 1445, 0, 0, 0, 0, 0, 0, 0, 0,
	2118, 0, 0, 0, 0, 0, 851, 0, 0, 0,
	0, 843, 0, 0, 0, 0, 0, 0, 0, 0,
	873, 0, 853, 0, 0, 0, 0, 0, 876, 0,
	2844, 0, 0, 0, 1441, 0, 1504, 4309, 4310, 0,
	0, 4313, 0, 0, 0, 4316, 0, 0, 0, 0,
	1441, 0, 0, 874, 4320, 854, 865, 0, 0, 0,
	2094, 0, 0, 4327, 317, 0, 0, 0, 3863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4340, 317, 0, 2089, 0, 0, 0,
	0, 1048, 0, 1048, 0, 0, 317, 0, 1445, 0,
	0, 875, 0, 4363, 4364, 0, 4365, 4366, 4367, 855,
	0, 0, 0, 0, 871, 872, 0, 869, 1071, 0,
	0, 0, 0, 862, 0, 0, 863, 4374, 0, 856,
	1445, 4376, 0, 1445, 1445, 1445, 1445, 0, 0, 1075,
	317, 0, 0, 1048, 1076, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 2120, 0, 317, 0, 0, 0,
	0, 0, 0, 0, 4405, 4406, 317, 317, 0, 0,
	0, 317, 0, 317, 0, 0, 0, 857, 0, 864,
	317, 317, 0, 0, 4418, 868, 0, 1077, 858, 1091,
	0, 317, 0, 0, 0, 0, 0, 0, 0, 4427,
	0, 0, 0, 853, 859, 0, 0, 0, 0, 867,
	0, 0, 0, 0, 0, 0, 1078, 0, 0, 0,
	0, 1079, 0, 0, 0, 877, 0, 0, 0, 0,
	0, 0, 0, 0, 874, 0, 854, 861, 0, 0,
	0, 0, 0, 317, 1100, 0, 0, 0, 0, 0,
	0, 1080, 2085, 2081, 0, 2078, 2076, 2077, 2069, 2070,
	2071, 2072, 2074, 2075, 0, 0, 317, 1098, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	0, 0, 875, 0, 0, 0, 0, 0, 0, 0,
	855, 0, 1073, 1070, 0, 871, 872, 0, 869, 4498,
	0, 0, 0, 0, 0, 0, 0, 863, 0, 0,
	856, 0, 0, 0, 0, 0, 0, 1081, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 0, 0,
	0, 0, 0, 0, 1102, 0, 0, 0, 0, 876,
	0, 0, 0, 317, 317, 317, 317, 0, 0, 0,
	0, 0, 0, 317, 0, 0, 0, 0, 857, 0,
	864, 0, 4535, 0, 0, 0, 868, 0, 0, 858,
	0, 0, 0, 0, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 859, 0, 0, 317, 0,
	867, 0, 0, 0, 0, 0, 4566, 1445, 1445, 0,
	0, 0, 317, 0, 0, 0, 877, 0, 1445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 861, 0,
	0, 0, 0, 0, 1101, 0, 0, 0, 0, 0,
	0, 0, 0, 1445, 1096, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4598, 4599, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1445, 317, 0, 0, 1504, 0,
	0, 0, 1859, 1859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1095, 0, 0, 0, 0, 0, 1445,
	0, 1445, 0, 1445, 1082, 0, 1048, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1445, 1445, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1445, 0, 1083, 0, 317,
	0, 0, 0, 2219, 0, 0, 0, 0, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 0, 0, 0, 0, 2219,
	2309, 2309, 1445, 0, 0, 0, 0, 0, 4720, 0,
	0, 0, 0, 875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1069, 0, 0, 1092,
	0, 0, 0, 317, 0, 0, 0, 0, 0, 0,
	0, 1084, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4751, 4752, 317, 0, 0, 0, 4756, 4757,
	1090, 0, 317, 4760, 4761, 0, 2518, 0, 0, 0,
	0, 4765, 0, 0, 0, 0, 0, 0, 0, 1085,
	0, 0, 4769, 1086, 1105, 1445, 1104, 1072, 0, 0,
	1087, 0, 0, 0, 0, 0, 0, 0, 4774, 0,
	0, 0, 0, 0, 0, 0, 1088, 0, 0, 0,
	0, 1097, 0, 0, 0, 0, 0, 1106, 0, 0,
	1103, 0, 0, 0, 0, 0, 0, 877, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1445, 0, 0, 0, 0, 0, 0,
	1445, 0, 0, 0, 0, 0, 0, 0, 0, 1445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 937, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3127, 0, 0, 0,
	0, 0, 0, 2065, 2066, 0, 2098, 2099, 2100, 2109,
	2110, 2111, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2102, 2096, 0, 0,
	0, 3125, 0, 0, 0, 2068, 3129, 0, 0, 0,
	1441, 0, 4947, 0, 0, 0, 2115, 1445, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3130, 0,
	0, 0, 0, 0, 2121, 0, 1445, 1445, 0, 0,
	0, 0, 0, 2067, 0, 0, 0, 1441, 0, 0,
	0, 0, 0, 0, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2084, 0, 0, 4988, 4989, 0,
	3131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2241, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 0, 0, 0, 3132,
	0, 0, 0, 1048, 0, 0, 3133, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3134,
	0, 0, 0, 0, 0, 0, 0, 2090, 2091, 2092,
	2093, 0, 0, 0, 0, 0, 317, 2073, 0, 0,
	317, 317, 0, 0, 5070, 5071, 5072, 0, 0, 0,
	0, 0, 1040, 0, 0, 0, 0, 0, 0, 0,
	2309, 0, 0, 0, 0, 0, 0, 2844, 0, 0,
	5081, 5082, 0, 0, 0, 0, 0, 0, 0, 0,
	2106, 0, 3135, 1040, 2116, 0, 0, 0, 5090, 5093,
	0, 2095, 2097, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3136, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3137, 2112, 0, 2113, 0, 0, 0,
	0, 0, 0, 2082, 2083, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 0, 1445, 0, 0, 0, 3138,
	317, 0, 317, 2104, 0, 0, 0, 1445, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 2088, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5160, 0,
	0, 0, 0, 0, 0, 0, 0, 5168, 0, 317,
	317, 0, 0, 317, 0, 0, 0, 0, 2114, 0,
	2241, 0, 5176, 0, 0, 1265, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 0, 0, 0, 0, 2103,
	0, 0, 0, 0, 0, 0, 5188, 0, 0, 5190,
	2118, 3139, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5200, 1445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1445, 0, 1445, 0,
	0, 0, 0, 1445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 937,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2094, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3140, 3141, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2089, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3142, 0, 317, 0, 0, 0, 0, 0,
	0, 0, 3147, 0, 0, 0, 0, 0, 2107, 1048,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 0, 0, 3143, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2518, 0, 0, 0, 0, 3144, 0,
	0, 0, 317, 0, 2120, 0, 0, 0, 0, 0,
	0, 0, 1441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5322, 0, 0, 0, 5326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3146, 0, 0, 0, 0, 317,
	0, 0, 0, 0, 0, 0, 2105, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2079, 2080,
	2086, 2108, 2085, 2081, 0, 2078, 2076, 2077, 2069, 2070,
	2071, 2072, 2074, 2075, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2065, 2066, 0, 2098, 2099,
	2100, 2109, 2110, 2111, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2102, 2096,
	0, 0, 0, 0, 0, 0, 0, 2068, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2115, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2844, 0, 2121, 0, 0, 0,
	0, 0, 0, 5093, 0, 2067, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2087, 0, 0, 1445,
	1445, 0, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1441, 1441, 0, 0, 0, 0, 1445, 0, 0, 0,
	0, 0, 1265, 0, 937, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1445,
	0, 0, 1445, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2090,
	2091, 2092, 2093, 0, 0, 0, 0, 0, 0, 2073,
	0, 0, 2309, 0, 0, 1048, 1445, 5522, 5522, 5522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2309, 0, 0, 0, 0, 0, 0, 2518, 0, 317,
	0, 0, 2106, 0, 0, 0, 2116, 5548, 0, 0,
	0, 0, 0, 2095, 2097, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 937, 0, 0, 0, 2112, 0, 2113, 0,
	0, 0, 0, 0, 0, 2082, 2083, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2104, 0, 0, 0, 0,
	5522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1445, 0, 0,
	1445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	5636, 0, 0, 0, 0, 0, 0, 0, 1330, 0,
	2114, 0, 0, 0, 0, 0, 0, 0, 2309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2103, 0, 0, 0, 0, 0, 317, 0, 0,
	0, 0, 2118, 0, 0, 0, 0, 0, 1629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 319, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	0, 0, 0, 0, 0, 0, 5522, 5700, 319, 0,
	0, 0, 2094, 0, 0, 0, 0, 0, 0, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1753,
	317, 0, 0, 1445, 0, 0, 0, 1629, 2089, 319,
	0, 317, 0, 0, 0, 317, 0, 317, 0, 0,
	0, 0, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1859, 0, 0,
	2107, 0, 1441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1629, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2120, 1445, 0, 1445,
	0, 0, 0, 1445, 0, 0, 0, 0, 0, 1445,
	1445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1629, 0, 0, 0, 0, 0, 0, 0, 1629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1629, 0, 0, 0, 0, 0,
	0, 1445, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1445, 0, 0, 0, 0, 0, 0, 2105, 0,
	0, 0, 0, 1445, 0, 1445, 0, 0, 0, 0,
	2079, 2080, 2086, 2108, 2085, 2081, 0, 2078, 2076, 2077,
	2069, 2070, 2071, 2072, 2074, 2075, 0, 0, 0, 0,
	0, 2972, 0, 0, 0, 2973, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1441, 0, 0, 0,
	0, 0, 0, 0, 1441, 0, 0, 0, 0, 2309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2241, 0, 0, 0, 0, 0, 1445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1445, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2309, 2309, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2309, 2309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2241, 0, 2241, 0, 0, 0, 0, 0,
	2309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1445,
	1445, 0, 317, 0, 0, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 937, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1445, 0,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1753,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2309, 0, 2309, 2282, 0, 0, 0, 0, 0,
	0, 0, 2241, 2282, 0, 0, 0, 0, 0, 1629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1445,
	0, 0, 0, 1445, 1445, 1445, 0, 0, 0, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1753, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1629, 0,
	0, 1629, 1629, 1629, 1629, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2282, 0, 0, 0,
	1445, 1445, 0, 0, 317, 317, 0, 0, 1445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 0, 0, 0, 0, 1445, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 1445, 319, 319, 0, 0, 319, 0, 317, 0,
	1445, 0, 0, 0, 0, 1445, 1445, 1445, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2241, 1445, 2241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1445, 0, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 2309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1320,
	0, 0, 0, 0, 1631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1629, 1629, 0, 0, 0,
	0, 319, 0, 0, 0, 0, 1753, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1629, 0, 0, 319, 1631, 319, 319, 319, 0,
	0, 319, 319, 1631, 0, 1445, 0, 0, 0, 0,
	0, 0, 0, 1445, 0, 0, 0, 1445, 1445, 0,
	1445, 0, 1629, 319, 0, 2309, 0, 0, 0, 0,
	0, 1445, 2241, 0, 0, 0, 0, 0, 0, 0,
	0, 1445, 1445, 0, 0, 0, 0, 2241, 1631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1445, 0, 0, 0, 1629, 0, 1629,
	0, 1629, 0, 0, 317, 0, 319, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1629,
	1629, 0, 0, 0, 0, 0, 1631, 0, 0, 0,
	0, 1445, 0, 1629, 1631, 319, 319, 0, 0, 0,
	0, 2241, 0, 2241, 0, 0, 0, 0, 0, 0,
	1631, 1445, 0, 1445, 0, 0, 0, 0, 0, 0,
	2241, 0, 317, 2241, 0, 0, 0, 0, 0, 0,
	1753, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1753, 0, 1445, 1445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1445, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1445, 0,
	0, 0, 0, 1445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1445, 1445,
	1445, 1445, 1445, 1445, 1445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1753, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1445, 0, 1445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1631, 0, 0, 0, 0,
	319, 319, 319, 0, 0, 0, 0, 0, 0, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	0, 0, 0, 0, 0, 1631, 0, 0, 0, 0,
	0, 1445, 0, 0, 0, 2241, 0, 2241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 0, 1753, 2309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1629, 1629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1445, 0, 0, 0, 0, 0, 1445, 0, 0, 1445,
	1445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1631, 0, 0, 0, 0, 0, 0, 1445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1445,
	0, 1445, 0, 0, 1631, 0, 0, 1631, 1631, 1631,
	1631, 0, 0, 0, 1629, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	1445, 0, 0, 1445, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 0, 319, 0, 319, 0, 319, 0,
	0, 319, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2309, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 88, 0, 54, 53, 0, 0, 0,
	0, 319, 319, 319, 319, 0, 0, 319, 0, 0,
	0, 0, 89, 0, 0, 0, 82, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	94, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 75, 0, 1753, 0, 0, 0, 0, 56, 0,
	181, 1445, 0, 0, 0, 1629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1445, 0, 0, 0,
	55, 0, 0, 104, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 58, 76, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 0, 0, 0, 0, 65, 2309, 0, 0,
	0, 83, 0, 0, 0, 0, 0, 0, 0, 57,
	1445, 128, 1445, 0, 0, 0, 0, 112, 125, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 1445,
	0, 0, 1445, 0, 0, 0, 1445, 0, 0, 0,
	0, 0, 1629, 0, 0, 0, 1445, 0, 0, 319,
	0, 1631, 1631, 319, 1629, 1630, 1629, 0, 0, 0,
	0, 1629, 1631, 60, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 0, 0, 1631, 0, 0,
	0, 0, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 0, 0, 0, 0, 0, 1631, 0,
	0, 0, 0, 319, 0, 0, 1754, 0, 0, 0,
	319, 0, 0, 1445, 1630, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 0, 319, 0,
	0, 0, 0, 0, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 1631, 0, 1631, 0, 1631, 0, 78,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1630,
	0, 0, 0, 0, 0, 1631, 1631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1631,
	0, 0, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1630, 0, 0,
	0, 0, 0, 0, 0, 1630, 1631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 0,
	0, 1630, 0, 0, 0, 1445, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 61, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 64, 0, 0, 0, 0, 67, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 66, 216, 0, 120,
	0, 0, 124, 0, 0, 0, 0, 0, 62, 0,
	0, 0, 182, 0, 0, 0, 0, 0, 0, 1631,
	63, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 70, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 0, 0, 1445, 0, 1445, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	0, 0, 0, 0, 1631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 319, 0, 0,
	1631, 0, 0, 0, 0, 0, 80, 0, 0, 0,
	0, 0, 1753, 222, 0, 0, 0, 319, 0, 0,
	0, 280, 0, 0, 319, 0, 319, 0, 0, 319,
	1753, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 217, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 1753, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 0, 0, 319, 0, 0, 220,
	0, 0, 3, 0, 0, 0, 319, 0, 0, 319,
	0, 1631, 0, 0, 0, 0, 0, 0, 0, 319,
	319, 0, 0, 0, 319, 0, 319, 0, 0, 0,
	0, 0, 0, 319, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 0, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2065,
	2066, 0, 2098, 2099, 2100, 2109, 2110, 2111, 0, 0,
	0, 0, 0, 0, 0, 0, 1630, 0, 0, 0,
	0, 1631, 2102, 2096, 0, 0, 0, 0, 0, 0,
	0, 2068, 0, 0, 0, 0, 319, 0, 0, 0,
	1631, 1631, 2115, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	2121, 319, 0, 0, 0, 1753, 0, 0, 1753, 2067,
	0, 0, 319, 0, 0, 0, 0, 0, 0, 0,
	2087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 0, 0, 1754, 0, 0, 0, 0, 0, 0,
	1631, 0, 0, 0, 0, 0, 319, 319, 319, 319,
	0, 0, 0, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 1630, 0, 0, 1630, 1630,
	1630, 1630, 0, 0, 0, 0, 0, 319, 0, 0,
	0, 0, 0, 2090, 2091, 2092, 2093, 0, 0, 0,
	0, 319, 0, 2073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 0, 0, 0, 0,
	0, 1753, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2106, 0, 0, 0,
	2116, 0, 0, 0, 0, 0, 0, 2095, 2097, 0,
	2065, 2066, 0, 2098, 2099, 2100, 2109, 2110, 2111, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 1631,
	2112, 0, 2113, 2102, 2096, 0, 0, 0, 0, 2082,
	2083, 1631, 2068, 0, 0, 1629, 0, 1629, 0, 0,
	0, 1753, 0, 2115, 0, 0, 1040, 1629, 1629, 2104,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2121, 0, 0, 2088, 0, 0, 0, 0, 319,
	2067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2087, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2084, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 0, 0, 0, 0, 0, 0, 1629,
	0, 319, 0, 0, 2114, 0, 0, 0, 0, 0,
	0, 1629, 0, 1629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2103, 0, 0, 1631, 0,
	0, 0, 0, 0, 0, 0, 2118, 0, 0, 0,
	1631, 0, 1631, 0, 0, 0, 0, 1631, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 2090, 2091, 2092, 2093, 0, 0,
	0, 0, 1630, 1630, 2073, 0, 0, 0, 0, 0,
	0, 0, 0, 1754, 0, 0, 1753, 319, 0, 0,
	0, 0, 0, 0, 0, 319, 2094, 0, 0, 0,
	0, 0, 0, 1753, 0, 0, 0, 0, 1630, 0,
	0, 0, 0, 0, 0, 0, 0, 2106, 0, 0,
	0, 2116, 2089, 0, 0, 0, 0, 0, 2095, 2097,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1630,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2112, 0, 2113, 2107, 0, 0, 0, 0, 0,
	2082, 2083, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2104, 0, 0, 0, 1630, 0, 1630, 0, 1630, 0,
	2120, 0, 0, 0, 0, 2088, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1630, 1630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1630, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2114, 1753, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1754, 0, 0,
	0, 0, 0, 0, 0, 0, 2103, 0, 0, 0,
	0, 0, 2105, 0, 0, 0, 0, 2118, 0, 0,
	0, 0, 2282, 0, 2079, 2080, 2086, 2108, 2085, 2081,
	0, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4325,
	0, 0, 0, 0, 0, 0, 0, 1629, 0, 0,
	0, 1629, 1629, 1753, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2094, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1754, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2089, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2107, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 0, 0, 1631, 0,
	0, 2120, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1631, 0, 0, 0,
	0, 1754, 0, 0, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1631, 0, 0, 0, 0, 0, 0, 0, 1629, 1629,
	0, 0, 0, 0, 0, 0, 1629, 0, 0, 0,
	0, 0, 0, 1631, 0, 0, 1629, 0, 0, 0,
	0, 0, 0, 2105, 0, 0, 0, 0, 0, 319,
	0, 0, 0, 319, 319, 2079, 2080, 2086, 2108, 2085,
	2081, 0, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074,
	2075, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3777, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1629, 0,
	0, 0, 1754, 1629, 1629, 1629, 319, 0, 0, 0,
	0, 1631, 0, 319, 1631, 319, 0, 0, 0, 0,
	0, 1630, 1630, 0, 0, 0, 0, 0, 0, 1629,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1753, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 319, 0, 0, 319, 0, 0, 0,
	0, 0, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1753, 1753, 0, 1753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1629,
	1629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1753, 0, 0, 0, 0, 0, 319, 0, 0,
	0, 1631, 0, 1631, 0, 0, 0, 1631, 0, 0,
	0, 0, 319, 1631, 1631, 0, 0, 0, 1631, 0,
	1754, 0, 0, 319, 0, 0, 0, 0, 0, 1753,
	0, 0, 1630, 2065, 2066, 0, 2098, 2099, 2100, 2109,
	2110, 2111, 0, 0, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2102, 2096, 0, 0,
	0, 0, 0, 0, 0, 2068, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1631, 2115, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1753, 1631, 0, 1631,
	0, 0, 0, 0, 2121, 0, 0, 0, 0, 0,
	0, 0, 0, 2067, 0, 2065, 2066, 0, 2098, 2099,
	2100, 2109, 2110, 2111, 2087, 0, 0, 1753, 0, 0,
	0, 0, 319, 0, 2084, 0, 0, 0, 2102, 2096,
	0, 0, 0, 0, 0, 0, 0, 2068, 0, 1630,
	0, 0, 0, 0, 0, 0, 0, 0, 2115, 0,
	0, 1630, 0, 1630, 0, 0, 0, 0, 1630, 0,
	0, 0, 1631, 1629, 1629, 0, 2121, 0, 0, 0,
	0, 0, 0, 0, 0, 2067, 0, 0, 0, 1631,
	0, 0, 0, 0, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2090, 2091, 2092,
	2093, 0, 0, 0, 0, 0, 1753, 2073, 0, 0,
	0, 1629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1629, 1629, 1629, 1629,
	1629, 1629, 1629, 0, 0, 0, 0, 0, 0, 0,
	2106, 0, 0, 0, 2116, 0, 0, 0, 0, 0,
	0, 2095, 2097, 0, 0, 0, 0, 0, 0, 2090,
	2091, 2092, 2093, 0, 1753, 0, 0, 0, 0, 2073,
	0, 0, 0, 0, 2112, 0, 2113, 0, 0, 0,
	0, 0, 0, 2082, 2083, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1631, 2104, 0, 0, 0, 0, 0, 1753,
	0, 1629, 2106, 0, 0, 0, 2116, 0, 2088, 0,
	0, 0, 0, 2095, 2097, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 0,
	0, 0, 0, 0, 1631, 0, 2112, 0, 2113, 0,
	0, 0, 0, 0, 0, 2082, 2083, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2114, 1753,
	0, 0, 319, 1631, 0, 2104, 0, 1631, 1631, 1631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2103,
	2088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2118, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2114, 0, 0, 0, 0, 0, 0, 0, 1753, 0,
	0, 0, 0, 0, 1629, 0, 0, 1629, 1629, 0,
	2094, 2103, 0, 0, 0, 1754, 0, 0, 0, 0,
	0, 0, 2118, 0, 0, 0, 0, 1629, 0, 0,
	0, 0, 0, 0, 0, 0, 2089, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2107, 1754,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 0,
	319, 1629, 2094, 0, 0, 0, 0, 1754, 0, 0,
	0, 0, 0, 0, 1631, 1631, 0, 0, 0, 0,
	0, 0, 1631, 0, 2120, 0, 0, 0, 2089, 0,
	0, 0, 1631, 0, 0, 0, 0, 0, 319, 0,
	0, 1754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2107, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 0, 2120, 0, 319, 0,
	319, 0, 0, 0, 0, 319, 2105, 0, 0, 0,
	0, 1631, 0, 0, 0, 0, 0, 0, 2079, 2080,
	2086, 2108, 2085, 2081, 0, 2078, 2076, 2077, 2069, 2070,
	2071, 2072, 2074, 2075, 1631, 0, 0, 0, 0, 1631,
	1631, 1631, 0, 3776, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1631, 2105, 0,
	0, 0, 1754, 0, 0, 1754, 0, 0, 0, 0,
	2079, 2080, 2086, 2108, 2085, 2081, 0, 2078, 2076, 2077,
	2069, 2070, 2071, 2072, 2074, 2075, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3773, 0, 0, 0, 0,
	0, 0, 0, 0, 1629, 2065, 2066, 0, 2098, 2099,
	2100, 2109, 2110, 2111, 1629, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2102, 2096,
	0, 0, 0, 0, 0, 0, 0, 2068, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2115, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2121, 0, 0, 0,
	0, 0, 0, 0, 0, 2067, 0, 0, 0, 0,
	0, 1631, 1631, 0, 1631, 0, 2087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 1754, 0,
	0, 1629, 0, 0, 0, 1631, 1631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1631, 0, 0,
	0, 0, 0, 0, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1631, 0, 0, 0, 0,
	0, 0, 1630, 0, 1630, 0, 0, 0, 1754, 2090,
	2091, 2092, 2093, 0, 1630, 1630, 0, 0, 0, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1631, 1629, 0, 319, 0, 0, 319, 0,
	0, 0, 2106, 0, 0, 0, 2116, 0, 0, 0,
	0, 0, 0, 2095, 2097, 0, 1630, 0, 0, 0,
	0, 0, 0, 1631, 0, 0, 0, 0, 1630, 0,
	1630, 0, 0, 319, 0, 0, 2112, 0, 2113, 0,
	0, 0, 0, 0, 0, 2082, 2083, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2104, 0, 0, 0, 1631,
	1631, 0, 0, 0, 1631, 0, 0, 0, 0, 0,
	2088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1754, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 0, 0, 0, 0, 0, 0, 0,
	1754, 0, 1631, 319, 0, 0, 0, 1631, 0, 0,
	2114, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2103, 1631, 1631, 1631, 1631, 1631, 1631, 1631, 0,
	0, 0, 2118, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1631, 0, 1631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2089, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1754, 0, 2065, 2066, 0, 2098, 2099,
	2100, 2109, 2110, 2111, 0, 0, 0, 319, 319, 0,
	2107, 0, 0, 0, 0, 0, 0, 0, 2102, 2096,
	0, 0, 0, 0, 0, 1631, 0, 2068, 0, 0,
	0, 0, 0, 0, 0, 319, 0, 0, 2115, 0,
	0, 0, 0, 0, 0, 0, 2120, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2121, 0, 0, 0,
	0, 0, 0, 0, 1630, 2067, 0, 0, 1630, 1630,
	1754, 0, 0, 0, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1631, 0, 0, 0, 0, 0,
	1631, 0, 0, 1631, 1631, 0, 0, 0, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 0, 2105, 0,
	0, 0, 0, 1631, 0, 0, 0, 0, 0, 0,
	2079, 2080, 2086, 2108, 2085, 2081, 0, 2078, 2076, 2077,
	2069, 2070, 2071, 2072, 2074, 2075, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3772, 0, 0, 319, 2090,
	2091, 2092, 2093, 0, 0, 0, 0, 0, 0, 2073,
	0, 0, 0, 0, 1631, 0, 0, 1631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2106, 0, 0, 0, 2116, 0, 0, 0,
	0, 0, 0, 2095, 2097, 1630, 1630, 0, 0, 0,
	0, 0, 0, 1630, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1630, 0, 0, 2112, 0, 2113, 0,
	0, 0, 0, 0, 0, 2082, 2083, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2088, 0, 2065, 2066, 0, 2098, 2099, 2100, 2109, 2110,
	2111, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	88, 0, 54, 53, 0, 2102, 2096, 0, 0, 0,
	0, 0, 1630, 0, 2068, 0, 0, 0, 0, 89,
	0, 0, 0, 0, 0, 2115, 0, 319, 0, 0,
	2114, 0, 0, 0, 0, 1630, 0, 94, 0, 0,
	1630, 1630, 1630, 2121, 0, 0, 0, 0, 75, 0,
	0, 2103, 2067, 0, 0, 56, 0, 181, 0, 0,
	0, 0, 2118, 2087, 0, 0, 1630, 0, 0, 0,
	0, 0, 0, 2084, 0, 0, 0, 55, 1754, 0,
	104, 0, 0, 0, 0, 319, 0, 0, 0, 0,
	1631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1631, 0, 0, 0, 0, 0, 0, 0, 58, 76,
	0, 0, 0, 0, 0, 0, 0, 0, 59, 0,
	0, 0, 2094, 65, 0, 0, 0, 0, 5711, 0,
	0, 0, 0, 0, 0, 0, 57, 0, 128, 0,
	0, 0, 0, 0, 112, 125, 0, 0, 2089, 0,
	0, 0, 0, 0, 77, 0, 2090, 2091, 2092, 2093,
	0, 0, 0, 0, 0, 0, 2073, 0, 0, 0,
	0, 0, 0, 319, 0, 0, 0, 0, 0, 0,
	2107, 0, 0, 0, 0, 0, 0, 1631, 0, 0,
	60, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 1754, 0, 1754, 0, 0, 0, 2106,
	0, 113, 0, 2116, 0, 0, 2120, 0, 0, 0,
	2095, 2097, 0, 0, 0, 0, 1630, 1630, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2112, 0, 2113, 0, 0, 1754, 0,
	0, 0, 2082, 2083, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2104, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1754, 2088, 0, 0,
	0, 0, 0, 0, 0, 0, 78, 0, 2105, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1631,
	2079, 2080, 2086, 2108, 2085, 2081, 0, 2078, 2076, 2077,
	2069, 2070, 2071, 2072, 2074, 2075, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3771, 0, 2114, 0, 0,
	0, 0, 0, 1754, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2103, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2118,
	0, 0, 0, 0, 1754, 117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 61, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	64, 0, 0, 0, 0, 67, 0, 0, 0, 0,
	1630, 1630, 0, 0, 0, 79, 0, 0, 0, 2094,
	0, 0, 0, 66, 216, 0, 120, 0, 0, 124,
	0, 5569, 0, 0, 0, 62, 0, 0, 0, 182,
	0, 0, 0, 0, 0, 2089, 0, 63, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 1754, 0, 0, 0, 0, 1630, 70,
	0, 0, 0, 0, 0, 81, 0, 2107, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 1630, 1630, 1630, 1630, 1630, 1630, 1630,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2120, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 80, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	0, 0, 0, 0, 0, 0, 1754, 0, 1630, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 2105, 274, 0, 0, 0,
	217, 0, 0, 0, 0, 221, 0, 2079, 2080, 2086,
	2108, 2085, 2081, 0, 2078, 2076, 2077, 2069, 2070, 2071,
	2072, 2074, 2075, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 2973, 0, 0, 0, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 0, 0, 0, 0,
	0, 1630, 0, 0, 1630, 1630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 0, 0, 1630, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 1756, 337, 338, 1757, 1758,
	1759, 0, 1760, 750, 1761, 1762, 1763, 339, 1764, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 1765, 755, 352,
	353, 354, 355, 356, 357, 358, 1766, 1767, 1630, 359,
	756, 757, 758, 1768, 360, 361, 759, 1769, 1632, 1770,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 1771,
	371, 372, 373, 370, 374, 375, 1772, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 1773, 384, 385, 386,
	1385, 387, 388, 389, 1774, 1775, 1777, 1776, 1778, 1779,
	1780, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 1781, 400, 402, 396, 398, 1782, 401, 399, 403,
	404, 1783, 405, 406, 407, 1784, 1785, 408, 409, 410,
	1786, 411, 412, 413, 1787, 414, 415, 416, 1788, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 1789, 324,
	1790, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	1630, 0, 436, 1791, 437, 438, 439, 1792, 440, 441,
	1793, 1386, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 1794, 454, 768, 1795,
	769, 455, 1796, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 1388, 463, 464, 465, 1797, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 1798, 326, 325, 327, 1387, 773, 475, 559, 476,
	774, 775, 1799, 776, 1800, 477, 478, 480, 1389, 777,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 1801, 491, 493, 492,
	1802, 495, 778, 494, 1392, 496, 497, 1393, 1803, 498,
	499, 500, 501, 502, 503, 506, 1804, 1805, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 1806,
	539, 328, 1396, 553, 554, 555, 556, 1807, 779, 557,
	780, 560, 561, 1808, 0, 562, 0, 563, 1809, 1810,
	565, 566, 567, 1811, 1812, 568, 569, 781, 1397, 570,
	1398, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 1813, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 1814, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	1815, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 1816, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 1817, 659, 660,
	658, 661, 662, 663, 1818, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 1819, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 1820, 696, 697, 0, 691,
	682, 1821, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 1822, 706, 793, 794, 795, 796, 1823, 718, 1824,
	707, 709, 710, 711, 712, 797, 713, 798, 1825, 714,
	715, 716, 717, 708, 719, 720, 1826, 1827, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 1828, 730, 1829,
	0, 731, 732, 733, 799, 800, 801, 1830, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	1831, 1832, 1833, 1834, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 0, 0, 0, 0, 0, 0,
	3168, 0, 0, 0, 0, 0, 0, 0, 0, 3169,
	329, 330, 332, 331, 333, 334, 335, 336, 1756, 337,
	338, 1757, 1758, 1759, 0, 1760, 750, 1761, 1762, 1763,
	339, 1764, 340, 341, 342, 1384, 343, 344, 345, 346,
	347, 348, 349, 751, 752, 0, 350, 753, 351, 754,
	1765, 755, 352, 353, 354, 355, 356, 357, 358, 1766,
	1767, 0, 359, 756, 757, 758, 1768, 360, 361, 759,
	1769, 1632, 1770, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 1771, 371, 372, 373, 370, 374, 375, 1772,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 1773,
	384, 385, 386, 1385, 387, 388, 389, 1774, 1775, 1777,
	1776, 1778, 1779, 1780, 390, 391, 392, 393, 394, 0,
	395, 397, 760, 761, 1781, 400, 402, 396, 398, 1782,
	401, 399, 403, 404, 1783, 405, 406, 407, 1784, 1785,
	408, 409, 410, 1786, 411, 412, 413, 1787, 414, 415,
	416, 1788, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 763, 764, 431,
	432, 1789, 324, 1790, 0, 0, 0, 0, 433, 434,
	435, 765, 0, 0, 0, 436, 1791, 437, 438, 439,
	1792, 440, 441, 1793, 1386, 442, 443, 444, 766, 767,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 1794,
	454, 768, 1795, 769, 455, 1796, 456, 457, 458, 459,
	460, 461, 462, 770, 771, 772, 558, 1388, 463, 464,
	465, 1797, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 1798, 326, 325, 327, 1387, 773,
	475, 559, 476, 774, 775, 1799, 776, 1800, 477, 478,
	480, 1389, 777, 1390, 479, 481, 482, 1391, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 1801,
	491, 493, 492, 1802, 495, 778, 494, 1392, 496, 497,
	1393, 1803, 498, 499, 500, 501, 502, 503, 506, 1804,
	1805, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 1394, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 1395,
	551, 538, 1806, 539, 328, 1396, 553, 554, 555, 556,
	1807, 779, 557, 780, 560, 561, 1808, 0, 562, 0,
	563, 1809, 1810, 565, 566, 567, 1811, 1812, 568, 569,
	781, 1397, 570, 1398, 782, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 1813, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 785,
	591, 786, 592, 593, 1814, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 787, 605, 606,
	608, 607, 609, 1815, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 1816,
	629, 630, 628, 631, 632, 1399, 633, 634, 635, 636,
	637, 788, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	1817, 659, 660, 658, 661, 662, 663, 1818, 664, 789,
	665, 645, 646, 666, 667, 1400, 668, 669, 670, 671,
	672, 673, 674, 790, 0, 675, 1819, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 791, 685,
	686, 687, 688, 792, 692, 693, 694, 695, 1820, 696,
	697, 0, 691, 682, 1821, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 1822, 706, 793, 794, 795, 796,
	1823, 718, 1824, 707, 709, 710, 711, 712, 797, 713,
	798, 1825, 714, 715, 716, 717, 708, 719, 720, 1826,
	1827, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	1828, 730, 1829, 0, 731, 732, 733, 799, 800, 801,
	1830, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 1831, 1832, 1833, 1834, 745, 746, 803,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 0, 0, 0, 4334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4336,
	329, 330, 332, 331, 333, 334, 335, 336, 1756, 337,
	338, 1757, 1758, 1759, 0, 1760, 750, 1761, 1762, 1763,
	339, 1764, 340, 341, 342, 1384, 343, 344, 345, 346,
	347, 348, 349, 751, 752, 0, 350, 753, 351, 754,
	1765, 755, 352, 353, 354, 355, 356, 357, 358, 1766,
	1767, 0, 359, 756, 757, 758, 1768, 360, 361, 759,
	1769, 1632, 1770, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 1771, 371, 372, 373, 370, 374, 375, 1772,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 1773,
	384, 385, 386, 1385, 387, 388, 389, 1774, 1775, 1777,
	1776, 1778, 1779, 1780, 390, 391, 392, 393, 394, 0,
	395, 397, 760, 761, 1781, 400, 402, 396, 398, 1782,
	401, 399, 403, 404, 1783, 405, 406, 407, 1784, 1785,
	408, 409, 410, 1786, 411, 412, 413, 1787, 414, 415,
	416, 1788, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 763, 764, 431,
	432, 1789, 324, 1790, 0, 0, 0, 0, 433, 434,
	435, 765, 0, 0, 0, 436, 1791, 437, 438, 439,
	1792, 440, 441, 1793, 1386, 442, 443, 444, 766, 767,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 1794,
	454, 768, 1795, 769, 455, 1796, 456, 457, 458, 459,
	460, 461, 462, 770, 771, 772, 558, 1388, 463, 464,
	465, 1797, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 1798, 326, 325, 327, 1387, 773,
	475, 559, 476, 774, 775, 1799, 776, 1800, 477, 478,
	480, 1389, 777, 1390, 479, 481, 482, 1391, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 1801,
	491, 493, 492, 1802, 495, 778, 494, 1392, 496, 497,
	1393, 1803, 498, 499, 500, 501, 502, 503, 506, 1804,
	1805, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 1394, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 1395,
	551, 538, 1806, 539, 328, 1396, 553, 554, 555, 556,
	1807, 779, 557, 780, 560, 561, 1808, 0, 562, 0,
	563, 1809, 1810, 565, 566, 567, 1811, 1812, 568, 569,
	781, 1397, 570, 1398, 782, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 1813, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 785,
	591, 786, 592, 593, 1814, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 787, 605, 606,
	608, 607, 609, 1815, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 1816,
	629, 630, 628, 631, 632, 1399, 633, 634, 635, 636,
	637, 788, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	1817, 659, 660, 658, 661, 662, 663, 1818, 664, 789,
	665, 645, 646, 666, 667, 1400, 668, 669, 670, 671,
	672, 673, 674, 790, 0, 675, 1819, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 791, 685,
	686, 687, 688, 792, 692, 693, 694, 695, 1820, 696,
	697, 0, 691, 682, 1821, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 1822, 706, 793, 794, 795, 796,
	1823, 718, 1824, 707, 709, 710, 711, 712, 797, 713,
	798, 1825, 714, 715, 716, 717, 708, 719, 720, 1826,
	1827, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	1828, 730, 1829, 0, 731, 732, 733, 799, 800, 801,
	1830, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 1831, 1832, 1833, 1834, 745, 746, 803,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4809, 329, 330, 332, 331, 333, 334,
	335, 336, 1756, 337, 338, 1757, 1758, 1759, 0, 1760,
	750, 1761, 1762, 1763, 339, 1764, 340, 341, 342, 1384,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 1765, 755, 352, 353, 354, 355,
	356, 357, 358, 1766, 1767, 0, 359, 756, 757, 758,
	1768, 360, 361, 759, 1769, 1632, 1770, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 1771, 371, 372, 373,
	370, 374, 375, 1772, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 1773, 384, 385, 386, 1385, 387, 388,
	389, 1774, 1775, 1777, 1776, 1778, 1779, 1780, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 1781, 400,
	402, 396, 398, 1782, 401, 399, 403, 404, 1783, 405,
	406, 407, 1784, 1785, 408, 409, 410, 1786, 411, 412,
	413, 1787, 414, 415, 416, 1788, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 763, 764, 431, 432, 1789, 324, 1790, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	1791, 437, 438, 439, 1792, 440, 441, 1793, 1386, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 1794, 454, 768, 1795, 769, 455, 1796,
	456, 457, 458, 459, 460, 461, 462, 770, 771, 772,
	558, 1388, 463, 464, 465, 1797, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 1798, 326,
	325, 327, 1387, 773, 475, 559, 476, 774, 775, 1799,
	776, 1800, 477, 478, 480, 1389, 777, 1390, 479, 481,
	482, 1391, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 1801, 491, 493, 492, 1802, 495, 778,
	494, 1392, 496, 497, 1393, 1803, 498, 499, 500, 501,
	502, 503, 506, 1804, 1805, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 1394, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 1395, 551, 538, 1806, 539, 328, 1396,
	553, 554, 555, 556, 1807, 779, 557, 780, 560, 561,
	1808, 0, 562, 0, 563, 1809, 1810, 565, 566, 567,
	1811, 1812, 568, 569, 781, 1397, 570, 1398, 782, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 1813, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 785, 591, 786, 592, 593, 1814, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 1815, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 1816, 629, 630, 628, 631, 632, 1399,
	633, 634, 635, 636, 637, 788, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 1817, 659, 660, 658, 661, 662,
	663, 1818, 664, 789, 665, 645, 646, 666, 667, 1400,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	1819, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 792, 692, 693,
	694, 695, 1820, 696, 697, 0, 691, 682, 1821, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 1822, 706,
	793, 794, 795, 796, 1823, 718, 1824, 707, 709, 710,
	711, 712, 797, 713, 798, 1825, 714, 715, 716, 717,
	708, 719, 720, 1826, 1827, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 1828, 730, 1829, 0, 731, 732,
	733, 799, 800, 801, 1830, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 1831, 1832, 1833,
	1834, 745, 746, 803, 747, 748, 749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4807, 329, 330,
	332, 331, 333, 334, 335, 336, 1756, 337, 338, 1757,
	1758, 1759, 0, 1760, 750, 1761, 1762, 1763, 339, 1764,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 1765, 755,
	352, 353, 354, 355, 356, 357, 358, 1766, 1767, 0,
	359, 756, 757, 758, 1768, 360, 361, 759, 1769, 1632,
	1770, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	1771, 371, 372, 373, 370, 374, 375, 1772, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 1773, 384, 385,
	386, 1385, 387, 388, 389, 1774, 1775, 1777, 1776, 1778,
	1779, 1780, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 1781, 400, 402, 396, 398, 1782, 401, 399,
	403, 404, 1783, 405, 406, 407, 1784, 1785, 408, 409,
	410, 1786, 411, 412, 413, 1787, 414, 415, 416, 1788,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 1789,
	324, 1790, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 1791, 437, 438, 439, 1792, 440,
	441, 1793, 1386, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 1794, 454, 768,
	1795, 769, 455, 1796, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 1388, 463, 464, 465, 1797,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 1798, 326, 325, 327, 1387, 773, 475, 559,
	476, 774, 775, 1799, 776, 1800, 477, 478, 480, 1389,
	777, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 1801, 491, 493,
	492, 1802, 495, 778, 494, 1392, 496, 497, 1393, 1803,
	498, 499, 500, 501, 502, 503, 506, 1804, 1805, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	1806, 539, 328, 1396, 553, 554, 555, 556, 1807, 779,
	557, 780, 560, 561, 1808, 0, 562, 0, 563, 1809,
	1810, 565, 566, 567, 1811, 1812, 568, 569, 781, 1397,
	570, 1398, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 1813, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 1814, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 1815, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 1816, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 1817, 659,
	660, 658, 661, 662, 663, 1818, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 1819, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 1820, 696, 697, 0,
	691, 682, 1821, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 1822, 706, 793, 794, 795, 796, 1823, 718,
	1824, 707, 709, 710, 711, 712, 797, 713, 798, 1825,
	714, 715, 716, 717, 708, 719, 720, 1826, 1827, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 1828, 730,
	1829, 0, 731, 732, 733, 799, 800, 801, 1830, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 1831, 1832, 1833, 1834, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 0, 1751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5076, 329, 330, 332, 331,
	333, 334, 335, 336, 1756, 337, 338, 1757, 1758, 1759,
	0, 1760, 750, 1761, 1762, 1763, 339, 1764, 340, 341,
	342, 1384, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 1765, 755, 352, 353,
	354, 355, 356, 357, 358, 1766, 1767, 0, 359, 756,
	757, 758, 1768, 360, 361, 759, 1769, 1632, 1770, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 1771, 371,
	372, 373, 370, 374, 375, 1772, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 1773, 384, 385, 386, 1385,
	387, 388, 389, 1774, 1775, 1777, 1776, 1778, 1779, 1780,
	390, 391, 392, 393, 394, 0, 395, 397, 760, 761,
	1781, 400, 402, 396, 398, 1782, 401, 399, 403, 404,
	1783, 405, 406, 407, 1784, 1785, 408, 409, 410, 1786,
	411, 412, 413, 1787, 414, 415, 416, 1788, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 763, 764, 431, 432, 1789, 324, 1790,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 1791, 437, 438, 439, 1792, 440, 441, 1793,
	1386, 442, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 1794, 454, 768, 1795, 769,
	455, 1796, 456, 457, 458, 459, 460, 461, 462, 770,
	771, 772, 558, 1388, 463, 464, 465, 1797, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	1798, 326, 325, 327, 1387, 773, 475, 559, 476, 774,
	775, 1799, 776, 1800, 477, 478, 480, 1389, 777, 1390,
	479, 481, 482, 1391, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 1801, 491, 493, 492, 1802,
	495, 778, 494, 1392, 496, 497, 1393, 1803, 498, 499,
	500, 501, 502, 503, 506, 1804, 1805, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 1394, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 1395, 551, 538, 1806, 539,
	328, 1396, 553, 554, 555, 556, 1807, 779, 557, 780,
	560, 561, 1808, 0, 562, 0, 563, 1809, 1810, 565,
	566, 567, 1811, 1812, 568, 569, 781, 1397, 570, 1398,
	782, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 1813, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 785, 591, 786, 592, 593,
	1814, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 1815,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 1816, 629, 630, 628, 631,
	632, 1399, 633, 634, 635, 636, 637, 788, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 1817, 659, 660, 658,
	661, 662, 663, 1818, 664, 789, 665, 645, 646, 666,
	667, 1400, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 1819, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 792,
	692, 693, 694, 695, 1820, 696, 697, 0, 691, 682,
	1821, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	1822, 706, 793, 794, 795, 796, 1823, 718, 1824, 707,
	709, 710, 711, 712, 797, 713, 798, 1825, 714, 715,
	716, 717, 708, 719, 720, 1826, 1827, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 1828, 730, 1829, 0,
	731, 732, 733, 799, 800, 801, 1830, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 1831,
	1832, 1833, 1834, 745, 746, 803, 747, 748, 749, 0,
	0, 0, 0, 0, 0, 0, 0, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4927, 329, 330, 332, 331, 333, 334,
	335, 336, 1756, 337, 338, 1757, 1758, 1759, 0, 1760,
	750, 1761, 1762, 1763, 339, 1764, 340, 341, 342, 1384,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 1765, 755, 352, 353, 354, 355,
	356, 357, 358, 1766, 1767, 0, 359, 756, 757, 758,
	1768, 360, 361, 759, 1769, 1632, 1770, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 1771, 371, 372, 373,
	370, 374, 375, 1772, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 1773, 384, 385, 386, 1385, 387, 388,
	389, 1774, 1775, 1777, 1776, 1778, 1779, 1780, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 1781, 400,
	402, 396, 398, 1782, 401, 399, 403, 404, 1783, 405,
	406, 407, 1784, 1785, 408, 409, 410, 1786, 411, 412,
	413, 1787, 414, 415, 416, 1788, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 763, 764, 431, 432, 1789, 324, 1790, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	1791, 437, 438, 439, 1792, 440, 441, 1793, 1386, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 1794, 454, 768, 1795, 769, 455, 1796,
	456, 457, 458, 459, 460, 461, 462, 770, 771, 772,
	558, 1388, 463, 464, 465, 1797, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 1798, 326,
	325, 327, 1387, 773, 475, 559, 476, 774, 775, 1799,
	776, 1800, 477, 478, 480, 1389, 777, 1390, 479, 481,
	482, 1391, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 1801, 491, 493, 492, 1802, 495, 778,
	494, 1392, 496, 497, 1393, 1803, 498, 499, 500, 501,
	502, 503, 506, 1804, 1805, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 1394, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 1395, 551, 538, 1806, 539, 328, 1396,
	553, 554, 555, 556, 1807, 779, 557, 780, 560, 561,
	1808, 0, 562, 0, 563, 1809, 1810, 565, 566, 567,
	1811, 1812, 568, 569, 781, 1397, 570, 1398, 782, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 1813, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 785, 591, 786, 592, 593, 1814, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 1815, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 1816, 629, 630, 628, 631, 632, 1399,
	633, 634, 635, 636, 637, 788, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 1817, 659, 660, 658, 661, 662,
	663, 1818, 664, 789, 665, 645, 646, 666, 667, 1400,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	1819, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 792, 692, 693,
	694, 695, 1820, 696, 697, 0, 691, 682, 1821, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 1822, 706,
	793, 794, 795, 796, 1823, 718, 1824, 707, 709, 710,
	711, 712, 797, 713, 798, 1825, 714, 715, 716, 717,
	708, 719, 720, 1826, 1827, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 1828, 730, 1829, 0, 731, 732,
	733, 799, 800, 801, 1830, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 1831, 1832, 1833,
	1834, 745, 746, 803, 747, 748, 749, 0, 0, 0,
	0, 0, 0, 0, 0, 1751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4508, 329, 330, 332, 331, 333, 334, 335, 336,
	1756, 337, 338, 1757, 1758, 1759, 0, 1760, 750, 1761,
	1762, 1763, 339, 1764, 340, 341, 342, 1384, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 1765, 755, 352, 353, 354, 355, 356, 357,
	358, 1766, 1767, 0, 359, 756, 757, 758, 1768, 360,
	361, 759, 1769, 1632, 1770, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 1771, 371, 372, 373, 370, 374,
	375, 1772, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 1773, 384, 385, 386, 1385, 387, 388, 389, 1774,
	1775, 1777, 1776, 1778, 1779, 1780, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 1781, 400, 402, 396,
	398, 1782, 401, 399, 403, 404, 1783, 405, 406, 407,
	1784, 1785, 408, 409, 410, 1786, 411, 412, 413, 1787,
	414, 415, 416, 1788, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 1789, 324, 1790, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 1791, 437,
	438, 439, 1792, 440, 441, 1793, 1386, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 1794, 454, 768, 1795, 769, 455, 1796, 456, 457,
	458, 459, 460, 461, 462, 770, 771, 772, 558, 1388,
	463, 464, 465, 1797, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 1798, 326, 325, 327,
	1387, 773, 475, 559, 476, 774, 775, 1799, 776, 1800,
	477, 478, 480, 1389, 777, 1390, 479, 481, 482, 1391,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 1801, 491, 493, 492, 1802, 495, 778, 494, 1392,
	496, 497, 1393, 1803, 498, 499, 500, 501, 502, 503,
	506, 1804, 1805, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 1394, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 1395, 551, 538, 1806, 539, 328, 1396, 553, 554,
	555, 556, 1807, 779, 557, 780, 560, 561, 1808, 0,
	562, 0, 563, 1809, 1810, 565, 566, 567, 1811, 1812,
	568, 569, 781, 1397, 570, 1398, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	1813, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 1814, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 1815, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 1816, 629, 630, 628, 631, 632, 1399, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 1817, 659, 660, 658, 661, 662, 663, 1818,
	664, 789, 665, 645, 646, 666, 667, 1400, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 1819, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	1820, 696, 697, 0, 691, 682, 1821, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 1822, 706, 793, 794,
	795, 796, 1823, 718, 1824, 707, 709, 710, 711, 712,
	797, 713, 798, 1825, 714, 715, 716, 717, 708, 719,
	720, 1826, 1827, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 1828, 730, 1829, 0, 731, 732, 733, 799,
	800, 801, 1830, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 1831, 1832, 1833, 1834, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4352,
	329, 330, 332, 331, 333, 334, 335, 336, 1756, 337,
	338, 1757, 1758, 1759, 0, 1760, 750, 1761, 1762, 1763,
	339, 1764, 340, 341, 342, 1384, 343, 344, 345, 346,
	347, 348, 349, 751, 752, 0, 350, 753, 351, 754,
	1765, 755, 352, 353, 354, 355, 356, 357, 358, 1766,
	1767, 0, 359, 756, 757, 758, 1768, 360, 361, 759,
	1769, 1632, 1770, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 1771, 371, 372, 373, 370, 374, 375, 1772,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 1773,
	384, 385, 386, 1385, 387, 388, 389, 1774, 1775, 1777,
	1776, 1778, 1779, 1780, 390, 391, 392, 393, 394, 0,
	395, 397, 760, 761, 1781, 400, 402, 396, 398, 1782,
	401, 399, 403, 404, 1783, 405, 406, 407, 1784, 1785,
	408, 409, 410, 1786, 411, 412, 413, 1787, 414, 415,
	416, 1788, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 763, 764, 431,
	432, 1789, 324, 1790, 0, 0, 0, 0, 433, 434,
	435, 765, 0, 0, 0, 436, 1791, 437, 438, 439,
	1792, 440, 441, 1793, 1386, 442, 443, 444, 766, 767,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 1794,
	454, 768, 1795, 769, 455, 1796, 456, 457, 458, 459,
	460, 461, 462, 770, 771, 772, 558, 1388, 463, 464,
	465, 1797, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 1798, 326, 325, 327, 1387, 773,
	475, 559, 476, 774, 775, 1799, 776, 1800, 477, 478,
	480, 1389, 777, 1390, 479, 481, 482, 1391, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 1801,
	491, 493, 492, 1802, 495, 778, 494, 1392, 496, 497,
	1393, 1803, 498, 499, 500, 501, 502, 503, 506, 1804,
	1805, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 1394, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 1395,
	551, 538, 1806, 539, 328, 1396, 553, 554, 555, 556,
	1807, 779, 557, 780, 560, 561, 1808, 0, 562, 0,
	563, 1809, 1810, 565, 566, 567, 1811, 1812, 568, 569,
	781, 1397, 570, 1398, 782, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 1813, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 785,
	591, 786, 592, 593, 1814, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 787, 605, 606,
	608, 607, 609, 1815, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 1816,
	629, 630, 628, 631, 632, 1399, 633, 634, 635, 636,
	637, 788, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	1817, 659, 660, 658, 661, 662, 663, 1818, 664, 789,
	665, 645, 646, 666, 667, 1400, 668, 669, 670, 671,
	672, 673, 674, 790, 0, 675, 1819, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 791, 685,
	686, 687, 688, 792, 692, 693, 694, 695, 1820, 696,
	697, 0, 691, 682, 1821, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 1822, 706, 793, 794, 795, 796,
	1823, 718, 1824, 707, 709, 710, 711, 712, 797, 713,
	798, 1825, 714, 715, 716, 717, 708, 719, 720, 1826,
	1827, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	1828, 730, 1829, 0, 731, 732, 733, 799, 800, 801,
	1830, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 1831, 1832, 1833, 1834, 745, 746, 803,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	0, 1751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4183, 329, 330,
	332, 331, 333, 334, 335, 336, 1756, 337, 338, 1757,
	1758, 1759, 0, 1760, 750, 1761, 1762, 1763, 339, 1764,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 1765, 755,
	352, 353, 354, 355, 356, 357, 358, 1766, 1767, 0,
	359, 756, 757, 758, 1768, 360, 361, 759, 1769, 1632,
	1770, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	1771, 371, 372, 373, 370, 374, 375, 1772, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 1773, 384, 385,
	386, 1385, 387, 388, 389, 1774, 1775, 1777, 1776, 1778,
	1779, 1780, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 1781, 400, 402, 396, 398, 1782, 401, 399,
	403, 404, 1783, 405, 406, 407, 1784, 1785, 408, 409,
	410, 1786, 411, 412, 413, 1787, 414, 415, 416, 1788,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 1789,
	324, 1790, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 1791, 437, 438, 439, 1792, 440,
	441, 1793, 1386, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 1794, 454, 768,
	1795, 769, 455, 1796, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 1388, 463, 464, 465, 1797,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 1798, 326, 325, 327, 1387, 773, 475, 559,
	476, 774, 775, 1799, 776, 1800, 477, 478, 480, 1389,
	777, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 1801, 491, 493,
	492, 1802, 495, 778, 494, 1392, 496, 497, 1393, 1803,
	498, 499, 500, 501, 502, 503, 506, 1804, 1805, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	1806, 539, 328, 1396, 553, 554, 555, 556, 1807, 779,
	557, 780, 560, 561, 1808, 0, 562, 0, 563, 1809,
	1810, 565, 566, 567, 1811, 1812, 568, 569, 781, 1397,
	570, 1398, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 1813, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 1814, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 1815, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 1816, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 1817, 659,
	660, 658, 661, 662, 663, 1818, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 1819, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 1820, 696, 697, 0,
	691, 682, 1821, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 1822, 706, 793, 794, 795, 796, 1823, 718,
	1824, 707, 709, 710, 711, 712, 797, 713, 798, 1825,
	714, 715, 716, 717, 708, 719, 720, 1826, 1827, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 1828, 730,
	1829, 0, 731, 732, 733, 799, 800, 801, 1830, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 1831, 1832, 1833, 1834, 745, 746, 803, 747, 748,
	749, 0, 0, 0, 0, 0, 0, 0, 0, 1751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2996, 329, 330, 332, 331,
	333, 334, 335, 336, 1756, 337, 338, 1757, 1758, 1759,
	0, 1760, 750, 1761, 1762, 1763, 339, 1764, 340, 341,
	342, 1384, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 1765, 755, 352, 353,
	354, 355, 356, 357, 358, 1766, 1767, 0, 359, 756,
	757, 758, 1768, 360, 361, 759, 1769, 1632, 1770, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 1771, 371,
	372, 373, 370, 374, 375, 1772, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 1773, 384, 385, 386, 1385,
	387, 388, 389, 1774, 1775, 1777, 1776, 1778, 1779, 1780,
	390, 391, 392, 393, 394, 0, 395, 397, 760, 761,
	1781, 400, 402, 396, 398, 1782, 401, 399, 403, 404,
	1783, 405, 406, 407, 1784, 1785, 408, 409, 410, 1786,
	411, 412, 413, 1787, 414, 415, 416, 1788, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 763, 764, 431, 432, 1789, 324, 1790,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 1791, 437, 438, 439, 1792, 440, 441, 1793,
	1386, 442, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 1794, 454, 768, 1795, 769,
	455, 1796, 456, 457, 458, 459, 460, 461, 462, 770,
	771, 772, 558, 1388, 463, 464, 465, 1797, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	1798, 326, 325, 327, 1387, 773, 475, 559, 476, 774,
	775, 1799, 776, 1800, 477, 478, 480, 1389, 777, 1390,
	479, 481, 482, 1391, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 1801, 491, 493, 492, 1802,
	495, 778, 494, 1392, 496, 497, 1393, 1803, 498, 499,
	500, 501, 502, 503, 506, 1804, 1805, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 1394, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 1395, 551, 538, 1806, 539,
	328, 1396, 553, 554, 555, 556, 1807, 779, 557, 780,
	560, 561, 1808, 0, 562, 0, 563, 1809, 1810, 565,
	566, 567, 1811, 1812, 568, 569, 781, 1397, 570, 1398,
	782, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 1813, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 785, 591, 786, 592, 593,
	1814, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 1815,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 1816, 629, 630, 628, 631,
	632, 1399, 633, 634, 635, 636, 637, 788, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 1817, 659, 660, 658,
	661, 662, 663, 1818, 664, 789, 665, 645, 646, 666,
	667, 1400, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 1819, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 792,
	692, 693, 694, 695, 1820, 696, 697, 0, 691, 682,
	1821, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	1822, 706, 793, 794, 795, 796, 1823, 718, 1824, 707,
	709, 710, 711, 712, 797, 713, 798, 1825, 714, 715,
	716, 717, 708, 719, 720, 1826, 1827, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 1828, 730, 1829, 0,
	731, 732, 733, 799, 800, 801, 1830, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 1831,
	1832, 1833, 1834, 745, 746, 803, 747, 748, 749, 0,
	0, 0, 0, 0, 0, 1748, 0, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2713, 329, 330, 332, 331, 333, 334,
	335, 336, 1756, 337, 338, 1757, 1758, 1759, 0, 1760,
	750, 1761, 1762, 1763, 339, 1764, 340, 341, 342, 1384,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 1765, 755, 352, 353, 354, 355,
	356, 357, 358, 1766, 1767, 0, 359, 756, 757, 758,
	1768, 360, 361, 759, 1769, 1632, 1770, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 1771, 371, 372, 373,
	370, 374, 375, 1772, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 1773, 384, 385, 386, 1385, 387, 388,
	389, 1774, 1775, 1777, 1776, 1778, 1779, 1780, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 1781, 400,
	402, 396, 398, 1782, 401, 399, 403, 404, 1783, 405,
	406, 407, 1784, 1785, 408, 409, 410, 1786, 411, 412,
	413, 1787, 414, 415, 416, 1788, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 763, 764, 431, 432, 1789, 324, 1790, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	1791, 437, 438, 439, 1792, 440, 441, 1793, 1386, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 1794, 454, 768, 1795, 769, 455, 1796,
	456, 457, 458, 459, 460, 461, 462, 770, 771, 772,
	558, 1388, 463, 464, 465, 1797, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 1798, 326,
	325, 327, 1387, 773, 475, 559, 476, 774, 775, 1799,
	776, 1800, 477, 478, 480, 1389, 777, 1390, 479, 481,
	482, 1391, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 1801, 491, 493, 492, 1802, 495, 778,
	494, 1392, 496, 497, 1393, 1803, 498, 499, 500, 501,
	502, 503, 506, 1804, 1805, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 1394, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 1395, 551, 538, 1806, 539, 328, 1396,
	553, 554, 555, 556, 1807, 779, 557, 780, 560, 561,
	1808, 0, 562, 0, 563, 1809, 1810, 565, 566, 567,
	1811, 1812, 568, 569, 781, 1397, 570, 1398, 782, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 1813, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 785, 591, 786, 592, 593, 1814, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 1815, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 1816, 629, 630, 628, 631, 632, 1399,
	633, 634, 635, 636, 637, 788, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 1817, 659, 660, 658, 661, 662,
	663, 1818, 664, 789, 665, 645, 646, 666, 667, 1400,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	1819, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 792, 692, 693,
	694, 695, 1820, 696, 697, 0, 691, 682, 1821, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 1822, 706,
	793, 794, 795, 796, 1823, 718, 1824, 707, 709, 710,
	711, 712, 797, 713, 798, 1825, 714, 715, 716, 717,
	708, 719, 720, 1826, 1827, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 1828, 730, 1829, 0, 731, 732,
	733, 799, 800, 801, 1830, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 1831, 1832, 1833,
	1834, 745, 746, 803, 747, 748, 749, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 1756, 337, 338, 1757, 1758, 1759, 0, 1760,
	750, 1761, 1762, 1763, 339, 1764, 340, 341, 342, 1384,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 1765, 755, 352, 353, 354, 355,
	356, 357, 358, 1766, 1767, 0, 359, 756, 757, 758,
	1768, 360, 361, 759, 1769, 1632, 1770, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 1771, 371, 372, 373,
	370, 374, 375, 1772, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 1773, 384, 385, 386, 1385, 387, 388,
	389, 1774, 1775, 1777, 1776, 1778, 1779, 1780, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 1781, 400,
	402, 396, 398, 1782, 401, 399, 403, 404, 1783, 405,
	406, 407, 1784, 1785, 408, 409, 410, 1786, 411, 412,
	413, 1787, 414, 415, 416, 1788, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 763, 764, 431, 432, 1789, 324, 1790, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	1791, 437, 438, 439, 1792, 440, 441, 1793, 1386, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 1794, 454, 768, 1795, 769, 455, 1796,
	456, 457, 458, 459, 460, 461, 462, 770, 771, 772,
	558, 1388, 463, 464, 465, 1797, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 1798, 326,
	325, 327, 1387, 773, 475, 559, 476, 774, 775, 1799,
	776, 1800, 477, 478, 480, 1389, 777, 1390, 479, 481,
	482, 1391, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 1801, 491, 493, 492, 1802, 495, 778,
	494, 1392, 496, 497, 1393, 1803, 498, 499, 500, 501,
	502, 503, 506, 1804, 1805, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 1394, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 1395, 551, 538, 1806, 539, 328, 1396,
	553, 554, 555, 556, 1807, 779, 557, 780, 560, 561,
	1808, 0, 562, 0, 563, 1809, 1810, 565, 566, 567,
	1811, 1812, 568, 569, 781, 1397, 570, 1398, 782, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 1813, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 785, 591, 786, 592, 593, 1814, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 1815, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 1816, 629, 630, 628, 631, 632, 1399,
	633, 634, 635, 636, 637, 788, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 1817, 659, 660, 658, 661, 662,
	663, 1818, 664, 789, 665, 645, 646, 666, 667, 1400,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	1819, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 792, 692, 693,
	694, 695, 1820, 696, 697, 0, 691, 682, 1821, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 1822, 706,
	793, 794, 795, 796, 1823, 718, 1824, 707, 709, 710,
	711, 712, 797, 713, 798, 1825, 714, 715, 716, 717,
	708, 719, 720, 1826, 1827, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 1828, 730, 1829, 0, 731, 732,
	733, 799, 800, 801, 1830, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 1831, 1832, 1833,
	1834, 745, 746, 803, 747, 748, 749, 2971, 0, 1318,
	1290, 1291, 1292, 1288, 1289, 1301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 2968, 337, 338, 0, 0, 0,
	0, 0, 1344, 1306, 0, 0, 339, 0, 340, 341,
	342, 1384, 343, 344, 345, 346, 347, 348, 349, 751,
	1357, 0, 350, 1364, 351, 1363, 0, 1374, 352, 353,
	354, 355, 356, 357, 358, 1308, 1343, 1272, 359, 1404,
	1405, 758, 0, 360, 361, 1350, 0, 1331, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 1385,
	387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339,
	390, 391, 392, 393, 394, 1367, 395, 397, 1361, 1360,
	1277, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 2969, 0, 408, 1352, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	1283, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 1375, 1376, 431, 432, 1297, 324, 0,
	0, 0, 0, 0, 433, 434, 435, 1359, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	1386, 442, 443, 444, 1372, 1373, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 1382, 0, 1307,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 1345,
	1346, 1349, 558, 1388, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 1287, 325, 327, 1387, 773, 475, 559, 476, 1354,
	1355, 0, 1313, 0, 477, 478, 480, 1389, 1347, 1390,
	479, 481, 482, 1391, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 1383, 494, 1392, 496, 497, 1393, 0, 498, 499,
	500, 501, 502, 503, 506, 1338, 1337, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 1394, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 1395, 551, 538, 1274, 539,
	328, 1396, 553, 554, 555, 556, 1298, 1348, 557, 1362,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 1397, 570, 1398,
	1377, 571, 572, 1284, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 1378, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 1358, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 1399, 633, 634, 635, 636, 637, 1285, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 1341, 664, 789, 665, 645, 646, 666,
	667, 1400, 668, 669, 670, 671, 672, 673, 674, 1356,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 1403, 685, 686, 687, 688, 1379,
	692, 693, 694, 695, 0, 696, 697, 1271, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 1368, 1369, 1370, 1371, 0, 718, 0, 707,
	709, 710, 711, 712, 1380, 713, 1381, 1296, 714, 715,
	716, 717, 708, 719, 720, 0, 1278, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 1342, 730, 0, 0,
	731, 732, 733, 799, 1365, 1402, 2967, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 0,
	0, 0, 0, 745, 746, 803, 747, 748, 749, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1270, 0, 0, 0, 0, 0,
	0, 1268, 1269, 2970, 0, 0, 0, 0, 0, 0,
	0, 1302, 2966, 0, 1259, 1300, 1318, 1290, 1291, 1292,
	1288, 1289, 1301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 1344,
	1306, 0, 0, 339, 0, 340, 341, 342, 1384, 343,
	344, 345, 346, 347, 348, 349, 751, 1357, 0, 350,
	1364, 351, 1363, 0, 1374, 352, 353, 354, 355, 356,
	357, 358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0,
	360, 361, 1350, 0, 1331, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 1385, 387, 388, 389,
	1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392,
	393, 394, 1367, 395, 397, 1361, 1360, 1277, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 1352, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 1283, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	1375, 1376, 431, 432, 1297, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 1359, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 1386, 442, 443,
	444, 1372, 1373, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 1382, 0, 1307, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 1345, 1346, 1349, 558,
	1388, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 1287, 325,
	327, 1387, 773, 475, 559, 476, 1354, 1355, 0, 1313,
	0, 477, 478, 480, 1389, 1347, 1390, 479, 481, 482,
	1391, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 1383, 494,
	1392, 496, 497, 1393, 0, 498, 499, 500, 501, 502,
	503, 506, 1338, 1337, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 1394, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 1395, 551, 538, 1274, 539, 328, 1396, 553,
	554, 555, 556, 1298, 1348, 557, 1362, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 1397, 570, 1398, 1377, 571, 572,
	1284, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 1378, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	1358, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 1399, 633,
	634, 635, 636, 637, 1285, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 279, 659, 660, 658, 661, 662, 663,
	1341, 664, 789, 665, 645, 646, 666, 667, 1400, 668,
	669, 670, 671, 672, 673, 674, 1356, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 1403, 685, 686, 687, 688, 1379, 692, 693, 694,
	695, 0, 696, 697, 1271, 691, 682, 281, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 1368,
	1369, 1370, 1371, 0, 718, 0, 707, 709, 710, 711,
	712, 1380, 713, 1381, 1296, 714, 715, 716, 717, 708,
	719, 720, 0, 1278, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 1342, 730, 0, 0, 731, 732, 733,
	1992, 1365, 1402, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 0, 0, 0, 273,
	745, 746, 803, 747, 748, 749, 1275, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1270, 0, 0, 0, 0, 0, 0, 1268, 1269,
	1318, 1290, 1291, 1292, 1288, 1289, 1301, 0, 2146, 2144,
	0, 0, 1300, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 1344, 1306, 0, 0, 339, 0, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 1357, 0, 350, 1364, 351, 1363, 0, 1374, 352,
	353, 354, 355, 356, 357, 358, 1308, 1343, 1272, 359,
	1404, 1405, 758, 0, 360, 361, 1350, 0, 1331, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335,
	1339, 390, 391, 392, 393, 394, 1367, 395, 397, 1361,
	1360, 1277, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 1352, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 1283, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 1375, 1376, 431, 432, 1297, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 1359, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 1386, 442, 443, 444, 1372, 1373, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 1382, 0,
	1307, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	1345, 1346, 1349, 558, 1388, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 1287, 325, 327, 1387, 773, 475, 559, 476,
	1354, 1355, 0, 1313, 0, 477, 478, 480, 1389, 1347,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 1383, 494, 1392, 496, 497, 1393, 0, 498,
	499, 500, 501, 502, 503, 506, 1338, 1337, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 1274,
	539, 328, 1396, 553, 554, 555, 556, 1298, 1348, 557,
	1362, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 1397, 570,
	1398, 1377, 571, 572, 1284, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 1378, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 1358, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 1285, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 279, 659, 660,
	658, 661, 662, 663, 1341, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	1356, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 1403, 685, 686, 687, 688,
	1379, 692, 693, 694, 695, 0, 696, 697, 1271, 691,
	682, 281, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 1368, 1369, 1370, 1371, 0, 718, 0,
	707, 709, 710, 711, 712, 1380, 713, 1381, 1296, 714,
	715, 716, 717, 708, 719, 720, 0, 1278, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 1342, 730, 0,
	0, 731, 732, 733, 1992, 1365, 1402, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	0, 0, 0, 273, 745, 746, 803, 747, 748, 749,
	1275, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1270, 0, 0, 0, 0,
	0, 0, 1268, 1269, 1318, 1290, 1291, 1292, 1288, 1289,
	1301, 0, 2146, 3727, 0, 0, 1300, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 1344, 1306, 0,
	0, 339, 0, 340, 341, 342, 1384, 343, 344, 345,
	346, 347, 348, 349, 751, 1357, 0, 350, 1364, 351,
	1363, 0, 1374, 352, 353, 354, 355, 356, 357, 358,
	1308, 1343, 1272, 359, 1404, 1405, 758, 0, 360, 361,
	1350, 0, 1331, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 1385, 387, 388, 389, 1334, 1332,
	1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393, 394,
	1367, 395, 397, 1361, 1360, 1277, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 1352, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 1283, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 1375, 1376,
	431, 432, 1297, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 1359, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 1386, 442, 443, 444, 1372,
	1373, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 1382, 0, 1307, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 1345, 1346, 1349, 558, 1388, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 1287, 325, 327, 1387,
	773, 475, 559, 476, 1354, 1355, 0, 1313, 0, 477,
	478, 480, 1389, 1347, 1390, 479, 481, 482, 1391, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 1383, 494, 1392, 496,
	497, 1393, 0, 498, 499, 500, 501, 502, 503, 506,
	1338, 1337, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 1394, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	1395, 551, 538, 1274, 539, 328, 1396, 553, 554, 555,
	556, 1298, 1348, 557, 1362, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 1397, 570, 1398, 1377, 571, 572, 1284, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	1378, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 1358, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 1399, 633, 634, 635,
	636, 637, 1285, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 279, 659, 660, 658, 661, 662, 663, 1341, 664,
	789, 665, 645, 646, 666, 667, 1400, 668, 669, 670,
	671, 672, 673, 674, 1356, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 1403,
	685, 686, 687, 688, 1379, 692, 693, 694, 695, 0,
	696, 697, 1271, 691, 682, 281, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 1368, 1369, 1370,
	1371, 0, 718, 0, 707, 709, 710, 711, 712, 1380,
	713, 1381, 1296, 714, 715, 716, 717, 708, 719, 720,
	0, 1278, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 1342, 730, 0, 0, 731, 732, 733, 1992, 1365,
	1402, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 0, 0, 0, 273, 745, 746,
	803, 747, 748, 749, 1275, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1270,
	0, 0, 0, 0, 0, 0, 1268, 1269, 1318, 1290,
	1291, 1292, 1288, 1289, 1301, 0, 2146, 2144, 0, 0,
	1300, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 1344, 1306, 0, 0, 339, 0, 340, 341, 342,
	1384, 343, 344, 345, 346, 347, 348, 349, 751, 1357,
	0, 350, 1364, 351, 1363, 3104, 1374, 352, 353, 354,
	355, 356, 357, 358, 1308, 1343, 1272, 359, 1404, 1405,
	758, 0, 360, 361, 1350, 0, 1331, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 1385, 387,
	388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390,
	391, 392, 393, 394, 1367, 395, 397, 1361, 1360, 1277,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 1352, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 1283,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 1375, 1376, 431, 432, 1297, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 1359, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 3109, 1386,
	442, 443, 444, 1372, 1373, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 1382, 0, 1307, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 1345, 1346,
	1349, 558, 1388, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	1287, 325, 327, 1387, 773, 475, 559, 476, 1354, 1355,
	0, 1313, 0, 477, 478, 480, 1389, 1347, 1390, 479,
	481, 482, 1391, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 3105, 495,
	1383, 494, 1392, 496, 497, 1393, 0, 498, 499, 500,
	501, 502, 503, 506, 1338, 1337, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 1394, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 1395, 551, 538, 1274, 539, 328,
	1396, 553, 554, 555, 556, 1298, 1348, 557, 1362, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 1397, 570, 1398, 1377,
	571, 572, 1284, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 1378, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 1358, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	1399, 633, 634, 635, 636, 637, 1285, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 1341, 664, 789, 665, 645, 646, 666, 667,
	1400, 668, 669, 670, 671, 672, 673, 674, 1356, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 1403, 685, 686, 687, 688, 1379, 692,
	693, 694, 695, 0, 696, 697, 1271, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 1368, 1369, 1370, 1371, 0, 718, 3106, 707, 709,
	710, 711, 712, 1380, 713, 1381, 1296, 714, 715, 716,
	717, 708, 719, 720, 0, 1278, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 1342, 730, 0, 0, 731,
	732, 733, 799, 1365, 1402, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 0, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 1275, 0,
	0, 0, 0, 3016, 0, 1318, 1290, 1291, 1292, 1288,
	1289, 1301, 0, 1270, 0, 0, 0, 0, 0, 0,
	1268, 1269, 329, 330, 332, 331, 333, 334, 335, 336,
	1302, 337, 338, 0, 1300, 0, 0, 0, 1344, 1306,
	0, 0, 339, 0, 340, 341, 342, 1384, 343, 344,
	345, 346, 347, 348, 349, 751, 1357, 0, 350, 1364,
	351, 1363, 0, 1374, 352, 353, 354, 355, 356, 357,
	358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0, 360,
	361, 1350, 0, 1331, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 1385, 387, 388, 389, 1334,
	1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393,
	394, 1367, 395, 397, 1361, 1360, 1277, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 1352, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 1283, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 1375,
	1376, 431, 432, 1297, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 1359, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 1386, 442, 443, 444,
	1372, 1373, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 1382, 0, 1307, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 1345, 1346, 1349, 558, 1388,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 1287, 325, 327,
	1387, 773, 475, 559, 476, 1354, 1355, 0, 1313, 0,
	477, 478, 480, 1389, 1347, 1390, 479, 481, 482, 1391,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 1383, 494, 1392,
	496, 497, 1393, 0, 498, 499, 500, 501, 502, 503,
	506, 1338, 1337, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 1394, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 1395, 551, 538, 1274, 539, 328, 1396, 553, 554,
	555, 556, 1298, 1348, 557, 1362, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 1397, 570, 1398, 1377, 571, 572, 1284,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 1378, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 1358,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 1399, 633, 634,
	635, 636, 637, 1285, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 1341,
	664, 789, 665, 645, 646, 666, 667, 1400, 668, 669,
	670, 671, 672, 673, 674, 1356, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	1403, 685, 686, 687, 688, 1379, 692, 693, 694, 695,
	0, 696, 697, 1271, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 1368, 1369,
	1370, 1371, 0, 718, 0, 707, 709, 710, 711, 712,
	1380, 713, 1381, 1296, 714, 715, 716, 717, 708, 719,
	720, 0, 1278, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 1342, 730, 0, 0, 731, 732, 733, 799,
	1365, 1402, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 0, 0, 0, 0, 745,
	746, 803, 747, 748, 749, 1275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1270, 0, 0, 0, 0, 0, 0, 1268, 1269, 0,
	0, 0, 0, 0, 0, 0, 0, 1302, 3014, 0,
	3013, 1300, 1318, 1290, 1291, 1292, 1288, 1289, 1301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 1344, 1306, 0, 0, 339,
	0, 340, 341, 342, 1384, 343, 344, 345, 346, 347,
	348, 349, 751, 1357, 0, 350, 1364, 351, 1363, 0,
	1374, 352, 353, 354, 355, 356, 357, 358, 1308, 1343,
	1272, 359, 1404, 1405, 758, 0, 360, 361, 1350, 0,
	1331, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340,
	1336, 1335, 1339, 390, 391, 392, 393, 394, 1367, 395,
	397, 1361, 1360, 1277, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	1352, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 1283, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 1375, 1376, 431, 432,
	1297, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	1359, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 1386, 442, 443, 444, 1372, 1373, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	1382, 0, 1307, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 1345, 1346, 1349, 558, 1388, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 1287, 325, 327, 1387, 773, 475,
	559, 476, 1354, 1355, 0, 1313, 0, 477, 478, 480,
	1389, 1347, 1390, 479, 481, 482, 1391, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 1383, 494, 1392, 496, 497, 1393,
	0, 498, 499, 500, 501, 502, 503, 506, 1338, 1337,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	1394, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 1395, 551,
	538, 1274, 539, 328, 1396, 553, 554, 555, 556, 1298,
	1348, 557, 1362, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	1397, 570, 1398, 1377, 571, 572, 1284, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 1378, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 1358, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 1399, 633, 634, 635, 636, 637,
	1285, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 1341, 664, 789, 665,
	645, 646, 666, 667, 1400, 668, 669, 670, 671, 672,
	673, 674, 1356, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 1403, 685, 686,
	687, 688, 1379, 692, 693, 694, 695, 0, 696, 697,
	1271, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 1368, 1369, 1370, 1371, 0,
	718, 0, 707, 709, 710, 711, 712, 1380, 713, 1381,
	1296, 714, 715, 716, 717, 708, 719, 720, 0, 1278,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 1342,
	730, 0, 0, 731, 732, 733, 799, 1365, 1402, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 0, 0, 0, 0, 745, 746, 803, 747,
	748, 749, 1275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1270, 0, 0,
	0, 0, 0, 0, 1268, 1269, 0, 0, 0, 0,
	0, 0, 0, 0, 1302, 3011, 0, 3010, 1300, 1318,
	1290, 1291, 1292, 1288, 1289, 1301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 0,
	0, 0, 1344, 1306, 0, 0, 339, 0, 340, 341,
	342, 1384, 343, 344, 345, 346, 347, 348, 349, 751,
	1357, 0, 350, 1364, 351, 1363, 0, 1374, 352, 353,
	354, 355, 356, 357, 358, 1308, 1343, 1272, 359, 1404,
	1405, 758, 0, 360, 361, 1350, 0, 1331, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 1385,
	387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339,
	390, 391, 392, 393, 394, 1367, 395, 397, 1361, 1360,
	1277, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 1352, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	1283, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 1375, 1376, 431, 432, 1297, 324, 0,
	0, 0, 0, 0, 433, 434, 435, 1359, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	1386, 442, 443, 444, 1372, 1373, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 1382, 0, 1307,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 1345,
	1346, 1349, 558, 1388, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 1287, 325, 327, 1387, 773, 475, 559, 476, 1354,
	1355, 0, 1313, 0, 477, 478, 480, 1389, 1347, 1390,
	479, 481, 482, 1391, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 1383, 494, 1392, 496, 497, 1393, 0, 498, 499,
	500, 501, 502, 503, 506, 1338, 1337, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 1394, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 1395, 551, 538, 1274, 539,
	328, 1396, 553, 554, 555, 556, 1298, 1348, 557, 1362,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 1397, 570, 1398,
	1377, 571, 572, 1284, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 1378, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 1358, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 1399, 633, 634, 635, 636, 637, 1285, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 1341, 664, 789, 665, 645, 646, 666,
	667, 1400, 668, 669, 670, 671, 672, 673, 674, 1356,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 1403, 685, 686, 687, 688, 1379,
	692, 693, 694, 695, 0, 696, 697, 1271, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 1368, 1369, 1370, 1371, 0, 718, 0, 707,
	709, 710, 711, 712, 1380, 713, 1381, 1296, 714, 715,
	716, 717, 708, 719, 720, 0, 1278, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 1342, 730, 0, 0,
	731, 732, 733, 799, 1365, 1402, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 0,
	0, 0, 0, 745, 746, 803, 747, 748, 749, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1270, 0, 0, 0, 0, 0,
	0, 1268, 1269, 0, 0, 0, 0, 0, 0, 0,
	0, 1302, 3008, 0, 3007, 1300, 1318, 1290, 1291, 1292,
	1288, 1289, 1301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 1344,
	1306, 0, 0, 339, 0, 340, 341, 342, 1384, 343,
	344, 345, 346, 347, 348, 349, 751, 1357, 0, 350,
	1364, 351, 1363, 0, 1374, 352, 353, 354, 355, 356,
	357, 358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0,
	360, 361, 1350, 0, 1331, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 1385, 387, 388, 389,
	1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392,
	393, 394, 1367, 395, 397, 1361, 1360, 1277, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 1352, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 1283, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	1375, 1376, 431, 432, 1297, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 1359, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 1386, 442, 443,
	444, 1372, 1373, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 1382, 0, 1307, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 1345, 1346, 1349, 558,
	1388, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 1287, 325,
	327, 1387, 773, 475, 559, 476, 1354, 1355, 0, 1313,
	0, 477, 478, 480, 1389, 1347, 1390, 479, 481, 482,
	1391, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 1383, 494,
	1392, 496, 497, 1393, 0, 498, 499, 500, 501, 502,
	503, 506, 1338, 1337, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 1394, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 1395, 551, 538, 1274, 539, 328, 1396, 553,
	554, 555, 556, 1298, 1348, 557, 1362, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 1397, 570, 1398, 1377, 571, 572,
	1284, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 1378, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	1358, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 1399, 633,
	634, 635, 636, 637, 1285, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	1341, 664, 789, 665, 645, 646, 666, 667, 1400, 668,
	669, 670, 671, 672, 673, 674, 1356, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 1403, 685, 686, 687, 688, 1379, 692, 693, 694,
	695, 0, 696, 697, 1271, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 1368,
	1369, 1370, 1371, 0, 718, 0, 707, 709, 710, 711,
	712, 1380, 713, 1381, 1296, 714, 715, 716, 717, 708,
	719, 720, 0, 1278, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 1342, 730, 0, 0, 731, 732, 733,
	799, 1365, 1402, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 0, 0, 0, 0,
	745, 746, 803, 747, 748, 749, 1275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1270, 0, 0, 0, 0, 0, 0, 1268, 1269,
	0, 0, 0, 0, 0, 0, 0, 0, 1302, 3005,
	0, 1681, 1300, 1318, 1290, 1291, 1292, 1288, 1289, 1301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 0, 337,
	338, 0, 0, 0, 0, 0, 1344, 1306, 0, 0,
	339, 0, 340, 341, 342, 1384, 343, 344, 345, 346,
	347, 348, 349, 751, 1357, 0, 350, 1364, 351, 1363,
	0, 1374, 352, 353, 354, 355, 356, 357, 358, 1308,
	1343, 1272, 359, 1404, 1405, 758, 0, 360, 361, 1350,
	0, 1331, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 1385, 387, 388, 389, 1334, 1332, 1333,
	1340, 1336, 1335, 1339, 390, 391, 392, 393, 394, 1367,
	395, 397, 1361, 1360, 1277, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 1352, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 1283, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 1375, 1376, 431,
	432, 1297, 324, 0, 0, 0, 0, 0, 433, 434,
	435, 1359, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 1386, 442, 443, 444, 1372, 1373,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 1382, 0, 1307, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 1345, 1346, 1349, 558, 1388, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 1287, 325, 327, 1387, 773,
	475, 559, 476, 1354, 1355, 0, 1313, 0, 477, 478,
	480, 1389, 1347, 1390, 479, 481, 482, 1391, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 1383, 494, 1392, 496, 497,
	1393, 0, 498, 499, 500, 501, 502, 503, 506, 1338,
	1337, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 1394, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 1395,
	551, 538, 1274, 539, 328, 1396, 553, 554, 555, 556,
	1298, 1348, 557, 1362, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 1397, 570, 1398, 1377, 571, 572, 1284, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 1378,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 1358, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 1399, 633, 634, 635, 636,
	637, 1285, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 1341, 664, 789,
	665, 645, 646, 666, 667, 1400, 668, 669, 670, 671,
	672, 673, 674, 1356, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 1403, 685,
	686, 687, 688, 1379, 692, 693, 694, 695, 0, 696,
	697, 1271, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 1368, 1369, 1370, 1371,
	0, 718, 0, 707, 709, 710, 711, 712, 1380, 713,
	1381, 1296, 714, 715, 716, 717, 708, 719, 720, 0,
	1278, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	1342, 730, 0, 0, 731, 732, 733, 799, 1365, 1402,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 1680, 0, 0, 0, 745, 746, 803,
	747, 748, 749, 1275, 0, 0, 0, 0, 1264, 0,
	1318, 1290, 1291, 1292, 1288, 1289, 1301, 0, 1270, 0,
	0, 0, 0, 0, 0, 1268, 1269, 329, 330, 332,
	331, 333, 334, 335, 336, 1302, 337, 338, 0, 1300,
	0, 0, 0, 1344, 1306, 0, 0, 339, 0, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 1357, 0, 350, 1364, 351, 1363, 0, 1374, 352,
	353, 354, 355, 356, 357, 358, 1308, 1343, 1272, 359,
	1404, 1405, 758, 0, 360, 361, 1350, 0, 1331, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335,
	1339, 390, 391, 392, 393, 394, 1367, 395, 397, 1361,
	1360, 1277, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 1352, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 1283, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 1375, 1376, 431, 432, 1297, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 1359, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 1386, 442, 443, 444, 1372, 1373, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 1382, 0,
	1307, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	1345, 1346, 1349, 558, 1388, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 1287, 325, 327, 1387, 773, 475, 559, 476,
	1354, 1355, 0, 1313, 0, 477, 478, 480, 1389, 1347,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 1383, 494, 1392, 496, 497, 1393, 0, 498,
	499, 500, 501, 502, 503, 506, 1338, 1337, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 1274,
	539, 328, 1396, 553, 554, 555, 556, 1298, 1348, 557,
	1362, 560, 561, 0, 0, 562, 0, 563, 1279, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 1397, 570,
	1398, 1377, 571, 572, 1284, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 1378, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 1358, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 1285, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 1341, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	1356, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 1403, 685, 686, 687, 688,
	1379, 692, 693, 694, 695, 0, 696, 697, 1271, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 1368, 1369, 1370, 1371, 0, 718, 0,
	707, 709, 710, 711, 712, 1380, 713, 1381, 1296, 714,
	715, 716, 717, 708, 719, 720, 0, 1278, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 1342, 730, 0,
	0, 731, 732, 733, 799, 1365, 1402, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	0, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	1275, 0, 0, 0, 0, 0, 0, 1318, 1290, 1291,
	1292, 1288, 1289, 1301, 0, 1270, 0, 0, 0, 0,
	0, 0, 1268, 1269, 329, 330, 332, 331, 333, 334,
	335, 336, 1302, 337, 338, 0, 1300, 0, 0, 0,
	1344, 1306, 0, 0, 339, 0, 340, 341, 342, 1384,
	343, 344, 345, 346, 347, 348, 349, 751, 1357, 0,
	350, 1364, 351, 1363, 0, 1374, 352, 353, 354, 355,
	356, 357, 358, 1308, 1343, 1272, 359, 1404, 1405, 758,
	0, 360, 361, 1350, 0, 1331, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	5466, 382, 383, 0, 384, 385, 386, 1385, 387, 388,
	389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391,
	392, 393, 394, 1367, 395, 397, 1361, 1360, 1277, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 1352, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 1283, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 1375, 1376, 431, 432, 1297, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 1359, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 1386, 442,
	443, 444, 1372, 1373, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 1382, 0, 1307, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 1345, 1346, 1349,
	558, 1388, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 1287,
	325, 327, 1387, 773, 475, 559, 476, 1354, 1355, 0,
	1313, 0, 477, 478, 480, 1389, 1347, 1390, 479, 481,
	482, 1391, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 1383,
	494, 1392, 496, 497, 1393, 0, 498, 499, 500, 501,
	502, 503, 506, 1338, 1337, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 1394, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 1395, 551, 538, 1274, 539, 328, 1396,
	553, 554, 555, 556, 1298, 1348, 557, 1362, 560, 561,
	0, 0, 562, 0, 563, 1279, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 1397, 570, 1398, 1377, 571,
	572, 1284, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 1378, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 1358, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 1399,
	633, 634, 635, 636, 637, 1285, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 1341, 664, 789, 665, 645, 646, 666, 667, 1400,
	668, 669, 670, 671, 672, 673, 674, 1356, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 1403, 685, 686, 687, 688, 1379, 692, 693,
	694, 695, 0, 696, 697, 1271, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	1368, 1369, 1370, 1371, 0, 718, 0, 707, 709, 710,
	711, 712, 1380, 713, 1381, 1296, 714, 715, 716, 717,
	708, 719, 720, 0, 1278, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 1342, 730, 0, 0, 731, 732,
	733, 799, 1365, 1402, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 0, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 1275, 0, 0,
	0, 0, 0, 0, 1318, 1290, 1291, 1292, 1288, 1289,
	1301, 0, 1270, 0, 0, 0, 0, 0, 0, 1268,
	1269, 329, 330, 332, 331, 333, 334, 335, 336, 1302,
	337, 338, 0, 1300, 0, 0, 0, 1344, 1306, 0,
	0, 339, 0, 340, 341, 342, 1384, 343, 344, 345,
	346, 347, 348, 349, 751, 1357, 0, 350, 1364, 351,
	1363, 0, 1374, 352, 353, 354, 355, 356, 357, 358,
	1308, 1343, 1272, 359, 1404, 1405, 758, 0, 360, 361,
	1350, 0, 1331, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 1385, 387, 388, 389, 1334, 1332,
	1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393, 394,
	1367, 395, 397, 1361, 1360, 1277, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 1352, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 1283, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 1375, 1376,
	431, 432, 1297, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 1359, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 1386, 442, 443, 444, 1372,
	1373, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 1382, 0, 1307, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 1345, 1346, 1349, 558, 1388, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 1287, 325, 2846, 1387,
	773, 475, 559, 476, 1354, 1355, 0, 1313, 0, 477,
	478, 480, 1389, 1347, 1390, 479, 481, 482, 1391, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 1383, 494, 1392, 496,
	497, 1393, 0, 498, 499, 500, 501, 502, 503, 506,
	1338, 1337, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 1394, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	1395, 551, 538, 1274, 539, 328, 1396, 553, 554, 555,
	556, 1298, 1348, 557, 1362, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 1397, 570, 1398, 1377, 571, 572, 1284, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	1378, 591, 786, 592, 593, 2845, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 1358, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 1399, 633, 634, 635,
	636, 637, 1285, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 1341, 664,
	789, 665, 645, 646, 666, 667, 1400, 668, 669, 670,
	671, 672, 673, 674, 1356, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 1403,
	685, 686, 687, 688, 1379, 692, 693, 694, 695, 0,
	696, 697, 1271, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 1368, 1369, 1370,
	1371, 0, 718, 0, 707, 709, 710, 711, 712, 1380,
	713, 1381, 1296, 714, 715, 716, 717, 708, 719, 720,
	0, 1278, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 1342, 730, 0, 0, 731, 732, 733, 799, 1365,
	1402, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 0, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 1275, 0, 0, 0, 0, 0,
	0, 1318, 1290, 1291, 1292, 1288, 1289, 1301, 0, 1270,
	0, 0, 0, 0, 0, 0, 1268, 1269, 329, 330,
	332, 331, 333, 334, 335, 336, 1302, 337, 338, 0,
	1300, 0, 0, 0, 1344, 1306, 0, 0, 339, 0,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 1357, 0, 350, 1364, 351, 1363, 0, 1374,
	352, 353, 354, 355, 356, 357, 358, 1308, 1343, 1272,
	359, 1404, 1405, 758, 0, 360, 361, 1350, 0, 1331,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 5179, 382, 383, 0, 384, 385,
	386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336,
	1335, 1339, 390, 391, 392, 393, 394, 1367, 395, 397,
	1361, 1360, 1277, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 1352,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 1283, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 1375, 1376, 431, 432, 1297,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 1359,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 1386, 442, 443, 444, 1372, 1373, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 1382,
	0, 1307, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 1345, 1346, 1349, 558, 1388, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 1287, 325, 327, 1387, 773, 475, 559,
	476, 1354, 1355, 0, 1313, 0, 477, 478, 480, 1389,
	1347, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 1383, 494, 1392, 496, 497, 1393, 0,
	498, 499, 500, 501, 502, 503, 506, 1338, 1337, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	1274, 539, 328, 1396, 553, 554, 555, 556, 1298, 1348,
	557, 1362, 560, 561, 0, 0, 562, 0, 563, 1279,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 1397,
	570, 1398, 1377, 571, 572, 1284, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 1378, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 1358, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 636, 637, 1285,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 1341, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 1356, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 1403, 685, 686, 687,
	688, 1379, 692, 693, 694, 695, 0, 696, 697, 1271,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 1368, 1369, 1370, 1371, 0, 718,
	0, 707, 709, 710, 711, 712, 1380, 713, 1381, 1296,
	714, 715, 716, 717, 708, 719, 720, 0, 1278, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 1342, 730,
	0, 0, 731, 732, 733, 799, 1365, 1402, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 0, 0, 0, 0, 745, 746, 803, 747, 748,
	749, 1275, 0, 0, 0, 0, 0, 0, 1318, 1290,
	1291, 1292, 1288, 1289, 1301, 0, 1270, 0, 0, 0,
	0, 0, 0, 1268, 1269, 329, 330, 332, 331, 333,
	334, 335, 336, 1302, 337, 338, 0, 1300, 0, 0,
	0, 1344, 1306, 0, 0, 339, 0, 340, 341, 342,
	1384, 343, 344, 345, 346, 347, 348, 349, 751, 1357,
	0, 350, 1364, 351, 1363, 0, 1374, 352, 353, 354,
	355, 356, 357, 358, 1308, 1343, 1272, 359, 1404, 1405,
	758, 0, 360, 361, 1350, 0, 1331, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 1385, 387,
	388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390,
	391, 392, 393, 394, 1367, 395, 397, 1361, 1360, 1277,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 1352, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 1283,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 1375, 1376, 431, 432, 1297, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 1359, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 1386,
	442, 443, 444, 1372, 1373, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 1382, 0, 1307, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 1345, 1346,
	1349, 558, 1388, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	1287, 325, 327, 1387, 773, 475, 559, 476, 1354, 1355,
	0, 1313, 0, 477, 478, 480, 1389, 1347, 1390, 479,
	481, 482, 1391, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	1383, 494, 1392, 496, 497, 1393, 0, 498, 499, 500,
	501, 502, 503, 506, 1338, 1337, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 1394, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 1395, 551, 538, 1274, 539, 328,
	1396, 553, 554, 555, 556, 1298, 1348, 557, 1362, 560,
	561, 0, 0, 562, 0, 563, 1279, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 1397, 570, 1398, 1377,
	571, 572, 1284, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 1378, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 1358, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	1399, 633, 634, 635, 636, 637, 1285, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 1341, 664, 789, 665, 645, 646, 666, 667,
	1400, 668, 669, 670, 671, 672, 673, 674, 1356, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 1403, 685, 686, 687, 688, 1379, 692,
	693, 694, 695, 0, 696, 697, 1271, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 1368, 1369, 1370, 1371, 0, 718, 0, 707, 709,
	710, 711, 712, 1380, 713, 1381, 1296, 714, 715, 716,
	717, 708, 719, 720, 0, 1278, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 1342, 730, 0, 0, 731,
	732, 733, 799, 1365, 1402, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 0, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 1275, 0,
	0, 0, 0, 0, 0, 1318, 1290, 1291, 1292, 1288,
	1289, 1301, 0, 1270, 0, 0, 0, 0, 0, 0,
	1268, 1269, 329, 330, 332, 331, 333, 334, 335, 336,
	1302, 337, 338, 0, 1300, 0, 0, 0, 1344, 1306,
	0, 0, 339, 0, 340, 341, 342, 1384, 343, 344,
	345, 346, 347, 348, 349, 751, 1357, 0, 350, 1364,
	351, 1363, 0, 1374, 352, 353, 354, 355, 356, 357,
	358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0, 360,
	361, 1350, 0, 1331, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 1385, 387, 388, 389, 1334,
	1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393,
	394, 1367, 395, 397, 1361, 1360, 1277, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 1352, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 1283, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 1375,
	1376, 431, 432, 1297, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 1359, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 1386, 442, 443, 444,
	1372, 1373, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 1382, 0, 1307, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 1345, 1346, 1349, 558, 1388,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 1287, 325, 327,
	1387, 773, 475, 559, 476, 1354, 1355, 0, 1313, 0,
	477, 478, 480, 1389, 1347, 1390, 479, 481, 482, 1391,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 1383, 494, 1392,
	496, 497, 1393, 0, 498, 499, 500, 501, 502, 503,
	506, 1338, 1337, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 1394, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 1395, 551, 538, 1274, 539, 4714, 1396, 553, 554,
	555, 556, 1298, 1348, 557, 1362, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 1397, 570, 1398, 1377, 571, 572, 1284,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 1378, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 1358,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 1399, 633, 634,
	635, 636, 637, 1285, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 1341,
	664, 789, 665, 645, 646, 666, 667, 1400, 668, 669,
	670, 671, 672, 673, 674, 1356, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	1403, 685, 686, 687, 688, 1379, 692, 693, 694, 695,
	0, 696, 697, 1271, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 1368, 1369,
	1370, 1371, 0, 718, 0, 707, 709, 710, 711, 712,
	1380, 713, 1381, 1296, 714, 715, 716, 717, 708, 719,
	720, 0, 1278, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 1342, 730, 0, 0, 731, 732, 733, 799,
	1365, 1402, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 0, 0, 0, 0, 745,
	746, 803, 747, 748, 749, 1275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1270, 0, 0, 0, 0, 0, 0, 1268, 1269, 2220,
	1318, 1290, 1291, 1292, 1288, 1289, 1301, 1302, 0, 0,
	0, 1300, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 1344, 1306, 0, 0, 339, 0, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 1357, 0, 350, 1364, 351, 1363, 0, 1374, 352,
	353, 354, 355, 356, 357, 358, 1308, 1343, 1272, 359,
	1404, 1405, 758, 0, 360, 361, 1350, 0, 1331, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335,
	1339, 390, 391, 392, 393, 394, 1367, 395, 397, 1361,
	1360, 1277, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 1352, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 1283, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 1375, 1376, 431, 432, 1297, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 1359, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 1386, 442, 443, 444, 1372, 1373, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 1382, 0,
	1307, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	1345, 1346, 1349, 558, 1388, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 1287, 325, 327, 1387, 773, 475, 559, 476,
	1354, 1355, 0, 1313, 0, 477, 478, 480, 1389, 1347,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 1383, 494, 1392, 496, 497, 1393, 0, 498,
	499, 500, 501, 502, 503, 506, 1338, 1337, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 1274,
	539, 328, 1396, 553, 554, 555, 556, 1298, 1348, 557,
	1362, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 1397, 570,
	1398, 1377, 571, 572, 1284, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 1378, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 1358, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 1285, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 1341, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	1356, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 1403, 685, 686, 687, 688,
	1379, 692, 693, 694, 695, 0, 696, 697, 1271, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 1368, 1369, 1370, 1371, 0, 718, 0,
	707, 709, 710, 711, 712, 1380, 713, 1381, 1296, 714,
	715, 716, 717, 708, 719, 720, 0, 1278, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 1342, 730, 0,
	0, 731, 732, 733, 799, 1365, 1402, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	0, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	1275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1270, 0, 0, 0, 0,
	0, 0, 1268, 1269, 2220, 1318, 1290, 1291, 1292, 1288,
	1289, 1301, 1302, 0, 0, 0, 1300, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 1344, 1306,
	0, 0, 339, 0, 340, 341, 342, 1384, 343, 344,
	345, 346, 347, 348, 349, 751, 1357, 0, 350, 1364,
	351, 1363, 0, 1374, 352, 353, 354, 355, 356, 357,
	358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0, 360,
	361, 1350, 0, 1331, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 1385, 387, 388, 389, 1334,
	1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393,
	394, 1367, 395, 397, 1361, 1360, 1277, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 1352, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 1283, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 1375,
	1376, 431, 432, 1297, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 1359, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 1386, 442, 443, 444,
	1372, 1373, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 1382, 0, 1307, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 1345, 1346, 1349, 558, 1388,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 1287, 325, 327,
	1387, 773, 475, 559, 476, 1354, 1355, 0, 1313, 0,
	477, 478, 480, 1389, 1347, 1390, 479, 481, 482, 1391,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 1383, 494, 1392,
	496, 497, 1393, 0, 498, 499, 500, 501, 502, 503,
	506, 1338, 1337, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 1394, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 1395, 551, 538, 1274, 539, 328, 1396, 553, 554,
	555, 556, 1298, 1348, 557, 1362, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 1397, 570, 1398, 1377, 571, 572, 1284,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 1378, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 1358,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 1399, 633, 634,
	635, 636, 637, 1285, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 1341,
	664, 789, 665, 645, 646, 666, 667, 1400, 668, 669,
	670, 671, 672, 673, 674, 1356, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	1403, 685, 686, 687, 688, 1379, 692, 693, 694, 695,
	0, 696, 697, 1271, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 1368, 1369,
	1370, 1371, 0, 718, 0, 707, 709, 710, 711, 712,
	1380, 713, 1381, 1296, 714, 715, 716, 717, 708, 719,
	720, 0, 1278, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 1342, 730, 0, 0, 731, 732, 733, 799,
	1365, 1402, 4330, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 0, 0, 0, 0, 745,
	746, 803, 747, 748, 749, 1275, 0, 0, 0, 0,
	0, 0, 1318, 1290, 1291, 1292, 1288, 1289, 1301, 0,
	1270, 0, 0, 0, 0, 0, 0, 1268, 1269, 329,
	330, 332, 331, 333, 334, 335, 336, 1302, 337, 338,
	0, 1300, 0, 0, 0, 1344, 1306, 0, 0, 339,
	0, 340, 341, 342, 1384, 343, 344, 345, 346, 347,
	348, 349, 751, 1357, 0, 350, 1364, 351, 1363, 0,
	1374, 352, 353, 354, 355, 356, 357, 358, 1308, 1343,
	1272, 359, 1404, 1405, 758, 0, 360, 361, 1350, 0,
	1331, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340,
	1336, 1335, 1339, 390, 391, 392, 393, 394, 1367, 395,
	397, 1361, 1360, 1277, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	1352, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 1283, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 1375, 1376, 431, 432,
	1297, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	1359, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 3109, 1386, 442, 443, 444, 1372, 1373, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	1382, 0, 1307, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 1345, 1346, 1349, 558, 1388, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 1287, 325, 327, 1387, 773, 475,
	559, 476, 1354, 1355, 0, 1313, 0, 477, 478, 480,
	1389, 1347, 1390, 479, 481, 482, 1391, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 1383, 494, 1392, 496, 497, 1393,
	0, 498, 499, 500, 501, 502, 503, 506, 1338, 1337,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	1394, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 1395, 551,
	538, 1274, 539, 328, 1396, 553, 554, 555, 556, 1298,
	1348, 557, 1362, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	1397, 570, 1398, 1377, 571, 572, 1284, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 1378, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 1358, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 1399, 633, 634, 635, 636, 637,
	1285, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 1341, 664, 789, 665,
	645, 646, 666, 667, 1400, 668, 669, 670, 671, 672,
	673, 674, 1356, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 1403, 685, 686,
	687, 688, 1379, 692, 693, 694, 695, 0, 696, 697,
	1271, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 1368, 1369, 1370, 1371, 0,
	718, 0, 707, 709, 710, 711, 712, 1380, 713, 1381,
	1296, 714, 715, 716, 717, 708, 719, 720, 0, 1278,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 1342,
	730, 0, 0, 731, 732, 733, 799, 1365, 1402, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 0, 0, 0, 0, 745, 746, 803, 747,
	748, 749, 1275, 0, 0, 0, 0, 0, 0, 1318,
	1290, 1291, 1292, 1288, 1289, 1301, 0, 1270, 0, 0,
	0, 0, 0, 0, 1268, 1269, 329, 330, 332, 331,
	333, 334, 335, 336, 1302, 337, 338, 0, 1300, 0,
	0, 0, 1344, 1306, 0, 0, 339, 0, 340, 341,
	342, 1384, 343, 344, 345, 346, 347, 348, 349, 751,
	1357, 0, 350, 1364, 351, 1363, 0, 1374, 352, 353,
	354, 355, 356, 357, 358, 1308, 1343, 1272, 359, 1404,
	1405, 758, 0, 360, 361, 1350, 0, 1331, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 1385,
	387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339,
	390, 391, 392, 393, 394, 1367, 395, 397, 1361, 1360,
	1277, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 1352, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	1283, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 1375, 1376, 431, 432, 1297, 324, 0,
	0, 0, 0, 0, 433, 434, 435, 1359, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	1386, 442, 443, 444, 1372, 1373, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 1382, 0, 1307,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 1345,
	1346, 1349, 558, 1388, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 1287, 325, 327, 1387, 773, 475, 559, 476, 1354,
	1355, 0, 1313, 0, 477, 478, 480, 1389, 1347, 1390,
	479, 481, 482, 1391, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 1383, 494, 1392, 496, 497, 1393, 0, 498, 499,
	500, 501, 502, 503, 506, 1338, 1337, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 1394, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 1395, 551, 538, 1274, 539,
	328, 1396, 553, 554, 555, 556, 1298, 1348, 557, 1362,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 1397, 570, 1398,
	1377, 571, 572, 1284, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 1378, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 1358, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 1399, 633, 634, 635, 636, 637, 1285, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 1341, 664, 789, 665, 645, 646, 666,
	667, 1400, 668, 669, 670, 671, 672, 673, 674, 1356,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 1403, 685, 686, 687, 688, 1379,
	692, 693, 694, 695, 0, 696, 697, 1271, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 1368, 1369, 1370, 1371, 0, 718, 0, 707,
	709, 710, 711, 712, 1380, 713, 1381, 1296, 714, 715,
	716, 717, 708, 719, 720, 0, 1278, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 1342, 730, 0, 0,
	731, 732, 733, 799, 1365, 1402, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 0,
	0, 0, 0, 745, 746, 803, 747, 748, 749, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1270, 0, 0, 0, 0, 0,
	0, 1268, 1269, 0, 0, 0, 0, 0, 0, 0,
	0, 1302, 2144, 0, 3114, 1300, 1318, 1290, 1291, 1292,
	1288, 1289, 1301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 1344,
	1306, 0, 0, 339, 0, 340, 341, 342, 1384, 343,
	344, 345, 346, 347, 348, 349, 751, 1357, 0, 350,
	1364, 351, 1363, 0, 1374, 352, 353, 354, 355, 356,
	357, 358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0,
	360, 361, 1350, 0, 1331, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 1385, 387, 388, 389,
	1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392,
	393, 394, 1367, 395, 397, 1361, 1360, 1277, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 1352, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 1283, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	1375, 1376, 431, 432, 1297, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 1359, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 1386, 442, 443,
	444, 1372, 1373, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 1382, 0, 1307, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 1345, 1346, 1349, 558,
	1388, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 1287, 325,
	327, 1387, 773, 475, 559, 476, 1354, 1355, 0, 1313,
	0, 477, 478, 480, 1389, 1347, 1390, 479, 481, 482,
	1391, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 1383, 494,
	1392, 496, 497, 1393, 0, 498, 499, 500, 501, 502,
	503, 506, 1338, 1337, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 1394, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 1395, 551, 538, 1274, 539, 328, 1396, 553,
	554, 555, 556, 1298, 1348, 557, 1362, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 1397, 570, 1398, 1377, 571, 572,
	1284, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 1378, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	1358, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 1399, 633,
	634, 635, 636, 637, 1285, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	1341, 664, 789, 665, 645, 646, 666, 667, 1400, 668,
	669, 670, 671, 672, 673, 674, 1356, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 1403, 685, 686, 687, 688, 1379, 692, 693, 694,
	695, 0, 696, 697, 1271, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 1368,
	1369, 1370, 1371, 0, 718, 0, 707, 709, 710, 711,
	712, 1380, 713, 1381, 1296, 714, 715, 716, 717, 708,
	719, 720, 0, 1278, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 1342, 730, 0, 0, 731, 732, 733,
	799, 1365, 1402, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 0, 0, 0, 0,
	745, 746, 803, 747, 748, 749, 1275, 0, 0, 0,
	0, 3112, 0, 1318, 1290, 1291, 1292, 1288, 1289, 1301,
	0, 1270, 0, 0, 0, 0, 0, 0, 1268, 1269,
	329, 330, 332, 331, 333, 334, 335, 336, 1302, 337,
	338, 0, 1300, 0, 0, 0, 1344, 1306, 0, 0,
	339, 0, 340, 341, 342, 1384, 343, 344, 345, 346,
	347, 348, 349, 751, 1357, 0, 350, 1364, 351, 1363,
	0, 1374, 352, 353, 354, 355, 356, 357, 358, 1308,
	1343, 1272, 359, 1404, 1405, 758, 0, 360, 361, 1350,
	0, 1331, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 1385, 387, 388, 389, 1334, 1332, 1333,
	1340, 1336, 1335, 1339, 390, 391, 392, 393, 394, 1367,
	395, 397, 1361, 1360, 1277, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 1352, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 1283, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 1375, 1376, 431,
	432, 1297, 324, 0, 0, 0, 0, 0, 433, 434,
	435, 1359, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 1386, 442, 443, 444, 1372, 1373,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 1382, 0, 1307, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 1345, 1346, 1349, 558, 1388, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 1287, 325, 327, 1387, 773,
	475, 559, 476, 1354, 1355, 0, 1313, 0, 477, 478,
	480, 1389, 1347, 1390, 479, 481, 482, 1391, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 1383, 494, 1392, 496, 497,
	1393, 0, 498, 499, 500, 501, 502, 503, 506, 1338,
	1337, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 1394, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 1395,
	551, 538, 1274, 539, 328, 1396, 553, 554, 555, 556,
	1298, 1348, 557, 1362, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 1397, 570, 1398, 1377, 571, 572, 1284, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 1378,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 1358, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 1399, 633, 634, 635, 636,
	637, 1285, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 1341, 664, 789,
	665, 645, 646, 666, 667, 1400, 668, 669, 670, 671,
	672, 673, 674, 1356, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 1403, 685,
	686, 687, 688, 1379, 692, 693, 694, 695, 0, 696,
	697, 1271, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 1368, 1369, 1370, 1371,
	0, 718, 0, 707, 709, 710, 711, 712, 1380, 713,
	1381, 1296, 714, 715, 716, 717, 708, 719, 720, 0,
	1278, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	1342, 730, 0, 0, 731, 732, 733, 799, 1365, 1402,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 0, 0, 0, 0, 745, 746, 803,
	747, 748, 749, 1275, 0, 0, 0, 0, 3100, 0,
	1318, 1290, 1291, 1292, 1288, 1289, 1301, 0, 1270, 0,
	0, 0, 0, 0, 0, 1268, 1269, 329, 330, 332,
	331, 333, 334, 335, 336, 1302, 337, 338, 0, 1300,
	0, 0, 0, 1344, 1306, 0, 0, 339, 0, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 1357, 0, 350, 1364, 351, 1363, 0, 1374, 352,
	353, 354, 355, 356, 357, 358, 1308, 1343, 1272, 359,
	1404, 1405, 758, 0, 360, 361, 1350, 0, 1331, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335,
	1339, 390, 391, 392, 393, 394, 1367, 395, 397, 1361,
	1360, 1277, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 1352, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 1283, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 1375, 1376, 431, 432, 1297, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 1359, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 1386, 442, 443, 444, 1372, 1373, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 1382, 0,
	1307, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	1345, 1346, 1349, 558, 1388, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 1287, 325, 327, 1387, 773, 475, 559, 476,
	1354, 1355, 0, 1313, 0, 477, 478, 480, 1389, 1347,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 1383, 494, 1392, 496, 497, 1393, 0, 498,
	499, 500, 501, 502, 503, 506, 1338, 1337, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 1274,
	539, 328, 1396, 553, 554, 555, 556, 1298, 1348, 557,
	1362, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 1397, 570,
	1398, 1377, 571, 572, 1284, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 1378, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 1358, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 1285, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 1341, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	1356, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 1403, 685, 686, 687, 688,
	1379, 692, 693, 694, 695, 0, 696, 697, 1271, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 1368, 1369, 1370, 1371, 0, 718, 0,
	707, 709, 710, 711, 712, 1380, 713, 1381, 1296, 714,
	715, 716, 717, 708, 719, 720, 0, 1278, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 1342, 730, 0,
	0, 731, 732, 733, 799, 1365, 1402, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	0, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	1275, 0, 0, 0, 0, 3089, 0, 1318, 1290, 1291,
	1292, 1288, 1289, 1301, 0, 1270, 0, 0, 0, 0,
	0, 0, 1268, 1269, 329, 330, 332, 331, 333, 334,
	335, 336, 1302, 337, 338, 0, 1300, 0, 0, 0,
	1344, 1306, 0, 0, 339, 0, 340, 341, 342, 1384,
	343, 344, 345, 346, 347, 348, 349, 751, 1357, 0,
	350, 1364, 351, 1363, 0, 1374, 352, 353, 354, 355,
	356, 357, 358, 1308, 1343, 1272, 359, 1404, 1405, 758,
	0, 360, 361, 1350, 0, 1331, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 1385, 387, 388,
	389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391,
	392, 393, 394, 1367, 395, 397, 1361, 1360, 1277, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 1352, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 1283, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 1375, 1376, 431, 432, 1297, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 1359, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 1386, 442,
	443, 444, 1372, 1373, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 1382, 0, 1307, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 1345, 1346, 1349,
	558, 1388, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 1287,
	325, 327, 1387, 773, 475, 559, 476, 1354, 1355, 0,
	1313, 0, 477, 478, 480, 1389, 1347, 1390, 479, 481,
	482, 1391, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 1383,
	494, 1392, 496, 497, 1393, 0, 498, 499, 500, 501,
	502, 503, 506, 1338, 1337, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 1394, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 1395, 551, 538, 1274, 539, 328, 1396,
	553, 554, 555, 556, 1298, 1348, 557, 1362, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 1397, 570, 1398, 1377, 571,
	572, 1284, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 1378, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 1358, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 1399,
	633, 634, 635, 636, 637, 1285, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 1341, 664, 789, 665, 645, 646, 666, 667, 1400,
	668, 669, 670, 671, 672, 673, 674, 1356, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 1403, 685, 686, 687, 688, 1379, 692, 693,
	694, 695, 0, 696, 697, 1271, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	1368, 1369, 1370, 1371, 0, 718, 0, 707, 709, 710,
	711, 712, 1380, 713, 1381, 1296, 714, 715, 716, 717,
	708, 719, 720, 0, 1278, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 1342, 730, 0, 0, 731, 732,
	733, 799, 1365, 1402, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 0, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 1275, 0, 0,
	0, 0, 3087, 0, 3078, 3085, 1291, 1292, 1288, 1289,
	1301, 0, 1270, 0, 0, 0, 0, 0, 0, 1268,
	1269, 329, 330, 332, 331, 333, 334, 335, 336, 1302,
	337, 338, 0, 1300, 0, 0, 0, 1344, 1306, 0,
	0, 339, 0, 340, 341, 342, 1384, 343, 344, 345,
	346, 347, 348, 349, 751, 1357, 0, 350, 1364, 351,
	1363, 0, 1374, 352, 353, 354, 355, 356, 357, 358,
	1308, 1343, 1272, 359, 1404, 1405, 758, 0, 360, 361,
	1350, 0, 1331, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 1385, 387, 388, 389, 1334, 1332,
	1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393, 394,
	1367, 3081, 397, 1361, 1360, 1277, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 1352, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 1283, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 1375, 1376,
	431, 432, 1297, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 1359, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 1386, 442, 443, 444, 1372,
	1373, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 1382, 0, 1307, 455, 0, 456, 457, 458,
	459, 460, 3082, 462, 1345, 1346, 1349, 558, 1388, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 1287, 325, 327, 1387,
	773, 475, 559, 476, 1354, 1355, 0, 1313, 0, 477,
	478, 480, 1389, 1347, 1390, 479, 481, 482, 1391, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 1383, 494, 1392, 496,
	497, 1393, 0, 498, 499, 500, 501, 502, 503, 506,
	1338, 1337, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 3083, 516, 3080, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 1394, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	1395, 551, 538, 1274, 539, 328, 1396, 553, 554, 555,
	556, 1298, 1348, 557, 1362, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 1397, 570, 1398, 1377, 571, 572, 1284, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	1378, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 1358, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 1399, 633, 634, 635,
	636, 637, 1285, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 3084, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 1341, 664,
	789, 665, 645, 646, 666, 667, 1400, 668, 669, 670,
	671, 672, 673, 674, 1356, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 1403,
	685, 686, 687, 688, 1379, 692, 693, 694, 695, 0,
	696, 697, 1271, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 1368, 1369, 1370,
	1371, 0, 718, 0, 707, 709, 710, 711, 712, 1380,
	713, 1381, 1296, 714, 715, 716, 717, 708, 719, 720,
	0, 1278, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 1342, 730, 0, 0, 731, 732, 733, 799, 1365,
	1402, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 0, 0, 0, 0, 745, 746,
	803, 747, 3079, 749, 1275, 0, 0, 0, 0, 3075,
	0, 3078, 3085, 1291, 1292, 1288, 1289, 1301, 0, 1270,
	0, 0, 0, 0, 0, 0, 1268, 1269, 329, 330,
	332, 331, 333, 334, 335, 336, 1302, 337, 338, 0,
	1300, 0, 0, 0, 1344, 1306, 0, 0, 339, 0,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 1357, 0, 350, 1364, 351, 1363, 0, 1374,
	352, 353, 354, 355, 356, 357, 358, 1308, 1343, 1272,
	359, 1404, 1405, 758, 0, 360, 361, 1350, 0, 1331,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336,
	1335, 1339, 390, 391, 392, 393, 394, 1367, 3081, 397,
	1361, 1360, 1277, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 1352,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 1283, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 1375, 1376, 431, 432, 1297,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 1359,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 1386, 442, 443, 444, 1372, 1373, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 1382,
	0, 1307, 455, 0, 456, 457, 458, 459, 460, 3082,
	462, 1345, 1346, 1349, 558, 1388, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 1287, 325, 327, 1387, 773, 475, 559,
	476, 1354, 1355, 0, 1313, 0, 477, 478, 480, 1389,
	1347, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 1383, 494, 1392, 496, 497, 1393, 0,
	498, 499, 500, 501, 502, 503, 506, 1338, 1337, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	3083, 516, 3080, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	1274, 539, 328, 1396, 553, 554, 555, 556, 1298, 1348,
	557, 1362, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 1397,
	570, 1398, 1377, 571, 572, 1284, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 1378, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 1358, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 636, 637, 1285,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 3084, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 1341, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 1356, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 1403, 685, 686, 687,
	688, 1379, 692, 693, 694, 695, 0, 696, 697, 1271,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 1368, 1369, 1370, 1371, 0, 718,
	0, 707, 709, 710, 711, 712, 1380, 713, 1381, 1296,
	714, 715, 716, 717, 708, 719, 720, 0, 1278, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 1342, 730,
	0, 0, 731, 732, 733, 799, 1365, 1402, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 0, 0, 0, 0, 745, 746, 803, 747, 3079,
	749, 1275, 0, 0, 0, 0, 0, 0, 1318, 1290,
	1291, 1292, 1288, 1289, 1301, 0, 1270, 0, 0, 0,
	0, 0, 0, 1268, 1269, 329, 330, 332, 331, 333,
	334, 335, 336, 1302, 337, 338, 0, 1300, 0, 0,
	0, 1344, 1306, 0, 0, 339, 0, 340, 341, 342,
	1384, 343, 344, 345, 346, 347, 348, 349, 751, 1357,
	0, 350, 1364, 351, 1363, 0, 1374, 352, 353, 354,
	355, 356, 357, 358, 1308, 1343, 1272, 359, 1404, 1405,
	758, 0, 360, 361, 1350, 0, 1331, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 1385, 387,
	388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390,
	391, 392, 393, 394, 1367, 395, 397, 1361, 1360, 1277,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 1352, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 1283,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 1375, 1376, 431, 432, 1297, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 1359, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 1386,
	442, 443, 444, 1372, 1373, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 1382, 0, 1307, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 1345, 1346,
	1349, 558, 1388, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	1287, 325, 327, 1387, 773, 475, 559, 476, 1354, 1355,
	0, 1313, 0, 477, 478, 480, 1389, 1347, 1390, 479,
	481, 482, 1391, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	1383, 494, 1392, 496, 497, 1393, 0, 498, 499, 500,
	501, 502, 503, 506, 1338, 1337, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 1394, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 1395, 551, 538, 1274, 539, 328,
	1396, 553, 554, 555, 556, 1298, 1348, 557, 1362, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 1397, 570, 1398, 1377,
	571, 572, 1284, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 1378, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 1358, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	1399, 633, 634, 635, 636, 637, 1285, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 1341, 664, 789, 665, 645, 646, 666, 667,
	1400, 668, 669, 670, 671, 672, 673, 674, 1356, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 1403, 685, 686, 687, 688, 1379, 692,
	693, 694, 695, 0, 696, 697, 1271, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 1368, 1369, 1370, 1371, 0, 718, 0, 707, 709,
	710, 711, 712, 1380, 713, 1381, 1296, 714, 715, 716,
	717, 708, 719, 720, 0, 1278, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 1342, 730, 0, 0, 731,
	732, 733, 799, 1365, 1402, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 0, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 1275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1270, 0, 0, 0, 0, 0, 0,
	1268, 1269, 0, 0, 0, 0, 0, 0, 2152, 0,
	1302, 0, 0, 0, 1300, 1318, 1290, 1291, 1292, 1288,
	1289, 1301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	2825, 337, 338, 0, 0, 0, 0, 0, 1344, 1306,
	0, 0, 339, 0, 340, 341, 342, 1384, 343, 344,
	345, 346, 347, 348, 349, 751, 1357, 0, 350, 1364,
	351, 1363, 0, 1374, 352, 353, 354, 355, 356, 357,
	358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0, 360,
	361, 1350, 0, 1331, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 1385, 387, 388, 389, 1334,
	1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393,
	394, 1367, 395, 397, 1361, 1360, 1277, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 1352, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 1283, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 1375,
	1376, 431, 432, 1297, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 1359, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 1386, 442, 443, 444,
	1372, 1373, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 1382, 0, 1307, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 1345, 1346, 1349, 558, 1388,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 1287, 325, 327,
	1387, 773, 475, 559, 476, 1354, 1355, 0, 1313, 0,
	477, 478, 480, 1389, 1347, 1390, 479, 481, 482, 1391,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 1383, 494, 1392,
	496, 497, 1393, 0, 498, 499, 500, 501, 502, 503,
	506, 1338, 1337, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 1394, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 1395, 551, 538, 1274, 539, 328, 1396, 553, 554,
	555, 556, 1298, 1348, 557, 1362, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 1397, 570, 1398, 1377, 571, 572, 1284,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 1378, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 1358,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 1399, 633, 634,
	635, 636, 637, 1285, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 1341,
	664, 789, 665, 645, 646, 666, 667, 1400, 668, 669,
	670, 671, 672, 673, 674, 1356, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	1403, 685, 686, 687, 688, 1379, 692, 693, 694, 695,
	0, 696, 697, 1271, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 1368, 1369,
	1370, 1371, 0, 718, 0, 707, 709, 710, 711, 712,
	1380, 713, 1381, 1296, 714, 715, 716, 717, 708, 719,
	720, 0, 1278, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 1342, 730, 0, 0, 731, 732, 733, 799,
	1365, 1402, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 0, 0, 0, 0, 745,
	746, 803, 747, 748, 749, 1275, 0, 0, 0, 0,
	2530, 0, 1318, 1290, 1291, 1292, 1288, 1289, 1301, 0,
	1270, 0, 0, 0, 0, 0, 0, 1268, 1269, 329,
	330, 332, 331, 333, 334, 335, 336, 1302, 337, 338,
	0, 1300, 0, 0, 0, 1344, 1306, 0, 0, 339,
	0, 340, 341, 342, 1384, 343, 344, 345, 346, 347,
	348, 349, 751, 1357, 0, 350, 1364, 351, 1363, 0,
	1374, 352, 353, 354, 355, 356, 357, 358, 1308, 1343,
	1272, 359, 1404, 1405, 758, 0, 360, 361, 1350, 0,
	1331, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340,
	1336, 1335, 1339, 390, 391, 392, 393, 394, 1367, 395,
	397, 1361, 1360, 1277, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	1352, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 1283, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 1375, 1376, 431, 432,
	1297, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	1359, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 1386, 442, 443, 444, 1372, 1373, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	1382, 0, 1307, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 1345, 1346, 1349, 558, 1388, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 1287, 325, 327, 1387, 773, 475,
	559, 476, 1354, 1355, 0, 1313, 0, 477, 478, 480,
	1389, 1347, 1390, 479, 481, 482, 1391, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 1383, 494, 1392, 496, 497, 1393,
	0, 498, 499, 500, 501, 502, 503, 506, 1338, 1337,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	1394, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 1395, 551,
	538, 1274, 539, 328, 1396, 553, 554, 555, 556, 1298,
	1348, 557, 1362, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	1397, 570, 1398, 1377, 571, 572, 1284, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 1378, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 1358, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 1399, 633, 634, 635, 636, 637,
	1285, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 1341, 664, 789, 665,
	645, 646, 666, 667, 1400, 668, 669, 670, 671, 672,
	673, 674, 1356, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 1403, 685, 686,
	687, 688, 1379, 692, 693, 694, 695, 0, 696, 697,
	1271, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 1368, 1369, 1370, 1371, 0,
	718, 0, 707, 709, 710, 711, 712, 1380, 713, 1381,
	1296, 714, 715, 716, 717, 708, 719, 720, 0, 1278,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 1342,
	730, 0, 0, 731, 732, 733, 799, 1365, 1402, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 0, 0, 0, 0, 745, 746, 803, 747,
	748, 749, 1275, 0, 0, 0, 0, 2495, 0, 1318,
	1290, 1291, 1292, 1288, 1289, 1301, 0, 1270, 0, 0,
	0, 0, 0, 0, 1268, 1269, 329, 330, 332, 331,
	333, 334, 335, 336, 1302, 337, 338, 0, 1300, 0,
	0, 0, 1344, 1306, 0, 0, 339, 0, 340, 341,
	342, 1384, 343, 344, 345, 346, 347, 348, 349, 751,
	1357, 0, 350, 1364, 351, 1363, 0, 1374, 352, 353,
	354, 355, 356, 357, 358, 1308, 1343, 1272, 359, 1404,
	1405, 758, 0, 360, 361, 1350, 0, 1331, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 1385,
	387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339,
	390, 391, 392, 393, 394, 1367, 395, 397, 1361, 1360,
	1277, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 1352, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	1283, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 1375, 1376, 431, 432, 1297, 324, 0,
	0, 0, 0, 0, 433, 434, 435, 1359, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	1386, 442, 443, 444, 1372, 1373, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 1382, 0, 1307,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 1345,
	1346, 1349, 558, 1388, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 1287, 325, 327, 1387, 773, 475, 559, 476, 1354,
	1355, 0, 1313, 0, 477, 478, 480, 1389, 1347, 1390,
	479, 481, 482, 1391, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 1383, 494, 1392, 496, 497, 1393, 0, 498, 499,
	500, 501, 502, 503, 506, 1338, 1337, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 1394, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 1395, 551, 538, 1274, 539,
	328, 1396, 553, 554, 555, 556, 1298, 1348, 557, 1362,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 1397, 570, 1398,
	1377, 571, 572, 1284, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 1378, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 1358, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 1399, 633, 634, 635, 636, 637, 1285, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 1341, 664, 789, 665, 645, 646, 666,
	667, 1400, 668, 669, 670, 671, 672, 673, 674, 1356,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 1403, 685, 686, 687, 688, 1379,
	692, 693, 694, 695, 0, 696, 697, 1271, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 1368, 1369, 1370, 1371, 0, 718, 0, 707,
	709, 710, 711, 712, 1380, 713, 1381, 1296, 714, 715,
	716, 717, 708, 719, 720, 0, 1278, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 1342, 730, 0, 0,
	731, 732, 733, 799, 1365, 1402, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 0,
	0, 0, 0, 745, 746, 803, 747, 748, 749, 1275,
	0, 0, 0, 0, 2027, 0, 1318, 1290, 1291, 1292,
	1288, 1289, 1301, 0, 1270, 0, 0, 0, 0, 0,
	0, 1268, 1269, 329, 330, 332, 331, 333, 334, 335,
	336, 1302, 337, 338, 0, 1300, 0, 0, 0, 1344,
	1306, 0, 0, 339, 0, 340, 341, 342, 1384, 343,
	344, 345, 346, 347, 348, 349, 751, 1357, 0, 350,
	1364, 351, 1363, 0, 1374, 352, 353, 354, 355, 356,
	357, 358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0,
	360, 361, 1350, 0, 1331, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 1385, 387, 388, 389,
	1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392,
	393, 394, 1367, 395, 397, 1361, 1360, 1277, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 1352, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 1283, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	1375, 1376, 431, 432, 1297, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 1359, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 1386, 442, 443,
	444, 1372, 1373, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 1382, 0, 1307, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 1345, 1346, 1349, 558,
	1388, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 1287, 325,
	327, 1387, 773, 475, 559, 476, 1354, 1355, 0, 1313,
	0, 477, 478, 480, 1389, 1347, 1390, 479, 481, 482,
	1391, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 1383, 494,
	1392, 496, 497, 1393, 0, 498, 499, 500, 501, 502,
	503, 506, 1338, 1337, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 1394, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 1395, 551, 538, 1274, 539, 328, 1396, 553,
	554, 555, 556, 1298, 1348, 557, 1362, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 1397, 570, 1398, 1377, 571, 572,
	1284, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 1378, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	1358, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 1399, 633,
	634, 635, 636, 637, 1285, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	1341, 664, 789, 665, 645, 646, 666, 667, 1400, 668,
	669, 670, 671, 672, 673, 674, 1356, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 1403, 685, 686, 687, 688, 1379, 692, 693, 694,
	695, 0, 696, 697, 1271, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 1368,
	1369, 1370, 1371, 0, 718, 0, 707, 709, 710, 711,
	712, 1380, 713, 1381, 1296, 714, 715, 716, 717, 708,
	719, 720, 0, 1278, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 1342, 730, 0, 0, 731, 732, 733,
	799, 1365, 1402, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 0, 0, 0, 0,
	745, 746, 803, 747, 748, 749, 1275, 0, 0, 0,
	0, 2022, 0, 1318, 1290, 1291, 1292, 1288, 1289, 1301,
	0, 1270, 0, 0, 0, 0, 0, 0, 1268, 1269,
	329, 330, 332, 331, 333, 334, 335, 336, 1302, 337,
	338, 0, 1300, 0, 0, 0, 1344, 1306, 0, 0,
	339, 0, 340, 341, 342, 1384, 343, 344, 345, 346,
	347, 348, 349, 751, 1357, 0, 350, 1364, 351, 1363,
	0, 1374, 352, 353, 354, 355, 356, 357, 358, 1308,
	1343, 1272, 359, 1404, 1405, 758, 0, 360, 361, 1350,
	0, 1331, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 1385, 387, 388, 389, 1334, 1332, 1333,
	1340, 1336, 1335, 1339, 390, 391, 392, 393, 394, 1367,
	395, 397, 1361, 1360, 1277, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 1352, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 1283, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 1375, 1376, 431,
	432, 1297, 324, 0, 0, 0, 0, 0, 433, 434,
	435, 1359, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 1386, 442, 443, 444, 1372, 1373,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 1382, 0, 1307, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 1345, 1346, 1349, 558, 1388, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 1287, 325, 327, 1387, 773,
	475, 559, 476, 1354, 1355, 0, 1313, 0, 477, 478,
	480, 1389, 1347, 1390, 479, 481, 482, 1391, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 1383, 494, 1392, 496, 497,
	1393, 0, 498, 499, 500, 501, 502, 503, 506, 1338,
	1337, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 1394, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 1395,
	551, 538, 1274, 539, 328, 1396, 553, 554, 555, 556,
	1298, 1348, 557, 1362, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 1397, 570, 1398, 1377, 571, 572, 1284, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 1378,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 1358, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 1399, 633, 634, 635, 636,
	637, 1285, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 1341, 664, 789,
	665, 645, 646, 666, 667, 1400, 668, 669, 670, 671,
	672, 673, 674, 1356, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 1403, 685,
	686, 687, 688, 1379, 692, 693, 694, 695, 0, 696,
	697, 1271, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 1368, 1369, 1370, 1371,
	0, 718, 0, 707, 709, 710, 711, 712, 1380, 713,
	1381, 1296, 714, 715, 716, 717, 708, 719, 720, 0,
	1278, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	1342, 730, 0, 0, 731, 732, 733, 799, 1365, 1402,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 0, 0, 0, 0, 745, 746, 803,
	747, 748, 749, 1275, 0, 0, 0, 0, 2008, 0,
	1318, 1290, 1291, 1292, 1288, 1289, 1301, 0, 1270, 0,
	0, 0, 0, 0, 0, 1268, 1269, 329, 330, 332,
	331, 333, 334, 335, 336, 1302, 337, 338, 0, 1300,
	0, 0, 0, 1344, 1306, 0, 0, 339, 0, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 1357, 0, 350, 1364, 351, 1363, 0, 1374, 352,
	353, 354, 355, 356, 357, 358, 1308, 1343, 1272, 359,
	1404, 1405, 758, 0, 360, 361, 1350, 0, 1331, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335,
	1339, 390, 391, 392, 393, 394, 1367, 395, 397, 1361,
	1360, 1277, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 1352, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 1283, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 1375, 1376, 431, 432, 1297, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 1359, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 1386, 442, 443, 444, 1372, 1373, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 1382, 0,
	1307, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	1345, 1346, 1349, 558, 1388, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 1287, 325, 327, 1387, 773, 475, 559, 476,
	1354, 1355, 0, 1313, 0, 477, 478, 480, 1389, 1347,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 1383, 494, 1392, 496, 497, 1393, 0, 498,
	499, 500, 501, 502, 503, 506, 1338, 1337, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 1274,
	539, 328, 1396, 553, 554, 555, 556, 1298, 1348, 557,
	1362, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 1397, 570,
	1398, 1377, 571, 572, 1284, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 1378, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 1358, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 1285, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 1341, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	1356, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 1403, 685, 686, 687, 688,
	1379, 692, 693, 694, 695, 0, 696, 697, 1271, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 1368, 1369, 1370, 1371, 0, 718, 0,
	707, 709, 710, 711, 712, 1380, 713, 1381, 1296, 714,
	715, 716, 717, 708, 719, 720, 0, 1278, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 1342, 730, 0,
	0, 731, 732, 733, 799, 1365, 1402, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	0, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	1275, 0, 0, 0, 0, 2003, 0, 1318, 1290, 1291,
	1292, 1288, 1289, 1301, 0, 1270, 0, 0, 0, 0,
	0, 0, 1268, 1269, 329, 330, 332, 331, 333, 334,
	335, 336, 1302, 337, 338, 0, 1300, 0, 0, 0,
	1344, 1306, 0, 0, 339, 0, 340, 341, 342, 1384,
	343, 344, 345, 346, 347, 348, 349, 751, 1357, 0,
	350, 1364, 351, 1363, 0, 1374, 352, 353, 354, 355,
	356, 357, 358, 1308, 1343, 1272, 359, 1404, 1405, 758,
	0, 360, 361, 1350, 0, 1331, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 1385, 387, 388,
	389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391,
	392, 393, 394, 1367, 395, 397, 1361, 1360, 1277, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 1352, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 1283, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 1375, 1376, 431, 432, 1297, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 1359, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 1386, 442,
	443, 444, 1372, 1373, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 1382, 0, 1307, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 1345, 1346, 1349,
	558, 1388, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 1287,
	325, 327, 1387, 773, 475, 559, 476, 1354, 1355, 0,
	1313, 0, 477, 478, 480, 1389, 1347, 1390, 479, 481,
	482, 1391, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 1383,
	494, 1392, 496, 497, 1393, 0, 498, 499, 500, 501,
	502, 503, 506, 1338, 1337, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 1394, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 1395, 551, 538, 1274, 539, 328, 1396,
	553, 554, 555, 556, 1298, 1348, 557, 1362, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 1397, 570, 1398, 1377, 571,
	572, 1284, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 1378, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 1358, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 1399,
	633, 634, 635, 636, 637, 1285, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 1341, 664, 789, 665, 645, 646, 666, 667, 1400,
	668, 669, 670, 671, 672, 673, 674, 1356, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 1403, 685, 686, 687, 688, 1379, 692, 693,
	694, 695, 0, 696, 697, 1271, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	1368, 1369, 1370, 1371, 0, 718, 0, 707, 709, 710,
	711, 712, 1380, 713, 1381, 1296, 714, 715, 716, 717,
	708, 719, 720, 0, 1278, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 1342, 730, 0, 0, 731, 732,
	733, 799, 1365, 1402, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 0, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 1275, 0, 0,
	0, 0, 1907, 0, 1318, 1290, 1291, 1292, 1288, 1289,
	1301, 0, 1270, 0, 0, 0, 0, 0, 0, 1268,
	1269, 329, 330, 332, 331, 333, 334, 335, 336, 1302,
	337, 338, 0, 1300, 0, 0, 0, 1344, 1306, 0,
	0, 339, 0, 340, 341, 342, 1384, 343, 344, 345,
	346, 347, 348, 349, 751, 1357, 0, 350, 1364, 351,
	1363, 0, 1374, 352, 353, 354, 355, 356, 357, 358,
	1308, 1343, 1272, 359, 1404, 1405, 758, 0, 360, 361,
	1350, 0, 1331, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 1385, 387, 388, 389, 1334, 1332,
	1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393, 394,
	1367, 395, 397, 1361, 1360, 1277, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 1352, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 1283, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 1375, 1376,
	431, 432, 1297, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 1359, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 1386, 442, 443, 444, 1372,
	1373, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 1382, 0, 1307, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 1906, 1346, 1349, 558, 1388, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 1287, 325, 327, 1387,
	773, 475, 559, 476, 1354, 1355, 0, 1313, 0, 477,
	478, 480, 1389, 1347, 1390, 479, 481, 482, 1391, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 1383, 494, 1392, 496,
	497, 1393, 0, 498, 499, 500, 501, 502, 503, 506,
	1338, 1337, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 1394, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	1395, 551, 538, 1274, 539, 328, 1396, 553, 554, 555,
	556, 1298, 1348, 557, 1362, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 1397, 570, 1398, 1377, 571, 572, 1284, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	1378, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 1358, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 1399, 633, 634, 635,
	636, 637, 1285, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 1341, 664,
	789, 665, 645, 646, 666, 667, 1400, 668, 669, 670,
	671, 672, 673, 674, 1356, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 1403,
	685, 686, 687, 688, 1379, 692, 693, 694, 695, 0,
	696, 697, 1271, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 1368, 1369, 1370,
	1371, 0, 718, 0, 707, 709, 710, 711, 712, 1380,
	713, 1381, 1296, 714, 715, 716, 717, 708, 719, 720,
	0, 1278, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 1342, 730, 0, 0, 731, 732, 733, 799, 1365,
	1402, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 0, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 1275, 0, 0, 0, 0, 1901,
	0, 1318, 1290, 1291, 1292, 1288, 1289, 1301, 0, 1270,
	0, 0, 0, 0, 0, 0, 1268, 1269, 329, 330,
	332, 331, 333, 334, 335, 336, 1302, 337, 338, 0,
	1300, 0, 0, 0, 1344, 1306, 0, 0, 339, 0,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 1357, 0, 350, 1364, 351, 1363, 0, 1374,
	352, 353, 354, 355, 356, 357, 358, 1308, 1343, 1272,
	359, 1404, 1405, 758, 0, 360, 361, 1350, 0, 1331,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336,
	1335, 1339, 390, 391, 392, 393, 394, 1367, 395, 397,
	1361, 1360, 1277, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 1352,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 1283, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 1375, 1376, 431, 432, 1297,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 1359,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 1386, 442, 443, 444, 1372, 1373, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 1382,
	0, 1307, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 1900, 1346, 1349, 558, 1388, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 1287, 325, 327, 1387, 773, 475, 559,
	476, 1354, 1355, 0, 1313, 0, 477, 478, 480, 1389,
	1347, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 1383, 494, 1392, 496, 497, 1393, 0,
	498, 499, 500, 501, 502, 503, 506, 1338, 1337, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	1274, 539, 328, 1396, 553, 554, 555, 556, 1298, 1348,
	557, 1362, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 1397,
	570, 1398, 1377, 571, 572, 1284, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 1378, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 1358, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 636, 637, 1285,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 1341, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 1356, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 1403, 685, 686, 687,
	688, 1379, 692, 693, 694, 695, 0, 696, 697, 1271,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 1368, 1369, 1370, 1371, 0, 718,
	0, 707, 709, 710, 711, 712, 1380, 713, 1381, 1296,
	714, 715, 716, 717, 708, 719, 720, 0, 1278, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 1342, 730,
	0, 0, 731, 732, 733, 799, 1365, 1402, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 0, 0, 0, 0, 745, 746, 803, 747, 748,
	749, 1275, 0, 0, 0, 0, 1895, 0, 1318, 1290,
	1291, 1292, 1288, 1289, 1301, 0, 1270, 0, 0, 0,
	0, 0, 0, 1268, 1269, 329, 330, 332, 331, 333,
	334, 335, 336, 1302, 337, 338, 0, 1300, 0, 0,
	0, 1344, 1306, 0, 0, 339, 0, 340, 341, 342,
	1384, 343, 344, 345, 346, 347, 348, 349, 751, 1357,
	0, 350, 1364, 351, 1363, 0, 1374, 352, 353, 354,
	355, 356, 357, 358, 1308, 1343, 1272, 359, 1404, 1405,
	758, 0, 360, 361, 1350, 0, 1331, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 1385, 387,
	388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390,
	391, 392, 393, 394, 1367, 395, 397, 1361, 1360, 1277,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 1352, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 1283,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 1375, 1376, 431, 432, 1297, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 1359, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 1386,
	442, 443, 444, 1372, 1373, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 1382, 0, 1307, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 1345, 1346,
	1349, 558, 1388, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	1287, 325, 327, 1387, 773, 475, 559, 476, 1354, 1355,
	0, 1313, 0, 477, 478, 480, 1389, 1347, 1390, 479,
	481, 482, 1391, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	1383, 494, 1392, 496, 497, 1393, 0, 498, 499, 500,
	501, 502, 503, 506, 1338, 1337, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 1394, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 1395, 551, 538, 1274, 539, 328,
	1396, 553, 554, 555, 556, 1298, 1348, 557, 1362, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 1397, 570, 1398, 1377,
	571, 572, 1284, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 1378, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 1358, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	1399, 633, 634, 635, 636, 637, 1285, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 1341, 664, 789, 665, 645, 646, 666, 667,
	1400, 668, 669, 670, 671, 672, 673, 674, 1356, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 1403, 685, 686, 687, 688, 1379, 692,
	693, 694, 695, 0, 696, 697, 1271, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 1368, 1369, 1370, 1371, 0, 718, 0, 707, 709,
	710, 711, 712, 1380, 713, 1381, 1296, 714, 715, 716,
	717, 708, 719, 720, 0, 1278, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 1342, 730, 0, 0, 731,
	732, 733, 799, 1365, 1402, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 0, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 1275, 0,
	0, 0, 0, 1868, 0, 1318, 1290, 1291, 1292, 1288,
	1289, 1301, 0, 1270, 0, 0, 0, 0, 0, 0,
	1268, 1269, 329, 330, 332, 331, 333, 334, 335, 336,
	1302, 337, 338, 0, 1300, 0, 0, 0, 1344, 1306,
	0, 0, 339, 0, 340, 341, 342, 1384, 343, 344,
	345, 346, 347, 348, 349, 751, 1357, 0, 350, 1364,
	351, 1363, 0, 1374, 352, 353, 354, 355, 356, 357,
	358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0, 360,
	361, 1350, 0, 1331, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 1385, 387, 388, 389, 1334,
	1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393,
	394, 1367, 395, 397, 1361, 1360, 1277, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 1352, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 1283, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 1375,
	1376, 431, 432, 1297, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 1359, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 1386, 442, 443, 444,
	1372, 1373, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 1382, 0, 1307, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 1345, 1346, 1349, 558, 1388,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 1287, 325, 327,
	1387, 773, 475, 559, 476, 1354, 1355, 0, 1313, 0,
	477, 478, 480, 1389, 1347, 1390, 479, 481, 482, 1391,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 1383, 494, 1392,
	496, 497, 1393, 0, 498, 499, 500, 501, 502, 503,
	506, 1338, 1337, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 1394, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 1395, 551, 538, 1274, 539, 328, 1396, 553, 554,
	555, 556, 1298, 1348, 557, 1362, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 1397, 570, 1398, 1377, 571, 572, 1284,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 1378, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 1358,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 1399, 633, 634,
	635, 636, 637, 1285, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 1341,
	664, 789, 665, 645, 646, 666, 667, 1400, 668, 669,
	670, 671, 672, 673, 674, 1356, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	1403, 685, 686, 687, 688, 1379, 692, 693, 694, 695,
	0, 696, 697, 1271, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 1368, 1369,
	1370, 1371, 0, 718, 0, 707, 709, 710, 711, 712,
	1380, 713, 1381, 1296, 714, 715, 716, 717, 708, 719,
	720, 0, 1278, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 1342, 730, 0, 0, 731, 732, 733, 799,
	1365, 1402, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 0, 0, 0, 0, 745,
	746, 803, 747, 748, 749, 1275, 0, 0, 0, 0,
	1848, 0, 1318, 1290, 1291, 1292, 1288, 1289, 1301, 0,
	1270, 0, 0, 0, 0, 0, 0, 1268, 1269, 329,
	330, 332, 331, 333, 334, 335, 336, 1302, 337, 338,
	0, 1300, 0, 0, 0, 1344, 1306, 0, 0, 339,
	0, 340, 341, 342, 1384, 343, 344, 345, 346, 347,
	348, 349, 751, 1357, 0, 350, 1364, 351, 1363, 0,
	1374, 352, 353, 354, 355, 356, 357, 358, 1308, 1343,
	1272, 359, 1404, 1405, 758, 0, 360, 361, 1350, 0,
	1331, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340,
	1336, 1335, 1339, 390, 391, 392, 393, 394, 1367, 395,
	397, 1361, 1360, 1277, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	1352, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 1283, 419, 420, 421, 423, 425, 422,
	1852, 426, 427, 428, 429, 430, 1375, 1376, 431, 432,
	1297, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	1359, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 1386, 442, 443, 444, 1372, 1373, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	1382, 0, 1307, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 1345, 1346, 1349, 558, 1388, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 1287, 325, 327, 1387, 773, 475,
	559, 476, 1354, 1355, 0, 1313, 0, 477, 478, 480,
	1389, 1347, 1390, 479, 481, 482, 1391, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 1383, 494, 1392, 496, 497, 1393,
	0, 498, 499, 500, 501, 502, 503, 506, 1338, 1337,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	1394, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 1395, 551,
	538, 1274, 539, 328, 1396, 553, 554, 555, 556, 1298,
	1348, 557, 1362, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	1397, 570, 1398, 1377, 571, 572, 1284, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 1378, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 1358, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 1853, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 1399, 633, 634, 635, 636, 637,
	1285, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 1341, 664, 789, 665,
	645, 646, 666, 667, 1400, 668, 669, 670, 671, 672,
	673, 674, 1356, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 1403, 685, 686,
	687, 688, 1379, 692, 693, 694, 695, 0, 696, 697,
	1271, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 1851, 705, 0, 706, 1368, 1369, 1370, 1371, 0,
	718, 0, 707, 709, 710, 711, 712, 1380, 713, 1381,
	1296, 714, 715, 716, 717, 708, 719, 720, 0, 1278,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 1342,
	730, 0, 0, 731, 732, 733, 799, 1365, 1402, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 0, 0, 0, 0, 745, 746, 803, 747,
	748, 749, 1275, 0, 0, 0, 0, 1686, 0, 1318,
	1290, 1291, 1292, 1288, 1289, 1301, 0, 1270, 0, 0,
	0, 0, 0, 0, 1268, 1269, 329, 330, 332, 331,
	333, 334, 335, 336, 1302, 337, 338, 0, 1300, 0,
	0, 0, 1344, 1306, 0, 0, 339, 0, 340, 341,
	342, 1384, 343, 344, 345, 346, 347, 348, 349, 751,
	1357, 0, 350, 1364, 351, 1363, 0, 1374, 352, 353,
	354, 355, 356, 357, 358, 1308, 1343, 1272, 359, 1404,
	1405, 758, 0, 360, 361, 1350, 0, 1331, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 1385,
	387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339,
	390, 391, 392, 393, 394, 1367, 395, 397, 1361, 1360,
	1277, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 1352, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	1283, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 1375, 1376, 431, 432, 1297, 324, 0,
	0, 0, 0, 0, 433, 434, 435, 1359, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	1386, 442, 443, 444, 1372, 1373, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 1382, 0, 1307,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 1345,
	1346, 1349, 558, 1388, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 1287, 325, 327, 1387, 773, 475, 559, 476, 1354,
	1355, 0, 1313, 0, 477, 478, 480, 1389, 1347, 1390,
	479, 481, 482, 1391, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 1383, 494, 1392, 496, 497, 1393, 0, 498, 499,
	500, 501, 502, 503, 506, 1338, 1337, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 1394, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 1395, 551, 538, 1274, 539,
	328, 1396, 553, 554, 555, 556, 1298, 1348, 557, 1362,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 1397, 570, 1398,
	1377, 571, 572, 1284, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 1378, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 1358, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 1399, 633, 634, 635, 636, 637, 1285, 638, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 1341, 664, 789, 665, 645, 646, 666,
	667, 1400, 668, 669, 670, 671, 672, 673, 674, 1356,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 1403, 685, 686, 687, 688, 1379,
	692, 693, 694, 695, 0, 696, 697, 1271, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 1368, 1369, 1370, 1371, 0, 718, 0, 707,
	709, 710, 711, 712, 1380, 713, 1381, 1296, 714, 715,
	716, 717, 708, 719, 720, 0, 1278, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 1342, 730, 0, 0,
	731, 732, 733, 799, 1365, 1402, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 0,
	0, 0, 0, 745, 746, 803, 747, 748, 749, 1275,
	0, 0, 0, 0, 1542, 0, 1318, 1290, 1291, 1292,
	1288, 1289, 1301, 0, 1270, 0, 0, 0, 0, 0,
	0, 1268, 1269, 329, 330, 332, 331, 333, 334, 335,
	336, 1302, 337, 338, 0, 1300, 0, 0, 0, 1344,
	1306, 0, 0, 339, 0, 340, 341, 342, 1384, 343,
	344, 345, 346, 347, 348, 349, 751, 1357, 0, 350,
	1364, 351, 1363, 0, 1374, 352, 353, 354, 355, 356,
	357, 358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0,
	360, 361, 1350, 0, 1331, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 1385, 387, 388, 389,
	1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392,
	393, 394, 1367, 395, 397, 1361, 1360, 1277, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 1352, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 1283, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	1375, 1376, 431, 432, 1297, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 1359, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 1386, 442, 443,
	444, 1372, 1373, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 1382, 0, 1307, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 1345, 1346, 1349, 558,
	1388, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 1287, 325,
	327, 1387, 773, 475, 559, 476, 1354, 1355, 0, 1313,
	0, 477, 478, 480, 1389, 1347, 1390, 479, 481, 482,
	1391, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 1383, 494,
	1392, 496, 497, 1393, 0, 498, 499, 500, 501, 502,
	503, 506, 1338, 1337, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 1394, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 1395, 551, 538, 1274, 539, 328, 1396, 553,
	554, 555, 556, 1298, 1348, 557, 1362, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 1397, 570, 1398, 1377, 571, 572,
	1284, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 1378, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	1358, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 1399, 633,
	634, 635, 636, 637, 1285, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	1341, 664, 789, 665, 645, 646, 666, 667, 1400, 668,
	669, 670, 671, 672, 673, 674, 1356, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 1403, 685, 686, 687, 688, 1379, 692, 693, 694,
	695, 0, 696, 697, 1271, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 1368,
	1369, 1370, 1371, 0, 718, 0, 707, 709, 710, 711,
	712, 1380, 713, 1381, 1296, 714, 715, 716, 717, 708,
	719, 720, 0, 1278, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 1342, 730, 0, 0, 731, 732, 733,
	799, 1365, 1402, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 0, 0, 0, 0,
	745, 746, 803, 747, 748, 749, 1275, 0, 0, 0,
	0, 0, 0, 1318, 1290, 1291, 1292, 1288, 1289, 1301,
	0, 1270, 0, 0, 0, 0, 0, 0, 1268, 1269,
	329, 330, 332, 331, 333, 334, 335, 336, 1302, 337,
	338, 0, 1300, 0, 0, 0, 1344, 1306, 0, 0,
	339, 0, 340, 341, 342, 1384, 343, 344, 345, 346,
	347, 348, 349, 751, 1357, 0, 350, 1364, 351, 1363,
	0, 1374, 352, 353, 354, 355, 356, 357, 358, 1308,
	1343, 1272, 359, 1404, 1405, 758, 0, 360, 361, 1350,
	0, 1331, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 1385, 387, 388, 389, 1334, 1332, 1333,
	1340, 1336, 1335, 1339, 390, 391, 392, 393, 394, 1367,
	395, 397, 1361, 1360, 1277, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 1352, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 1283, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 1375, 1376, 431,
	432, 1297, 324, 0, 0, 0, 0, 0, 433, 434,
	435, 1359, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 1386, 442, 443, 444, 1372, 1373,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 1382, 0, 1307, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 1345, 1346, 1349, 558, 1388, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 1287, 325, 327, 1387, 773,
	475, 559, 476, 1354, 1355, 0, 1313, 0, 477, 478,
	480, 1389, 1347, 1390, 479, 481, 482, 1391, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 1383, 494, 1392, 496, 497,
	1393, 0, 498, 499, 500, 501, 502, 503, 506, 1338,
	1337, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 1394, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 1395,
	551, 538, 1274, 539, 328, 1396, 553, 554, 555, 556,
	1298, 1348, 557, 1362, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 1397, 570, 1398, 1377, 571, 572, 1284, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 1378,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 1358, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 1399, 633, 634, 635, 636,
	637, 1285, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 1341, 664, 789,
	665, 645, 646, 666, 667, 1400, 668, 669, 670, 671,
	672, 673, 674, 1356, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 1403, 685,
	686, 687, 688, 1379, 692, 693, 694, 695, 0, 696,
	697, 1271, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 1368, 1369, 1370, 1371,
	0, 718, 0, 707, 709, 710, 711, 712, 1380, 713,
	1381, 1296, 714, 715, 716, 717, 708, 719, 720, 0,
	1278, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	1342, 730, 0, 0, 731, 732, 733, 799, 1365, 1402,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 0, 0, 0, 0, 745, 746, 803,
	747, 748, 749, 1275, 0, 0, 0, 0, 0, 0,
	1318, 1290, 1291, 1292, 1288, 1289, 1301, 0, 1270, 0,
	0, 0, 0, 0, 0, 1268, 1269, 329, 330, 332,
	331, 333, 334, 335, 336, 1302, 337, 338, 0, 1300,
	0, 0, 0, 1344, 1306, 0, 0, 339, 0, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 1357, 0, 350, 1364, 351, 1363, 0, 1374, 352,
	353, 354, 355, 356, 357, 358, 1308, 1343, 1272, 359,
	1404, 1405, 758, 0, 360, 361, 1350, 0, 1331, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	1385, 387, 388, 5521, 1334, 1332, 1333, 1340, 1336, 1335,
	1339, 390, 391, 392, 393, 394, 1367, 395, 397, 1361,
	1360, 1277, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 1352, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 1283, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 1375, 1376, 431, 432, 1297, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 1359, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 1386, 442, 443, 444, 1372, 1373, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 1382, 0,
	1307, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	1345, 1346, 1349, 558, 1388, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 1287, 325, 327, 1387, 773, 475, 559, 476,
	1354, 1355, 0, 1313, 0, 477, 478, 480, 1389, 1347,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 1383, 494, 1392, 496, 497, 1393, 0, 498,
	499, 500, 501, 502, 503, 506, 1338, 1337, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 1274,
	539, 328, 1396, 553, 554, 555, 556, 1298, 1348, 557,
	1362, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 1397, 570,
	1398, 1377, 571, 572, 1284, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 1378, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 1358, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 1285, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 1341, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	1356, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 1403, 685, 686, 687, 688,
	1379, 692, 693, 694, 695, 0, 696, 697, 1271, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 1368, 1369, 1370, 1371, 0, 718, 0,
	707, 709, 710, 711, 712, 1380, 713, 1381, 1296, 714,
	715, 716, 717, 708, 5520, 720, 0, 1278, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 1342, 730, 0,
	0, 731, 732, 733, 799, 1365, 1402, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	0, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	1275, 0, 0, 0, 0, 0, 0, 1318, 1290, 1291,
	1292, 1288, 1289, 1301, 0, 1270, 0, 0, 0, 0,
	0, 0, 1268, 1269, 329, 330, 332, 331, 333, 334,
	335, 336, 1302, 337, 338, 0, 1300, 0, 0, 0,
	1344, 1306, 0, 0, 339, 0, 340, 341, 342, 1384,
	343, 344, 345, 346, 347, 348, 349, 5519, 1357, 0,
	350, 1364, 351, 1363, 0, 1374, 352, 353, 354, 355,
	356, 357, 358, 1308, 1343, 1272, 359, 1404, 1405, 758,
	0, 360, 361, 1350, 0, 1331, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 1385, 387, 388,
	5521, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391,
	392, 393, 394, 1367, 395, 397, 1361, 1360, 1277, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 1352, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 1283, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 1375, 1376, 431, 432, 1297, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 1359, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 1386, 442,
	443, 444, 1372, 1373, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 1382, 0, 1307, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 1345, 1346, 1349,
	558, 1388, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 1287,
	325, 327, 1387, 773, 475, 559, 476, 1354, 1355, 0,
	1313, 0, 477, 478, 480, 1389, 1347, 1390, 479, 481,
	482, 1391, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 1383,
	494, 1392, 496, 497, 1393, 0, 498, 499, 500, 501,
	502, 503, 506, 1338, 1337, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 1394, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 1395, 551, 538, 1274, 539, 328, 1396,
	553, 554, 555, 556, 1298, 1348, 557, 1362, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 1397, 570, 1398, 1377, 571,
	572, 1284, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 1378, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 1358, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 1399,
	633, 634, 635, 636, 637, 1285, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 1341, 664, 789, 665, 645, 646, 666, 667, 1400,
	668, 669, 670, 671, 672, 673, 674, 1356, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 1403, 685, 686, 687, 688, 1379, 692, 693,
	694, 695, 0, 696, 697, 1271, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	1368, 1369, 1370, 1371, 0, 718, 0, 707, 709, 710,
	711, 712, 1380, 713, 1381, 1296, 714, 715, 716, 717,
	708, 5520, 720, 0, 1278, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 1342, 730, 0, 0, 731, 732,
	733, 799, 1365, 1402, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 0, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 1275, 0, 0,
	0, 0, 0, 0, 1318, 1290, 1291, 1292, 1288, 1289,
	1301, 0, 1270, 0, 0, 0, 0, 0, 0, 1268,
	1269, 329, 330, 332, 331, 333, 334, 335, 336, 1302,
	337, 338, 0, 1300, 0, 0, 0, 1344, 1306, 0,
	0, 339, 0, 340, 341, 342, 1384, 343, 344, 345,
	346, 347, 348, 349, 751, 1357, 0, 350, 1364, 351,
	1363, 0, 1374, 352, 353, 354, 355, 356, 357, 358,
	1308, 1343, 1272, 359, 1404, 1405, 758, 0, 360, 361,
	1350, 0, 1331, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 1385, 387, 5095, 389, 1334, 1332,
	1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393, 394,
	1367, 395, 397, 1361, 1360, 1277, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 1352, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 1283, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 1375, 1376,
	431, 432, 1297, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 1359, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 1386, 442, 443, 444, 1372,
	1373, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 1382, 0, 5096, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 1345, 1346, 1349, 558, 1388, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 1287, 325, 327, 1387,
	773, 475, 559, 476, 1354, 1355, 0, 1313, 0, 477,
	478, 480, 1389, 1347, 1390, 479, 481, 482, 1391, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 1383, 494, 1392, 496,
	497, 1393, 0, 498, 499, 500, 501, 502, 503, 506,
	1338, 1337, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 1394, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	1395, 551, 538, 1274, 539, 328, 1396, 553, 554, 555,
	556, 1298, 1348, 557, 1362, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 1397, 570, 1398, 1377, 571, 572, 1284, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	1378, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 1358, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 1399, 633, 634, 635,
	5094, 637, 1285, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 1341, 664,
	789, 665, 645, 646, 666, 667, 1400, 668, 669, 670,
	671, 672, 673, 674, 1356, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 1403,
	685, 686, 687, 688, 1379, 692, 693, 694, 695, 0,
	696, 697, 1271, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 1368, 1369, 1370,
	1371, 0, 718, 0, 707, 709, 710, 711, 712, 1380,
	713, 1381, 1296, 714, 715, 716, 717, 708, 719, 720,
	0, 1278, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 1342, 730, 0, 0, 731, 732, 733, 799, 1365,
	1402, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 0, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 1275, 0, 0, 0, 0, 0,
	0, 1318, 1290, 1291, 1292, 3693, 3694, 1301, 0, 1270,
	0, 0, 0, 0, 0, 0, 1268, 1269, 329, 330,
	332, 331, 333, 334, 335, 336, 1302, 337, 338, 0,
	1300, 0, 0, 0, 1344, 1306, 0, 0, 339, 0,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 1357, 0, 350, 1364, 351, 1363, 0, 1374,
	352, 353, 354, 355, 356, 357, 358, 1308, 1343, 1272,
	359, 1404, 1405, 758, 0, 360, 361, 1350, 0, 1331,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340, 1336,
	1335, 1339, 390, 391, 392, 393, 394, 1367, 395, 397,
	1361, 1360, 1277, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 1352,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 1283, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 1375, 1376, 431, 432, 1297,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 1359,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 1386, 442, 443, 444, 1372, 1373, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 1382,
	0, 1307, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 1345, 1346, 1349, 558, 1388, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 1287, 325, 327, 1387, 773, 475, 559,
	476, 1354, 1355, 0, 1313, 0, 477, 478, 480, 1389,
	1347, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 1383, 494, 1392, 496, 497, 1393, 0,
	498, 499, 500, 501, 502, 503, 506, 1338, 1337, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	1274, 539, 328, 1396, 553, 554, 555, 556, 1298, 1348,
	557, 1362, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 1397,
	570, 1398, 1377, 571, 572, 1284, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 1378, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 1358, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 636, 637, 1285,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 1341, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 1356, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 1403, 685, 686, 687,
	688, 1379, 692, 693, 694, 695, 0, 696, 697, 1271,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 1368, 1369, 1370, 1371, 0, 718,
	0, 707, 709, 710, 711, 712, 1380, 713, 1381, 1296,
	714, 715, 716, 717, 708, 719, 720, 0, 1278, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 1342, 730,
	0, 0, 731, 732, 733, 799, 1365, 1402, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 0, 0, 0, 0, 745, 746, 803, 747, 748,
	749, 1275, 0, 0, 0, 0, 0, 0, 1318, 1290,
	1291, 1292, 3691, 3692, 1301, 0, 1270, 0, 0, 0,
	0, 0, 0, 1268, 1269, 329, 330, 332, 331, 333,
	334, 335, 336, 1302, 337, 338, 0, 1300, 0, 0,
	0, 1344, 1306, 0, 0, 339, 0, 340, 341, 342,
	1384, 343, 344, 345, 346, 347, 348, 349, 751, 1357,
	0, 350, 1364, 351, 1363, 0, 1374, 352, 353, 354,
	355, 356, 357, 358, 1308, 1343, 1272, 359, 1404, 1405,
	758, 0, 360, 361, 1350, 0, 1331, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 1385, 387,
	388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390,
	391, 392, 393, 394, 1367, 395, 397, 1361, 1360, 1277,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 1352, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 1283,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 1375, 1376, 431, 432, 1297, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 1359, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 1386,
	442, 443, 444, 1372, 1373, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 1382, 0, 1307, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 1345, 1346,
	1349, 558, 1388, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	1287, 325, 327, 1387, 773, 475, 559, 476, 1354, 1355,
	0, 1313, 0, 477, 478, 480, 1389, 1347, 1390, 479,
	481, 482, 1391, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	1383, 494, 1392, 496, 497, 1393, 0, 498, 499, 500,
	501, 502, 503, 506, 1338, 1337, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 1394, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 1395, 551, 538, 1274, 539, 328,
	1396, 553, 554, 555, 556, 1298, 1348, 557, 1362, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 1397, 570, 1398, 1377,
	571, 572, 1284, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 1378, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 1358, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	1399, 633, 634, 635, 636, 637, 1285, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 1341, 664, 789, 665, 645, 646, 666, 667,
	1400, 668, 669, 670, 671, 672, 673, 674, 1356, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 1403, 685, 686, 687, 688, 1379, 692,
	693, 694, 695, 0, 696, 697, 1271, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 1368, 1369, 1370, 1371, 0, 718, 0, 707, 709,
	710, 711, 712, 1380, 713, 1381, 1296, 714, 715, 716,
	717, 708, 719, 720, 0, 1278, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 1342, 730, 0, 0, 731,
	732, 733, 799, 1365, 1402, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 0, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 1275, 0,
	0, 0, 0, 0, 0, 1318, 1290, 1291, 1292, 1288,
	1289, 1301, 0, 1270, 0, 0, 0, 0, 0, 0,
	1268, 1269, 329, 330, 332, 331, 333, 334, 335, 336,
	1302, 337, 338, 0, 1300, 0, 0, 0, 1344, 1306,
	0, 0, 339, 0, 340, 341, 342, 1384, 343, 344,
	345, 346, 347, 348, 349, 751, 1357, 0, 350, 1364,
	351, 1363, 0, 1374, 352, 353, 354, 355, 356, 357,
	358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0, 360,
	361, 1350, 0, 1331, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 1385, 387, 388, 389, 1334,
	1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393,
	394, 1367, 395, 397, 1361, 1360, 1277, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 1352, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 1283, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 1375,
	1376, 431, 432, 1297, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 1359, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 1386, 442, 443, 444,
	1372, 1373, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 1382, 0, 1307, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 1345, 1346, 1349, 558, 1388,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 1287, 325, 327,
	1387, 773, 475, 559, 476, 1354, 1355, 0, 1313, 0,
	477, 478, 480, 1389, 1347, 1390, 479, 481, 482, 1391,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 1383, 494, 1392,
	496, 497, 1393, 0, 498, 499, 500, 501, 502, 503,
	506, 1338, 1337, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 1394, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 1395, 551, 538, 1274, 539, 328, 1396, 553, 554,
	555, 556, 1298, 1348, 557, 1362, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 1397, 570, 1398, 1377, 571, 572, 1284,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 1378, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 1358,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 1399, 633, 634,
	635, 636, 637, 1285, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 1341,
	664, 789, 665, 645, 646, 666, 667, 1400, 668, 669,
	670, 671, 672, 673, 674, 1356, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	1403, 685, 686, 687, 688, 1379, 692, 693, 694, 695,
	0, 696, 697, 1271, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 1368, 1369,
	1370, 1371, 0, 718, 0, 707, 709, 710, 711, 712,
	1380, 713, 1381, 1296, 714, 715, 716, 717, 708, 719,
	720, 0, 1278, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 1342, 730, 0, 0, 731, 732, 733, 799,
	1365, 1402, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 0, 0, 0, 0, 745,
	746, 803, 747, 748, 749, 1275, 0, 0, 0, 0,
	0, 0, 1318, 1290, 1291, 1292, 1288, 1289, 1301, 0,
	1270, 0, 0, 0, 0, 0, 0, 2833, 2834, 329,
	330, 332, 331, 333, 334, 335, 336, 1302, 337, 338,
	0, 1300, 0, 0, 0, 1344, 1306, 0, 0, 339,
	0, 340, 341, 342, 1384, 343, 344, 345, 346, 347,
	348, 349, 751, 1357, 0, 350, 1364, 351, 1363, 0,
	1374, 352, 353, 354, 355, 356, 357, 358, 1308, 1343,
	0, 359, 1404, 1405, 758, 0, 360, 361, 1350, 0,
	1331, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 1385, 387, 388, 389, 1334, 1332, 1333, 1340,
	1336, 1335, 1339, 390, 391, 392, 393, 394, 1367, 395,
	397, 1361, 1360, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	1352, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 1283, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 1375, 1376, 431, 432,
	1297, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	1359, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 1386, 442, 443, 444, 1372, 1373, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	1382, 0, 1307, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 1345, 1346, 1349, 558, 1388, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 1287, 325, 327, 1387, 773, 475,
	559, 476, 1354, 1355, 0, 1313, 0, 477, 478, 480,
	1389, 1347, 1390, 479, 481, 482, 1391, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 1383, 494, 1392, 496, 497, 1393,
	0, 498, 499, 500, 501, 502, 503, 506, 1338, 1337,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	1394, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 1395, 551,
	538, 0, 539, 328, 1396, 553, 554, 555, 556, 1298,
	1348, 557, 1362, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	1397, 570, 1398, 1377, 571, 572, 1284, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 1378, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 1358, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 1399, 633, 634, 635, 636, 637,
	1285, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 1341, 664, 789, 665,
	645, 646, 666, 667, 1400, 668, 669, 670, 671, 672,
	673, 674, 1356, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 1403, 685, 686,
	687, 688, 1379, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 1368, 1369, 1370, 1371, 0,
	718, 0, 707, 709, 710, 711, 712, 1380, 713, 1381,
	1296, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 1342,
	730, 0, 0, 731, 732, 733, 799, 1365, 1402, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 0, 0, 0, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 1318,
	1290, 1291, 1292, 1288, 1289, 1301, 0, 3097, 0, 0,
	0, 0, 0, 0, 3095, 3096, 329, 330, 332, 331,
	333, 334, 335, 336, 1302, 337, 338, 0, 1300, 0,
	0, 0, 1344, 1306, 0, 0, 339, 0, 340, 341,
	342, 1384, 343, 344, 345, 346, 347, 348, 349, 751,
	1357, 0, 350, 1364, 351, 1363, 0, 1374, 352, 353,
	354, 355, 356, 357, 358, 1308, 1343, 0, 359, 1404,
	1405, 758, 0, 360, 361, 1350, 0, 1331, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 1385,
	387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339,
	390, 391, 392, 393, 394, 1367, 395, 397, 1361, 1360,
	0, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 1352, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	1283, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 1375, 1376, 431, 432, 1297, 324, 0,
	0, 0, 0, 0, 433, 434, 435, 1359, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	1386, 442, 443, 444, 1372, 1373, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 1382, 0, 1307,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 1345,
	1346, 1349, 558, 1388, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 1287, 325, 327, 1387, 773, 475, 559, 476, 1354,
	1355, 0, 1313, 0, 477, 478, 480, 1389, 1347, 1390,
	479, 481, 482, 1391, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 493, 492, 0,
	495, 1383, 494, 1392, 496, 497, 1393, 0, 498, 499,
	500, 501, 502, 503, 506, 1338, 1337, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 1394, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 1395, 551, 538, 0, 539,
	328, 1396, 553, 554, 555, 556, 1298, 1348, 557, 1362,
	560, 561, 0, 0, 562, 0, 563, 0, 0, 565,
	566, 567, 0, 0, 568, 569, 781, 1397, 570, 1398,
	1377, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 1378, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 1358, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 1399, 633, 634, 635, 636, 637, 3686, 3687, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 0, 659, 660, 658,
	661, 662, 663, 1341, 664, 789, 665, 645, 646, 666,
	667, 1400, 668, 669, 670, 671, 672, 673, 674, 1356,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 1403, 685, 686, 687, 688, 1379,
	692, 693, 694, 695, 0, 696, 697, 0, 691, 682,
	0, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 1368, 1369, 1370, 1371, 0, 718, 0, 707,
	709, 710, 711, 712, 1380, 713, 1381, 1296, 714, 715,
	716, 717, 708, 719, 720, 0, 0, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 1342, 730, 0, 0,
	731, 732, 733, 799, 1365, 1402, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 0,
	0, 0, 0, 745, 746, 803, 747, 748, 749, 0,
	0, 0, 0, 0, 0, 0, 1318, 1290, 1291, 1292,
	1288, 1289, 1301, 0, 0, 0, 0, 0, 0, 0,
	0, 2417, 2418, 329, 330, 332, 331, 333, 334, 335,
	336, 1302, 337, 338, 0, 1300, 0, 0, 0, 1344,
	1306, 0, 0, 339, 0, 340, 341, 342, 1384, 343,
	344, 345, 346, 347, 348, 349, 0, 1357, 0, 350,
	1364, 351, 1363, 0, 1374, 352, 353, 354, 355, 356,
	357, 358, 1308, 1343, 1272, 359, 1404, 1405, 758, 0,
	360, 361, 1350, 0, 1331, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 1385, 387, 388, 5521,
	1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392,
	393, 394, 1367, 395, 397, 1361, 1360, 1277, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 1352, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 1283, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	1375, 1376, 431, 432, 1297, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 1359, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 1386, 442, 443,
	444, 1372, 1373, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 1382, 0, 1307, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 1345, 1346, 1349, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 1287, 325,
	327, 1387, 773, 475, 559, 476, 1354, 1355, 0, 1313,
	0, 477, 478, 480, 0, 1347, 0, 479, 481, 482,
	1391, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 1383, 494,
	1392, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	503, 506, 1338, 1337, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 1394, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 1395, 551, 538, 1274, 539, 328, 0, 553,
	554, 555, 556, 1298, 1348, 557, 1362, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 1397, 570, 1398, 1377, 571, 572,
	1284, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 1378, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	1358, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 1399, 633,
	634, 635, 636, 637, 1285, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	1341, 664, 789, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 1356, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 1403, 685, 686, 687, 688, 1379, 692, 693, 694,
	695, 0, 696, 697, 1271, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 1368,
	1369, 1370, 1371, 0, 718, 0, 707, 709, 710, 711,
	712, 1380, 713, 1381, 1296, 714, 715, 716, 717, 708,
	5520, 720, 0, 1278, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 1342, 730, 0, 0, 731, 732, 733,
	799, 1365, 1402, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 0, 0, 0, 0,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 3116, 0, 1318, 1290, 1291, 1292, 1288, 1289, 1301,
	0, 0, 0, 0, 0, 0, 0, 0, 1268, 1269,
	329, 330, 332, 331, 333, 334, 335, 336, 1302, 337,
	338, 0, 1300, 0, 0, 0, 1344, 1306, 0, 0,
	339, 0, 340, 341, 342, 1384, 343, 344, 345, 346,
	347, 348, 349, 751, 1357, 0, 350, 1364, 351, 1363,
	0, 1374, 352, 353, 354, 355, 356, 357, 358, 0,
	1343, 0, 359, 1404, 1405, 758, 0, 360, 361, 1350,
	0, 1331, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 1385, 387, 388, 389, 1334, 1332, 1333,
	1340, 1336, 1335, 1339, 390, 391, 392, 393, 394, 1367,
	395, 397, 1361, 1360, 0, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 1352, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 1375, 1376, 431,
	432, 1297, 324, 0, 0, 0, 0, 0, 433, 434,
	435, 1359, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 1386, 442, 443, 444, 1372, 1373,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 1382, 0, 1307, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 1345, 1346, 1349, 558, 1388, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 1287, 325, 327, 1387, 773,
	475, 559, 476, 1354, 1355, 0, 1313, 0, 477, 478,
	480, 1389, 1347, 1390, 479, 481, 482, 1391, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 1383, 494, 1392, 496, 497,
	1393, 0, 498, 499, 500, 501, 502, 503, 506, 1338,
	1337, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 1394, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 1395,
	551, 538, 0, 539, 328, 1396, 553, 554, 555, 556,
	1298, 1348, 557, 1362, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 1397, 570, 1398, 1377, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 1378,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 1358, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 1399, 633, 634, 635, 636,
	637, 1285, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 1341, 664, 789,
	665, 645, 646, 666, 667, 1400, 668, 669, 670, 671,
	672, 673, 674, 1356, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 1403, 685,
	686, 687, 688, 1379, 692, 693, 694, 695, 0, 696,
	697, 0, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 1368, 1369, 1370, 1371,
	0, 718, 0, 707, 709, 710, 711, 712, 1380, 713,
	1381, 1296, 714, 715, 716, 717, 708, 719, 720, 0,
	0, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	1342, 730, 0, 0, 731, 732, 733, 799, 1365, 1402,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 0, 0, 0, 0, 745, 746, 803,
	747, 748, 749, 0, 0, 1870, 0, 1318, 1290, 1291,
	1292, 1288, 1289, 1301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 1302, 0, 0, 0, 1300,
	1344, 1306, 0, 0, 339, 0, 340, 341, 342, 1384,
	343, 344, 345, 346, 347, 348, 349, 751, 1357, 0,
	350, 1364, 351, 1363, 0, 1374, 352, 353, 354, 355,
	356, 357, 358, 0, 1343, 0, 359, 1404, 1405, 758,
	0, 360, 361, 1350, 0, 1331, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 1385, 387, 388,
	389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391,
	392, 393, 394, 1367, 395, 397, 1361, 1360, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 1352, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 1375, 1376, 431, 432, 1297, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 1359, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 1386, 442,
	443, 444, 1372, 1373, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 1382, 0, 1307, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 1345, 1346, 1349,
	558, 1388, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 1287,
	325, 327, 1387, 773, 475, 559, 476, 1354, 1355, 0,
	1313, 0, 477, 478, 480, 1389, 1347, 1390, 479, 481,
	482, 1391, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 1383,
	494, 1392, 496, 497, 1393, 0, 498, 499, 500, 501,
	502, 503, 506, 1338, 1337, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 1394, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 1395, 551, 538, 0, 539, 328, 1396,
	553, 554, 555, 556, 1298, 1348, 557, 1362, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 1397, 570, 1398, 1377, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 1378, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 1358, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 1399,
	633, 634, 635, 636, 637, 1285, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 1341, 664, 789, 665, 645, 646, 666, 667, 1400,
	668, 669, 670, 671, 672, 673, 674, 1356, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 1403, 685, 686, 687, 688, 1379, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	1368, 1369, 1370, 1371, 0, 718, 0, 707, 709, 710,
	711, 712, 1380, 713, 1381, 1296, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 1342, 730, 0, 0, 731, 732,
	733, 799, 1365, 1402, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 0, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 1259, 0, 1443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 1302,
	0, 0, 1344, 1300, 0, 0, 339, 0, 340, 341,
	342, 1384, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 0, 755, 352, 353,
	354, 355, 356, 357, 358, 0, 1343, 0, 359, 756,
	757, 758, 0, 360, 361, 1350, 0, 1331, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 1385,
	387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339,
	390, 391, 392, 393, 394, 0, 395, 397, 760, 761,
	0, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 409, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 1375, 1376, 431, 432, 0, 324, 0,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	1386, 442, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 1382, 0, 769,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 1345,
	1346, 1349, 558, 1388, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 1287, 325, 327, 1387, 773, 475, 559, 476, 774,
	775, 0, 776, 0, 477, 478, 480, 1389, 1347, 1390,
	479, 481, 482, 1391, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 1429, 491, 493, 492, 0,
	495, 1383, 494, 1392, 496, 497, 1393, 0, 498, 499,
	500, 501, 502, 503, 506, 1338, 1337, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 1394, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 1395, 551, 538, 0, 539,
	328, 1396, 553, 554, 555, 556, 0, 1348, 557, 780,
	560, 561, 0, 0, 562, 0, 563, 0, 1435, 565,
	566, 567, 0, 0, 568, 569, 781, 1397, 570, 1398,
	1377, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 1378, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 1399, 633, 634, 635, 636, 637, 788, 1437, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 279, 659, 660, 658,
	661, 662, 663, 1341, 664, 789, 665, 645, 646, 666,
	667, 1400, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 1379,
	692, 693, 694, 695, 0, 696, 697, 0, 691, 682,
	281, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 793, 794, 795, 796, 0, 718, 0, 707,
	709, 710, 711, 712, 1380, 713, 1381, 0, 714, 715,
	716, 717, 708, 719, 720, 0, 0, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 1342, 730, 0, 0,
	731, 732, 733, 1992, 800, 801, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 0,
	0, 0, 273, 745, 746, 803, 747, 748, 749, 1443,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 332, 331,
	333, 334, 335, 336, 0, 337, 338, 0, 0, 1433,
	0, 2244, 1344, 0, 0, 0, 339, 0, 340, 341,
	342, 1384, 343, 344, 345, 346, 347, 348, 349, 751,
	752, 0, 350, 753, 351, 754, 0, 755, 352, 353,
	354, 355, 356, 357, 358, 0, 1343, 0, 359, 756,
	757, 758, 0, 360, 361, 1350, 0, 1331, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 371,
	372, 373, 370, 374, 375, 0, 376, 0, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 385, 386, 1385,
	387, 388, 389, 1334, 1332, 1333, 1340, 1336, 1335, 1339,
	390, 391, 392, 393, 394, 0, 395, 397, 760, 761,
	0, 400, 402, 396, 398, 0, 401, 399, 403, 404,
	0, 405, 406, 407, 0, 0, 408, 409, 410, 0,
	411, 412, 413, 0, 414, 415, 416, 0, 417, 418,
	762, 419, 420, 421, 423, 425, 422, 424, 426, 427,
	428, 429, 430, 1375, 1376, 431, 432, 0, 324, 0,
	0, 0, 0, 0, 433, 434, 435, 765, 0, 0,
	0, 436, 0, 437, 438, 439, 0, 440, 441, 0,
	1386, 442, 443, 444, 766, 767, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 1382, 0, 769,
	455, 0, 456, 457, 458, 459, 460, 461, 462, 1345,
	1346, 1349, 558, 1388, 463, 464, 465, 0, 466, 467,
	468, 469, 470, 0, 0, 0, 471, 472, 473, 474,
	0, 1287, 325, 327, 1387, 773, 475, 559, 476, 774,
	775, 0, 776, 0, 477, 478, 480, 1389, 1347, 1390,
	479, 481, 482, 1391, 483, 0, 0, 0, 484, 485,
	486, 487, 488, 489, 490, 1429, 491, 493, 492, 0,
	495, 1383, 494, 1392, 496, 497, 1393, 0, 498, 499,
	500, 501, 502, 503, 506, 1338, 1337, 504, 505, 507,
	508, 0, 509, 510, 512, 515, 511, 513, 514, 516,
	529, 530, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 532, 0, 531, 1394, 533, 534,
	535, 536, 537, 545, 547, 548, 543, 544, 546, 549,
	550, 552, 540, 541, 542, 1395, 551, 538, 0, 539,
	328, 1396, 553, 554, 555, 556, 0, 1348, 557, 780,
	560, 561, 0, 0, 562, 0, 563, 0, 1435, 565,
	566, 567, 0, 0, 568, 569, 781, 1397, 570, 1398,
	1377, 571, 572, 564, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 583, 584, 783, 585, 586,
	587, 784, 588, 589, 590, 1378, 591, 786, 592, 593,
	0, 594, 595, 596, 0, 597, 598, 599, 600, 601,
	602, 603, 604, 787, 605, 606, 608, 607, 609, 0,
	610, 0, 611, 612, 613, 0, 0, 0, 0, 0,
	614, 615, 617, 0, 618, 619, 620, 621, 616, 622,
	623, 624, 625, 626, 627, 0, 629, 630, 628, 631,
	632, 1399, 633, 634, 635, 636, 637, 788, 1437, 0,
	639, 640, 648, 649, 650, 641, 642, 644, 651, 643,
	652, 653, 654, 655, 657, 656, 279, 659, 660, 658,
	661, 662, 663, 1341, 664, 789, 665, 645, 646, 666,
	667, 1400, 668, 669, 670, 671, 672, 673, 674, 790,
	0, 675, 0, 676, 677, 678, 679, 680, 681, 683,
	647, 684, 689, 690, 791, 685, 686, 687, 688, 1379,
	692, 693, 694, 695, 0, 696, 697, 0, 691, 682,
	281, 698, 699, 700, 701, 702, 703, 0, 704, 705,
	0, 706, 793, 794, 795, 796, 0, 718, 0, 707,
	709, 710, 711, 712, 1380, 713, 1381, 0, 714, 715,
	716, 717, 708, 719, 720, 0, 0, 721, 722, 723,
	725, 727, 728, 724, 726, 729, 1342, 730, 0, 0,
	731, 732, 733, 1992, 800, 801, 0, 735, 736, 734,
	737, 738, 741, 739, 740, 802, 742, 743, 744, 0,
	0, 0, 273, 745, 746, 803, 747, 748, 749, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3856, 0, 1443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1433,
	0, 2244, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 1344, 0,
	0, 0, 339, 0, 340, 341, 342, 1384, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 1343, 0, 359, 756, 757, 758, 0, 360,
	361, 1350, 0, 1331, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 1385, 387, 388, 389, 1334,
	1332, 1333, 1340, 1336, 1335, 1339, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 1375,
	1376, 431, 432, 0, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 1386, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 1382, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 1345, 1346, 1349, 558, 1388,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 1287, 325, 327,
	1387, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 1389, 1347, 1390, 479, 481, 482, 1391,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 1429, 491, 493, 492, 0, 495, 1383, 494, 1392,
	496, 497, 1393, 0, 498, 499, 500, 501, 502, 503,
	506, 1338, 1337, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 1394, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 1395, 551, 538, 0, 539, 328, 1396, 553, 554,
	555, 556, 0, 1348, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 1435, 565, 566, 567, 0, 0,
	568, 569, 781, 1397, 570, 1398, 1377, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 1378, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 1399, 633, 634,
	635, 636, 637, 788, 1437, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 1341,
	664, 789, 665, 645, 646, 666, 667, 1400, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 1379, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 793, 794,
	795, 796, 0, 718, 0, 707, 709, 710, 711, 712,
	1380, 713, 1381, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 1342, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 0, 0, 0, 0, 745,
	746, 803, 747, 748, 749, 1425, 0, 1443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 1433, 0, 1431, 0, 0,
	1344, 0, 0, 0, 339, 0, 340, 341, 342, 1384,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 0, 755, 352, 353, 354, 355,
	356, 357, 358, 0, 1343, 0, 359, 756, 757, 758,
	0, 360, 361, 1350, 0, 1331, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 1385, 387, 388,
	389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 1375, 1376, 431, 432, 0, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 1386, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 1382, 0, 769, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 1345, 1346, 1349,
	558, 1388, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 1287,
	325, 327, 1387, 773, 475, 559, 476, 774, 775, 0,
	776, 0, 477, 478, 480, 1389, 1347, 1390, 479, 481,
	482, 1391, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 1429, 491, 493, 492, 0, 495, 1383,
	494, 1392, 496, 497, 1393, 0, 498, 499, 500, 501,
	502, 503, 506, 1338, 1337, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 1394, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 1395, 551, 538, 0, 539, 328, 1396,
	553, 554, 555, 556, 0, 1348, 557, 780, 560, 561,
	0, 0, 562, 0, 563, 0, 1435, 565, 566, 567,
	0, 0, 568, 569, 781, 1397, 570, 1398, 1377, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 1378, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 1399,
	633, 634, 635, 636, 637, 788, 1437, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 1341, 664, 789, 665, 645, 646, 666, 667, 1400,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 1379, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	793, 794, 795, 796, 0, 718, 0, 707, 709, 710,
	711, 712, 1380, 713, 1381, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 1342, 730, 0, 0, 731, 732,
	733, 799, 800, 801, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 0, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 1443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 1433, 0, 1431,
	1344, 0, 0, 0, 339, 0, 340, 341, 342, 1384,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 0, 755, 352, 353, 354, 355,
	356, 357, 358, 0, 1343, 0, 359, 756, 757, 758,
	0, 360, 361, 1350, 0, 1331, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 1385, 387, 388,
	389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 1375, 1376, 431, 432, 0, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 1386, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 1382, 0, 769, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 1345, 1346, 1349,
	558, 1388, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 1287,
	325, 327, 1387, 773, 475, 559, 476, 774, 775, 0,
	776, 0, 477, 478, 480, 1389, 1347, 1390, 479, 481,
	482, 1391, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 1429, 491, 493, 492, 0, 495, 1383,
	494, 1392, 496, 497, 1393, 0, 498, 499, 500, 501,
	502, 503, 506, 1338, 1337, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 1394, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 1395, 551, 538, 0, 539, 328, 1396,
	553, 554, 555, 556, 0, 1348, 557, 780, 560, 561,
	0, 0, 562, 0, 563, 0, 1435, 565, 566, 567,
	0, 0, 568, 569, 781, 1397, 570, 1398, 1377, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 1378, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 1399,
	633, 634, 635, 636, 637, 788, 1437, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 1341, 664, 789, 665, 645, 646, 666, 667, 1400,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 1379, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	793, 794, 795, 796, 0, 718, 0, 707, 709, 710,
	711, 712, 1380, 713, 1381, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 1342, 730, 0, 0, 731, 732,
	733, 799, 800, 801, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 0, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 1443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 1433, 0, 1431,
	1344, 0, 0, 0, 339, 0, 340, 341, 342, 1384,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 0, 755, 352, 353, 354, 355,
	356, 357, 358, 0, 1343, 0, 359, 756, 757, 758,
	0, 360, 361, 1350, 0, 1331, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 1385, 387, 388,
	389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 1375, 1376, 431, 432, 0, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 1386, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 1382, 0, 769, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 1345, 1346, 1349,
	558, 1388, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 1287,
	325, 327, 1387, 773, 475, 559, 476, 774, 775, 0,
	776, 0, 477, 478, 480, 1389, 1347, 1390, 479, 481,
	482, 1391, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 1383,
	494, 1392, 496, 497, 1393, 0, 498, 499, 500, 501,
	502, 503, 506, 1338, 1337, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 1394, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 1395, 551, 538, 0, 539, 328, 1396,
	553, 554, 555, 556, 0, 1348, 557, 780, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 1397, 570, 1398, 1377, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 1378, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 1399,
	633, 634, 635, 636, 637, 788, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 1341, 664, 789, 665, 645, 646, 666, 667, 1400,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 1379, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	793, 794, 795, 796, 0, 718, 0, 707, 709, 710,
	711, 712, 1380, 713, 1381, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 1342, 730, 0, 0, 731, 732,
	733, 799, 800, 801, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 0, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 1443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 4897,
	1344, 0, 0, 0, 339, 0, 340, 341, 342, 1384,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 0, 755, 352, 353, 354, 355,
	356, 357, 358, 0, 1343, 0, 359, 756, 757, 758,
	0, 360, 361, 1350, 0, 1331, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 1385, 387, 388,
	389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 1375, 1376, 431, 432, 0, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 1386, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 1382, 0, 769, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 1345, 1346, 1349,
	558, 1388, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 1287,
	325, 327, 1387, 773, 475, 559, 476, 774, 775, 0,
	776, 0, 477, 478, 480, 1389, 1347, 1390, 479, 481,
	482, 1391, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 1383,
	494, 1392, 496, 497, 1393, 0, 498, 499, 500, 501,
	502, 503, 506, 1338, 1337, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 1394, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 1395, 551, 538, 0, 539, 328, 1396,
	553, 554, 555, 556, 0, 1348, 557, 780, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 1397, 570, 1398, 1377, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 1378, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 1399,
	633, 634, 635, 636, 637, 788, 1437, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 1341, 664, 789, 665, 645, 646, 666, 667, 1400,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 1379, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	793, 794, 795, 796, 0, 718, 0, 707, 709, 710,
	711, 712, 1380, 713, 1381, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 1342, 730, 0, 0, 731, 732,
	733, 799, 800, 801, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 321, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 2939, 2940, 2941,
	2958, 2959, 2960, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 2961, 0,
	750, 0, 0, 0, 339, 0, 340, 341, 342, 2136,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 0, 755, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 2121, 359, 756, 757, 758,
	0, 360, 361, 759, 0, 0, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 2951, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 2947, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 763, 764, 431, 432, 0, 0, 0, 2952, 2953,
	2954, 2955, 433, 434, 435, 765, 0, 0, 2946, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 0, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 768, 0, 769, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 770, 771, 772,
	558, 0, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 0,
	0, 0, 0, 773, 475, 559, 476, 774, 775, 0,
	776, 0, 477, 478, 480, 0, 777, 0, 479, 481,
	482, 0, 483, 0, 2956, 2957, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 778,
	494, 0, 496, 497, 0, 0, 498, 499, 500, 501,
	502, 503, 506, 0, 0, 504, 505, 507, 508, 2949,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 0, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 0, 551, 538, 0, 539, 0, 0,
	553, 554, 555, 556, 0, 779, 557, 780, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 0, 570, 0, 782, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 785, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 0,
	633, 634, 635, 636, 637, 788, 638, 2950, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 0, 664, 789, 665, 645, 646, 666, 667, 0,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 792, 692, 693,
	694, 695, 0, 696, 697, 2120, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	793, 794, 795, 796, 0, 718, 0, 707, 709, 710,
	711, 712, 797, 713, 798, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 0, 730, 0, 0, 731, 732,
	733, 799, 800, 801, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 0, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1259, 0, 1627, 2936,
	2937, 2938, 2962, 2948, 2942, 0, 2944, 2945, 2943, 2930,
	2931, 2932, 2933, 2934, 2935, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 339, 0, 340, 341, 342,
	1384, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 1632, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 1385, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 1386,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 1388, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 1387, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 1389, 777, 1390, 479,
	481, 482, 1391, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 1392, 496, 497, 1393, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 1394, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 1395, 551, 538, 0, 539, 0,
	1396, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 1397, 570, 1398, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	1399, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 279, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	1400, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 281,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 1992, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 0, 0,
	0, 273, 745, 746, 803, 747, 748, 749, 0, 1989,
	274, 1627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	220, 0, 0, 0, 750, 0, 0, 0, 339, 0,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 1632,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 1385, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 0,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 1386, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 1388, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 0, 0, 0, 1387, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 1389,
	777, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 778, 494, 1392, 496, 497, 1393, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	0, 539, 0, 1396, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 1397,
	570, 1398, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 279, 659,
	660, 658, 661, 662, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 281, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 1992, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 0, 0, 0, 273, 745, 746, 803, 747, 748,
	749, 1627, 1626, 274, 0, 0, 0, 1624, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 220, 750, 0, 0, 0, 339, 0,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 1632,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 1385, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 0,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 1386, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 1388, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 0, 0, 0, 1387, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 1389,
	777, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 778, 494, 1392, 496, 497, 1393, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	0, 539, 0, 1396, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 1397,
	570, 1398, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 0, 0, 0, 0, 745, 746, 803, 747, 748,
	749, 1627, 1626, 0, 0, 0, 0, 1624, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 2016, 750, 0, 0, 0, 339, 0,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 1632,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 1385, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 0,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 1386, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 1388, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 0, 0, 0, 1387, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 1389,
	777, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 778, 494, 1392, 496, 497, 1393, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	0, 539, 0, 1396, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 1397,
	570, 1398, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 0, 0, 0, 0, 745, 746, 803, 747, 748,
	749, 1627, 2706, 0, 0, 0, 0, 2707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 4265, 750, 0, 0, 0, 339, 0,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 1632,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 1385, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 0,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 1386, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 1388, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 0, 0, 0, 1387, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 1389,
	777, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 2705, 493,
	492, 0, 495, 778, 494, 1392, 496, 497, 1393, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	0, 539, 0, 1396, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 1397,
	570, 1398, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 0, 0, 0, 0, 745, 746, 803, 747, 748,
	749, 1627, 1626, 0, 0, 0, 0, 1624, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	332, 331, 333, 334, 335, 336, 0, 337, 338, 0,
	0, 0, 0, 2016, 750, 0, 0, 0, 339, 0,
	340, 341, 342, 1384, 343, 344, 345, 346, 347, 348,
	349, 751, 752, 0, 350, 753, 351, 754, 0, 755,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 0,
	359, 756, 757, 758, 0, 360, 361, 759, 0, 1632,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 371, 372, 373, 370, 374, 375, 0, 376, 0,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 385,
	386, 1385, 387, 388, 389, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 392, 393, 394, 0, 395, 397,
	760, 761, 0, 400, 402, 396, 398, 0, 401, 399,
	403, 404, 0, 405, 406, 407, 0, 0, 408, 409,
	410, 0, 411, 412, 413, 0, 414, 415, 416, 0,
	417, 418, 762, 419, 420, 421, 423, 425, 422, 424,
	426, 427, 428, 429, 430, 763, 764, 431, 432, 0,
	324, 0, 0, 0, 0, 0, 433, 434, 435, 765,
	0, 0, 0, 436, 0, 437, 438, 439, 0, 440,
	441, 0, 1386, 442, 443, 444, 766, 767, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 768,
	0, 769, 455, 0, 456, 457, 458, 459, 460, 461,
	462, 770, 771, 772, 558, 1388, 463, 464, 465, 0,
	466, 467, 468, 469, 470, 0, 0, 0, 471, 472,
	473, 474, 0, 0, 0, 0, 1387, 773, 475, 559,
	476, 774, 775, 0, 776, 0, 477, 478, 480, 1389,
	777, 1390, 479, 481, 482, 1391, 483, 0, 0, 0,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 493,
	492, 0, 495, 778, 494, 1392, 496, 497, 1393, 0,
	498, 499, 500, 501, 502, 503, 506, 0, 0, 504,
	505, 507, 508, 0, 509, 510, 512, 515, 511, 513,
	514, 516, 529, 530, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 532, 0, 531, 1394,
	533, 534, 535, 536, 537, 545, 547, 548, 543, 544,
	546, 549, 550, 552, 540, 541, 542, 1395, 551, 538,
	0, 539, 0, 1396, 553, 554, 555, 556, 0, 779,
	557, 780, 560, 561, 0, 0, 562, 0, 563, 0,
	0, 565, 566, 567, 0, 0, 568, 569, 781, 1397,
	570, 1398, 782, 571, 572, 564, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 583, 584, 783,
	585, 586, 587, 784, 588, 589, 590, 785, 591, 786,
	592, 593, 0, 594, 595, 596, 0, 597, 598, 599,
	600, 601, 602, 603, 604, 787, 605, 606, 608, 607,
	609, 0, 610, 0, 611, 612, 613, 0, 0, 0,
	0, 0, 614, 615, 617, 0, 618, 619, 620, 621,
	616, 622, 623, 624, 625, 626, 627, 0, 629, 630,
	628, 631, 632, 1399, 633, 634, 635, 636, 637, 788,
	638, 0, 639, 640, 648, 649, 650, 641, 642, 644,
	651, 643, 652, 653, 654, 655, 657, 656, 0, 659,
	660, 658, 661, 662, 663, 0, 664, 789, 665, 645,
	646, 666, 667, 1400, 668, 669, 670, 671, 672, 673,
	674, 790, 0, 675, 0, 676, 677, 678, 679, 680,
	681, 683, 647, 684, 689, 690, 791, 685, 686, 687,
	688, 792, 692, 693, 694, 695, 0, 696, 697, 0,
	691, 682, 0, 698, 699, 700, 701, 702, 703, 0,
	704, 705, 0, 706, 793, 794, 795, 796, 0, 718,
	0, 707, 709, 710, 711, 712, 797, 713, 798, 0,
	714, 715, 716, 717, 708, 719, 720, 0, 0, 721,
	722, 723, 725, 727, 728, 724, 726, 729, 0, 730,
	0, 0, 731, 732, 733, 799, 800, 801, 0, 735,
	736, 734, 737, 738, 741, 739, 740, 802, 742, 743,
	744, 0, 0, 0, 0, 745, 746, 803, 747, 748,
	749, 1259, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 0, 337,
	338, 0, 0, 1998, 0, 0, 750, 0, 0, 0,
	339, 0, 340, 341, 342, 0, 343, 344, 345, 346,
	347, 348, 349, 751, 752, 0, 350, 753, 351, 754,
	0, 755, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 0, 359, 756, 757, 758, 0, 360, 361, 759,
	0, 0, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 392, 393, 394, 0,
	395, 397, 760, 761, 0, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 409, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 763, 764, 431,
	432, 0, 0, 0, 0, 0, 0, 0, 433, 434,
	435, 765, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 0, 442, 443, 444, 766, 767,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 768, 0, 769, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 770, 771, 772, 558, 0, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 0, 0, 0, 0, 773,
	475, 559, 476, 774, 775, 0, 776, 0, 477, 478,
	480, 0, 777, 0, 479, 481, 482, 0, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 778, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 501, 502, 503, 506, 0,
	0, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 0, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 0,
	551, 538, 0, 539, 0, 0, 553, 554, 555, 556,
	0, 779, 557, 780, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 0, 570, 0, 782, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 785,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 787, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 0, 633, 634, 635, 636,
	637, 788, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	279, 659, 660, 658, 661, 662, 663, 0, 664, 789,
	665, 645, 646, 666, 667, 0, 668, 669, 670, 671,
	672, 673, 674, 790, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 791, 685,
	686, 687, 688, 792, 692, 693, 694, 695, 0, 696,
	697, 0, 691, 682, 281, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 793, 794, 795, 796,
	0, 718, 0, 707, 709, 710, 711, 712, 797, 713,
	798, 0, 714, 715, 716, 717, 708, 719, 720, 0,
	0, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	0, 730, 0, 0, 731, 732, 733, 1992, 800, 801,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 321, 0, 0, 273, 745, 746, 803,
	747, 748, 749, 0, 0, 274, 0, 0, 0, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 0, 337,
	338, 0, 0, 0, 0, 0, 750, 0, 0, 0,
	339, 0, 340, 341, 342, 220, 343, 344, 345, 346,
	347, 348, 349, 751, 752, 0, 350, 753, 351, 754,
	0, 755, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 0, 359, 756, 757, 758, 0, 360, 361, 759,
	0, 0, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 392, 393, 394, 0,
	395, 397, 760, 761, 0, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 409, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 763, 764, 431,
	432, 0, 324, 0, 0, 0, 0, 0, 433, 434,
	435, 765, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 0, 442, 443, 444, 766, 767,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 768, 0, 769, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 770, 771, 772, 558, 0, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 326, 325, 327, 0, 773,
	475, 559, 476, 774, 775, 0, 776, 0, 477, 478,
	480, 0, 777, 0, 479, 481, 482, 0, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 778, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 501, 502, 503, 506, 0,
	0, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 0, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 0,
	551, 538, 0, 539, 328, 0, 553, 554, 555, 556,
	0, 779, 557, 780, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 0, 570, 0, 782, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 785,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 787, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 0, 633, 634, 635, 636,
	637, 788, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 0, 664, 789,
	665, 645, 646, 666, 667, 0, 668, 669, 670, 671,
	672, 673, 674, 790, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 791, 685,
	686, 687, 688, 792, 692, 693, 694, 695, 0, 696,
	697, 0, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 793, 794, 795, 796,
	0, 718, 0, 707, 709, 710, 711, 712, 797, 713,
	798, 0, 714, 715, 716, 717, 708, 719, 720, 0,
	0, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	0, 730, 0, 0, 731, 732, 733, 799, 800, 801,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 321, 0, 0, 0, 745, 746, 803,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 332, 331, 333, 334, 335, 336, 0, 337,
	338, 0, 0, 0, 0, 0, 750, 0, 0, 0,
	339, 0, 340, 341, 342, 2258, 343, 344, 345, 346,
	347, 348, 349, 751, 752, 0, 350, 753, 351, 754,
	0, 755, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 0, 359, 756, 757, 758, 0, 360, 361, 759,
	0, 0, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 371, 372, 373, 370, 374, 375, 0,
	376, 0, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 392, 393, 394, 0,
	395, 397, 760, 761, 0, 400, 402, 396, 398, 0,
	401, 399, 403, 404, 0, 405, 406, 407, 0, 0,
	408, 409, 410, 0, 411, 412, 413, 0, 414, 415,
	416, 0, 417, 418, 762, 419, 420, 421, 423, 425,
	422, 424, 426, 427, 428, 429, 430, 763, 764, 431,
	432, 0, 324, 0, 0, 0, 0, 0, 433, 434,
	435, 765, 0, 0, 0, 436, 0, 437, 438, 439,
	0, 440, 441, 0, 0, 442, 443, 444, 766, 767,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 768, 0, 769, 455, 0, 456, 457, 458, 459,
	460, 461, 462, 770, 771, 772, 558, 0, 463, 464,
	465, 0, 466, 467, 468, 469, 470, 0, 0, 0,
	471, 472, 473, 474, 0, 326, 325, 327, 0, 773,
	475, 559, 476, 774, 775, 0, 776, 0, 477, 478,
	480, 0, 777, 0, 479, 481, 482, 0, 483, 0,
	0, 0, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 493, 492, 0, 495, 778, 494, 0, 496, 497,
	0, 0, 498, 499, 500, 501, 502, 503, 506, 0,
	0, 504, 505, 507, 508, 0, 509, 510, 512, 515,
	511, 513, 514, 516, 529, 530, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 532, 0,
	531, 0, 533, 534, 535, 536, 537, 545, 547, 548,
	543, 544, 546, 549, 550, 552, 540, 541, 542, 0,
	551, 538, 0, 539, 328, 0, 553, 554, 555, 556,
	0, 779, 557, 780, 560, 561, 0, 0, 562, 0,
	563, 0, 0, 565, 566, 567, 0, 0, 568, 569,
	781, 0, 570, 0, 782, 571, 572, 564, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 583,
	584, 783, 585, 586, 587, 784, 588, 589, 590, 785,
	591, 786, 592, 593, 0, 594, 595, 596, 0, 597,
	598, 599, 600, 601, 602, 603, 604, 787, 605, 606,
	608, 607, 609, 0, 610, 0, 611, 612, 613, 0,
	0, 0, 0, 0, 614, 615, 617, 0, 618, 619,
	620, 621, 616, 622, 623, 624, 625, 626, 627, 0,
	629, 630, 628, 631, 632, 0, 633, 634, 635, 636,
	637, 788, 638, 0, 639, 640, 648, 649, 650, 641,
	642, 644, 651, 643, 652, 653, 654, 655, 657, 656,
	0, 659, 660, 658, 661, 662, 663, 0, 664, 789,
	665, 645, 646, 666, 667, 0, 668, 669, 670, 671,
	672, 673, 674, 790, 0, 675, 0, 676, 677, 678,
	679, 680, 681, 683, 647, 684, 689, 690, 791, 685,
	686, 687, 688, 792, 692, 693, 694, 695, 0, 696,
	697, 0, 691, 682, 0, 698, 699, 700, 701, 702,
	703, 0, 704, 705, 0, 706, 793, 794, 795, 796,
	0, 718, 0, 707, 709, 710, 711, 712, 797, 713,
	798, 0, 714, 715, 716, 717, 708, 719, 720, 0,
	0, 721, 722, 723, 725, 727, 728, 724, 726, 729,
	0, 730, 0, 0, 731, 732, 733, 799, 800, 801,
	0, 735, 736, 734, 737, 738, 741, 739, 740, 802,
	742, 743, 744, 0, 0, 321, 0, 745, 746, 803,
	747, 748, 749, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 332, 331, 333, 334, 335, 336,
	0, 337, 338, 0, 0, 0, 0, 0, 750, 0,
	0, 0, 339, 1986, 340, 341, 342, 0, 343, 344,
	345, 346, 347, 348, 349, 751, 752, 0, 350, 753,
	351, 754, 0, 755, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 0, 359, 756, 757, 758, 0, 360,
	361, 759, 0, 0, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 371, 372, 373, 370, 374,
	375, 0, 376, 0, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 392, 393,
	394, 0, 395, 397, 760, 761, 0, 400, 402, 396,
	398, 0, 401, 399, 403, 404, 0, 405, 406, 407,
	0, 0, 408, 409, 410, 0, 411, 412, 413, 0,
	414, 415, 416, 0, 417, 418, 762, 419, 420, 421,
	423, 425, 422, 424, 426, 427, 428, 429, 430, 763,
	764, 431, 432, 0, 324, 0, 0, 0, 0, 0,
	433, 434, 435, 765, 0, 0, 0, 436, 0, 437,
	438, 439, 0, 440, 441, 0, 0, 442, 443, 444,
	766, 767, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 768, 0, 769, 455, 0, 456, 457,
	458, 459, 460, 461, 462, 770, 771, 772, 558, 0,
	463, 464, 465, 0, 466, 467, 468, 469, 470, 0,
	0, 0, 471, 472, 473, 474, 0, 326, 325, 327,
	0, 773, 475, 559, 476, 774, 775, 0, 776, 0,
	477, 478, 480, 0, 777, 0, 479, 481, 482, 0,
	483, 0, 0, 0, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 493, 492, 0, 495, 778, 494, 0,
	496, 497, 0, 0, 498, 499, 500, 501, 502, 503,
	506, 0, 0, 504, 505, 507, 508, 0, 509, 510,
	512, 515, 511, 513, 514, 516, 529, 530, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	532, 0, 531, 0, 533, 534, 535, 536, 537, 545,
	547, 548, 543, 544, 546, 549, 550, 552, 540, 541,
	542, 0, 551, 538, 0, 539, 328, 0, 553, 554,
	555, 556, 0, 779, 557, 780, 560, 561, 0, 0,
	562, 0, 563, 0, 0, 565, 566, 567, 0, 0,
	568, 569, 781, 0, 570, 0, 782, 571, 572, 564,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 583, 584, 783, 585, 586, 587, 784, 588, 589,
	590, 785, 591, 786, 592, 593, 0, 594, 595, 596,
	0, 597, 598, 599, 600, 601, 602, 603, 604, 787,
	605, 606, 608, 607, 609, 0, 610, 0, 611, 612,
	613, 0, 0, 0, 0, 0, 614, 615, 617, 0,
	618, 619, 620, 621, 616, 622, 623, 624, 625, 626,
	627, 0, 629, 630, 628, 631, 632, 0, 633, 634,
	635, 636, 637, 788, 638, 0, 639, 640, 648, 649,
	650, 641, 642, 644, 651, 643, 652, 653, 654, 655,
	657, 656, 0, 659, 660, 658, 661, 662, 663, 0,
	664, 789, 665, 645, 646, 666, 667, 0, 668, 669,
	670, 671, 672, 673, 674, 790, 0, 675, 0, 676,
	677, 678, 679, 680, 681, 683, 647, 684, 689, 690,
	791, 685, 686, 687, 688, 792, 692, 693, 694, 695,
	0, 696, 697, 0, 691, 682, 0, 698, 699, 700,
	701, 702, 703, 0, 704, 705, 0, 706, 793, 794,
	795, 796, 0, 718, 0, 707, 709, 710, 711, 712,
	797, 713, 798, 0, 714, 715, 716, 717, 708, 719,
	720, 0, 0, 721, 722, 723, 725, 727, 728, 724,
	726, 729, 0, 730, 0, 0, 731, 732, 733, 799,
	800, 801, 0, 735, 736, 734, 737, 738, 741, 739,
	740, 802, 742, 743, 744, 0, 0, 321, 3316, 745,
	746, 803, 747, 748, 749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 339, 4217, 340, 341, 342, 0,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 0, 755, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 0, 359, 756, 757, 758,
	0, 360, 361, 759, 0, 0, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 763, 764, 431, 432, 0, 0, 0, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 0, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 768, 0, 769, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 770, 771, 772,
	558, 0, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 0,
	0, 0, 0, 773, 475, 559, 476, 774, 775, 0,
	776, 0, 477, 478, 480, 0, 777, 0, 479, 481,
	482, 0, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 778,
	494, 0, 496, 497, 0, 0, 498, 499, 500, 501,
	502, 503, 506, 0, 0, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 0, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 0, 551, 538, 0, 539, 0, 0,
	553, 554, 555, 556, 0, 779, 557, 780, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 0, 570, 0, 782, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 785, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 0,
	633, 634, 635, 636, 637, 788, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 0, 664, 789, 665, 645, 646, 666, 667, 0,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 792, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	793, 794, 795, 796, 0, 718, 0, 707, 709, 710,
	711, 712, 797, 713, 798, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 0, 730, 0, 0, 731, 732,
	733, 799, 800, 801, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 0, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 1443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 5709,
	1344, 0, 0, 0, 339, 0, 340, 341, 342, 1384,
	343, 344, 345, 346, 347, 348, 349, 751, 752, 0,
	350, 753, 351, 754, 0, 755, 352, 353, 354, 355,
	356, 357, 358, 0, 1343, 0, 359, 756, 757, 758,
	0, 360, 361, 1350, 0, 1331, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 1385, 387, 388,
	389, 1334, 1332, 1333, 1340, 1336, 1335, 1339, 390, 391,
	392, 393, 394, 0, 395, 397, 760, 761, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 409, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 762, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 1375, 1376, 431, 432, 0, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 765, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 1386, 442,
	443, 444, 766, 767, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 1382, 0, 769, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 1345, 1346, 1349,
	558, 1388, 463, 464, 465, 0, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 1287,
	325, 327, 1387, 773, 475, 559, 476, 774, 775, 0,
	776, 0, 477, 478, 480, 1389, 1347, 1390, 479, 481,
	482, 1391, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 1383,
	494, 1392, 496, 497, 1393, 0, 498, 499, 500, 501,
	502, 503, 506, 1338, 1337, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 1394, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 1395, 551, 538, 0, 539, 328, 1396,
	553, 554, 555, 556, 0, 1348, 557, 780, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 781, 1397, 570, 1398, 1377, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 783, 585, 586, 587, 784,
	588, 589, 590, 1378, 591, 786, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 787, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 1399,
	633, 634, 635, 636, 637, 788, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 1341, 664, 789, 665, 645, 646, 666, 667, 1400,
	668, 669, 670, 671, 672, 673, 674, 790, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 791, 685, 686, 687, 688, 1379, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	793, 794, 795, 796, 0, 718, 0, 707, 709, 710,
	711, 712, 1380, 713, 1381, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 1342, 730, 0, 0, 731, 732,
	733, 799, 800, 801, 0, 735, 736, 734, 737, 738,
	741, 739, 740, 802, 742, 743, 744, 3263, 0, 0,
	0, 745, 746, 803, 747, 748, 749, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 332, 331, 333, 334,
	335, 336, 0, 337, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 340, 341, 342, 1384,
	343, 344, 345, 346, 347, 348, 349, 0, 2313, 0,
	350, 2320, 351, 2319, 0, 2328, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 0, 359, 2331, 2332, 0,
	0, 360, 361, 0, 0, 1632, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 371, 372, 373,
	370, 374, 375, 0, 376, 0, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 385, 386, 1385, 387, 388,
	389, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	392, 393, 394, 1367, 395, 397, 2317, 2316, 0, 400,
	402, 396, 398, 0, 401, 399, 403, 404, 0, 405,
	406, 407, 0, 0, 408, 1352, 410, 0, 411, 412,
	413, 0, 414, 415, 416, 0, 417, 418, 0, 419,
	420, 421, 423, 425, 422, 424, 426, 427, 428, 429,
	430, 0, 0, 431, 432, 0, 324, 0, 0, 0,
	0, 0, 433, 434, 435, 2315, 0, 0, 0, 436,
	0, 437, 438, 439, 0, 440, 441, 0, 1386, 442,
	443, 444, 2326, 2327, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 0, 0, 0, 455, 0,
	456, 457, 458, 459, 460, 461, 462, 0, 0, 0,
	558, 1388, 463, 464, 465, 3257, 466, 467, 468, 469,
	470, 0, 0, 0, 471, 472, 473, 474, 0, 0,
	0, 0, 1387, 3259, 475, 559, 476, 2310, 2311, 0,
	2306, 0, 477, 478, 480, 1389, 0, 1390, 479, 481,
	482, 1391, 483, 0, 0, 0, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 493, 492, 0, 495, 0,
	494, 1392, 496, 497, 1393, 0, 498, 499, 500, 501,
	502, 503, 506, 0, 0, 504, 505, 507, 508, 0,
	509, 510, 512, 515, 511, 513, 514, 516, 529, 530,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 532, 0, 531, 1394, 533, 534, 535, 536,
	537, 545, 547, 548, 543, 544, 546, 549, 550, 552,
	540, 541, 542, 1395, 551, 538, 0, 539, 0, 1396,
	553, 554, 555, 556, 0, 0, 557, 2318, 560, 561,
	0, 0, 562, 0, 563, 0, 0, 565, 566, 567,
	0, 0, 568, 569, 3258, 1397, 570, 1398, 0, 571,
	572, 564, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 583, 584, 2303, 585, 586, 587, 2304,
	588, 589, 590, 0, 591, 0, 592, 593, 0, 594,
	595, 596, 0, 597, 598, 599, 600, 601, 602, 603,
	604, 2314, 605, 606, 608, 607, 609, 0, 610, 0,
	611, 612, 613, 0, 0, 0, 0, 0, 614, 615,
	617, 0, 618, 619, 620, 621, 616, 622, 623, 624,
	625, 626, 627, 0, 629, 630, 628, 631, 632, 1399,
	633, 634, 635, 636, 637, 0, 638, 0, 639, 640,
	648, 649, 650, 641, 642, 644, 651, 643, 652, 653,
	654, 655, 657, 656, 0, 659, 660, 658, 661, 662,
	663, 0, 664, 0, 665, 645, 646, 666, 667, 1400,
	668, 669, 670, 671, 672, 673, 674, 2312, 0, 675,
	0, 676, 677, 678, 679, 680, 681, 683, 647, 684,
	689, 690, 2330, 685, 686, 687, 688, 0, 692, 693,
	694, 695, 0, 696, 697, 0, 691, 682, 0, 698,
	699, 700, 701, 702, 703, 0, 704, 705, 0, 706,
	2322, 2323, 2324, 2325, 0, 718, 0, 707, 709, 710,
	711, 712, 0, 713, 0, 0, 714, 715, 716, 717,
	708, 719, 720, 0, 0, 721, 722, 723, 725, 727,
	728, 724, 726, 729, 0, 730, 0, 0, 731, 732,
	733, 0, 2321, 2329, 3260, 735, 736, 734, 737, 738,
	741, 739, 740, 0, 742, 743, 744, 0, 0, 0,
	0, 745, 746, 0, 747, 748, 749, 0, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	3252, 750, 0, 2299, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 0, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 3263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	3648, 0, 0, 0, 0, 339, 0, 340, 341, 342,
	1384, 343, 344, 345, 346, 347, 348, 349, 0, 2313,
	0, 350, 2320, 351, 2319, 0, 2328, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 2331, 2332,
	0, 0, 360, 361, 0, 0, 1632, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 1385, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 1367, 395, 397, 2317, 2316, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 1352, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 0,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 0, 0, 431, 432, 0, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 2315, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 1386,
	442, 443, 444, 2326, 2327, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 0, 0, 0, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 0, 0,
	0, 558, 1388, 463, 464, 465, 3257, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 1387, 3259, 475, 559, 476, 2310, 2311,
	0, 2306, 0, 477, 478, 480, 1389, 0, 1390, 479,
	481, 482, 1391, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	0, 494, 1392, 496, 497, 1393, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 1394, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 1395, 551, 538, 0, 539, 0,
	1396, 553, 554, 555, 556, 0, 0, 557, 2318, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 3258, 1397, 570, 1398, 0,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 2303, 585, 586, 587,
	2304, 588, 589, 590, 0, 591, 0, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 2314, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	1399, 633, 634, 635, 636, 637, 0, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 0, 665, 645, 646, 666, 667,
	1400, 668, 669, 670, 671, 672, 673, 674, 2312, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 2330, 685, 686, 687, 688, 0, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 2322, 2323, 2324, 2325, 0, 718, 0, 707, 709,
	710, 711, 712, 0, 713, 0, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 0, 2321, 2329, 3260, 735, 736, 734, 737,
	738, 741, 739, 740, 0, 742, 743, 744, 0, 0,
	0, 0, 745, 746, 0, 747, 748, 749, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 2299, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 321, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 339, 0, 340, 341, 342,
	4355, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 0, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 1144, 0,
	1039, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	2785, 0, 0, 750, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 1046, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	1141, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 326, 325, 327, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 328, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 1143, 0, 691,
	682, 1044, 698, 699, 700, 701, 702, 1045, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	2281, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 4488, 337, 338, 0, 0,
	0, 0, 0, 750, 1049, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 2288, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 2289, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 2290, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 326, 325, 327, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 328, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 4487,
	643, 652, 653, 654, 655, 657, 656, 0, 2285, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 2287, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 4486, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	2307, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 0, 1049, 0, 0, 339, 0, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	0, 2313, 0, 350, 2320, 351, 2319, 0, 2328, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	2331, 2332, 0, 0, 360, 361, 0, 0, 1632, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	1385, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 1367, 395, 397, 2317,
	2316, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 1352, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 0, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 0, 0, 431, 432, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 435, 2315, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 1386, 442, 443, 444, 2326, 2327, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 0, 0,
	0, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	0, 0, 0, 558, 1388, 463, 464, 465, 3257, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 1387, 3259, 475, 559, 476,
	2310, 2311, 0, 2306, 0, 477, 478, 480, 1389, 0,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 0, 494, 1392, 496, 497, 1393, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 0,
	539, 0, 1396, 553, 554, 555, 556, 0, 0, 557,
	2318, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 3258, 1397, 570,
	1398, 0, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 2303, 585,
	586, 587, 2304, 588, 589, 590, 0, 591, 0, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 2314, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 0, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 0, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	2312, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 2330, 685, 686, 687, 688,
	0, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 2322, 2323, 2324, 2325, 0, 718, 0,
	707, 709, 710, 711, 712, 0, 713, 0, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 0, 2321, 2329, 3260, 735, 736,
	734, 737, 738, 741, 739, 740, 0, 742, 743, 744,
	0, 0, 0, 0, 745, 746, 0, 747, 748, 749,
	2281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 2336, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 2299, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 2288, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 2289, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 2290, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 326, 325, 327, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 328, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 2335,
	643, 652, 653, 654, 655, 657, 656, 0, 2337, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 2287, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 2334, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	2281, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 2280, 337, 338, 0, 0,
	0, 0, 0, 750, 1049, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 2288, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 2289, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 2290, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 326, 325, 327, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 328, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 2279,
	643, 652, 653, 654, 655, 657, 656, 0, 2285, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 2287, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 2278, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	1037, 0, 1039, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 1049, 750, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 1046, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 326, 325, 327, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 328, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 1044, 698, 699, 700, 701, 702, 1045,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 1039, 0, 0, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 750, 1049, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 1046, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 326, 325, 327, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 328, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 1044, 698, 699, 700, 701, 702, 1045,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 3243, 0, 321, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 1049, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 326, 325, 327, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 328, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 2281, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 1049, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 2288, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 2289, 763, 764,
	431, 432, 0, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 2290, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 326, 325, 327, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 328, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 2471, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 2472, 643, 652, 653, 654, 655, 657,
	656, 0, 2285, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 2287, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 2473, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 321, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 1049, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 326, 325, 327, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 328, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 321, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 1049, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 326, 325, 327, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 328, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 3263, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 0, 936, 0,
	0, 339, 0, 340, 341, 342, 1384, 343, 344, 345,
	346, 347, 348, 349, 0, 2313, 0, 350, 2320, 351,
	2319, 0, 2328, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 2331, 2332, 0, 0, 360, 361,
	0, 0, 1632, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 1385, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	1367, 395, 397, 2317, 2316, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 1352, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 0, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 0, 0,
	431, 432, 0, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 2315, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 1386, 442, 443, 444, 2326,
	2327, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 0, 0, 0, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 0, 0, 0, 558, 1388, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 1387,
	0, 475, 559, 476, 2310, 2311, 0, 2306, 0, 477,
	478, 480, 1389, 0, 1390, 479, 481, 482, 1391, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 0, 494, 1392, 496,
	497, 1393, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 1394, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	1395, 551, 538, 0, 539, 0, 1396, 553, 554, 555,
	556, 0, 0, 557, 2318, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 0, 1397, 570, 1398, 0, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 2303, 585, 586, 587, 2304, 588, 589, 590,
	0, 591, 0, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 2314, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 1399, 633, 634, 635,
	636, 637, 0, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	0, 665, 645, 646, 666, 667, 1400, 668, 669, 670,
	671, 672, 673, 674, 2312, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 2330,
	685, 686, 687, 688, 0, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 2322, 2323, 2324,
	2325, 0, 718, 0, 707, 709, 710, 711, 712, 0,
	713, 0, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 0, 2321,
	2329, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	2307, 742, 743, 744, 0, 0, 0, 0, 745, 746,
	0, 747, 748, 749, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 339, 0, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	2299, 2313, 0, 350, 2320, 351, 2319, 0, 2328, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	2331, 2332, 0, 0, 360, 361, 0, 0, 1632, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	1385, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 1367, 395, 397, 2317,
	2316, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 1352, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 0, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 0, 0, 431, 432, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 435, 2315, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 1386, 442, 443, 444, 2326, 2327, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 0, 0,
	0, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	0, 0, 0, 558, 1388, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 1387, 0, 475, 559, 476,
	2310, 2311, 0, 2306, 0, 477, 478, 480, 1389, 0,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 0, 494, 1392, 496, 497, 1393, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 0,
	539, 0, 1396, 553, 554, 555, 556, 0, 0, 557,
	2318, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 0, 1397, 570,
	1398, 0, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 2303, 585,
	586, 587, 2304, 588, 589, 590, 0, 591, 0, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 2314, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 0, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 0, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	2312, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 2330, 685, 686, 687, 688,
	0, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 2322, 2323, 2324, 2325, 0, 718, 0,
	707, 709, 710, 711, 712, 0, 713, 0, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 0, 2321, 2329, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 0, 742, 743, 744,
	0, 0, 0, 0, 745, 746, 0, 747, 748, 749,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 2299, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 0, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	0, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 1627, 1626,
	0, 0, 0, 0, 1624, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4511, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 339, 0, 340, 341, 342,
	1384, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 1632, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 1385, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 1386,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 1388, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 1387, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 1389, 777, 1390, 479,
	481, 482, 1391, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 1392, 496, 497, 1393, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 1394, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 1395, 551, 538, 0, 539, 0,
	1396, 553, 554, 555, 556, 4631, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 1397, 570, 1398, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	1399, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	1400, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 0, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 3371, 0,
	1627, 1626, 0, 0, 0, 0, 1624, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 339, 0, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 1632, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	1385, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 1386, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 1388, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 1387, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 1389, 777,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 1392, 496, 497, 1393, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 0,
	539, 0, 1396, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 1397, 570,
	1398, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	0, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	2722, 0, 1627, 1626, 0, 0, 0, 0, 1624, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 339,
	0, 340, 341, 342, 1384, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	1632, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 1385, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 1386, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 1917, 771, 772, 558, 1388, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 1387, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	1389, 777, 1390, 479, 481, 482, 1391, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 1392, 496, 497, 1393,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	1394, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 1395, 551,
	538, 0, 539, 0, 1396, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	1397, 570, 1398, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 1399, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 1400, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 0, 0, 0, 0, 745, 746, 803, 747,
	748, 749, 2345, 0, 1627, 1626, 0, 0, 0, 0,
	1624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 1384, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 1632, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 1385, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 1386, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 1388, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 1387,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 1389, 777, 1390, 479, 481, 482, 1391, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 1392, 496,
	497, 1393, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 1394, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	1395, 551, 538, 0, 539, 0, 1396, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 1397, 570, 1398, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 1399, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 1400, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 0, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 1914, 0, 1627, 1626, 0, 0,
	0, 0, 1624, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 339, 0, 340, 341, 342, 1384, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 361, 759, 0, 1632, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 1385, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 1386, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 1917, 771, 772, 558,
	1388, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 0, 0,
	0, 1387, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 1389, 777, 1390, 479, 481, 482,
	1391, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	1392, 496, 497, 1393, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 1394, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 1395, 551, 538, 0, 539, 0, 1396, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 1397, 570, 1398, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 1399, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 1400, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 0, 0, 0, 0,
	745, 746, 803, 747, 748, 749, 1864, 0, 1627, 1626,
	0, 0, 0, 0, 1624, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 339, 0, 340, 341, 342,
	1384, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 1632, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 1385, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 1386,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 1388, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 1387, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 1389, 777, 1390, 479,
	481, 482, 1391, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 1392, 496, 497, 1393, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 1394, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 1395, 551, 538, 0, 539, 0,
	1396, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 1397, 570, 1398, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	1399, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 1862, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	1400, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 0, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 1622, 0,
	1627, 1626, 0, 0, 0, 0, 1624, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 339, 0, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 1632, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	1385, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 1619, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 1386, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 1388, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 1387, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 1389, 777,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 1392, 496, 497, 1393, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 0,
	539, 0, 1396, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 1397, 570,
	1398, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 1620, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 1618, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 1621, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	0, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	1627, 1626, 0, 0, 0, 0, 1624, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 339, 0, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 1632, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	1385, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 1386, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 1388, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 1387, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 1389, 777,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 1392, 496, 497, 1393, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 0,
	539, 0, 1396, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 1397, 570,
	1398, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	1627, 1626, 0, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 339, 0, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 1632, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	1385, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 1386, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 1388, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 1387, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 1389, 777,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 1392, 496, 497, 1393, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 0,
	539, 0, 1396, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 1397, 570,
	1398, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	1627, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 339, 0, 340,
	341, 342, 1384, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 1632, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	1385, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 1386, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 1388, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 1387, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 1389, 777,
	1390, 479, 481, 482, 1391, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 1392, 496, 497, 1393, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 1394, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 1395, 551, 538, 0,
	539, 0, 1396, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 1397, 570,
	1398, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 1399, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 1400, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	321, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 3406, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 4209, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 3410,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 4208,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 3409, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 4204, 4205, 0, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 4207, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 4203, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 0, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 3408, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 4206, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	1720, 0, 321, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 1719, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 1715, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 1722, 763, 764, 431, 432,
	0, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 1718, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	1716, 473, 474, 0, 326, 325, 327, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 328, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 1721, 642,
	644, 651, 643, 652, 653, 654, 655, 1717, 656, 0,
	1714, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 1712, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 1713, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 1839, 0, 321, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 1841, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 326, 325, 327, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 328, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 1435, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 1836, 0, 321, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 339, 0, 340, 341, 342, 0, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 361, 759, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 1838, 771, 772, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 326, 325,
	327, 0, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 0, 777, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 328, 0, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 1435, 565, 566, 567, 0,
	0, 568, 569, 781, 0, 570, 0, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 1744, 0, 321, 0,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 1746, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	326, 325, 327, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 328,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 1435, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 321, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	326, 325, 327, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 328,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 1435, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 321, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	326, 325, 327, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 4077, 551, 538, 0, 539, 328,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 3617, 0,
	321, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	3616, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 326, 325, 327, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 328, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	321, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 3406, 360, 361, 759, 0, 0, 3400,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 3402, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 3410,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 3409, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	3399, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 0, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 3408, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 3407, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	2805, 0, 321, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 326, 325, 327, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 328, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 2751, 0, 321, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 2750, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 326, 325, 327, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 328, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 2736, 0, 321, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 339, 0, 340, 341, 342, 0, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 361, 759, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 2738, 771, 772, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 326, 325,
	327, 0, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 0, 777, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 328, 0, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 0, 570, 0, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 2727, 0, 321, 0,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	326, 325, 327, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 328,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 321, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 2699, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	326, 325, 327, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 328,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 1435, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 1964, 0,
	321, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	1963, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 326, 325, 327, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 328, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	1861, 0, 321, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 326, 325, 327, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 328, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 1854, 0, 321, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 1856, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 326, 325, 327, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 328, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 1844, 0, 321, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 339, 0, 340, 341, 342, 0, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 361, 759, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 770, 771, 772, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 326, 325,
	327, 0, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 0, 777, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 328, 0, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 0, 570, 0, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 1523, 0, 321, 0,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 1522, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	326, 325, 327, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 328,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 1512, 0,
	321, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	1511, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 326, 325, 327, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 328, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	1508, 0, 321, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 324, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 1507, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 326, 325, 327, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 328, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 1502, 0, 321, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 324, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 1501, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 326, 325, 327, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 328, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 1479, 0, 321, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 339, 0, 340, 341, 342, 0, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 361, 759, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 324, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 1478, 771, 772, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 326, 325,
	327, 0, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 0, 777, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 328, 0, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 0, 570, 0, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 805, 0, 321, 0,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 324, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	326, 325, 327, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 328,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 312, 0,
	321, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 326, 325, 327, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 328, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	321, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 326, 325, 327, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 328, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	321, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	2757, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 326, 325, 327, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 328, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	321, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 2481, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 326, 325, 327, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 328, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	321, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 2479, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 326, 325, 327, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 328, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	321, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 2477, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 326, 325, 327, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 328, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	321, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	2369, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 326, 325, 327, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 328, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	321, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 324,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	2363, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 326, 325, 327, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 328, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	838, 0, 321, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 836, 335, 336, 825, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 828, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 834, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 0, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 830,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 837,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 824, 0, 321, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 825,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	828, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	829, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 830, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 823, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 321, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 825,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	828, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	829, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 830, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 321, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 825,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	828, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	4641, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 830, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 321, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 825,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	828, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	829, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 830, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 3245, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 321, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	828, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	829, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 830, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 1128, 0, 321, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 339, 0, 340, 341, 342, 0, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 361, 759, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 770, 771, 772, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 0, 0,
	0, 0, 773, 475, 559, 476, 774, 775, 0, 776,
	1127, 477, 478, 480, 0, 777, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 0, 0, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 0, 570, 0, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 1126, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 929, 0, 321, 0,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 918, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 927, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 920, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 926, 441, 922, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 923, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 921, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	924, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	925, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	919, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 912, 0,
	321, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 918, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 927, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 920, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 926, 441,
	922, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 923, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 921, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 924, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 0, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 925, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 919, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	321, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 4208,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 0, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 4996, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	1553, 0, 321, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 339,
	0, 340, 341, 342, 1556, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 1554, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 900,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 0, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 899, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 898, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 1557, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 896, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 1553, 0, 321, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 1556, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 1554, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 900, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 899, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 898, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 1557, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 896, 794, 795,
	796, 0, 718, 0, 707, 1555, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 907, 0, 321, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 905, 337, 338, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 339, 0, 340, 341, 342, 0, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 361, 759, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 770, 771, 772, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 0, 0,
	0, 0, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 0, 777, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 0, 0, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 0, 570, 0, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 814, 0, 321, 0,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 813, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 812, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 321, 3316,
	0, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 321, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 5313,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 321, 4017,
	0, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 321, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 4869,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 321, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 4568,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 321, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 3183, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 321, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 3174, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 321, 0,
	0, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 2638,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 899, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 898, 643, 652,
	653, 654, 655, 3485, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 896, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 321, 3316,
	0, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	3313, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 2803, 0,
	321, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 0, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	321, 0, 0, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 2450, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 0, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	2020, 0, 321, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 0, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 2012, 0, 321, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 890, 0, 321, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 339, 0, 340, 341, 342, 0, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 886, 759, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 770, 771, 772, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 0, 0,
	0, 0, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 0, 777, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	891, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 900, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 0, 0, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 0, 570, 0, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 899,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 898, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 1997, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 896,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 1970, 0, 321, 0,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 1969, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 1953, 0,
	321, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	1951, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 0, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	1945, 0, 321, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 0, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 1923, 0, 321, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 1921, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 1920, 0, 321, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 339, 0, 340, 341, 342, 0, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 361, 759, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 770, 771, 772, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 0, 0,
	0, 0, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 0, 777, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 0, 0, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 0, 570, 0, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 633,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 793,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 1912, 0, 321, 0,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 1874, 0,
	321, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 0, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	1846, 0, 321, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 0, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 1607, 0, 321, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 1559, 0, 321, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 339, 0, 340, 341, 342, 0, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 361, 759, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 770, 771, 772, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 0, 0,
	0, 0, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 0, 777, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 0, 0, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 0, 570, 0, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 899,
	634, 635, 636, 637, 788, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 898, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 896,
	794, 795, 796, 0, 718, 0, 707, 709, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 1530, 0, 321, 0,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 1529, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 1527, 0,
	321, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	1526, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 0, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	1519, 0, 321, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 1518, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 0, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 321, 0, 0, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 1460, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 0, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 910, 0, 321, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 890, 0, 321, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 339, 0, 340, 341, 342, 0, 343,
	344, 345, 346, 347, 348, 349, 751, 752, 0, 350,
	753, 351, 754, 0, 755, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 756, 757, 758, 0,
	360, 886, 759, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 885, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 392,
	393, 394, 0, 395, 397, 760, 761, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 762, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	763, 764, 431, 432, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 435, 765, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 442, 443,
	444, 766, 767, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 768, 0, 769, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 770, 771, 772, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 0, 0,
	0, 0, 773, 475, 559, 476, 774, 775, 0, 776,
	0, 477, 478, 480, 0, 777, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 778, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	891, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 900, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 0, 0, 553,
	554, 555, 556, 0, 779, 557, 780, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 781, 0, 570, 0, 782, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 783, 585, 586, 587, 784, 588,
	589, 590, 785, 591, 786, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	787, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 899,
	634, 635, 636, 637, 887, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 898, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 888, 663,
	0, 664, 789, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 790, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 791, 685, 686, 687, 688, 792, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 896,
	794, 795, 796, 0, 718, 0, 707, 892, 710, 711,
	712, 797, 713, 798, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	799, 800, 801, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 802, 742, 743, 744, 879, 0, 321, 0,
	745, 746, 803, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 751, 752,
	0, 350, 753, 351, 754, 0, 755, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 756, 757,
	758, 0, 360, 361, 759, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 392, 393, 394, 0, 395, 397, 760, 761, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 762,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 763, 764, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 765, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 766, 767, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 768, 0, 769, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 770, 771,
	772, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 773, 475, 559, 476, 774, 775,
	0, 776, 0, 477, 478, 480, 0, 777, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	778, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 779, 557, 780, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 781, 0, 570, 0, 782,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 783, 585, 586, 587,
	784, 588, 589, 590, 785, 591, 786, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 787, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 788, 638, 0, 639,
	640, 880, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 0, 664, 789, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 790, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 791, 685, 686, 687, 688, 792, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 793, 794, 795, 796, 0, 718, 0, 707, 709,
	710, 711, 712, 797, 713, 798, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 799, 800, 801, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 802, 742, 743, 744, 840, 0,
	321, 0, 745, 746, 803, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	751, 752, 0, 350, 753, 351, 754, 0, 755, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	756, 757, 758, 0, 360, 361, 759, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 392, 393, 394, 0, 395, 397, 760,
	761, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 762, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 763, 764, 431, 432, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 435, 765, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 766, 767, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 768, 0,
	769, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	770, 771, 772, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 0, 773, 475, 559, 476,
	774, 775, 0, 776, 0, 477, 478, 480, 0, 777,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 778, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 0, 0, 553, 554, 555, 556, 0, 779, 557,
	780, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 781, 0, 570,
	0, 782, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 783, 585,
	586, 587, 784, 588, 589, 590, 785, 591, 786, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 787, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 788, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 0, 664, 789, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	790, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 791, 685, 686, 687, 688,
	792, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 793, 794, 795, 796, 0, 718, 0,
	707, 709, 710, 711, 712, 797, 713, 798, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 799, 800, 801, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 802, 742, 743, 744,
	832, 0, 321, 0, 745, 746, 803, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 751, 752, 0, 350, 753, 351, 754, 0,
	755, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 756, 757, 758, 0, 360, 361, 759, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 392, 393, 394, 0, 395,
	397, 760, 761, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 762, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 763, 764, 431, 432,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 435,
	765, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 766, 767, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	768, 0, 769, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 770, 771, 772, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 773, 475,
	559, 476, 774, 775, 0, 776, 0, 477, 478, 480,
	0, 777, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 778, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 0, 0, 553, 554, 555, 556, 0,
	779, 557, 780, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 781,
	0, 570, 0, 782, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	783, 585, 586, 587, 784, 588, 589, 590, 785, 591,
	786, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 787, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	788, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 0, 664, 789, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 790, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 791, 685, 686,
	687, 688, 792, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 793, 794, 795, 796, 0,
	718, 0, 707, 709, 710, 711, 712, 797, 713, 798,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 799, 800, 801, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 802, 742,
	743, 744, 809, 0, 321, 0, 745, 746, 803, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 321, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 321, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 4239, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 321, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 899, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 898, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 896, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 321, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 4134, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 321, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 4103, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 321, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 4099, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 321, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 4042, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 321, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 4040, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 321, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 4028, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 321, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 4025, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 321, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 3628, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 321, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 880, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 321, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 2775,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 0,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 321, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 1488, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 321, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 787, 605,
	606, 1408, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 321, 0, 0, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 751, 752, 0, 350, 753, 351,
	754, 0, 755, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 756, 757, 758, 0, 360, 361,
	759, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 392, 393, 394,
	0, 395, 397, 760, 761, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 762, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 763, 764,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 765, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 766,
	767, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 768, 0, 769, 0, 0, 456, 457, 458,
	459, 460, 461, 462, 770, 771, 772, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	773, 475, 559, 476, 774, 775, 0, 776, 0, 477,
	478, 480, 0, 777, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 778, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 779, 557, 780, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 781, 0, 570, 0, 782, 571, 572, 564, 573,
	574, 575, 0, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 783, 585, 586, 587, 784, 588, 589, 590,
	785, 591, 786, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 0, 603, 604, 787, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 788, 0, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 0, 664,
	789, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 790, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 791,
	685, 686, 687, 688, 792, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 793, 794, 795,
	796, 0, 718, 0, 707, 709, 710, 711, 712, 797,
	713, 798, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 799, 800,
	801, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	802, 742, 743, 744, 1959, 0, 1537, 0, 745, 746,
	803, 747, 748, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 332, 331, 333, 334, 335,
	336, 0, 337, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 339, 0, 340, 341, 342, 0, 343,
	344, 345, 346, 347, 348, 349, 0, 0, 0, 350,
	0, 351, 0, 0, 0, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 0, 359, 0, 0, 0, 0,
	360, 361, 0, 0, 0, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 0, 0, 371, 372, 373, 370,
	374, 375, 0, 376, 0, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 0, 0, 0, 0, 0, 1539, 390, 391, 392,
	393, 394, 0, 395, 397, 0, 0, 0, 400, 402,
	396, 398, 0, 401, 399, 403, 404, 0, 405, 406,
	407, 0, 0, 408, 409, 410, 0, 411, 412, 413,
	0, 414, 415, 416, 0, 417, 418, 0, 419, 420,
	421, 423, 425, 422, 424, 426, 427, 428, 429, 430,
	0, 0, 431, 432, 0, 0, 0, 0, 0, 0,
	0, 433, 434, 435, 0, 0, 0, 0, 436, 0,
	437, 438, 439, 0, 440, 441, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 0, 0, 0, 455, 0, 456,
	457, 458, 459, 460, 461, 462, 1958, 0, 0, 558,
	0, 463, 464, 465, 0, 466, 467, 468, 469, 470,
	0, 0, 0, 471, 472, 473, 474, 0, 0, 0,
	0, 0, 0, 475, 559, 476, 0, 0, 0, 0,
	0, 477, 478, 480, 0, 0, 0, 479, 481, 482,
	0, 483, 0, 0, 0, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 493, 492, 0, 495, 0, 494,
	0, 496, 497, 0, 0, 498, 499, 500, 501, 502,
	503, 506, 0, 0, 504, 505, 507, 508, 0, 509,
	510, 512, 515, 511, 513, 514, 516, 529, 530, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 532, 0, 531, 0, 533, 534, 535, 536, 537,
	545, 547, 548, 543, 544, 546, 549, 550, 552, 540,
	541, 542, 0, 551, 538, 0, 539, 0, 0, 553,
	554, 555, 556, 0, 0, 557, 0, 560, 561, 0,
	0, 562, 0, 563, 0, 0, 565, 566, 567, 0,
	0, 568, 569, 0, 0, 570, 0, 0, 571, 572,
	564, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 583, 584, 0, 585, 586, 587, 0, 588,
	589, 590, 0, 591, 0, 592, 593, 0, 594, 595,
	596, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	0, 605, 606, 608, 607, 609, 0, 610, 0, 611,
	612, 613, 0, 0, 0, 0, 0, 614, 615, 617,
	0, 618, 619, 620, 621, 616, 622, 623, 624, 625,
	626, 627, 0, 629, 630, 628, 631, 632, 0, 633,
	634, 635, 636, 637, 0, 638, 0, 639, 640, 648,
	649, 650, 641, 642, 644, 651, 643, 652, 653, 654,
	655, 657, 656, 0, 659, 660, 658, 661, 662, 663,
	1540, 664, 0, 665, 645, 646, 666, 667, 0, 668,
	669, 670, 671, 672, 673, 674, 0, 0, 675, 0,
	676, 677, 678, 679, 680, 681, 683, 647, 684, 689,
	690, 0, 685, 686, 687, 688, 0, 692, 693, 694,
	695, 0, 696, 697, 0, 691, 682, 0, 698, 699,
	700, 701, 702, 703, 0, 704, 705, 0, 706, 0,
	0, 0, 0, 0, 718, 0, 707, 709, 710, 711,
	712, 0, 713, 0, 0, 714, 715, 716, 717, 708,
	719, 720, 0, 0, 721, 722, 723, 725, 727, 728,
	724, 726, 729, 0, 730, 0, 0, 731, 732, 733,
	0, 0, 0, 0, 735, 736, 734, 737, 738, 741,
	739, 740, 0, 742, 743, 744, 1877, 0, 1537, 0,
	745, 746, 0, 747, 748, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 332, 331, 333,
	334, 335, 336, 0, 337, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 339, 0, 340, 341, 342,
	0, 343, 344, 345, 346, 347, 348, 349, 0, 0,
	0, 350, 0, 351, 0, 0, 0, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 0, 359, 0, 0,
	0, 0, 360, 361, 0, 0, 0, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 0, 371, 372,
	373, 370, 374, 375, 0, 376, 0, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 0, 0, 0, 0, 0, 1539, 390,
	391, 392, 393, 394, 0, 395, 397, 0, 0, 0,
	400, 402, 396, 398, 0, 401, 399, 403, 404, 0,
	405, 406, 407, 0, 0, 408, 409, 410, 0, 411,
	412, 413, 0, 414, 415, 416, 0, 417, 418, 0,
	419, 420, 421, 423, 425, 422, 424, 426, 427, 428,
	429, 430, 0, 0, 431, 432, 0, 0, 0, 0,
	0, 0, 0, 433, 434, 435, 0, 0, 0, 0,
	436, 0, 437, 438, 439, 0, 440, 441, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 0, 0, 0, 455,
	0, 456, 457, 458, 459, 460, 461, 462, 1876, 0,
	0, 558, 0, 463, 464, 465, 0, 466, 467, 468,
	469, 470, 0, 0, 0, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 0, 475, 559, 476, 0, 0,
	0, 0, 0, 477, 478, 480, 0, 0, 0, 479,
	481, 482, 0, 483, 0, 0, 0, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 493, 492, 0, 495,
	0, 494, 0, 496, 497, 0, 0, 498, 499, 500,
	501, 502, 503, 506, 0, 0, 504, 505, 507, 508,
	0, 509, 510, 512, 515, 511, 513, 514, 516, 529,
	530, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 532, 0, 531, 0, 533, 534, 535,
	536, 537, 545, 547, 548, 543, 544, 546, 549, 550,
	552, 540, 541, 542, 0, 551, 538, 0, 539, 0,
	0, 553, 554, 555, 556, 0, 0, 557, 0, 560,
	561, 0, 0, 562, 0, 563, 0, 0, 565, 566,
	567, 0, 0, 568, 569, 0, 0, 570, 0, 0,
	571, 572, 564, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 583, 584, 0, 585, 586, 587,
	0, 588, 589, 590, 0, 591, 0, 592, 593, 0,
	594, 595, 596, 0, 597, 598, 599, 600, 601, 602,
	603, 604, 0, 605, 606, 608, 607, 609, 0, 610,
	0, 611, 612, 613, 0, 0, 0, 0, 0, 614,
	615, 617, 0, 618, 619, 620, 621, 616, 622, 623,
	624, 625, 626, 627, 0, 629, 630, 628, 631, 632,
	0, 633, 634, 635, 636, 637, 0, 638, 0, 639,
	640, 648, 649, 650, 641, 642, 644, 651, 643, 652,
	653, 654, 655, 657, 656, 0, 659, 660, 658, 661,
	662, 663, 1540, 664, 0, 665, 645, 646, 666, 667,
	0, 668, 669, 670, 671, 672, 673, 674, 0, 0,
	675, 0, 676, 677, 678, 679, 680, 681, 683, 647,
	684, 689, 690, 0, 685, 686, 687, 688, 0, 692,
	693, 694, 695, 0, 696, 697, 0, 691, 682, 0,
	698, 699, 700, 701, 702, 703, 0, 704, 705, 0,
	706, 0, 0, 0, 0, 0, 718, 0, 707, 709,
	710, 711, 712, 0, 713, 0, 0, 714, 715, 716,
	717, 708, 719, 720, 0, 0, 721, 722, 723, 725,
	727, 728, 724, 726, 729, 0, 730, 0, 0, 731,
	732, 733, 0, 0, 0, 0, 735, 736, 734, 737,
	738, 741, 739, 740, 0, 742, 743, 744, 1535, 0,
	1537, 0, 745, 746, 0, 747, 748, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	0, 0, 0, 350, 0, 351, 0, 0, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	0, 0, 0, 0, 360, 361, 0, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	1539, 390, 391, 392, 393, 394, 0, 395, 397, 0,
	0, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 0, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 0, 0, 431, 432, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 435, 0, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 0, 0, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 0, 0,
	0, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	1534, 0, 0, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 0, 0, 475, 559, 476,
	0, 0, 0, 0, 0, 477, 478, 480, 0, 0,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 0, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 0, 0, 553, 554, 555, 556, 0, 0, 557,
	0, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 0, 0, 570,
	0, 0, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 0, 585,
	586, 587, 0, 588, 589, 590, 0, 591, 0, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 0, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 0, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 1540, 664, 0, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	0, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 0, 685, 686, 687, 688,
	0, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 0, 0, 0, 0, 0, 718, 0,
	707, 709, 710, 711, 712, 0, 713, 0, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 0, 0, 0, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 0, 742, 743, 744,
	2384, 0, 1537, 0, 745, 746, 0, 747, 748, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 332, 331, 333, 334, 335, 336, 0, 337, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 339,
	0, 340, 341, 342, 0, 343, 344, 345, 346, 347,
	348, 349, 0, 0, 0, 350, 0, 351, 0, 0,
	0, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	0, 359, 0, 0, 0, 0, 360, 361, 0, 0,
	0, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 0, 371, 372, 373, 370, 374, 375, 0, 376,
	0, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 0, 0, 0,
	0, 0, 1539, 390, 391, 392, 393, 394, 0, 395,
	397, 0, 0, 0, 400, 402, 396, 398, 0, 401,
	399, 403, 404, 0, 405, 406, 407, 0, 0, 408,
	409, 410, 0, 411, 412, 413, 0, 414, 415, 416,
	0, 417, 418, 0, 419, 420, 421, 423, 425, 422,
	424, 426, 427, 428, 429, 430, 0, 0, 431, 432,
	0, 0, 0, 0, 0, 0, 0, 433, 434, 435,
	0, 0, 0, 0, 436, 0, 437, 438, 439, 0,
	440, 441, 0, 0, 442, 443, 444, 0, 0, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	0, 0, 0, 455, 0, 456, 457, 458, 459, 460,
	461, 462, 0, 0, 0, 558, 0, 463, 464, 465,
	0, 466, 467, 468, 469, 470, 0, 0, 0, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 0, 475,
	559, 476, 0, 0, 0, 0, 0, 477, 478, 480,
	0, 0, 0, 479, 481, 482, 0, 483, 0, 0,
	0, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	493, 492, 0, 495, 0, 494, 0, 496, 497, 0,
	0, 498, 499, 500, 501, 502, 503, 506, 0, 0,
	504, 505, 507, 508, 0, 509, 510, 512, 515, 511,
	513, 514, 516, 529, 530, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 532, 0, 531,
	0, 533, 534, 535, 536, 537, 545, 547, 548, 543,
	544, 546, 549, 550, 552, 540, 541, 542, 0, 551,
	538, 0, 539, 0, 0, 553, 554, 555, 556, 0,
	0, 557, 0, 560, 561, 0, 0, 562, 0, 563,
	0, 0, 565, 566, 567, 0, 0, 568, 569, 0,
	0, 570, 0, 0, 571, 572, 564, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 583, 584,
	0, 585, 586, 587, 0, 588, 589, 590, 0, 591,
	0, 592, 593, 0, 594, 595, 596, 0, 597, 598,
	599, 600, 601, 602, 603, 604, 0, 605, 606, 608,
	607, 609, 0, 610, 0, 611, 612, 613, 0, 0,
	0, 0, 0, 614, 615, 617, 0, 618, 619, 620,
	621, 616, 622, 623, 624, 625, 626, 627, 0, 629,
	630, 628, 631, 632, 0, 633, 634, 635, 636, 637,
	0, 638, 0, 639, 640, 648, 649, 650, 641, 642,
	644, 651, 643, 652, 653, 654, 655, 657, 656, 0,
	659, 660, 658, 661, 662, 663, 1540, 664, 0, 665,
	645, 646, 666, 667, 0, 668, 669, 670, 671, 672,
	673, 674, 0, 0, 675, 0, 676, 677, 678, 679,
	680, 681, 683, 647, 684, 689, 690, 0, 685, 686,
	687, 688, 0, 692, 693, 694, 695, 0, 696, 697,
	0, 691, 682, 0, 698, 699, 700, 701, 702, 703,
	0, 704, 705, 0, 706, 0, 0, 0, 0, 0,
	718, 0, 707, 709, 710, 711, 712, 0, 713, 0,
	0, 714, 715, 716, 717, 708, 719, 720, 0, 0,
	721, 722, 723, 725, 727, 728, 724, 726, 729, 0,
	730, 0, 0, 731, 732, 733, 0, 0, 0, 0,
	735, 736, 734, 737, 738, 741, 739, 740, 0, 742,
	743, 744, 2343, 0, 1537, 0, 745, 746, 0, 747,
	748, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 332, 331, 333, 334, 335, 336, 0,
	337, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 339, 0, 340, 341, 342, 0, 343, 344, 345,
	346, 347, 348, 349, 0, 0, 0, 350, 0, 351,
	0, 0, 0, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 0, 359, 0, 0, 0, 0, 360, 361,
	0, 0, 0, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 0, 0, 371, 372, 373, 370, 374, 375,
	0, 376, 0, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 0,
	0, 0, 0, 0, 1539, 390, 391, 392, 393, 394,
	0, 395, 397, 0, 0, 0, 400, 402, 396, 398,
	0, 401, 399, 403, 404, 0, 405, 406, 407, 0,
	0, 408, 409, 410, 0, 411, 412, 413, 0, 414,
	415, 416, 0, 417, 418, 0, 419, 420, 421, 423,
	425, 422, 424, 426, 427, 428, 429, 430, 0, 0,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 433,
	434, 435, 0, 0, 0, 0, 436, 0, 437, 438,
	439, 0, 440, 441, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 0, 0, 0, 455, 0, 456, 457, 458,
	459, 460, 461, 462, 0, 0, 0, 558, 0, 463,
	464, 465, 0, 466, 467, 468, 469, 470, 0, 0,
	0, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	0, 475, 559, 476, 0, 0, 0, 0, 0, 477,
	478, 480, 0, 0, 0, 479, 481, 482, 0, 483,
	0, 0, 0, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 493, 492, 0, 495, 0, 494, 0, 496,
	497, 0, 0, 498, 499, 500, 501, 502, 503, 506,
	0, 0, 504, 505, 507, 508, 0, 509, 510, 512,
	515, 511, 513, 514, 516, 529, 530, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 532,
	0, 531, 0, 533, 534, 535, 536, 537, 545, 547,
	548, 543, 544, 546, 549, 550, 552, 540, 541, 542,
	0, 551, 538, 0, 539, 0, 0, 553, 554, 555,
	556, 0, 0, 557, 0, 560, 561, 0, 0, 562,
	0, 563, 0, 0, 565, 566, 567, 0, 0, 568,
	569, 0, 0, 570, 0, 0, 571, 572, 564, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	583, 584, 0, 585, 586, 587, 0, 588, 589, 590,
	0, 591, 0, 592, 593, 0, 594, 595, 596, 0,
	597, 598, 599, 600, 601, 602, 603, 604, 0, 605,
	606, 608, 607, 609, 0, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 614, 615, 617, 0, 618,
	619, 620, 621, 616, 622, 623, 624, 625, 626, 627,
	0, 629, 630, 628, 631, 632, 0, 633, 634, 635,
	636, 637, 0, 638, 0, 639, 640, 648, 649, 650,
	641, 642, 644, 651, 643, 652, 653, 654, 655, 657,
	656, 0, 659, 660, 658, 661, 662, 663, 1540, 664,
	0, 665, 645, 646, 666, 667, 0, 668, 669, 670,
	671, 672, 673, 674, 0, 0, 675, 0, 676, 677,
	678, 679, 680, 681, 683, 647, 684, 689, 690, 0,
	685, 686, 687, 688, 0, 692, 693, 694, 695, 0,
	696, 697, 0, 691, 682, 0, 698, 699, 700, 701,
	702, 703, 0, 704, 705, 0, 706, 0, 0, 0,
	0, 0, 718, 0, 707, 709, 710, 711, 712, 0,
	713, 0, 0, 714, 715, 716, 717, 708, 719, 720,
	0, 0, 721, 722, 723, 725, 727, 728, 724, 726,
	729, 0, 730, 0, 0, 731, 732, 733, 0, 0,
	0, 0, 735, 736, 734, 737, 738, 741, 739, 740,
	1537, 742, 743, 744, 0, 0, 0, 0, 745, 746,
	0, 747, 748, 749, 0, 0, 0, 329, 330, 332,
	331, 333, 334, 335, 336, 0, 337, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 339, 0, 340,
	341, 342, 0, 343, 344, 345, 346, 347, 348, 349,
	0, 0, 0, 350, 0, 351, 0, 0, 0, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 0, 359,
	0, 0, 0, 0, 360, 361, 0, 0, 0, 0,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 0,
	371, 372, 373, 370, 374, 375, 0, 376, 0, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 0, 0, 0, 0, 0,
	1539, 390, 391, 392, 393, 394, 0, 395, 397, 0,
	0, 0, 400, 402, 396, 398, 0, 401, 399, 403,
	404, 0, 405, 406, 407, 0, 0, 408, 409, 410,
	0, 411, 412, 413, 0, 414, 415, 416, 0, 417,
	418, 0, 419, 420, 421, 423, 425, 422, 424, 426,
	427, 428, 429, 430, 0, 0, 431, 432, 0, 0,
	0, 0, 0, 0, 0, 433, 434, 435, 0, 0,
	0, 0, 436, 0, 437, 438, 439, 0, 440, 441,
	0, 0, 442, 443, 444, 0, 0, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 0, 0,
	0, 455, 0, 456, 457, 458, 459, 460, 461, 462,
	0, 0, 0, 558, 0, 463, 464, 465, 0, 466,
	467, 468, 469, 470, 0, 0, 0, 471, 472, 473,
	474, 0, 0, 0, 0, 0, 0, 475, 559, 476,
	0, 0, 0, 0, 0, 477, 478, 480, 0, 0,
	0, 479, 481, 482, 0, 483, 0, 0, 0, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 493, 492,
	0, 495, 0, 494, 0, 496, 497, 0, 0, 498,
	499, 500, 501, 502, 503, 506, 0, 0, 504, 505,
	507, 508, 0, 509, 510, 512, 515, 511, 513, 514,
	516, 529, 530, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 532, 0, 531, 0, 533,
	534, 535, 536, 537, 545, 547, 548, 543, 544, 546,
	549, 550, 552, 540, 541, 542, 0, 551, 538, 0,
	539, 0, 0, 553, 554, 555, 556, 0, 0, 557,
	0, 560, 561, 0, 0, 562, 0, 563, 0, 0,
	565, 566, 567, 0, 0, 568, 569, 0, 0, 570,
	0, 0, 571, 572, 564, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 583, 584, 0, 585,
	586, 587, 0, 588, 589, 590, 0, 591, 0, 592,
	593, 0, 594, 595, 596, 0, 597, 598, 599, 600,
	601, 602, 603, 604, 0, 605, 606, 608, 607, 609,
	0, 610, 0, 611, 612, 613, 0, 0, 0, 0,
	0, 614, 615, 617, 0, 618, 619, 620, 621, 616,
	622, 623, 624, 625, 626, 627, 0, 629, 630, 628,
	631, 632, 0, 633, 634, 635, 636, 637, 0, 638,
	0, 639, 640, 648, 649, 650, 641, 642, 644, 651,
	643, 652, 653, 654, 655, 657, 656, 0, 659, 660,
	658, 661, 662, 663, 1540, 664, 0, 665, 645, 646,
	666, 667, 0, 668, 669, 670, 671, 672, 673, 674,
	0, 0, 675, 0, 676, 677, 678, 679, 680, 681,
	683, 647, 684, 689, 690, 0, 685, 686, 687, 688,
	0, 692, 693, 694, 695, 0, 696, 697, 0, 691,
	682, 0, 698, 699, 700, 701, 702, 703, 0, 704,
	705, 0, 706, 0, 0, 0, 0, 0, 718, 0,
	707, 709, 710, 711, 712, 0, 713, 0, 0, 714,
	715, 716, 717, 708, 719, 720, 0, 0, 721, 722,
	723, 725, 727, 728, 724, 726, 729, 0, 730, 0,
	0, 731, 732, 733, 0, 0, 0, 0, 735, 736,
	734, 737, 738, 741, 739, 740, 0, 742, 743, 744,
	0, 0, 0, 0, 745, 746, 0, 747, 748, 749,
	2065, 2066, 0, 2098, 2099, 2100, 2109, 2110, 2111, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2102, 2096, 0, 0, 0, 0, 0,
	0, 0, 2068, 0, 0, 0, 0, 0, 0, 0,
	0, 2065, 2066, 2115, 2098, 2099, 2100, 2109, 2110, 2111,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2121, 0, 0, 2102, 2096, 0, 0, 0, 0,
	2067, 0, 0, 2068, 0, 0, 0, 0, 0, 0,
	0, 2087, 0, 0, 2115, 0, 0, 0, 0, 0,
	0, 2084, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2121, 0, 0, 0, 0, 0, 0, 0,
	0, 2067, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2087, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2084, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 2091, 2092, 2093, 0, 0,
	0, 0, 0, 0, 2073, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2090, 2091, 2092, 2093, 0,
	0, 0, 0, 0, 0, 2073, 0, 2106, 0, 0,
	0, 2116, 0, 0, 0, 0, 0, 0, 2095, 2097,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2112, 0, 2113, 0, 0, 0, 0, 2106, 0,
	2082, 2083, 2116, 0, 0, 0, 0, 0, 0, 2095,
	2097, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2104, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2112, 0, 2113, 2088, 0, 0, 0, 0,
	0, 2082, 2083, 0, 0, 0, 2065, 2066, 0, 2098,
	2099, 2100, 2109, 2110, 2111, 0, 0, 0, 0, 0,
	0, 2104, 0, 0, 0, 0, 0, 0, 0, 2102,
	2096, 0, 0, 0, 0, 0, 2088, 0, 2068, 0,
	0, 0, 0, 0, 0, 2114, 0, 0, 0, 2115,
	0, 2065, 2066, 0, 2098, 2099, 2100, 2109, 2110, 2111,
	0, 0, 0, 0, 0, 0, 2103, 2121, 0, 0,
	0, 0, 0, 0, 2102, 2096, 2067, 2118, 0, 0,
	0, 0, 0, 2068, 0, 0, 2114, 2087, 0, 0,
	0, 0, 0, 0, 2115, 0, 0, 2084, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2103, 0, 0,
	0, 0, 2121, 0, 0, 0, 0, 0, 2118, 0,
	0, 2067, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2087, 0, 0, 0, 0, 2094, 0, 0,
	0, 0, 2084, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2089, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2094, 0,
	2090, 2091, 2092, 2093, 0, 0, 0, 0, 0, 0,
	2073, 0, 0, 0, 0, 2107, 0, 0, 0, 0,
	0, 0, 0, 0, 2089, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2090, 2091, 2092, 2093, 0,
	0, 2120, 0, 2106, 0, 2073, 2107, 2116, 0, 0,
	0, 0, 0, 0, 2095, 2097, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2112, 0, 2113,
	0, 0, 2120, 0, 0, 0, 2082, 2083, 2106, 0,
	0, 0, 2116, 0, 0, 0, 0, 0, 0, 2095,
	2097, 0, 0, 0, 0, 0, 2104, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2088, 2112, 2105, 2113, 0, 0, 0, 0, 0,
	0, 2082, 2083, 0, 0, 2079, 2080, 2086, 2108, 2085,
	2081, 0, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074,
	2075, 2104, 0, 0, 0, 0, 5441, 0, 0, 0,
	0, 0, 0, 0, 2105, 0, 2088, 0, 0, 0,
	0, 2114, 0, 0, 0, 0, 2079, 2080, 2086, 2108,
	2085, 2081, 0, 2078, 2076, 2077, 2069, 2070, 2071, 2072,
	2074, 2075, 2103, 0, 0, 0, 0, 5437, 0, 0,
	0, 0, 0, 2118, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2114, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2103, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2118, 0,
	0, 0, 2065, 2066, 0, 2098, 2099, 2100, 2109, 2110,
	2111, 0, 0, 2094, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2102, 2096, 0, 0, 0,
	0, 0, 0, 0, 2068, 0, 0, 0, 0, 2089,
	0, 0, 0, 2065, 2066, 2115, 2098, 2099, 2100, 2109,
	2110, 2111, 0, 0, 0, 0, 0, 0, 2094, 0,
	0, 0, 0, 2121, 0, 0, 2102, 2096, 0, 0,
	0, 2107, 2067, 0, 0, 2068, 0, 0, 0, 0,
	0, 0, 0, 2087, 2089, 0, 2115, 0, 0, 0,
	0, 0, 0, 2084, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2121, 0, 0, 2120, 0, 0,
	0, 0, 0, 2067, 0, 0, 2107, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2084, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2120, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2090, 2091, 2092, 2093,
	0, 0, 0, 0, 0, 0, 2073, 0, 0, 2105,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2079, 2080, 2086, 2108, 2085, 2081, 0, 2078, 2076,
	2077, 2069, 2070, 2071, 2072, 2074, 2075, 2090, 2091, 2092,
	2093, 0, 5341, 0, 0, 0, 0, 2073, 0, 2106,
	0, 0, 0, 2116, 2105, 0, 0, 0, 0, 0,
	2095, 2097, 0, 0, 0, 0, 2079, 2080, 2086, 2108,
	2085, 2081, 0, 2078, 2076, 2077, 2069, 2070, 2071, 2072,
	2074, 2075, 0, 2112, 0, 2113, 0, 5285, 0, 0,
	2106, 0, 2082, 2083, 2116, 0, 0, 0, 0, 0,
	0, 2095, 2097, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2104, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2112, 0, 2113, 2088, 0, 0,
	0, 0, 0, 2082, 2083, 0, 0, 0, 2065, 2066,
	0, 2098, 2099, 2100, 2109, 2110, 2111, 0, 0, 0,
	0, 0, 0, 2104, 0, 0, 0, 0, 0, 0,
	0, 2102, 2096, 0, 0, 0, 0, 0, 2088, 0,
	2068, 0, 0, 0, 0, 0, 0, 2114, 0, 0,
	0, 2115, 0, 2065, 2066, 0, 2098, 2099, 2100, 2109,
	2110, 2111, 0, 0, 0, 0, 0, 0, 2103, 2121,
	0, 0, 0, 0, 0, 0, 2102, 2096, 2067, 2118,
	0, 0, 0, 0, 0, 2068, 0, 0, 2114, 2087,
	0, 0, 0, 0, 0, 0, 2115, 0, 0, 2084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2103,
	0, 0, 0, 0, 2121, 0, 0, 0, 0, 0,
	2118, 0, 0, 2067, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 0, 0, 0, 2094,
	0, 0, 0, 0, 2084, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2089, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2094, 0, 2090, 2091, 2092, 2093, 0, 0, 0, 0,
	0, 0, 2073, 0, 0, 0, 0, 2107, 0, 0,
	0, 0, 0, 0, 0, 0, 2089, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2090, 2091, 2092,
	2093, 0, 0, 2120, 0, 2106, 0, 2073, 2107, 2116,
	0, 0, 0, 0, 0, 0, 2095, 2097, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2112,
	0, 2113, 0, 0, 2120, 0, 0, 0, 2082, 2083,
	2106, 0, 0, 0, 2116, 0, 0, 0, 0, 0,
	0, 2095, 2097, 0, 0, 0, 0, 0, 2104, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2088, 2112, 2105, 2113, 0, 0, 0,
	0, 0, 0, 2082, 2083, 0, 0, 2079, 2080, 2086,
	2108, 2085, 2081, 0, 2078, 2076, 2077, 2069, 2070, 2071,
	2072, 2074, 2075, 2104, 0, 0, 0, 0, 5284, 0,
	0, 0, 0, 0, 0, 0, 2105, 0, 2088, 0,
	0, 0, 0, 2114, 0, 0, 0, 0, 2079, 2080,
	2086, 2108, 2085, 2081, 0, 2078, 2076, 2077, 2069, 2070,
	2071, 2072, 2074, 2075, 2103, 0, 0, 0, 0, 5079,
	0, 0, 0, 0, 0, 2118, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2114, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2103,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2118, 0, 0, 0, 2065, 2066, 0, 2098, 2099, 2100,
	2109, 2110, 2111, 0, 0, 2094, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2102, 2096, 0,
	0, 0, 0, 0, 0, 0, 2068, 0, 0, 0,
	0, 2089, 0, 0, 0, 2065, 2066, 2115, 2098, 2099,
	2100, 2109, 2110, 2111, 0, 0, 0, 0, 0, 0,
	2094, 0, 0, 0, 0, 2121, 0, 0, 2102, 2096,
	0, 0, 0, 2107, 2067, 0, 0, 2068, 0, 0,
	0, 0, 0, 0, 0, 2087, 2089, 0, 2115, 0,
	0, 0, 0, 0, 0, 2084, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2121, 0, 0, 2120,
	0, 0, 0, 0, 0, 2067, 0, 0, 2107, 0,
	0, 0, 0, 0, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2120, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2090, 2091,
	2092, 2093, 0, 0, 0, 0, 0, 0, 2073, 0,
	0, 2105, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2079, 2080, 2086, 2108, 2085, 2081, 0,
	2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 2090,
	2091, 2092, 2093, 0, 4893, 0, 0, 0, 0, 2073,
	0, 2106, 0, 0, 0, 2116, 2105, 0, 0, 0,
	0, 0, 2095, 2097, 0, 0, 0, 0, 2079, 2080,
	2086, 2108, 2085, 2081, 0, 2078, 2076, 2077, 2069, 2070,
	2071, 2072, 2074, 2075, 0, 2112, 0, 2113, 0, 4784,
	0, 0, 2106, 0, 2082, 2083, 2116, 0, 0, 0,
	0, 0, 0, 2095, 2097, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2104, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2112, 0, 2113, 2088,
	0, 0, 0, 0, 0, 2082, 2083, 0, 0, 0,
	2065, 2066, 0, 2098, 2099, 2100, 2109, 2110, 2111, 0,
	0, 0, 0, 0, 0, 2104, 0, 0, 0, 0,
	0, 0, 0, 2102, 2096, 0, 0, 0, 0, 0,
	2088, 0, 2068, 0, 0, 0, 0, 0, 0, 2114,
	0, 0, 0, 2115, 0, 2065, 2066, 0, 2098, 2099,
	2100, 2109, 2110, 2111, 0, 0, 0, 0, 0, 0,
	2103, 2121, 0, 0, 0, 0, 0, 0, 2102, 2096,
	2067, 2118, 0, 0, 0, 0, 0, 2068, 0, 0,
	2114, 2087, 0, 0, 0, 0, 0, 0, 2115, 0,
	0, 2084, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2103, 0, 0, 0, 0, 2121, 0, 0, 0,
	0, 0, 2118, 0, 0, 2067, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2087, 0, 0, 0,
	0, 2094, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2089, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 0, 2090, 2091, 2092, 2093, 0, 0,
	0, 0, 0, 0, 2073, 0, 0, 0, 0, 2107,
	0, 0, 0, 0, 0, 0, 0, 0, 2089, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2090,
	2091, 2092, 2093, 0, 0, 2120, 0, 2106, 0, 2073,
	2107, 2116, 0, 0, 0, 0, 0, 0, 2095, 2097,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2112, 0, 2113, 0, 0, 2120, 0, 0, 0,
	2082, 2083, 2106, 0, 0, 0, 2116, 0, 0, 0,
	0, 0, 0, 2095, 2097, 0, 0, 0, 0, 0,
	2104, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2088, 2112, 2105, 2113, 0,
	0, 0, 0, 0, 0, 2082, 2083, 0, 0, 2079,
	2080, 2086, 2108, 2085, 2081, 0, 2078, 2076, 2077, 2069,
	2070, 2071, 2072, 2074, 2075, 2104, 0, 0, 0, 0,
	4783, 0, 0, 0, 0, 0, 0, 0, 2105, 0,
	2088, 0, 0, 0, 0, 2114, 0, 0, 0, 0,
	2079, 2080, 2086, 2108, 2085, 2081, 0, 2078, 2076, 2077,
	2069, 2070, 2071, 2072, 2074, 2075, 2103, 0, 0, 0,
	0, 4782, 0, 0, 0, 0, 0, 2118, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2114, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2103, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2118, 0, 0, 0, 2065, 2066, 0, 2098,
	2099, 2100, 2109, 2110, 2111, 0, 0, 2094, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2102,
	2096, 0, 0, 0, 0, 0, 0, 0, 2068, 0,
	0, 0, 0, 2089, 0, 0, 0, 2065, 2066, 2115,
	2098, 2099, 2100, 2109, 2110, 2111, 0, 0, 0, 0,
	0, 0, 2094, 0, 0, 0, 0, 2121, 0, 0,
	2102, 2096, 0, 0, 0, 2107, 2067, 0, 0, 2068,
	0, 0, 0, 0, 0, 0, 0, 2087, 2089, 0,
	2115, 0, 0, 0, 0, 0, 0, 2084, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2121, 0,
	0, 2120, 0, 0, 0, 0, 0, 2067, 0, 0,
	2107, 0, 0, 0, 0, 0, 0, 0, 2087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2084, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2120, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2090, 2091, 2092, 2093, 0, 0, 0, 0, 0, 0,
	2073, 0, 0, 2105, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2079, 2080, 2086, 2108, 2085,
	2081, 0, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074,
	2075, 2090, 2091, 2092, 2093, 0, 4360, 0, 0, 0,
	0, 2073, 0, 2106, 0, 0, 0, 2116, 2105, 0,
	0, 0, 0, 0, 2095, 2097, 0, 0, 0, 0,
	2079, 2080, 2086, 2108, 2085, 2081, 0, 2078, 2076, 2077,
	2069, 2070, 2071, 2072, 2074, 2075, 0, 2112, 0, 2113,
	0, 3769, 0, 0, 2106, 0, 2082, 2083, 2116, 0,
	0, 0, 0, 0, 0, 2095, 2097, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2104, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2112, 0,
	2113, 2088, 0, 0, 0, 0, 0, 2082, 2083, 0,
	0, 0, 2065, 2066, 0, 2098, 2099, 2100, 2109, 2110,
	2111, 0, 0, 0, 0, 0, 0, 2104, 0, 0,
	0, 0, 0, 0, 0, 2102, 2096, 0, 0, 0,
	0, 0, 2088, 0, 2068, 0, 0, 0, 0, 0,
	0, 2114, 0, 0, 0, 2115, 0, 2065, 2066, 0,
	2098, 2099, 2100, 2109, 2110, 2111, 0, 0, 0, 0,
	0, 0, 2103, 2121, 0, 0, 0, 0, 0, 0,
	2102, 2096, 2067, 2118, 0, 0, 0, 0, 0, 2068,
	0, 0, 2114, 2087, 0, 0, 0, 0, 0, 0,
	2115, 0, 0, 2084, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2103, 0, 0, 0, 0, 2121, 0,
	0, 0, 0, 0, 2118, 0, 0, 2067, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2087, 0,
	0, 0, 0, 2094, 0, 0, 0, 0, 2084, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2089,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2094, 0, 2090, 2091, 2092, 2093,
	0, 0, 0, 0, 0, 0, 2073, 0, 0, 0,
	0, 2107, 0, 0, 0, 0, 0, 0, 0, 0,
	2089, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2090, 2091, 2092, 2093, 0, 0, 2120, 0, 2106,
	0, 2073, 2107, 2116, 0, 0, 0, 0, 0, 0,
	2095, 2097, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2112, 0, 2113, 0, 0, 2120, 0,
	0, 0, 2082, 2083, 2106, 0, 0, 0, 2116, 0,
	0, 0, 0, 0, 0, 2095, 2097, 0, 0, 0,
	0, 0, 2104, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2088, 2112, 2105,
	2113, 0, 0, 0, 0, 0, 0, 2082, 2083, 0,
	0, 2079, 2080, 2086, 2108, 2085, 2081, 0, 2078, 2076,
	2077, 2069, 2070, 2071, 2072, 2074, 2075, 2104, 0, 0,
	0, 0, 3768, 0, 0, 0, 0, 0, 0, 0,
	2105, 0, 2088, 0, 0, 0, 0, 2114, 0, 0,
	0, 0, 2079, 2080, 2086, 2108, 2085, 2081, 0, 2078,
	2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 2103, 0,
	0, 0, 0, 3767, 0, 0, 0, 0, 0, 2118,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2114, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2103, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2118, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2094,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2089, 0, 0, 0, 2065,
	2066, 0, 2098, 2099, 2100, 2109, 2110, 2111, 0, 0,
	0, 0, 0, 2677, 2094, 0, 0, 0, 0, 0,
	0, 0, 2102, 2096, 0, 0, 0, 2107, 0, 0,
	0, 2068, 0, 0, 0, 0, 0, 0, 0, 0,
	2089, 0, 2115, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2121, 0, 0, 2120, 0, 0, 0, 0, 0, 2067,
	0, 0, 2107, 0, 0, 0, 0, 0, 0, 0,
	2087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2120, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2678, 0, 0, 0, 2105, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2079, 2080, 2086,
	2108, 2085, 2081, 0, 2078, 2076, 2077, 2069, 2070, 2071,
	2072, 2074, 2075, 2090, 2091, 2092, 2093, 0, 3766, 0,
	0, 0, 0, 2073, 0, 0, 0, 0, 0, 0,
	2105, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2079, 2080, 2086, 2108, 2085, 2081, 0, 2078,
	2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 0, 0,
	0, 3731, 0, 0, 0, 0, 2106, 0, 0, 0,
	2116, 0, 0, 0, 0, 0, 0, 2095, 2097, 0,
	2065, 2066, 0, 2098, 2099, 2100, 2109, 2110, 2111, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2112, 0, 2113, 2102, 2096, 0, 0, 0, 0, 2082,
	2083, 0, 2068, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2115, 0, 0, 0, 0, 0, 2104,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2121, 0, 0, 2088, 0, 0, 0, 0, 0,
	2067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2087, 0, 0, 0, 2577, 0, 0, 0, 0,
	0, 2084, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2114, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2103, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2118, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 2091, 2092, 2093, 0, 0,
	0, 0, 0, 0, 2073, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2094, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2106, 0, 0,
	0, 2116, 2089, 0, 0, 0, 0, 0, 2095, 2097,
	0, 0, 0, 2065, 2066, 0, 2098, 2099, 2100, 2109,
	2110, 2111, 0, 0, 0, 0, 0, 2679, 0, 0,
	0, 2112, 0, 2113, 2107, 0, 2102, 2096, 0, 0,
	2082, 2083, 0, 0, 0, 2068, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2115, 0, 0, 0,
	2104, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2120, 0, 0, 0, 2121, 2088, 0, 0, 0, 0,
	0, 0, 0, 2067, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2084, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2680, 0, 0, 0,
	0, 0, 0, 0, 0, 2114, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2103, 0, 0, 0,
	0, 0, 2105, 0, 0, 0, 0, 2118, 0, 0,
	0, 0, 0, 0, 2079, 2080, 2086, 2108, 2085, 2081,
	0, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075,
	0, 0, 0, 0, 0, 0, 0, 2090, 2091, 2092,
	2093, 0, 0, 0, 0, 0, 0, 2073, 5608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2576, 2094, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2106, 0, 0, 2089, 2116, 0, 0, 0, 0, 0,
	0, 2095, 2097, 0, 2065, 2066, 0, 2098, 2099, 2100,
	2109, 2110, 2111, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2112, 2107, 2113, 2102, 2096, 0,
	0, 0, 0, 2082, 2083, 0, 2068, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2115, 0, 0,
	0, 0, 0, 2104, 0, 0, 0, 0, 0, 0,
	0, 2120, 0, 0, 0, 2121, 0, 0, 2088, 0,
	0, 0, 2574, 0, 2067, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2084, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2114, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2103,
	0, 0, 0, 2105, 0, 0, 0, 0, 0, 0,
	2118, 0, 0, 0, 0, 2079, 2080, 2086, 2108, 2085,
	2081, 0, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074,
	2075, 0, 0, 5607, 0, 0, 0, 0, 2090, 2091,
	2092, 2093, 0, 0, 0, 0, 0, 0, 2073, 0,
	3834, 0, 0, 0, 0, 0, 0, 3833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2094, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2106, 0, 0, 0, 2116, 2089, 0, 0, 0,
	0, 0, 2095, 2097, 0, 0, 0, 2065, 2066, 0,
	2098, 2099, 2100, 2109, 2110, 2111, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2112, 0, 2113, 2107, 0,
	2102, 2096, 0, 0, 2082, 2083, 3701, 0, 0, 2068,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2115, 0, 0, 0, 2104, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2120, 0, 0, 0, 2121, 2088,
	0, 0, 0, 0, 0, 0, 0, 2067, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2084, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2114,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2103, 3702, 0, 0, 0, 0, 2105, 0, 0, 0,
	0, 2118, 0, 0, 0, 0, 0, 0, 2079, 2080,
	2086, 2108, 2085, 2081, 0, 2078, 2076, 2077, 2069, 2070,
	2071, 2072, 2074, 2075, 0, 0, 0, 0, 0, 0,
	0, 2090, 2091, 2092, 2093, 0, 0, 0, 0, 0,
	0, 2073, 2065, 2066, 0, 2098, 2099, 2100, 2109, 2110,
	2111, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2094, 0, 0, 0, 2102, 2096, 0, 0, 0,
	0, 0, 0, 0, 2068, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2106, 2115, 0, 2089, 2116, 0,
	0, 0, 0, 0, 0, 2095, 2097, 0, 0, 0,
	0, 0, 0, 2121, 0, 0, 0, 0, 0, 0,
	0, 0, 2067, 0, 0, 0, 0, 0, 2112, 2107,
	2113, 0, 0, 2087, 0, 0, 0, 2082, 2083, 0,
	0, 0, 0, 2084, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2104, 0, 0,
	0, 0, 0, 0, 0, 2120, 0, 0, 0, 0,
	0, 0, 2088, 0, 2065, 2066, 0, 2098, 2099, 2100,
	2109, 2110, 2111, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2102, 2096, 0,
	0, 0, 0, 0, 0, 0, 2068, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2115, 0, 0,
	0, 0, 2114, 0, 0, 0, 2090, 2091, 2092, 2093,
	0, 0, 0, 0, 0, 2121, 2073, 0, 5189, 0,
	0, 0, 0, 2103, 2067, 0, 0, 2105, 0, 0,
	0, 0, 0, 0, 2118, 2087, 0, 0, 0, 2079,
	2080, 2086, 2108, 2085, 2081, 2084, 2078, 2076, 2077, 2069,
	2070, 2071, 2072, 2074, 2075, 0, 0, 0, 0, 2106,
	0, 0, 0, 2116, 0, 0, 0, 0, 0, 0,
	2095, 2097, 0, 2065, 2066, 0, 2098, 2099, 2100, 2109,
	2110, 2111, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2112, 2094, 2113, 2102, 2096, 0, 0,
	0, 0, 2082, 2083, 0, 2068, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2115, 0, 0, 0,
	2089, 0, 2104, 0, 0, 0, 0, 0, 2090, 2091,
	2092, 2093, 0, 0, 2121, 0, 0, 2088, 2073, 0,
	0, 0, 0, 2067, 0, 0, 0, 0, 0, 0,
	0, 0, 2107, 0, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2084, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2106, 0, 0, 0, 2116, 0, 2114, 2120, 0,
	0, 0, 2095, 2097, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2103, 0,
	0, 0, 0, 0, 0, 2112, 0, 2113, 0, 2118,
	0, 0, 0, 0, 2082, 2083, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2104, 0, 0, 2090, 2091, 2092,
	2093, 0, 0, 0, 0, 0, 0, 2073, 0, 2088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2105, 0, 0, 0, 0, 0, 0, 0, 0, 2094,
	0, 0, 2079, 2080, 2086, 2108, 2085, 2081, 0, 2078,
	2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 0, 0,
	2106, 0, 0, 0, 2116, 2089, 0, 0, 0, 2114,
	0, 2095, 2097, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2103, 1256, 0, 0, 2112, 0, 2113, 2107, 0, 0,
	0, 2118, 0, 2082, 2083, 0, 0, 0, 2065, 2066,
	0, 2098, 2099, 2100, 2109, 2110, 2111, 0, 0, 0,
	0, 0, 0, 2104, 0, 0, 0, 0, 0, 0,
	0, 2102, 2096, 2120, 0, 0, 0, 0, 2088, 0,
	2068, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2115, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2094, 0, 0, 0, 0, 0, 0, 0, 2121,
	0, 0, 0, 0, 0, 0, 0, 0, 2067, 0,
	0, 0, 0, 0, 0, 0, 0, 2089, 2114, 2087,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2103,
	0, 0, 0, 0, 0, 2105, 0, 0, 0, 2107,
	2118, 0, 0, 0, 0, 0, 0, 2079, 2080, 2086,
	2108, 2085, 2081, 0, 2078, 2076, 2077, 2069, 2070, 2071,
	2072, 2074, 2075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2120, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2094, 0, 2090, 2091, 2092, 2093, 0, 0, 0, 0,
	0, 0, 2073, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2089, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2106, 0, 2105, 2107, 2116,
	0, 0, 0, 0, 0, 0, 2095, 2097, 0, 2079,
	2080, 2086, 2108, 2085, 2081, 0, 2078, 2076, 2077, 2069,
	2070, 2071, 2072, 2074, 2075, 0, 0, 0, 0, 2112,
	0, 2113, 0, 0, 2120, 0, 0, 0, 2082, 2083,
	0, 0, 0, 2065, 2066, 0, 2098, 2099, 2100, 2109,
	2110, 2111, 0, 4945, 0, 0, 0, 0, 2104, 0,
	0, 0, 0, 0, 0, 0, 2102, 2096, 0, 0,
	0, 0, 0, 2088, 0, 2068, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2115, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2121, 0, 0, 0, 0, 0,
	0, 0, 0, 2067, 0, 0, 2105, 0, 0, 0,
	0, 0, 0, 2114, 2087, 0, 0, 0, 2079, 2080,
	2086, 2108, 2085, 2081, 2084, 2078, 2076, 2077, 2069, 2070,
	2071, 2072, 2074, 2075, 2103, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2118, 0, 0, 0, 0,
	0, 0, 2065, 2066, 0, 2098, 2099, 2100, 2109, 2110,
	2111, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2102, 2096, 0, 0, 0,
	0, 0, 0, 0, 2068, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2094, 0, 2090, 2091, 2092,
	2093, 0, 0, 2121, 0, 0, 0, 2073, 0, 4600,
	0, 0, 2067, 0, 0, 0, 0, 0, 0, 0,
	0, 2089, 0, 2087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2084, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2106, 0, 0, 2107, 2116, 0, 0, 0, 0, 0,
	0, 2095, 2097, 0, 2065, 2066, 0, 2098, 2099, 2100,
	2109, 2110, 2111, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2112, 0, 2113, 2102, 2096, 2120,
	0, 0, 0, 2082, 2083, 0, 2068, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2115, 4601, 0,
	0, 0, 0, 2104, 0, 0, 2090, 2091, 2092, 2093,
	0, 0, 0, 0, 0, 2121, 2073, 0, 2088, 0,
	0, 0, 0, 0, 2067, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2084, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2106,
	0, 2105, 0, 2116, 0, 0, 0, 0, 2114, 0,
	2095, 2097, 0, 2079, 2080, 2086, 2108, 2085, 2081, 0,
	2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075, 2103,
	0, 0, 0, 2112, 0, 2113, 0, 0, 0, 0,
	2118, 0, 2082, 2083, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2104, 0, 0, 0, 0, 0, 2090, 2091,
	2092, 2093, 0, 0, 0, 0, 0, 2088, 2073, 0,
	0, 0, 0, 0, 0, 0, 0, 3840, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2094, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2106, 0, 0, 0, 2116, 2089, 2114, 0, 0,
	0, 0, 2095, 2097, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2103, 0,
	0, 0, 0, 0, 0, 2112, 0, 2113, 2107, 2118,
	0, 0, 0, 0, 2082, 2083, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2104, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2120, 0, 0, 0, 0, 2088,
	0, 0, 0, 2065, 2066, 0, 2098, 2099, 2100, 2109,
	2110, 2111, 0, 0, 0, 0, 0, 0, 0, 2094,
	0, 0, 0, 0, 0, 0, 2102, 2096, 0, 0,
	0, 3835, 0, 0, 0, 2068, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2089, 2115, 0, 0, 2114,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2121, 0, 0, 0, 0, 0,
	2103, 0, 0, 2067, 0, 0, 2105, 2107, 0, 0,
	0, 2118, 0, 0, 2087, 0, 0, 0, 2079, 2080,
	2086, 2108, 2085, 2081, 2084, 2078, 2076, 2077, 2069, 2070,
	2071, 2072, 2074, 2075, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2120, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2094, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2089, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2090, 2091, 2092,
	2093, 0, 0, 0, 0, 0, 0, 2073, 0, 0,
	0, 0, 0, 0, 0, 2105, 0, 0, 0, 2107,
	0, 0, 0, 0, 0, 0, 0, 2079, 2080, 2086,
	2108, 2085, 2081, 0, 2078, 2076, 2077, 2069, 2070, 2071,
	2072, 2074, 2075, 0, 0, 0, 0, 0, 0, 0,
	2106, 0, 0, 0, 2116, 2120, 0, 0, 0, 0,
	0, 2095, 2097, 0, 2065, 2066, 0, 2098, 2099, 2100,
	2109, 2110, 2111, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2112, 0, 2113, 2102, 2096, 0,
	0, 0, 3770, 2082, 2083, 0, 2068, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2115, 0, 0,
	0, 0, 0, 2104, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2121, 0, 0, 2088, 0,
	0, 0, 0, 0, 2067, 0, 0, 2105, 0, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 0, 2079,
	2080, 2086, 2108, 2085, 2081, 2084, 2078, 2076, 2077, 2069,
	2070, 2071, 2072, 2074, 2075, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2114, 0,
	0, 0, 0, 0, 2065, 2066, 0, 2098, 2099, 2100,
	2109, 2110, 2111, 0, 0, 0, 0, 0, 0, 2103,
	0, 0, 0, 0, 0, 0, 0, 2102, 2096, 0,
	2118, 0, 0, 0, 0, 0, 2068, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2090, 2091,
	2092, 2093, 0, 0, 0, 2121, 0, 0, 2073, 0,
	0, 0, 0, 0, 2067, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 0, 0,
	2094, 0, 0, 0, 0, 2084, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2106, 0, 0, 0, 2116, 2089, 0, 0, 0,
	0, 0, 2095, 2097, 0, 0, 0, 0, 0, 2065,
	2066, 0, 2098, 2099, 2100, 2109, 2110, 2111, 0, 0,
	0, 0, 0, 0, 0, 2112, 0, 2113, 2107, 0,
	0, 0, 2102, 2096, 2082, 2083, 0, 0, 0, 0,
	0, 2068, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2115, 0, 2104, 0, 0, 0, 2090, 2091,
	2092, 2093, 0, 0, 2120, 0, 0, 0, 2073, 2088,
	2121, 0, 0, 0, 0, 0, 0, 0, 0, 2067,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2106, 0, 0, 0, 2116, 0, 0, 0, 2114,
	0, 0, 2095, 2097, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2103, 0, 0, 0, 0, 2112, 2105, 2113, 0, 0,
	0, 2118, 0, 0, 2082, 2083, 0, 0, 2079, 2080,
	2086, 2108, 2085, 2081, 0, 2078, 2076, 2077, 2069, 2070,
	2071, 2072, 2074, 2075, 2104, 0, 0, 0, 0, 0,
	0, 0, 0, 2090, 2091, 2092, 2093, 0, 0, 2088,
	0, 0, 0, 2073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2094, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2106, 2089, 0, 2114,
	2116, 0, 0, 0, 0, 0, 0, 2095, 2097, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2103, 0, 0, 0, 0, 0, 0, 0, 0, 2107,
	2112, 2118, 2113, 0, 0, 0, 0, 0, 0, 2082,
	2083, 0, 3800, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2104,
	0, 0, 0, 0, 0, 2120, 0, 0, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2094, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2089, 0, 0,
	0, 0, 0, 0, 2114, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2103, 0, 2105, 0, 2107,
	0, 0, 0, 0, 0, 0, 2118, 0, 0, 2079,
	2080, 2086, 2108, 2085, 2081, 0, 2078, 2076, 2077, 2069,
	2070, 2071, 2072, 2074, 2075, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2120, 0, 0, 0, 0,
	0, 0, 0, 0, 2065, 2066, 0, 2098, 2099, 2100,
	2109, 2110, 2111, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2094, 2102, 2096, 0,
	0, 0, 0, 0, 0, 0, 2068, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2115, 0, 0,
	0, 0, 2089, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2121, 0, 0, 0, 0,
	0, 0, 0, 0, 2067, 0, 0, 2105, 0, 0,
	0, 0, 0, 0, 2107, 2087, 0, 0, 0, 2079,
	2080, 2086, 2108, 2085, 2081, 2084, 2078, 2076, 2077, 2069,
	2070, 2071, 2072, 2074, 2075, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2120, 0, 0, 0, 0, 0, 0, 0, 0, 2065,
	2066, 0, 2098, 2099, 2100, 2109, 2110, 2111, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2102, 2096, 0, 0, 0, 0, 0, 0,
	0, 2068, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2115, 0, 0, 0, 0, 0, 2090, 2091,
	2092, 2093, 0, 0, 0, 0, 0, 0, 2073, 0,
	2121, 0, 0, 0, 0, 2787, 0, 0, 0, 2067,
	0, 0, 2105, 0, 0, 0, 0, 0, 0, 0,
	2087, 0, 0, 0, 2079, 2080, 2086, 2108, 2085, 2081,
	2084, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075,
	0, 2106, 0, 0, 0, 2116, 0, 0, 0, 0,
	0, 0, 2095, 2097, 0, 0, 0, 0, 0, 2065,
	2066, 0, 2098, 2099, 2100, 2109, 2110, 2111, 0, 0,
	0, 0, 0, 0, 0, 2112, 0, 2113, 0, 0,
	0, 0, 0, 2096, 2082, 2083, 0, 0, 0, 0,
	0, 2068, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2115, 0, 2104, 0, 0, 0, 0, 0,
	0, 0, 0, 2090, 2091, 2092, 2093, 0, 0, 2088,
	2121, 0, 0, 2073, 0, 0, 0, 0, 0, 2067,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2106, 0, 0, 2114,
	2116, 0, 0, 0, 0, 0, 0, 2095, 2097, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2103, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2112, 2118, 2113, 0, 0, 0, 0, 0, 0, 2082,
	2083, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2104,
	0, 0, 0, 2090, 2091, 2092, 2093, 0, 0, 0,
	0, 0, 0, 2073, 2088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2094, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2106, 2089, 0, 0,
	2116, 0, 0, 0, 2114, 0, 0, 2095, 2097, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2107,
	2112, 0, 2113, 0, 0, 0, 2118, 0, 0, 2082,
	2083, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2104,
	0, 0, 0, 0, 0, 2120, 0, 0, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2094, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2089, 0, 2114, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2105, 0, 939,
	0, 994, 0, 0, 2107, 0, 2118, 0, 0, 2079,
	2080, 2086, 2108, 2085, 2081, 0, 2078, 2076, 2077, 2069,
	2070, 2071, 2072, 2074, 2075, 0, 947, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2120, 0, 0, 0, 964, 0, 945, 944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2094, 0, 0, 0,
	966, 0, 0, 0, 0, 0, 946, 0, 0, 0,
	0, 949, 0, 0, 960, 0, 1006, 0, 977, 0,
	0, 0, 2089, 0, 0, 0, 0, 961, 962, 0,
	0, 0, 0, 0, 0, 0, 0, 982, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2105, 0, 2107, 995, 951, 0, 0, 0,
	0, 0, 952, 0, 2079, 2080, 2086, 2108, 2085, 2081,
	0, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075,
	0, 0, 0, 0, 0, 0, 0, 953, 0, 0,
	2120, 0, 0, 0, 0, 0, 992, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 993, 0, 973, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 955, 0,
	0, 0, 0, 0, 0, 0, 0, 943, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2105, 0, 0, 0, 0, 0, 957, 958,
	0, 0, 0, 0, 2079, 2080, 2086, 2108, 2085, 2081,
	0, 2078, 2076, 2077, 2069, 2070, 2071, 2072, 2074, 2075,
	0, 0, 0, 967, 965, 0, 0, 0, 0, 0,
	0, 959, 0, 0, 0, 0, 978, 0, 0, 1000,
	999, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1003, 991, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 939, 0, 994,
	0, 0, 0, 0, 0, 0, 0, 0, 996, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 947, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 964, 0, 945, 944, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 966, 0,
	950, 0, 0, 1005, 946, 0, 0, 0, 0, 949,
	0, 0, 0, 0, 1006, 0, 977, 0, 0, 0,
	0, 0, 0, 0, 0, 961, 962, 948, 0, 0,
	0, 0, 986, 987, 0, 982, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 989, 0, 0, 0,
	0, 0, 0, 995, 951, 0, 0, 0, 0, 0,
	952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 997, 984, 0, 0, 0, 0,
	0, 0, 0, 1004, 979, 953, 0, 970, 968, 0,
	0, 0, 974, 0, 992, 0, 0, 0, 0, 0,
	975, 0, 0, 941, 0, 998, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	993, 942, 973, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 990, 0, 0, 988, 955, 976, 956, 0,
	0, 0, 0, 972, 0, 943, 0, 0, 938, 0,
	0, 0, 0, 0, 1002, 0, 0, 0, 0, 0,
	0, 0, 980, 0, 981, 0, 957, 958, 0, 0,
	0, 0, 0, 954, 1001, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 983,
	0, 967, 965, 0, 0, 0, 0, 0, 0, 959,
	0, 0, 0, 0, 978, 0, 0, 1000, 999, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	985, 0, 0, 1003, 991, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 996, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 950, 0,
	0, 1005, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 948, 0, 0, 0, 0,
	986, 987, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 989, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 997, 984, 0, 0, 0, 0, 0, 0,
	0, 1004, 979, 0, 0, 970, 968, 0, 0, 0,
	974, 0, 0, 0, 0, 0, 0, 0, 975, 0,
	0, 941, 0, 998, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 942,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	990, 0, 0, 988, 0, 976, 956, 0, 0, 0,
	0, 972, 0, 0, 0, 0, 938, 0, 0, 0,
	0, 0, 1002, 0, 0, 0, 0, 0, 0, 0,
	980, 0, 981, 0, 0, 0, 0, 0, 0, 0,
	0, 954, 1001, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 985,
}

var sqlPact = [...]int32{
	16133, -1000, -1000, -1000, -1000, -1000, -1000, 246, -1000, -1000,
	244, 242, 241, 240, 239, 238, 236, 234, 233, 229,
	227, -1000, -1000, 225, 224, 221, 220, -1000, -1000, 219,
	214, 212, -1000, 211, -1000, -1000, 210, -1000, 207, 206,
	205, -1000, -1000, 201, -1000, 199, -1000, -1000, -1000, -1000,
	196, 195, 192, 108696, 108074, 109316, 2650, 142860, 121734, 2491,
	114280, 142238, 113658, 141616, 2492, 12174, 140994, 3143, 190, -1000,
	140372, 185, 183, 182, -1000, 121112, 139750, 118626, 118004, 2135,
	84990, 164217, 1880, 1879, -1000, 181, 179, -1000, 11436, 81888,
	178, 177, 175, 172, 3154, 170, -1000, 165, 164, -1000,
	163, 160, 159, -1000, 12666, 1700, -1000, 158, 157, 156,
	152, -1000, 376, 117382, 149, 148, 147, 3016, 146, 145,
	78776, 144, 142, 141, 2730, 3250, -1000, -1000, 2430, -1000,
	-1000, 140, 139, 138, 137, 135, 134, 133, 132, 130,
	128, 127, 123, 122, 115, -1000, 110, 109, 108, 106,
	105, 104, -1000, 102, 101, 96, -1000, 95, -1000, 94,
	91, 90, 89, 88, 87, 86, 83, 82, 81, 80,
	79, 78, 77, 74, 72, -1000, -1000, 65, -1000, 2198,
	1878, 1877, 1857, 1056, 63, 59, 57, 55, 52, 51,
	50, 49, 48, 47, 46, 45, 44, 41, 40, 39,
	36, 35, 34, 33, 32, 30, 29, 187, 28, 27,
	26, 25, 18, 16, 13, 12, 3575, 4031, -1000, 1981,
	1265, 1339, 35576, 3396, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 152160, 143480, 11, -75, 10, -1000, 3764,
	1042, 64963, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 302, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 507, 2668, 790, -1000,
	-1000, -1000, 139128, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2646, -16, 114900, -1000, 2362, -1000, -1000, -1000, -1000,
	-1000, 789, -1000, 2644, 2570, 382, 2569, 114900, -1000, -1000,
	-1000, 3890, 3791, 107452, 2822, 4319, 4314, 4308, 4306, 4305,
	151540, 2122, 2893, 4303, 4300, 4299, 4298, 4297, 4293, 4292,
	-1000, 106830, 1174, 106208, 105586, 3898, 138508, 104964, 137886, 137264,
	154646, 54782, 1220, 3889, -1000, -1000, -1000, -1000, -1000, -1000,
	143480, -1000, 1173, -1000, -1000, 4291, 2352, 788, 120490, -1000,
	-1000, 136642, 1994, -1000, -1000, -1000, 982, 1299, 38124, 38124,
	38124, 301, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3901,
	-1000, -1000, -1000, -1000, 143480, 3083, 3083, 1534, 1539, 1539,
	3083, 3083, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	4290, 4288, 4287, 4286, 4283, -1000, -1000, -1000, 136020, -1000,
	-1000, 3868, 1805, 4089, 3104, 91286, 2378, 1564, 3845, 3498,
	3494, 1673, 2358, 3488, 4282, 2988, 3178, 3487, 3483, 3482,
	1379, 3469, 3468, 1881, 2939, 557, 2932, 34939, 3381, 2100,
	54145, 1715, 1640, 3462, 3452, 3439, 4104, 3960, 2340, 2349,
	2364, 2336, 94398, 4281, 4279, 3800, 3436, 3434, 3187, 3426,
	2270, -1000, 3352, 1718, 296, -1000, -1000, -1000, -1000, -1000,
	-1000, 296, 1606, -1000, -1000, -1000, -1000, 1527, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 96264, 27743, 95642, 95020, 104342,
	135398, 53508, 103720, 103098, 90654, 4278, 4277, 52871, 62423, 4030,
	134776, 154024, 4029, 4028, 1171, 2348, 1623, -1000, -1000, -1000,
	-1000, -1000, -1000, -8, 84370, 4085, 143480, -1000, 295, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 52234, 964, 51597, 1079,
	50960, 688, 134154, -1000, -1000, -1000, -1000, -1000, -1000, 90022,
	3789, -1000, 133532, 132910, 1733, 2821, 4273, 4272, 1278, 4267,
	3752, 2116, 4266, 4262, 4261, 4260, 4259, 4258, 4257, 1711,
	132288, 3060, 131666, 1988, 153402, 2239, 1168, 102476, 109316, 2976,
	131044, 1698, 1695, -1000, -1000, -1000, -1000, 3407, 3242, 3227,
	1214, -1000, -1000, -1000, -1000, -1000, -1000, 68747, 9619, 7011,
	-1000, -1000, 12355, 164545, 130422, 71267, 109316, 109316, -1000, -1000,
	-1000, -1000, -1000, -1000, 50323, 698, 49686, 1210, 129800, -1000,
	-1000, 69377, 3351, 1206, -1000, -1000, -1000, -1000, -1000, 129178,
	49049, 377, 48412, 1169, 143480, -1000, 3393, 2136, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 96884,
	-1000, -1000, 1527, -1000, -1000, -1000, 1488, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1981, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2496, -1000, 2395, -1000,
	-1000, -1000, 2873, 3734, 3734, 3734, 3884, 493, 491, -1000,
	187, 935, 1262, -1000, -1000, 163583, -1000, -1000, 55419, 55419,
	55419, 55419, 55419, 55419, 55419, 55419, 2502, -1000, 787, -1000,
	-1000, 831, -1000, 786, 724, 652, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 785, -1000, -1000, -1000, -1000, -1000, -1000,
	4071, -1000, 30980, -1000, -1000, -1000, 385, 784, 55419, -1000,
	-1000, 4138, 4131, 1071, -1000, 289, 1028, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3391, 782, 780, -1000, 779, 775, 774, 765, 763,
	-1000, 762, -1000, 761, 760, 759, 756, 750, 749, 747,
	745, -1000, 2391, -1000, -1000, -1000, -1000, -1000, -1000, 707,
	700, 700, 700, -1000, 1149, 697, 744, -1000, 409, 695,
	394, 692, 690, 684, -1000, 743, 742, 741, 739, 738,
	734, 731, 730, 729, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1154, -1000, -1000, -1000, -1000, 1381, -12, 143480, -1000,
	639, -12, -1000, -1000, 727, -1000, 39416, 39416, 39416, -1000,
	-1000, 2643, 55419, -1000, 2888, -1000, -3, -3, 957, 66853,
	-1000, 63685, 957, 699, 838, 72519, -1000, 3349, -1000, -1000,
	726, 288, -1000, -1000, -1000, -1000, 28373, 3347, 143480, 143480,
	143480, 109316, 109316, 109316, 143480, 4251, 4250, 3620, 55419, -1000,
	-1000, 81266, 156506, 116760, 1485, -10, -1000, -1000, 4006, 86226,
	80646, 3387, 156506, 3384, 3344, 155890, 89390, 272, 3595, -1000,
	-1000, 725, 4248, -1000, -1000, -1000, -1000, -1000, 3585, 4245,
	4244, 4243, 143480, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2618, 3583, -1000, -11, -1000, 113036, 2618, 3582, -1000, -11,
	2618, 3580, -1000, -11, 112416, -1000, -1000, 2618, 3576, -1000,
	-1000, 270, 3571, -1000, -1000, -1000, 3569, -1000, 269, 3567,
	-1000, -1000, 286, -69, 3566, -1000, -1000, -1000, -1000, -1000,
	-1000, 163583, -1000, -1000, -1000, 155268, -1000, 3812, -1000, 143480,
	-1000, 55419, -1000, -1000, 4005, 1985, 3790, 3925, -1000, -1000,
	-25, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2868, 2874,
	1246, 2697, -1000, 3641, 2007, 38124, 3739, -1000, -1000, -1000,
	-1000, -1000, 285, 28373, 3225, -1000, -1000, 143480, -1000, 143480,
	3083, 3083, -1000, -1000, -1000, 4095, 4093, 3083, 3083, 143480,
	143480, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1683, 2925, -1000, -1000, -1000, 69377, 3342, 1491, 91916, 91916,
	91916, 91916, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 128556, -1000, -1000, 2387, 1861, 3797, 2382,
	109316, -1000, 2140, -1000, -1000, -1000, 3824, 3559, 143480, -1000,
	-1000, 3383, -1000, 83750, 3383, 111796, -1000, 111176, -1000, 110556,
	-1000, -1000, 109316, -1000, 109316, -1000, 4239, 4238, 4237, -1000,
	-1000, 4236, -1000, 4235, 3817, -1000, 2125, 1108, 47775, 163583,
	3816, -1000, 4234, 2325, 3381, 163583, -1000, 3555, 1873, 1860,
	143480, -1000, -1000, 143480, -1000, 143480, -1000, 143480, -1000, -1000,
	-1000, 2664, 1776, -1000, -1000, 2855, -1000, -1000, -1000, 1086,
	-1000, -1000, 109316, 109316, 109316, 109316, 3338, 3025, 109316, 1872,
	-1000, 47138, 3776, -1000, -1000, 3405, 4233, 2034, -1000, 2107,
	-1000, 3336, 3773, -1000, 3335, 1643, 2120, 284, 4144, 284,
	-1000, -1000, -1000, -25, -1000, 3133, 3563, 1463, -1000, 2696,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2275, 3561, -1000,
	2713, 3558, 2268, -1000, -1000, 6922, -1000, 2630, -1000, 160419,
	1508, -1000, -1000, -1000, -1000, 2235, 3557, -1, -1000, -1000,
	2678, -1000, 4086, 3257, -1000, -1000, -1000, 160178, -1000, 1930,
	-1000, -1000, 2404, 2307, -1000, 1438, 3556, -1000, 3093, 3093,
	101854, 3427, 70637, 69377, 84370, -24, -1000, -1000, -1000, -1000,
	-1000, -86, -1000, 27105, 163583, -1000, -1000, -1000, -1000, 163583,
	994, -1000, -1000, 3552, -1000, 163583, 959, -1000, -1000, 3545,
	-1000, 2938, -1000, 3378, -1000, -1000, -1000, 2769, 88758, 3332,
	-1000, 2768, 1083, -1000, 101234, 2345, 4232, -1000, 4231, -1000,
	-1000, 4230, -1000, 4229, 4228, 4227, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 100612, 2642, -1000, -1000, 1582, 1030, 91916,
	-1000, 2767, 3924, -1000, 99990, 1163, -1000, 1062, 2766, -1000,
	1686, 109936, 1117, 2764, -1000, 4226, 3897, 3027, 1062, 2760,
	-1000, -1000, -1000, -1000, -1000, 1098, -1000, 73139, -1000, 73139,
	-1000, 1902, -1000, 150920, -3, 109316, 4071, -1000, -48, -1000,
	-1000, -1000, 1042, -1000, 68114, -1000, 68114, 119868, 91916, 1030,
	3330, 78144, 163158, -1000, 1080, -1000, -1000, 163583, -1000, -1000,
	-1000, 2936, -1000, -169, 3090, -1000, 91916, 69377, 3328, 2934,
	-1000, 163583, -1000, -1000, -1000, -1000, 163583, -1000, -1000, -1000,
	91916, 1582, -1000, 127936, 99368, 273, -1000, -1000, 150300, -1000,
	2873, -1000, 143480, -1000, 2877, 3370, 3377, 1948, 2663, 2983,
	-1000, 46501, 2943, 59241, 2692, 187, -1000, -1000, 187, 187,
	36850, -1000, -1000, 38124, 935, 86226, 86226, 28373, 1566, 55419,
	55419, 55419, 55419, 55419, 55419, 55419, 55419, 55419, 55419, 55419,
	55419, 55419, 55419, 55419, 55419, 55419, 55419, 55419, 55419, 55419,
	55419, 55419, 55419, 55419, 55419, 55419, 55419, 55419, 55419, 55419,
	55419, 55419, 55419, 55419, 55419, 2480, 55419, 1482, 55419, 55419,
	55419, 55419, 2360, -1000, -1000, 2263, 559, 2298, 724, -1000,
	-1000, -1000, 4059, 4059, 4059, 1363, 1363, 1363, 163828, 163828,
	551, 4224, 831, -1000, 55419, -1000, 117, 67473, 55419, 29005,
	-1000, 491, 14094, 2870, -1000, 485, 29672, -1000, -1000, -1000,
	30980, 652, 45834, 55419, 1074, 163583, -1000, -1000, 1516, 4090,
	26467, 3374, 3172, 723, 956, 932, 34272, 33605, 32938, 32271,
	922, 914, 55419, 55419, 55419, 55419, 55419, 55419, 55419, 55419,
	-1000, -1000, 4092, -1000, 4090, -1000, -1000, 718, -1000, 4090,
	4090, -1000, 4090, 1563, 1502, 4090, -1000, 4090, 4090, 8748,
	8748, 45197, 44560, 43923, 59878, 43286, 55419, 31634, 42649, 42012,
	-1000, 61789, 143480, -12, 4004, 143480, 55419, 366, -1000, 13432,
	-1000, 366, 366, 717, -56, 163583, 2923, 2923, 65593, 2665,
	2530, 2530, 2530, -1000, 957, 20686, 957, 126074, 2544, 957,
	957, 283, 300, 474, 63055, 2888, 125454, 813, 716, 9,
	8, 7, -1000, -1000, 6, 5, -1000, -1000, 109316, 715,
	29005, 28373, 282, 2302, -62, 2954, 2952, 2950, 2947, -1000,
	2946, 2638, -1000, -1000, -1000, 2149, -63, 1479, 109316, 143480,
	2045, -1000, -1000, -1000, -1000, 84370, -13, 84370, 143480, 3775,
	109316, -64, -1000, 156506, 5923, -70, -1000, 1450, 281, 4090,
	-1000, -1000, -1000, 4220, 4219, -1000, 457, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 707, 700, 700, 700, -1000,
	1149, 697, 409, 695, 394, 692, 690, 684, -1000, -1000,
	-1000, -1000, -1000, 3327, 109316, 143480, 2008, 83130, 116140, -69,
	116760, 156506, -38, -1000, -1000, -1000, -1000, 109316, -1000, -1000,
	109316, -1000, 75633, -1000, 143480, -1000, -1000, -1000, 4215, -1000,
	109316, 109316, 2618, 3541, -1000, 109316, -1000, 109316, 268, 3540,
	-1000, -1000, 143480, -1000, 109316, 109316, 143480, -1000, 143480, 143480,
	143480, 156506, 156506, 266, -1000, 109316, 935, -80, 1285, -25,
	-1000, -1000, -1000, -1000, 1527, -1000, 2077, -1000, -1000, -1000,
	-1000, -1000, -1000, 1719, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1071, -1000, -1000, -1000, -1000, 4078, 4076, -23,
	-1000, -1000, 28373, -1000, 2266, -1000, -1000, -1000, -1000, 143480,
	143480, -1000, -1000, 143480, 143480, -1000, -1000, 109316, 3375, -1000,
	-1000, 91916, 69377, -1000, 127314, 1030, 1030, 1030, 1030, -1000,
	-1000, -1000, -1000, 4214, 4213, 4212, 4209, -1000, -1000, 1072,
	109316, 143480, 109316, -1000, 3056, 1832, -1000, 279, -1000, 156506,
	-1000, 156506, 143480, 109316, -1000, -1000, 1072, 143480, 1072, 143480,
	1072, 143480, 1072, 1072, -1000, -1000, -1000, -1000, -1000, 117,
	117, 55419, -1000, -1000, 163583, -1000, 55419, -1000, -1000, 1774,
	4208, 1911, -1000, 3373, -1000, 3372, -1000, 43, 277, -1000,
	-1000, 4091, 2214, -1000, 4130, -1000, -1000, -1000, -1000, -1000,
	-1000, 109316, 3325, -1000, -1000, -1000, -1000, 4206, 3761, 163583,
	-1000, 88126, 2175, -1000, -1000, -1000, -1000, 109316, 109316, 109316,
	109316, 143480, 3663, -1000, 143480, 3656, 3660, 109316, -1000, 4140,
	-1000, -26, 1834, 629, 1466, -1000, 98746, 2806, 3803, 4205,
	3023, 3759, 1900, -1000, 1772, 682, -1000, 3899, 96884, 3945,
	3965, 1428, -1000, 3324, -1000, -1000, -1000, 981, 1973, 2092,
	1465, 1461, 96884, 2713, -1000, 86226, -1000, 3010, 3881, 1539,
	1532, 1539, 1539, 1584, 1565, -1000, 96884, 2087, 1439, 1432,
	5595, 1415, 2082, 1414, 3626, -1000, -1000, 2633, 2724, -1000,
	-1000, -1000, -1000, 1924, 3097, -1000, 2875, 1515, 1515, 143480,
	-1000, 1413, -1000, -1000, 1869, 1865, -1000, -1000, 126694, 2009,
	-1000, 1396, 1394, 144720, 4027, 2496, 2546, 856, 2314, -1000,
	1504, 1388, 3323, -1000, -1000, -28, 3944, 3957, 1428, -1000,
	-1000, 3320, 1386, -1000, 1121, -1000, -1000, -1000, 3879, 109316,
	28373, 1753, 1752, 1743, 2070, 1378, -14, -1000, 3933, 1894,
	-1000, 3979, 91916, -1000, 2788, 1798, -1000, 1582, 1582, 122354,
	143480, -1000, -1000, -1000, 3841, 3833, -1000, -1000, 1375, 1374,
	-1000, 1096, 8742, 3658, -1000, 156506, 1096, 1096, 2261, 3539,
	3055, 1771, -1000, 3087, 938, 3085, -1000, -1000, 938, -24,
	84370, 143480, 267, -1000, 55419, 117, 55419, 117, -1000, 3916,
	3536, 4003, -1000, 2226, 3534, 4204, 680, -1000, -1000, 2886,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 679, 2759, 3313,
	143480, 256, -1000, 109316, -1000, 4002, -1000, 3532, 156506, 2713,
	2758, -1000, 98126, -1000, 3531, 2269, 507, 2757, -1000, 696,
	4203, 3529, -1000, 149680, -1000, 3812, 1573, 3528, 1224, 884,
	3998, -1000, 884, 76264, -1000, 143480, -1000, -3, 619, 93156,
	-88, -90, 473, -1000, 143480, 143480, 3721, 2332, 2326, -1000,
	1055, 69377, -1000, 69377, -91, -1000, -169, 3082, 69377, -1000,
	1030, -104, 938, -1000, 938, -1000, -1000, 96884, -1000, 2877,
	3370, -1000, -1000, -1000, -1000, -1000, -1000, 1646, 2577, -1000,
	2918, -1000, 1835, -1000, -1000, -1000, 163583, 60515, -1000, -1000,
	163583, 2147, -1000, 58604, 57967, -1000, -1000, 1958, 109316, 2974,
	-1000, 2974, -68, -1000, 161146, 2914, 109316, -23, 38124, -1000,
	-1000, -1000, -1000, -1000, 980, 719, 719, 1475, 1475, 1475,
	1475, 3918, 7352, 777, 5808, 581, 581, 5927, 5927, 5927,
	5927, 5927, 581, 3367, 1363, 1363, 3367, 3367, 3367, 3367,
	3367, 1363, 1363, 1363, 581, 581, 581, 1363, 163828, 163708,
	11238, 55419, 55419, 1373, 2233, 559, 11102, 55419, 12152, 12152,
	12152, 12152, -1000, 2367, -1000, -1000, -1000, -1000, 3312, 678,
	59878, 59878, -1000, -1000, -1000, -1000, 30326, 55419, -1000, -1000,
	-1000, -1000, 41345, -1000, -1000, 159746, -341, 472, -1000, 260,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 469, -61, 119, -1000, 55419, 55419, 55419,
	465, -1000, 258, 55419, 143480, -1000, 19601, 810, -125, -1000,
	-96, 1613, -1000, 55419, -1000, -1000, 1372, -1000, 1369, 1367,
	1366, -1000, 677, 460, -1000, 257, -1000, 2508, 667, 666,
	55419, -1000, -1000, -1000, -1000, -1000, 159701, -1000, -1000, 159426,
	-1000, -1000, 159385, -1000, -1000, 158994, -1000, -1000, -1000, -1000,
	-1000, 162913, 19294, 18804, 18134, 11868, 18062, 17089, -98, 458,
	-99, 4090, 454, 450, 446, 979, 978, 444, 429, 427,
	-111, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -113, 423, -1000, 3311, -61, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 419, -1000, 417, -1000,
	163033, -61, 415, 6481, -1000, 59878, 59878, 59878, 59878, 413,
	-1000, 160903, -1000, 162672, 40708, 40708, 40708, 410, 162363, 55419,
	-61, -118, -1000, -119, -1000, -1000, -1000, -1000, 615, -128,
	-1000, -135, 1089, 39416, 64331, 28373, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1089, 1089,
	55419, -1000, 55419, 2929, -1000, -1000, -1000, -1000, 2927, 2284,
	2923, 65593, -1000, -1000, -1000, -1000, 126074, -1000, 4071, 3117,
	-1000, 126074, -1000, -1000, 143480, 639, -1000, 126074, 126074, 28373,
	957, -1000, -1000, 143480, 638, 957, 126074, 827, -1000, -1000,
	-1000, -1000, -1000, 407, 75013, 119, 255, 28373, 1062, -1000,
	-1000, 3072, 3072, 3072, 3072, 3072, 109316, -1000, -1000, 156506,
	1365, -19, -65, 3078, 3077, 3073, -24, 84370, -24, -86,
	143480, -17, 4035, -274, -1000, 2407, -1000, 86226, -1000, 826,
	1239, 28373, -1000, -1000, -1000, -1000, 4090, 156506, 3310, 337,
	3067, 3065, 3064, -1000, 2629, 114900, 334, -69, 156506, -1000,
	272, -137, -1000, -1000, 85610, 80016, -1000, 2517, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 4202, -1000, 2618, -1000, -1000,
	109316, 2618, 2618, -1000, 109316, 109316, 2618, -1000, 270, -1000,
	-1000, 269, -1000, -1000, -69, -1000, 1077, 38124, -1000, 1527,
	-1000, -1000, 1755, -1000, 2335, -1000, 1326, -1000, -1000, 38124,
	-1000, 3725, -1000, 1959, -1000, -1000, -1000, -1000, 1030, 1589,
	3061, 1030, -114, 664, -1000, 920, 919, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -4,
	-1000, 2068, 2167, 156506, 143480, -69, -69, -37, -1000, -1000,
	253, -19, -1000, 1072, -1000, 1072, -1000, 1072, -1000, -1000,
	-1000, -1000, 163583, 163583, -1000, -1000, -1000, 1907, 1884, 143480,
	-1000, 143480, 3369, -1000, 143480, -1000, -1000, 109316, -1000, 4201,
	-1000, -1000, 28373, 143480, 109316, 28373, 109316, 3366, 3363, -1000,
	-1000, -1000, 143480, -1000, -1000, 143480, -1000, -1000, 4024, 143480,
	143480, 109316, -1000, 123594, 143480, -1000, 2532, 156506, -1000, 2756,
	149060, 2737, 148440, 86226, -1000, -1000, 662, 1010, 2913, 2911,
	1219, 143480, 143480, 2909, 147820, 147200, -1000, 4200, 143480, 2411,
	55419, 123594, 3877, 2516, 2916, 117, 117, -1000, 117, -1000,
	-1000, 661, 1350, 109316, 109316, 143480, 156506, 109316, 2246, -1000,
	-1000, -1000, -1000, -1000, 97504, -1000, -1000, 1539, -1000, -1000,
	-1000, 1539, -1000, 1539, 2713, 2133, 143480, 156506, 109316, -1000,
	-1000, -1000, -1000, 143480, 143480, 156506, 2628, 2719, 2626, 3096,
	-1000, -1000, -1000, -1000, -1000, -1000, 156506, 146580, 2309, 145960,
	2297, 2293, -1000, -1000, -1000, 2282, 2292, 2528, 2066, 143480,
	-1000, -1000, -1000, -1000, -1000, 1553, -1000, 856, 1364, 3300,
	55419, 55419, 2425, 117, 117, -1000, 117, 656, 28373, -1000,
	1392, -1000, 3334, 143480, 4129, 145340, 4128, 143480, 143480, 143480,
	156506, 3737, 143480, -20, -1000, 2094, -1000, 3979, -1000, 918,
	-1000, -104, -21, -114, -86, 2352, 143480, 156506, -1000, 144720,
	8742, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2415, 3081,
	1231, 143480, 1438, -1000, -1000, 2063, 1362, 1361, 96884, 2398,
	2062, 2166, 69377, 1058, 69377, 3033, -1000, -1000, 25829, 163583,
	-1000, 163583, -1000, 82508, 91916, 91916, 2690, 143480, -1000, 76894,
	143480, 93776, 1021, 3523, 73761, -86, 1030, 1582, 3416, 1919,
	143480, -1000, -1000, 2713, 3519, 507, 2755, -1000, 156506, 1159,
	3997, 3517, 655, 4198, 4195, -1000, 109316, 2616, 2754, -1000,
	-1000, 144100, 3508, 856, 143480, 1089, 65593, 2271, -1000, 71899,
	1185, 143480, 2187, 294, -1000, -1000, -1000, 23, 143480, -1000,
	833, -1000, -1000, 619, 619, 1030, 70007, -150, -1000, 252,
	653, 917, 909, -1000, 5737, -1000, -169, -1000, 91916, 1055,
	69377, -169, 3059, 3294, -1000, -1000, 1073, -1000, -1000, -1000,
	-1000, 1244, -1000, 2147, 2574, -1000, 652, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2836, -1000, -1000, 36850,
	963, -1000, -1000, 109316, -5, -23, 55419, 55419, 10990, 9824,
	55419, 59878, 59878, -1000, 55419, 9724, -1000, -1000, -1000, -1000,
	-1000, 3289, 651, 55419, 86226, 7158, 6303, -1000, 406, 16848,
	3367, -1000, 55419, -1000, 1322, -1000, 405, 40071, -1000, 161453,
	22, -151, -1000, 21339, -61, -152, -1000, -1000, 825, -1000,
	3501, -1000, 55419, 162241, 2810, 2328, 2143, 1952, 4090, 4127,
	25191, -1000, 77524, 1107, 2550, 158949, -1000, -1000, -1000, -1000,
	86226, 86226, 55419, 55419, -1000, 55419, 55419, 55419, -1000, -1000,
	-1000, 4090, 404, -1000, -1000, 966, -1000, -1000, -1000, 966,
	-1000, -1000, 1539, -1000, 1539, -1000, 55419, -1000, -1000, 3259,
	55419, -1000, 86226, 86226, 59878, 59878, 59878, 59878, 59878, 59878,
	59878, 59878, 59878, 59878, 59878, 59878, 59878, 59878, 59878, 59878,
	59878, 59878, 59878, 59878, 2890, 59878, 4057, 4057, 4057, 711,
	-1000, 3362, 3259, 55419, 55419, 86226, 402, 400, 399, -1000,
	55419, -61, -1000, -1000, 9934, 650, -1000, 2828, -1000, 143480,
	-1000, 3170, -1000, 55419, -1000, -140, -1000, 2888, -1000, -1000,
	3170, 3170, -153, 163583, 65593, 65593, -1000, 642, 55419, 2924,
	-1000, -1000, 803, -338, -1000, 907, -1000, -1000, -1000, -1000,
	-1000, -1000, 903, -1000, 639, -1000, -1000, -1000, 249, 126074,
	638, -1000, 143480, 126074, 802, -1000, -158, -1000, -1000, -159,
	-1000, 125454, 397, 28373, -1000, 1089, 3045, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2945, -274, 156506, 156506, 2058, 2057,
	2048, -24, -86, 2568, -1000, 3183, 4125, -1000, 4088, 821,
	799, 216, 396, -69, 156506, 156506, 2042, 2040, 2024, 79396,
	3249, 156506, -1000, -1000, -1000, 76894, 86226, -1000, 86226, -1000,
	-1000, -1000, -1000, 2618, -1000, -1000, -1000, 268, -1000, -1000,
	-1000, -1000, 3015, -1000, -25, -1000, -1000, -1000, 55419, -1000,
	1044, -1000, -1000, 109316, 69377, -1000, 122354, 122354, 91916, 91916,
	24553, 143480, 3056, -69, -1000, 86856, -1000, -1000, -1000, -1000,
	-1000, 1072, -1000, 4124, -86, -1000, -1000, -1000, -1000, -1000,
	2434, 2684, 2434, 2153, 2152, -1000, -1000, -1000, 3781, 635,
	1359, 1356, -1000, -168, -1000, 901, -1000, -1000, -1000, -1000,
	-1000, 3231, -1000, 3515, -1000, 2752, -1000, 1190, 2751, 2224,
	-1000, 55419, 634, 3017, 632, 631, 4194, 2405, 4192, 1223,
	3514, 2618, 3513, 2618, -1000, -1000, -1000, 997, -1000, 163583,
	-175, -1000, 2516, -1000, 628, 625, -1000, -26, 1824, 621,
	1354, 1070, -1000, -1000, 55419, 55419, 124834, -1000, 548, 3766,
	-6, -1000, -1000, -1000, 2022, 1352, 1351, -1000, -1000, -1000,
	-1000, -1000, 2713, 2019, 1347, 1345, -1000, -1000, -1000, -1000,
	-1000, -1000, 3444, 2997, 2717, -1000, -1000, -1000, -1000, 2749,
	-1000, 143480, -1000, 3511, 143480, 3113, 856, 143480, 3766, 3185,
	1066, -1000, 3437, 3432, 977, 143480, 55419, 55419, 162122, 161847,
	-1000, 1065, -1000, -1000, 55419, -1000, -28, -1000, 1337, 3950,
	2748, 109316, -1000, 2618, 3510, 1332, -1000, 1331, -1000, -1000,
	-1000, 3929, 3928, 1343, 1894, 91916, 69377, 2831, -1000, 3911,
	2565, 4070, 3979, 69377, -1000, -1000, -1000, -1000, 4070, -1000,
	-1000, -1000, -1000, 87494, -1000, -1000, 1096, 143480, 156506, 109316,
	2004, -1000, -1000, 114900, 115520, 143480, 3055, 938, -1000, 2600,
	938, 1058, 3245, -1000, 2971, -1000, -1000, 143480, 1064, 395,
	-32, -1000, 1377, 4191, 389, -177, -33, 86226, -1000, -1000,
	-1000, -1000, 2737, 109316, 623, 143480, 1400, 3003, 143480, 143480,
	3996, -1000, 2657, 676, 109316, 1093, -1000, 4071, -1000, -1000,
	-1000, 143480, 39416, -1000, 3921, 109316, 3991, 3509, 1062, 109316,
	117, 109316, 4103, -1000, -1000, 3980, 109316, 3505, 2615, 2745,
	2878, 856, 92536, 1062, 2549, -43, -1000, 2187, 38761, 3774,
	-180, -1000, -1000, -1000, 1089, 76264, 65593, 55419, 4188, -182,
	-1000, -1000, -1000, -1000, -1000, 91916, 1030, 143480, 143480, 4186,
	91916, 91916, 91916, -34, 618, -1000, 897, 896, 891, -1000,
	-1000, -1000, -1000, -1000, -1000, 890, 889, 888, 887, -1000,
	-1000, 1055, -1000, -1000, -169, 1055, 69377, 117, -1000, 2558,
	-1000, 2573, -1000, -1000, -1000, -1000, 2985, 3740, 28373, 3920,
	12152, 55419, 55419, 9164, 1387, 550, 12152, 55419, 55419, 86226,
	7212, -187, 55419, 55419, -1000, 55419, 796, 163583, -1000, 4123,
	55419, 387, 383, -1000, -1000, -1000, 4087, -1000, -1000, -1000,
	163583, 55419, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 381,
	-1000, 118, -1000, -1000, -1000, 152780, -1000, 55419, 380, 3874,
	-1000, 379, 374, 8114, 340, 158674, 158633, 158242, 373, -1000,
	-1000, -1000, 369, 368, 163583, 3362, 163583, -1000, -1000, 1067,
	1067, 1489, 1489, 1489, 1489, 4057, 1254, 1348, 489, 445,
	445, 445, 1156, 711, 711, 445, 445, 445, 711, 3243,
	2897, 617, 7423, -1000, -1000, 163583, 163583, 364, -1000, -1000,
	-1000, -61, 353, 9934, -1000, -1000, 3166, 3870, 163583, -1000,
	65593, 3166, 3166, -1000, -1000, 2284, 143480, 163583, 65593, -1000,
	3117, -1000, 22633, 21989, -1000, 28373, -1000, -1000, -188, -1000,
	86226, -1000, -1000, -1000, 4071, -1000, 75013, -1000, -1000, 24,
	-1000, 3045, -1000, 883, -1000, -1000, 91916, 91916, 4185, 4182,
	-1000, 4122, 4121, 2482, 4119, 3072, -1000, -274, -149, 143480,
	143480, 143480, -1000, 2563, -1000, 795, 4181, 819, 28373, -1000,
	-69, -69, 143480, 143480, 143480, 3240, 109316, 143480, 2023, 156506,
	-69, -1000, -1000, -1000, -1000, -1000, -1000, 3718, 163583, 3238,
	3146, 3135, 1030, 1030, -1000, -190, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 28373, 1905, -1000, 616,
	614, 143480, 143480, -1000, 123594, 38124, 1717, 124214, 143480, 3502,
	-1000, 3479, -1000, 1219, 5809, 158197, 66223, -1000, 66223, 143480,
	-1000, -1000, -1000, -1000, 2220, 1993, 4180, 1269, -1000, 3826,
	143480, -1000, 143480, -1000, -1000, -1000, 123594, -1000, 143480, 143480,
	109316, 143480, -1000, 156506, 3450, -195, 163583, -35, -1000, 880,
	-1000, 1500, -1000, 23915, 143480, 156506, 109316, 143480, 156506, 109316,
	143480, -1000, 2986, 3476, 1184, 143480, -1000, 3471, 143480, 1183,
	-1000, -1000, 143480, 2483, -1000, -1000, 3431, -1000, 163583, 161572,
	117, 55419, 3449, -197, 28373, -1000, 4118, 4117, 3470, 3830,
	-1000, 143480, 4115, 143480, 109316, 3716, -1000, -1000, -1000, -1000,
	879, 877, 874, 873, 868, 4045, 122354, -1000, 1061, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2017, 1329, 1325, 2613,
	2611, 2562, -37, 2398, 1058, -39, 612, -1000, 1058, -1000,
	91916, 69377, 2599, 4179, 2178, 76894, 55419, 55419, -1000, 3018,
	-1000, 119246, 93776, 2610, -1000, -1000, 66223, 602, 143480, 597,
	143480, 594, -1000, 117, -1000, 4176, 123594, 592, -1000, 1106,
	2553, -1000, 4069, -1000, 3428, -1000, 793, -1000, -1000, 271,
	156506, 2713, 117, 109316, -1000, 507, 1054, 507, 351, -40,
	-1000, 3474, 1201, 28373, 109316, 3467, 2881, 856, 92536, -1000,
	1573, 2983, -1000, -42, -1000, 686, 117, 2549, -1000, -43,
	163583, -1000, 867, 348, -1000, 3706, -1000, -1000, -198, -1000,
	-1000, 6742, 6742, 91916, 69377, 91916, 91916, 91916, 69377, 91916,
	-1000, 1055, -1000, -169, -1000, 2721, -1000, -1000, -1000, -1000,
	3740, 12152, 12152, 55419, 55419, 55419, 12152, 7212, -200, -1000,
	12152, 12152, -61, -1000, -1000, 161453, -1000, -1000, -1000, 163583,
	-1000, 23277, 2449, -1000, 157922, -1000, 36850, -1000, -1000, 55419,
	55419, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 59878,
	3236, 591, 86226, -1000, -1000, 347, 1057, 55419, 57330, 2888,
	1057, 1057, -1000, -205, -1000, -1000, -1000, 4071, -1000, 4071,
	24, -1000, 143480, -1000, -1000, -1000, 28373, -1000, 91916, -1000,
	-1000, -1000, -1000, -1000, 4174, 4173, 2709, 4172, 4171, -1000,
	-1000, -1000, 3394, -167, -178, -189, -1000, 816, -1000, 4169,
	-1000, 248, 215, 198, 156506, 3222, 186, 3054, 3049, -69,
	-1000, 117, -1000, -1000, -1000, -1000, -1000, -1000, 109316, 109316,
	55419, 55419, -1000, -1000, -1000, -1000, 3048, 3978, -1000, 2290,
	-1000, 143480, 143480, -1000, 143480, -1000, 28373, 143480, 3188, 1409,
	-1000, 1010, 2907, 590, 59878, 1242, 109316, 1008, 3139, 3132,
	-1000, 4016, 3869, 3127, -206, -1000, 143480, 55419, 143480, -207,
	-212, 2708, -1000, -1000, 1240, 1368, 55419, 1238, -1000, -1000,
	-1000, 86226, 585, 2618, 2618, -1000, -213, -218, -1000, -1000,
	-1000, 55419, 1324, 143480, 37487, -1000, 4168, 3766, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 143480, 143480, -1000, -1000,
	-1000, 143480, 3766, 143480, -1000, 55419, -1000, 161331, 55419, 1318,
	-1000, -1000, -1000, 4111, 2618, 28373, 2618, -1000, 2618, 3830,
	1268, 91916, 55419, 1668, 69377, 69377, -1000, -1000, -1000, 2622,
	143480, 156506, 109316, 2050, 2050, 3218, -1000, -1000, -1000, 2831,
	2831, -1000, -44, 1058, 91916, -1000, 1883, -1000, 163583, 163583,
	2440, 4165, -1000, -1000, -1000, -1000, 2902, -1000, -1000, -1000,
	143480, 2899, 3150, -220, 66223, 583, 66223, 582, 143480, 1035,
	-1000, -221, 93776, 1021, -1000, 1106, -1000, -1000, -1000, 73139,
	-1000, -1000, -1000, 507, 3975, -1000, 3013, 3974, -1000, 4106,
	579, 567, 143480, 2597, 560, 28373, 3765, 856, 92536, -1000,
	3508, 2187, -1000, 2720, 143480, 3758, -1000, 2983, 559, 1030,
	555, 1030, -1000, -223, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1055, -45, -1000, 4022, 554, 683, -1000, -1000,
	12152, 12152, 12152, -1000, 335, -1000, -1000, 2549, 3863, -1000,
	-46, 157881, 157490, 6691, 59878, 86226, -226, -1000, -1000, 143480,
	163583, -51, -1000, 163583, 547, 535, 498, -1000, -1000, -1000,
	792, 778, -1000, -1000, -1000, -1000, 4164, -1000, -1000, -1000,
	156506, 156506, 156506, 4161, -1000, 156506, 156506, 156506, -69, 156506,
	156506, 1976, 1971, -1000, -1000, -1000, -231, -232, 122974, 143480,
	-1000, -1000, 2224, 2194, -1000, -1000, 143480, 2738, -1000, -1000,
	-1000, 1050, 55419, 7423, 59878, 529, 55419, -1000, 528, 526,
	3973, 3647, -1000, 3006, 3211, 2236, 66223, -1000, 3740, -1000,
	157445, -1000, 1198, 2310, -1000, -1000, -1000, -1000, 163583, 59878,
	3830, 66223, -1000, -1000, 521, 520, 163583, 519, 866, 3219,
	-1000, -1000, -1000, -1000, -86, -86, -1000, -1000, 163583, 117,
	163583, 517, 3950, -1000, -1000, -1000, -1000, 2618, 109316, -1000,
	163583, -1000, -1000, -1000, -1000, 865, -1000, -1000, -1000, 1317,
	-1000, -1000, -1000, -1000, -1000, 4156, 3215, 114900, -1000, -233,
	2322, -1000, 86226, -1000, 1021, -1000, -1000, 2610, 514, -1000,
	1022, 2829, 2829, 1198, -234, 66223, -240, 66223, -241, 2580,
	3011, -1000, 316, 3971, 1106, 1089, -1000, 3970, 117, 3671,
	-1000, 117, -1000, 4103, 66223, -1000, 109316, 66223, 2593, 2370,
	2852, 92536, -1000, 2878, -1000, -1000, -243, 143480, 2187, -1000,
	-1000, 91916, -1000, -1000, -1000, 2721, -1000, 143480, -1000, 143480,
	-1000, 2427, 55419, 36850, -1000, -1000, 6691, -249, -1000, -58,
	-1000, 3968, 57330, 4155, 4153, 4151, -1000, -1000, -1000, -274,
	-274, -274, -1000, -69, -69, -69, -69, -69, 143480, 143480,
	-1000, -1000, -1000, 2286, -1000, 2737, -1000, -1000, 3442, -1000,
	3158, 513, 157170, 7423, 2832, 143480, 157129, 2713, 2713, -1000,
	3967, 3161, -1000, -1000, 2425, 512, -1000, -1000, -1000, -1000,
	963, 143480, 1022, 3157, 109316, 7423, 1218, -251, 2434, 2434,
	55419, 36213, 2477, -1000, 55419, -1000, -1000, 3830, 69377, 156506,
	-1000, 156506, 2582, -1000, 3203, 7815, -1000, 2580, 143480, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2236, 1198, -254, 2425, -256, -1000, -1000, 3821, -1000,
	3669, 3018, 117, -1000, 117, -1000, 4150, 1054, 315, -264,
	1201, -266, 109316, 2264, -1000, 856, -1000, 2881, 1089, 3590,
	-1000, -271, -1000, -272, -280, 314, 56693, 56693, 56693, -61,
	-68, -1000, 143480, 510, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 167, 166, -1000, -1000, 3408, 954, -1000, 936, 2211,
	313, 1205, 310, 308, -1000, -1000, -1000, 3127, -1000, 143480,
	-1000, -1000, -1000, 954, 507, -1000, 55419, 1198, -282, -1000,
	1182, -283, -1000, 1161, -290, -1000, 3210, -1000, -291, 2618,
	-1000, -274, 266, 2050, 1049, 3910, 2621, 7815, -1000, 4102,
	92536, -1000, -1000, -1000, 2843, -298, -1000, -1000, 2425, 2236,
	1198, 1022, 2425, 2779, -1000, 2440, 1035, -1000, -1000, -1000,
	-1000, 1198, 504, 2236, 503, 1751, 856, -1000, -1000, 1539,
	3765, 3484, 1533, 1030, -1000, -1000, -1000, 3464, -1000, 61152,
	2601, 2151, 160662, 3464, 3464, -1000, -1000, 156506, 156506, 143480,
	1022, 3896, -1000, 945, 942, 1706, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1089, -299, -1000, 2832, 163583, 1022,
	-1000, 2434, 3041, -1000, 2434, 3209, -1000, 2472, -1000, -1000,
	-1000, -1000, 3208, -1000, 2114, 4043, -1000, -1000, 3922, 55419,
	-1000, -1000, -1000, -1000, -1000, -1000, 1022, 143480, 1022, 2425,
	2236, 1089, 1022, 2138, 2134, 4149, 1021, 2580, 2236, 66223,
	2425, 66223, 2414, -1000, 143480, -1000, 2370, 1467, -1000, 1891,
	-1000, -1000, 2109, 4012, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -69, -69, -1000, -1000, 857, -1000, 3637, -1000, 1237,
	2396, 2396, -1000, -1000, 936, -1000, -1000, 500, -1000, 497,
	-1000, 156506, 2548, -1000, -1000, -1000, 163583, -1000, -1000, 1089,
	1022, 2425, 1371, 1089, -1000, 4148, -1000, 2580, -1000, 2425,
	-304, 1022, -305, 2489, -1000, -1000, -86, 2264, -1000, 1890,
	76264, 2141, -1000, -1000, 2539, 56056, 55419, -1000, 4039, -1000,
	-1000, 2941, -1000, 3127, 55419, 55419, 266, 74383, 19600, 1371,
	1089, 1022, -1000, 1119, -1000, 1371, -1000, 2843, 1022, 1198,
	1089, 2236, 1928, 856, 1751, 76264, -285, -1000, -1000, -1000,
	163583, -1000, -1000, -1000, -1000, -306, -307, -1000, -114, 122354,
	-325, -1000, -1000, -1000, -1000, 1371, 1089, -1000, -1000, -1000,
	1089, 2236, 1371, 2425, -1000, -1000, 2282, 156506, 2414, -285,
	-1000, 2425, 1292, -321, -1000, -1000, 1371, 1371, 2425, -1000,
	1022, -1000, 1928, -1000, -1000, -1000, 496, -1000, -1000, -1000,
	1022, 1089, -1000, 55419, 1089, 1371, -322, 1371, -1000, 2425,
	-1000, -1000,
}

var sqlPgo = [...]int16{
	0, 5061, 5060, 13, 5058, 5056, 5055, 5054, 5050, 5045,
	5044, 5042, 5037, 5034, 5031, 5030, 163, 5029, 5028, 5027,
	5022, 5021, 5020, 5019, 5018, 5017, 5014, 5012, 5011, 5010,
	5009, 5008, 5006, 5004, 5003, 5002, 5001, 5000, 4998, 4997,
	4996, 4995, 4994, 4993, 4990, 4989, 4987, 4982, 4981, 4979,
	4978, 4977, 4976, 4974, 4973, 4968, 4967, 4964, 4961, 4957,
	4955, 4954, 4953, 4952, 4951, 4947, 4945, 4944, 4942, 4941,
	4940, 4938, 4937, 4934, 4932, 4931, 4930, 4929, 4928, 4924,
	4923, 4920, 4918, 4917, 69, 4916, 4913, 4911, 4910, 4906,
	4905, 4903, 4902, 4901, 4900, 4899, 4896, 4894, 4892, 4889,
	4888, 4886, 4884, 4882, 4881, 4880, 4878, 107, 81, 4876,
	325, 4875, 4874, 4873, 4870, 4869, 4868, 4867, 4866, 4865,
	4864, 4863, 4860, 4859, 4858, 4857, 323, 4856, 16, 192,
	4855, 4853, 22, 4846, 4844, 318, 4843, 4842, 4841, 4840,
	4839, 330, 4838, 4836, 4835, 4834, 4833, 311, 4832, 4830,
	4829, 4827, 4826, 4825, 144, 167, 4824, 4823, 3554, 4822,
	4821, 4820, 4818, 4814, 4810, 4809, 293, 310, 4808, 4807,
	4805, 288, 195, 4804, 317, 4795, 4792, 4791, 4789, 4788,
	4784, 4783, 4778, 4776, 4775, 4774, 4770, 4769, 4768, 4767,
	4766, 4765, 4764, 4752, 4747, 4742, 4741, 4733, 4732, 4730,
	4729, 4728, 4726, 4725, 4723, 4721, 4720, 4719, 4718, 4717,
	4716, 4715, 4714, 4713, 4712, 4710, 4705, 4703, 4701, 4700,
	4699, 303, 246, 137, 4698, 4697, 4695, 4694, 4688, 4684,
	316, 315, 4681, 4680, 4679, 4678, 4677, 3926, 4676, 4675,
	4674, 4673, 4672, 4671, 4669, 4668, 4665, 136, 5, 39,
	4664, 4663, 104, 103, 101, 89, 116, 118, 4662, 4661,
	140, 4655, 155, 130, 4654, 135, 120, 32, 45, 324,
	287, 1386, 280, 4653, 4650, 4649, 281, 231, 4647, 276,
	4646, 4645, 4644, 4642, 4640, 4639, 86, 60, 244, 4638,
	159, 4637, 4636, 174, 202, 209, 204, 206, 205, 183,
	62, 117, 105, 73, 57, 21, 96, 268, 24, 247,
	9, 6, 304, 4635, 301, 12, 158, 3, 43, 4634,
	4633, 4632, 4631, 4311, 150, 4629, 314, 285, 201, 4627,
	4625, 4619, 1420, 4618, 4617, 64, 267, 505, 97, 125,
	235, 145, 4613, 181, 266, 48, 4607, 236, 75, 4606,
	4604, 149, 106, 10355, 4904, 4601, 4600, 151, 92, 239,
	9747, 308, 302, 251, 108, 162, 221, 189, 4598, 138,
	4597, 170, 175, 208, 1006, 4595, 128, 4594, 3956, 115,
	207, 187, 6508, 4591, 4590, 4589, 94, 4583, 122, 4580,
	4578, 78, 26, 4, 8, 160, 46, 44, 7, 4577,
	30, 169, 59, 37, 4575, 31, 4573, 4567, 4566, 4565,
	65, 4563, 52, 200, 4562, 4560, 327, 4559, 88, 63,
	272, 4558, 184, 258, 4557, 273, 153, 4555, 4554, 241,
	227, 229, 211, 254, 4551, 74, 292, 4550, 4549, 4547,
	4546, 4544, 329, 168, 2, 156, 4541, 4540, 177, 4536,
	68, 279, 242, 4532, 77, 4529, 4527, 197, 67, 161,
	322, 199, 269, 142, 261, 213, 275, 4525, 4524, 4523,
	216, 4522, 4519, 259, 194, 4516, 4515, 234, 331, 109,
	58, 1, 203, 91, 277, 93, 230, 198, 4514, 232,
	176, 4513, 179, 4512, 114, 4510, 326, 215, 253, 51,
	10, 29, 112, 124, 71, 15, 271, 190, 238, 141,
	4509, 8880, 3391, 3104, 270, 4508, 185, 152, 95, 147,
	188, 312, 102, 4507, 4506, 5408, 4505, 4503, 4502, 4499,
	217, 4498, 4497, 248, 172, 178, 4494, 171, 286, 4493,
	131, 83, 72, 27, 132, 139, 328, 134, 263, 274,
	289, 4492, 4489, 4487, 220, 4486, 99, 226, 240, 4485,
	219, 295, 70, 4484, 1244, 4482, 186, 3789, 85, 182,
	4481, 255, 4480, 4478, 4477, 4476, 4475, 4474, 4473, 4470,
	283, 4468, 4467, 4466, 49, 228, 4465, 225, 180, 210,
	111, 61, 224, 119, 1320, 146, 2679, 237, 53, 20,
	4463, 98, 4462, 6472, 76, 4461, 0, 15399, 11064, 14458,
	4460, 4459, 13552, 4456, 5827, 4454, 4453, 4452, 250, 84,
	4450, 4448, 4445, 123, 4444, 100, 4443, 4442, 87, 4440,
	40, 25, 18, 38, 34, 1376, 630, 4439, 4438, 313,
	154, 35, 4437, 320, 264, 4431, 4428, 4424, 4420, 113,
	4419, 56, 4418, 54, 4416, 4415, 55, 28, 41, 4413,
	4411, 249, 191, 3855, 193, 165, 4408, 133, 4405, 4403,
	306, 80, 164, 4402, 4399, 309, 245, 262, 110, 4397,
	290, 4396, 243, 4395, 79, 33, 4386, 4384, 305, 129,
	127, 66, 300, 157, 50, 4384, 4383, 4380, 4379, 214,
	4368, 4364, 4363, 4362, 4361, 126, 166, 4360, 82, 4357,
	4356, 4355, 47, 278, 212, 4354, 11, 4353, 4352, 4351,
	257, 256, 297, 222, 252, 4350, 4349, 196, 4348, 4346,
	4344, 299, 4343, 4341, 3914, 307, 4340, 42, 4339, 4338,
	4337, 19, 4336, 4335, 233, 3601, 4332, 4328, 14, 4322,
	218,
}

var sqlR1 = [...]int16{
	0, 1, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 4, 4,
	4, 4, 4, 4, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 8, 8, 8, 8, 8, 8, 8, 8,
	8, 8, 8, 14, 14, 10, 10, 10, 10, 11,
	11, 11, 11, 11, 63, 63, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 20, 20, 20, 20, 20, 20, 20, 42,
	44, 43, 37, 37, 38, 38, 39, 40, 40, 45,
	47, 46, 48, 49, 49, 50, 50, 50, 13, 13,
	13, 9, 9, 9, 9, 9, 9, 9, 9, 9,
	23, 23, 51, 51, 24, 24, 53, 53, 25, 25,
	54, 54, 675, 675, 675, 676, 676, 677, 677, 677,
	28, 56, 58, 58, 482, 482, 21, 22, 22, 22,
	22, 678, 678, 678, 678, 41, 29, 57, 34, 34,
	34, 34, 34, 250, 250, 250, 250, 27, 27, 52,
	52, 296, 296, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 674, 674, 298, 298, 297, 283, 283,
	284, 284, 285, 285, 679, 679, 299, 299, 299, 300,
	300, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 568, 568, 568, 599, 599, 599, 599, 601, 601,
	726, 726, 727, 727, 727, 727, 727, 157, 157, 456,
	456, 456, 72, 72, 72, 72, 72, 664, 664, 252,
	252, 252, 254, 254, 253, 253, 253, 253, 253, 253,
	253, 253, 96, 96, 97, 97, 291, 291, 290, 290,
	290, 290, 290, 290, 290, 685, 685, 684, 722, 722,
	683, 683, 686, 686, 686, 251, 251, 251, 93, 93,
	115, 115, 153, 153, 153, 153, 153, 153, 153, 154,
	154, 155, 155, 695, 695, 695, 255, 255, 255, 257,
	257, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 262, 19, 19, 136,
	136, 136, 136, 136, 136, 136, 131, 131, 603, 603,
	604, 604, 246, 246, 247, 247, 247, 247, 248, 248,
	249, 249, 249, 87, 87, 259, 259, 261, 261, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 75, 75, 75, 75, 75, 76, 76, 76,
	76, 76, 76, 77, 77, 77, 77, 77, 77, 78,
	78, 85, 85, 85, 85, 85, 85, 85, 85, 223,
	223, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 101, 101, 101,
	92, 92, 92, 92, 92, 104, 104, 696, 696, 697,
	697, 715, 701, 701, 702, 702, 705, 705, 705, 706,
	706, 706, 706, 706, 714, 714, 714, 714, 714, 708,
	707, 709, 709, 710, 710, 712, 712, 712, 712, 712,
	713, 713, 713, 713, 713, 713, 713, 713, 713, 713,
	713, 713, 713, 713, 713, 713, 713, 700, 716, 717,
	717, 718, 718, 719, 719, 719, 123, 123, 123, 721,
	721, 720, 720, 703, 703, 704, 704, 67, 711, 711,
	729, 729, 68, 69, 70, 71, 698, 698, 728, 728,
	728, 728, 728, 728, 728, 728, 728, 728, 728, 728,
	728, 728, 728, 728, 728, 730, 730, 731, 731, 732,
	732, 732, 732, 732, 732, 732, 732, 732, 732, 732,
	732, 732, 732, 732, 732, 732, 732, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 105, 105, 414, 414,
	377, 377, 106, 106, 106, 107, 107, 108, 108, 108,
	108, 89, 89, 89, 661, 661, 662, 668, 733, 733,
	559, 559, 558, 558, 110, 110, 455, 455, 111, 111,
	111, 111, 111, 111, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 121, 121, 121, 121, 121, 122, 122, 122, 119,
	119, 119, 116, 116, 116, 114, 114, 114, 120, 120,
	120, 124, 124, 124, 667, 363, 363, 118, 118, 118,
	117, 117, 117, 430, 430, 431, 433, 432, 125, 125,
	125, 125, 378, 126, 126, 126, 126, 126, 126, 126,
	126, 129, 129, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 561, 561, 5, 5,
	289, 289, 288, 288, 288, 288, 6, 6, 6, 294,
	294, 293, 292, 210, 210, 127, 127, 127, 523, 523,
	132, 132, 132, 471, 471, 133, 133, 133, 133, 133,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 671, 671,
	423, 423, 326, 326, 326, 326, 145, 145, 145, 145,
	146, 146, 146, 146, 147, 147, 232, 232, 163, 163,
	163, 163, 162, 162, 162, 162, 162, 162, 162, 162,
	79, 79, 79, 80, 80, 81, 81, 82, 82, 83,
	83, 84, 84, 84, 84, 84, 166, 166, 33, 33,
	33, 33, 167, 167, 723, 723, 169, 165, 165, 165,
	165, 165, 165, 165, 164, 164, 168, 168, 168, 168,
	170, 172, 172, 172, 172, 172, 171, 171, 171, 171,
	171, 173, 173, 593, 593, 441, 441, 591, 591, 615,
	615, 592, 592, 384, 384, 384, 384, 384, 385, 385,
	385, 602, 602, 602, 602, 602, 602, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 233,
	233, 233, 234, 234, 239, 239, 240, 240, 240, 241,
	241, 241, 238, 238, 238, 235, 235, 236, 236, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 244,
	244, 242, 242, 243, 243, 735, 735, 734, 734, 245,
	245, 245, 245, 245, 203, 203, 203, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	442, 442, 206, 206, 206, 190, 190, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 258, 258, 258, 258,
	258, 182, 182, 182, 182, 182, 182, 182, 182, 183,
	183, 183, 176, 176, 192, 192, 192, 192, 192, 184,
	184, 185, 185, 185, 186, 186, 186, 186, 215, 215,
	189, 189, 189, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 177, 178, 178, 178, 178, 194, 194, 194,
	194, 478, 478, 478, 221, 221, 193, 193, 193, 193,
	193, 193, 193, 193, 193, 193, 193, 193, 193, 193,
	193, 193, 218, 218, 218, 218, 218, 218, 687, 687,
	688, 688, 688, 211, 211, 211, 211, 211, 211, 539,
	539, 204, 204, 204, 204, 209, 209, 209, 209, 188,
	188, 188, 188, 213, 213, 213, 213, 461, 461, 201,
	201, 201, 202, 202, 202, 207, 207, 220, 208, 415,
	415, 205, 205, 212, 212, 212, 212, 214, 214, 214,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 180, 180, 180, 180, 181, 181, 181, 181,
	216, 216, 200, 200, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 736, 736, 196, 196, 196,
	195, 195, 195, 195, 198, 198, 199, 199, 199, 199,
	199, 199, 199, 197, 187, 219, 669, 669, 665, 665,
	665, 665, 665, 665, 665, 665, 665, 665, 663, 663,
	663, 663, 663, 663, 663, 663, 663, 666, 666, 666,
	666, 666, 670, 670, 137, 137, 137, 137, 137, 137,
	137, 148, 148, 148, 148, 148, 148, 148, 151, 151,
	138, 138, 138, 138, 138, 138, 138, 141, 141, 139,
	139, 139, 139, 140, 140, 98, 98, 98, 98, 98,
	18, 18, 18, 99, 99, 317, 317, 267, 267, 267,
	402, 402, 268, 268, 392, 392, 392, 392, 263, 263,
	264, 264, 265, 266, 266, 100, 100, 737, 737, 737,
	680, 680, 680, 681, 681, 681, 681, 681, 681, 386,
	386, 387, 387, 503, 503, 503, 503, 503, 390, 390,
	390, 391, 391, 391, 391, 391, 391, 391, 391, 391,
	400, 401, 401, 393, 393, 399, 398, 398, 397, 397,
	396, 396, 394, 395, 395, 395, 404, 404, 403, 406,
	406, 405, 502, 624, 624, 626, 626, 626, 626, 626,
	626, 626, 628, 628, 628, 628, 628, 628, 628, 628,
	628, 628, 628, 628, 628, 628, 628, 628, 628, 479,
	479, 738, 738, 739, 740, 622, 622, 622, 622, 622,
	623, 618, 618, 619, 619, 619, 619, 619, 388, 388,
	389, 389, 389, 389, 620, 621, 421, 421, 543, 625,
	625, 627, 627, 629, 741, 741, 741, 741, 741, 741,
	742, 742, 742, 501, 501, 500, 500, 499, 499, 412,
	412, 630, 630, 630, 630, 631, 631, 631, 631, 631,
	634, 633, 632, 632, 632, 632, 632, 103, 103, 103,
	458, 458, 457, 457, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 228, 228, 329, 329, 329, 95, 95, 95,
	15, 15, 15, 15, 15, 15, 15, 344, 344, 16,
	16, 16, 16, 682, 682, 682, 102, 102, 102, 102,
	102, 102, 410, 410, 410, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 673, 673, 672, 672, 330, 330, 744, 744, 109,
	109, 109, 109, 109, 109, 109, 109, 562, 562, 563,
	563, 94, 94, 94, 94, 94, 480, 480, 477, 477,
	476, 476, 420, 420, 541, 541, 541, 542, 334, 334,
	335, 335, 286, 286, 286, 481, 481, 481, 36, 35,
	26, 26, 30, 30, 31, 31, 316, 316, 316, 316,
	316, 316, 316, 316, 316, 32, 32, 60, 60, 60,
	60, 61, 61, 61, 61, 64, 64, 65, 65, 59,
	59, 59, 59, 62, 62, 55, 55, 66, 66, 66,
	66, 66, 689, 691, 691, 690, 690, 694, 694, 694,
	694, 694, 694, 692, 692, 365, 365, 693, 693, 724,
	724, 725, 725, 144, 144, 149, 149, 149, 149, 149,
	150, 150, 150, 150, 152, 152, 152, 152, 161, 161,
	224, 224, 224, 224, 224, 224, 224, 73, 73, 86,
	86, 159, 746, 746, 746, 160, 160, 160, 225, 225,
	225, 225, 226, 226, 227, 227, 745, 745, 327, 327,
	496, 496, 497, 497, 747, 747, 498, 498, 498, 498,
	498, 320, 319, 321, 321, 322, 322, 91, 91, 91,
	308, 308, 307, 310, 310, 309, 311, 311, 312, 312,
	305, 305, 605, 605, 314, 314, 314, 315, 315, 301,
	301, 302, 302, 303, 303, 304, 304, 318, 318, 600,
	600, 748, 748, 135, 135, 135, 231, 231, 376, 376,
	376, 489, 489, 489, 413, 413, 341, 341, 495, 495,
	495, 495, 495, 454, 454, 454, 230, 230, 428, 428,
	444, 444, 445, 445, 555, 555, 446, 142, 142, 143,
	143, 158, 158, 271, 271, 269, 269, 269, 269, 269,
	269, 269, 269, 276, 276, 277, 277, 278, 278, 279,
	280, 280, 280, 280, 434, 434, 281, 281, 281, 270,
	270, 270, 272, 272, 272, 272, 272, 272, 272, 275,
	275, 275, 275, 282, 282, 282, 274, 274, 641, 641,
	641, 643, 643, 645, 645, 644, 644, 640, 640, 642,
	642, 743, 743, 460, 460, 460, 409, 411, 407, 407,
	408, 408, 418, 418, 416, 417, 417, 419, 419, 540,
	540, 540, 287, 287, 287, 451, 451, 451, 451, 452,
	452, 485, 485, 483, 483, 483, 483, 484, 484, 486,
	486, 486, 487, 487, 488, 488, 448, 448, 449, 449,
	450, 450, 450, 450, 519, 519, 273, 273, 273, 425,
	425, 425, 426, 426, 509, 509, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 510, 510, 508, 508, 508,
	508, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	545, 546, 546, 427, 427, 547, 492, 492, 493, 493,
	490, 490, 491, 491, 494, 494, 659, 659, 659, 660,
	660, 538, 538, 548, 548, 548, 548, 548, 548, 534,
	534, 535, 535, 536, 536, 537, 537, 556, 557, 557,
	464, 464, 464, 464, 462, 462, 465, 465, 465, 465,
	465, 463, 463, 549, 549, 549, 549, 453, 453, 229,
	229, 550, 550, 550, 550, 551, 552, 552, 553, 553,
	504, 505, 505, 564, 564, 564, 564, 566, 424, 424,
	424, 424, 424, 617, 616, 616, 565, 565, 565, 565,
	565, 565, 565, 580, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 580, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 580, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 580, 580, 581, 581, 581, 581, 581,
	581, 581, 567, 567, 567, 567, 567, 567, 567, 571,
	571, 571, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 572, 572, 577, 577, 578, 578, 578,
	573, 574, 579, 579, 579, 579, 749, 749, 583, 583,
	575, 575, 575, 575, 575, 575, 575, 575, 575, 569,
	569, 569, 576, 576, 576, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 472, 472,
	474, 474, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 513, 513, 513, 513, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 635, 635, 635, 635, 635, 635, 635, 635,
	515, 515, 638, 638, 639, 639, 636, 636, 636, 636,
	636, 636, 636, 636, 636, 636, 636, 636, 636, 636,
	636, 636, 636, 636, 636, 636, 636, 636, 636, 637,
	637, 637, 637, 637, 637, 637, 637, 637, 637, 637,
	637, 637, 637, 637, 637, 637, 637, 637, 637, 637,
	637, 637, 637, 637, 637, 637, 637, 637, 637, 637,
	637, 637, 637, 637, 637, 637, 637, 646, 646, 647,
	647, 649, 649, 650, 650, 651, 652, 652, 652, 653,
	654, 654, 648, 648, 655, 655, 655, 655, 656, 656,
	657, 657, 657, 657, 657, 658, 658, 658, 658, 658,
	525, 525, 526, 526, 532, 532, 532, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 383, 383, 382, 331, 331, 331, 331, 331,
	331, 439, 439, 437, 437, 437, 440, 440, 438, 438,
	436, 436, 435, 435, 522, 522, 520, 520, 524, 524,
	466, 466, 582, 582, 582, 582, 582, 582, 582, 582,
	467, 467, 467, 475, 468, 468, 469, 469, 469, 469,
	469, 516, 517, 470, 470, 470, 518, 518, 527, 531,
	531, 530, 529, 529, 528, 528, 506, 506, 507, 507,
	447, 447, 750, 750, 443, 443, 554, 554, 554, 554,
	611, 611, 380, 380, 429, 429, 379, 379, 371, 371,
	372, 372, 372, 372, 422, 422, 533, 533, 584, 584,
	585, 585, 586, 586, 587, 587, 588, 589, 590, 521,
	521, 352, 351, 338, 339, 350, 349, 348, 337, 340,
	345, 346, 347, 342, 343, 359, 358, 357, 306, 313,
	364, 366, 366, 369, 369, 370, 368, 367, 367, 354,
	355, 356, 560, 336, 373, 373, 374, 374, 374, 375,
	375, 375, 375, 332, 332, 332, 333, 333, 360, 360,
	361, 362, 362, 353, 353, 353, 323, 323, 323, 324,
	324, 325, 325, 598, 598, 595, 595, 595, 596, 596,
	596, 699, 597, 597, 597, 597, 594, 594, 594, 594,
	594, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 612, 612, 612, 612, 612, 612, 612, 612, 612,
	612, 612, 612, 612, 612, 612, 612, 612, 612, 612,
	612, 612, 612, 612, 612, 612, 612, 612, 612, 612,
	612, 612, 612, 612, 612, 612, 612, 612, 612, 612,
	612, 612, 612, 612, 612, 612, 612, 612, 612, 612,
	612, 612, 612, 612, 612, 607, 607, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 609, 613, 613, 613, 613,
	613, 613, 613, 613, 613, 613, 613, 613, 613, 613,
	613, 613, 613, 613, 613, 613, 613, 613, 613, 613,
	613, 613, 613, 613, 613, 613, 613, 613, 613, 613,
	613, 613, 613, 613, 613, 613, 613, 613, 613, 613,
	613, 613, 613, 613, 613, 613, 613, 613, 613, 613,
	613, 613, 613, 613, 613, 613, 613, 613, 613, 613,
	613, 613, 613, 613, 613, 613, 613, 613, 613, 613,
	613, 613, 613, 613, 613, 613, 614, 614, 614, 614,
}

var sqlR2 = [...]int8{
	0, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 3, 6,
	4, 4, 6, 9, 6, 8, 4, 4, 5, 9,
	7, 9, 5, 6, 8, 7, 7, 9, 1, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 6, 6, 9, 6, 9, 6, 5,
	6, 5, 1, 1, 1, 1, 1, 1, 0, 1,
	6, 6, 4, 6, 2, 1, 4, 8, 7, 10,
	9, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	4, 4, 6, 5, 6, 5, 6, 4, 8, 3,
	8, 4, 2, 3, 10, 3, 6, 4, 3, 1,
	3, 4, 4, 2, 1, 1, 3, 1, 3, 2,
	4, 3, 2, 3, 2, 0, 1, 1, 0, 2,
	0, 7, 10, 6, 8, 6, 6, 6, 9, 4,
	3, 2, 2, 0, 1, 1, 1, 1, 1, 3,
	1, 3, 6, 4, 6, 7, 9, 6, 2, 2,
	3, 0, 8, 6, 8, 7, 2, 0, 1, 2,
	5, 0, 1, 3, 3, 1, 3, 1, 3, 3,
	3, 3, 12, 3, 5, 4, 1, 3, 3, 3,
	3, 2, 4, 4, 4, 1, 1, 2, 1, 4,
	1, 0, 3, 3, 0, 4, 6, 0, 6, 4,
	4, 4, 5, 7, 6, 8, 7, 9, 2, 1,
	3, 1, 3, 3, 3, 0, 2, 5, 0, 1,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 1, 1, 1, 3, 3, 6,
	4, 9, 7, 12, 9, 2, 7, 2, 1, 1,
	1, 3, 3, 0, 3, 1, 3, 1, 1, 3,
	2, 5, 0, 7, 5, 2, 0, 1, 2, 3,
	1, 1, 2, 2, 2, 2, 1, 2, 3, 3,
	4, 3, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 3, 3, 3, 3, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 4,
	3, 6, 6, 6, 6, 6, 8, 4, 4, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 3, 9, 3,
	6, 3, 8, 5, 3, 12, 4, 2, 0, 1,
	0, 1, 1, 0, 1, 3, 1, 3, 3, 3,
	3, 2, 2, 1, 1, 1, 1, 2, 1, 1,
	1, 1, 0, 1, 2, 2, 2, 1, 1, 1,
	4, 5, 1, 1, 1, 1, 3, 3, 2, 2,
	1, 2, 2, 2, 2, 1, 1, 1, 2, 1,
	1, 3, 0, 1, 4, 0, 4, 6, 3, 1,
	3, 2, 1, 3, 2, 1, 3, 5, 1, 2,
	1, 0, 6, 6, 6, 8, 1, 0, 4, 3,
	3, 4, 3, 4, 4, 4, 7, 3, 3, 4,
	3, 3, 3, 3, 3, 1, 0, 1, 0, 4,
	3, 3, 3, 3, 3, 6, 4, 4, 4, 5,
	3, 3, 3, 3, 3, 3, 3, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 1, 2,
	1, 2, 1, 2, 1, 2, 7, 3, 2, 0,
	1, 3, 1, 3, 0, 1, 2, 2, 1, 2,
	1, 6, 10, 5, 1, 3, 3, 1, 1, 0,
	2, 0, 2, 0, 9, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 6, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 3, 5, 3, 1, 1, 3, 4, 6, 3,
	3, 5, 3, 1, 3, 1, 1, 1, 2, 2,
	2, 2, 1, 2, 2, 5, 3, 3, 6, 6,
	3, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 4, 3,
	1, 2, 3, 2, 2, 2, 4, 6, 3, 1,
	2, 2, 7, 3, 3, 5, 7, 2, 3, 0,
	3, 5, 2, 3, 0, 2, 3, 2, 3, 2,
	7, 4, 7, 8, 8, 9, 11, 11, 11, 6,
	2, 6, 9, 4, 7, 7, 10, 7, 10, 10,
	10, 13, 10, 13, 5, 8, 5, 2, 2, 1,
	1, 3, 1, 1, 1, 1, 1, 2, 1, 2,
	2, 3, 2, 2, 4, 3, 2, 2, 1, 2,
	1, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 3, 5, 4, 6, 4, 3, 0, 1,
	3, 2, 4, 2, 4, 1, 6, 3, 4, 4,
	3, 4, 1, 1, 1, 1, 5, 4, 5, 3,
	3, 2, 2, 6, 3, 3, 3, 3, 4, 4,
	3, 1, 3, 3, 2, 2, 1, 3, 3, 3,
	1, 2, 1, 1, 2, 2, 3, 1, 1, 1,
	1, 1, 3, 2, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 1, 1, 1, 2, 1, 2,
	2, 2, 9, 2, 1, 0, 1, 1, 0, 1,
	2, 0, 2, 2, 0, 2, 2, 2, 2, 1,
	2, 3, 3, 4, 4, 4, 4, 3, 3, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 1, 3,
	3, 3, 3, 3, 2, 3, 3, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 3, 6, 8, 3, 3, 3, 4, 8, 6,
	4, 5, 5, 5, 5, 3, 0, 1, 1, 1,
	1, 4, 4, 3, 4, 4, 3, 4, 4, 1,
	4, 4, 5, 3, 5, 5, 5, 7, 3, 3,
	3, 5, 7, 4, 2, 6, 4, 3, 2, 3,
	4, 4, 3, 5, 3, 6, 5, 6, 3, 5,
	6, 3, 3, 5, 3, 5, 3, 3, 4, 4,
	5, 0, 1, 1, 1, 1, 3, 2, 3, 4,
	3, 4, 3, 5, 3, 4, 4, 3, 4, 5,
	3, 4, 3, 4, 4, 5, 3, 3, 1, 1,
	0, 2, 3, 5, 4, 6, 4, 6, 4, 1,
	0, 3, 4, 4, 5, 7, 5, 3, 3, 6,
	4, 2, 3, 3, 4, 4, 5, 2, 0, 4,
	2, 3, 4, 2, 3, 3, 3, 7, 5, 2,
	0, 3, 3, 4, 3, 3, 3, 5, 3, 3,
	3, 4, 4, 4, 4, 5, 6, 4, 4, 4,
	4, 3, 4, 5, 4, 4, 5, 6, 5, 5,
	2, 3, 2, 3, 6, 6, 7, 9, 7, 9,
	4, 3, 4, 4, 5, 1, 1, 10, 10, 3,
	5, 5, 5, 3, 5, 6, 4, 4, 5, 5,
	2, 6, 3, 2, 5, 4, 2, 0, 1, 1,
	1, 1, 2, 3, 2, 2, 3, 2, 1, 1,
	1, 1, 3, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 2, 0, 1, 2, 1, 2, 1, 2,
	2, 1, 2, 1, 2, 1, 2, 2, 4, 3,
	3, 7, 3, 3, 7, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 3, 3, 6, 5, 8, 3,
	6, 6, 3, 12, 15, 1, 0, 1, 2, 3,
	0, 2, 0, 4, 0, 4, 5, 4, 1, 1,
	1, 3, 3, 1, 3, 10, 13, 0, 2, 3,
	1, 1, 0, 1, 2, 2, 2, 2, 1, 1,
	0, 1, 3, 1, 1, 1, 2, 3, 3, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 0, 1, 0, 1, 1, 0, 1, 4,
	1, 0, 3, 7, 7, 1, 1, 3, 7, 1,
	3, 11, 3, 2, 0, 3, 1, 2, 2, 3,
	2, 6, 2, 1, 2, 2, 3, 6, 4, 2,
	3, 5, 5, 5, 2, 5, 5, 2, 2, 2,
	0, 1, 1, 3, 4, 10, 11, 12, 9, 10,
	5, 3, 1, 5, 9, 7, 11, 3, 3, 0,
	2, 4, 3, 3, 1, 6, 1, 3, 1, 2,
	0, 1, 2, 3, 0, 1, 3, 3, 2, 2,
	1, 1, 1, 4, 0, 3, 0, 4, 0, 3,
	0, 2, 2, 2, 0, 1, 1, 2, 2, 0,
	3, 3, 2, 1, 1, 2, 2, 5, 8, 4,
	1, 0, 1, 2, 2, 1, 2, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 1, 2,
	3, 1, 4, 2, 3, 2, 2, 4, 7, 3,
	4, 6, 5, 7, 5, 5, 3, 3, 0, 2,
	2, 2, 2, 1, 1, 1, 8, 10, 11, 8,
	11, 5, 4, 2, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 3, 0, 1, 8,
	11, 3, 6, 6, 5, 3, 4, 1, 0, 1,
	3, 17, 20, 16, 19, 4, 2, 0, 1, 0,
	1, 0, 1, 3, 2, 4, 2, 3, 1, 0,
	2, 0, 1, 1, 0, 2, 1, 0, 9, 6,
	6, 8, 6, 8, 5, 7, 2, 6, 7, 4,
	4, 5, 2, 4, 6, 6, 8, 6, 7, 8,
	9, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	7, 8, 9, 6, 8, 6, 8, 6, 6, 8,
	8, 4, 7, 3, 0, 7, 10, 1, 1, 1,
	1, 1, 2, 3, 0, 3, 0, 3, 0, 1,
	0, 2, 0, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 3, 2, 2,
	2, 2, 1, 1, 0, 2, 4, 2, 1, 2,
	1, 2, 3, 2, 2, 2, 1, 0, 2, 1,
	1, 0, 1, 3, 1, 0, 1, 1, 1, 1,
	1, 2, 3, 2, 2, 1, 2, 15, 17, 3,
	1, 0, 4, 1, 0, 4, 1, 0, 2, 2,
	3, 0, 1, 1, 4, 4, 5, 1, 0, 3,
	0, 3, 0, 3, 0, 3, 0, 4, 0, 3,
	0, 1, 0, 6, 7, 3, 6, 3, 1, 3,
	1, 1, 4, 2, 1, 3, 1, 3, 4, 8,
	11, 7, 10, 2, 2, 0, 10, 3, 2, 0,
	1, 3, 1, 1, 3, 3, 5, 6, 4, 5,
	4, 1, 1, 3, 3, 1, 2, 4, 4, 2,
	3, 5, 5, 1, 3, 1, 0, 1, 2, 3,
	2, 4, 2, 3, 0, 2, 0, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 8,
	8, 8, 2, 4, 4, 4, 2, 2, 2, 2,
	3, 1, 3, 1, 2, 6, 7, 1, 0, 1,
	0, 1, 0, 1, 1, 0, 1, 5, 1, 0,
	1, 0, 1, 0, 3, 3, 5, 1, 3, 3,
	4, 5, 2, 2, 0, 2, 2, 1, 1, 1,
	0, 1, 0, 2, 2, 5, 4, 2, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 3,
	1, 3, 3, 3, 2, 0, 4, 2, 5, 3,
	2, 0, 1, 3, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 3, 2, 4, 4,
	0, 4, 4, 3, 4, 1, 5, 3, 4, 5,
	5, 1, 5, 1, 3, 2, 3, 0, 1, 3,
	0, 3, 1, 3, 1, 2, 0, 2, 3, 1,
	3, 2, 0, 3, 5, 6, 4, 6, 4, 3,
	2, 1, 0, 3, 2, 1, 0, 5, 1, 0,
	2, 2, 2, 1, 1, 0, 1, 1, 1, 1,
	0, 4, 2, 1, 2, 2, 4, 1, 3, 2,
	2, 1, 2, 3, 2, 4, 1, 0, 1, 0,
	2, 1, 0, 2, 5, 7, 2, 1, 2, 4,
	3, 5, 0, 1, 3, 5, 1, 2, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	6, 6, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 3, 0, 5, 4, 1, 2, 1,
	4, 1, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 2, 5, 1, 4, 2, 5, 1, 4, 3,
	3, 0, 1, 2, 4, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 1, 0,
	1, 4, 1, 3, 3, 3, 5, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 3, 3, 3, 2, 2,
	3, 5, 4, 6, 3, 5, 4, 6, 4, 6,
	5, 7, 3, 3, 3, 3, 3, 4, 3, 2,
	4, 2, 3, 3, 4, 3, 4, 3, 4, 5,
	6, 6, 7, 6, 7, 6, 7, 3, 4, 4,
	1, 3, 1, 3, 3, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 3, 5,
	6, 6, 7, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 6, 1, 1, 1, 1, 1, 1, 2,
	1, 5, 5, 6, 3, 1, 1, 1, 2, 2,
	2, 4, 3, 5, 6, 8, 6, 5, 4, 3,
	2, 2, 4, 1, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 6, 6,
	8, 8, 6, 4, 6, 6, 6, 4, 1, 3,
	3, 3, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 3, 3, 3, 4,
	3, 4, 3, 4, 3, 4, 4, 3, 6, 5,
	5, 5, 4, 4, 3, 4, 3, 5, 0, 5,
	0, 2, 0, 1, 3, 3, 2, 2, 0, 6,
	1, 0, 3, 0, 3, 3, 3, 0, 1, 4,
	2, 2, 2, 2, 2, 3, 2, 2, 3, 0,
	4, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 1, 1, 1, 2, 1,
	2, 2, 3, 1, 2, 3, 2, 3, 2, 3,
	1, 0, 1, 3, 1, 3, 3, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 3, 1, 2, 3, 0, 3, 3, 2, 2,
	1, 2, 2, 3, 2, 1, 1, 1, 5, 1,
	2, 4, 2, 0, 1, 0, 3, 5, 1, 0,
	1, 2, 1, 0, 1, 3, 3, 2, 1, 1,
	1, 1, 1, 3, 1, 3, 3, 1, 1, 1,
	1, 5, 3, 1, 1, 3, 1, 1, 1, 1,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 7, 1,
	7, 5, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int16{
	-1000, -1, -2, 669, -3, -225, -128, -125, -87, -85,
	-132, -133, -111, -134, -127, -156, -161, -142, -143, -144,
	-157, -163, -224, -233, -234, -235, -236, -245, -229, -177,
	-226, -227, -4, -72, -74, -88, -110, -112, -126, -136,
	-135, -137, -145, -153, -148, -131, -79, -158, -162, -174,
	-228, -230, -231, 33, 32, 107, 85, 166, 138, 148,
	220, 423, 475, 487, 440, 153, 463, 445, -168, -169,
	509, -73, -86, -160, -159, 78, 139, 184, 326, 455,
	593, 515, 53, 158, -7, -15, -33, -19, 30, 49,
	-75, -76, -77, -78, 67, -95, -90, -105, -96, -89,
	-92, -93, -101, -728, 110, -642, -113, -117, -152, -115,
	-124, -732, 174, 241, -138, -139, -140, 405, -146, -147,
	466, -149, -150, -151, 469, 175, -81, -80, 168, -269,
	-271, -165, -164, -166, -232, -175, -176, -178, -179, -180,
	-181, -183, -184, -186, -215, -187, -188, -189, -190, -191,
	-192, -193, -197, -218, -194, -195, -196, -199, -198, -200,
	-205, -201, -202, -203, -204, -206, -207, -209, -210, -211,
	-212, -213, -214, -216, -217, -208, -219, -185, -220, 583,
	532, 87, 479, 21, -8, -9, -10, -11, -12, -13,
	-14, -18, -17, -66, -5, -6, -20, -97, -91, -94,
	-98, -99, -100, -109, -102, -103, -104, -641, -114, -116,
	-119, -121, -122, -118, -120, -123, 464, 640, -272, -270,
	666, 645, 600, -182, -23, -28, -24, -25, -27, -29,
	-26, -30, -31, -32, -51, -56, -53, -54, -52, -55,
	-57, -58, -59, -60, -61, -62, -63, -64, -65, -35,
	-41, -42, -36, -37, -38, -39, -40, -43, -44, -45,
	-46, -47, -48, -49, -50, -21, -22, -34, -67, -68,
	-70, -69, -71, 627, 636, -275, -273, -274, -282, 501,
	608, 555, 669, 669, 669, 669, 669, 669, 669, 669,
	669, 669, 669, 669, 669, 669, 669, 669, 669, 669,
	669, 669, 669, 669, 669, 669, 669, 669, 669, 669,
	669, -378, 2, -354, -360, -361, -362, -353, -323, -609,
	-614, 4, -606, -612, 183, 257, 256, 258, 365, 21,
	22, 24, 23, 25, 26, 27, 28, 30, 31, 41,
	43, 44, 45, 47, 48, 49, 50, 51, 52, 53,
	57, 59, 63, 64, 65, 66, 67, 68, 69, 73,
	78, 79, 84, 85, 86, 87, 88, 89, 90, 91,
	97, 94, 95, 96, 98, 99, 101, 103, 104, 105,
	106, 107, 108, 109, 111, 112, 113, 115, 116, 117,
	125, 126, 127, 128, 129, 131, 138, 132, 139, 142,
	136, 141, 137, 143, 144, 146, 147, 148, 151, 152,
	153, 155, 156, 157, 159, 160, 161, 163, 164, 166,
	167, 168, 171, 169, 172, 170, 173, 174, 175, 176,
	177, 180, 181, 189, 190, 191, 196, 198, 199, 200,
	202, 203, 206, 207, 208, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 221, 225, 227, 228, 229, 230,
	231, 232, 233, 239, 240, 241, 243, 244, 245, 246,
	247, 251, 252, 253, 254, 261, 263, 269, 270, 275,
	271, 276, 277, 279, 283, 284, 285, 286, 287, 288,
	289, 291, 293, 292, 297, 295, 299, 300, 303, 304,
	305, 306, 307, 308, 312, 313, 309, 314, 315, 317,
	318, 321, 319, 322, 323, 320, 324, 327, 328, 329,
	330, 331, 332, 333, 334, 335, 336, 337, 338, 325,
	326, 341, 339, 343, 344, 345, 346, 347, 362, 364,
	357, 358, 359, 351, 352, 348, 353, 349, 350, 354,
	355, 361, 356, 367, 368, 369, 370, 373, 237, 262,
	375, 376, 379, 381, 398, 384, 385, 386, 389, 390,
	393, 396, 397, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 410, 411, 413, 414, 415, 417, 418,
	419, 421, 423, 424, 426, 427, 428, 430, 431, 432,
	433, 434, 435, 436, 437, 439, 440, 442, 441, 443,
	445, 447, 448, 449, 455, 456, 463, 457, 459, 460,
	461, 462, 464, 465, 466, 467, 468, 469, 473, 471,
	472, 474, 475, 477, 478, 479, 480, 481, 483, 485,
	486, 490, 491, 494, 492, 512, 513, 535, 487, 488,
	489, 493, 495, 496, 497, 498, 500, 499, 504, 502,
	503, 505, 506, 507, 509, 511, 514, 515, 517, 518,
	519, 520, 521, 522, 523, 526, 528, 529, 530, 531,
	532, 533, 554, 534, 536, 540, 541, 542, 543, 537,
	538, 553, 545, 546, 547, 548, 550, 551, 556, 557,
	558, 559, 560, 561, 563, 564, 566, 574, 587, 575,
	576, 577, 578, 580, 583, 584, 585, 586, 572, 588,
	589, 592, 593, 594, 598, 595, 599, 596, 597, 600,
	602, 605, 606, 607, 614, 612, 613, 615, 616, 618,
	619, 617, 621, 622, 623, 628, 629, 631, 632, 633,
	37, 54, 55, 58, 60, 62, 74, 75, 76, 80,
	133, 134, 165, 178, 179, 192, 209, 210, 222, 224,
	234, 235, 236, 260, 264, 265, 267, 273, 296, 372,
	374, 391, 395, 412, 416, 420, 422, 438, 482, 510,
	524, 539, 544, 567, 568, 569, 570, 579, 581, 608,
	609, 610, 620, 630, -378, 2, -354, 382, -347, 2,
	-323, -323, 423, 29, 2, 29, 411, 503, 558, 560,
	2, -671, -423, 551, 2, 29, -326, -323, 110, 220,
	501, -347, 2, -671, 220, -423, 26, 551, 2, -323,
	2, 396, 177, 206, 23, 28, 71, 82, 105, 151,
	176, 201, -731, 398, 431, 485, 505, 553, 564, 580,
	2, 613, 318, 502, 555, 251, 128, 585, 561, 493,
	-682, 490, 491, 396, 429, 477, 223, 601, -327, 2,
	487, -323, 318, 2, 669, 101, 79, 482, 506, -171,
	2, 308, 575, -172, -173, -170, 567, -593, 493, 477,
	341, -323, 669, 669, 669, 29, -336, 2, -323, -336,
	2, -237, 2, -336, -734, -244, -243, -242, 22, 456,
	191, 289, 204, 242, 346, 426, 202, 51, -237, 2,
	555, 251, 493, 128, 551, -358, 658, -360, 561, 2,
	-222, 506, 534, 230, 50, 49, 79, 29, 430, 84,
	403, 129, 135, 160, 586, 221, 551, 251, 252, 284,
	87, 100, 101, -478, 47, 277, 73, 276, 491, -687,
	490, -539, 556, 207, 495, 503, 550, 91, 289, 487,
	575, 577, 110, 602, 478, 633, 435, 436, 548, 449,
	545, 309, 169, 205, 4, 128, 341, 477, 508, 293,
	292, 587, 567, 308, 486, 406, 89, -745, 2, 575,
	-745, 2, 669, 669, 2, 555, 402, 613, 502, 206,
	128, 435, 251, 585, 49, 151, 28, 73, 561, 644,
	493, -682, 641, 642, 318, 135, -664, 2, -663, 4,
	-612, -606, -372, -371, 555, 561, 128, -362, -353, 658,
	-361, 669, 669, 669, 669, 2, 276, 277, 433, 432,
	506, 507, 29, 669, 669, 669, 669, 669, 669, 490,
	177, 2, 561, 176, -696, 23, 28, 71, 100, 105,
	135, 201, 398, 431, 505, 553, 557, 564, 580, -681,
	534, 73, 493, -680, -682, 387, 318, 585, 151, -476,
	128, 308, 218, 594, 560, 558, 591, 142, 263, 597,
	596, 669, 669, 669, 669, -129, 2, 666, 33, 32,
	-128, -132, 153, 515, 509, -262, 555, 268, 2, -323,
	669, 669, 669, 2, 276, 277, 490, 491, 29, 669,
	669, 204, -663, 551, 2, 669, 669, 669, 2, 29,
	276, 277, 490, 491, 268, 2, 73, 496, 669, 669,
	669, 669, 669, 669, 669, 669, 669, 669, 669, 669,
	669, 669, 669, 669, 669, 669, 669, 669, 669, 669,
	669, 669, 669, 669, 669, 669, 669, 669, 669, 669,
	669, 669, 669, 669, 669, 669, 669, 669, 669, -743,
	2, 555, 575, 2, -745, 2, -745, 2, -746, 575,
	630, 669, 669, 669, 669, 669, 669, 669, 669, 669,
	669, 669, 669, 669, 669, 669, 669, 669, 669, 669,
	669, 669, 669, 669, -270, -272, -271, 669, 669, 669,
	669, 669, 669, 669, 669, -222, 506, 2, 79, 29,
	29, -416, -418, 590, 266, 162, 388, -269, -271, 2,
	-641, 587, 506, -591, 2, -511, -615, -513, 656, 657,
	649, 552, 72, -382, 363, 634, -525, 135, 591, 382,
	-614, -514, -527, 165, 398, 482, -440, 256, 8, 9,
	5, 6, 7, -332, -515, -521, 582, 182, 371, -375,
	670, 10, 666, -638, -271, -526, 38, 224, 70, -595,
	-374, -333, -567, 267, -373, -353, -635, -636, 4, -606,
	-607, -596, -570, -578, -577, -574, -573, -575, -581, -323,
	-609, 82, 119, 120, 118, 123, 122, 311, 310, 124,
	121, 508, 601, 71, 37, 234, 235, 273, 372, 236,
	80, -637, 152, -608, 264, 265, 524, 55, 438, 192,
	134, 133, 374, 60, 58, 609, -579, 130, 567, 568,
	569, 570, 209, 210, 62, 178, 179, 395, 420, 544,
	579, 581, 222, 296, 46, 114, 205, 259, 238, 272,
	274, 278, 298, 301, 342, 360, 366, 392, 394, 476,
	516, -749, 610, 539, 74, 75, 197, -643, 441, -644,
	-347, -643, 669, 669, 671, 669, -407, -409, -411, 2,
	29, 149, 666, 2, -544, 2, -545, -549, -271, 290,
	-548, 666, -546, 664, -354, 383, -639, 483, -635, -636,
	-332, -353, -374, 4, -606, -608, 668, -412, 666, 128,
	493, 555, 83, 251, 100, 176, 206, -471, 666, -323,
	29, 382, 571, 671, -671, -423, -408, 428, -523, 666,
	382, 385, 204, 385, -671, 64, 98, -721, 234, 2,
	-720, -360, 322, 2, 2, 2, 2, 2, 234, -323,
	555, 127, 288, 2, 2, 2, 2, 2, 2, 2,
	-432, 234, 2, -430, -360, 613, -433, 234, 2, -430,
	-431, 234, 2, -430, -477, 2, 93, -337, 234, 2,
	-323, -363, 234, 2, -358, -323, 234, 2, -369, 234,
	2, -366, -323, -601, 234, 2, -599, 4, -606, 124,
	508, -511, 2, -158, 2, 64, -323, 613, 2, 512,
	2, 666, -171, 2, 76, 575, 46, 506, -172, 2,
	-497, 2, -498, -319, -320, -321, -556, -322, 275, 427,
	437, 637, 140, 363, 633, -723, 204, 648, 571, -591,
	-591, -591, -441, 668, -239, 57, -336, -735, -734, -735,
	-589, 29, -584, 8, -585, 656, 657, -589, -589, -735,
	-735, 2, 2, 2, 2, 2, -323, 2, -222, 2,
	197, 603, 2, 8, 2, 242, -258, -603, 495, 189,
	436, 606, 2, -598, 10, -597, 5, 4, -606, -612,
	-607, -609, 82, 512, 2, 513, 79, -478, 633, 79,
	204, 2, 204, 2, -461, 2, 627, 428, 204, 2,
	2, -669, 2, 382, 221, 204, 2, 204, 2, 204,
	2, 569, 204, 2, 204, 2, -221, 507, 576, 554,
	432, 277, 2, -158, 624, -141, 197, 277, 276, -511,
	624, 2, -688, 197, 491, -511, 2, 574, 286, 170,
	204, -461, 2, 204, 2, 204, 2, 204, 2, 5,
	2, 43, 433, 535, 2, 275, 427, 535, 2, 533,
	2, -354, 555, 613, 502, 128, 252, 499, 206, 29,
	2, 490, 177, 2, 2, 94, 95, 204, 2, 204,
	2, 219, 204, 2, 449, 204, 555, -442, 668, -442,
	633, 2, -496, -497, 2, -549, 234, -354, 2, -351,
	-594, 4, -606, -612, -607, -613, 29, 32, 33, 34,
	36, 38, 39, 40, 42, 61, 70, 71, 77, 81,
	83, 93, 100, 110, 118, 119, 121, 120, 122, 123,
	124, 135, 140, 145, 149, 150, 154, 158, 162, 182,
	184, 197, 201, 204, 220, 223, 226, 242, 255, 266,
	268, 290, 294, 302, 310, 311, 363, 371, 377, 382,
	383, 387, 388, 409, 425, 444, 470, 501, 508, 527,
	549, 555, 565, 571, 573, 582, 590, 591, 601, 603,
	611, 624, 625, 626, 627, -614, 2, -549, 234, 2,
	-357, 234, -549, -360, 2, -720, 2, -337, 2, -511,
	-675, 563, 172, 457, 2, -379, 234, -354, -356, -360,
	-358, 2, 490, -603, 2, 2, 2, -511, 2, -514,
	2, -525, 29, -366, 2, -599, 234, 2, 29, 29,
	613, 428, 268, 571, 671, -429, -371, -372, -590, 4,
	8, -422, -323, 668, -511, 2, -158, -141, 2, -511,
	234, 2, -158, 234, 2, -511, 234, 2, -158, 234,
	2, -323, 2, -683, 2, -722, -603, 234, 98, -323,
	2, 234, -323, 2, 206, -730, 485, 584, 322, 2,
	2, 580, 2, 105, 555, 127, 2, 2, 2, 2,
	2, 2, 2, 555, -342, 2, -323, 197, -558, 268,
	-366, 234, -367, 2, 502, -744, 441, -599, 234, 2,
	461, 613, -358, 234, 2, -358, 251, 270, -337, 234,
	2, 560, 558, 560, 558, 204, 2, 268, 2, 268,
	2, -550, 2, -551, -545, -552, 664, 383, -561, 2,
	-560, -597, 608, -129, 666, -129, 666, 506, 666, -603,
	-354, -354, -511, 2, -158, -141, 2, -511, 2, -158,
	2, -323, 2, -155, -603, -154, 666, 204, 602, -323,
	2, -511, 2, -158, -141, 2, -511, 2, -158, 2,
	-262, 197, 2, 128, 555, -453, -549, -496, 571, -416,
	-418, -222, 512, 2, -276, -451, -278, 197, -483, -484,
	-279, 302, 184, 377, -280, -460, 29, 149, -460, -460,
	64, 667, 667, -723, 587, 11, 12, 81, 43, 656,
	657, 658, 659, 195, 660, 661, 654, 655, 653, 646,
	647, 651, 281, 282, 102, 650, 648, 92, 316, 484,
	185, 186, 187, 188, 458, 249, 35, 250, 14, 15,
	16, -382, 34, 387, 301, 634, 238, 516, 649, 17,
	18, 19, 272, 274, 366, 54, 242, -331, 398, -381,
	552, 72, -511, -511, -511, -511, -511, -511, -511, -511,
	394, 666, -447, -506, 664, -271, 666, 666, 666, 666,
	-590, -271, -511, -525, 667, -438, 666, -271, -525, -520,
	666, 482, 664, 666, -528, -511, 5, 5, 5, 666,
	668, -646, 628, 197, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	422, -572, 666, -571, 666, -571, -571, -583, 614, 666,
	666, -569, 666, 636, 629, 666, -569, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	614, 561, 671, -643, -492, 666, 666, -443, -554, -511,
	658, -443, -443, 382, -435, -511, 114, -464, 278, 342,
	205, 298, 476, 259, -508, 670, -508, -538, 636, -271,
	-546, -353, -271, -548, 666, -544, -538, -130, -590, -110,
	-126, -135, -158, -174, -230, -231, 658, -354, 666, 204,
	666, 668, -594, 204, -422, -337, -366, -354, -373, -374,
	-379, -348, -323, 2, 2, 148, -435, -665, 585, 493,
	29, 4, -612, -606, -372, 502, -371, 555, 128, 177,
	206, -601, -326, 571, 39, -522, -564, -565, -617, 670,
	-616, -567, -576, 412, 416, -596, 267, 4, -606, -608,
	264, 265, 524, 55, 438, 192, 134, 133, 374, 60,
	58, 609, 567, 568, 569, 570, 209, 210, 62, 610,
	539, 74, 75, -665, 585, 493, 29, 502, 197, -601,
	197, 204, -601, 2, -603, 2, -299, 671, 69, 467,
	165, -703, 666, 2, 165, 2, 2, 2, -323, -299,
	165, 671, -432, 234, -299, 165, -299, 165, -380, 234,
	-379, -299, 165, -299, 671, 165, 165, -299, 671, 165,
	668, 671, 165, -601, 2, -477, -593, -435, 39, -497,
	2, 135, 4, 5, -747, 671, 300, -385, 315, 362,
	229, 383, 631, 375, 140, -602, 5, 4, -521, -533,
	135, 308, 267, -584, -586, 9, -587, 656, 657, -592,
	-591, 117, 668, -594, -240, 262, 41, -336, -336, -735,
	-735, 8, 8, -735, -735, -336, -336, 555, 279, -154,
	-603, 204, 242, -249, 627, -603, -603, -603, -603, -593,
	29, 513, 2, -221, 507, 576, 95, 513, 2, -354,
	555, 128, 251, 85, -692, 197, 2, -323, -670, 197,
	-666, 477, 493, 585, -665, -670, -354, 128, -354, 128,
	-354, 128, -354, -354, 2, 2, 2, 2, 2, 90,
	491, 490, 2, -158, -511, 2, 90, 2, 49, 529,
	-688, 197, 2, 574, 2, 574, 2, -323, -323, -323,
	-323, 377, 534, 300, 627, -354, -354, -357, -360, -355,
	-360, 204, 252, -360, 495, 556, 586, 491, 177, -511,
	2, 98, -736, 2, 204, 197, 2, 555, 251, 555,
	251, 128, 204, 79, 128, 29, 204, 555, 488, 668,
	4, -296, 459, 509, 397, -295, 25, 30, 153, 253,
	347, 606, 171, -397, 254, 464, -394, 402, 165, 528,
	595, -675, -678, 489, 563, 172, 457, 96, 375, 509,
	397, 459, 165, -457, -459, 39, 126, 347, 396, 65,
	245, 320, 321, 532, 465, 620, 165, 509, 397, 459,
	-711, 459, 509, 397, -698, -713, 347, 66, 472, 538,
	240, 531, 622, 177, 500, 297, 363, 108, 483, 546,
	399, 397, -16, -312, 25, 153, -314, -307, 509, 30,
	-678, 106, 459, 645, 640, 464, 408, 547, 425, -678,
	-675, 295, -677, 623, 361, -298, 528, 595, -675, -482,
	-678, 489, 459, -297, 363, 621, -399, -394, 402, 165,
	670, 25, 153, 459, 509, 397, -726, -727, 30, -590,
	2, -294, 242, -293, 25, -289, -288, 25, 153, 509,
	598, -167, -147, -166, 464, 509, -167, 2, 459, 397,
	-672, -344, -640, 242, 627, 165, -344, -344, -549, 234,
	-692, 197, 2, -685, -154, 291, 5, 10, -154, -429,
	671, 671, -594, 658, 165, 165, 165, 165, 277, 197,
	363, -722, 2, 204, 363, 627, -715, 2, -360, -731,
	2, 2, 2, 2, 2, 2, 2, -354, 234, -414,
	382, -661, -662, -733, 555, -249, -603, 363, 46, -357,
	234, 2, 613, -672, 363, -680, -359, 234, -354, 39,
	666, 363, 2, -477, 2, 251, -640, 363, -550, -376,
	-354, -545, -376, 509, -347, 39, -508, -354, 667, 671,
	-561, -561, -603, -249, 204, 666, -262, 627, 627, 277,
	-557, 671, -556, 242, -604, -603, -155, -603, 204, 277,
	-603, -661, -337, 2, -354, 2, -299, 671, -327, -276,
	-451, -593, -452, -451, -277, -276, -279, 197, 437, 596,
	347, 514, 283, -484, -483, 29, -511, -488, 191, 346,
	-511, -486, -513, 656, 657, -585, -587, -434, 375, -270,
	-270, -270, -419, -540, -511, 425, 258, -592, -723, -566,
	-564, -564, -352, -594, 567, -511, -511, -511, -511, -511,
	-511, -511, -511, -511, -511, -511, -511, -511, -511, -511,
	-511, -511, -511, -511, -511, -511, -511, -511, -511, -511,
	-511, -511, -511, -511, -511, -511, -511, -511, -511, -511,
	-511, 301, 238, 516, 54, 242, -511, 571, -511, -511,
	-511, -511, 339, 363, 371, 582, 182, 592, 149, 375,
	-750, 549, 42, -518, -271, -439, 666, -532, 36, 527,
	29, -525, 666, 2, -506, -511, -507, -383, -381, -323,
	656, 657, 658, 659, 660, 661, 646, 647, 648, 14,
	15, 16, 651, 655, 653, 654, 195, 102, 650, 316,
	484, 92, 185, 186, 187, 188, 281, 282, 17, 18,
	19, 35, 649, -436, -435, -435, 667, 611, 29, 149,
	658, 2, 667, 671, 39, 667, -511, -436, -524, -520,
	-435, -531, -530, 624, -472, -473, 632, 325, 131, 232,
	323, -474, 498, -588, 8, -594, 658, -647, 190, 223,
	666, 667, 2, 667, 2, 667, -511, 2, 667, -511,
	2, 667, -511, 2, 667, -511, 2, 667, 2, 667,
	2, -511, -511, -511, -511, -511, -511, -511, -435, 8,
	-588, 666, -588, -588, -588, 567, 567, -588, -588, -588,
	-580, 412, 413, 414, 415, 303, 304, 305, 306, 416,
	417, 418, 419, 331, 332, 333, 334, 327, 328, 329,
	330, 335, 336, 337, 338, 214, 215, 216, 217, 210,
	211, 212, 213, -580, -466, 2, -582, -435, 4, 632,
	325, 131, 232, 323, 498, 5, -466, 2, -467, 2,
	-511, -435, -468, -512, -513, 656, 657, 649, -382, -469,
	2, -511, -436, -511, 61, 294, 573, -470, -511, 204,
	-435, -435, 2, -435, 2, -514, 2, -644, 39, -493,
	-323, -435, -425, 671, 204, 39, -611, 4, -610, 44,
	66, 108, 137, 144, 177, 240, 261, 271, 297, 399,
	471, 472, 500, 531, 546, 578, 622, 510, -425, -425,
	666, 667, 671, -465, 227, 319, 314, 270, -465, -544,
	-464, 278, -462, 392, -462, -462, -538, -338, 664, 673,
	-594, -538, -535, -534, 39, -347, 389, -538, -538, 668,
	667, -537, -536, 39, -347, 665, -659, 666, 669, 669,
	669, 669, 669, -354, 666, -435, -594, 668, 536, 2,
	667, 272, 272, 272, 272, 272, 382, 483, 667, 571,
	-667, -363, -369, 503, 556, 207, -429, 671, -429, -422,
	98, -721, 627, -601, -128, 384, 667, 671, -424, 38,
	664, 668, -588, 2, 2, -473, 666, 204, -667, -369,
	556, 503, 207, 2, -671, 551, -423, -601, 571, -720,
	-721, -704, 667, -706, -714, -699, -708, 242, 391, 260,
	611, -595, -564, 4, -606, -323, 2, -432, -360, -299,
	165, -433, -431, -299, 671, 165, -337, -358, -363, -323,
	-366, -369, -323, -599, -601, -299, -359, -723, 667, 575,
	-498, -384, 437, 526, 460, 504, 551, 9, 9, 671,
	-594, -241, 492, 347, -336, -336, -336, -336, -354, 197,
	-603, -154, -248, 386, -247, -323, 5, -249, -249, -249,
	-249, 2, 2, 2, 2, -461, -354, -337, -379, -354,
	-365, 242, 29, -682, 668, -601, -601, -369, -370, -368,
	-323, -363, -461, -337, -461, -337, -461, -337, -461, -461,
	-158, -158, -511, -511, 534, 2, 506, 197, 197, 668,
	-461, 668, 8, -415, 470, 5, -354, 204, 2, 99,
	-603, 2, 435, 128, 555, 402, 251, -354, -379, -354,
	-379, -337, 128, -337, 129, 128, -354, 4, 671, -724,
	100, 571, 83, 666, 493, -316, 309, 571, -502, 234,
	83, -618, 100, -340, -619, -323, 77, 591, 425, 201,
	163, -724, 100, 425, -724, 100, 2, 253, 100, 509,
	534, 666, 29, 64, -549, 43, 43, 29, -676, -677,
	295, 204, 633, 555, 251, 493, 571, 571, -549, -459,
	-564, 126, 320, 321, 64, -589, -589, 64, -589, -589,
	-589, 627, -589, 627, -357, -549, 493, 571, 571, -729,
	-713, 467, 509, 571, 493, 571, 144, 382, 371, 500,
	137, 271, 297, -533, -533, -323, 571, 447, 545, 447,
	545, 499, -307, -309, -172, 499, 545, 309, 571, 571,
	-172, 29, -222, 468, 135, -748, 648, 447, 295, -677,
	571, 204, 671, 43, 43, 29, -676, 204, 571, 621,
	-379, -338, 607, 45, 607, 45, 607, 571, 45, 493,
	571, 671, 45, -291, -290, 509, -293, -603, -292, 345,
	-288, -661, -661, -248, -422, 79, 571, 571, -16, 509,
	-673, -328, 113, 353, 313, 354, 104, 350, 103, 349,
	111, 351, 112, 352, 615, 367, 616, 368, 68, 348,
	324, 355, 530, 356, 619, 369, -329, -330, 156, 404,
	605, 128, -599, -16, -16, 509, 397, 459, 165, -693,
	242, 29, 242, -557, 242, -557, -371, -323, 668, -511,
	-158, -511, -158, 49, 165, 39, 462, 165, 2, 666,
	288, 666, -388, 363, 204, -422, -558, 671, -354, 39,
	165, -599, -458, -457, 363, -359, 234, 2, 165, -744,
	-412, 363, 159, 666, 435, 2, 165, -339, 234, -324,
	-323, -477, -301, 559, 165, -455, 603, -489, -158, 666,
	135, 39, -489, -444, -445, -555, -446, -340, 666, -347,
	-508, -129, -560, 667, 667, 667, -262, -413, -341, -340,
	127, 439, 439, -255, 627, -154, -155, 667, 671, -557,
	242, -155, -603, -249, -249, -557, -557, -549, -452, -277,
	383, 283, 514, -486, -487, -513, 482, 483, -487, 482,
	483, 8, 9, 8, 9, -281, 518, 370, -431, 671,
	-286, 40, 145, 283, -354, -592, 633, 161, -511, -511,
	571, -750, 549, -518, 161, -511, 339, 371, 582, 182,
	592, 149, 375, 204, 666, -512, -512, 667, -437, -511,
	-511, 665, 675, 667, 668, 667, -418, 671, -416, -511,
	-435, -435, 667, 668, -435, -422, 665, 665, 671, 667,
	-529, -530, 154, -511, 571, 571, 571, 571, 666, 667,
	668, -652, 393, 666, 666, -511, 667, 667, 667, 667,
	39, 671, 671, 671, 667, 671, 671, 671, 667, 667,
	667, 671, -588, 667, 667, 667, 633, 633, 667, 667,
	667, 667, 671, 667, 671, 667, 204, 667, 667, -475,
	409, 667, 11, 12, 656, 657, 658, 659, 195, 660,
	661, 654, 655, 653, 646, 647, 648, 92, 316, 484,
	14, 15, 16, -382, 272, 242, -512, -512, -512, -512,
	667, -516, -517, 204, 197, 39, -470, -470, -470, 667,
	204, -435, 667, 667, 666, -645, 318, 363, 667, 671,
	667, -505, -504, 625, -554, -426, 2, -544, -349, -594,
	-505, -505, -435, -511, 278, 278, -463, 603, 382, -465,
	-544, -535, -590, -510, -509, 199, 40, 145, 357, 358,
	359, 237, 200, -535, -347, -492, -535, -535, -594, -538,
	-347, -490, 666, -538, -534, 667, -660, -590, 667, -427,
	-547, -639, -418, 668, -594, -259, -640, -223, 5, 371,
	-223, -223, -223, -223, -354, -601, 571, 571, 242, 242,
	242, -429, -422, 26, -691, 627, 410, -564, 664, 665,
	8, -594, -588, -601, 204, 204, 242, 242, 242, 382,
	-671, 204, -599, -299, 667, 671, -699, -708, -714, -708,
	391, 2, -299, -432, -299, -299, -379, -380, -299, -299,
	-299, -456, 627, -591, -497, 589, 88, 437, 567, -591,
	125, 492, -249, 555, 242, -249, 671, 666, 648, 648,
	670, 493, 478, -601, -323, 668, -461, -461, -461, 506,
	506, -323, -323, 197, -422, -354, 2, -350, -594, -337,
	-354, -351, -379, 197, 197, -337, -337, -295, 459, 509,
	-340, -340, -354, -266, -265, -263, -323, 5, -364, -323,
	218, 448, -599, 363, -502, 234, -300, 363, 234, -348,
	-564, 666, -479, 629, 283, 283, 603, -340, -348, 283,
	234, -340, 234, -348, 2, -348, -674, 437, 376, -511,
	-264, -263, 64, -395, 307, 435, 364, -296, 459, 509,
	397, -158, -158, -158, 666, -723, 603, 148, -354, -379,
	-354, -364, -599, -359, 509, 397, 459, 360, -373, -589,
	-589, -589, -457, 509, 397, 459, -364, -599, -357, -323,
	-364, -599, 382, 371, 382, 137, 271, -599, -306, 234,
	-323, 447, -306, 234, 447, 447, 447, 447, 218, 448,
	493, -337, 447, 633, 48, -748, 571, 204, -511, -511,
	-297, -158, -158, -158, 666, -338, -298, -482, 459, 5,
	234, -340, 5, -340, 234, 5, -323, -340, -364, -599,
	-727, 25, 153, -340, 671, 287, 268, 627, -684, 205,
	490, 442, -294, 648, -249, -364, -599, -328, 404, -685,
	371, 5, 10, 599, -337, -672, -344, 493, 571, 571,
	-549, -689, -690, 220, 475, 493, 478, -154, -252, 627,
	-154, -246, 246, 658, -664, -603, -603, 375, -323, -701,
	-702, -705, -706, -323, -386, -389, -387, -340, -503, -502,
	-622, -623, -618, 301, 256, 257, 591, 270, 183, 100,
	-267, -268, 629, 627, 165, -377, -354, 664, -249, -662,
	-559, 183, 501, -366, -367, 165, -412, 363, -599, 613,
	39, 165, 666, 2, 2, -358, 382, 363, -339, 234,
	-302, 155, -748, -337, -505, -426, -454, -495, 470, 382,
	-413, 608, -347, -454, -428, 671, 204, 648, 668, -413,
	-553, 658, -129, -129, -249, 666, -603, 667, 671, 668,
	666, 648, 648, -257, 386, -256, 157, 285, 269, 520,
	521, 522, 523, 147, 519, 132, 344, 247, 561, 494,
	612, -557, -603, -255, -155, -557, 242, 204, -82, 627,
	596, -487, 383, 312, -540, -287, 635, -354, 670, -511,
	-511, 161, 161, -511, -512, -512, -511, 161, 204, 666,
	-511, -522, 34, 34, 667, 671, -507, -511, -381, 667,
	611, -418, -418, 667, 658, -594, 670, 667, -520, 158,
	-511, 565, 325, 232, 323, -474, 323, -474, -474, -588,
	5, -594, 658, -653, -343, 666, -323, 625, -417, 388,
	667, -566, -564, -511, -511, -511, -511, -511, -588, 667,
	-569, -569, -584, -584, -511, -516, -511, -566, -564, -512,
	-512, -512, -512, -512, -512, -512, -512, -512, -512, -512,
	-512, -512, -512, -512, -512, -512, -512, -512, -512, 149,
	363, 375, -512, -517, -516, -511, -511, -564, 667, 667,
	667, -435, -128, 666, 318, -323, -448, 223, -511, -557,
	671, -448, -448, 667, -544, -544, 666, -511, 278, 665,
	671, 674, 648, 648, -492, 668, -534, -490, -491, -494,
	-323, -535, 665, 667, 671, 667, 671, -537, 667, -594,
	-505, -261, -260, 146, 57, 115, 143, 371, 379, 203,
	228, 434, 161, 198, 155, 272, -691, -601, -601, 493,
	493, 493, 385, 220, 5, 8, 664, 665, 668, 667,
	-601, -601, 493, 493, 493, -665, 585, 493, 29, 204,
	-601, -706, -708, -708, -299, -299, 127, 347, -511, -238,
	627, 629, -354, -154, -247, -248, -603, -603, 658, -364,
	-365, 658, -461, 5, -401, -400, 402, 375, -401, 482,
	482, 571, 571, 667, 671, 648, 64, 242, 165, 363,
	605, 363, -619, 163, -624, -511, 666, 251, 666, 666,
	2, -283, -284, -285, 153, 509, 25, -725, 2, 603,
	165, -299, 165, -299, 631, 667, 671, -395, 666, 666,
	571, 493, -316, 571, 627, -435, -511, -250, 135, -593,
	-678, 670, -678, 670, 493, 571, 571, 493, 571, 571,
	176, 261, 371, 363, -323, 165, -323, 234, -748, -323,
	-678, -678, 242, 627, 181, 181, 633, -306, -511, -511,
	197, 571, 627, -435, 571, -568, 52, 27, 363, -358,
	-299, 165, 571, 571, 585, 509, -290, -603, -154, -253,
	157, 474, 147, 285, 247, 49, 385, -685, -154, -685,
	-603, 371, -16, -364, -599, -359, 509, 397, 459, -671,
	-671, 220, -369, -693, -557, -254, 386, -253, -557, -252,
	204, 268, -323, 627, 667, 671, 135, 648, 2, 667,
	667, 671, 671, -625, -300, -354, 666, -323, 251, 256,
	257, -346, -324, 39, 379, 379, 666, -354, -106, -107,
	627, -108, 572, -556, 603, -504, -590, -345, -323, -443,
	46, -357, 39, 165, -672, -359, -158, -359, -562, -563,
	5, 39, -354, 165, 382, 363, -303, 293, -748, -598,
	-640, -418, -454, -443, 365, 97, 667, -505, -445, -426,
	-511, 2, 667, -603, -249, -262, -341, 2, -604, -603,
	-603, 671, 666, 648, 648, 648, 648, 648, 648, 648,
	-255, -557, -255, -155, -158, 386, 383, 191, 289, -286,
	-338, -511, -511, 161, 34, 34, -511, -511, -522, 667,
	-511, -511, -435, 665, 5, -511, 667, 667, 8, -511,
	667, 668, -654, -323, -511, 667, 64, 667, 667, 671,
	671, 667, 667, 667, 667, 667, 667, 667, -517, 204,
	149, 375, 666, 667, 667, -128, -519, 226, 64, -544,
	-519, -519, -463, -422, -544, -509, -338, 664, -338, 664,
	-594, 667, 671, -564, -590, -547, 668, -260, 648, -603,
	-603, 2, 2, 5, 5, 434, 363, 371, 5, -223,
	-691, -691, 627, -369, -369, -369, 385, 665, 2, 664,
	-594, -369, -369, -369, 204, -667, -369, 556, 207, -601,
	127, 197, 231, 231, -249, -249, 667, -351, 555, 251,
	666, 666, -340, -340, -265, -591, 555, 482, -306, 425,
	-502, 165, 165, -626, 100, -628, 81, 183, 110, 363,
	371, 591, 425, 77, 135, 382, 444, -738, -739, -740,
	39, 638, 639, 667, -420, -541, -639, 666, -323, -420,
	-422, 363, 542, 135, 382, 363, 135, 382, 621, 127,
	2, 585, 84, -340, -348, -263, -422, -422, -354, -364,
	-599, 173, 667, 671, 648, 2, 658, 658, -364, -599,
	-359, -364, -599, -357, -323, 261, 165, 608, -306, 165,
	-306, 608, -306, 400, 181, 571, -158, -511, 173, 667,
	-338, 5, 5, 165, -335, 81, -340, 5, -340, -358,
	127, 648, 648, 648, 648, 648, 31, -685, -247, 627,
	493, 571, 571, 382, 382, 385, -689, -690, -252, 671,
	666, -252, -604, -154, 382, 2, 472, -705, -511, -511,
	-402, 253, -340, -623, -620, -621, 425, -503, -627, -629,
	183, 425, -390, -420, 666, -339, 666, -323, 666, -158,
	2, -266, 666, -388, -108, 386, 9, 180, 665, 204,
	-599, -458, -158, -359, -412, -410, 627, -412, 667, 671,
	159, -480, 603, -338, -354, 165, -304, 292, -748, -598,
	-301, -485, -483, 150, 666, 382, -158, -418, 648, 667,
	127, 667, -256, -257, -603, -154, -603, -603, -603, -154,
	-603, -255, -557, -83, -84, 251, 256, 100, 407, -286,
	-511, -511, -511, 667, -418, -594, 658, -648, 402, 667,
	-540, -511, -511, -512, 204, 666, -522, 667, -649, 626,
	-511, -449, -450, -511, 480, 116, 224, -649, -649, 667,
	-590, -590, -494, -603, 2, 2, 371, 2, 2, 2,
	571, 571, 571, 664, 2, 204, 204, 204, -601, 204,
	204, 242, 242, -158, -354, -379, -435, -435, 242, 39,
	447, -502, -348, -348, -352, -345, 183, 234, 371, 621,
	-479, 283, 666, -512, 596, -354, 666, 2, 233, 233,
	31, 64, -741, 140, 255, 667, 671, -542, -334, -323,
	-511, -542, 667, 667, 371, 596, 371, 621, -511, 596,
	-564, 666, -299, -299, 667, 667, -511, 571, -593, 107,
	-591, 2, -678, -306, -422, -422, -678, -337, -511, 197,
	-511, 571, 5, -299, -352, -299, -299, -335, 585, -603,
	-511, 582, 182, -154, -154, 381, -364, -599, -359, -694,
	556, 503, 586, 495, 207, 481, -694, 197, -253, -254,
	-252, -603, -697, 510, -396, -397, 2, -625, 283, -345,
	283, 244, 164, 667, -420, 666, -420, 666, -422, -737,
	627, 667, -386, -267, -107, -668, -376, -412, 39, 347,
	127, 39, 5, 666, 666, -323, 382, 666, -338, -318,
	98, -748, -598, -302, -454, 364, -422, 100, -485, -518,
	-249, 666, -249, 667, -255, 671, 29, 666, 29, 666,
	667, -418, 64, 671, 667, 667, -512, -522, 667, -650,
	-651, -343, 671, 666, 666, 511, 665, 665, 2, -601,
	-601, -601, 2, -601, -601, -601, -601, -601, 493, 493,
	667, 667, -306, 425, -323, -619, -628, -345, 363, -268,
	603, 627, -511, -512, -325, 666, -511, 666, 666, 39,
	135, 255, 141, 239, -501, -742, 109, 543, 243, -541,
	-286, 667, -500, 603, 444, -512, -335, -420, 666, 666,
	666, 648, 204, -158, 666, -568, -299, -358, 648, 571,
	2, 204, -671, 667, -684, -707, -708, -267, 666, -268,
	-391, 86, 101, 136, 233, 208, 252, 534, 540, 29,
	-391, -500, 667, -420, 667, -420, 667, -392, 382, 127,
	347, 667, 39, -505, 39, -158, 127, -158, -562, -420,
	-354, -420, 382, -308, -307, 302, -598, -303, 667, -348,
	-454, -604, -84, -422, -422, -655, 435, 483, 225, -435,
	-419, 667, 671, 39, -450, 2, 2, 2, -691, -691,
	-691, -369, -369, 447, -300, 165, 227, 667, -630, 317,
	-323, 667, -458, -458, 39, 141, 239, -398, -394, 666,
	-287, -542, -268, 227, -354, -679, 603, 667, -404, -403,
	-400, -406, -405, -400, -435, -591, 107, 400, -435, -335,
	-154, -601, -601, 382, -686, 205, -709, -710, -712, 39,
	288, 578, 626, -713, -392, -421, -543, -340, -501, -500,
	667, -398, 667, 87, 127, -402, -158, -158, 2, -410,
	667, 667, -480, 667, -354, -305, -605, 447, 449, -748,
	-304, -505, 150, 667, 667, 667, 667, -656, -657, 54,
	588, 117, -511, -656, -656, -651, -653, 204, 204, 183,
	-499, 636, -631, -634, -633, 643, 517, 205, 401, 667,
	542, 620, 667, 667, -741, -422, -499, -412, -511, -500,
	667, 671, 608, 667, 671, 608, 667, 204, 667, -299,
	-691, -299, -694, -251, 627, 49, -719, -716, 53, 471,
	-712, -700, 5, -598, -317, -316, 667, 671, -398, -501,
	-500, -268, -398, 424, 142, 153, -396, -737, -500, 666,
	-501, 666, -315, -314, -748, -584, -318, 150, 364, 596,
	-249, -658, 163, -657, 421, 196, 482, 421, 196, -658,
	-658, -601, -601, -345, -268, 59, -633, 643, -634, 643,
	596, 142, -505, 667, -630, -268, -403, 242, -405, 204,
	400, 204, 490, -685, 31, 44, -511, -268, -543, -268,
	-398, -501, -505, -268, 483, 483, 2, -267, -392, -501,
	-420, -398, -420, -311, -312, -313, -422, -308, 364, 596,
	509, 117, 223, 566, 347, 34, 648, -632, 347, 467,
	69, 509, -632, -631, 666, 666, -601, 386, -718, -505,
	-268, -398, -481, 363, 621, -505, 2, -392, -398, 667,
	-268, 667, -600, 397, -305, 509, -444, 482, 390, -657,
	-511, 24, 371, 135, -741, -435, -435, -299, -248, 666,
	-717, 158, -3, -716, -481, -505, -268, 621, -481, -317,
	-268, -500, -505, -501, -310, -309, 499, -748, -315, -444,
	-505, 667, 667, -248, 672, -481, -505, -505, -501, -481,
	-398, -599, -311, -505, -393, -394, 571, 667, -481, -481,
	-398, -268, -310, 666, -268, -505, -435, -505, -481, 667,
	-481, -393,
}

var sqlDef = [...]int16{
	-2, -2, 1, 2, 3, 4, 6, 7, 9, 10,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 29,
	31, 33, 34, 35, 37, 39, 41, 43, 44, 45,
	1778, 1780, 743, 744, 746, 747, 748, 750, 751, 753,
	755, 757, 758, 759, 761, 762, 764, 765, 766, 767,
	768, 770, 772, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, 0, 0, 868, 870,
	0, 1760, 1762, 1764, 1766, 0, 0, -2, -2, 0,
	0, -2, -2, -2, 47, 48, 50, 52, 0, -2,
	423, 425, 427, 429, 0, 461, 463, 464, 466, 468,
	469, 471, 473, 475, -2, 0, 664, 665, 667, 669,
	671, 673, -2, 0, 1334, 1336, 1338, 0, 856, 858,
	0, 1341, 1343, 1345, 0, 0, 880, 881, 0, 1881,
	-2, 872, 874, 876, 878, 957, 959, 961, 963, 965,
	967, 969, 971, 973, 975, 977, 978, 980, 982, 984,
	986, 988, 990, 991, 993, 995, 997, 998, 1000, 1001,
	1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021,
	1023, 1025, 1027, 1029, 1031, 1034, 1035, 1036, 1038, -2,
	0, -2, -2, 1774, 54, 56, 58, 60, 62, 64,
	66, 68, 70, 72, 74, 76, 78, 80, 607, 609,
	611, 613, 615, 618, 620, 622, 624, 1939, 675, 677,
	679, 681, 683, 685, 687, 689, 0, 0, -2, 1953,
	0, 0, 0, 1129, 82, 83, 84, 85, 86, 87,
	88, 89, 90, 91, 151, 152, 153, 154, 155, 156,
	157, 158, 95, 96, 97, 99, 100, 101, 102, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 148, 149, 93, 122, 123,
	124, 125, 126, 0, 0, 1912, 1914, 1916, 1918, -2,
	0, 0, 8, 12, 14, 16, 18, 20, 22, 24,
	26, 28, 30, 32, 36, 38, 40, 42, 46, 1779,
	1781, 745, 749, 752, 754, 756, 760, 763, 769, 771,
	773, 728, 729, 732, 2669, 2688, 2689, 2690, 2693, 2694,
	2695, 2696, 2697, 2698, 3235, 3316, 3317, 3318, 3319, 2721,
	2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731,
	2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741,
	2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751,
	2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761,
	2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771,
	2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781,
	2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791,
	2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801,
	2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811,
	2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821,
	2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831,
	2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841,
	2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851,
	2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861,
	2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871,
	2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881,
	2882, 2883, 2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891,
	2892, 2893, 2894, 2895, 2896, 2897, 2898, 2899, 2900, 2901,
	2902, 2903, 2904, 2905, 2906, 2907, 2908, 2909, 2910, 2911,
	2912, 2913, 2914, 2915, 2916, 2917, 2918, 2919, 2920, 2921,
	2922, 2923, 2924, 2925, 2926, 2927, 2928, 2929, 2930, 2931,
	2932, 2933, 2934, 2935, 2936, 2937, 2938, 2939, 2940, 2941,
	2942, 2943, 2944, 2945, 2946, 2947, 2948, 2949, 2950, 2951,
	2952, 2953, 2954, 2955, 2956, 2957, 2958, 2959, 2960, 2961,
	2962, 2963, 2964, 2965, 2966, 2967, 2968, 2969, 2970, 2971,
	2972, 2973, 2974, 2975, 2976, 2977, 2978, 2979, 2980, 2981,
	2982, 2983, 2984, 2985, 2986, 2987, 2988, 2989, 2990, 2991,
	2992, 2993, 2994, 2995, 2996, 2997, 2998, 2999, 3000, 3001,
	3002, 3003, 3004, 3005, 3006, 3007, 3008, 3009, 3010, 3011,
	3012, 3013, 3014, 3015, 3016, 3017, 3018, 3019, 3020, 3021,
	3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029, 3030, 3031,
	3032, 3033, 3034, 3035, 3036, 3037, 3038, 3039, 3040, 3041,
	3042, 3043, 3044, 3045, 3046, 3047, 3048, 3049, 3050, 3051,
	3052, 3053, 3054, 3055, 3056, 3057, 3058, 3059, 3060, 3061,
	3062, 3063, 3064, 3065, 3066, 3067, 3068, 3069, 3070, 3071,
	3072, 3073, 3074, 3075, 3076, 3077, 3078, 3079, 3080, 3081,
	3082, 3083, 3084, 3085, 3086, 3087, 3088, 3089, 3090, 3091,
	3092, 3093, 3094, 3095, 3096, 3097, 3098, 3099, 3100, 3101,
	3102, 3103, 3104, 3105, 3106, 3107, 3108, 3109, 3110, 3111,
	3112, 3113, 3114, 3115, 3116, 3117, 3118, 3119, 3120, 3121,
	3122, 3123, 3124, 3125, 3126, 3127, 3128, 3129, 3130, 3131,
	3132, 3133, 3134, 3135, 3136, 3137, 3138, 3139, 3140, 3141,
	3161, 3162, 3163, 3164, 3165, 3166, 3167, 3168, 3169, 3170,
	3171, 3172, 3173, 3174, 3175, 3176, 3177, 3178, 3179, 3180,
	3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188, 3189, 3190,
	3191, 3192, 3193, 3194, 3195, 3196, 3197, 3198, 3199, 3200,
	3201, 3202, 3203, 3204, 3205, 3206, 3207, 3208, 3209, 3210,
	3211, 3212, 3213, 3214, 730, 731, 1530, 0, 814, 812,
	2652, 815, 2984, 817, 819, 658, 659, 660, 661, 662,
	663, 0, 849, 3089, 830, 1951, 850, 852, 853, 854,
	855, 809, 807, 0, 854, 849, 2726, 3089, 847, 1758,
	1759, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	674, 0, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 587, 1593, 1594, 1595, 1743, 1744,
	3040, 1789, 0, 288, 869, -2, -2, 3199, -2, 911,
	912, -2, -2, 926, 930, 921, 3204, 0, 3043, 3025,
	-2, 933, 1761, 1763, 1765, 1039, 1040, 1041, 2673, 1045,
	1043, 1055, 1056, 1059, 0, 1076, -2, 0, 2722, 3007,
	-2, -2, 1077, 1078, -2, -2, -2, -2, 1057, 1058,
	0, 0, 0, 0, 0, 2089, 2090, 2656, 0, 1033,
	1084, 0, 0, 0, 0, -2, -2, -2, 0, 0,
	0, -2, 0, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, 0, 0, 1200, 0,
	0, 0, -2, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, -2,
	0, 1303, 0, 0, 1087, 1090, 1091, 1092, 1093, 1094,
	1095, 1096, 0, 1173, 1198, 1199, 1209, 1791, 1783, 1786,
	1784, 1785, 49, 51, 53, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 298, -2,
	-2, -2, -2, 0, 0, 3095, 2785, 2620, 2690, 2623,
	2618, 424, 426, 428, 430, 431, 0, 0, 0, 0,
	0, 0, 0, 462, 465, 467, 470, 472, 474, -2,
	0, 476, 0, 0, 586, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 653, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1408, 1400, 1401, 1660, 0, 0, 0,
	-2, 666, 668, 670, 672, 733, 734, 0, 1940, 1940,
	741, 742, -2, -2, 0, 0, 0, 0, 385, 376,
	1335, 1337, 1339, 1340, 0, 0, 0, 0, 0, 857,
	859, 0, 0, 3089, 348, 1342, 1344, 1346, 1347, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 873, 875,
	877, 879, 958, 960, 962, 964, 966, 968, 970, 972,
	974, 976, 979, 981, 983, 985, 987, 989, 992, 994,
	996, 999, 1002, 1004, 1006, 1008, 1010, 1012, 1014, 1016,
	1018, 1020, 1022, 1024, 1026, 1028, 1030, 1032, 1037, 0,
	1573, 1941, 1791, 1768, 1769, 1770, 1775, 1777, 1771, 1772,
	1773, 55, 57, 59, 61, 63, 65, 67, 69, 71,
	73, 75, 77, 79, 81, 608, 610, 612, 614, 616,
	619, 621, 623, 625, -2, 1910, 1911, 676, 678, 680,
	682, 684, 686, 688, 690, 860, 0, 863, 0, 1089,
	862, -2, 0, 1945, 1945, 1945, 0, 0, 1911, 1909,
	0, 0, 0, 866, 867, 937, 938, 2232, 0, 0,
	0, 0, 0, 0, 0, 0, 2492, 2320, 0, 939,
	-2, 2353, 2355, 3173, 2956, 3199, 2491, -2, 2357, 2358,
	2359, 2360, 2361, 0, 2363, 2364, 2365, 2366, 2367, 2368,
	0, 2370, 0, 2375, 2376, 2377, 0, 3180, 2595, 2683,
	-2, 0, 0, 3187, 2679, 0, 2458, 2393, -2, -2,
	2707, 2686, 2162, 2163, 2164, 2165, 2166, 2167, 2168, -2,
	-2, 3218, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404,
	2405, 2406, 2407, 0, 3161, 3181, 3182, 3188, 3190, 3183,
	3170, 2418, 2801, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 2191, 2200, -2, -2,
	-2, -2, -2, -2, -2, 3174, 3175, 3193, 3196, 3203,
	3208, 3209, 3179, 3189, 3217, 3219, 3220, 3221, 3222, 3223,
	3224, 3225, 3226, 3227, 3228, 3229, 3230, 3231, 3232, 3233,
	3234, 2192, -2, -2, -2, -2, 0, 1928, 3000, 1931,
	2037, 1929, 1913, 1915, 0, 1917, 0, 0, 0, 1922,
	1948, 1946, 0, 1997, 1926, 1927, 2020, 2020, 2052, 0,
	2025, 0, 2052, 1940, 2083, 0, 2031, 3030, 2394, 2395,
	0, 2690, 2684, -2, -2, 3215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 810, 0, 816,
	818, 0, 0, 0, 0, 849, 848, 1950, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 3181, 548,
	549, 552, 0, 590, 591, 592, 593, 594, 3181, 0,
	0, 0, 0, 600, 601, 602, 603, 604, 605, 606,
	258, 3181, 695, 727, 723, 0, 258, 3181, 698, 726,
	258, 3181, 701, 725, 0, 704, 1658, 258, 3181, 707,
	2648, 258, 3181, 710, 715, 711, 3181, 713, 258, 3181,
	719, 2663, 2661, 720, 0, 722, 278, 274, 275, 276,
	277, 1754, 1755, 1756, 1757, 0, 1788, 1659, 871, 0,
	897, 0, 909, 910, 3169, -2, 0, 3054, 914, 915,
	-2, 917, 1792, 1796, 1797, 1798, 1799, 1800, 0, 0,
	0, 0, 1805, 0, 0, 0, 0, 904, 905, 924,
	925, 931, 934, 0, 1048, 1044, 1060, 0, 1075, 0,
	1076, 1076, 2637, 2628, 2629, 0, 0, 1076, 1076, 0,
	0, 1079, 1080, 1081, 1082, 1083, 803, 804, 1085, 1086,
	0, 0, 1104, 1105, 1106, 0, 0, 402, -2, -2,
	-2, -2, 1115, 388, 389, 2703, 2704, 2712, 2713, 2714,
	2715, 3216, 3218, 0, 1123, 1126, -2, 0, 0, 0,
	0, 1133, 0, 1138, 1139, 1140, 0, -2, 0, 1147,
	1149, 1333, 1152, 0, 1333, 0, 1154, 0, 1158, 0,
	1161, 1162, 0, 1164, 0, 1166, -2, -2, -2, 1174,
	1175, -2, 1180, -2, 0, 1184, 0, -2, 0, 1187,
	0, 1190, -2, 0, 1200, 1196, 1197, 0, 0, 0,
	0, 1217, 1218, 0, 1222, 0, 1231, 0, 1234, 1235,
	1236, 0, 0, 1241, 1242, 0, 1244, 1245, 1246, 1248,
	1249, 1250, 0, 3128, 3051, 2785, 2864, 3049, 2834, 0,
	1261, -2, 2822, 1271, 1273, 0, -2, 0, 1289, 0,
	1293, 0, 0, 1302, 0, 0, 0, 1088, 0, 1097,
	1098, 1099, 1782, -2, 92, 0, 3181, 2083, 94, 0,
	2642, 2716, 2717, 2718, 2719, 2720, 3236, 3237, 3238, 3239,
	3240, 3241, 3242, 3243, 3244, 3245, 3246, 3247, 3248, 3249,
	3250, 3251, 3252, 3253, 3254, 3255, 3256, 3257, 3258, 3259,
	3260, 3261, 3262, 3263, 3264, 3265, 3266, 3267, 3268, 3269,
	3270, 3271, 3272, 3273, 3274, 3275, 3276, 3277, 3278, 3279,
	3280, 3281, 3282, 3283, 3284, 3285, 3286, 3287, 3288, 3289,
	3290, 3291, 3292, 3293, 3294, 3295, 3296, 3297, 3298, 3299,
	3300, 3301, 3302, 3303, 3304, 3305, 3306, 3307, 3308, 3309,
	3310, 3311, 3312, 3313, 3314, 3315, 98, 0, 3181, 103,
	0, 3181, 0, -2, 127, 567, 128, 0, 150, 0,
	178, -2, -2, -2, 159, 0, 3181, 0, 2617, -2,
	0, 270, -2, 0, 798, 377, 378, 0, 789, 0,
	900, 2492, 0, 0, 1372, -2, 0, 1586, 1588, 1588,
	0, -2, 0, 0, 0, 1323, 2614, 2619, 1324, 1325,
	2638, 1326, 2624, 0, 432, 433, 434, 435, 436, 437,
	3181, 439, 440, 0, 442, 443, 3181, 445, 446, 0,
	448, 0, 450, 0, 313, 330, 328, 3181, 0, 477,
	479, 3181, 481, 484, 0, 588, 0, 585, 0, 569,
	570, 0, 572, 0, 0, 0, 577, 578, 580, 581,
	582, 583, 584, 0, 629, 627, 2653, 649, 402, 0,
	-2, 3181, 0, 1369, 0, 0, 1638, -2, 0, 1579,
	-2, 0, 1645, 3181, 1641, 0, -2, 0, 1938, 3181,
	1809, 1404, 1405, 1406, 1407, 2097, 655, 0, 1845, 0,
	1847, 0, 1867, 2091, 2020, 0, 0, 2096, 0, -2,
	786, 2672, -2, 736, 0, 737, 0, -2, 0, 402,
	0, 0, 1350, 1352, 1353, 1355, 1356, 1359, 1360, 1361,
	1362, 0, 1364, 2069, 349, 351, 0, 0, 0, 0,
	1349, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753,
	0, 649, 882, 0, 0, 258, 2087, 1767, 0, -2,
	0, 861, 0, 865, 1970, 1896, 1893, 0, 1967, 1968,
	1897, 0, 0, 0, 1904, 0, 1943, 1944, 0, 0,
	0, 1883, 1884, 0, 0, 0, 0, 0, 0, 2497,
	2498, 2499, 2500, 2513, 2501, 2502, 2512, 2510, 2511, 2503,
	2504, 2509, 2523, 2524, 2514, 2515, 2505, 2518, 2516, 2517,
	2519, 2520, 2521, 2522, 0, 0, 2528, 0, 2506, 2507,
	2508, 2536, 0, 0, 2537, 0, 2539, 0, 2529, 2525,
	2526, 2527, 0, 2299, 2301, 2603, 0, 0, 0, 2535,
	2530, 2531, 2237, 2238, 2239, 2240, 2241, 2274, 2278, 2279,
	0, 0, 2354, 2600, 2599, 2356, 0, 0, 2551, 0,
	2369, -2, 0, 2492, 2546, 0, 0, 2378, 2379, 2380,
	0, 0, 2551, 0, 0, 2594, 2390, 2391, 2229, 0,
	0, 2460, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2178, 2177, 0, 2179, 0, 2180, 2181, 0, -2, 0,
	0, 2201, 0, 0, 0, 0, 2205, 0, 0, 0,
	0, 0, 0, 0, 2575, -2, 0, 0, 0, 0,
	2193, 0, 0, 1930, 0, 0, 0, 2001, 2604, 2608,
	2609, 2001, 2001, 0, 0, 2552, 2080, 2080, 0, 0,
	2075, 2075, 2075, 2073, 2052, 0, 2052, 2062, 0, 2052,
	2052, 0, -2, 2025, 0, 0, 2066, 0, 2046, 774,
	776, 778, 780, 781, 782, 784, 2084, 2085, 0, 0,
	0, 0, 2691, 0, 0, 0, 0, 0, 0, 2675,
	0, 0, 2647, 457, 458, 0, 0, 0, 3108, 3043,
	0, -2, -2, -2, -2, 3051, 0, 0, 2785, 2822,
	2834, 821, 851, 0, 1940, 0, 2554, 2112, 2116, 0,
	2118, 2119, 2120, 0, 0, 2113, 2212, 2708, 2709, 2710,
	2172, 2173, 2174, 2175, 2176, 2184, 2171, 2171, 2171, 2182,
	-2, 2189, 2211, 2203, 2211, 2207, 2155, 2156, 2157, 2194,
	2195, 2196, 2197, 0, 3108, 3043, 0, -2, 0, 833,
	0, 0, 0, 1878, 340, 341, 546, 0, 256, 257,
	0, 551, 0, 589, 0, 596, 597, 598, 0, 691,
	0, 0, 258, 3181, 696, 0, 699, 0, 258, 3181,
	2612, 705, 0, 708, 0, 0, 0, 717, 0, 0,
	0, 0, 0, 258, 1880, 0, 0, 0, 0, -2,
	919, 927, 928, 929, 0, 1794, 0, 1801, 948, 949,
	950, 1803, 1804, 0, 1806, 922, 951, 952, 953, 954,
	955, 956, 0, 2626, 2627, 2632, 2633, 0, 0, 920,
	941, 923, 0, 935, 1051, 1046, 1047, 1061, 1062, 0,
	0, 2630, 2631, 0, 0, 1067, 1068, 0, 0, 1107,
	349, 0, 0, 1110, 0, 402, 402, 402, 402, 1121,
	1122, 1124, 1125, -2, -2, -2, -2, 1127, 1128, 1228,
	0, 0, 0, 1227, 1736, 0, 1143, 1146, 1150, 0,
	1306, 3025, 3043, 3108, 1331, 1151, 1228, 2785, 1228, 2785,
	1228, 2785, 1228, 1228, 1168, 1212, 1224, 1179, 1186, 0,
	0, 0, 1181, 1185, 1188, 1191, 0, 1193, 1201, 0,
	-2, 0, 1204, 0, 1206, 0, 1208, 1228, 1220, 1229,
	1232, 0, 1240, 1243, 0, 1251, 1252, 1253, 2657, 1254,
	2670, 0, 0, 1257, 1258, 1259, 1260, -2, 0, 1264,
	1265, 0, 0, 1280, 1285, 1286, 1282, 0, 0, 0,
	0, 0, 0, 1296, 1297, 0, 0, 0, 1305, 0,
	1100, 160, 1740, 0, 0, 211, 0, 1740, 1740, 0,
	0, 0, 0, 239, 0, 0, 1438, 0, 0, 0,
	0, 178, 196, 207, 172, 173, 174, 0, 0, 0,
	0, 0, 0, 104, 1552, 0, 1555, 0, 0, 0,
	0, 0, 0, 0, 1568, 1571, 0, 0, 0, 0,
	561, 0, 535, 0, 0, 558, 566, 0, 0, 522,
	523, 524, 525, 0, 0, 530, 0, 0, 0, 0,
	536, 0, 130, 131, 0, 0, 136, 137, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 1842, 0, 186,
	178, 0, 0, 177, 179, 162, 0, 0, 178, 182,
	197, 209, 0, 245, 0, 185, 247, 1435, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 280, 0, 0,
	315, 796, 0, 799, 0, 788, 790, 649, 649, 0,
	0, 898, 902, 903, 0, 0, 899, 901, 0, 0,
	1580, 0, 0, 0, 1937, 0, 0, 0, 0, 3181,
	1738, 0, 1721, 0, 2069, 2883, -2, -2, 2069, 1322,
	0, 0, 2691, 2622, 0, 0, 0, 0, 449, 0,
	0, 0, 339, 0, 0, 0, 0, 486, 491, 0,
	579, 568, 571, 573, 574, 575, 617, 1499, 3181, 0,
	0, 653, 644, 0, 648, 0, 652, 0, 0, 1551,
	3181, 1549, 0, 1577, 0, 1637, 1530, 3181, 2655, 0,
	0, 0, 1646, 2700, 1655, 1659, 1830, 0, 657, 0,
	1848, 1850, 0, 0, 2092, 0, 2094, 2020, 1940, 0,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 1363,
	358, 0, 2068, 0, 0, 390, 2069, 349, 0, 1348,
	402, 402, 2069, 884, 2069, 886, 1572, 0, 1776, 1970,
	1896, 864, 1887, 1969, 1888, 1895, 1898, 0, 0, 1900,
	0, 1902, 0, 1965, 1966, 1973, 1974, 0, 1984, 1985,
	1977, 0, -2, 0, 0, 1980, 1981, 1906, 0, 1923,
	1924, 1925, 1954, 1957, 1674, 0, 3318, 907, 0, 2233,
	2107, 2234, 2235, 2641, 0, 2242, 2243, 2244, 2245, 2246,
	2247, 2248, 2249, 2250, 2251, -2, -2, -2, -2, -2,
	-2, -2, -2, 2260, 2261, 2262, 2263, 2264, 2265, 2266,
	2267, 2268, 2269, 2270, -2, -2, -2, 2275, 2276, 2277,
	-2, 2538, 2540, 0, 2603, 0, -2, 0, -2, -2,
	-2, -2, 2296, 0, 2298, 2303, 2305, 2307, 0, 0,
	0, 0, 2602, 2317, 2586, 2587, 0, 0, 2494, 2495,
	2496, 2302, 0, 2321, 2601, 2598, 0, 0, 2532, 0,
	2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506,
	2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516,
	2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526,
	2527, 2528, 2529, 0, 2550, 1953, 2382, 0, 0, 0,
	0, 2389, 2374, 2548, 0, 2547, 0, 0, 0, 2558,
	0, 2593, 2589, 0, 2639, 2228, 2215, 2216, 2217, 2218,
	2219, 2220, 2230, 0, 2636, 2676, 2682, 2468, 0, 0,
	0, 2419, 2420, 2421, 2422, 2423, 0, 2425, 2426, 0,
	2428, 2429, 0, 2431, 2432, 0, 2434, 2435, 2436, 2437,
	2438, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131,
	2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141,
	2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151,
	2152, 2153, 2154, 0, 0, 2440, 0, 2561, -2, -2,
	-2, -2, -2, -2, -2, -2, 0, 2442, 0, 2444,
	2552, 2572, 0, 0, 2322, 0, 0, 0, 0, 0,
	2447, 2552, 2580, 0, 0, 0, 0, 0, 2552, 0,
	2585, 0, 2454, 0, 2456, 1130, 1131, 1932, 0, 0,
	2038, 0, 2102, 0, 0, 0, 2607, 2610, 2611, 3142,
	3143, 3144, 3145, 3146, 3147, 3148, 3149, 3150, 3151, 3152,
	3153, 3154, 3155, 3156, 3157, 3158, 3159, 3160, 2102, 2102,
	0, 1996, 0, 0, 2076, 2077, 2078, 2079, 0, 0,
	2080, 0, 2070, 2074, 2071, 2072, 2062, 2017, 0, 0,
	2643, 2062, 2023, 2061, 0, 2037, 2051, 2062, 2062, 0,
	-2, 2027, 2065, 0, 2040, 2052, 0, 0, 775, 777,
	779, 783, 785, 0, 0, 1953, -2, 0, -2, 404,
	1529, 0, 0, 0, 0, 0, 0, 811, 813, 0,
	0, 714, 0, 0, 0, 0, 1312, 0, 1314, 1315,
	0, 1317, 0, 1724, 805, 0, 808, 0, 2103, 2106,
	0, 0, 2117, 2121, 2122, 2213, 0, 0, 0, 0,
	0, 0, 0, 846, 0, 3089, 0, 844, 0, 550,
	258, 0, 554, 555, 0, 0, 503, 504, 505, 506,
	508, 2711, 509, -2, -2, 0, 599, 258, 724, 693,
	0, 258, 258, 702, 0, 0, 258, 716, 258, 712,
	2664, 258, 2662, 279, 721, 1879, 291, 0, 906, 0,
	1793, 1802, 0, 945, 0, 947, 0, 2634, 2635, 0,
	936, 0, 1049, 0, 1063, 1064, 1065, 1066, 402, 0,
	0, 402, 400, 2959, 398, 395, 397, 1111, 1112, 1113,
	1114, 1170, 1214, 1226, 1284, 1132, 1134, 1135, 1136, 0,
	1141, 0, 0, 0, 0, 1332, 1327, 1328, 1329, 2665,
	2661, 1330, 1153, 1228, 1156, 1228, 1159, 1228, 1163, 1165,
	1183, 1357, 1358, 1189, 1202, 1195, 1203, 0, 0, 0,
	1216, 0, 0, 1238, 0, 1247, 1255, 0, 1263, -2,
	1268, 1269, 0, 0, 0, 0, 0, 0, 0, 1290,
	1291, 1292, 1294, 1299, 1298, 0, 1304, 1101, 0, 0,
	0, 0, 1739, 0, 0, 1684, 0, 0, 215, 3181,
	0, 260, 0, 0, 1492, 2649, 0, 1480, 0, 0,
	2809, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 175,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 1553,
	1554, 1556, 1563, 1565, 0, 1559, 1560, 0, 1562, 1564,
	1566, 0, 1569, 0, 0, 0, 0, 0, 0, 557,
	559, 560, 535, 0, 0, 0, 0, 0, 0, 0,
	528, 529, 531, 532, 533, 534, 0, 0, 0, 0,
	0, 0, 138, 142, 1589, 3049, 0, 0, 0, 0,
	1590, 1591, 1592, 1818, 1819, 0, 1841, 1842, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 184,
	0, 2616, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 316, 0, 800, 0, 801, 0,
	791, 402, 793, 794, 795, 0, 0, 0, 1582, 0,
	1633, 1631, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 0, 0,
	0, 0, -2, 1584, 1585, 0, 0, 0, 0, 0,
	0, 0, 0, 301, 0, 393, 2615, 2625, 0, 438,
	441, 444, 447, 297, 0, 0, 0, 0, 483, 493,
	0, 1410, 1382, 0, 0, 628, 402, 649, 651, 0,
	2668, 1367, 1547, 1550, 0, 1530, 3181, 1601, 0, 0,
	0, 0, 0, 0, 0, 1644, 0, 0, 3181, 2644,
	2699, 2700, 1832, 1842, 0, 2102, 0, 1865, 1851, 0,
	0, 0, 1865, 1869, 1870, 1872, 1873, 0, 0, 2093,
	2099, 735, 787, 1940, 1940, 402, 0, 0, 1854, 1856,
	0, 0, 0, 342, 0, 352, 2069, 350, 0, 358,
	0, 2069, 349, 0, 643, 883, 888, 2088, 1891, 1892,
	1894, 0, 1903, 0, 0, 1979, -2, -2, 1978, 1982,
	1983, -2, -2, -2, -2, 1899, 0, 1908, 1905, 0,
	1964, 1672, 1673, 0, 0, 908, 0, 0, -2, -2,
	0, 0, 0, 2318, 0, -2, 2297, 2300, 2304, 2306,
	2308, 0, 0, 0, 0, 0, 0, 2541, 0, 2543,
	2319, 2596, 2599, 2534, 0, 2490, 0, 0, 1952, 1953,
	1953, 0, 2388, 0, 2549, 0, 2556, 2557, 0, 2381,
	0, 2590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2392, 0, 0, 0, 0, 2424, 2427, 2430, 2433,
	0, 0, 0, 0, 2413, 0, 0, 0, 2417, 2183,
	2169, 0, 0, 2186, 2190, 2211, 2209, 2210, 2204, 2211,
	2208, 2159, 0, 2158, 0, 2439, 0, 2441, 2443, 0,
	0, 2445, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2325, 2326, 2327, 2347,
	2446, 2578, 2579, 0, 0, 0, 0, 0, 0, 2452,
	0, 2584, 2453, 2455, 1940, 0, 1933, 0, 2036, 0,
	1998, 1987, 2101, 0, 2605, 2069, 2000, 2002, 2606, 2646,
	1987, 1987, 0, 2553, 0, 0, 2056, 0, 0, 0,
	2058, 2021, 0, 0, 2015, 0, 2006, 2007, 2008, 2009,
	2010, 2011, 2012, 2022, 2037, 2060, 2024, 2028, 2676, 0,
	2040, 2064, 0, 2062, 0, 2047, 0, 2049, 2086, 0,
	2033, 2066, 0, 0, 2692, 2102, 0, 451, 459, 460,
	452, 453, 454, 455, 0, 1724, 0, 0, 0, 0,
	0, 1313, 1316, 0, 829, 0, 0, 2555, 0, 2108,
	0, 2114, 0, 831, 0, 0, 0, 0, 0, 0,
	0, 0, 1877, 547, 553, 0, 0, 502, 0, 501,
	507, 595, 692, 258, 697, 700, 2613, 258, 706, 709,
	718, 287, 0, 896, -2, 943, 944, 946, 0, 942,
	1054, 1050, 1102, 0, 0, 1109, 0, 0, 0, 0,
	0, 0, 1736, 1733, 1145, 0, 1155, 1157, 1160, 1205,
	1207, 1228, 1219, 0, 1239, 1256, 1267, 1274, 2645, 1275,
	1432, 0, 1432, 0, 0, 1295, 1301, 212, 1740, 0,
	0, 0, 1680, 0, 1393, 0, 1388, 1389, 1682, 2660,
	1686, 1692, 1695, 0, 217, 3181, 229, 0, 3181, 0,
	1454, 0, 0, 0, 0, 0, 0, 1742, 0, 0,
	3181, 258, 3181, 258, 233, 235, 238, 0, 244, 240,
	0, 1390, 0, 1442, 0, 0, 1445, 161, 1740, 0,
	0, 164, 168, 180, 0, 0, 0, 194, 0, 0,
	0, 1697, 1701, 1709, 0, 0, 0, 1557, 1558, 1561,
	1567, 1570, 105, 0, 0, 0, 1705, 1707, 1713, 562,
	563, 564, 0, 0, 0, 526, 527, 129, 132, 3181,
	2658, 0, 134, 3181, 0, 143, 1842, 0, 0, 0,
	0, 1679, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 166, 170, 181, 0, 1715, 163, 183, 0, 273,
	0, 0, 263, 258, 3181, 0, 265, 0, 266, 267,
	281, 0, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 0, 797, 0, 792, 1370, 1371, 1632, 0, 1575,
	1576, 325, 326, 0, 1587, 1581, 0, 0, 0, 0,
	0, 1717, 1718, 0, 0, 0, 1738, 2069, 293, 0,
	2069, 301, 0, 2621, 0, 329, 338, 0, 480, 0,
	492, 494, 496, 0, 0, 0, 1409, 1510, 1411, 1413,
	1414, 1415, 260, 0, 0, 0, 1480, 2870, 2700, 0,
	0, 1377, 0, 0, 0, 634, 630, 0, 641, 645,
	646, 0, 0, -2, 0, 0, 0, 0, -2, 0,
	0, 0, 1648, 1642, 1643, 0, 0, 0, 0, 3181,
	1834, 1842, 0, 1938, 1953, 656, 1843, 1865, 0, 0,
	0, 1853, 1849, 1846, 2102, 0, 0, 0, 0, 0,
	2095, 2098, 738, 739, 379, 0, 402, 0, 0, 0,
	0, 0, 0, 356, 0, 359, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 0, 0, 0, 0, 374,
	375, 358, 391, 344, 2069, 358, 0, 0, 885, 0,
	1901, 0, 1976, 1907, 1958, 1959, 0, 1674, 0, 2236,
	2281, 0, 0, -2, 0, 0, 2285, 0, 0, 0,
	-2, 0, 0, 0, 2542, 2544, 0, 2598, 2533, 2383,
	0, 0, 0, 2387, 2371, 2372, 0, 2493, 2559, 2588,
	2592, 0, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 0,
	2640, 2677, 2681, 2466, 2467, 2471, 2654, 0, 0, 0,
	2396, 0, 0, 0, 0, 0, 0, 0, 0, 2185,
	2202, 2206, 0, 0, 2560, 2571, 2573, 2323, 2324, 2328,
	2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, -2,
	-2, -2, 2341, 2342, 2343, -2, -2, -2, 2348, 0,
	0, 0, 2574, 2576, 2577, 2581, 2582, 0, 2449, 2450,
	2451, 2583, 0, 1940, 1934, 2039, 1995, 0, 2100, 1999,
	0, 1995, 1995, 1947, 2054, 0, 0, 2082, 0, 2018,
	0, 2019, 0, 0, 2059, 0, 2026, 2063, 0, 2042,
	2044, 2029, 2030, 2048, 0, 2032, 0, 2035, 2383, -2,
	403, 405, 407, 0, 410, 411, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 820, 1724, 1724, 0,
	0, 0, 822, 0, 806, 0, 0, 2110, 0, 2214,
	835, 837, 0, 0, 0, 0, 3108, 3043, 0, 0,
	834, 556, 499, 500, 694, 703, 289, 0, 2067, 0,
	0, 0, 402, 402, 399, 0, 394, 396, 1137, 1735,
	1142, 2666, 1215, 1237, 1276, 1431, 0, 0, 1278, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	259, 0, 1491, 0, 1452, 0, 0, 1479, 0, 0,
	1497, 219, 220, 221, 0, 0, 0, 0, 231, 0,
	0, 227, 0, 237, 243, 242, 0, 1439, 0, 0,
	0, 0, 1685, 0, 0, 0, 191, 192, 193, 0,
	198, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 520, 0, 0, 0, 0, 140, 0, 0, 0,
	145, 146, 0, 0, 1824, 1825, 0, 1812, 188, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 1671,
	283, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 305, 307, 0, 0, 0, 0, 327, 0, 1574,
	1635, 1636, 1583, 1698, 1702, 1710, 0, 0, 0, 0,
	0, 854, 1737, 0, 301, 299, 0, 302, 301, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 576, 1380,
	1498, 0, 0, 1500, 1416, 1420, 0, 0, 2700, 0,
	0, 0, 2651, 0, 1378, 0, 0, 1499, 626, 632,
	0, 635, 0, 638, 0, 640, 0, 650, 2650, 0,
	0, 1551, 0, 0, 1578, 1530, 1604, 1530, 0, 1647,
	1649, 0, 1657, 0, 0, 0, 1836, 1842, 0, 1829,
	1830, 1972, 1844, 1863, -2, 0, 0, 1953, 1871, 1868,
	1874, 1875, 0, 0, 382, 0, 1855, 1857, 0, 1351,
	1354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	343, 358, 346, 2069, 386, 0, 1975, 1962, 1963, 1960,
	1674, 2283, 2287, 0, 0, 0, 2289, -2, 0, 2311,
	-2, -2, 2545, 2597, 2362, 1953, 2384, 2386, 2373, 2591,
	2231, 0, 2473, 2470, 0, 2457, 0, 2408, 2409, 0,
	0, 2412, 2414, 2415, 2416, 2170, 2161, 2160, 2570, 0,
	0, 0, 0, 2448, 1935, 0, 2462, 0, 0, 2003,
	2462, 2462, 2055, 0, 2057, 2016, 2004, 0, 2013, 0,
	2677, 2041, 0, 2045, 2050, 2034, 0, 408, 0, 412,
	413, 414, 415, 417, 0, 0, 0, 0, 0, 456,
	823, 824, 0, 0, 0, 0, 1723, 2104, 2109, 0,
	2115, 0, 0, 0, 0, 0, 0, 0, 0, 845,
	290, 0, 1052, 1053, 1103, 1108, 401, 1430, 0, 0,
	0, 0, 213, 214, 1394, 1392, 1689, 1693, 1690, 0,
	216, 0, 0, 1453, 0, 1456, 0, 0, 0, 0,
	1463, 1480, 0, 0, 0, 0, 0, 0, 1482, 0,
	1481, 0, 0, 1514, 0, 1662, 1669, 0, -2, 0,
	0, 0, 223, 249, 0, 0, 0, 0, 252, 1741,
	225, 0, 0, 258, 258, 1391, 0, 0, 1681, 1683,
	1696, 0, 0, 0, 0, 201, 0, 0, 1699, 1703,
	1711, 1706, 1708, 1714, 565, 521, 0, 0, 135, 144,
	1815, 0, 0, 0, 1826, 0, 187, 0, 0, 0,
	1716, 271, 272, 0, 258, 0, 258, 264, 258, 1671,
	0, 0, 0, 0, 0, 0, 322, 323, 324, 0,
	0, 0, 0, 0, 0, 0, 1719, 1720, 292, 0,
	0, 294, 392, 301, 0, 482, 490, 495, 497, 498,
	1441, 0, 1510, 1502, 1503, 1504, 0, 1412, 1509, 1511,
	0, 0, 1417, 0, 0, 0, 0, 0, 0, 1397,
	1379, 0, 1410, 1382, 636, 0, 637, 639, 631, 0,
	1368, 1548, 1596, 1530, 0, 1599, 0, 0, 1639, 0,
	0, 0, 0, 0, 0, 0, 1838, 1842, 0, 1831,
	1832, 1865, 1971, 0, 0, 0, 1852, 1972, 0, 402,
	0, 402, 360, 0, 361, 362, 363, 370, 371, 372,
	373, 345, 358, 887, 889, 0, 0, 0, 895, 1961,
	2291, -2, -2, 2312, 0, 2678, 2680, 1953, 0, 2459,
	1955, 0, 0, -2, 0, 0, 0, 1936, 1919, 0,
	1994, 1986, 1988, 1990, 3028, 2780, 3180, 1920, 1921, 2081,
	0, 0, 2043, 409, 418, 419, 0, 421, 422, 825,
	0, 0, 0, 0, 2111, 0, 0, 0, 832, 0,
	0, 0, 0, 1042, 1277, 1279, 0, 0, 0, 0,
	1691, 218, 0, 0, 1457, 1458, 1460, 0, 1462, 1464,
	1465, 1382, 0, 1469, 0, 2702, 0, 1474, 1477, 1478,
	0, 0, 1493, 1515, 0, 1524, 0, 1664, 1674, 1668,
	0, 1666, 1526, 0, 222, 251, 224, 253, 248, 0,
	1671, 0, 226, 236, 0, 0, 165, 0, 0, 2773,
	204, 202, 200, 133, 139, 141, 147, 1678, 190, 0,
	167, 0, 273, 282, 1670, 284, 268, 258, 0, 304,
	306, 308, 309, 310, 311, 0, 1700, 1704, 1712, 0,
	1727, 1728, 1729, 1730, 1731, 0, 0, 0, 303, 0,
	0, 478, 0, 489, 1382, 1440, 1381, 1501, 0, 1512,
	1382, 0, 0, 1526, 0, 0, 0, 0, 0, 1384,
	0, 1383, 0, 0, 633, 2102, 647, 0, 0, 0,
	1603, 0, 1650, 1648, 0, 1656, 0, 0, 0, 1811,
	0, 0, 1833, 1834, 654, 1858, 0, 0, 1865, 1876,
	381, 0, 384, 357, 347, 0, 891, 0, 893, 0,
	2385, 2477, 0, 0, 2410, 2411, -2, 0, 2351, 2461,
	2463, 0, 0, 0, 0, 0, 2005, 2014, 420, 1724,
	1724, 1724, 2105, 839, 840, 842, 836, 838, 0, 0,
	1287, 1288, 1687, 0, 1694, 260, 1455, 1459, 0, 1466,
	0, 0, 0, 1470, 1534, 0, 0, 1551, 1551, 1483,
	0, 0, 1518, 1519, 1437, 0, 1520, 1521, 1522, 1663,
	1964, 1669, 1382, 0, 0, 250, 255, 0, 0, 0,
	0, 0, 0, 189, 0, 262, 285, 1671, 0, 0,
	1732, 0, 0, 300, 334, 512, 510, 1384, 0, 1513,
	1418, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429,
	1419, 1524, 1526, 0, 1437, 0, 1490, 1395, 0, 1398,
	0, 1380, 0, 642, 0, 1597, 0, 1604, 0, 0,
	1657, 0, 0, 1821, 1810, 1842, 1835, 1836, 2102, 0,
	1866, 0, 890, 0, 0, 0, 0, 0, 0, 2472,
	1956, 2352, 0, 0, 1989, 1991, 1992, 1993, 826, 827,
	828, 0, 0, 1688, 230, 0, 1528, 1468, 1539, 0,
	0, 0, 0, 0, 1484, 1516, 1517, 1514, 1436, 0,
	1667, 1665, 1495, 1528, 1530, 228, 0, 1526, 0, 1446,
	0, 0, 1449, 0, 0, 205, 2773, 203, 0, 258,
	802, 1724, 258, 0, 337, 0, 545, 511, 513, 0,
	0, 517, 518, 519, 1376, 0, 1506, 1508, 1437, 1524,
	1526, 1382, 1437, 0, 1399, 1441, 1397, 1598, 1602, 1600,
	1640, 1526, 0, 1524, 0, 1828, 1842, 1822, 1823, 0,
	1838, 0, 0, 402, 892, 894, 2469, 2489, 2478, -2,
	3111, 2781, 0, 2489, 2489, 2464, 2465, 0, 0, 0,
	1382, 0, 1471, 1535, 1536, 0, 1531, 1532, 1533, 2701,
	1472, 1473, 1475, 1476, 2102, 0, 1525, 1534, 254, 1382,
	1443, 0, 0, 1444, 0, 0, 208, 0, 210, 286,
	1722, 1725, 0, 312, 0, 0, 485, 543, 0, 0,
	514, 515, 537, 516, 1373, 1375, 1382, 0, 1382, 1437,
	1524, 2102, 1382, 0, 0, 0, 1382, 1384, 1524, 0,
	1437, 0, 1817, 1827, 0, 1837, 1811, 0, 1861, 0,
	383, 2474, 0, 0, 2480, 2481, 2482, 2483, 2484, 2475,
	2476, 841, 843, 1461, 1467, 0, 1537, 0, 1538, 0,
	0, 0, 1494, 1523, 1539, 234, 1447, 0, 1450, 0,
	206, 0, 0, 332, 333, 542, 538, 1505, 1507, 2102,
	1382, 1437, 1677, 2102, 1385, 0, 1387, 1384, 1396, 1437,
	0, 1382, 0, 1840, 1816, 1820, 2659, 1821, 1859, 0,
	0, 0, 2486, 2487, 0, 0, 0, 1540, 0, 1543,
	1544, 0, 1541, 1514, 0, 0, 258, 0, 1940, 1677,
	2102, 1382, 1488, 0, 1676, 1677, 1386, 1376, 1382, 1526,
	2102, 1524, 1814, 1842, 1828, 0, 2102, 2485, 2488, 2479,
	1527, 1542, 1545, 1546, 1496, 0, 0, 1726, 335, 0,
	0, 544, 539, 540, 1485, 1677, 2102, 1675, 1489, 1374,
	2102, 1524, 1677, 1437, 1807, 1813, 0, 0, 1817, 2102,
	1862, 1434, 0, 0, 541, 1486, 1677, 1677, 1437, 1653,
	1382, 1839, 1814, 1860, 1448, 1433, 0, 336, 1487, 1651,
	1382, 2102, 1808, 0, 2102, 1677, 0, 1677, 1654, 1434,
	1652, 1451,
}

var sqlTok1 = [...]int16{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 654, 3, 660, 655, 3,
	666, 667, 658, 656, 671, 657, 668, 659, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 675, 672,
	646, 648, 647, 651, 670, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 664, 3, 665, 661, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 673, 653, 674, 649,
}

var sqlTok2 = [...]int16{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]uint16{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 612,
	57955, 613, 57956, 614, 57957, 615, 57958, 616, 57959, 617,
	57960, 618, 57961, 619, 57962, 620, 57963, 621, 57964, 622,
	57965, 623, 57966, 624, 57967, 625, 57968, 626, 57969, 627,
	57970, 628, 57971, 629, 57972, 630, 57973, 631, 57974, 632,
	57975, 633, 57976, 634, 57977, 635, 57978, 636, 57979, 637,
	57980, 638, 57981, 639, 57982, 640, 57983, 641, 57984, 642,
	57985, 643, 57986, 644, 57987, 645, 57988, 650, 57989, 652,
	57990, 662, 57991, 663, 57992, 669, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(sqlPact[state])
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && int(sqlChk[int(sqlAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || int(sqlExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := int(sqlExca[i])
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(sqlTok1[0])
		goto out
	}
	if char < len(sqlTok1) {
		token = int(sqlTok1[char])
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = int(sqlTok2[char-sqlPrivate])
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = int(sqlTok3[i+0])
		if token == char {
			token = int(sqlTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(sqlTok2[1]) /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = int(sqlPact[sqlstate])
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = int(sqlAct[sqln])
	if int(sqlChk[sqln]) == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = int(sqlDef[sqlstate])
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && int(sqlExca[xi+1]) == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = int(sqlExca[xi+0])
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = int(sqlExca[xi+1])
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = int(sqlPact[sqlS[sqlp].yys]) + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = int(sqlAct[sqln]) /* simulate a shift of "error" */
					if int(sqlChk[sqlstate]) == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= int(sqlR2[sqln])
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = int(sqlR1[sqln])
	sqlg := int(sqlPgo[sqln])
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = int(sqlAct[sqlg])
	} else {
		sqlstate = int(sqlAct[sqlj])
		if int(sqlChk[sqlstate]) != -sqln {
			sqlstate = int(sqlAct[sqlg])
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1668
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1673
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1677
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 8:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1683
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 12:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1686
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 14:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1687
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 16:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1688
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 18:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1689
		{
			return helpWith(sqllex, "GRANT")
		}
	case 20:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1690
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 22:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1691
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1692
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 26:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1693
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1694
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1695
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1696
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1699
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1700
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1701
		{
			return helpWith(sqllex, "FETCH")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1702
		{
			return helpWith(sqllex, "MOVE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1705
		{
			return helpWith(sqllex, "SHOW COMMIT TIMESTAMP")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1712
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1713
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1715
		{
			return helpWith(sqllex, "ALTER")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1718
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1719
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 59:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1720
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1721
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1722
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1723
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1724
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 69:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1725
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1726
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1727
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1728
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1729
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 79:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1730
		{
			return helpWith(sqllex, "ALTER FUNCTION")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1731
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1792
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1818
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 98:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1832
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1852
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1856
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1860
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1923
		{
			return helpWith(sqllex, "ALTER FUNCTION")
		}
	case 128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1927
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1931
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1938
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1950
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1960
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1967
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1977
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1984
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1994
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2003
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2010
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2019
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2029
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2038
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2048
		{
			sqlVAL.union.val = &tree.AlterDatabaseSecondaryRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SecondaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2057
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     false,
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2065
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     true,
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2074
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelGlobal,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2087
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2100
		{
			s := sqlDollar[9].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				RegionName:    tree.Name(sqlDollar[8].str),
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2136
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2170
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2174
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2178
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2184
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2188
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2194
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2203
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2214
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2218
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2224
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2232
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2242
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2246
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2258
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2264
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 178:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2268
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2273
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 180:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2279
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2291
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2302
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[3].union.tableIndexName(), NotVisible: sqlDollar[4].union.bool(), IfExists: false}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2306
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[5].union.tableIndexName(), NotVisible: sqlDollar[6].union.bool(), IfExists: true}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2312
		{
			sqlVAL.union.val = true
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2316
		{
			sqlVAL.union.val = false
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2332
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 187:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2352
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2361
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2372
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2381
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2394
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: sqlDollar[4].union.expr(),
				},
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2403
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					Options: sqlDollar[4].union.kvOptions(),
				},
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2411
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: true,
				},
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2420
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: tree.DNull,
				},
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2430
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2438
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2449
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 198:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2459
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 199:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2469
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 200:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2478
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 201:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2489
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 202:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2495
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 203:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2503
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2507
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2511
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 206:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2515
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2521
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2526
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2537
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2541
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2547
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2551
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2558
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2568
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colTableDef()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2573
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colTableDef()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2578
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colTableDef()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2583
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colTableDef()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2588
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2593
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2598
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2608
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2613
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2617
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2622
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2631
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2653
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2661
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2671
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2674
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2680
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2686
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2695
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2702
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2711
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2720
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2725
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2732
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2739
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2745
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2752
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2753
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2757
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2761
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2767
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2775
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2779
		{
			sqlVAL.union.val = nil
		}
	case 250:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2785
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2789
		{
			sqlVAL.union.val = nil
		}
	case 252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2795
		{
			sqlVAL.union.val = true
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2799
		{
			sqlVAL.union.val = false
		}
	case 254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2805
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2809
		{
			sqlVAL.union.val = nil
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2816
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2820
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2824
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2830
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2834
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 261:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2859
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2870
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2881
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2890
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2900
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2909
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2918
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2927
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2931
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2934
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2938
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2945
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2958
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2965
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2972
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2978
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2986
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2990
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 287:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3011
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3018
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3022
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3026
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3030
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 292:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3073
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3085
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.backupTargetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3095
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3106
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.backupTargetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3115
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3119
		{
			sqlVAL.union.val = (*tree.BackupTargetList)(nil)
		}
	case 298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3123
		{
			t := sqlDollar[1].union.backupTargetList()
			sqlVAL.union.val = &t
		}
	case 299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3131
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3135
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3139
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3146
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3150
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3159
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3163
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: tree.MakeDBool(true)}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3167
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: sqlDollar[3].union.expr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3171
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3175
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3179
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(false)}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3183
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3187
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3269
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.backupTargetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3280
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3299
		{
			sqlVAL.union.val = &tree.AlterBackupSchedule{
				ScheduleID: uint64(sqlDollar[4].union.int64()),
				Cmds:       sqlDollar[5].union.alterBackupScheduleCmds(),
			}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3305
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3310
		{
			sqlVAL.union.val = tree.AlterBackupScheduleCmds{sqlDollar[1].union.alterBackupScheduleCmd()}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3314
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupScheduleCmds(), sqlDollar[3].union.alterBackupScheduleCmd())
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3321
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetLabel{
				Label: sqlDollar[3].union.expr(),
			}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3327
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetInto{
				Into: sqlDollar[3].union.stringOrPlaceholderOptList(),
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3333
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetWith{
				With: sqlDollar[3].union.backupOptions(),
			}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3339
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetRecurring{
				Recurrence: sqlDollar[2].union.expr(),
			}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3345
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{AlwaysFull: true},
			}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3351
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{Recurrence: sqlDollar[4].union.expr()},
			}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3357
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetScheduleOption{
				Option: sqlDollar[4].union.kvOption(),
			}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3370
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3380
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3386
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3390
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3396
		{
			sqlVAL.union.val = sqlDollar[1].union.labelSpec()
		}
	case 331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3400
		{
			sqlVAL.union.val = &tree.LabelSpec{IfNotExists: false}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3409
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3413
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3417
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 335:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3423
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3427
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3431
		{
			sqlVAL.union.val = nil
		}
	case 338:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3448
		{
			sqlVAL.union.val = &tree.CreateExternalConnection{
				ConnectionLabelSpec: *(sqlDollar[4].union.labelSpec()),
				As:                  sqlDollar[6].union.expr(),
			}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3454
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3465
		{
			sqlVAL.union.val = &tree.DropExternalConnection{
				ConnectionLabel: sqlDollar[4].union.expr(),
			}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3470
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3505
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3514
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3524
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3533
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3543
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3552
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				Subdir:             sqlDollar[5].union.expr(),
				From:               sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[8].union.asOfClause(),
				Options:            *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3561
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3565
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3569
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3575
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3579
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3586
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true, ID: tenID}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3594
		{
			if sqlDollar[3].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3601
		{
			sqlVAL.union.val = tree.TenantID{Specified: false}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3608
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3612
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3616
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3623
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3627
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3636
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3640
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3644
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3648
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3652
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3672
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3676
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3680
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3688
		{
			sqlVAL.union.val = &tree.RestoreOptions{SchemaOnly: true}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3692
		{
			sqlVAL.union.val = &tree.RestoreOptions{VerifyData: true}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3697
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3703
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3707
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3734
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3739
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 381:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3743
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3749
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3754
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3759
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3763
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3780
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3783
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3787
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3791
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3799
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3803
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3813
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3819
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3823
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3827
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3831
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3837
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3841
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3847
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 401:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3851
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3855
		{
			sqlVAL.union.val = nil
		}
	case 403:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3867
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3881
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3887
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3891
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3897
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3901
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3909
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3913
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3917
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3921
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3925
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3929
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3933
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3937
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3941
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3945
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3949
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3953
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3957
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3961
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3969
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3970
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3971
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3972
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3973
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3983
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3991
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3993
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4000
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4010
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4019
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4027
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4029
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4033
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4036
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4046
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4055
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4063
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4065
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4069
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4072
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4080
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4083
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4087
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4091
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4095
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4099
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4112
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4117
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4120
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4121
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4125
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4130
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4142
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4145
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4147
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4148
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4149
		{
			return helpWith(sqllex, "CREATE TENANT")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4150
		{
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4151
		{
			return helpWith(sqllex, "CREATE")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4158
		{
			sqlVAL.union.val = &tree.CreateTenant{Name: tree.Name(sqlDollar[3].str)}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4162
		{
			sqlVAL.union.val = &tree.CreateTenantFromReplication{
				Name:                        tree.Name(sqlDollar[3].str),
				ReplicationSourceTenantName: tree.Name(sqlDollar[7].str),
				ReplicationSourceAddress:    sqlDollar[9].union.expr(),
			}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4169
		{
			return helpWith(sqllex, "CREATE TENANT")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4176
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4179
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4183
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4186
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4189
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:4207
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToFunctionName()
			sqlVAL.union.val = &tree.CreateFunction{
				IsProcedure: false,
				Replace:     sqlDollar[2].union.bool(),
				FuncName:    name,
				Args:        sqlDollar[6].union.functionArgs(),
				ReturnType: tree.FuncReturnType{
					Type:  sqlDollar[10].union.typeReference(),
					IsSet: sqlDollar[9].union.bool(),
				},
				Options:     sqlDollar[11].union.functionOptions(),
				RoutineBody: sqlDollar[12].union.routineBody(),
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4222
		{
			return helpWith(sqllex, "CREATE FUNCTION")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4225
		{
			sqlVAL.union.val = true
		}
	case 488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4226
		{
			sqlVAL.union.val = false
		}
	case 489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4229
		{
			sqlVAL.union.val = true
		}
	case 490:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4230
		{
			sqlVAL.union.val = false
		}
	case 492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4236
		{
			sqlVAL.union.val = sqlDollar[1].union.functionArgs()
		}
	case 493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4237
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4240
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4242
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4249
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4255
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4263
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[2].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[2].union.functionArgClass(),
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4279
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[2].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4287
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[2].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4294
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[1].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4302
		{
			sqlVAL.union.val = tree.FunctionArgIn
		}
	case 505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4303
		{
			return unimplemented(sqllex, "create function with 'OUT' argument class")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4304
		{
			return unimplemented(sqllex, "create function with 'INOUT' argument class")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4305
		{
			return unimplemented(sqllex, "create function with 'IN OUT' argument class")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4306
		{
			return unimplementedWithIssueDetail(sqllex, 88947, "variadic user-defined functions")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4315
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOptions()
		}
	case 512:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4316
		{
			sqlVAL.union.val = tree.FunctionOptions{}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4319
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4321
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4327
		{
			sqlVAL.union.val = tree.FunctionBodyStr(sqlDollar[2].str)
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4331
		{
			lang, err := tree.AsFunctionLanguage(sqlDollar[2].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = lang
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4338
		{
			return unimplemented(sqllex, "create transform function")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4339
		{
			return unimplemented(sqllex, "create window function")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4341
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOption()
		}
	case 520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4347
		{
			sqlVAL.union.val = tree.FunctionCalledOnNullInput
		}
	case 521:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4351
		{
			sqlVAL.union.val = tree.FunctionReturnsNullOnNullInput
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4355
		{
			sqlVAL.union.val = tree.FunctionStrict
		}
	case 523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4359
		{
			sqlVAL.union.val = tree.FunctionImmutable
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4363
		{
			sqlVAL.union.val = tree.FunctionStable
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4367
		{
			sqlVAL.union.val = tree.FunctionVolatile
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4371
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4375
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4379
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4383
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = tree.FunctionLeakproof(true)
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4391
		{
			sqlVAL.union.val = tree.FunctionLeakproof(false)
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4395
		{
			return unimplemented(sqllex, "create function...cost")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4399
		{
			return unimplemented(sqllex, "create function...rows")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4403
		{
			return unimplemented(sqllex, "create function...support")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4410
		{
			return unimplemented(sqllex, "create function...set")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4411
		{
			return unimplemented(sqllex, "create function...parallel")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4418
		{
			sqlVAL.union.val = &tree.RoutineReturn{
				ReturnVal: sqlDollar[2].union.expr(),
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4430
		{
			sqlVAL.union.val = append(sqlDollar[1].union.stmts(), sqlDollar[2].union.stmt())
		}
	case 542:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4434
		{
			sqlVAL.union.val = tree.Statements{}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4440
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: tree.Statements{sqlDollar[1].union.stmt()},
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4446
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: sqlDollar[3].union.stmts(),
			}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4452
		{
			sqlVAL.union.val = (*tree.RoutineBody)(nil)
		}
	case 546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4464
		{
			sqlVAL.union.val = &tree.DropFunction{
				Functions:    sqlDollar[3].union.functionObjs(),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4471
		{
			sqlVAL.union.val = &tree.DropFunction{
				IfExists:     true,
				Functions:    sqlDollar[5].union.functionObjs(),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4478
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = tree.FuncObjs{sqlDollar[1].union.functionObj()}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4486
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionObjs(), sqlDollar[3].union.functionObj())
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4492
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
				Args:     sqlDollar[2].union.functionArgs(),
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4499
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4507
		{
			sqlVAL.union.val = sqlDollar[2].union.functionArgs()
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4511
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4517
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4521
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 557:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4527
		{
			sqlVAL.union.val = &tree.AlterFunctionOptions{
				Function: sqlDollar[3].union.functionObj(),
				Options:  sqlDollar[4].union.functionOptions(),
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4536
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4540
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4545
		{
		}
	case 561:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4546
		{
		}
	case 562:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4550
		{
			sqlVAL.union.val = &tree.AlterFunctionRename{
				Function: sqlDollar[3].union.functionObj(),
				NewName:  tree.Name(sqlDollar[6].str),
			}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4559
		{
			sqlVAL.union.val = &tree.AlterFunctionSetSchema{
				Function:      sqlDollar[3].union.functionObj(),
				NewSchemaName: tree.Name(sqlDollar[6].str),
			}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = &tree.AlterFunctionSetOwner{
				Function: sqlDollar[3].union.functionObj(),
				NewOwner: sqlDollar[6].union.roleSpec(),
			}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4577
		{
			sqlVAL.union.val = &tree.AlterFunctionDepExtension{
				Function:  sqlDollar[3].union.functionObj(),
				Remove:    sqlDollar[4].union.bool(),
				Extension: tree.Name(sqlDollar[8].str),
			}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = true
		}
	case 567:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4591
		{
			sqlVAL.union.val = false
		}
	case 568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4596
		{
			return unimplemented(sqllex, "create access method")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4597
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4598
		{
			return unimplemented(sqllex, "create cast")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4599
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4600
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4601
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4602
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4603
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4604
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4605
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4606
		{
			return unimplemented(sqllex, "create publication")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4607
		{
			return unimplemented(sqllex, "create rule")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4608
		{
			return unimplemented(sqllex, "create server")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4609
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4610
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4611
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4612
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4615
		{
		}
	case 586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4616
		{
		}
	case 587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4619
		{
		}
	case 588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4620
		{
		}
	case 589:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4623
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4624
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4625
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4626
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4627
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4628
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4629
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4630
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4631
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4632
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4633
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4634
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4635
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4636
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4637
		{
			return unimplemented(sqllex, "drop server")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4638
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4639
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4640
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4643
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4644
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4645
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4646
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4647
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4649
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4650
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4651
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4652
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4653
		{
			return helpWith(sqllex, "CREATE FUNCTION")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4663
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4671
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4675
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 629:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4679
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4685
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4689
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4698
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4702
		{
			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 634:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4706
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4712
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4716
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4727
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4739
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4745
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				UsingExtremes: true,
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4751
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Where: tree.NewWhere(tree.AstWhere, sqlDollar[1].union.expr()),
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4766
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4775
		{
			target, err := tree.ChangefeedTargetFromTableExpr(sqlDollar[9].union.tblExpr())
			if err != nil {
				return setErr(sqllex, err)
			}

			sqlVAL.union.val = &tree.CreateChangefeed{
				SinkURI: sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
				Targets: tree.ChangefeedTargets{target},
				Select: &tree.SelectClause{
					Exprs: sqlDollar[7].union.selExprs(),
					From:  tree.From{Tables: tree.TableExprs{sqlDollar[9].union.tblExpr()}},
					Where: tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
				},
			}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4793
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4803
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4807
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4813
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4824
		{
		}
	case 649:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4826
		{
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4830
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 651:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4834
		{
			sqlVAL.str = ""
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4840
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 653:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4844
		{

			sqlVAL.union.val = nil
		}
	case 654:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4859
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Using:     sqlDollar[5].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4870
		{
			return helpWith(sqllex, "DELETE")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4874
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 657:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4878
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4891
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4893
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeSequences}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4897
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4901
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4904
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4913
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4914
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4915
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4916
		{
			return helpWith(sqllex, "DROP TENANT")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4917
		{
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4918
		{
			return helpWith(sqllex, "DROP")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4921
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4922
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4923
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4924
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4925
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4926
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4927
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4928
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4936
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4940
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4944
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4953
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4961
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4976
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4991
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4999
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5008
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5016
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5024
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5032
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5039
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5046
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5054
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5061
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5068
		{
			sqlVAL.union.val = &tree.DropTenant{
				Name:     tree.Name(sqlDollar[3].str),
				IfExists: false,
			}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5075
		{
			sqlVAL.union.val = &tree.DropTenant{
				Name:     tree.Name(sqlDollar[5].str),
				IfExists: true,
			}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5081
		{
			return helpWith(sqllex, "DROP TENANT")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5085
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5091
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5095
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 717:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5104
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5112
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5119
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5127
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5131
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5134
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5138
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5143
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5165
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5170
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5172
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5177
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5181
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5204
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5211
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5213
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5221
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5229
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5237
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5245
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5256
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5264
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5267
		{
			return helpWith(sqllex, "DELETE")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5269
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5270
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5271
		{
			return helpWith(sqllex, "INSERT")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5274
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5276
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5279
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5284
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5285
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5286
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5291
		{
			return helpWith(sqllex, "DELETE")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5292
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5293
		{
			return helpWith(sqllex, "INSERT")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5295
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5299
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5300
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5304
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5308
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5318
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5324
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5328
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5332
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5339
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5347
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5353
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5359
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5378
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5385
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5392
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5396
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5400
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5406
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5414
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = &tree.ShowTenant{Name: tree.Name(sqlDollar[3].str)}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5429
		{
			return helpWith(sqllex, "SHOW TENANT")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5437
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5445
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5453
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5457
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 809:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5461
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5471
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5478
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5486
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5490
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 814:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5494
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5504
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5508
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5512
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5516
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5519
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5543
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5547
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5551
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5555
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5559
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5570
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5574
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5586
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5598
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5610
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:        sqlDollar[5].union.roleSpecList(),
				WithGrantOption: sqlDollar[6].union.bool(),
			}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5620
		{
			return helpWith(sqllex, "GRANT")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), GrantOptionFor: false}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5648
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.grantTargetList(), GrantOptionFor: true}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5652
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5656
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5660
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5664
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.grantTargetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5668
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5690
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5702
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5714
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5726
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5738
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[11].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5750
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees: sqlDollar[5].union.roleSpecList(),
			}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5760
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[6].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:       sqlDollar[8].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5771
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5774
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5780
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5784
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5794
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5798
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5812
		{
			return helpWith(sqllex, "RESET")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5813
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5821
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5825
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5829
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5832
		{
			return helpWith(sqllex, "RESET")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5840
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5843
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5854
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5857
		{
			return helpWith(sqllex, "USE")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5861
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5862
		{
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5863
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5867
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5868
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5869
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5870
		{
			return helpWith(sqllex, "USE")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5886
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5901
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5904
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5922
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5930
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5934
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 888:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5938
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5944
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5948
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5954
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5958
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5970
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5981
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5984
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5994
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6002
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6009
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6010
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6024
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6040
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6046
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6052
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6055
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6060
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6063
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6077
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6082
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6099
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6102
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6104
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6107
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6111
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6123
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6127
		{
			return unimplemented(sqllex, "set from current")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6131
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6136
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6145
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6150
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6154
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6166
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6171
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6178
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6182
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6188
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6192
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6199
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6220
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6224
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6230
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6234
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6238
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6242
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6246
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6252
		{
			sqlVAL.union.val = tree.Low
		}
	case 949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6256
		{
			sqlVAL.union.val = tree.Normal
		}
	case 950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.union.val = tree.High
		}
	case 951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6271
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6275
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6279
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6284
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6288
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6305
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6306
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6307
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6308
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6309
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6310
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6311
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6312
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6313
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6314
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6316
		{
			return helpWith(sqllex, "SHOW FUNCTIONS")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6317
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6318
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6319
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6320
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6321
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6323
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6324
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6325
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6327
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6329
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6330
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6331
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6332
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6333
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6334
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6335
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6336
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6337
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6338
		{
			return helpWith(sqllex, "SHOW TENANT")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6339
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6340
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6341
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6342
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6343
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6344
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6345
		{
			return helpWith(sqllex, "SHOW")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6348
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6357
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6363
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6368
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6378
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6388
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = true
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6396
		{
			sqlVAL.union.val = false
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6406
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6410
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6416
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6420
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6424
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6430
		{
			sqlVAL.union.val = true
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = false
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = false
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6448
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6453
		{
			return helpWith(sqllex, "FETCH")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6466
		{
			return helpWith(sqllex, "MOVE")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6470
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6477
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6484
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6491
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6498
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6505
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6525
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6533
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6540
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6548
		{
			sqlVAL.union.val = int64(1)
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6549
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6552
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.union.val = int64(1)
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6556
		{
			sqlVAL.union.val = int64(1)
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6560
		{
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6561
		{
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6564
		{
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6565
		{
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6569
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6574
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6579
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6584
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6589
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6599
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6600
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6601
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6606
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6616
		{
			sqlVAL.str = "client_encoding"
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6621
		{
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6623
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6628
		{
			sqlVAL.str = "timezone"
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6629
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6633
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6637
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6657
		{
			sqlVAL.union.val = &tree.ShowTableStats{
				Table:   sqlDollar[5].union.unresolvedObjectName(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6664
		{

			sqlVAL.union.val = &tree.ShowTableStats{
				Table:     sqlDollar[7].union.unresolvedObjectName(),
				UsingJSON: true,
				Options:   sqlDollar[8].union.kvOptions(),
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6672
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6685
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6693
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6701
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6707
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6717
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6726
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6734
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6742
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6750
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6758
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupValidateDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6765
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6769
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6777
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6781
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6785
		{
			sqlVAL.union.val = tree.BackupValidateDetails
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6797
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6801
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6804
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6806
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6809
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6811
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6815
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6818
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6822
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6824
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6838
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6846
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6849
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6857
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6861
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6865
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6869
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6872
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6880
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6883
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6889
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6895
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6901
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6908
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6912
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6922
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6931
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6938
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6941
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6954
		{
			lst := sqlDollar[3].union.grantTargetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6963
		{
			sqlVAL.union.val = &tree.ShowGrants{
				Targets:  &tree.GrantTargetList{System: true},
				Grantees: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6969
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6977
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6980
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6986
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6990
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6993
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6995
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6999
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7002
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7016
		{
			sqlVAL.union.val = &tree.ShowCommitTimestamp{}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7026
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7029
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7031
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7034
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7042
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7045
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7047
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7050
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7054
		{
			sqlVAL.union.val = true
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7056
		{
			sqlVAL.union.val = true
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7058
		{
			sqlVAL.union.val = false
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7075
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7079
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7083
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7086
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7087
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7088
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7090
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7094
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7102
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7105
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7107
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7115
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7123
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7131
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7132
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7142
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7148
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7150
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7156
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7158
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7164
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7172
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7178
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7182
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7186
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7200
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7202
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7205
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7207
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7211
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7214
		{
			sqlVAL.union.val = true
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = false
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7223
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7226
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7231
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7239
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7259
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7262
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = &tree.ShowFunctions{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			}}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.union.val = &tree.ShowFunctions{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			}}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = &tree.ShowFunctions{}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7290
		{
			return helpWith(sqllex, "SHOW FUNCTIONS")
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7300
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7302
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7305
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7308
		{
			sqlVAL.union.val = true
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.union.val = false
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7316
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7320
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7323
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7330
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7334
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7337
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7344
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7348
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7352
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7362
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7369
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7373
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7384
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7387
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7395
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7400
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7405
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7409
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7416
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7420
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7423
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7440
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7445
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7450
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7455
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7460
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeIndexes, Name: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7465
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSecondaryIndexes, Name: sqlDollar[6].union.unresolvedObjectName()}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7470
		{

			sqlVAL.union.val = &tree.ShowCreateFunction{
				Name: tree.ResolvableFunctionReference{
					FunctionReference: sqlDollar[4].union.unresolvedObjectName().ToUnresolvedName(),
				},
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7479
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7483
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7487
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7490
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7500
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7503
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7505
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7508
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7517
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7520
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7522
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{ConnectionLabel: sqlDollar[5].union.expr()}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7525
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7533
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7536
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7547
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7557
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7565
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7573
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7581
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7588
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7594
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7596
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7599
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7601
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7604
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7608
		{
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7617
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7625
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7631
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7640
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7645
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7652
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7661
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7665
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7681
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7687
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7693
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7699
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7706
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7712
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7718
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7722
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7728
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7735
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7741
		{
			tmp := sqlDollar[2].union.grantTargetList()
			sqlVAL.union.val = &tmp
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7746
		{
			sqlVAL.union.val = (*tree.GrantTargetList)(nil)
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7868
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7872
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7876
		{

			sqlVAL.union.val = tree.GrantTargetList{
				Tables:   tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7915
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7919
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: true, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7923
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7928
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7932
		{
			sqlVAL.union.val = tree.GrantTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7936
		{
			sqlVAL.union.val = tree.GrantTargetList{ExternalConnections: sqlDollar[3].union.nameList()}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = tree.GrantTargetList{Functions: sqlDollar[2].union.functionObjs()}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7950
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7954
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7958
		{
			sqlVAL.union.val = tree.BackupTargetList{
				Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7968
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7979
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7987
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7996
		{
			sqlVAL.union.val = tree.BackupTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.union.val = tree.GrantTargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8009
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8013
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8017
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8025
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8029
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8038
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8039
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8040
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8041
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8047
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8048
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8049
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8050
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8058
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8061
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8071
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8080
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8089
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8091
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8095
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8099
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8102
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8107
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8111
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8126
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8134
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8136
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8142
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8150
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8153
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8162
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8168
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8175
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8189
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8200
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8209
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8217
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8253
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8268
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8285
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8289
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8296
		{

			sqlVAL.union.val = nil
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8302
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8308
		{
			sqlVAL.str = ""
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8312
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8318
		{
			sqlVAL.union.val = nil
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8322
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8327
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8331
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8335
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8339
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8349
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8353
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8365
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8369
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8375
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8388
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8402
		{
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8403
		{
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8404
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8424
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8428
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8429
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8432
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8437
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8443
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8447
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8453
		{
			sqlVAL.union.val = sqlDollar[1].union.colTableDef()
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8459
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8472
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8485
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8491
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8496
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8497
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8499
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8500
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8501
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8502
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8503
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8504
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8509
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8516
		{
			sqlVAL.str = ""
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8529
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8537
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8543
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8549
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8571
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8577
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8584
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8591
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8597
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8607
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8617
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8621
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8627
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8641
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8652
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8656
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8666
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8670
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8678
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8682
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8686
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8704
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8708
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8712
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8716
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8728
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8736
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8740
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8744
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8748
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8758
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8762
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8766
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8771
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8777
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8783
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8787
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8793
		{

			sqlVAL.union.val = true
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8798
		{
			sqlVAL.union.val = false
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8803
		{
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8807
		{
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8810
		{
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8814
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             "",
				Columns:          sqlDollar[3].union.idxElems(),
				Sharded:          sqlDollar[5].union.shardedIndexDef(),
				Storing:          sqlDollar[6].union.nameList(),
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
				NotVisible:       sqlDollar[10].union.bool(),
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8827
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
				NotVisible:       sqlDollar[11].union.bool(),
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8840
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
					NotVisible:       sqlDollar[12].union.bool(),
				},
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             "",
				Columns:          sqlDollar[4].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[6].union.partitionByIndex(),
				StorageParams:    sqlDollar[7].union.storageParams(),
				Predicate:        sqlDollar[8].union.expr(),
				NotVisible:       sqlDollar[9].union.bool(),
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8867
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
				NotVisible:       sqlDollar[10].union.bool(),
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8881
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8893
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8898
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8904
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8935
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8946
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8957
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8963
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8973
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8984
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8988
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8995
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9001
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9013
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9017
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9029
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9033
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9039
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9043
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9049
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9056
		{
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9057
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9058
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9059
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9060
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9061
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9079
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9083
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9089
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9095
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9101
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9105
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9111
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9115
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9135
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9139
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9143
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9160
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9164
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9168
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9172
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9178
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9184
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9192
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9200
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9204
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9208
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9228
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9237
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9245
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9249
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9252
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9253
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9256
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9270
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9272
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9274
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9284
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9286
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9288
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9290
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9292
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9293
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9296
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9298
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9300
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9301
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9303
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9306
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9317
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9321
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9341
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9345
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9348
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9359
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9375
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9382
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9386
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.str = ""
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9402
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9409
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9413
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9421
		{
			sqlVAL.union.val = true
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9425
		{

			sqlVAL.union.val = true
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9430
		{
			sqlVAL.union.val = false
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9442
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9456
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9468
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9480
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
				WithData:     sqlDollar[8].union.bool(),
			}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9491
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
				WithData:     sqlDollar[11].union.bool(),
			}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9502
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9506
		{
			sqlVAL.union.val = false
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = true
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.union.val = true
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9520
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9524
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9528
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9532
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9536
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9552
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9560
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9564
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9576
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9580
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9584
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9588
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9592
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9596
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9600
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9604
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9608
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9612
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9620
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9624
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9630
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9634
		{
			sqlVAL.union.val = nil
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9640
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9644
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9649
		{
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9650
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9659
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9667
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9675
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9677
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9679
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9681
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9683
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9685
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9689
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9693
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9703
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:9720
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[17].union.bool(),
			}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:9738
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[20].union.bool(),
			}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9757
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[16].union.bool(),
			}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:9774
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[19].union.bool(),
			}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9791
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9795
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9810
		{
			sqlVAL.union.val = false
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.union.val = true
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.union.val = false
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = true
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9830
		{
			sqlVAL.union.val = false
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9836
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9840
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9849
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9855
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9861
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9869
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder, OpClass: tree.Name(opClass)}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9888
		{
			sqlVAL.str = ""
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9892
		{
			sqlVAL.str = ""
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9904
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = true
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = false
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = false
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9930
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9936
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9942
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9950
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9964
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9972
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9982
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10001
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10014
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10026
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10032
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10041
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10049
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10059
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10065
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10075
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10081
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10093
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10102
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10112
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10121
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10133
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10139
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10147
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10156
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10167
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10173
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10185
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10191
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10205
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10211
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10219
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10223
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10235
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10244
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10270
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.targetObjectType(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = true
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = false
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.targetObjectType(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.targetObjectType(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = privilege.Tables
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10318
		{
			sqlVAL.union.val = privilege.Sequences
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = privilege.Types
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = privilege.Schemas
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10330
		{
			sqlVAL.union.val = privilege.Functions
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10334
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON ROUTINES ...")
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10340
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.str = ""
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10369
		{
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10370
		{
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10373
		{
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10374
		{
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10382
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10385
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10403
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10409
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10412
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10425
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10433
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10435
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10441
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10454
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10462
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10470
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10478
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10481
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10485
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10486
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10487
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10503
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10506
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10519
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10528
		{
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10529
		{
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10530
		{
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10540
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10544
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10547
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10553
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10554
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10561
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10565
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10568
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10572
		{
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10573
		{
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10577
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10581
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10591
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10597
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10601
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10614
		{
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10616
		{
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10620
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10625
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10629
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10633
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10637
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10643
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10655
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10659
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10669
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
				SecondaryRegion: tree.Name(sqlDollar[15].str),
			}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:10696
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
				SecondaryRegion: tree.Name(sqlDollar[17].str),
			}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10712
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10717
		{
			sqlVAL.str = ""
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10722
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10729
		{
			sqlVAL.str = ""
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10734
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10741
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10747
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10752
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10759
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10769
		{

		}
	case 1824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10776
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10780
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10784
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10793
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10803
		{
			sqlVAL.str = ""
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10809
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10813
		{
			sqlVAL.str = ""
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10823
		{
			sqlVAL.str = ""
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10829
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10833
		{
			sqlVAL.str = ""
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10839
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10847
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10853
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10857
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10864
		{
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10865
		{
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10880
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10887
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10894
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10905
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10912
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10916
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10925
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10930
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10936
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10940
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10944
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10950
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10954
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10974
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10978
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10985
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10993
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11002
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:11009
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11019
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11024
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11028
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:11045
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11057
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11060
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11069
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11073
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11086
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11089
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11093
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11110
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11125
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11166
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11172
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11176
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11191
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11195
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11199
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11203
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11207
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11211
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11215
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11219
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11224
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11225
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11228
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11229
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11233
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11237
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11243
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11254
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11255
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11258
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11259
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11263
		{
			sqlVAL.union.val = tree.LockWaitSkipLocked
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11264
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11269
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11304
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11305
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11306
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11328
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11341
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11355
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11367
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11371
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11380
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11389
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11404
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11411
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11423
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11427
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11438
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11448
		{
			sqlVAL.union.val = true
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11452
		{
			sqlVAL.union.val = false
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11458
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11468
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11480
		{
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11481
		{
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11489
		{
			sqlVAL.union.val = nil
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11494
		{
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11495
		{
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11499
		{
			sqlVAL.union.val = true
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11503
		{
			sqlVAL.union.val = false
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11507
		{
			sqlVAL.union.val = false
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11513
		{
			sqlVAL.union.val = true
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11519
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11524
		{
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11525
		{
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11528
		{
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11529
		{
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11533
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11537
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11543
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11549
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11553
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11560
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11564
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11570
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11582
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11587
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11599
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11603
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11607
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11613
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11622
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11633
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11634
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11638
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11642
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11646
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11660
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11664
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11672
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11679
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11701
		{
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11702
		{
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11705
		{
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11706
		{
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11723
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11727
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11732
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11733
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11739
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11740
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11741
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11742
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11746
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11750
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11769
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11772
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11774
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11786
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11789
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11791
		{
			sqlVAL.union.val = tree.From{}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11797
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11801
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11807
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11811
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11816
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11821
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11827
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11832
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11837
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11842
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11848
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11853
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11858
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11865
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11870
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11881
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11885
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11889
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11897
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11931
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11941
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11951
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11959
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11968
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11972
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11976
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11987
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12011
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12017
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12028
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12032
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12038
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12040
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12044
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12050
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12054
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12060
		{
			sqlVAL.union.val = tree.ColumnDefList{tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12064
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), tree.ColumnDef{Name: tree.Name(sqlDollar[3].str)})
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12071
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12075
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12081
		{
			sqlVAL.union.val = tree.ColumnDefList{sqlDollar[1].union.colDef()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12085
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), sqlDollar[3].union.colDef())
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12091
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12095
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str), Type: sqlDollar[2].union.typeReference()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12100
		{
			sqlVAL.union.val = nil
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12101
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12102
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12106
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12110
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12116
		{
			sqlVAL.union.val = true
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12120
		{
			sqlVAL.union.val = false
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12140
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12144
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12148
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12152
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12156
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12160
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12166
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12170
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12177
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12183
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12187
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12194
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12200
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12207
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12213
		{
			sqlVAL.str = tree.AstFull
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12217
		{
			sqlVAL.str = tree.AstLeft
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12221
		{
			sqlVAL.str = tree.AstRight
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12225
		{
			sqlVAL.str = tree.AstInner
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12231
		{
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12232
		{
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12256
		{
			sqlVAL.str = tree.AstHash
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12260
		{
			sqlVAL.str = tree.AstMerge
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12264
		{
			sqlVAL.str = tree.AstLookup
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12268
		{
			sqlVAL.str = tree.AstInverted
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12272
		{
			sqlVAL.str = ""
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12285
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12289
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12294
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12295
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12296
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12297
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12301
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12306
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12314
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: sqlDollar[2].union.unresolvedObjectName(), Star: false}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12318
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: nil, Star: true}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12332
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12336
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12342
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12348
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12358
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12368
		{
			sqlVAL.union.val = true
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12372
		{
			sqlVAL.union.val = false
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12378
		{
			sqlVAL.union.val = true
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12382
		{
			sqlVAL.union.val = false
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12388
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12395
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12407
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12420
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12428
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12429
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12439
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12446
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12447
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12449
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12457
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12458
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12470
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12477
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12486
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12526
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12531
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12536
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12537
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12540
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12541
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12542
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12543
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12544
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12545
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12546
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12547
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12548
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12549
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12550
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12551
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12552
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12553
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12554
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12555
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12556
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12557
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12558
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12559
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12560
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12561
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12562
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12563
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12564
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12565
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12566
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12567
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12568
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12569
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12570
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12571
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12574
		{
			sqlVAL.union.val = types.Geography
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12575
		{
			sqlVAL.union.val = types.Geometry
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12576
		{
			sqlVAL.union.val = types.Box2D
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12578
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12582
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12586
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12594
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12622
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12630
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12638
		{
			sqlVAL.union.val = nil
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12645
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12649
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12653
		{
			sqlVAL.union.val = types.Int2
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12657
		{
			sqlVAL.union.val = types.Int
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12661
		{
			sqlVAL.union.val = types.Float4
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12665
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12669
		{
			sqlVAL.union.val = types.Float
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12673
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12681
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12689
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12697
		{
			sqlVAL.union.val = types.Bool
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12703
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12716
		{
			sqlVAL.union.val = types.Float
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12722
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12728
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12736
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12740
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12744
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12750
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12762
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12768
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12772
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12776
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12780
		{
			sqlVAL.union.val = types.String
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12789
		{
			sqlVAL.union.val = true
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12790
		{
			sqlVAL.union.val = false
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12795
		{
			sqlVAL.union.val = types.Date
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12799
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12807
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12819
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12821
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12830
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12838
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12851
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12855
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12865
		{
			sqlVAL.union.val = true
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12866
		{
			sqlVAL.union.val = false
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12867
		{
			sqlVAL.union.val = false
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12871
		{
			sqlVAL.union.val = types.Interval
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12875
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12879
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12890
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12898
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12906
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12914
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12922
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12930
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12936
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12945
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12954
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12963
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12969
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12978
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12984
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12994
		{
			sqlVAL.union.val = nil
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13000
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13008
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13045
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13049
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13053
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13057
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13068
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13073
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13077
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13081
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13085
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13089
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13093
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13097
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13101
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13105
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13109
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13113
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13117
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13121
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13125
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13129
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13133
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13137
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13141
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13145
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13149
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13153
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13157
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13161
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13165
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13169
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13173
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13177
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13181
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13185
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13189
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13193
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13197
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13201
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13205
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13209
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13213
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13217
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13225
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13235
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13239
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13243
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13247
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13251
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13255
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13259
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13263
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13267
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13271
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13275
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13279
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13283
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13287
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13291
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13295
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13299
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13303
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13307
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13311
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13315
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13323
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13331
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13335
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13339
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13343
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13347
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13360
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13364
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13368
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13372
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13376
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13380
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13384
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13388
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13392
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13396
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13400
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13404
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13408
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13412
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13416
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13420
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13424
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13441
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13446
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13458
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13462
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13466
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13470
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13474
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13478
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13482
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13486
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13490
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13494
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13498
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13502
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13506
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13510
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13514
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13518
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13522
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13526
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13530
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13534
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13538
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13542
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13546
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13550
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13554
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13562
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13572
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13576
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13580
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13584
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13598
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13606
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13642
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13646
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13650
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13654
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13658
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13663
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13665
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13669
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13673
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13677
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13681
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13685
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13689
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13698
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13705
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13709
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13713
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13723
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13728
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13732
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13736
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13740
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13744
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13747
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13751
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13755
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13758
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13759
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13761
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13767
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13771
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13774
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13783
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							un, err := name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
							typ = &un
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13836
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13849
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13861
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13870
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13871
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13876
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13880
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13884
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13890
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13894
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13898
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13902
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13906
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13910
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13916
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13920
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13924
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13928
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13932
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13936
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13940
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13944
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13948
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13952
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13956
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13960
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13964
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13971
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13974
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13976
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13979
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13981
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13985
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13988
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13990
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13994
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13997
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13999
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14003
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14006
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14008
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14012
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14015
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14017
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14020
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14022
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14025
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14027
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14030
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14032
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14035
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14037
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14040
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14042
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14046
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14049
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14050
		{
			return unimplemented(sqllex, "treat")
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14052
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14056
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14060
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14064
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14068
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14071
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14073
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14076
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14082
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14086
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2459:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14092
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14096
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14103
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14107
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14113
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14117
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14123
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14131
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14135
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14139
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14146
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14166
		{
			sqlVAL.str = ""
		}
	case 2472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14172
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14176
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14182
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14190
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14198
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2477:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14206
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14212
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14225
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14253
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14257
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14261
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14265
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14272
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14281
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14285
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14289
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14293
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14298
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14311
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14315
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2493:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14322
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14334
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14338
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14342
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14358
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14359
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14360
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14361
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14362
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14363
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14364
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14365
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14366
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14367
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14368
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14369
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14371
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14372
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14373
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14374
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14375
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14376
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14377
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14378
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14379
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14380
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14381
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14382
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14383
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14384
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14385
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14386
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14387
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14388
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14389
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14390
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14391
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14392
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14393
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14398
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14414
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14421
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14422
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14423
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14424
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14447
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14451
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14457
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14461
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14465
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14476
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14480
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14486
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14490
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2551:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14497
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14503
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14507
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14513
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14517
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14523
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14527
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14533
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14537
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14543
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14547
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2570:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14570
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14574
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14578
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14584
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14591
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14595
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14612
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14616
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14620
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14624
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14628
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14634
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14640
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14646
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14650
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14654
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14660
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2588:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14672
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14679
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14683
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2591:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14689
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14695
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2593:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14699
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2595:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14706
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14712
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2597:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14716
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2599:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14723
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14729
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14733
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14738
		{
		}
	case 2603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14739
		{
		}
	case 2604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14743
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14747
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14753
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14762
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14766
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14770
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14782
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14786
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14792
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14796
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14815
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14823
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14846
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14855
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2621:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14859
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14863
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14867
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14873
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14877
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14892
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14896
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14908
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14912
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14921
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14932
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14941
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14949
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2640:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14966
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15051
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15059
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15063
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15069
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15073
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15079
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15085
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2668:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15092
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15119
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15126
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2677:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15130
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2678:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:15134
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2680:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:15148
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15152
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15156
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15169
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15174
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15182
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15200
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15213
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2692:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15220
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2700:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15245
		{
			sqlVAL.str = ""
		}
	case 2701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15251
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2702:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15255
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
