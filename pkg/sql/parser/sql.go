// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:868
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13600

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1574,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	260, 406,
	-2, 0,
	-1, 74,
	242, 243,
	515, 243,
	-2, 0,
	-1, 87,
	230, 1310,
	244, 1310,
	260, 402,
	389, 402,
	400, 1064,
	439, 402,
	452, 1064,
	499, 1064,
	526, 402,
	552, 1064,
	-2, 0,
	-1, 93,
	132, 1574,
	237, 1574,
	537, 1574,
	538, 1574,
	-2, 0,
	-1, 109,
	150, 1545,
	169, 1545,
	182, 1545,
	240, 1545,
	273, 1545,
	340, 1545,
	350, 1545,
	532, 1545,
	-2, 1516,
	-1, 150,
	158, 913,
	259, 913,
	392, 874,
	457, 874,
	498, 874,
	518, 913,
	520, 874,
	-2, 0,
	-1, 154,
	4, 1576,
	21, 1576,
	22, 1576,
	23, 1576,
	24, 1576,
	25, 1576,
	26, 1576,
	27, 1576,
	29, 1576,
	30, 1576,
	36, 1576,
	41, 1576,
	42, 1576,
	44, 1576,
	45, 1576,
	46, 1576,
	47, 1576,
	48, 1576,
	49, 1576,
	50, 1576,
	51, 1576,
	53, 1576,
	54, 1576,
	55, 1576,
	56, 1576,
	58, 1576,
	59, 1576,
	60, 1576,
	61, 1576,
	62, 1576,
	63, 1576,
	64, 1576,
	68, 1576,
	69, 1576,
	70, 1576,
	71, 1576,
	73, 1576,
	74, 1576,
	75, 1576,
	79, 1576,
	80, 1576,
	81, 1576,
	82, 1576,
	83, 1576,
	84, 1576,
	85, 1576,
	88, 1576,
	89, 1576,
	90, 1576,
	91, 1576,
	92, 1576,
	94, 1576,
	96, 1576,
	97, 1576,
	98, 1576,
	99, 1576,
	100, 1576,
	101, 1576,
	103, 1576,
	104, 1576,
	105, 1576,
	107, 1576,
	108, 1576,
	109, 1576,
	117, 1576,
	118, 1576,
	119, 1576,
	120, 1576,
	121, 1576,
	123, 1576,
	124, 1576,
	125, 1576,
	127, 1576,
	128, 1576,
	129, 1576,
	131, 1576,
	132, 1576,
	133, 1576,
	135, 1576,
	136, 1576,
	137, 1576,
	140, 1576,
	141, 1576,
	142, 1576,
	144, 1576,
	145, 1576,
	147, 1576,
	148, 1576,
	149, 1576,
	151, 1576,
	152, 1576,
	153, 1576,
	154, 1576,
	155, 1576,
	156, 1576,
	157, 1576,
	158, 1576,
	159, 1576,
	160, 1576,
	161, 1576,
	162, 1576,
	163, 1576,
	164, 1576,
	165, 1576,
	166, 1576,
	168, 1576,
	174, 1576,
	175, 1576,
	176, 1576,
	177, 1576,
	181, 1576,
	183, 1576,
	184, 1576,
	188, 1576,
	189, 1576,
	190, 1576,
	191, 1576,
	192, 1576,
	193, 1576,
	194, 1576,
	195, 1576,
	196, 1576,
	197, 1576,
	198, 1576,
	199, 1576,
	200, 1576,
	201, 1576,
	203, 1576,
	204, 1576,
	206, 1576,
	207, 1576,
	209, 1576,
	210, 1576,
	211, 1576,
	212, 1576,
	213, 1576,
	214, 1576,
	215, 1576,
	216, 1576,
	217, 1576,
	219, 1576,
	220, 1576,
	222, 1576,
	223, 1576,
	224, 1576,
	225, 1576,
	226, 1576,
	230, 1576,
	231, 1576,
	232, 1576,
	233, 1576,
	234, 1576,
	237, 1576,
	238, 1576,
	239, 1576,
	241, 1576,
	243, 1576,
	244, 1576,
	246, 1576,
	248, 1576,
	249, 1576,
	250, 1576,
	252, 1576,
	256, 1576,
	257, 1576,
	258, 1576,
	259, 1576,
	260, 1576,
	261, 1576,
	263, 1576,
	264, 1576,
	265, 1576,
	267, 1576,
	268, 1576,
	270, 1576,
	271, 1576,
	274, 1576,
	278, 1576,
	279, 1576,
	280, 1576,
	283, 1576,
	284, 1576,
	285, 1576,
	286, 1576,
	288, 1576,
	289, 1576,
	290, 1576,
	291, 1576,
	292, 1576,
	293, 1576,
	294, 1576,
	295, 1576,
	296, 1576,
	297, 1576,
	298, 1576,
	299, 1576,
	300, 1576,
	301, 1576,
	302, 1576,
	303, 1576,
	304, 1576,
	305, 1576,
	306, 1576,
	307, 1576,
	308, 1576,
	309, 1576,
	311, 1576,
	313, 1576,
	314, 1576,
	315, 1576,
	316, 1576,
	317, 1576,
	318, 1576,
	319, 1576,
	320, 1576,
	321, 1576,
	322, 1576,
	323, 1576,
	324, 1576,
	325, 1576,
	327, 1576,
	328, 1576,
	330, 1576,
	332, 1576,
	333, 1576,
	335, 1576,
	336, 1576,
	337, 1576,
	338, 1576,
	339, 1576,
	342, 1576,
	345, 1576,
	346, 1576,
	347, 1576,
	348, 1576,
	351, 1576,
	352, 1576,
	353, 1576,
	355, 1576,
	357, 1576,
	358, 1576,
	359, 1576,
	360, 1576,
	361, 1576,
	362, 1576,
	363, 1576,
	364, 1576,
	365, 1576,
	366, 1576,
	367, 1576,
	368, 1576,
	369, 1576,
	371, 1576,
	372, 1576,
	373, 1576,
	374, 1576,
	375, 1576,
	376, 1576,
	377, 1576,
	378, 1576,
	379, 1576,
	380, 1576,
	381, 1576,
	382, 1576,
	383, 1576,
	384, 1576,
	385, 1576,
	387, 1576,
	388, 1576,
	390, 1576,
	391, 1576,
	392, 1576,
	393, 1576,
	394, 1576,
	395, 1576,
	396, 1576,
	397, 1576,
	398, 1576,
	399, 1576,
	400, 1576,
	401, 1576,
	402, 1576,
	404, 1576,
	406, 1576,
	407, 1576,
	408, 1576,
	414, 1576,
	416, 1576,
	417, 1576,
	418, 1576,
	419, 1576,
	420, 1576,
	421, 1576,
	422, 1576,
	423, 1576,
	424, 1576,
	425, 1576,
	427, 1576,
	428, 1576,
	429, 1576,
	431, 1576,
	432, 1576,
	433, 1576,
	434, 1576,
	435, 1576,
	436, 1576,
	437, 1576,
	439, 1576,
	440, 1576,
	441, 1576,
	442, 1576,
	443, 1576,
	444, 1576,
	445, 1576,
	446, 1576,
	447, 1576,
	448, 1576,
	449, 1576,
	450, 1576,
	452, 1576,
	453, 1576,
	454, 1576,
	455, 1576,
	456, 1576,
	457, 1576,
	459, 1576,
	460, 1576,
	461, 1576,
	462, 1576,
	463, 1576,
	464, 1576,
	466, 1576,
	467, 1576,
	468, 1576,
	469, 1576,
	470, 1576,
	471, 1576,
	472, 1576,
	473, 1576,
	475, 1576,
	477, 1576,
	478, 1576,
	479, 1576,
	480, 1576,
	481, 1576,
	482, 1576,
	483, 1576,
	484, 1576,
	485, 1576,
	486, 1576,
	487, 1576,
	488, 1576,
	489, 1576,
	490, 1576,
	491, 1576,
	492, 1576,
	494, 1576,
	495, 1576,
	497, 1576,
	498, 1576,
	500, 1576,
	501, 1576,
	502, 1576,
	503, 1576,
	504, 1576,
	505, 1576,
	506, 1576,
	507, 1576,
	508, 1576,
	510, 1576,
	511, 1576,
	512, 1576,
	513, 1576,
	514, 1576,
	516, 1576,
	518, 1576,
	519, 1576,
	520, 1576,
	521, 1576,
	522, 1576,
	523, 1576,
	525, 1576,
	526, 1576,
	527, 1576,
	528, 1576,
	530, 1576,
	531, 1576,
	534, 1576,
	535, 1576,
	536, 1576,
	537, 1576,
	538, 1576,
	539, 1576,
	540, 1576,
	542, 1576,
	545, 1576,
	546, 1576,
	547, 1576,
	548, 1576,
	549, 1576,
	550, 1576,
	552, 1576,
	553, 1576,
	554, 1576,
	555, 1576,
	557, 1576,
	562, 1576,
	563, 1576,
	564, 1576,
	565, 1576,
	566, 1576,
	567, 1576,
	-2, 0,
	-1, 155,
	1, 1427,
	130, 1427,
	248, 1427,
	329, 1427,
	387, 1427,
	396, 1427,
	571, 1427,
	600, 1427,
	-2, 0,
	-1, 157,
	1, 1427,
	600, 1427,
	-2, 0,
	-1, 158,
	1, 1427,
	600, 1427,
	-2, 0,
	-1, 159,
	1, 1427,
	515, 1427,
	600, 1427,
	-2, 0,
	-1, 188,
	150, 1544,
	169, 1544,
	182, 1544,
	240, 1544,
	273, 1544,
	340, 1544,
	350, 1544,
	532, 1544,
	-2, 1519,
	-1, 236,
	4, 1583,
	5, 1583,
	6, 1583,
	7, 1583,
	8, 1583,
	9, 1583,
	10, 1583,
	21, 1583,
	22, 1583,
	23, 1583,
	24, 1583,
	25, 1583,
	26, 1583,
	27, 1583,
	29, 1583,
	30, 1583,
	36, 1583,
	37, 1583,
	41, 1583,
	42, 1583,
	43, 1583,
	44, 1583,
	45, 1583,
	46, 1583,
	47, 1583,
	48, 1583,
	49, 1583,
	50, 1583,
	51, 1583,
	53, 1583,
	54, 1583,
	55, 1583,
	56, 1583,
	58, 1583,
	59, 1583,
	60, 1583,
	61, 1583,
	62, 1583,
	63, 1583,
	64, 1583,
	65, 1583,
	66, 1583,
	67, 1583,
	68, 1583,
	69, 1583,
	70, 1583,
	71, 1583,
	73, 1583,
	74, 1583,
	75, 1583,
	77, 1583,
	79, 1583,
	80, 1583,
	81, 1583,
	82, 1583,
	83, 1583,
	84, 1583,
	85, 1583,
	88, 1583,
	89, 1583,
	90, 1583,
	91, 1583,
	92, 1583,
	94, 1583,
	96, 1583,
	97, 1583,
	98, 1583,
	99, 1583,
	100, 1583,
	101, 1583,
	103, 1583,
	104, 1583,
	105, 1583,
	106, 1583,
	107, 1583,
	108, 1583,
	109, 1583,
	110, 1583,
	111, 1583,
	112, 1583,
	113, 1583,
	114, 1583,
	115, 1583,
	116, 1583,
	117, 1583,
	118, 1583,
	119, 1583,
	120, 1583,
	121, 1583,
	122, 1583,
	123, 1583,
	124, 1583,
	125, 1583,
	126, 1583,
	127, 1583,
	128, 1583,
	129, 1583,
	131, 1583,
	132, 1583,
	133, 1583,
	135, 1583,
	136, 1583,
	137, 1583,
	140, 1583,
	141, 1583,
	142, 1583,
	144, 1583,
	145, 1583,
	147, 1583,
	148, 1583,
	149, 1583,
	151, 1583,
	152, 1583,
	153, 1583,
	154, 1583,
	155, 1583,
	156, 1583,
	157, 1583,
	158, 1583,
	159, 1583,
	160, 1583,
	161, 1583,
	162, 1583,
	163, 1583,
	164, 1583,
	165, 1583,
	166, 1583,
	167, 1583,
	168, 1583,
	174, 1583,
	175, 1583,
	176, 1583,
	177, 1583,
	181, 1583,
	183, 1583,
	184, 1583,
	187, 1583,
	188, 1583,
	189, 1583,
	190, 1583,
	191, 1583,
	192, 1583,
	193, 1583,
	194, 1583,
	195, 1583,
	196, 1583,
	197, 1583,
	198, 1583,
	199, 1583,
	200, 1583,
	201, 1583,
	203, 1583,
	204, 1583,
	206, 1583,
	207, 1583,
	209, 1583,
	210, 1583,
	211, 1583,
	212, 1583,
	213, 1583,
	214, 1583,
	215, 1583,
	216, 1583,
	217, 1583,
	218, 1583,
	219, 1583,
	220, 1583,
	222, 1583,
	223, 1583,
	224, 1583,
	225, 1583,
	226, 1583,
	230, 1583,
	231, 1583,
	232, 1583,
	233, 1583,
	234, 1583,
	236, 1583,
	237, 1583,
	238, 1583,
	239, 1583,
	241, 1583,
	243, 1583,
	244, 1583,
	245, 1583,
	246, 1583,
	247, 1583,
	248, 1583,
	249, 1583,
	250, 1583,
	251, 1583,
	252, 1583,
	256, 1583,
	257, 1583,
	258, 1583,
	259, 1583,
	260, 1583,
	261, 1583,
	263, 1583,
	264, 1583,
	265, 1583,
	267, 1583,
	268, 1583,
	269, 1583,
	270, 1583,
	271, 1583,
	272, 1583,
	274, 1583,
	278, 1583,
	279, 1583,
	280, 1583,
	281, 1583,
	282, 1583,
	283, 1583,
	284, 1583,
	285, 1583,
	286, 1583,
	288, 1583,
	289, 1583,
	290, 1583,
	291, 1583,
	292, 1583,
	293, 1583,
	294, 1583,
	295, 1583,
	296, 1583,
	297, 1583,
	298, 1583,
	299, 1583,
	300, 1583,
	301, 1583,
	302, 1583,
	303, 1583,
	304, 1583,
	305, 1583,
	306, 1583,
	307, 1583,
	308, 1583,
	309, 1583,
	311, 1583,
	312, 1583,
	313, 1583,
	314, 1583,
	315, 1583,
	316, 1583,
	317, 1583,
	318, 1583,
	319, 1583,
	320, 1583,
	321, 1583,
	322, 1583,
	323, 1583,
	324, 1583,
	325, 1583,
	326, 1583,
	327, 1583,
	328, 1583,
	329, 1583,
	330, 1583,
	331, 1583,
	332, 1583,
	333, 1583,
	334, 1583,
	335, 1583,
	336, 1583,
	337, 1583,
	338, 1583,
	339, 1583,
	342, 1583,
	346, 1583,
	347, 1583,
	348, 1583,
	351, 1583,
	352, 1583,
	353, 1583,
	354, 1583,
	355, 1583,
	356, 1583,
	357, 1583,
	358, 1583,
	359, 1583,
	360, 1583,
	361, 1583,
	362, 1583,
	363, 1583,
	364, 1583,
	365, 1583,
	366, 1583,
	367, 1583,
	368, 1583,
	369, 1583,
	371, 1583,
	372, 1583,
	373, 1583,
	374, 1583,
	375, 1583,
	376, 1583,
	377, 1583,
	378, 1583,
	379, 1583,
	380, 1583,
	381, 1583,
	382, 1583,
	383, 1583,
	384, 1583,
	385, 1583,
	387, 1583,
	388, 1583,
	390, 1583,
	391, 1583,
	392, 1583,
	393, 1583,
	394, 1583,
	395, 1583,
	396, 1583,
	397, 1583,
	398, 1583,
	399, 1583,
	400, 1583,
	401, 1583,
	402, 1583,
	404, 1583,
	406, 1583,
	407, 1583,
	408, 1583,
	414, 1583,
	416, 1583,
	417, 1583,
	418, 1583,
	419, 1583,
	420, 1583,
	421, 1583,
	422, 1583,
	423, 1583,
	424, 1583,
	425, 1583,
	427, 1583,
	428, 1583,
	429, 1583,
	430, 1583,
	431, 1583,
	432, 1583,
	433, 1583,
	434, 1583,
	435, 1583,
	436, 1583,
	437, 1583,
	439, 1583,
	440, 1583,
	441, 1583,
	442, 1583,
	443, 1583,
	444, 1583,
	445, 1583,
	446, 1583,
	447, 1583,
	448, 1583,
	449, 1583,
	450, 1583,
	452, 1583,
	453, 1583,
	454, 1583,
	455, 1583,
	456, 1583,
	457, 1583,
	458, 1583,
	459, 1583,
	460, 1583,
	461, 1583,
	462, 1583,
	463, 1583,
	464, 1583,
	465, 1583,
	466, 1583,
	467, 1583,
	468, 1583,
	469, 1583,
	470, 1583,
	471, 1583,
	472, 1583,
	473, 1583,
	475, 1583,
	477, 1583,
	478, 1583,
	479, 1583,
	480, 1583,
	481, 1583,
	482, 1583,
	483, 1583,
	484, 1583,
	485, 1583,
	486, 1583,
	487, 1583,
	488, 1583,
	489, 1583,
	490, 1583,
	491, 1583,
	492, 1583,
	494, 1583,
	495, 1583,
	496, 1583,
	497, 1583,
	498, 1583,
	500, 1583,
	501, 1583,
	502, 1583,
	503, 1583,
	504, 1583,
	505, 1583,
	506, 1583,
	507, 1583,
	508, 1583,
	510, 1583,
	511, 1583,
	512, 1583,
	513, 1583,
	514, 1583,
	516, 1583,
	518, 1583,
	519, 1583,
	520, 1583,
	521, 1583,
	522, 1583,
	523, 1583,
	524, 1583,
	525, 1583,
	526, 1583,
	527, 1583,
	528, 1583,
	530, 1583,
	531, 1583,
	533, 1583,
	534, 1583,
	535, 1583,
	536, 1583,
	537, 1583,
	538, 1583,
	539, 1583,
	540, 1583,
	541, 1583,
	542, 1583,
	545, 1583,
	546, 1583,
	547, 1583,
	548, 1583,
	549, 1583,
	550, 1583,
	552, 1583,
	553, 1583,
	554, 1583,
	555, 1583,
	557, 1583,
	562, 1583,
	563, 1583,
	564, 1583,
	565, 1583,
	566, 1583,
	567, 1583,
	568, 1583,
	581, 1583,
	588, 1583,
	589, 1583,
	590, 1583,
	597, 1583,
	601, 1583,
	-2, 0,
	-1, 741,
	4, 1308,
	21, 1308,
	22, 1308,
	23, 1308,
	24, 1308,
	25, 1308,
	26, 1308,
	27, 1308,
	29, 1308,
	30, 1308,
	36, 1308,
	41, 1308,
	42, 1308,
	44, 1308,
	45, 1308,
	46, 1308,
	47, 1308,
	48, 1308,
	49, 1308,
	50, 1308,
	51, 1308,
	53, 1308,
	54, 1308,
	55, 1308,
	56, 1308,
	58, 1308,
	59, 1308,
	60, 1308,
	61, 1308,
	62, 1308,
	63, 1308,
	64, 1308,
	68, 1308,
	69, 1308,
	70, 1308,
	71, 1308,
	73, 1308,
	74, 1308,
	75, 1308,
	79, 1308,
	80, 1308,
	81, 1308,
	82, 1308,
	83, 1308,
	84, 1308,
	85, 1308,
	88, 1308,
	89, 1308,
	90, 1308,
	91, 1308,
	92, 1308,
	94, 1308,
	96, 1308,
	97, 1308,
	98, 1308,
	99, 1308,
	100, 1308,
	101, 1308,
	103, 1308,
	104, 1308,
	105, 1308,
	107, 1308,
	108, 1308,
	109, 1308,
	117, 1308,
	118, 1308,
	119, 1308,
	120, 1308,
	121, 1308,
	123, 1308,
	124, 1308,
	125, 1308,
	127, 1308,
	128, 1308,
	129, 1308,
	131, 1308,
	132, 1308,
	133, 1308,
	135, 1308,
	136, 1308,
	137, 1308,
	140, 1308,
	141, 1308,
	142, 1308,
	144, 1308,
	145, 1308,
	147, 1308,
	148, 1308,
	149, 1308,
	151, 1308,
	152, 1308,
	153, 1308,
	154, 1308,
	155, 1308,
	156, 1308,
	157, 1308,
	158, 1308,
	159, 1308,
	160, 1308,
	161, 1308,
	162, 1308,
	163, 1308,
	164, 1308,
	165, 1308,
	166, 1308,
	168, 1308,
	174, 1308,
	175, 1308,
	176, 1308,
	177, 1308,
	181, 1308,
	183, 1308,
	184, 1308,
	188, 1308,
	189, 1308,
	190, 1308,
	191, 1308,
	192, 1308,
	193, 1308,
	194, 1308,
	195, 1308,
	196, 1308,
	197, 1308,
	198, 1308,
	199, 1308,
	200, 1308,
	201, 1308,
	203, 1308,
	204, 1308,
	206, 1308,
	207, 1308,
	209, 1308,
	210, 1308,
	211, 1308,
	212, 1308,
	213, 1308,
	214, 1308,
	215, 1308,
	216, 1308,
	217, 1308,
	219, 1308,
	220, 1308,
	222, 1308,
	223, 1308,
	224, 1308,
	225, 1308,
	226, 1308,
	230, 1308,
	231, 1308,
	232, 1308,
	233, 1308,
	234, 1308,
	237, 1308,
	238, 1308,
	239, 1308,
	241, 1308,
	243, 1308,
	244, 1308,
	246, 1308,
	248, 1308,
	249, 1308,
	250, 1308,
	252, 1308,
	256, 1308,
	257, 1308,
	258, 1308,
	259, 1308,
	260, 1308,
	261, 1308,
	263, 1308,
	264, 1308,
	265, 1308,
	267, 1308,
	268, 1308,
	270, 1308,
	271, 1308,
	274, 1308,
	278, 1308,
	279, 1308,
	280, 1308,
	283, 1308,
	284, 1308,
	285, 1308,
	286, 1308,
	288, 1308,
	289, 1308,
	290, 1308,
	291, 1308,
	292, 1308,
	293, 1308,
	294, 1308,
	295, 1308,
	296, 1308,
	297, 1308,
	298, 1308,
	299, 1308,
	300, 1308,
	301, 1308,
	302, 1308,
	303, 1308,
	304, 1308,
	305, 1308,
	306, 1308,
	307, 1308,
	308, 1308,
	309, 1308,
	311, 1308,
	313, 1308,
	314, 1308,
	315, 1308,
	316, 1308,
	317, 1308,
	318, 1308,
	319, 1308,
	320, 1308,
	321, 1308,
	322, 1308,
	323, 1308,
	324, 1308,
	325, 1308,
	327, 1308,
	328, 1308,
	330, 1308,
	332, 1308,
	333, 1308,
	335, 1308,
	336, 1308,
	337, 1308,
	338, 1308,
	339, 1308,
	342, 1308,
	346, 1308,
	347, 1308,
	348, 1308,
	351, 1308,
	352, 1308,
	353, 1308,
	355, 1308,
	357, 1308,
	358, 1308,
	359, 1308,
	360, 1308,
	361, 1308,
	362, 1308,
	363, 1308,
	364, 1308,
	365, 1308,
	366, 1308,
	367, 1308,
	368, 1308,
	369, 1308,
	371, 1308,
	372, 1308,
	373, 1308,
	374, 1308,
	375, 1308,
	376, 1308,
	377, 1308,
	378, 1308,
	379, 1308,
	380, 1308,
	381, 1308,
	382, 1308,
	383, 1308,
	384, 1308,
	385, 1308,
	387, 1308,
	388, 1308,
	390, 1308,
	391, 1308,
	392, 1308,
	393, 1308,
	394, 1308,
	395, 1308,
	396, 1308,
	397, 1308,
	398, 1308,
	399, 1308,
	400, 1308,
	401, 1308,
	402, 1308,
	404, 1308,
	406, 1308,
	407, 1308,
	408, 1308,
	414, 1308,
	416, 1308,
	417, 1308,
	418, 1308,
	419, 1308,
	420, 1308,
	421, 1308,
	422, 1308,
	423, 1308,
	424, 1308,
	425, 1308,
	427, 1308,
	428, 1308,
	429, 1308,
	431, 1308,
	432, 1308,
	433, 1308,
	434, 1308,
	435, 1308,
	436, 1308,
	437, 1308,
	439, 1308,
	440, 1308,
	441, 1308,
	442, 1308,
	443, 1308,
	444, 1308,
	445, 1308,
	446, 1308,
	447, 1308,
	448, 1308,
	449, 1308,
	450, 1308,
	452, 1308,
	453, 1308,
	454, 1308,
	455, 1308,
	456, 1308,
	457, 1308,
	459, 1308,
	460, 1308,
	461, 1308,
	462, 1308,
	463, 1308,
	464, 1308,
	466, 1308,
	467, 1308,
	468, 1308,
	469, 1308,
	470, 1308,
	471, 1308,
	472, 1308,
	473, 1308,
	475, 1308,
	477, 1308,
	478, 1308,
	479, 1308,
	480, 1308,
	481, 1308,
	482, 1308,
	483, 1308,
	484, 1308,
	485, 1308,
	486, 1308,
	487, 1308,
	488, 1308,
	489, 1308,
	490, 1308,
	491, 1308,
	492, 1308,
	494, 1308,
	495, 1308,
	497, 1308,
	498, 1308,
	500, 1308,
	501, 1308,
	502, 1308,
	503, 1308,
	504, 1308,
	505, 1308,
	506, 1308,
	507, 1308,
	508, 1308,
	510, 1308,
	511, 1308,
	512, 1308,
	513, 1308,
	514, 1308,
	516, 1308,
	518, 1308,
	519, 1308,
	520, 1308,
	521, 1308,
	522, 1308,
	523, 1308,
	525, 1308,
	526, 1308,
	527, 1308,
	528, 1308,
	530, 1308,
	531, 1308,
	534, 1308,
	535, 1308,
	536, 1308,
	537, 1308,
	538, 1308,
	539, 1308,
	540, 1308,
	542, 1308,
	545, 1308,
	546, 1308,
	547, 1308,
	548, 1308,
	549, 1308,
	550, 1308,
	552, 1308,
	553, 1308,
	554, 1308,
	555, 1308,
	557, 1308,
	562, 1308,
	563, 1308,
	564, 1308,
	565, 1308,
	566, 1308,
	567, 1308,
	-2, 0,
	-1, 760,
	186, 2371,
	515, 2371,
	580, 2371,
	599, 2371,
	-2, 0,
	-1, 761,
	186, 2358,
	515, 2358,
	580, 2358,
	599, 2358,
	-2, 0,
	-1, 763,
	186, 2615,
	515, 2615,
	580, 2615,
	599, 2615,
	-2, 0,
	-1, 766,
	186, 2478,
	515, 2478,
	580, 2478,
	599, 2478,
	-2, 0,
	-1, 767,
	186, 2656,
	515, 2656,
	580, 2656,
	599, 2656,
	-2, 0,
	-1, 775,
	186, 2505,
	515, 2505,
	580, 2505,
	599, 2505,
	-2, 700,
	-1, 810,
	599, 2307,
	602, 2307,
	-2, 993,
	-1, 811,
	599, 2309,
	602, 2309,
	-2, 994,
	-1, 812,
	599, 2308,
	602, 2308,
	-2, 995,
	-1, 813,
	602, 2233,
	-2, 996,
	-1, 836,
	182, 258,
	-2, 0,
	-1, 860,
	43, 2280,
	-2, 0,
	-1, 861,
	552, 1286,
	-2, 1065,
	-1, 877,
	4, 1713,
	21, 1713,
	22, 1713,
	23, 1713,
	24, 1713,
	25, 1713,
	26, 1713,
	27, 1713,
	29, 1713,
	30, 1713,
	36, 1713,
	41, 1713,
	42, 1713,
	44, 1713,
	45, 1713,
	46, 1713,
	47, 1713,
	48, 1713,
	49, 1713,
	50, 1713,
	51, 1713,
	53, 1713,
	54, 1713,
	55, 1713,
	56, 1713,
	58, 1713,
	59, 1713,
	60, 1713,
	61, 1713,
	62, 1713,
	63, 1713,
	64, 1713,
	68, 1713,
	69, 1713,
	70, 1713,
	71, 1713,
	73, 1713,
	74, 1713,
	75, 1713,
	79, 1713,
	80, 1713,
	81, 1713,
	82, 1713,
	83, 1713,
	84, 1713,
	85, 1713,
	88, 1713,
	89, 1713,
	90, 1713,
	91, 1713,
	92, 1713,
	94, 1713,
	96, 1713,
	97, 1713,
	98, 1713,
	99, 1713,
	100, 1713,
	101, 1713,
	103, 1713,
	104, 1713,
	105, 1713,
	107, 1713,
	108, 1713,
	109, 1713,
	117, 1713,
	118, 1713,
	119, 1713,
	120, 1713,
	121, 1713,
	123, 1713,
	124, 1713,
	125, 1713,
	127, 1713,
	128, 1713,
	129, 1713,
	131, 1713,
	132, 1713,
	133, 1713,
	135, 1713,
	136, 1713,
	137, 1713,
	140, 1713,
	141, 1713,
	142, 1713,
	144, 1713,
	145, 1713,
	147, 1713,
	148, 1713,
	149, 1713,
	151, 1713,
	152, 1713,
	153, 1713,
	154, 1713,
	155, 1713,
	156, 1713,
	157, 1713,
	158, 1713,
	159, 1713,
	160, 1713,
	161, 1713,
	162, 1713,
	163, 1713,
	164, 1713,
	165, 1713,
	166, 1713,
	168, 1713,
	174, 1713,
	175, 1713,
	176, 1713,
	177, 1713,
	181, 1713,
	183, 1713,
	184, 1713,
	188, 1713,
	189, 1713,
	190, 1713,
	191, 1713,
	192, 1713,
	193, 1713,
	194, 1713,
	195, 1713,
	196, 1713,
	197, 1713,
	198, 1713,
	199, 1713,
	200, 1713,
	201, 1713,
	203, 1713,
	204, 1713,
	206, 1713,
	207, 1713,
	209, 1713,
	210, 1713,
	211, 1713,
	212, 1713,
	213, 1713,
	214, 1713,
	215, 1713,
	216, 1713,
	217, 1713,
	219, 1713,
	220, 1713,
	222, 1713,
	223, 1713,
	224, 1713,
	225, 1713,
	226, 1713,
	230, 1713,
	231, 1713,
	232, 1713,
	233, 1713,
	234, 1713,
	237, 1713,
	238, 1713,
	239, 1713,
	241, 1713,
	243, 1713,
	244, 1713,
	246, 1713,
	248, 1713,
	249, 1713,
	250, 1713,
	252, 1713,
	256, 1713,
	257, 1713,
	258, 1713,
	259, 1713,
	260, 1713,
	261, 1713,
	263, 1713,
	264, 1713,
	265, 1713,
	267, 1713,
	268, 1713,
	270, 1713,
	271, 1713,
	274, 1713,
	278, 1713,
	279, 1713,
	280, 1713,
	283, 1713,
	284, 1713,
	285, 1713,
	286, 1713,
	288, 1713,
	289, 1713,
	290, 1713,
	291, 1713,
	292, 1713,
	293, 1713,
	294, 1713,
	295, 1713,
	296, 1713,
	297, 1713,
	298, 1713,
	299, 1713,
	300, 1713,
	301, 1713,
	302, 1713,
	303, 1713,
	304, 1713,
	305, 1713,
	306, 1713,
	307, 1713,
	308, 1713,
	309, 1713,
	311, 1713,
	313, 1713,
	314, 1713,
	315, 1713,
	316, 1713,
	317, 1713,
	318, 1713,
	319, 1713,
	320, 1713,
	321, 1713,
	322, 1713,
	323, 1713,
	324, 1713,
	325, 1713,
	327, 1713,
	328, 1713,
	330, 1713,
	332, 1713,
	333, 1713,
	335, 1713,
	336, 1713,
	337, 1713,
	338, 1713,
	339, 1713,
	342, 1713,
	346, 1713,
	347, 1713,
	348, 1713,
	351, 1713,
	352, 1713,
	353, 1713,
	355, 1713,
	357, 1713,
	358, 1713,
	359, 1713,
	360, 1713,
	361, 1713,
	362, 1713,
	363, 1713,
	364, 1713,
	365, 1713,
	366, 1713,
	367, 1713,
	368, 1713,
	369, 1713,
	371, 1713,
	372, 1713,
	373, 1713,
	374, 1713,
	375, 1713,
	376, 1713,
	377, 1713,
	378, 1713,
	379, 1713,
	380, 1713,
	381, 1713,
	382, 1713,
	383, 1713,
	384, 1713,
	385, 1713,
	387, 1713,
	388, 1713,
	390, 1713,
	391, 1713,
	392, 1713,
	393, 1713,
	394, 1713,
	395, 1713,
	396, 1713,
	397, 1713,
	398, 1713,
	399, 1713,
	400, 1713,
	401, 1713,
	402, 1713,
	404, 1713,
	406, 1713,
	407, 1713,
	408, 1713,
	414, 1713,
	416, 1713,
	417, 1713,
	418, 1713,
	419, 1713,
	420, 1713,
	421, 1713,
	422, 1713,
	423, 1713,
	424, 1713,
	425, 1713,
	427, 1713,
	428, 1713,
	429, 1713,
	431, 1713,
	432, 1713,
	433, 1713,
	434, 1713,
	435, 1713,
	436, 1713,
	437, 1713,
	439, 1713,
	440, 1713,
	441, 1713,
	442, 1713,
	443, 1713,
	444, 1713,
	445, 1713,
	446, 1713,
	447, 1713,
	448, 1713,
	449, 1713,
	450, 1713,
	452, 1713,
	453, 1713,
	454, 1713,
	455, 1713,
	456, 1713,
	457, 1713,
	459, 1713,
	460, 1713,
	461, 1713,
	462, 1713,
	463, 1713,
	464, 1713,
	466, 1713,
	467, 1713,
	468, 1713,
	469, 1713,
	470, 1713,
	471, 1713,
	472, 1713,
	473, 1713,
	475, 1713,
	477, 1713,
	478, 1713,
	479, 1713,
	480, 1713,
	481, 1713,
	482, 1713,
	483, 1713,
	484, 1713,
	485, 1713,
	486, 1713,
	487, 1713,
	488, 1713,
	489, 1713,
	490, 1713,
	491, 1713,
	492, 1713,
	494, 1713,
	495, 1713,
	497, 1713,
	498, 1713,
	500, 1713,
	501, 1713,
	502, 1713,
	503, 1713,
	504, 1713,
	505, 1713,
	506, 1713,
	507, 1713,
	508, 1713,
	510, 1713,
	511, 1713,
	512, 1713,
	513, 1713,
	514, 1713,
	516, 1713,
	518, 1713,
	519, 1713,
	520, 1713,
	521, 1713,
	522, 1713,
	523, 1713,
	525, 1713,
	526, 1713,
	527, 1713,
	528, 1713,
	530, 1713,
	531, 1713,
	534, 1713,
	535, 1713,
	536, 1713,
	537, 1713,
	538, 1713,
	539, 1713,
	540, 1713,
	542, 1713,
	545, 1713,
	546, 1713,
	547, 1713,
	548, 1713,
	549, 1713,
	550, 1713,
	552, 1713,
	553, 1713,
	554, 1713,
	555, 1713,
	557, 1713,
	562, 1713,
	563, 1713,
	564, 1713,
	565, 1713,
	566, 1713,
	567, 1713,
	-2, 0,
	-1, 887,
	260, 406,
	-2, 0,
	-1, 960,
	392, 875,
	457, 875,
	498, 875,
	520, 875,
	-2, 0,
	-1, 961,
	392, 874,
	457, 874,
	498, 874,
	520, 874,
	-2, 810,
	-1, 965,
	1, 927,
	596, 927,
	598, 927,
	600, 927,
	-2, 0,
	-1, 967,
	1, 849,
	596, 849,
	598, 849,
	600, 849,
	-2, 0,
	-1, 968,
	1, 853,
	596, 853,
	598, 853,
	600, 853,
	-2, 0,
	-1, 969,
	1, 992,
	182, 992,
	596, 992,
	598, 992,
	600, 992,
	-2, 0,
	-1, 977,
	1, 880,
	596, 880,
	598, 880,
	600, 880,
	-2, 0,
	-1, 984,
	1, 927,
	596, 927,
	598, 927,
	600, 927,
	-2, 0,
	-1, 985,
	1, 929,
	596, 929,
	598, 929,
	600, 929,
	-2, 0,
	-1, 986,
	1, 932,
	596, 932,
	598, 932,
	600, 932,
	-2, 0,
	-1, 992,
	1, 956,
	596, 956,
	598, 956,
	600, 956,
	-2, 0,
	-1, 993,
	1, 958,
	596, 958,
	598, 958,
	600, 958,
	-2, 0,
	-1, 998,
	1, 986,
	596, 986,
	598, 986,
	600, 986,
	-2, 0,
	-1, 1048,
	169, 1587,
	182, 1587,
	273, 1587,
	340, 1587,
	-2, 1523,
	-1, 1063,
	169, 1586,
	182, 1586,
	273, 1586,
	340, 1586,
	-2, 1520,
	-1, 1090,
	599, 2306,
	-2, 708,
	-1, 1119,
	5, 2298,
	597, 2296,
	-2, 2287,
	-1, 1127,
	5, 2319,
	597, 2316,
	-2, 2307,
	-1, 1128,
	5, 2320,
	597, 2317,
	-2, 2308,
	-1, 1136,
	599, 2304,
	-2, 2286,
	-1, 1137,
	597, 2739,
	-2, 2305,
	-1, 1160,
	597, 2738,
	-2, 2321,
	-1, 1161,
	5, 1788,
	-2, 2709,
	-1, 1162,
	5, 1789,
	-2, 2710,
	-1, 1163,
	5, 1790,
	-2, 2724,
	-1, 1164,
	5, 1791,
	-2, 2688,
	-1, 1165,
	5, 1792,
	-2, 2722,
	-1, 1166,
	5, 1800,
	-2, 2701,
	-1, 1167,
	5, 1787,
	-2, 2697,
	-1, 1168,
	5, 1787,
	-2, 2696,
	-1, 1169,
	5, 1787,
	-2, 2715,
	-1, 1170,
	5, 1798,
	-2, 2690,
	-1, 1171,
	5, 1803,
	-2, 2689,
	-1, 1172,
	5, 1805,
	-2, 2734,
	-1, 1175,
	5, 1827,
	-2, 2727,
	-1, 1176,
	5, 1819,
	-2, 2728,
	-1, 1177,
	5, 1827,
	-2, 2729,
	-1, 1178,
	5, 1823,
	-2, 2730,
	-1, 1179,
	5, 1773,
	-2, 2702,
	-1, 1180,
	5, 1774,
	-2, 2703,
	-1, 1181,
	5, 1775,
	-2, 2691,
	-1, 1209,
	5, 1810,
	-2, 2735,
	-1, 1210,
	5, 1811,
	-2, 2725,
	-1, 1211,
	5, 1812,
	553, 1812,
	-2, 2692,
	-1, 1212,
	5, 1813,
	553, 1813,
	-2, 2693,
	-1, 1249,
	597, 2316,
	-2, 2307,
	-1, 1250,
	597, 2317,
	-2, 2308,
	-1, 1351,
	186, 2656,
	515, 2656,
	580, 2656,
	599, 2656,
	-2, 0,
	-1, 1356,
	1, 685,
	600, 685,
	-2, 1435,
	-1, 1485,
	359, 2281,
	416, 2281,
	459, 2281,
	590, 2281,
	-2, 2271,
	-1, 1496,
	601, 2281,
	-2, 2283,
	-1, 1504,
	1, 1283,
	421, 1247,
	459, 1247,
	574, 1247,
	596, 1283,
	598, 1283,
	600, 1283,
	-2, 1572,
	-1, 1510,
	202, 1380,
	221, 1380,
	429, 1380,
	-2, 0,
	-1, 1555,
	400, 1064,
	552, 1064,
	-2, 401,
	-1, 1572,
	43, 2279,
	-2, 1030,
	-1, 1579,
	1, 1283,
	596, 1283,
	598, 1283,
	600, 1283,
	-2, 1572,
	-1, 1587,
	4, 1308,
	21, 1308,
	22, 1308,
	23, 1308,
	24, 1308,
	25, 1308,
	26, 1308,
	27, 1308,
	29, 1308,
	30, 1308,
	36, 1308,
	41, 1308,
	42, 1308,
	44, 1308,
	45, 1308,
	46, 1308,
	47, 1308,
	48, 1308,
	49, 1308,
	50, 1308,
	51, 1308,
	53, 1308,
	54, 1308,
	55, 1308,
	56, 1308,
	58, 1308,
	59, 1308,
	60, 1308,
	61, 1308,
	62, 1308,
	63, 1308,
	64, 1308,
	68, 1308,
	69, 1308,
	70, 1308,
	71, 1308,
	73, 1308,
	74, 1308,
	75, 1308,
	79, 1308,
	80, 1308,
	81, 1308,
	82, 1308,
	83, 1308,
	84, 1308,
	85, 1308,
	88, 1308,
	89, 1308,
	90, 1308,
	91, 1308,
	92, 1308,
	94, 1308,
	96, 1308,
	97, 1308,
	98, 1308,
	99, 1308,
	100, 1308,
	101, 1308,
	103, 1308,
	104, 1308,
	105, 1308,
	107, 1308,
	108, 1308,
	109, 1308,
	117, 1308,
	118, 1308,
	119, 1308,
	120, 1308,
	121, 1308,
	123, 1308,
	124, 1308,
	125, 1308,
	127, 1308,
	128, 1308,
	129, 1308,
	131, 1308,
	132, 1308,
	133, 1308,
	135, 1308,
	136, 1308,
	137, 1308,
	140, 1308,
	141, 1308,
	142, 1308,
	144, 1308,
	145, 1308,
	147, 1308,
	148, 1308,
	149, 1308,
	151, 1308,
	152, 1308,
	153, 1308,
	154, 1308,
	155, 1308,
	156, 1308,
	157, 1308,
	158, 1308,
	159, 1308,
	160, 1308,
	161, 1308,
	162, 1308,
	163, 1308,
	164, 1308,
	165, 1308,
	166, 1308,
	174, 1308,
	175, 1308,
	176, 1308,
	177, 1308,
	181, 1308,
	183, 1308,
	184, 1308,
	188, 1308,
	189, 1308,
	190, 1308,
	191, 1308,
	192, 1308,
	193, 1308,
	194, 1308,
	195, 1308,
	196, 1308,
	197, 1308,
	198, 1308,
	199, 1308,
	200, 1308,
	201, 1308,
	203, 1308,
	204, 1308,
	206, 1308,
	207, 1308,
	209, 1308,
	210, 1308,
	211, 1308,
	212, 1308,
	213, 1308,
	214, 1308,
	215, 1308,
	216, 1308,
	217, 1308,
	219, 1308,
	220, 1308,
	222, 1308,
	223, 1308,
	224, 1308,
	225, 1308,
	226, 1308,
	231, 1308,
	232, 1308,
	233, 1308,
	234, 1308,
	237, 1308,
	238, 1308,
	239, 1308,
	241, 1308,
	243, 1308,
	244, 1308,
	246, 1308,
	248, 1308,
	249, 1308,
	250, 1308,
	252, 1308,
	256, 1308,
	257, 1308,
	258, 1308,
	259, 1308,
	260, 1308,
	261, 1308,
	263, 1308,
	264, 1308,
	265, 1308,
	267, 1308,
	268, 1308,
	270, 1308,
	271, 1308,
	274, 1308,
	278, 1308,
	279, 1308,
	280, 1308,
	283, 1308,
	284, 1308,
	285, 1308,
	286, 1308,
	288, 1308,
	289, 1308,
	290, 1308,
	291, 1308,
	292, 1308,
	293, 1308,
	294, 1308,
	295, 1308,
	296, 1308,
	297, 1308,
	298, 1308,
	299, 1308,
	300, 1308,
	301, 1308,
	302, 1308,
	303, 1308,
	304, 1308,
	305, 1308,
	306, 1308,
	307, 1308,
	308, 1308,
	309, 1308,
	311, 1308,
	313, 1308,
	314, 1308,
	315, 1308,
	316, 1308,
	317, 1308,
	318, 1308,
	319, 1308,
	320, 1308,
	321, 1308,
	322, 1308,
	323, 1308,
	324, 1308,
	325, 1308,
	327, 1308,
	328, 1308,
	332, 1308,
	333, 1308,
	335, 1308,
	336, 1308,
	337, 1308,
	338, 1308,
	339, 1308,
	342, 1308,
	344, 1308,
	346, 1308,
	347, 1308,
	348, 1308,
	351, 1308,
	352, 1308,
	353, 1308,
	355, 1308,
	357, 1308,
	358, 1308,
	359, 1308,
	360, 1308,
	361, 1308,
	362, 1308,
	363, 1308,
	364, 1308,
	365, 1308,
	366, 1308,
	367, 1308,
	368, 1308,
	369, 1308,
	371, 1308,
	372, 1308,
	373, 1308,
	374, 1308,
	375, 1308,
	376, 1308,
	377, 1308,
	378, 1308,
	379, 1308,
	380, 1308,
	381, 1308,
	382, 1308,
	383, 1308,
	384, 1308,
	385, 1308,
	387, 1308,
	388, 1308,
	390, 1308,
	391, 1308,
	392, 1308,
	393, 1308,
	394, 1308,
	395, 1308,
	396, 1308,
	397, 1308,
	398, 1308,
	399, 1308,
	400, 1308,
	401, 1308,
	402, 1308,
	404, 1308,
	406, 1308,
	407, 1308,
	408, 1308,
	414, 1308,
	416, 1308,
	417, 1308,
	418, 1308,
	419, 1308,
	420, 1308,
	421, 1308,
	422, 1308,
	423, 1308,
	424, 1308,
	425, 1308,
	427, 1308,
	428, 1308,
	429, 1308,
	431, 1308,
	432, 1308,
	433, 1308,
	434, 1308,
	435, 1308,
	436, 1308,
	437, 1308,
	439, 1308,
	440, 1308,
	441, 1308,
	442, 1308,
	443, 1308,
	444, 1308,
	445, 1308,
	446, 1308,
	447, 1308,
	448, 1308,
	449, 1308,
	450, 1308,
	452, 1308,
	453, 1308,
	454, 1308,
	455, 1308,
	456, 1308,
	457, 1308,
	459, 1308,
	460, 1308,
	461, 1308,
	462, 1308,
	463, 1308,
	464, 1308,
	466, 1308,
	467, 1308,
	468, 1308,
	469, 1308,
	470, 1308,
	471, 1308,
	472, 1308,
	473, 1308,
	475, 1308,
	477, 1308,
	478, 1308,
	479, 1308,
	480, 1308,
	481, 1308,
	482, 1308,
	483, 1308,
	484, 1308,
	485, 1308,
	486, 1308,
	487, 1308,
	488, 1308,
	489, 1308,
	490, 1308,
	491, 1308,
	492, 1308,
	494, 1308,
	495, 1308,
	497, 1308,
	498, 1308,
	500, 1308,
	501, 1308,
	502, 1308,
	503, 1308,
	504, 1308,
	505, 1308,
	506, 1308,
	507, 1308,
	508, 1308,
	510, 1308,
	511, 1308,
	512, 1308,
	513, 1308,
	514, 1308,
	516, 1308,
	518, 1308,
	519, 1308,
	520, 1308,
	521, 1308,
	522, 1308,
	523, 1308,
	525, 1308,
	526, 1308,
	527, 1308,
	528, 1308,
	530, 1308,
	531, 1308,
	534, 1308,
	535, 1308,
	536, 1308,
	537, 1308,
	538, 1308,
	539, 1308,
	540, 1308,
	542, 1308,
	545, 1308,
	546, 1308,
	547, 1308,
	548, 1308,
	549, 1308,
	550, 1308,
	552, 1308,
	553, 1308,
	554, 1308,
	555, 1308,
	557, 1308,
	562, 1308,
	563, 1308,
	564, 1308,
	565, 1308,
	566, 1308,
	567, 1308,
	-2, 0,
	-1, 1610,
	1, 546,
	596, 546,
	598, 546,
	600, 546,
	-2, 1543,
	-1, 1613,
	4, 2733,
	11, 2733,
	12, 2733,
	14, 2733,
	15, 2733,
	16, 2733,
	17, 2733,
	18, 2733,
	19, 2733,
	21, 2733,
	22, 2733,
	23, 2733,
	24, 2733,
	25, 2733,
	26, 2733,
	27, 2733,
	29, 2733,
	30, 2733,
	33, 2733,
	34, 2733,
	36, 2733,
	38, 2733,
	41, 2733,
	42, 2733,
	44, 2733,
	45, 2733,
	46, 2733,
	47, 2733,
	48, 2733,
	49, 2733,
	50, 2733,
	51, 2733,
	53, 2733,
	54, 2733,
	55, 2733,
	56, 2733,
	58, 2733,
	59, 2733,
	60, 2733,
	61, 2733,
	62, 2733,
	63, 2733,
	64, 2733,
	67, 2733,
	68, 2733,
	69, 2733,
	70, 2733,
	71, 2733,
	73, 2733,
	74, 2733,
	75, 2733,
	76, 2733,
	79, 2733,
	80, 2733,
	81, 2733,
	82, 2733,
	83, 2733,
	84, 2733,
	85, 2733,
	86, 2733,
	88, 2733,
	89, 2733,
	90, 2733,
	91, 2733,
	92, 2733,
	94, 2733,
	95, 2733,
	96, 2733,
	97, 2733,
	98, 2733,
	99, 2733,
	100, 2733,
	101, 2733,
	103, 2733,
	104, 2733,
	105, 2733,
	106, 2733,
	107, 2733,
	108, 2733,
	109, 2733,
	117, 2733,
	118, 2733,
	119, 2733,
	120, 2733,
	121, 2733,
	123, 2733,
	124, 2733,
	125, 2733,
	127, 2733,
	128, 2733,
	129, 2733,
	131, 2733,
	132, 2733,
	133, 2733,
	135, 2733,
	136, 2733,
	137, 2733,
	140, 2733,
	141, 2733,
	142, 2733,
	144, 2733,
	145, 2733,
	147, 2733,
	148, 2733,
	149, 2733,
	151, 2733,
	152, 2733,
	153, 2733,
	154, 2733,
	155, 2733,
	156, 2733,
	157, 2733,
	158, 2733,
	159, 2733,
	160, 2733,
	161, 2733,
	162, 2733,
	163, 2733,
	164, 2733,
	165, 2733,
	166, 2733,
	170, 2733,
	171, 2733,
	172, 2733,
	173, 2733,
	174, 2733,
	175, 2733,
	176, 2733,
	177, 2733,
	180, 2733,
	181, 2733,
	183, 2733,
	184, 2733,
	187, 2733,
	188, 2733,
	189, 2733,
	190, 2733,
	191, 2733,
	192, 2733,
	193, 2733,
	194, 2733,
	195, 2733,
	196, 2733,
	197, 2733,
	198, 2733,
	199, 2733,
	200, 2733,
	201, 2733,
	203, 2733,
	204, 2733,
	206, 2733,
	207, 2733,
	209, 2733,
	210, 2733,
	211, 2733,
	212, 2733,
	213, 2733,
	214, 2733,
	215, 2733,
	216, 2733,
	217, 2733,
	218, 2733,
	219, 2733,
	220, 2733,
	221, 2733,
	222, 2733,
	223, 2733,
	224, 2733,
	225, 2733,
	226, 2733,
	228, 2733,
	229, 2733,
	231, 2733,
	232, 2733,
	233, 2733,
	234, 2733,
	236, 2733,
	237, 2733,
	238, 2733,
	239, 2733,
	241, 2733,
	243, 2733,
	244, 2733,
	245, 2733,
	246, 2733,
	247, 2733,
	248, 2733,
	249, 2733,
	250, 2733,
	251, 2733,
	252, 2733,
	254, 2733,
	255, 2733,
	256, 2733,
	257, 2733,
	258, 2733,
	259, 2733,
	260, 2733,
	261, 2733,
	263, 2733,
	264, 2733,
	265, 2733,
	267, 2733,
	268, 2733,
	269, 2733,
	270, 2733,
	271, 2733,
	272, 2733,
	274, 2733,
	278, 2733,
	279, 2733,
	280, 2733,
	283, 2733,
	284, 2733,
	285, 2733,
	286, 2733,
	287, 2733,
	288, 2733,
	289, 2733,
	290, 2733,
	291, 2733,
	292, 2733,
	293, 2733,
	294, 2733,
	295, 2733,
	296, 2733,
	297, 2733,
	298, 2733,
	299, 2733,
	300, 2733,
	301, 2733,
	302, 2733,
	303, 2733,
	304, 2733,
	305, 2733,
	306, 2733,
	307, 2733,
	308, 2733,
	309, 2733,
	311, 2733,
	312, 2733,
	313, 2733,
	314, 2733,
	315, 2733,
	316, 2733,
	317, 2733,
	318, 2733,
	319, 2733,
	320, 2733,
	321, 2733,
	322, 2733,
	323, 2733,
	324, 2733,
	325, 2733,
	327, 2733,
	328, 2733,
	331, 2733,
	332, 2733,
	333, 2733,
	335, 2733,
	336, 2733,
	337, 2733,
	338, 2733,
	339, 2733,
	342, 2733,
	346, 2733,
	347, 2733,
	348, 2733,
	349, 2733,
	351, 2733,
	352, 2733,
	353, 2733,
	355, 2733,
	357, 2733,
	358, 2733,
	359, 2733,
	360, 2733,
	361, 2733,
	362, 2733,
	363, 2733,
	364, 2733,
	365, 2733,
	366, 2733,
	367, 2733,
	368, 2733,
	369, 2733,
	371, 2733,
	372, 2733,
	373, 2733,
	374, 2733,
	375, 2733,
	376, 2733,
	377, 2733,
	378, 2733,
	379, 2733,
	380, 2733,
	381, 2733,
	382, 2733,
	383, 2733,
	384, 2733,
	385, 2733,
	387, 2733,
	388, 2733,
	390, 2733,
	391, 2733,
	392, 2733,
	393, 2733,
	394, 2733,
	395, 2733,
	396, 2733,
	397, 2733,
	398, 2733,
	399, 2733,
	400, 2733,
	401, 2733,
	402, 2733,
	404, 2733,
	406, 2733,
	407, 2733,
	408, 2733,
	414, 2733,
	415, 2733,
	416, 2733,
	417, 2733,
	418, 2733,
	419, 2733,
	420, 2733,
	421, 2733,
	422, 2733,
	423, 2733,
	424, 2733,
	425, 2733,
	427, 2733,
	428, 2733,
	429, 2733,
	430, 2733,
	431, 2733,
	432, 2733,
	433, 2733,
	434, 2733,
	435, 2733,
	436, 2733,
	437, 2733,
	438, 2733,
	439, 2733,
	440, 2733,
	441, 2733,
	442, 2733,
	443, 2733,
	444, 2733,
	445, 2733,
	446, 2733,
	447, 2733,
	448, 2733,
	449, 2733,
	450, 2733,
	452, 2733,
	453, 2733,
	454, 2733,
	455, 2733,
	456, 2733,
	457, 2733,
	459, 2733,
	460, 2733,
	461, 2733,
	462, 2733,
	463, 2733,
	464, 2733,
	465, 2733,
	466, 2733,
	467, 2733,
	468, 2733,
	469, 2733,
	470, 2733,
	471, 2733,
	472, 2733,
	473, 2733,
	475, 2733,
	477, 2733,
	478, 2733,
	479, 2733,
	480, 2733,
	481, 2733,
	482, 2733,
	483, 2733,
	484, 2733,
	485, 2733,
	486, 2733,
	487, 2733,
	488, 2733,
	489, 2733,
	490, 2733,
	491, 2733,
	492, 2733,
	494, 2733,
	495, 2733,
	496, 2733,
	497, 2733,
	498, 2733,
	500, 2733,
	501, 2733,
	502, 2733,
	503, 2733,
	504, 2733,
	505, 2733,
	506, 2733,
	507, 2733,
	508, 2733,
	510, 2733,
	511, 2733,
	512, 2733,
	513, 2733,
	514, 2733,
	516, 2733,
	518, 2733,
	519, 2733,
	520, 2733,
	521, 2733,
	522, 2733,
	523, 2733,
	525, 2733,
	526, 2733,
	527, 2733,
	528, 2733,
	530, 2733,
	531, 2733,
	534, 2733,
	535, 2733,
	536, 2733,
	537, 2733,
	538, 2733,
	539, 2733,
	540, 2733,
	542, 2733,
	545, 2733,
	546, 2733,
	547, 2733,
	548, 2733,
	549, 2733,
	550, 2733,
	552, 2733,
	553, 2733,
	554, 2733,
	555, 2733,
	557, 2733,
	562, 2733,
	563, 2733,
	564, 2733,
	565, 2733,
	566, 2733,
	567, 2733,
	568, 2733,
	570, 2733,
	578, 2733,
	579, 2733,
	580, 2733,
	581, 2733,
	582, 2733,
	583, 2733,
	585, 2733,
	586, 2733,
	587, 2733,
	588, 2733,
	589, 2733,
	590, 2733,
	591, 2733,
	592, 2733,
	593, 2733,
	595, 2733,
	598, 2733,
	599, 2733,
	601, 2733,
	602, 2733,
	-2, 0,
	-1, 1618,
	186, 2615,
	515, 2615,
	580, 2615,
	599, 2615,
	-2, 0,
	-1, 1667,
	392, 875,
	457, 875,
	498, 875,
	520, 875,
	-2, 0,
	-1, 1678,
	1, 1380,
	596, 1380,
	598, 1380,
	600, 1380,
	-2, 0,
	-1, 1695,
	1, 870,
	596, 870,
	598, 870,
	600, 870,
	-2, 0,
	-1, 1696,
	1, 914,
	596, 914,
	598, 914,
	600, 914,
	-2, 0,
	-1, 1697,
	1, 922,
	596, 922,
	598, 922,
	600, 922,
	-2, 0,
	-1, 1700,
	1, 879,
	596, 879,
	598, 879,
	600, 879,
	-2, 0,
	-1, 1702,
	1, 885,
	596, 885,
	598, 885,
	600, 885,
	-2, 0,
	-1, 1705,
	1, 881,
	596, 881,
	598, 881,
	600, 881,
	-2, 0,
	-1, 1710,
	1, 895,
	596, 895,
	598, 895,
	600, 895,
	-2, 0,
	-1, 1741,
	1, 2598,
	596, 2598,
	598, 2598,
	599, 2598,
	600, 2598,
	-2, 0,
	-1, 1745,
	1, 967,
	596, 967,
	598, 967,
	600, 967,
	-2, 0,
	-1, 1760,
	1, 1430,
	600, 1430,
	-2, 1435,
	-1, 1763,
	169, 1586,
	182, 1586,
	273, 1586,
	340, 1586,
	-2, 1524,
	-1, 1863,
	150, 1545,
	169, 1545,
	182, 1545,
	240, 1545,
	273, 1545,
	340, 1545,
	350, 1545,
	532, 1545,
	-2, 1992,
	-1, 1924,
	598, 2167,
	-2, 0,
	-1, 1959,
	150, 1545,
	169, 1545,
	182, 1545,
	240, 1545,
	273, 1545,
	340, 1545,
	350, 1545,
	532, 1545,
	-2, 1674,
	-1, 1996,
	515, 2612,
	599, 2612,
	602, 2612,
	-2, 0,
	-1, 2013,
	597, 1815,
	-2, 1803,
	-1, 2045,
	186, 2612,
	599, 2612,
	602, 2612,
	-2, 0,
	-1, 2087,
	1, 687,
	600, 687,
	-2, 1435,
	-1, 2227,
	221, 259,
	-2, 2315,
	-1, 2228,
	221, 260,
	-2, 308,
	-1, 2334,
	1, 872,
	596, 872,
	598, 872,
	600, 872,
	-2, 0,
	-1, 2335,
	1, 916,
	596, 916,
	598, 916,
	600, 916,
	-2, 0,
	-1, 2336,
	1, 924,
	596, 924,
	598, 924,
	600, 924,
	-2, 0,
	-1, 2337,
	1, 969,
	596, 969,
	598, 969,
	600, 969,
	-2, 0,
	-1, 2378,
	1, 897,
	596, 897,
	598, 897,
	600, 897,
	-2, 0,
	-1, 2396,
	1, 952,
	596, 952,
	598, 952,
	600, 952,
	-2, 0,
	-1, 2441,
	436, 1613,
	437, 1613,
	-2, 1848,
	-1, 2472,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1868,
	-1, 2473,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1869,
	-1, 2474,
	95, 0,
	254, 0,
	255, 0,
	582, 0,
	583, 0,
	-2, 1870,
	-1, 2475,
	95, 0,
	254, 0,
	255, 0,
	582, 0,
	583, 0,
	-2, 1871,
	-1, 2476,
	95, 0,
	254, 0,
	255, 0,
	582, 0,
	583, 0,
	-2, 1872,
	-1, 2477,
	95, 0,
	254, 0,
	255, 0,
	582, 0,
	583, 0,
	-2, 1873,
	-1, 2478,
	95, 0,
	254, 0,
	255, 0,
	582, 0,
	583, 0,
	-2, 1874,
	-1, 2479,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1875,
	-1, 2491,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1887,
	-1, 2492,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1888,
	-1, 2493,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1889,
	-1, 2497,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1896,
	-1, 2503,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1900,
	-1, 2505,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1908,
	-1, 2506,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1909,
	-1, 2507,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1910,
	-1, 2508,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1911,
	-1, 2682,
	5, 2319,
	186, 2178,
	597, 2316,
	-2, 2307,
	-1, 2683,
	186, 2179,
	-2, 2684,
	-1, 2684,
	186, 2180,
	-2, 2504,
	-1, 2685,
	186, 2181,
	-2, 2389,
	-1, 2686,
	186, 2182,
	-2, 2444,
	-1, 2687,
	186, 2183,
	-2, 2489,
	-1, 2688,
	186, 2184,
	-2, 2610,
	-1, 2689,
	186, 2185,
	-2, 1975,
	-1, 2760,
	1, 1675,
	2, 1675,
	106, 1675,
	150, 1675,
	169, 1675,
	182, 1675,
	187, 1675,
	205, 1675,
	208, 1675,
	236, 1675,
	240, 1675,
	251, 1675,
	269, 1675,
	273, 1675,
	312, 1675,
	340, 1675,
	344, 1675,
	350, 1675,
	426, 1675,
	430, 1675,
	532, 1675,
	543, 1675,
	559, 1675,
	560, 1675,
	561, 1675,
	571, 1675,
	596, 1675,
	598, 1675,
	600, 1675,
	602, 1675,
	-2, 1674,
	-1, 2773,
	597, 2288,
	-2, 2302,
	-1, 2775,
	1, 325,
	559, 325,
	-2, 1572,
	-1, 2804,
	597, 1814,
	-2, 1804,
	-1, 2989,
	1, 1283,
	421, 1247,
	459, 1247,
	574, 1247,
	596, 1283,
	598, 1283,
	600, 1283,
	-2, 1572,
	-1, 3174,
	345, 1616,
	-2, 2723,
	-1, 3175,
	345, 1617,
	-2, 2595,
	-1, 3179,
	436, 2244,
	437, 2244,
	-2, 1973,
	-1, 3180,
	436, 2248,
	437, 2248,
	-2, 1974,
	-1, 3181,
	436, 2245,
	437, 2245,
	-2, 1973,
	-1, 3182,
	436, 2249,
	437, 2249,
	-2, 1974,
	-1, 3195,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1898,
	-1, 3196,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1902,
	-1, 3202,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1904,
	-1, 3425,
	1, 682,
	596, 682,
	598, 682,
	600, 682,
	-2, 1435,
	-1, 3589,
	43, 2279,
	-2, 1031,
	-1, 3594,
	1, 1283,
	596, 1283,
	598, 1283,
	600, 1283,
	-2, 1572,
	-1, 3704,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1906,
	-1, 3711,
	245, 0,
	247, 0,
	331, 0,
	-2, 1925,
	-1, 3779,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1954,
	-1, 3780,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1955,
	-1, 3781,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1956,
	-1, 3785,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1960,
	-1, 3786,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1961,
	-1, 3787,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1962,
	-1, 3834,
	597, 2289,
	-2, 2303,
	-1, 4008,
	599, 2841,
	-2, 1498,
	-1, 4068,
	245, 0,
	247, 0,
	331, 0,
	-2, 1926,
	-1, 4071,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1929,
	-1, 4072,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1931,
	-1, 4170,
	599, 2304,
	-2, 1318,
	-1, 4323,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1930,
	-1, 4324,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1932,
	-1, 4335,
	245, 0,
	-2, 1965,
	-1, 4522,
	245, 0,
	-2, 1966,
	-1, 4722,
	50, 0,
	218, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 2687,
}

const sqlPrivate = 57344

const sqlLast = 132379

var sqlAct = [...]int{
	272, 4839, 3578, 2056, 4918, 3333, 4715, 4826, 2866, 4591,
	4714, 3076, 3063, 4563, 4780, 4444, 4555, 4703, 4721, 4732,
	4855, 4384, 3577, 2137, 4612, 4587, 4166, 4648, 4671, 4733,
	1242, 4690, 4668, 4734, 2224, 4793, 4475, 4366, 4451, 2299,
	4429, 3744, 4274, 1253, 2910, 4240, 4526, 4279, 4344, 4389,
	2451, 4215, 4720, 3696, 4312, 2935, 2310, 3992, 4000, 3033,
	4254, 3446, 4460, 3611, 4263, 3928, 4261, 1316, 2697, 1073,
	4051, 1327, 1119, 701, 2715, 812, 3188, 3506, 4147, 1772,
	4167, 3605, 4489, 4284, 3573, 1064, 2520, 3957, 1634, 2069,
	2459, 3973, 2272, 1323, 2145, 3955, 2001, 2948, 3449, 772,
	2308, 812, 1390, 3100, 3085, 3652, 3052, 3019, 1965, 3087,
	2000, 3837, 3654, 3377, 3563, 3356, 1329, 3556, 3555, 4340,
	4107, 2452, 889, 3348, 3339, 885, 4, 3316, 712, 1482,
	3095, 4050, 3084, 3047, 3078, 3337, 1318, 3064, 3049, 1934,
	2211, 2213, 4827, 3468, 2996, 2156, 2172, 2753, 3805, 2868,
	2752, 1910, 3315, 2456, 4527, 1072, 179, 2598, 1871, 2533,
	3172, 3443, 880, 1841, 1519, 1489, 3094, 1321, 108, 3023,
	1130, 2212, 1574, 266, 768, 807, 2755, 2965, 2207, 1233,
	2188, 3034, 1371, 2195, 1123, 2909, 1295, 2125, 2129, 1760,
	1983, 2067, 1128, 2733, 1675, 1935, 2589, 2517, 1126, 2115,
	2440, 2421, 265, 2423, 2600, 2787, 3575, 745, 809, 1632,
	1954, 1611, 3057, 2259, 4613, 1577, 813, 2712, 2891, 814,
	1358, 954, 2742, 3949, 3088, 2786, 688, 39, 2854, 1951,
	710, 1905, 2592, 1236, 1944, 1215, 2644, 2678, 2723, 1250,
	3384, 1855, 188, 1773, 1774, 2570, 2422, 2424, 818, 179,
	1306, 1173, 189, 1710, 753, 2258, 1609, 1602, 1125, 2221,
	764, 1695, 2144, 2285, 4781, 1514, 1232, 2445, 4840, 1104,
	3030, 728, 705, 1238, 818, 44, 702, 821, 713, 43,
	861, 802, 1309, 1213, 41, 32, 30, 28, 1779, 3225,
	1525, 3819, 975, 3820, 1759, 862, 3219, 2058, 2058, 3335,
	1787, 1788, 4931, 821, 4359, 4761, 2732, 1068, 2058, 904,
	3621, 1248, 3410, 2058, 3286, 3287, 3029, 4356, 4921, 3408,
	4905, 2058, 3630, 1818, 2732, 4904, 1068, 4894, 2058, 2732,
	1790, 2233, 4875, 2725, 3060, 4873, 4388, 1787, 1788, 4388,
	4812, 4769, 3620, 4758, 2233, 4770, 2233, 2732, 4756, 4753,
	4750, 4718, 2732, 4754, 4751, 2233, 1843, 4717, 4716, 1069,
	1818, 2233, 2079, 1230, 4711, 1789, 4710, 1790, 2079, 1518,
	2079, 1273, 4701, 4699, 4696, 1809, 4388, 4388, 4463, 4666,
	3630, 4637, 4630, 4388, 1806, 2795, 2732, 4629, 4624, 2233,
	4623, 2732, 4388, 1843, 4388, 4617, 4583, 4524, 3187, 2233,
	4231, 2795, 1789, 1219, 2076, 1220, 4506, 1216, 1216, 1058,
	4037, 4503, 4500, 4453, 4407, 2233, 4388, 4454, 2233, 4406,
	4395, 4394, 1049, 2233, 2233, 4388, 4387, 4351, 2732, 4325,
	4388, 2233, 1048, 2795, 4128, 1787, 1788, 1245, 1820, 1821,
	1822, 1831, 1832, 1833, 4303, 4292, 4210, 4193, 2079, 3630,
	2732, 2732, 4070, 264, 1367, 1367, 2795, 1824, 1818, 1812,
	1813, 1814, 1815, 4016, 4010, 1790, 3971, 3647, 3647, 1795,
	3972, 3393, 3829, 3827, 1837, 2233, 3830, 3828, 3812, 1063,
	3728, 3234, 2732, 3292, 2233, 2309, 3809, 3235, 3724, 3646,
	3637, 1843, 2732, 3647, 3638, 3332, 2815, 1244, 3327, 2732,
	1789, 3326, 2732, 3277, 3275, 2732, 1795, 3278, 3276, 3267,
	1809, 2791, 3265, 3268, 1266, 1217, 2732, 1817, 1819, 1806,
	3236, 3104, 93, 4638, 2732, 2079, 2546, 2547, 2548, 2565,
	2566, 2567, 3074, 3073, 2838, 2794, 2295, 2295, 2732, 2795,
	4528, 2784, 4519, 1804, 1805, 2732, 2568, 2777, 4507, 2731,
	4463, 2233, 2233, 2732, 1817, 1819, 2294, 2079, 2076, 2732,
	2295, 3809, 2724, 4272, 4231, 2076, 1267, 4194, 4037, 3638,
	2938, 236, 2853, 2094, 2057, 2073, 1810, 2149, 3224, 1843,
	3025, 2232, 2958, 2233, 2851, 1930, 1513, 3911, 3699, 3673,
	3302, 1952, 2200, 3622, 1812, 1813, 1814, 1815, 2558, 1677,
	2769, 1267, 2768, 2767, 1795, 2766, 2765, 2554, 1221, 1218,
	1057, 1056, 3623, 1810, 1055, 1054, 236, 1053, 1052, 238,
	1051, 1047, 1046, 1045, 1044, 1043, 1042, 1041, 1040, 1039,
	1038, 1037, 1036, 1035, 1034, 1787, 1788, 3146, 1518, 1033,
	1032, 1031, 1828, 1030, 1012, 1838, 952, 951, 950, 1840,
	949, 948, 1817, 1819, 947, 946, 2059, 2059, 1818, 236,
	945, 944, 943, 1840, 238, 1790, 942, 2059, 237, 1834,
	941, 1835, 2059, 940, 939, 938, 1701, 937, 1804, 1805,
	2059, 230, 2559, 2560, 2561, 2562, 1840, 2059, 936, 935,
	231, 1843, 2553, 934, 933, 932, 1826, 931, 930, 929,
	1789, 928, 927, 926, 1816, 925, 924, 238, 923, 922,
	921, 1810, 920, 237, 919, 918, 917, 190, 3286, 3287,
	2076, 3304, 3305, 3306, 4286, 907, 3620, 1811, 1267, 906,
	902, 901, 895, 4743, 894, 2076, 879, 73, 878, 835,
	4066, 3303, 834, 833, 832, 824, 1332, 1128, 823, 2724,
	822, 788, 779, 778, 74, 1836, 237, 777, 759, 260,
	259, 258, 190, 257, 1811, 4123, 2563, 2564, 256, 230,
	78, 255, 254, 1825, 1128, 1128, 1128, 253, 231, 252,
	251, 250, 1641, 249, 1840, 1842, 248, 1267, 247, 246,
	245, 244, 1393, 3301, 243, 242, 1393, 241, 240, 2556,
	239, 4082, 3851, 1332, 1795, 3059, 3823, 3330, 1787, 1788,
	87, 3648, 236, 3380, 3247, 3230, 3221, 3128, 3006, 2799,
	2774, 1913, 1842, 1913, 1362, 150, 1955, 1128, 1912, 1128,
	1912, 1128, 2627, 2625, 2759, 2233, 2825, 1332, 1790, 1816,
	1121, 2611, 2123, 1375, 1376, 1377, 2057, 3331, 2609, 2078,
	887, 2076, 1817, 1819, 1786, 1916, 1527, 1911, 1978, 2073,
	238, 1882, 1811, 1332, 107, 1497, 2416, 1521, 1873, 93,
	104, 1807, 1803, 1789, 1800, 1798, 1799, 1791, 1792, 1793,
	1794, 1796, 1797, 1332, 1379, 1252, 1492, 3292, 4742, 1829,
	1332, 3288, 3289, 3290, 3291, 3293, 3294, 2302, 1128, 2595,
	1128, 4531, 1539, 4739, 1332, 1533, 4719, 4698, 3042, 237,
	1128, 1810, 1128, 1799, 1791, 1792, 1793, 1794, 1796, 1797,
	1842, 4598, 230, 4516, 4510, 1517, 1300, 1303, 94, 4288,
	4339, 231, 1583, 1586, 4508, 4379, 4293, 4271, 4134, 4105,
	4104, 1354, 4098, 4097, 4096, 4089, 4088, 4086, 4081, 1313,
	2557, 4078, 3308, 4077, 3286, 3287, 3970, 1356, 190, 1880,
	1332, 1627, 1527, 3855, 1102, 3976, 3854, 3286, 3287, 1502,
	1386, 3853, 1479, 1484, 3833, 1339, 3800, 1795, 3799, 3798,
	1128, 2301, 3720, 1128, 1840, 3286, 3287, 3715, 2596, 818,
	3375, 3323, 1827, 3314, 3302, 3285, 3282, 3281, 3279, 1612,
	3274, 3273, 1801, 1802, 1808, 1830, 1807, 1803, 1842, 1800,
	1798, 1799, 1791, 1792, 1793, 1794, 1796, 1797, 821, 3272,
	3269, 3266, 4092, 3246, 1348, 3229, 4091, 1874, 1572, 1872,
	3286, 3287, 1516, 3222, 2370, 1515, 1646, 3220, 1875, 179,
	179, 3075, 2760, 2582, 1786, 1873, 1614, 1616, 1229, 1785,
	4925, 1069, 4865, 4864, 2793, 1524, 2275, 1531, 2240, 1537,
	3301, 2238, 1811, 3977, 4828, 4779, 4777, 1840, 1254, 3746,
	2597, 4658, 2594, 1362, 97, 4590, 1362, 1487, 4574, 1128,
	1128, 1128, 1128, 1128, 1128, 1128, 1128, 4571, 3909, 4570,
	2543, 2544, 2545, 2569, 2555, 2549, 4569, 2551, 2552, 2550,
	2537, 2538, 2539, 2540, 2541, 2542, 1645, 4549, 4548, 3400,
	4546, 4530, 1128, 4529, 1538, 3328, 4504, 1532, 1128, 4488,
	1842, 4487, 1526, 3292, 1631, 236, 1625, 1340, 1630, 187,
	100, 2523, 4473, 103, 1764, 4470, 3292, 4469, 1639, 4464,
	1644, 1527, 4403, 4374, 1605, 3303, 4337, 4320, 4319, 4300,
	1589, 4299, 4257, 4232, 3292, 3044, 4122, 1840, 4103, 236,
	4038, 4030, 4027, 3897, 3896, 3879, 3878, 888, 3876, 3815,
	3803, 3710, 150, 238, 1860, 3649, 3631, 1651, 1071, 1719,
	3597, 3523, 4287, 3481, 3448, 3402, 3251, 3250, 3245, 1626,
	3286, 3287, 3211, 1758, 3018, 1919, 1918, 1317, 1917, 3292,
	1914, 1640, 1906, 1246, 1904, 1702, 2529, 238, 2806, 1800,
	1798, 1799, 1791, 1792, 1793, 1794, 1796, 1797, 1862, 2805,
	3977, 4532, 237, 1128, 1128, 1128, 2599, 4260, 3372, 1128,
	2771, 236, 1703, 154, 2764, 230, 1250, 2730, 1250, 2607,
	1859, 1977, 1933, 3302, 231, 1928, 1927, 1485, 191, 1926,
	1496, 1317, 1925, 1393, 1668, 1924, 237, 1923, 1787, 1788,
	1932, 3302, 1922, 1128, 1921, 1920, 812, 1901, 1704, 230,
	1900, 190, 2018, 812, 1899, 1898, 1897, 1896, 231, 238,
	1069, 1765, 1895, 1894, 1893, 3298, 3299, 3300, 1790, 1892,
	1891, 1890, 3297, 3295, 3296, 3288, 3289, 3290, 3291, 3293,
	3294, 1889, 1527, 1941, 2063, 190, 3302, 2065, 1248, 1888,
	1248, 1769, 1768, 2070, 1761, 1049, 1840, 2072, 1317, 1317,
	1887, 1886, 2075, 1789, 1875, 1048, 1861, 1858, 237, 1915,
	1853, 1987, 1347, 1271, 1840, 3286, 3287, 1991, 1763, 1262,
	4130, 230, 2593, 4074, 3850, 3826, 3818, 3233, 1128, 1988,
	231, 236, 2797, 1332, 236, 1782, 1783, 4357, 3043, 3292,
	2762, 1603, 1962, 1938, 1939, 4132, 3286, 3287, 3849, 1874,
	3398, 2114, 1128, 2808, 1856, 1608, 3626, 190, 1973, 1840,
	1393, 4196, 1374, 2114, 4862, 1791, 1792, 1793, 1794, 1796,
	1797, 1216, 2303, 2139, 3303, 179, 4854, 1372, 2936, 238,
	1907, 1908, 238, 4572, 4465, 4456, 1069, 4455, 1362, 4291,
	236, 1367, 3303, 4234, 4233, 2112, 4195, 4125, 4041, 1981,
	2114, 4040, 2085, 2914, 4039, 3821, 4735, 3651, 2626, 2624,
	3650, 1997, 3633, 3632, 1245, 4808, 1245, 2610, 2046, 818,
	2048, 2121, 2012, 1986, 2608, 2084, 818, 1373, 237, 1963,
	4806, 237, 3980, 4461, 1955, 3697, 3923, 3303, 238, 1756,
	3271, 230, 1367, 1953, 230, 1913, 3302, 1969, 821, 2091,
	231, 1960, 1912, 231, 1992, 821, 3270, 1667, 2183, 3193,
	2896, 2041, 3515, 236, 1370, 2100, 2061, 1787, 1788, 3894,
	3450, 2149, 1028, 4511, 1244, 1676, 1244, 190, 1931, 2197,
	190, 1884, 1896, 4509, 3292, 1896, 2081, 237, 1367, 1957,
	2214, 2326, 1332, 1332, 3642, 1972, 2963, 1790, 4791, 1971,
	230, 2300, 1393, 2015, 1970, 1968, 1967, 1966, 4452, 231,
	4378, 238, 4765, 3290, 3291, 3293, 3294, 1029, 1982, 1840,
	1998, 2087, 3295, 3296, 3288, 3289, 3290, 3291, 3293, 3294,
	4746, 1881, 1789, 4731, 1720, 236, 190, 3564, 3101, 3297,
	3295, 3296, 3288, 3289, 3290, 3291, 3293, 3294, 3580, 1677,
	3579, 236, 2215, 236, 3984, 3967, 236, 3484, 2595, 3239,
	237, 3925, 2179, 3920, 2187, 3902, 3670, 2192, 3423, 2307,
	2944, 4341, 3335, 230, 2083, 3748, 2590, 2804, 1929, 4740,
	2225, 2230, 231, 238, 3297, 3295, 3296, 3288, 3289, 3290,
	3291, 3293, 3294, 2088, 1909, 2276, 1332, 3303, 1332, 238,
	1332, 238, 3571, 2090, 238, 1607, 4398, 236, 2893, 190,
	4370, 2182, 2269, 1582, 1509, 4181, 1332, 1332, 2117, 1343,
	2107, 1299, 4178, 1228, 2955, 4755, 4752, 1332, 3616, 4844,
	2943, 3871, 237, 4564, 3547, 4275, 1795, 1655, 2952, 1332,
	2950, 1332, 1332, 1332, 2155, 230, 4741, 2596, 237, 4665,
	237, 4542, 3453, 237, 231, 238, 3889, 3082, 3056, 2217,
	2218, 230, 1008, 230, 1840, 812, 230, 818, 2892, 2219,
	231, 4809, 231, 4810, 3127, 231, 4401, 3399, 4397, 2325,
	4376, 190, 2177, 3691, 1608, 2101, 2265, 1128, 4425, 3427,
	4183, 1549, 270, 1496, 3938, 1026, 821, 190, 2839, 190,
	2270, 1357, 190, 4920, 237, 1024, 1374, 2384, 1022, 2312,
	1516, 2282, 1612, 1515, 1612, 1020, 1511, 230, 1718, 1017,
	4578, 1368, 1128, 1557, 4418, 2305, 231, 4409, 2382, 2597,
	4224, 2594, 2176, 4162, 4223, 2191, 2173, 3936, 3935, 2857,
	1496, 2415, 2857, 3927, 2330, 1067, 3296, 3288, 3289, 3290,
	3291, 3293, 3294, 190, 2855, 3917, 1128, 2855, 1128, 2231,
	2431, 2290, 3937, 2431, 1069, 1128, 1069, 4155, 2018, 2018,
	1393, 1373, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128,
	1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128,
	1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128,
	1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 2251, 1128,
	1558, 1128, 1128, 1128, 1128, 2292, 2250, 1653, 2279, 2429,
	1797, 4156, 2429, 3513, 2146, 4177, 2313, 3450, 4399, 1368,
	2215, 2300, 4371, 2433, 2284, 1066, 4845, 1128, 818, 1364,
	4179, 1128, 1128, 1605, 2288, 2287, 2420, 2287, 3916, 1128,
	2998, 751, 2296, 1128, 2297, 1128, 1128, 874, 2142, 1348,
	2894, 3914, 1699, 1393, 2457, 2458, 3913, 821, 1368, 1128,
	1128, 1128, 1128, 2355, 3429, 1128, 1128, 1128, 1128, 1128,
	1128, 1128, 1128, 2317, 1090, 2599, 3901, 2147, 2148, 3866,
	2798, 3865, 3288, 3289, 3290, 3291, 3293, 3294, 2894, 3553,
	2427, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128,
	2334, 3552, 2318, 2371, 1128, 2571, 2572, 2143, 2345, 3208,
	1369, 3392, 1717, 3244, 3243, 3242, 1250, 2335, 3294, 2571,
	2587, 2911, 2912, 1393, 1607, 1374, 2106, 2105, 2012, 2012,
	2114, 2116, 1250, 2911, 2912, 1068, 2378, 1364, 3206, 4197,
	1669, 3241, 2640, 2918, 3197, 2961, 2635, 2444, 1128, 1393,
	2960, 2957, 875, 3483, 2946, 2930, 2929, 2430, 1698, 2924,
	2430, 1973, 2923, 2922, 2590, 2681, 2681, 2695, 1365, 2571,
	2911, 2912, 2716, 2718, 3514, 3053, 1364, 1366, 2722, 1512,
	2336, 2419, 2418, 2901, 2900, 2425, 2432, 2417, 1248, 2861,
	1373, 2593, 1049, 2535, 1755, 1049, 1049, 1069, 2785, 2504,
	2268, 2639, 2448, 2586, 1248, 2449, 2450, 1069, 1762, 2015,
	2015, 1069, 2461, 1716, 4151, 2396, 4318, 751, 1369, 4152,
	2747, 2898, 2772, 2157, 1677, 1595, 1593, 1594, 1592, 4157,
	2249, 2428, 2812, 1699, 2428, 2820, 1793, 1794, 1796, 1797,
	2739, 2824, 4180, 4140, 2789, 2405, 2161, 1014, 2109, 4849,
	1332, 1332, 1553, 3671, 2408, 2835, 1962, 1369, 2413, 2322,
	1285, 1754, 1566, 2342, 2846, 2519, 2531, 750, 4809, 2519,
	2395, 4154, 3107, 1648, 2185, 4557, 1365, 1216, 1571, 3141,
	3203, 2637, 2006, 1677, 2761, 1366, 2638, 2954, 4158, 2641,
	2584, 2642, 2643, 3152, 1393, 2792, 2776, 2884, 1696, 2388,
	1069, 2788, 1943, 2158, 1729, 3204, 4139, 2870, 2738, 3209,
	2376, 2828, 3185, 4434, 1245, 1365, 3170, 1065, 4737, 2953,
	1362, 1665, 2339, 4877, 1366, 179, 2677, 3426, 2018, 2690,
	1245, 3946, 2746, 2951, 2751, 2949, 2720, 2757, 2758, 1698,
	2707, 2744, 2745, 2333, 2834, 4850, 2836, 2728, 2729, 700,
	2811, 2740, 1367, 2527, 1915, 3680, 2149, 1767, 1346, 2883,
	2525, 1697, 2394, 2111, 2407, 1960, 3898, 4175, 1654, 2856,
	1246, 1393, 1246, 2343, 1244, 695, 2289, 752, 3679, 2800,
	3143, 2599, 915, 1947, 2831, 3737, 3874, 1332, 3947, 3886,
	1244, 1649, 3500, 2130, 2501, 4222, 4559, 3915, 2131, 1578,
	786, 2110, 1018, 3155, 3912, 2862, 2860, 3858, 1128, 1128,
	2162, 1128, 1018, 2383, 2830, 1018, 3845, 2819, 4153, 2807,
	2873, 2822, 1019, 2823, 2904, 1712, 1018, 3559, 3551, 1907,
	1908, 3945, 1950, 812, 2381, 1332, 3511, 2837, 2810, 2956,
	2859, 2814, 2921, 750, 2899, 4823, 3184, 1945, 2414, 3501,
	2829, 1576, 877, 876, 4880, 4852, 825, 4163, 4164, 2947,
	1367, 2237, 2236, 4858, 2860, 1948, 1332, 2919, 3067, 4831,
	1733, 2903, 1715, 1258, 3734, 4830, 2163, 2164, 4162, 4798,
	1332, 2783, 1332, 3096, 2840, 4317, 3040, 3177, 3178, 908,
	2897, 2887, 3499, 4738, 2174, 3205, 3001, 1332, 2012, 1367,
	2159, 3003, 4056, 4634, 2902, 3207, 4055, 3884, 1946, 3674,
	784, 2132, 4155, 3560, 2404, 1255, 4148, 2920, 2913, 2915,
	2916, 2917, 3614, 2928, 2827, 2865, 3108, 3109, 2136, 2962,
	2875, 2878, 3036, 4146, 2990, 2991, 3154, 3115, 3116, 3117,
	3350, 2599, 4150, 2160, 872, 1128, 871, 3613, 1555, 896,
	3557, 2091, 2842, 752, 3492, 3149, 3735, 4644, 1260, 4435,
	2149, 2993, 2499, 2927, 2515, 2502, 4156, 3151, 3102, 2180,
	4173, 4433, 3899, 2844, 4362, 2932, 818, 4431, 4908, 2015,
	2942, 2934, 1612, 2937, 3105, 4176, 4705, 2058, 4706, 3110,
	2198, 3111, 3022, 2513, 3081, 2926, 2169, 4736, 2210, 2925,
	2999, 2133, 2138, 3125, 3613, 821, 818, 1128, 4149, 4565,
	2845, 3493, 2175, 1128, 1128, 4585, 2498, 1317, 2994, 1516,
	179, 2872, 3004, 2130, 4430, 1259, 1949, 3071, 2131, 2198,
	2858, 2843, 1552, 2406, 3007, 821, 3016, 3010, 3069, 3012,
	1284, 3027, 2341, 3526, 3026, 3437, 1578, 1652, 3099, 1002,
	4851, 3098, 4432, 2170, 3491, 2209, 1090, 1090, 1090, 3428,
	3131, 2992, 1727, 4558, 2165, 3157, 1317, 3159, 749, 1128,
	1128, 3062, 3153, 1062, 1477, 1128, 1678, 3072, 1477, 1510,
	3083, 3465, 2194, 3058, 2134, 3129, 3058, 3130, 1128, 1128,
	4632, 3103, 2152, 3070, 1128, 1128, 2168, 1317, 1317, 1269,
	1128, 4249, 3051, 826, 827, 3122, 1902, 2186, 3396, 2193,
	2118, 2119, 2599, 2198, 4856, 2201, 1730, 4797, 3199, 696,
	2208, 3133, 2518, 3135, 2999, 3137, 785, 2184, 1002, 4174,
	3132, 2140, 2140, 4633, 3469, 2509, 909, 910, 3464, 3349,
	2166, 2132, 2377, 2189, 1015, 1128, 1128, 1128, 4052, 2153,
	3147, 1128, 1062, 4772, 4330, 2510, 3212, 3213, 2136, 3200,
	2511, 1128, 916, 4773, 2516, 1003, 3165, 3139, 2871, 4151,
	1650, 3176, 2147, 2148, 4152, 787, 2775, 3558, 1128, 783,
	1664, 1666, 2338, 1728, 4157, 3432, 3471, 718, 4314, 4820,
	3166, 1485, 2151, 3167, 4688, 3124, 897, 898, 2006, 2006,
	697, 2526, 2190, 2332, 3186, 4676, 2444, 3171, 4207, 2500,
	3134, 4881, 3136, 1852, 3138, 3249, 1766, 1345, 2743, 2857,
	3227, 3228, 4857, 1496, 3885, 3231, 4154, 2756, 3223, 2171,
	2130, 2133, 2138, 2202, 2876, 2131, 1068, 4868, 4264, 2184,
	3750, 1256, 2581, 4158, 1003, 4259, 829, 828, 4046, 698,
	3470, 699, 3438, 4866, 4227, 1731, 2186, 4265, 4859, 3846,
	1274, 3160, 1069, 4057, 3162, 3693, 3168, 3960, 4592, 3198,
	1128, 1128, 1128, 1128, 4681, 4611, 3958, 3975, 1683, 2933,
	1128, 1128, 1128, 4472, 4226, 1128, 2181, 4225, 3998, 3601,
	2257, 2183, 1940, 1272, 1257, 1128, 1250, 1393, 1265, 687,
	1777, 1128, 4053, 1128, 3342, 3343, 2447, 1060, 2150, 1002,
	830, 831, 1250, 1776, 2134, 2135, 3232, 2102, 4796, 4250,
	4396, 4481, 3789, 4101, 4541, 4313, 1771, 3839, 3385, 2178,
	1393, 911, 912, 1062, 3960, 2099, 1947, 4909, 3310, 3311,
	3312, 3313, 1250, 3958, 4886, 1393, 2059, 1776, 2132, 1732,
	2512, 3999, 3931, 3918, 3962, 3238, 1004, 3870, 3475, 3325,
	2514, 2185, 2140, 3444, 3602, 2136, 2018, 1496, 1248, 3365,
	1393, 3593, 3378, 4153, 3733, 3344, 3440, 3041, 1317, 1061,
	3035, 3840, 3020, 2283, 1248, 1950, 1332, 2277, 2271, 3961,
	2263, 899, 900, 3413, 1086, 2243, 3415, 3416, 4593, 2437,
	2741, 3419, 3862, 3420, 1546, 3421, 4771, 3841, 1128, 3838,
	1276, 2097, 4163, 4164, 1248, 3473, 758, 1775, 1948, 3804,
	4649, 3962, 1128, 3694, 2734, 1003, 2860, 3354, 3379, 1496,
	2139, 1496, 1332, 3433, 3434, 1004, 3352, 2018, 2133, 2138,
	4614, 2389, 2095, 3374, 2182, 4001, 4280, 3017, 1287, 1776,
	2205, 1775, 4450, 2098, 3454, 1128, 3961, 3458, 3474, 2737,
	2323, 4448, 3397, 4315, 2139, 4373, 1362, 3353, 2905, 4262,
	3456, 1332, 3363, 3452, 1700, 3451, 1005, 3424, 3366, 3367,
	1246, 3371, 4058, 3191, 1777, 3417, 3169, 3383, 3817, 3347,
	3336, 3430, 3346, 1332, 1245, 1332, 1246, 3320, 3321, 3322,
	2736, 3364, 2091, 1006, 3351, 2735, 1077, 2203, 3455, 2782,
	1245, 3460, 2781, 3790, 3462, 2197, 2780, 1393, 1777, 3966,
	3391, 2134, 3791, 4102, 2197, 4385, 2779, 2877, 1332, 3529,
	2778, 3531, 1332, 3445, 3535, 1477, 2012, 2438, 3541, 3441,
	1245, 3369, 3024, 3370, 3406, 2135, 3956, 1066, 2091, 1601,
	2204, 1987, 4885, 1775, 1244, 1005, 1007, 1332, 3486, 3959,
	1852, 3358, 4552, 3516, 3490, 2128, 4445, 4059, 2006, 2140,
	1244, 1332, 1587, 1332, 3509, 1706, 1705, 1393, 3414, 1949,
	3403, 3404, 1006, 3405, 812, 4241, 1588, 2091, 3418, 2881,
	3387, 3388, 3389, 3390, 4594, 1332, 3877, 3576, 3863, 3425,
	1244, 3643, 1599, 914, 2281, 3567, 4297, 2012, 3842, 2091,
	1332, 2091, 3431, 4817, 3524, 3867, 1004, 2015, 4589, 3436,
	1684, 4360, 2126, 3504, 2997, 3409, 3959, 1250, 3394, 3106,
	4386, 3609, 3002, 3585, 3000, 1007, 2311, 2214, 3096, 1658,
	4655, 2906, 2907, 3527, 2091, 3472, 4381, 3096, 2091, 3482,
	3592, 4368, 1332, 1332, 1090, 4553, 3359, 3386, 4380, 3562,
	3488, 3565, 1477, 3495, 4662, 2127, 4646, 4108, 3806, 2606,
	3496, 3498, 4821, 1750, 3497, 4683, 4822, 1332, 4296, 3607,
	4819, 4757, 3502, 4581, 3600, 3629, 3476, 3477, 2015, 3478,
	3479, 3480, 3517, 4573, 4336, 4437, 3618, 4369, 3525, 1248,
	3549, 4100, 3411, 757, 3965, 3317, 3357, 3538, 2928, 3709,
	1752, 3668, 3544, 1749, 3662, 3667, 3407, 3536, 3280, 3210,
	2400, 3542, 1393, 3655, 3672, 1393, 1747, 1724, 4656, 1722,
	3021, 3550, 1694, 3318, 3561, 1692, 1005, 3518, 3519, 3362,
	3520, 3521, 3522, 4554, 2945, 3554, 2750, 2895, 3439, 2809,
	2903, 1943, 2135, 2409, 1980, 3603, 1976, 818, 1128, 3569,
	1753, 1059, 3610, 1006, 1128, 1128, 3589, 3588, 1128, 1128,
	1128, 3590, 1128, 1636, 3664, 3689, 3868, 1690, 1688, 3665,
	2380, 1128, 2018, 3512, 1686, 2347, 821, 3489, 3688, 1600,
	1128, 1771, 1680, 1674, 3641, 1128, 3615, 3145, 1069, 179,
	179, 1393, 3645, 1672, 1477, 3624, 3627, 3628, 3617, 3503,
	1128, 3505, 1597, 2223, 3144, 3687, 1007, 3113, 1393, 2426,
	3639, 3657, 1711, 2350, 2262, 1245, 2242, 3686, 2018, 2018,
	1128, 1128, 1947, 1128, 1128, 1128, 3656, 3705, 3706, 2047,
	1885, 3548, 1598, 913, 3537, 1647, 3360, 3361, 3543, 1496,
	1496, 1128, 3528, 1570, 2605, 1128, 4730, 2018, 2018, 1128,
	1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128,
	1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 3695,
	1128, 1950, 3722, 3723, 3682, 1244, 3666, 3683, 1128, 1128,
	2018, 3762, 3712, 3763, 1751, 1128, 1945, 1748, 4208, 3676,
	2402, 3677, 3692, 3678, 2401, 3922, 1128, 3608, 3921, 1016,
	1746, 1723, 4209, 1721, 1948, 4192, 1693, 1250, 1250, 1691,
	4645, 1128, 1496, 4278, 2457, 3753, 3653, 3769, 3770, 3771,
	3772, 3773, 3774, 3775, 3776, 3777, 3778, 3779, 3780, 3781,
	3782, 3783, 3784, 3785, 3786, 3787, 3788, 2268, 3792, 3717,
	4214, 1393, 2012, 2457, 3768, 3719, 4205, 1946, 3835, 4498,
	2379, 1689, 1687, 4794, 3729, 2346, 3662, 4144, 1685, 3801,
	3736, 3738, 3739, 3997, 3745, 3655, 1679, 1673, 3822, 3988,
	3934, 3752, 3919, 4273, 3892, 3890, 3797, 1671, 3860, 1248,
	1248, 3760, 3861, 2222, 3869, 3761, 1596, 3596, 2012, 2012,
	1128, 3591, 3581, 3054, 3046, 3684, 3765, 3039, 3808, 3028,
	3767, 3014, 4490, 3793, 3690, 2995, 2826, 2821, 2241, 1128,
	3740, 2239, 2216, 2199, 3802, 4491, 2167, 2012, 2012, 2154,
	2141, 2080, 3891, 2015, 3893, 2077, 2074, 2071, 2066, 3794,
	2064, 3813, 3814, 3759, 2060, 2051, 3663, 3658, 3659, 3660,
	3661, 3730, 1128, 1128, 179, 3606, 4785, 1990, 4492, 1780,
	2012, 3810, 3811, 4264, 1225, 3189, 4810, 1021, 1023, 1025,
	1317, 3539, 1477, 3657, 2103, 1949, 2208, 4551, 2412, 2015,
	2015, 3163, 4265, 3161, 2988, 4693, 4302, 3824, 3656, 4295,
	1226, 3825, 4294, 4221, 1128, 4136, 3097, 2122, 1551, 2857,
	4483, 2882, 2857, 4476, 4009, 3933, 2149, 2337, 2015, 2015,
	1744, 1745, 2280, 1307, 2855, 1245, 1245, 2879, 1332, 1308,
	2374, 4494, 2369, 1332, 2410, 4692, 3903, 3843, 3844, 2344,
	4184, 1787, 1788, 4216, 1670, 4518, 4383, 4109, 4087, 3467,
	2885, 2015, 3856, 3857, 4493, 3859, 2886, 2018, 2908, 1784,
	3908, 3910, 1341, 3907, 1787, 1788, 1275, 4813, 4804, 4766,
	3190, 1790, 4495, 3930, 3924, 1477, 3873, 3932, 3926, 1781,
	2411, 261, 2886, 3013, 3985, 1244, 1244, 3852, 1332, 1496,
	2952, 3895, 2264, 1352, 1128, 3929, 2950, 3900, 2959, 3540,
	2939, 2888, 1250, 1128, 2941, 4011, 1789, 1308, 1308, 3067,
	1227, 3948, 3950, 1332, 1332, 1332, 2006, 2940, 4654, 3981,
	2890, 4639, 4605, 4018, 2903, 4599, 3944, 4550, 684, 1789,
	1332, 1332, 1332, 2889, 4467, 4443, 3096, 4361, 3995, 3987,
	3974, 3832, 4002, 3954, 3968, 1477, 3963, 3595, 1332, 2091,
	3061, 2721, 2086, 3445, 1393, 4022, 4006, 1999, 4853, 4003,
	4382, 3964, 2931, 4685, 1508, 1507, 3395, 4884, 4686, 3991,
	1246, 1477, 4601, 3982, 1248, 4005, 3952, 3941, 3286, 3287,
	1393, 1787, 1788, 1128, 1128, 3953, 1246, 2006, 4825, 1128,
	1128, 2018, 1518, 4685, 1128, 1128, 4870, 1128, 4686, 2849,
	2850, 3986, 1128, 2847, 2848, 4079, 2601, 3848, 3663, 3658,
	3659, 3660, 3661, 1128, 1657, 3989, 1246, 2849, 2847, 1136,
	1656, 2636, 3942, 4034, 3994, 1726, 4468, 2012, 1725, 1128,
	4004, 4419, 4218, 4007, 4213, 4212, 4044, 4013, 4012, 4023,
	4024, 4075, 3847, 3741, 3533, 4017, 3530, 4043, 4042, 4031,
	1879, 4025, 1878, 4832, 4643, 4060, 4028, 4642, 4032, 4641,
	4580, 4579, 4029, 4534, 4446, 268, 268, 268, 4413, 690,
	691, 4073, 706, 690, 706, 716, 4358, 4061, 756, 4355,
	4353, 4252, 776, 4238, 4182, 4131, 4033, 782, 4015, 3969,
	1250, 3888, 3880, 3599, 268, 3598, 3461, 3412, 1250, 4054,
	1245, 4069, 1393, 3990, 1393, 3150, 3142, 3121, 2015, 3120,
	3119, 1250, 3118, 3045, 893, 3015, 1477, 2880, 2817, 2813,
	268, 4496, 1332, 1332, 2802, 2801, 2790, 4497, 2530, 2403,
	2375, 2368, 1393, 2367, 2366, 2365, 2364, 2278, 2252, 2248,
	2247, 3378, 2246, 2245, 2244, 2054, 2053, 2052, 2050, 3943,
	1989, 1743, 1742, 1681, 4137, 4138, 4049, 1250, 1565, 1250,
	1244, 2012, 1248, 1564, 1563, 1562, 1561, 1560, 1559, 1554,
	1248, 1550, 1548, 4099, 1547, 1501, 4045, 1500, 1499, 4185,
	1384, 1383, 1332, 1248, 1382, 4171, 1381, 4168, 1380, 4168,
	1344, 1294, 1393, 1477, 1332, 1293, 1292, 1332, 1291, 4117,
	1290, 1289, 1288, 1286, 1281, 1280, 1279, 1278, 1393, 4106,
	1277, 4111, 4112, 1208, 4110, 4116, 1865, 4120, 4113, 2093,
	1870, 1027, 4115, 4217, 4121, 4219, 4141, 1013, 4124, 1248,
	4556, 1248, 886, 8, 4186, 4161, 4160, 4159, 2399, 179,
	92, 1556, 2015, 848, 86, 2206, 1332, 1332, 1391, 3887,
	690, 690, 1490, 4760, 4143, 981, 4682, 1540, 268, 4584,
	4114, 4242, 4129, 1317, 856, 4664, 1332, 3983, 3463, 2964,
	2349, 1682, 2351, 3373, 2763, 4135, 4631, 4206, 1393, 4083,
	3248, 4525, 4329, 1332, 2604, 4220, 1883, 4201, 1245, 3329,
	88, 1112, 4239, 1158, 4248, 4247, 1245, 4145, 2091, 3872,
	3086, 1246, 4245, 4244, 2003, 4211, 2005, 1076, 1250, 1245,
	2091, 1396, 4704, 2091, 2104, 4270, 1118, 2120, 2113, 2803,
	1332, 1332, 1332, 2680, 4172, 2268, 4267, 4204, 1135, 1132,
	2007, 2009, 2006, 1393, 4298, 4237, 1134, 4281, 4168, 4236,
	1133, 4187, 4188, 2008, 1903, 1128, 1128, 1128, 1244, 4230,
	1131, 4229, 4228, 2002, 4282, 1245, 1244, 1245, 4235, 3993,
	3065, 4269, 4243, 1393, 3625, 4285, 4258, 1606, 1128, 1244,
	4190, 1128, 1128, 1604, 983, 4276, 2108, 4290, 2006, 2006,
	1248, 1128, 2091, 4199, 2018, 2524, 4202, 2588, 3237, 1128,
	1128, 4283, 1876, 1092, 1114, 2585, 1270, 1103, 1091, 3355,
	3334, 3612, 3831, 2436, 1393, 866, 1332, 2006, 2006, 4307,
	3283, 2591, 1261, 2704, 2696, 1244, 2692, 1244, 4321, 3422,
	3055, 1757, 4343, 1854, 4305, 4310, 3066, 4309, 1378, 1393,
	4304, 1096, 2522, 1867, 3215, 4316, 2446, 1128, 3619, 3376,
	2006, 2796, 4326, 4689, 3749, 3148, 2256, 1224, 1223, 4335,
	1128, 1268, 1222, 4670, 4667, 2196, 4026, 3574, 2096, 1128,
	2841, 2534, 3582, 1108, 2018, 1495, 2393, 3340, 3644, 4404,
	4405, 1567, 781, 1128, 4390, 4301, 1128, 1120, 1839, 2985,
	2984, 4545, 4251, 1363, 1361, 1360, 1359, 4841, 4364, 4332,
	1128, 4907, 3883, 2229, 4338, 4268, 3882, 1393, 4191, 4420,
	4393, 4422, 3881, 4423, 1332, 4375, 1245, 4352, 235, 3183,
	4200, 4349, 4350, 4203, 1332, 1332, 1778, 1770, 4289, 4365,
	232, 234, 233, 4253, 3836, 3382, 4764, 3905, 3566, 4363,
	23, 22, 4372, 21, 113, 42, 20, 152, 130, 149,
	148, 122, 147, 146, 145, 4412, 3576, 4436, 144, 151,
	143, 142, 4424, 137, 2012, 141, 140, 139, 138, 1393,
	4402, 4458, 1332, 4415, 136, 134, 1244, 4449, 135, 129,
	133, 132, 131, 4414, 4410, 128, 127, 126, 125, 124,
	1250, 1250, 4266, 123, 121, 153, 120, 4421, 119, 118,
	117, 1246, 1246, 4466, 116, 115, 4462, 4428, 114, 4438,
	1128, 1128, 769, 4441, 770, 61, 4501, 4502, 4439, 60,
	4168, 4168, 112, 4486, 4447, 110, 4477, 1128, 2018, 111,
	2091, 19, 4457, 4505, 40, 14, 65, 66, 4480, 18,
	13, 35, 4442, 4478, 2012, 2015, 91, 102, 101, 36,
	99, 98, 34, 17, 16, 4479, 15, 96, 95, 33,
	4285, 2268, 1248, 1248, 4484, 1128, 4474, 1128, 4485, 1128,
	4499, 31, 11, 9, 37, 1964, 12, 5, 184, 1250,
	183, 1317, 186, 182, 4514, 4515, 185, 90, 181, 180,
	89, 29, 1128, 10, 1250, 4522, 4540, 176, 4513, 4459,
	3979, 81, 178, 4426, 177, 4517, 175, 2006, 174, 4168,
	173, 82, 79, 172, 85, 171, 80, 84, 4576, 1979,
	4568, 83, 1263, 27, 4168, 2015, 6, 64, 4536, 1477,
	7, 4311, 3669, 4539, 105, 4544, 106, 38, 4523, 77,
	76, 2139, 4482, 75, 4567, 26, 1128, 1128, 63, 25,
	170, 1248, 217, 216, 215, 1283, 1128, 4561, 4588, 4560,
	4566, 1250, 1477, 214, 1250, 213, 1248, 268, 1332, 268,
	268, 212, 1312, 268, 1322, 4575, 211, 1477, 1332, 1332,
	4416, 210, 205, 4577, 204, 1342, 209, 4608, 1245, 1245,
	4610, 4168, 207, 776, 4168, 1332, 776, 206, 2012, 208,
	203, 4582, 1477, 227, 4622, 4595, 4462, 226, 220, 1128,
	1128, 4533, 4600, 219, 4535, 4596, 4597, 4607, 4602, 1128,
	268, 4603, 268, 268, 1312, 225, 268, 268, 4616, 224,
	4427, 1322, 223, 1248, 222, 4618, 1248, 221, 4619, 4615,
	1090, 2006, 218, 229, 202, 268, 2124, 1520, 1244, 1244,
	201, 200, 4626, 198, 1090, 194, 193, 197, 199, 196,
	4636, 4657, 1128, 1128, 195, 1128, 192, 4640, 1544, 4661,
	228, 4620, 4621, 72, 168, 169, 1246, 1245, 71, 2015,
	167, 166, 165, 4635, 164, 163, 162, 1569, 4625, 4691,
	1322, 161, 1245, 70, 268, 268, 24, 1312, 4652, 4653,
	4687, 2, 4660, 1, 0, 4659, 0, 0, 0, 0,
	4684, 0, 0, 4709, 0, 0, 0, 0, 776, 4678,
	268, 268, 0, 1128, 1128, 1128, 0, 4713, 0, 4712,
	4669, 4672, 4674, 0, 4694, 0, 4673, 1244, 0, 4677,
	0, 0, 4700, 893, 0, 0, 0, 0, 0, 1477,
	0, 0, 1244, 0, 4708, 0, 1128, 0, 4744, 1245,
	4707, 4586, 1245, 0, 4627, 0, 4628, 2528, 0, 0,
	4749, 4729, 4759, 0, 4762, 4728, 4726, 4727, 0, 0,
	0, 0, 0, 1865, 0, 4606, 0, 4767, 2234, 0,
	0, 0, 0, 0, 0, 0, 0, 4747, 0, 0,
	4774, 0, 0, 4776, 2441, 0, 0, 4790, 4778, 1477,
	0, 0, 4763, 1128, 0, 0, 0, 0, 4788, 1244,
	4789, 268, 1244, 0, 4775, 0, 0, 0, 0, 0,
	0, 4795, 0, 4679, 0, 4784, 4680, 0, 2703, 0,
	4786, 4787, 4783, 268, 0, 0, 4792, 0, 0, 0,
	4782, 0, 4801, 4802, 4807, 4815, 4811, 4805, 4803, 0,
	0, 0, 1496, 0, 1246, 4814, 0, 0, 1250, 4691,
	1250, 2139, 1246, 4818, 4816, 4834, 0, 0, 0, 0,
	0, 0, 0, 4835, 4837, 1246, 4848, 0, 4588, 4846,
	4833, 4824, 4829, 0, 4836, 4847, 4838, 0, 4168, 4843,
	4168, 0, 0, 0, 0, 0, 0, 4861, 0, 0,
	0, 0, 4669, 4745, 0, 4672, 0, 4695, 0, 0,
	0, 4860, 0, 4697, 4863, 0, 0, 0, 0, 0,
	0, 1246, 0, 1246, 0, 0, 0, 0, 4874, 4878,
	1248, 4872, 1248, 0, 1128, 1128, 4871, 0, 4879, 0,
	2698, 4876, 0, 1128, 1477, 1128, 1128, 1477, 0, 0,
	0, 4891, 4882, 0, 0, 0, 0, 4898, 0, 1317,
	4892, 4895, 4903, 4896, 4902, 4888, 3067, 4897, 0, 0,
	4901, 4900, 4899, 0, 0, 0, 0, 0, 0, 4911,
	0, 0, 4915, 4910, 4913, 4906, 0, 4916, 0, 4917,
	0, 4919, 0, 0, 4912, 4914, 0, 4922, 0, 0,
	0, 0, 0, 0, 0, 4924, 1128, 4927, 4923, 4929,
	0, 0, 0, 4930, 4926, 4932, 4933, 0, 4919, 4889,
	4890, 0, 0, 1477, 2006, 0, 0, 4842, 0, 0,
	0, 0, 0, 0, 690, 0, 0, 0, 0, 1326,
	1477, 0, 0, 0, 0, 0, 2460, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 1245, 268, 1245, 0,
	0, 268, 0, 0, 0, 0, 0, 4867, 0, 0,
	0, 0, 1246, 4869, 1520, 1312, 1984, 268, 0, 268,
	4928, 0, 0, 0, 0, 268, 1520, 706, 0, 0,
	0, 0, 268, 1520, 0, 1520, 1504, 0, 0, 0,
	0, 0, 0, 0, 2006, 0, 0, 2055, 0, 0,
	0, 0, 0, 0, 0, 0, 1244, 0, 1244, 268,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	1542, 0, 0, 3286, 3287, 0, 3304, 3305, 3306, 2602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1787, 1788, 0, 0, 4065, 1579, 0, 73, 0,
	0, 1520, 0, 0, 0, 776, 0, 0, 0, 0,
	0, 0, 0, 1477, 1818, 74, 0, 0, 0, 0,
	0, 1790, 0, 1620, 0, 0, 0, 0, 0, 0,
	0, 78, 0, 0, 0, 0, 0, 1633, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 3301, 0,
	0, 0, 0, 0, 0, 0, 1789, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 73, 0, 46, 45,
	0, 87, 0, 0, 0, 2773, 0, 0, 0, 0,
	0, 0, 0, 74, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 1659, 0, 0, 0, 0, 2006, 78,
	3286, 3287, 0, 3304, 3305, 3306, 0, 0, 0, 0,
	67, 887, 0, 0, 0, 0, 0, 48, 0, 157,
	0, 0, 3714, 49, 0, 107, 0, 0, 0, 0,
	93, 104, 0, 0, 0, 0, 0, 47, 0, 87,
	0, 0, 3292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1795, 0, 0, 0, 0, 50, 68, 0, 0, 268,
	0, 0, 0, 268, 51, 3301, 0, 0, 0, 57,
	0, 2703, 0, 158, 1246, 1246, 0, 0, 0, 94,
	0, 49, 0, 107, 0, 0, 0, 0, 93, 104,
	0, 0, 0, 0, 0, 0, 0, 3308, 1817, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2852, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 268, 0, 0, 52,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 3302,
	0, 0, 0, 0, 0, 0, 0, 94, 268, 0,
	268, 0, 2703, 2703, 690, 0, 268, 1810, 0, 3292,
	0, 0, 0, 1246, 0, 0, 0, 0, 776, 0,
	0, 0, 893, 0, 0, 0, 0, 0, 1246, 0,
	0, 0, 0, 3173, 0, 0, 0, 0, 3286, 3287,
	0, 3304, 3305, 3306, 0, 0, 1477, 268, 0, 1312,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3713, 0, 1840, 0, 776, 0, 0, 0, 0, 0,
	0, 268, 1477, 0, 3308, 97, 0, 0, 0, 2348,
	1840, 0, 0, 0, 268, 268, 0, 268, 0, 268,
	0, 268, 0, 268, 0, 1246, 3286, 3287, 1246, 3304,
	3305, 3306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3301, 2698, 2698, 3302, 0, 2385, 0,
	0, 2386, 0, 2387, 0, 0, 0, 0, 0, 0,
	187, 100, 0, 0, 103, 268, 268, 268, 268, 0,
	3303, 0, 0, 97, 0, 0, 0, 0, 0, 0,
	3286, 3287, 0, 3304, 3305, 3306, 0, 0, 1811, 0,
	236, 53, 756, 0, 0, 0, 776, 0, 888, 0,
	0, 3301, 0, 150, 0, 0, 56, 0, 0, 0,
	0, 59, 0, 0, 2703, 2703, 2703, 2703, 0, 1840,
	0, 69, 0, 0, 1477, 0, 1477, 58, 187, 100,
	0, 0, 103, 0, 0, 0, 54, 3292, 238, 0,
	159, 0, 0, 0, 0, 0, 1842, 0, 55, 0,
	0, 0, 0, 0, 1477, 3301, 0, 0, 236, 0,
	0, 0, 0, 0, 154, 0, 62, 0, 0, 0,
	0, 150, 0, 0, 0, 0, 0, 0, 0, 191,
	0, 0, 0, 0, 0, 0, 156, 237, 0, 2536,
	0, 0, 0, 0, 0, 3292, 0, 3303, 0, 0,
	230, 0, 3308, 0, 0, 0, 238, 0, 0, 231,
	3298, 3299, 3300, 0, 1477, 0, 0, 3297, 3295, 3296,
	3288, 3289, 3290, 3291, 3293, 3294, 2698, 2698, 2698, 2698,
	1477, 0, 154, 0, 0, 0, 190, 0, 1791, 1792,
	1793, 1794, 1796, 1797, 3302, 0, 0, 191, 0, 3292,
	0, 0, 0, 0, 0, 237, 0, 0, 0, 0,
	690, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 268, 0, 231, 0, 0,
	0, 0, 0, 0, 690, 0, 0, 0, 0, 0,
	3309, 268, 0, 690, 0, 0, 0, 0, 0, 0,
	1477, 0, 3302, 0, 190, 268, 0, 3, 0, 0,
	0, 0, 0, 0, 3308, 0, 0, 1840, 0, 0,
	0, 0, 0, 268, 1322, 0, 0, 0, 0, 0,
	0, 0, 1246, 0, 1246, 0, 0, 3298, 3299, 3300,
	0, 0, 0, 0, 3297, 3295, 3296, 3288, 3289, 3290,
	3291, 3293, 3294, 1787, 1788, 1477, 3302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 1322, 0, 1840, 1818, 706, 0, 0,
	0, 2816, 0, 1790, 0, 1477, 0, 268, 0, 0,
	268, 0, 0, 0, 268, 3303, 268, 0, 0, 0,
	0, 1312, 0, 268, 268, 0, 1322, 1322, 2832, 1843,
	0, 0, 0, 268, 0, 0, 0, 0, 1789, 0,
	0, 0, 0, 2298, 0, 0, 1477, 0, 1809, 1840,
	0, 0, 0, 0, 0, 0, 0, 1806, 0, 1326,
	2314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2316, 1477, 0, 3303, 0, 0, 0, 0, 0, 0,
	2869, 0, 2324, 0, 2327, 2328, 2329, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 4064, 0, 3341, 0, 0, 0, 268, 1090, 0,
	0, 0, 0, 0, 0, 0, 0, 3303, 776, 0,
	0, 0, 1812, 1813, 1814, 1815, 0, 0, 0, 1477,
	0, 0, 1795, 0, 0, 0, 3368, 0, 0, 268,
	0, 0, 0, 0, 0, 3298, 3299, 3300, 0, 0,
	0, 3381, 3297, 3295, 3296, 3288, 3289, 3290, 3291, 3293,
	3294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 3005, 0, 0, 3401, 0, 0, 0,
	1817, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1477, 0, 0, 0, 0, 0, 1520, 0, 0,
	268, 0, 268, 3298, 3299, 3300, 1804, 1805, 0, 268,
	3297, 3295, 3296, 3288, 3289, 3290, 3291, 3293, 3294, 3050,
	0, 0, 0, 2703, 2703, 0, 0, 0, 0, 2869,
	0, 690, 0, 0, 0, 0, 0, 0, 0, 1810,
	3079, 893, 0, 2869, 2869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3298, 3299, 3300,
	0, 0, 268, 0, 3297, 3295, 3296, 3288, 3289, 3290,
	3291, 3293, 3294, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 1312, 268, 0, 0, 0, 0, 0, 0,
	1520, 0, 1520, 1322, 268, 0, 0, 1312, 0, 1312,
	0, 1312, 0, 0, 0, 0, 1083, 0, 0, 0,
	0, 0, 1840, 2703, 2703, 2703, 2703, 2703, 2703, 2703,
	2703, 2703, 2703, 2703, 2703, 2703, 2703, 2703, 2703, 2703,
	2703, 2703, 2703, 0, 2703, 2698, 2698, 0, 0, 0,
	1787, 1788, 0, 0, 268, 268, 268, 268, 1312, 0,
	0, 1312, 0, 268, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 1818, 0, 0, 0, 1816, 1090, 1090,
	1790, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2980, 0, 0, 3381, 0, 0, 0, 268, 0, 0,
	1811, 0, 0, 0, 0, 268, 1843, 0, 0, 0,
	0, 0, 0, 0, 0, 1789, 0, 0, 0, 0,
	0, 0, 0, 2972, 2970, 1809, 0, 0, 0, 0,
	2974, 2976, 2966, 0, 1806, 2698, 2698, 2698, 2698, 2698,
	2698, 2698, 2698, 2698, 2698, 2698, 2698, 2698, 2698, 2698,
	2698, 2698, 2698, 2698, 2698, 0, 2698, 0, 1842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3708, 0,
	0, 0, 0, 0, 0, 1090, 0, 0, 0, 0,
	0, 0, 0, 2833, 1326, 0, 0, 0, 0, 1812,
	1813, 1814, 1815, 0, 0, 0, 0, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1520, 0, 0, 0, 0, 0, 0, 1490, 0,
	0, 1391, 0, 0, 1807, 1803, 0, 1800, 1798, 1799,
	1791, 1792, 1793, 1794, 1796, 1797, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 1819, 0,
	881, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 789, 0, 0,
	0, 0, 0, 1804, 1805, 0, 0, 73, 0, 884,
	883, 1787, 1788, 0, 0, 0, 0, 0, 0, 0,
	0, 2968, 800, 0, 74, 0, 0, 3726, 0, 0,
	0, 0, 2982, 0, 1818, 0, 1810, 0, 0, 0,
	78, 1790, 0, 0, 3742, 0, 0, 0, 1787, 1788,
	2989, 0, 0, 2981, 2973, 2971, 2975, 2977, 2967, 2969,
	2983, 0, 0, 0, 0, 0, 0, 1843, 0, 2979,
	0, 1818, 0, 0, 0, 0, 1789, 0, 1790, 0,
	87, 0, 0, 0, 0, 268, 1809, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 0, 0, 0, 0,
	0, 268, 2986, 0, 1843, 0, 690, 0, 0, 1840,
	0, 690, 0, 1789, 690, 794, 0, 690, 690, 0,
	887, 806, 0, 690, 0, 0, 0, 0, 0, 0,
	0, 268, 49, 0, 107, 799, 0, 0, 0, 93,
	104, 0, 0, 0, 0, 1520, 0, 0, 0, 3703,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3114, 0, 0, 0, 1816, 0, 0, 0, 0, 1520,
	1812, 1813, 1814, 1815, 0, 0, 0, 3834, 0, 0,
	1795, 268, 0, 798, 0, 268, 268, 1811, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 94, 0,
	751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2869, 2869, 268, 1795, 1984, 0,
	0, 0, 0, 0, 2869, 796, 0, 3447, 1817, 1819,
	0, 0, 0, 0, 0, 2869, 3447, 0, 2869, 3447,
	0, 0, 3447, 0, 0, 1842, 0, 0, 0, 0,
	0, 0, 0, 0, 1804, 1805, 0, 268, 268, 1984,
	0, 268, 0, 0, 0, 1817, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1984, 2987, 268, 805, 3508, 3508, 1810, 0, 0,
	1312, 2978, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2869, 0, 2869, 0, 3534, 2869, 1984, 0, 0, 2869,
	1984, 0, 0, 776, 1810, 0, 0, 0, 0, 0,
	0, 1807, 1803, 0, 1800, 1798, 1799, 1791, 1792, 1793,
	1794, 1796, 1797, 0, 97, 0, 0, 0, 1312, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 791, 1520,
	1840, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 3570, 0, 0, 3572, 2869, 0,
	0, 268, 0, 0, 0, 268, 0, 0, 1322, 795,
	0, 0, 0, 0, 0, 1787, 1788, 1840, 0, 187,
	100, 0, 0, 103, 0, 0, 268, 0, 0, 0,
	0, 3050, 0, 0, 1312, 1816, 268, 0, 1818, 2869,
	0, 690, 0, 0, 0, 1790, 750, 0, 2869, 236,
	0, 0, 0, 0, 0, 0, 0, 888, 1811, 0,
	0, 801, 150, 0, 0, 0, 0, 793, 0, 268,
	3050, 1843, 0, 3050, 0, 0, 0, 0, 0, 0,
	1789, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1809, 0, 0, 0, 0, 1811, 0, 238, 1787, 1788,
	0, 1820, 1821, 1822, 1831, 1832, 1833, 0, 3675, 0,
	0, 0, 0, 0, 790, 0, 1842, 0, 0, 0,
	1824, 1818, 0, 154, 0, 0, 3681, 0, 1790, 1520,
	0, 0, 1312, 268, 0, 268, 0, 1837, 191, 0,
	0, 1312, 797, 0, 0, 0, 237, 0, 0, 0,
	0, 0, 0, 1842, 1843, 0, 752, 0, 0, 230,
	0, 0, 0, 1789, 0, 2703, 0, 792, 231, 0,
	0, 268, 0, 1809, 1812, 1813, 1814, 1815, 0, 0,
	0, 0, 1806, 0, 1795, 0, 0, 0, 0, 0,
	803, 804, 0, 0, 0, 882, 0, 0, 0, 0,
	0, 0, 1807, 1803, 0, 1800, 1798, 1799, 1791, 1792,
	1793, 1794, 1796, 1797, 0, 0, 0, 0, 0, 0,
	0, 2703, 0, 0, 0, 0, 0, 0, 0, 3747,
	0, 0, 1817, 1819, 0, 0, 0, 0, 0, 0,
	4119, 0, 0, 1798, 1799, 1791, 1792, 1793, 1794, 1796,
	1797, 0, 0, 0, 0, 0, 0, 1812, 1813, 1814,
	1815, 0, 0, 0, 0, 0, 73, 1795, 4133, 0,
	0, 0, 0, 0, 0, 0, 0, 2698, 0, 0,
	0, 0, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 78,
	0, 0, 0, 0, 0, 1828, 0, 0, 1838, 0,
	0, 0, 73, 0, 0, 1817, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 268, 0, 74,
	0, 0, 1834, 2698, 1835, 0, 0, 0, 0, 87,
	0, 1804, 1805, 0, 0, 78, 0, 0, 0, 690,
	690, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	0, 0, 0, 0, 1840, 0, 0, 0, 0, 0,
	0, 0, 1520, 1520, 1810, 0, 0, 0, 0, 887,
	0, 0, 0, 0, 0, 87, 0, 1520, 1520, 0,
	1520, 49, 0, 107, 0, 0, 0, 0, 93, 104,
	0, 2703, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1836, 1816,
	0, 0, 1823, 0, 0, 887, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1825, 49, 0, 107,
	3545, 2703, 1811, 0, 93, 104, 0, 1840, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 94, 0, 0,
	0, 0, 0, 776, 0, 0, 2703, 0, 0, 1391,
	0, 0, 0, 0, 0, 0, 0, 0, 3586, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3594, 0, 0, 3508, 0, 0, 4327,
	1842, 0, 1816, 94, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 2698, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1811, 0, 0, 0, 0,
	0, 1984, 0, 268, 0, 3635, 3636, 706, 706, 1322,
	4327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 1829, 2698, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 2460, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 268, 0, 2698, 0,
	0, 268, 0, 1842, 0, 0, 0, 0, 0, 1800,
	1798, 1799, 1791, 1792, 1793, 1794, 1796, 1797, 0, 0,
	2869, 268, 0, 97, 0, 0, 0, 0, 0, 0,
	3079, 3079, 0, 0, 0, 0, 893, 893, 2869, 0,
	0, 0, 3050, 3050, 0, 0, 893, 2869, 0, 0,
	0, 0, 0, 2460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 97,
	0, 268, 0, 0, 0, 1827, 0, 0, 187, 100,
	0, 0, 103, 0, 0, 1801, 1802, 1808, 1830, 1807,
	1803, 0, 1800, 1798, 1799, 1791, 1792, 1793, 1794, 1796,
	1797, 0, 0, 0, 1823, 3261, 0, 0, 236, 3262,
	0, 0, 0, 0, 0, 0, 888, 0, 0, 0,
	0, 150, 0, 0, 187, 100, 0, 0, 103, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4084, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 238, 0, 0, 0,
	0, 0, 888, 0, 0, 0, 0, 150, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 0, 0,
	0, 0, 238, 0, 0, 237, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 1520, 0, 268, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 154, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 0, 1322, 0, 0, 0, 0,
	0, 237, 0, 0, 1617, 0, 0, 0, 1322, 0,
	0, 0, 0, 0, 230, 2869, 2869, 0, 3508, 2869,
	0, 0, 0, 231, 0, 0, 4170, 0, 4170, 1520,
	0, 3286, 3287, 0, 3304, 3305, 3306, 0, 0, 1823,
	2869, 0, 3447, 0, 0, 1823, 1520, 1520, 268, 1984,
	1615, 1823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1984, 0, 268, 1984, 0, 268, 0, 3508,
	0, 0, 1787, 1788, 0, 1820, 1821, 1822, 1831, 1832,
	1833, 0, 0, 0, 2869, 0, 2869, 268, 0, 0,
	0, 0, 0, 0, 0, 1818, 0, 0, 0, 0,
	0, 0, 1790, 0, 0, 0, 3301, 0, 0, 0,
	0, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2869, 0, 0, 0, 0, 4255, 1843, 0,
	0, 0, 0, 0, 0, 0, 0, 1789, 268, 0,
	1823, 0, 0, 0, 0, 1823, 0, 1809, 268, 0,
	0, 0, 0, 0, 1823, 0, 1806, 0, 0, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3939, 0, 0, 0, 0, 0, 4170, 0, 0,
	1520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3292, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1823, 0, 0, 0, 0, 0,
	1823, 1812, 1813, 1814, 1815, 0, 0, 0, 0, 0,
	0, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4019, 4020, 4021, 0,
	0, 0, 0, 0, 0, 3308, 0, 0, 0, 0,
	1942, 0, 0, 1326, 4035, 4036, 0, 0, 0, 1828,
	0, 0, 1838, 0, 0, 0, 0, 0, 0, 1817,
	1819, 0, 0, 0, 2869, 0, 3447, 0, 0, 4367,
	0, 0, 0, 0, 0, 0, 0, 3302, 268, 0,
	0, 0, 0, 0, 0, 1804, 1805, 0, 4391, 0,
	4391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 776, 0, 0, 0, 1810, 0,
	0, 0, 0, 0, 0, 3508, 0, 1312, 0, 0,
	0, 1823, 1823, 1823, 1823, 1823, 1823, 1823, 1823, 0,
	0, 73, 1984, 0, 268, 0, 0, 0, 0, 0,
	1840, 1823, 0, 0, 0, 0, 0, 0, 74, 0,
	0, 0, 0, 0, 1823, 0, 0, 0, 0, 4367,
	0, 0, 0, 0, 78, 0, 0, 2869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 0, 0, 0, 4471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1520, 0, 0,
	2702, 0, 0, 0, 87, 0, 0, 0, 0, 4170,
	4170, 0, 0, 1823, 0, 0, 0, 0, 3303, 1823,
	0, 0, 1075, 0, 0, 4126, 4127, 268, 268, 0,
	0, 0, 0, 0, 0, 0, 1816, 0, 0, 0,
	0, 0, 0, 0, 887, 0, 0, 0, 0, 0,
	0, 3747, 0, 0, 0, 0, 0, 0, 107, 1811,
	0, 0, 0, 93, 104, 0, 1520, 0, 0, 1520,
	3508, 4538, 0, 0, 0, 0, 0, 0, 4367, 0,
	0, 0, 0, 0, 0, 0, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4170, 0, 0, 0, 1842, 0, 0,
	0, 0, 94, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 706, 0, 1326,
	0, 0, 0, 0, 0, 1160, 0, 0, 3298, 3299,
	3300, 0, 0, 0, 4255, 3297, 3295, 3296, 3288, 3289,
	3290, 3291, 3293, 3294, 0, 0, 0, 0, 0, 0,
	4170, 0, 268, 4170, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 3447, 0, 0, 0, 0, 0, 1801,
	1802, 1808, 1830, 1807, 1803, 0, 1800, 1798, 1799, 1791,
	1792, 1793, 1794, 1796, 1797, 0, 0, 0, 0, 1520,
	0, 1520, 0, 4306, 0, 4308, 0, 1787, 1788, 0,
	0, 0, 0, 1831, 1832, 1833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1787, 1788, 0,
	1818, 0, 0, 0, 0, 0, 4650, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 0, 97, 0,
	1818, 0, 4391, 0, 0, 268, 0, 1790, 0, 0,
	0, 0, 0, 1843, 0, 0, 0, 0, 1520, 0,
	0, 1520, 1789, 0, 0, 0, 0, 0, 0, 0,
	2869, 0, 1809, 1843, 0, 0, 0, 0, 0, 4354,
	0, 1806, 1789, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 1809, 187, 100, 0, 0, 103, 0, 0,
	0, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1113, 109, 0, 0, 0, 0, 3747, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 888, 0, 0, 0, 0, 150, 0, 1520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3702, 1812, 1813, 1814, 1815,
	0, 0, 0, 0, 1251, 0, 1795, 0, 268, 0,
	0, 238, 0, 0, 0, 0, 1812, 1813, 1814, 1815,
	0, 0, 0, 0, 0, 0, 1795, 4440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 154, 0, 0,
	0, 0, 0, 0, 1828, 0, 109, 1838, 0, 0,
	4367, 0, 191, 0, 1817, 1819, 0, 0, 0, 1823,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 1817, 1819, 0, 0, 0, 0,
	1804, 1805, 231, 0, 1823, 0, 0, 0, 0, 0,
	2869, 0, 0, 0, 0, 0, 0, 4170, 1826, 4170,
	1804, 1805, 1520, 0, 0, 0, 0, 0, 0, 190,
	0, 0, 0, 1810, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 0, 0, 0, 1823, 0, 0, 0,
	0, 0, 1050, 1810, 0, 0, 0, 0, 0, 0,
	1823, 0, 1520, 1070, 0, 0, 0, 0, 1520, 1823,
	1823, 1823, 1823, 1823, 1823, 1823, 1823, 1823, 1823, 1823,
	1823, 1823, 1823, 1823, 1823, 1823, 1823, 1823, 1823, 1823,
	1823, 1823, 1823, 1823, 1823, 1823, 1823, 1823, 1823, 1823,
	1823, 1823, 1823, 1823, 1823, 0, 1840, 1337, 3079, 0,
	1823, 1234, 1823, 1823, 1823, 1823, 0, 2869, 0, 0,
	0, 0, 0, 0, 2702, 2702, 1840, 0, 0, 0,
	0, 0, 0, 3079, 1075, 1075, 1075, 0, 0, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1816, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1816, 0, 0, 1811, 0, 0, 1522, 0, 1528,
	1823, 1534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1326, 1326, 0, 1811, 0, 0, 0, 0, 0,
	0, 1829, 0, 0, 0, 0, 0, 0, 1326, 0,
	1823, 0, 0, 1823, 0, 0, 1823, 0, 0, 1823,
	0, 0, 0, 0, 0, 1823, 1823, 1823, 1823, 1823,
	1823, 1823, 1842, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1623, 0,
	1628, 0, 1842, 0, 0, 0, 0, 0, 0, 0,
	1637, 0, 1642, 0, 0, 0, 0, 0, 2673, 2674,
	2675, 2676, 2669, 2670, 2671, 2672, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 0, 0, 3307, 0, 2702, 2702, 2702, 2702,
	0, 0, 0, 1823, 1827, 1823, 0, 0, 0, 0,
	1823, 0, 0, 0, 0, 0, 0, 1830, 1807, 1803,
	0, 1800, 1798, 1799, 1791, 1792, 1793, 1794, 1796, 1797,
	1707, 0, 0, 1713, 0, 0, 0, 0, 1807, 1803,
	0, 1800, 1798, 1799, 1791, 1792, 1793, 1794, 1796, 1797,
	2649, 2650, 2651, 2652, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2661, 2662, 2663, 2664, 2657, 2658, 2659,
	2660, 2665, 2666, 2667, 2668, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1251, 0, 0, 0, 0, 0, 0, 0, 1844,
	1845, 1846, 1847, 1848, 1849, 1850, 1851, 0, 0, 0,
	1787, 1788, 0, 0, 0, 0, 0, 0, 0, 2645,
	2646, 2647, 2648, 2653, 2654, 2655, 2656, 0, 0, 0,
	0, 0, 1864, 1818, 0, 0, 0, 1251, 1877, 0,
	1790, 1251, 0, 0, 0, 0, 0, 0, 1251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 0, 0, 0,
	0, 0, 0, 0, 0, 1789, 0, 0, 0, 0,
	0, 0, 1251, 0, 0, 1809, 0, 0, 0, 0,
	0, 0, 0, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1251, 0,
	0, 0, 0, 0, 0, 1251, 0, 0, 0, 0,
	0, 0, 0, 1936, 1936, 1936, 0, 0, 3201, 1251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	1813, 1814, 1815, 0, 0, 1823, 1823, 0, 1823, 1795,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 1819, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1804, 1805, 0, 0, 0, 0, 0,
	109, 0, 109, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 0, 0, 0,
	0, 0, 1075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1823, 0, 0,
	0, 0, 0, 0, 0, 1070, 109, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	0, 0, 1823, 1823, 0, 2702, 2702, 0, 0, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3307,
	3307, 0, 0, 1823, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1823, 0, 0,
	109, 0, 0, 0, 1816, 0, 0, 0, 0, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2702, 2702, 2702, 2702, 2702,
	2702, 2702, 2702, 2702, 2702, 2702, 2702, 2702, 2702, 2702,
	2702, 2702, 2702, 2702, 2702, 0, 2702, 3307, 3307, 3307,
	3307, 1251, 0, 1251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1842, 0, 0, 1251, 0,
	0, 0, 0, 0, 0, 1050, 0, 0, 0, 0,
	0, 0, 1823, 0, 0, 0, 0, 2019, 0, 0,
	0, 0, 0, 0, 0, 0, 1857, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1863, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1807, 1803, 0, 1800, 1798, 1799, 1791, 1792, 1793,
	1794, 1796, 1797, 0, 0, 0, 0, 0, 1251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1251, 0, 2372, 0, 0,
	0, 0, 0, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2397, 0, 0, 0, 0, 0, 1956, 0,
	1959, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2435, 0, 2439, 0,
	0, 0, 0, 0, 0, 2453, 0, 0, 0, 0,
	0, 0, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469,
	2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479,
	2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489,
	2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 0, 2503,
	0, 2505, 2506, 2507, 2508, 0, 0, 1251, 1251, 0,
	0, 0, 0, 0, 0, 0, 0, 1251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2532, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	0, 0, 0, 2583, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2613,
	2616, 2619, 2622, 0, 0, 2628, 2629, 2630, 2631, 2632,
	2633, 2634, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2694, 0, 2706, 2708, 2713, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1251, 0, 1251, 0, 1251, 0, 1823, 1823, 0,
	0, 1823, 3307, 3307, 1823, 0, 0, 0, 1823, 0,
	0, 1251, 1251, 0, 0, 1823, 0, 0, 0, 0,
	0, 0, 1251, 0, 0, 0, 0, 0, 1823, 0,
	0, 0, 0, 0, 1251, 0, 1251, 1251, 1251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 1823, 1823, 1823, 1823, 0, 0, 0, 0,
	0, 1823, 0, 1823, 0, 0, 3307, 3307, 3307, 3307,
	3307, 3307, 3307, 3307, 3307, 3307, 3307, 3307, 3307, 3307,
	3307, 3307, 3307, 3307, 3307, 3307, 0, 0, 0, 3307,
	0, 0, 1823, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 0, 2019, 2019, 1251, 0, 0, 0, 0,
	0, 0, 1823, 0, 0, 0, 0, 0, 1070, 0,
	1070, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1787, 1788, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1818, 1251, 0,
	0, 0, 0, 0, 1790, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3008, 3009,
	1843, 3011, 0, 0, 0, 0, 0, 0, 0, 1789,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1809,
	0, 1823, 0, 0, 0, 0, 0, 0, 1806, 0,
	0, 1251, 0, 0, 0, 0, 0, 0, 1251, 0,
	0, 0, 0, 0, 0, 0, 736, 1251, 0, 0,
	0, 0, 1050, 0, 0, 1050, 1050, 0, 0, 0,
	0, 0, 0, 0, 1251, 0, 719, 0, 0, 1823,
	1823, 720, 0, 0, 1823, 1823, 0, 0, 1823, 1823,
	0, 0, 3194, 1823, 0, 0, 0, 1823, 0, 0,
	0, 0, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 1813, 1814, 1815, 2702, 0, 0,
	721, 2521, 0, 1795, 0, 0, 0, 0, 0, 0,
	0, 722, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1070, 0, 0, 0, 3140, 0, 0, 0, 0,
	0, 1863, 723, 0, 0, 1863, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 1819, 2702, 742, 1251, 1251, 0, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 724, 0, 0, 1804, 1805, 0,
	0, 0, 0, 719, 0, 0, 0, 0, 720, 0,
	0, 0, 0, 1844, 1845, 0, 0, 725, 0, 1251,
	0, 0, 0, 0, 0, 0, 0, 0, 1234, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 726,
	0, 0, 727, 0, 1959, 0, 0, 721, 0, 0,
	0, 0, 0, 2019, 0, 0, 0, 0, 722, 751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3195,
	3196, 0, 0, 0, 0, 3202, 0, 0, 0, 723,
	0, 0, 109, 0, 741, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3216, 3217, 1251, 0, 0, 0,
	2583, 742, 0, 1840, 0, 0, 0, 0, 0, 0,
	0, 0, 1251, 0, 0, 0, 0, 0, 0, 0,
	0, 724, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1823,
	1823, 1823, 0, 738, 725, 3226, 0, 0, 0, 0,
	1823, 1823, 3307, 2702, 0, 0, 0, 0, 1816, 1823,
	1251, 3240, 1823, 0, 0, 0, 726, 0, 0, 727,
	0, 0, 0, 0, 0, 0, 0, 0, 3252, 0,
	0, 1811, 0, 0, 0, 0, 751, 0, 0, 0,
	0, 1251, 3307, 2702, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1251, 0, 1251, 0, 1823,
	0, 741, 748, 0, 729, 0, 0, 1823, 2702, 0,
	0, 0, 1251, 0, 0, 1823, 0, 0, 0, 0,
	0, 0, 0, 0, 1823, 0, 0, 0, 0, 1842,
	0, 0, 0, 749, 0, 730, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	738, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2713, 2713, 2713, 0, 0, 750, 0, 0, 0, 0,
	0, 0, 0, 731, 0, 1936, 0, 0, 746, 747,
	744, 0, 0, 3345, 0, 0, 739, 0, 0, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 109, 0, 109, 1807, 1803, 0, 1800, 1798,
	1799, 1791, 1792, 1793, 1794, 1796, 1797, 0, 0, 3307,
	0, 729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 733, 0, 740, 0, 0, 0, 0, 0, 0,
	1823, 3307, 734, 0, 1823, 0, 0, 0, 109, 0,
	749, 109, 730, 0, 0, 0, 735, 109, 0, 0,
	0, 743, 0, 3307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 752, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 737, 0, 1075, 0,
	0, 0, 750, 0, 0, 0, 0, 0, 0, 0,
	731, 1823, 1075, 0, 0, 746, 747, 744, 0, 0,
	0, 0, 0, 739, 0, 0, 732, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 3466, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1124, 0, 0, 0, 0, 0, 0, 0, 733, 0,
	740, 0, 0, 0, 0, 0, 0, 0, 0, 734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 735, 0, 0, 0, 0, 743, 0,
	0, 0, 0, 0, 0, 0, 267, 267, 267, 0,
	0, 0, 752, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 737, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 0, 0, 819, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1823, 0, 0, 0, 0,
	0, 819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2521, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1863, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1251, 1251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1251, 0, 0,
	1251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2019, 0, 0, 0, 1251, 0, 0, 0, 0,
	1823, 0, 0, 0, 1823, 0, 0, 0, 0, 1247,
	0, 1251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1251, 2453, 0,
	0, 0, 2019, 0, 3700, 3701, 0, 0, 3704, 0,
	0, 0, 3707, 0, 0, 0, 0, 0, 0, 0,
	0, 3711, 0, 0, 0, 0, 0, 0, 0, 0,
	3718, 0, 0, 0, 0, 3345, 1251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1234, 0,
	3731, 0, 0, 0, 0, 0, 0, 0, 1251, 0,
	1251, 0, 0, 0, 1234, 0, 0, 0, 0, 0,
	3754, 3755, 0, 3756, 3757, 3758, 0, 0, 0, 0,
	0, 0, 1251, 0, 0, 0, 0, 0, 0, 0,
	0, 3764, 0, 1251, 0, 3766, 0, 1251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1251, 0, 0, 0, 0, 0, 3795, 3796,
	0, 0, 0, 0, 0, 0, 1251, 0, 1251, 0,
	0, 0, 1251, 0, 0, 0, 3807, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1251, 3816, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 109, 0, 109, 109, 109, 1251, 1251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3864, 0, 1251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3875,
	0, 0, 109, 109, 0, 109, 109, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1251, 0, 0,
	1251, 0, 0, 3904, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1787, 1788, 0, 1820, 1821, 1822, 1831, 1832, 1833,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1824, 1818, 0, 0, 0, 0, 0,
	0, 1790, 0, 0, 0, 0, 0, 2019, 0, 0,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1251, 1843, 0, 0,
	0, 0, 0, 0, 0, 0, 1789, 0, 0, 1234,
	0, 0, 1070, 1251, 0, 0, 1809, 0, 0, 0,
	0, 0, 0, 2019, 2019, 1806, 109, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2019, 2019, 1936, 0, 0, 0, 0, 0,
	0, 0, 0, 4014, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	267, 267, 0, 0, 267, 2019, 0, 263, 263, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 1813, 1814, 1815, 0, 0, 0, 0, 0, 0,
	1795, 0, 1251, 1251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 267, 267, 0, 0, 267, 267, 0,
	0, 0, 0, 4062, 4063, 0, 1251, 0, 1828, 4067,
	4068, 1838, 0, 0, 4071, 4072, 819, 0, 1817, 1819,
	0, 0, 4076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4080, 0, 1834, 0, 1835, 0, 0,
	0, 0, 0, 0, 1804, 1805, 0, 0, 0, 4085,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1826, 0, 0, 267, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1825,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	1840, 0, 0, 0, 0, 0, 0, 0, 0, 1234,
	1234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1251, 0, 0, 0, 0, 1251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2019, 0, 0, 1816, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1811, 0,
	0, 0, 0, 1251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1251, 0, 0,
	0, 0, 0, 0, 0, 1829, 0, 0, 1251, 1251,
	1251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1251, 1251, 1251, 0, 0,
	0, 0, 0, 0, 0, 0, 1842, 0, 0, 0,
	0, 0, 0, 1251, 0, 0, 0, 0, 0, 1251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2019, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 0,
	0, 0, 0, 0, 0, 4322, 4323, 4324, 1801, 1802,
	1808, 1830, 1807, 1803, 0, 1800, 1798, 1799, 1791, 1792,
	1793, 1794, 1796, 1797, 0, 0, 3218, 0, 2453, 0,
	0, 4333, 4334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 4342,
	4345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1234, 1251, 1958, 0, 1247, 0,
	0, 0, 267, 1251, 0, 0, 0, 1251, 0, 1251,
	0, 0, 0, 0, 0, 0, 1251, 0, 267, 1958,
	267, 0, 0, 0, 0, 0, 819, 1251, 1251, 0,
	4392, 0, 0, 819, 0, 0, 0, 1251, 0, 4400,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4408, 0, 0, 1075, 0, 0, 0,
	267, 0, 1251, 0, 1251, 0, 0, 267, 0, 0,
	4417, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1251, 0, 1251,
	0, 0, 1251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1251, 1251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1251, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 1234, 1251, 0, 0, 0, 0, 1251, 0,
	1234, 0, 0, 0, 0, 0, 0, 0, 0, 1298,
	0, 1298, 1298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1251, 1251, 1251, 0, 0,
	0, 0, 0, 0, 0, 4543, 0, 0, 1251, 4547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1388, 0, 0, 0, 0, 0, 1494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1251, 0,
	267, 0, 0, 0, 819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2019,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1251,
	0, 1251, 0, 0, 0, 0, 1075, 1075, 0, 0,
	0, 0, 0, 0, 0, 0, 4604, 267, 0, 0,
	0, 267, 0, 0, 1251, 0, 0, 267, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 109, 0, 0,
	0, 0, 1621, 1622, 0, 0, 0, 0, 0, 267,
	109, 267, 0, 0, 0, 0, 0, 267, 0, 2019,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2453, 0, 0, 109, 0, 0, 0, 0, 0, 4345,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1251, 0, 0, 0, 0, 0, 267, 1251,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 1251,
	1251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 1075, 0, 0, 0, 0, 0, 0,
	0, 1137, 0, 0, 0, 819, 267, 0, 267, 0,
	267, 0, 267, 1734, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1251, 0, 0, 1251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1251, 1251, 269, 269, 269,
	0, 0, 0, 4725, 4725, 4725, 267, 267, 267, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 837,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 2019, 0, 0, 4748, 0, 0, 839,
	0, 0, 0, 0, 840, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 841, 1251, 858, 0, 0, 0, 0,
	0, 0, 0, 4725, 0, 0, 0, 0, 0, 1251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	842, 0, 0, 0, 0, 843, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 867, 0, 0,
	0, 0, 0, 844, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 865, 0, 0,
	0, 0, 0, 0, 0, 0, 1251, 0, 0, 1251,
	0, 0, 0, 1251, 2521, 0, 0, 0, 0, 0,
	838, 0, 0, 1251, 1251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1251, 0, 845, 0, 0, 846, 0, 0, 0, 0,
	0, 0, 0, 1974, 0, 0, 1247, 869, 0, 0,
	0, 0, 751, 0, 4725, 4883, 0, 0, 0, 1985,
	0, 1494, 1247, 4887, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 1298, 0, 0, 0, 0, 0, 0, 1494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 863, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 267, 0,
	0, 267, 0, 0, 0, 267, 0, 267, 0, 0,
	0, 0, 0, 0, 267, 267, 0, 0, 0, 0,
	109, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 850, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 859, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 750, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 836, 0, 860, 0, 0, 0, 0, 0, 0,
	267, 0, 851, 1251, 0, 1251, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 857, 0, 0,
	0, 0, 0, 819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 852, 0, 0, 0, 853, 872,
	0, 871, 0, 0, 0, 854, 0, 0, 0, 0,
	0, 267, 0, 819, 0, 0, 0, 0, 2254, 855,
	267, 0, 2261, 0, 864, 0, 0, 0, 0, 0,
	873, 0, 870, 0, 2274, 0, 0, 0, 752, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2286, 0, 2286, 0, 0, 0, 0, 0, 2293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 267, 0, 0, 0, 0, 2261,
	0, 0, 2320, 0, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2356, 0, 2358,
	0, 2360, 0, 2362, 0, 2363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 267, 267, 267, 0,
	0, 0, 0, 0, 267, 0, 0, 267, 0, 269,
	0, 269, 269, 0, 0, 269, 0, 1335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2390, 2391, 2392,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 1335, 269, 269, 0, 1335, 269, 269,
	0, 0, 0, 0, 1335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1335, 0, 269, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1335, 0, 0, 0, 0, 0,
	0, 1335, 269, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1335, 0, 0, 1787, 1788, 0, 1820, 1821, 1822,
	1831, 1832, 1833, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1824, 1818, 0, 0,
	0, 0, 0, 269, 1790, 0, 0, 2770, 0, 0,
	0, 0, 0, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	1843, 0, 0, 0, 0, 0, 0, 0, 0, 1789,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1809,
	0, 0, 0, 0, 0, 0, 1247, 0, 1806, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2818,
	0, 0, 1298, 0, 0, 0, 1298, 0, 1298, 0,
	0, 0, 1958, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 1813, 1814, 1815, 0, 0, 0,
	0, 0, 0, 1795, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 267, 267, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 0, 1838, 0, 0, 267, 0, 0,
	0, 1817, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1834, 0,
	1835, 0, 0, 0, 0, 0, 0, 1804, 1805, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 267,
	0, 1494, 267, 811, 0, 1826, 0, 0, 0, 1958,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 269, 267, 0, 0, 0, 0, 811,
	0, 0, 0, 0, 1335, 0, 0, 0, 0, 269,
	269, 269, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 2261, 0, 1836, 0, 0, 0, 0, 0,
	0, 2274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 1825, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 1840, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 819, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 3112, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 1335, 0, 0, 0, 0, 0,
	0, 0, 0, 3123, 0, 3126, 0, 267, 1816, 0,
	0, 0, 0, 0, 0, 0, 0, 1247, 0, 0,
	0, 1335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 0, 3156, 1494, 3158, 1494,
	0, 0, 0, 0, 0, 3164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1842,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1298,
	0, 0, 0, 0, 267, 0, 267, 3192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 267, 1335, 1335, 269, 0, 0, 0, 0,
	0, 1827, 0, 1335, 0, 0, 0, 0, 0, 0,
	0, 1801, 1802, 1808, 1830, 1807, 1803, 0, 1800, 1798,
	1799, 1791, 1792, 1793, 1794, 1796, 1797, 0, 0, 0,
	0, 2579, 0, 0, 0, 2580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 269, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 1335, 0, 1335,
	0, 1335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1129, 0, 0, 0, 0, 1335, 1335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1335, 269,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	1335, 0, 1335, 1335, 1335, 0, 0, 1247, 1247, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 269, 0, 269,
	0, 269, 0, 269, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 269, 269,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1298, 0, 0, 0, 1494, 1494, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 3435, 0,
	0, 0, 0, 0, 1335, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 1333, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 267, 0, 3485,
	3487, 0, 267, 2274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1394, 0, 1247, 0, 1394, 0, 0, 0, 0, 0,
	0, 1333, 0, 0, 1335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	1335, 0, 0, 0, 0, 1333, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1333, 0, 0, 0, 0, 0, 0, 1333, 0,
	0, 0, 0, 3583, 269, 0, 0, 3587, 0, 0,
	0, 0, 1333, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 269, 0, 0, 0, 269, 0, 269, 0,
	0, 0, 0, 0, 0, 269, 269, 0, 0, 0,
	0, 1335, 1335, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1333, 0,
	0, 3640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1335, 0, 0, 0, 0,
	1247, 0, 0, 0, 0, 0, 0, 0, 1247, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 1958, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 3685, 0, 1494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1958, 0, 1958,
	0, 269, 1335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3698, 0, 0, 0, 0, 1335, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 267, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 269, 0, 269, 0, 1335, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 1335, 0, 1335, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 269, 0, 0, 0, 1335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 269, 0, 0, 1958, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1394, 0, 0, 0, 0, 269, 269, 269, 269,
	0, 0, 0, 0, 811, 269, 0, 0, 269, 0,
	0, 811, 0, 0, 1395, 0, 0, 0, 1395, 0,
	0, 0, 0, 0, 0, 1334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1334, 0, 0, 0, 0,
	0, 1333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1334, 0, 0, 0, 0,
	0, 0, 1334, 0, 0, 0, 0, 0, 1394, 0,
	0, 0, 0, 0, 0, 0, 1334, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1334, 2274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3978, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2274, 0,
	1958, 1958, 0, 3996, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1333, 1333, 0, 0, 0, 0, 0, 0, 0, 0,
	1394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4047, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1958,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1958, 0, 0, 0, 1335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1335, 0, 0, 1333, 0, 1333, 0, 1333, 0,
	0, 0, 0, 0, 0, 0, 1335, 0, 0, 0,
	0, 0, 0, 0, 1333, 1333, 0, 0, 0, 0,
	0, 1958, 0, 267, 1958, 1333, 0, 0, 0, 0,
	0, 1335, 0, 0, 0, 0, 0, 1333, 0, 1333,
	1333, 1333, 0, 0, 0, 0, 0, 1335, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 269, 269, 0,
	0, 0, 0, 811, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 1335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1395, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	269, 0, 1335, 269, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4189, 0, 0, 0, 1335, 269, 1335, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 2274, 0, 1394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1335,
	0, 0, 0, 1335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1334, 0, 0, 1335, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 1335, 0, 1335, 0, 0, 0, 1335, 267,
	2274, 0, 1395, 0, 0, 269, 0, 0, 0, 0,
	4277, 0, 0, 269, 0, 0, 1335, 269, 0, 0,
	0, 1394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1335, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1335, 1335, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 1958, 0,
	1958, 1394, 0, 0, 0, 0, 0, 0, 1335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1334, 1334, 0, 0, 0, 0,
	0, 0, 0, 1335, 1395, 269, 1335, 269, 0, 1787,
	1788, 0, 1820, 1821, 1822, 1831, 1832, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4377, 1824, 1818, 0, 0, 0, 0, 0, 0, 1790,
	0, 0, 0, 269, 0, 0, 0, 0, 1837, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 0, 0, 0, 0,
	0, 0, 0, 0, 1789, 0, 0, 0, 1333, 1333,
	0, 0, 1335, 0, 1809, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 2274, 0, 1334, 1335,
	1334, 0, 1334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1334, 1334,
	0, 0, 1394, 0, 0, 0, 0, 0, 0, 1334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1334, 0, 1334, 1334, 1334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1812, 1813,
	1814, 1815, 0, 0, 0, 0, 0, 0, 1795, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4512,
	1494, 0, 0, 0, 0, 0, 0, 0, 0, 1394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1333, 1828, 0, 0, 1838,
	0, 0, 0, 0, 0, 0, 1817, 1819, 0, 0,
	0, 0, 1335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1834, 0, 1835, 0, 0, 0, 0,
	0, 0, 1804, 1805, 0, 0, 0, 0, 0, 0,
	0, 811, 0, 1333, 0, 0, 0, 0, 0, 0,
	1826, 0, 1395, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 1333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1333, 0,
	1333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1333, 0, 0, 0, 1836,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4609, 0, 0, 1825, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 0,
	0, 0, 0, 0, 0, 1395, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1335,
	0, 0, 0, 0, 1335, 269, 0, 0, 0, 0,
	0, 0, 0, 1816, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 1395, 1811, 4663, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 1335,
	0, 1395, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4702, 1335, 1335, 1335, 0, 0, 0,
	0, 0, 0, 0, 1842, 0, 0, 0, 0, 0,
	0, 1335, 1335, 1335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1335,
	0, 0, 0, 269, 0, 1335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1335, 0, 0, 0, 0, 0, 0, 0, 0,
	4768, 0, 1334, 1334, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 1802, 1808, 1830,
	1807, 1803, 0, 1800, 1798, 1799, 1791, 1792, 1793, 1794,
	1796, 1797, 0, 0, 0, 0, 0, 0, 0, 0,
	4090, 0, 0, 0, 0, 0, 1395, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1787, 1788, 0, 1820,
	1821, 1822, 1831, 1832, 1833, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1824, 1818,
	0, 0, 0, 1335, 0, 1335, 1790, 0, 0, 0,
	0, 0, 0, 1395, 0, 1837, 0, 0, 0, 0,
	0, 0, 0, 1335, 1335, 0, 0, 0, 0, 1334,
	0, 0, 1843, 1335, 0, 0, 0, 0, 0, 0,
	0, 1789, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1809, 0, 0, 0, 1394, 0, 0, 0, 0,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1334, 0, 0,
	269, 0, 0, 1335, 0, 0, 0, 0, 1394, 0,
	0, 0, 0, 1335, 0, 1335, 269, 0, 1335, 269,
	0, 0, 0, 1394, 0, 0, 0, 0, 1334, 1335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 1334, 0, 1334, 0, 0, 0, 1394, 0,
	0, 0, 0, 0, 0, 1812, 1813, 1814, 1815, 1334,
	0, 0, 0, 0, 1333, 1795, 0, 1335, 1335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1335, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 1335,
	269, 0, 0, 1828, 1335, 0, 1838, 0, 0, 0,
	1333, 0, 0, 1817, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1834, 0, 1835, 0, 0, 0, 0, 0, 0, 1804,
	1805, 1335, 1335, 1335, 0, 0, 0, 0, 0, 1333,
	0, 0, 0, 0, 1335, 0, 0, 1826, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1333, 1810, 1333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1333, 0, 0, 0,
	1333, 0, 0, 0, 0, 0, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 1335, 0, 1335, 0, 0,
	0, 0, 0, 0, 1825, 1333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1840, 0, 0, 0, 1333,
	1335, 1333, 0, 0, 0, 1394, 0, 0, 0, 0,
	269, 0, 811, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1816, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1335, 0,
	0, 0, 0, 1811, 0, 1335, 269, 0, 0, 0,
	1333, 1333, 0, 0, 0, 1335, 1335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 1333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1335, 1842, 0, 1335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1394, 0, 0, 1394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1827, 0, 0, 0, 0, 0, 1395,
	0, 0, 0, 1801, 1802, 1808, 1830, 1807, 1803, 0,
	1800, 1798, 1799, 1791, 1792, 1793, 1794, 1796, 1797, 1394,
	0, 0, 0, 0, 0, 0, 0, 3716, 0, 0,
	0, 0, 1395, 0, 0, 0, 1394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1395, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 1395, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 1335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1335,
	1335, 0, 0, 0, 1334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1787, 1788, 0,
	1820, 1821, 1822, 1831, 1832, 1833, 0, 0, 0, 1394,
	0, 0, 0, 1334, 0, 0, 0, 0, 0, 1824,
	1818, 0, 0, 0, 0, 0, 0, 1790, 0, 0,
	0, 0, 0, 0, 0, 1334, 1837, 1334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 1843, 0, 0, 0, 0, 0, 1395,
	0, 0, 1789, 0, 0, 0, 0, 0, 0, 0,
	1334, 0, 1809, 0, 1334, 0, 0, 0, 0, 0,
	0, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 1334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1334, 0, 1334, 0, 0, 0, 1395,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1334, 0, 0, 0, 1812, 1813, 1814, 1815,
	0, 0, 0, 0, 0, 0, 1795, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 1333, 0, 0, 0,
	0, 1333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1334, 1334, 0, 0, 0, 0,
	0, 0, 0, 0, 1828, 0, 0, 1838, 0, 0,
	0, 0, 0, 0, 1817, 1819, 0, 0, 0, 1334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1834, 0, 1835, 0, 0, 1333, 0, 0, 0,
	1804, 1805, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1826, 0,
	0, 1333, 1333, 1333, 1395, 0, 0, 1395, 0, 0,
	0, 0, 0, 1810, 0, 0, 0, 0, 1333, 1333,
	1333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1333, 0, 0, 0,
	0, 0, 1394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1836, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1394, 0,
	0, 0, 0, 0, 0, 1825, 0, 0, 0, 0,
	0, 0, 0, 1395, 0, 0, 1840, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1395, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1816, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1811, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1394, 1829, 1394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1333, 1333, 0, 0, 0, 0, 0, 0, 0, 0,
	1394, 0, 1842, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1395, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1394, 0, 1333, 0, 0, 1333, 0, 0, 0, 0,
	0, 0, 0, 0, 1827, 0, 1394, 0, 0, 0,
	0, 0, 0, 0, 1801, 1802, 1808, 1830, 1807, 1803,
	0, 1800, 1798, 1799, 1791, 1792, 1793, 1794, 1796, 1797,
	0, 0, 0, 0, 0, 0, 0, 0, 3264, 0,
	0, 0, 0, 0, 1333, 1333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1394, 0, 0, 0,
	0, 1333, 0, 1787, 1788, 0, 1820, 1821, 1822, 1831,
	1832, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1824, 1818, 0, 0, 0,
	1334, 0, 0, 1790, 0, 1334, 0, 0, 1333, 1333,
	1333, 0, 1837, 0, 0, 0, 0, 0, 0, 0,
	0, 1394, 0, 0, 0, 0, 0, 0, 0, 1843,
	0, 0, 0, 0, 0, 0, 0, 0, 1789, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1809, 0,
	0, 1394, 0, 0, 0, 0, 0, 1806, 0, 0,
	1334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1334, 1334, 1334, 0, 0,
	0, 0, 1394, 0, 1333, 0, 0, 0, 0, 0,
	0, 0, 1334, 1334, 1334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1394, 0, 0,
	1334, 0, 0, 0, 0, 0, 1395, 0, 0, 0,
	0, 0, 1812, 1813, 1814, 1815, 0, 0, 0, 0,
	0, 0, 1795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1395, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1787, 1788, 0, 1820, 1821, 1822, 1831, 1832, 1833,
	1828, 0, 0, 1838, 0, 1394, 0, 0, 0, 0,
	1817, 1819, 1333, 1824, 1818, 0, 0, 0, 0, 0,
	0, 1790, 1333, 1333, 0, 0, 0, 1834, 0, 1835,
	1837, 0, 0, 0, 0, 0, 1804, 1805, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 0, 0,
	0, 0, 0, 0, 1826, 0, 1789, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1809, 1394, 0, 1810,
	1333, 0, 0, 0, 0, 1806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1395, 0, 1395, 0, 0, 953,
	0, 1002, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1836, 1334, 1334, 0, 0, 0, 0,
	0, 0, 0, 0, 1395, 961, 0, 0, 0, 0,
	0, 1825, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 976, 1840, 959, 958, 0, 0, 0, 0, 0,
	1812, 1813, 1814, 1815, 0, 0, 0, 0, 0, 0,
	1795, 0, 0, 0, 0, 978, 0, 0, 0, 0,
	0, 960, 0, 0, 1334, 0, 963, 0, 0, 0,
	0, 1011, 0, 0, 1395, 0, 1334, 0, 0, 1334,
	973, 974, 0, 0, 0, 0, 0, 1816, 1828, 991,
	1395, 1838, 0, 0, 0, 0, 0, 0, 1817, 1819,
	0, 0, 0, 0, 0, 0, 0, 1003, 965, 0,
	1811, 0, 0, 966, 0, 1834, 0, 1835, 0, 0,
	0, 0, 0, 0, 1804, 1805, 0, 0, 1334, 1334,
	0, 0, 0, 0, 0, 967, 0, 1829, 0, 0,
	0, 0, 1826, 0, 1000, 0, 0, 0, 1334, 0,
	0, 0, 0, 0, 0, 0, 1333, 1810, 0, 0,
	1395, 0, 0, 0, 0, 1334, 1333, 1333, 1842, 0,
	0, 0, 0, 0, 1001, 0, 0, 0, 0, 0,
	0, 0, 0, 1333, 0, 0, 0, 0, 0, 0,
	969, 0, 0, 0, 0, 0, 0, 0, 957, 0,
	0, 1836, 1334, 1334, 1334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1395, 0, 970, 971, 1825,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1840, 0, 0, 0, 0, 0, 979, 977, 0, 0,
	1827, 0, 0, 0, 972, 1395, 0, 0, 988, 0,
	1801, 1802, 1808, 1830, 1807, 1803, 0, 1800, 1798, 1799,
	1791, 1792, 1793, 1794, 1796, 1797, 1008, 999, 0, 0,
	0, 0, 0, 0, 3263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1816, 1395, 0, 1334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1004, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1811, 0,
	0, 1395, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 964, 0, 0, 1010, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1842, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 962, 0, 1395,
	0, 995, 996, 0, 0, 0, 1334, 0, 0, 0,
	0, 0, 0, 0, 0, 998, 1334, 1334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1005, 993,
	0, 0, 0, 0, 0, 0, 0, 1009, 989, 0,
	0, 982, 980, 0, 985, 0, 0, 0, 1827, 0,
	986, 1395, 0, 955, 1334, 1006, 0, 0, 1801, 1802,
	1808, 1830, 1807, 1803, 0, 1800, 1798, 1799, 1791, 1792,
	1793, 1794, 1796, 1797, 0, 0, 0, 956, 0, 0,
	0, 0, 3260, 0, 0, 0, 0, 0, 0, 997,
	0, 987, 0, 0, 0, 0, 0, 984, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1007, 0,
	0, 0, 0, 0, 0, 0, 990, 0, 0, 0,
	0, 0, 0, 0, 0, 968, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 992,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 994, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1392, 0, 0,
	1334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1334, 1334, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 1397, 284, 285, 1398, 1399, 1400, 1334, 1401, 632,
	1402, 1403, 1404, 1405, 286, 287, 1191, 288, 289, 290,
	291, 292, 293, 633, 634, 0, 294, 635, 295, 636,
	1406, 637, 296, 297, 298, 299, 300, 301, 1407, 1408,
	0, 302, 638, 639, 640, 1409, 303, 304, 641, 1410,
	1336, 1411, 305, 306, 307, 308, 309, 310, 311, 0,
	1412, 313, 314, 315, 312, 316, 1413, 317, 0, 318,
	319, 320, 321, 322, 323, 1414, 324, 325, 326, 1192,
	327, 328, 329, 1415, 1416, 1418, 1417, 1419, 1420, 1421,
	330, 331, 332, 333, 334, 0, 335, 642, 643, 1422,
	339, 336, 337, 1423, 340, 338, 341, 1424, 342, 343,
	344, 1425, 1426, 345, 346, 347, 1427, 348, 349, 1428,
	350, 351, 352, 1429, 353, 354, 644, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 645, 646, 366,
	1430, 274, 1431, 0, 0, 0, 0, 367, 368, 369,
	647, 0, 0, 0, 370, 1432, 371, 372, 1433, 1434,
	1193, 373, 374, 375, 648, 649, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 1435, 385, 650, 1436, 651,
	386, 1437, 387, 388, 389, 390, 391, 652, 653, 654,
	471, 1195, 392, 393, 1438, 394, 395, 396, 397, 398,
	0, 0, 0, 275, 399, 400, 401, 403, 1439, 1194,
	402, 655, 656, 1440, 657, 1441, 404, 405, 1196, 658,
	1197, 406, 407, 408, 1198, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 1442, 416, 418, 417, 1443,
	419, 659, 1199, 420, 421, 1200, 1444, 422, 0, 0,
	0, 423, 424, 427, 1445, 1446, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 1201, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 1202,
	467, 456, 1447, 276, 1203, 468, 469, 1448, 660, 470,
	661, 472, 473, 1449, 0, 474, 0, 1450, 1451, 476,
	477, 478, 1452, 1453, 479, 480, 662, 1204, 481, 1205,
	663, 482, 483, 475, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 1454, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 666, 501, 667, 502, 503, 1455,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	668, 513, 514, 516, 515, 517, 1456, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 1457,
	533, 534, 535, 1206, 536, 537, 538, 539, 540, 669,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 1458, 558, 559, 557, 560, 561,
	562, 1459, 563, 564, 546, 547, 565, 566, 1207, 567,
	568, 569, 570, 571, 572, 573, 670, 0, 574, 1460,
	575, 576, 577, 579, 548, 580, 585, 586, 671, 581,
	582, 583, 584, 672, 588, 589, 1461, 590, 591, 0,
	587, 578, 1462, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 1463, 600, 673, 674, 675, 676, 1464, 609,
	1465, 601, 602, 603, 677, 604, 678, 1466, 605, 606,
	607, 608, 0, 610, 611, 1467, 1468, 612, 613, 614,
	616, 617, 615, 618, 1469, 619, 1470, 0, 620, 621,
	622, 679, 680, 681, 1471, 624, 623, 625, 682, 1472,
	626, 1473, 1474, 1475, 1476, 627, 628, 683, 629, 630,
	631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1392, 0, 0, 0, 0, 0, 0, 0, 2748, 0,
	0, 0, 0, 0, 0, 0, 2749, 277, 279, 278,
	280, 281, 282, 283, 1397, 284, 285, 1398, 1399, 1400,
	0, 1401, 632, 1402, 1403, 1404, 1405, 286, 287, 1191,
	288, 289, 290, 291, 292, 293, 633, 634, 0, 294,
	635, 295, 636, 1406, 637, 296, 297, 298, 299, 300,
	301, 1407, 1408, 0, 302, 638, 639, 640, 1409, 303,
	304, 641, 1410, 1336, 1411, 305, 306, 307, 308, 309,
	310, 311, 0, 1412, 313, 314, 315, 312, 316, 1413,
	317, 0, 318, 319, 320, 321, 322, 323, 1414, 324,
	325, 326, 1192, 327, 328, 329, 1415, 1416, 1418, 1417,
	1419, 1420, 1421, 330, 331, 332, 333, 334, 0, 335,
	642, 643, 1422, 339, 336, 337, 1423, 340, 338, 341,
	1424, 342, 343, 344, 1425, 1426, 345, 346, 347, 1427,
	348, 349, 1428, 350, 351, 352, 1429, 353, 354, 644,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	645, 646, 366, 1430, 274, 1431, 0, 0, 0, 0,
	367, 368, 369, 647, 0, 0, 0, 370, 1432, 371,
	372, 1433, 1434, 1193, 373, 374, 375, 648, 649, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 1435, 385,
	650, 1436, 651, 386, 1437, 387, 388, 389, 390, 391,
	652, 653, 654, 471, 1195, 392, 393, 1438, 394, 395,
	396, 397, 398, 0, 0, 0, 275, 399, 400, 401,
	403, 1439, 1194, 402, 655, 656, 1440, 657, 1441, 404,
	405, 1196, 658, 1197, 406, 407, 408, 1198, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 1442, 416,
	418, 417, 1443, 419, 659, 1199, 420, 421, 1200, 1444,
	422, 0, 0, 0, 423, 424, 427, 1445, 1446, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 1201, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 1202, 467, 456, 1447, 276, 1203, 468, 469,
	1448, 660, 470, 661, 472, 473, 1449, 0, 474, 0,
	1450, 1451, 476, 477, 478, 1452, 1453, 479, 480, 662,
	1204, 481, 1205, 663, 482, 483, 475, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 1454, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 666, 501, 667,
	502, 503, 1455, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 668, 513, 514, 516, 515, 517, 1456,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 1457, 533, 534, 535, 1206, 536, 537, 538,
	539, 540, 669, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 1458, 558, 559,
	557, 560, 561, 562, 1459, 563, 564, 546, 547, 565,
	566, 1207, 567, 568, 569, 570, 571, 572, 573, 670,
	0, 574, 1460, 575, 576, 577, 579, 548, 580, 585,
	586, 671, 581, 582, 583, 584, 672, 588, 589, 1461,
	590, 591, 0, 587, 578, 1462, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 1463, 600, 673, 674, 675,
	676, 1464, 609, 1465, 601, 602, 603, 677, 604, 678,
	1466, 605, 606, 607, 608, 0, 610, 611, 1467, 1468,
	612, 613, 614, 616, 617, 615, 618, 1469, 619, 1470,
	0, 620, 621, 622, 679, 680, 681, 1471, 624, 623,
	625, 682, 1472, 626, 1473, 1474, 1475, 1476, 627, 628,
	683, 629, 630, 631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1392, 0, 0, 0, 0, 3725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3727, 277, 279,
	278, 280, 281, 282, 283, 1397, 284, 285, 1398, 1399,
	1400, 0, 1401, 632, 1402, 1403, 1404, 1405, 286, 287,
	1191, 288, 289, 290, 291, 292, 293, 633, 634, 0,
	294, 635, 295, 636, 1406, 637, 296, 297, 298, 299,
	300, 301, 1407, 1408, 0, 302, 638, 639, 640, 1409,
	303, 304, 641, 1410, 1336, 1411, 305, 306, 307, 308,
	309, 310, 311, 0, 1412, 313, 314, 315, 312, 316,
	1413, 317, 0, 318, 319, 320, 321, 322, 323, 1414,
	324, 325, 326, 1192, 327, 328, 329, 1415, 1416, 1418,
	1417, 1419, 1420, 1421, 330, 331, 332, 333, 334, 0,
	335, 642, 643, 1422, 339, 336, 337, 1423, 340, 338,
	341, 1424, 342, 343, 344, 1425, 1426, 345, 346, 347,
	1427, 348, 349, 1428, 350, 351, 352, 1429, 353, 354,
	644, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 645, 646, 366, 1430, 274, 1431, 0, 0, 0,
	0, 367, 368, 369, 647, 0, 0, 0, 370, 1432,
	371, 372, 1433, 1434, 1193, 373, 374, 375, 648, 649,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 1435,
	385, 650, 1436, 651, 386, 1437, 387, 388, 389, 390,
	391, 652, 653, 654, 471, 1195, 392, 393, 1438, 394,
	395, 396, 397, 398, 0, 0, 0, 275, 399, 400,
	401, 403, 1439, 1194, 402, 655, 656, 1440, 657, 1441,
	404, 405, 1196, 658, 1197, 406, 407, 408, 1198, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 1442,
	416, 418, 417, 1443, 419, 659, 1199, 420, 421, 1200,
	1444, 422, 0, 0, 0, 423, 424, 427, 1445, 1446,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 1201,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 1202, 467, 456, 1447, 276, 1203, 468,
	469, 1448, 660, 470, 661, 472, 473, 1449, 0, 474,
	0, 1450, 1451, 476, 477, 478, 1452, 1453, 479, 480,
	662, 1204, 481, 1205, 663, 482, 483, 475, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 1454, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 666, 501,
	667, 502, 503, 1455, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 668, 513, 514, 516, 515, 517,
	1456, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 1457, 533, 534, 535, 1206, 536, 537,
	538, 539, 540, 669, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 1458, 558,
	559, 557, 560, 561, 562, 1459, 563, 564, 546, 547,
	565, 566, 1207, 567, 568, 569, 570, 571, 572, 573,
	670, 0, 574, 1460, 575, 576, 577, 579, 548, 580,
	585, 586, 671, 581, 582, 583, 584, 672, 588, 589,
	1461, 590, 591, 0, 587, 578, 1462, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 1463, 600, 673, 674,
	675, 676, 1464, 609, 1465, 601, 602, 603, 677, 604,
	678, 1466, 605, 606, 607, 608, 0, 610, 611, 1467,
	1468, 612, 613, 614, 616, 617, 615, 618, 1469, 619,
	1470, 0, 620, 621, 622, 679, 680, 681, 1471, 624,
	623, 625, 682, 1472, 626, 1473, 1474, 1475, 1476, 627,
	628, 683, 629, 630, 631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1392, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4118, 277, 279, 278, 280, 281, 282, 283,
	1397, 284, 285, 1398, 1399, 1400, 0, 1401, 632, 1402,
	1403, 1404, 1405, 286, 287, 1191, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 1406,
	637, 296, 297, 298, 299, 300, 301, 1407, 1408, 0,
	302, 638, 639, 640, 1409, 303, 304, 641, 1410, 1336,
	1411, 305, 306, 307, 308, 309, 310, 311, 0, 1412,
	313, 314, 315, 312, 316, 1413, 317, 0, 318, 319,
	320, 321, 322, 323, 1414, 324, 325, 326, 1192, 327,
	328, 329, 1415, 1416, 1418, 1417, 1419, 1420, 1421, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 1422, 339,
	336, 337, 1423, 340, 338, 341, 1424, 342, 343, 344,
	1425, 1426, 345, 346, 347, 1427, 348, 349, 1428, 350,
	351, 352, 1429, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 1430,
	274, 1431, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 1432, 371, 372, 1433, 1434, 1193,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 1435, 385, 650, 1436, 651, 386,
	1437, 387, 388, 389, 390, 391, 652, 653, 654, 471,
	1195, 392, 393, 1438, 394, 395, 396, 397, 398, 0,
	0, 0, 275, 399, 400, 401, 403, 1439, 1194, 402,
	655, 656, 1440, 657, 1441, 404, 405, 1196, 658, 1197,
	406, 407, 408, 1198, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 1442, 416, 418, 417, 1443, 419,
	659, 1199, 420, 421, 1200, 1444, 422, 0, 0, 0,
	423, 424, 427, 1445, 1446, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 1201, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 1202, 467,
	456, 1447, 276, 1203, 468, 469, 1448, 660, 470, 661,
	472, 473, 1449, 0, 474, 0, 1450, 1451, 476, 477,
	478, 1452, 1453, 479, 480, 662, 1204, 481, 1205, 663,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 1454, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 1455, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 1456, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 1457, 533,
	534, 535, 1206, 536, 537, 538, 539, 540, 669, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 1458, 558, 559, 557, 560, 561, 562,
	1459, 563, 564, 546, 547, 565, 566, 1207, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 1460, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 1461, 590, 591, 0, 587,
	578, 1462, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 1463, 600, 673, 674, 675, 676, 1464, 609, 1465,
	601, 602, 603, 677, 604, 678, 1466, 605, 606, 607,
	608, 0, 610, 611, 1467, 1468, 612, 613, 614, 616,
	617, 615, 618, 1469, 619, 1470, 0, 620, 621, 622,
	679, 680, 681, 1471, 624, 623, 625, 682, 1472, 626,
	1473, 1474, 1475, 1476, 627, 628, 683, 629, 630, 631,
	0, 0, 0, 0, 0, 0, 1392, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4328, 277, 279, 278, 280, 281, 282, 283,
	1397, 284, 285, 1398, 1399, 1400, 0, 1401, 632, 1402,
	1403, 1404, 1405, 286, 287, 1191, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 1406,
	637, 296, 297, 298, 299, 300, 301, 1407, 1408, 0,
	302, 638, 639, 640, 1409, 303, 304, 641, 1410, 1336,
	1411, 305, 306, 307, 308, 309, 310, 311, 0, 1412,
	313, 314, 315, 312, 316, 1413, 317, 0, 318, 319,
	320, 321, 322, 323, 1414, 324, 325, 326, 1192, 327,
	328, 329, 1415, 1416, 1418, 1417, 1419, 1420, 1421, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 1422, 339,
	336, 337, 1423, 340, 338, 341, 1424, 342, 343, 344,
	1425, 1426, 345, 346, 347, 1427, 348, 349, 1428, 350,
	351, 352, 1429, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 1430,
	274, 1431, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 1432, 371, 372, 1433, 1434, 1193,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 1435, 385, 650, 1436, 651, 386,
	1437, 387, 388, 389, 390, 391, 652, 653, 654, 471,
	1195, 392, 393, 1438, 394, 395, 396, 397, 398, 0,
	0, 0, 275, 399, 400, 401, 403, 1439, 1194, 402,
	655, 656, 1440, 657, 1441, 404, 405, 1196, 658, 1197,
	406, 407, 408, 1198, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 1442, 416, 418, 417, 1443, 419,
	659, 1199, 420, 421, 1200, 1444, 422, 0, 0, 0,
	423, 424, 427, 1445, 1446, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 1201, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 1202, 467,
	456, 1447, 276, 1203, 468, 469, 1448, 660, 470, 661,
	472, 473, 1449, 0, 474, 0, 1450, 1451, 476, 477,
	478, 1452, 1453, 479, 480, 662, 1204, 481, 1205, 663,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 1454, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 1455, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 1456, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 1457, 533,
	534, 535, 1206, 536, 537, 538, 539, 540, 669, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 1458, 558, 559, 557, 560, 561, 562,
	1459, 563, 564, 546, 547, 565, 566, 1207, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 1460, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 1461, 590, 591, 0, 587,
	578, 1462, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 1463, 600, 673, 674, 675, 676, 1464, 609, 1465,
	601, 602, 603, 677, 604, 678, 1466, 605, 606, 607,
	608, 0, 610, 611, 1467, 1468, 612, 613, 614, 616,
	617, 615, 618, 1469, 619, 1470, 0, 620, 621, 622,
	679, 680, 681, 1471, 624, 623, 625, 682, 1472, 626,
	1473, 1474, 1475, 1476, 627, 628, 683, 629, 630, 631,
	0, 0, 0, 0, 0, 0, 1392, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4198, 277, 279, 278, 280, 281, 282, 283,
	1397, 284, 285, 1398, 1399, 1400, 0, 1401, 632, 1402,
	1403, 1404, 1405, 286, 287, 1191, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 1406,
	637, 296, 297, 298, 299, 300, 301, 1407, 1408, 0,
	302, 638, 639, 640, 1409, 303, 304, 641, 1410, 1336,
	1411, 305, 306, 307, 308, 309, 310, 311, 0, 1412,
	313, 314, 315, 312, 316, 1413, 317, 0, 318, 319,
	320, 321, 322, 323, 1414, 324, 325, 326, 1192, 327,
	328, 329, 1415, 1416, 1418, 1417, 1419, 1420, 1421, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 1422, 339,
	336, 337, 1423, 340, 338, 341, 1424, 342, 343, 344,
	1425, 1426, 345, 346, 347, 1427, 348, 349, 1428, 350,
	351, 352, 1429, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 1430,
	274, 1431, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 1432, 371, 372, 1433, 1434, 1193,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 1435, 385, 650, 1436, 651, 386,
	1437, 387, 388, 389, 390, 391, 652, 653, 654, 471,
	1195, 392, 393, 1438, 394, 395, 396, 397, 398, 0,
	0, 0, 275, 399, 400, 401, 403, 1439, 1194, 402,
	655, 656, 1440, 657, 1441, 404, 405, 1196, 658, 1197,
	406, 407, 408, 1198, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 1442, 416, 418, 417, 1443, 419,
	659, 1199, 420, 421, 1200, 1444, 422, 0, 0, 0,
	423, 424, 427, 1445, 1446, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 1201, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 1202, 467,
	456, 1447, 276, 1203, 468, 469, 1448, 660, 470, 661,
	472, 473, 1449, 0, 474, 0, 1450, 1451, 476, 477,
	478, 1452, 1453, 479, 480, 662, 1204, 481, 1205, 663,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 1454, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 1455, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 1456, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 1457, 533,
	534, 535, 1206, 536, 537, 538, 539, 540, 669, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 1458, 558, 559, 557, 560, 561, 562,
	1459, 563, 564, 546, 547, 565, 566, 1207, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 1460, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 1461, 590, 591, 0, 587,
	578, 1462, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 1463, 600, 673, 674, 675, 676, 1464, 609, 1465,
	601, 602, 603, 677, 604, 678, 1466, 605, 606, 607,
	608, 0, 610, 611, 1467, 1468, 612, 613, 614, 616,
	617, 615, 618, 1469, 619, 1470, 0, 620, 621, 622,
	679, 680, 681, 1471, 624, 623, 625, 682, 1472, 626,
	1473, 1474, 1475, 1476, 627, 628, 683, 629, 630, 631,
	0, 0, 0, 0, 0, 0, 1392, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4048, 277, 279, 278, 280, 281, 282, 283,
	1397, 284, 285, 1398, 1399, 1400, 0, 1401, 632, 1402,
	1403, 1404, 1405, 286, 287, 1191, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 1406,
	637, 296, 297, 298, 299, 300, 301, 1407, 1408, 0,
	302, 638, 639, 640, 1409, 303, 304, 641, 1410, 1336,
	1411, 305, 306, 307, 308, 309, 310, 311, 0, 1412,
	313, 314, 315, 312, 316, 1413, 317, 0, 318, 319,
	320, 321, 322, 323, 1414, 324, 325, 326, 1192, 327,
	328, 329, 1415, 1416, 1418, 1417, 1419, 1420, 1421, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 1422, 339,
	336, 337, 1423, 340, 338, 341, 1424, 342, 343, 344,
	1425, 1426, 345, 346, 347, 1427, 348, 349, 1428, 350,
	351, 352, 1429, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 1430,
	274, 1431, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 1432, 371, 372, 1433, 1434, 1193,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 1435, 385, 650, 1436, 651, 386,
	1437, 387, 388, 389, 390, 391, 652, 653, 654, 471,
	1195, 392, 393, 1438, 394, 395, 396, 397, 398, 0,
	0, 0, 275, 399, 400, 401, 403, 1439, 1194, 402,
	655, 656, 1440, 657, 1441, 404, 405, 1196, 658, 1197,
	406, 407, 408, 1198, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 1442, 416, 418, 417, 1443, 419,
	659, 1199, 420, 421, 1200, 1444, 422, 0, 0, 0,
	423, 424, 427, 1445, 1446, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 1201, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 1202, 467,
	456, 1447, 276, 1203, 468, 469, 1448, 660, 470, 661,
	472, 473, 1449, 0, 474, 0, 1450, 1451, 476, 477,
	478, 1452, 1453, 479, 480, 662, 1204, 481, 1205, 663,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 1454, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 1455, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 1456, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 1457, 533,
	534, 535, 1206, 536, 537, 538, 539, 540, 669, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 1458, 558, 559, 557, 560, 561, 562,
	1459, 563, 564, 546, 547, 565, 566, 1207, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 1460, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 1461, 590, 591, 0, 587,
	578, 1462, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 1463, 600, 673, 674, 675, 676, 1464, 609, 1465,
	601, 602, 603, 677, 604, 678, 1466, 605, 606, 607,
	608, 0, 610, 611, 1467, 1468, 612, 613, 614, 616,
	617, 615, 618, 1469, 619, 1470, 0, 620, 621, 622,
	679, 680, 681, 1471, 624, 623, 625, 682, 1472, 626,
	1473, 1474, 1475, 1476, 627, 628, 683, 629, 630, 631,
	0, 0, 0, 0, 0, 0, 1392, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3743, 277, 279, 278, 280, 281, 282, 283,
	1397, 284, 285, 1398, 1399, 1400, 0, 1401, 632, 1402,
	1403, 1404, 1405, 286, 287, 1191, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 1406,
	637, 296, 297, 298, 299, 300, 301, 1407, 1408, 0,
	302, 638, 639, 640, 1409, 303, 304, 641, 1410, 1336,
	1411, 305, 306, 307, 308, 309, 310, 311, 0, 1412,
	313, 314, 315, 312, 316, 1413, 317, 0, 318, 319,
	320, 321, 322, 323, 1414, 324, 325, 326, 1192, 327,
	328, 329, 1415, 1416, 1418, 1417, 1419, 1420, 1421, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 1422, 339,
	336, 337, 1423, 340, 338, 341, 1424, 342, 343, 344,
	1425, 1426, 345, 346, 347, 1427, 348, 349, 1428, 350,
	351, 352, 1429, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 1430,
	274, 1431, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 1432, 371, 372, 1433, 1434, 1193,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 1435, 385, 650, 1436, 651, 386,
	1437, 387, 388, 389, 390, 391, 652, 653, 654, 471,
	1195, 392, 393, 1438, 394, 395, 396, 397, 398, 0,
	0, 0, 275, 399, 400, 401, 403, 1439, 1194, 402,
	655, 656, 1440, 657, 1441, 404, 405, 1196, 658, 1197,
	406, 407, 408, 1198, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 1442, 416, 418, 417, 1443, 419,
	659, 1199, 420, 421, 1200, 1444, 422, 0, 0, 0,
	423, 424, 427, 1445, 1446, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 1201, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 1202, 467,
	456, 1447, 276, 1203, 468, 469, 1448, 660, 470, 661,
	472, 473, 1449, 0, 474, 0, 1450, 1451, 476, 477,
	478, 1452, 1453, 479, 480, 662, 1204, 481, 1205, 663,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 1454, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 1455, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 1456, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 1457, 533,
	534, 535, 1206, 536, 537, 538, 539, 540, 669, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 1458, 558, 559, 557, 560, 561, 562,
	1459, 563, 564, 546, 547, 565, 566, 1207, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 1460, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 1461, 590, 591, 0, 587,
	578, 1462, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 1463, 600, 673, 674, 675, 676, 1464, 609, 1465,
	601, 602, 603, 677, 604, 678, 1466, 605, 606, 607,
	608, 0, 610, 611, 1467, 1468, 612, 613, 614, 616,
	617, 615, 618, 1469, 619, 1470, 0, 620, 621, 622,
	679, 680, 681, 1471, 624, 623, 625, 682, 1472, 626,
	1473, 1474, 1475, 1476, 627, 628, 683, 629, 630, 631,
	0, 0, 0, 0, 0, 0, 1392, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3568, 277, 279, 278, 280, 281, 282, 283,
	1397, 284, 285, 1398, 1399, 1400, 0, 1401, 632, 1402,
	1403, 1404, 1405, 286, 287, 1191, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 1406,
	637, 296, 297, 298, 299, 300, 301, 1407, 1408, 0,
	302, 638, 639, 640, 1409, 303, 304, 641, 1410, 1336,
	1411, 305, 306, 307, 308, 309, 310, 311, 0, 1412,
	313, 314, 315, 312, 316, 1413, 317, 0, 318, 319,
	320, 321, 322, 323, 1414, 324, 325, 326, 1192, 327,
	328, 329, 1415, 1416, 1418, 1417, 1419, 1420, 1421, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 1422, 339,
	336, 337, 1423, 340, 338, 341, 1424, 342, 343, 344,
	1425, 1426, 345, 346, 347, 1427, 348, 349, 1428, 350,
	351, 352, 1429, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 1430,
	274, 1431, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 1432, 371, 372, 1433, 1434, 1193,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 1435, 385, 650, 1436, 651, 386,
	1437, 387, 388, 389, 390, 391, 652, 653, 654, 471,
	1195, 392, 393, 1438, 394, 395, 396, 397, 398, 0,
	0, 0, 275, 399, 400, 401, 403, 1439, 1194, 402,
	655, 656, 1440, 657, 1441, 404, 405, 1196, 658, 1197,
	406, 407, 408, 1198, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 1442, 416, 418, 417, 1443, 419,
	659, 1199, 420, 421, 1200, 1444, 422, 0, 0, 0,
	423, 424, 427, 1445, 1446, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 1201, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 1202, 467,
	456, 1447, 276, 1203, 468, 469, 1448, 660, 470, 661,
	472, 473, 1449, 0, 474, 0, 1450, 1451, 476, 477,
	478, 1452, 1453, 479, 480, 662, 1204, 481, 1205, 663,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 1454, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 1455, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 1456, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 1457, 533,
	534, 535, 1206, 536, 537, 538, 539, 540, 669, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 1458, 558, 559, 557, 560, 561, 562,
	1459, 563, 564, 546, 547, 565, 566, 1207, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 1460, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 1461, 590, 591, 0, 587,
	578, 1462, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 1463, 600, 673, 674, 675, 676, 1464, 609, 1465,
	601, 602, 603, 677, 604, 678, 1466, 605, 606, 607,
	608, 0, 610, 611, 1467, 1468, 612, 613, 614, 616,
	617, 615, 618, 1469, 619, 1470, 0, 620, 621, 622,
	679, 680, 681, 1471, 624, 623, 625, 682, 1472, 626,
	1473, 1474, 1475, 1476, 627, 628, 683, 629, 630, 631,
	0, 0, 0, 0, 0, 0, 1392, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2603, 277, 279, 278, 280, 281, 282, 283,
	1397, 284, 285, 1398, 1399, 1400, 0, 1401, 632, 1402,
	1403, 1404, 1405, 286, 287, 1191, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 1406,
	637, 296, 297, 298, 299, 300, 301, 1407, 1408, 0,
	302, 638, 639, 640, 1409, 303, 304, 641, 1410, 1336,
	1411, 305, 306, 307, 308, 309, 310, 311, 0, 1412,
	313, 314, 315, 312, 316, 1413, 317, 0, 318, 319,
	320, 321, 322, 323, 1414, 324, 325, 326, 1192, 327,
	328, 329, 1415, 1416, 1418, 1417, 1419, 1420, 1421, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 1422, 339,
	336, 337, 1423, 340, 338, 341, 1424, 342, 343, 344,
	1425, 1426, 345, 346, 347, 1427, 348, 349, 1428, 350,
	351, 352, 1429, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 1430,
	274, 1431, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 1432, 371, 372, 1433, 1434, 1193,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 1435, 385, 650, 1436, 651, 386,
	1437, 387, 388, 389, 390, 391, 652, 653, 654, 471,
	1195, 392, 393, 1438, 394, 395, 396, 397, 398, 0,
	0, 0, 275, 399, 400, 401, 403, 1439, 1194, 402,
	655, 656, 1440, 657, 1441, 404, 405, 1196, 658, 1197,
	406, 407, 408, 1198, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 1442, 416, 418, 417, 1443, 419,
	659, 1199, 420, 421, 1200, 1444, 422, 0, 0, 0,
	423, 424, 427, 1445, 1446, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 1201, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 1202, 467,
	456, 1447, 276, 1203, 468, 469, 1448, 660, 470, 661,
	472, 473, 1449, 0, 474, 0, 1450, 1451, 476, 477,
	478, 1452, 1453, 479, 480, 662, 1204, 481, 1205, 663,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 1454, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 1455, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 1456, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 1457, 533,
	534, 535, 1206, 536, 537, 538, 539, 540, 669, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 1458, 558, 559, 557, 560, 561, 562,
	1459, 563, 564, 546, 547, 565, 566, 1207, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 1460, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 1461, 590, 591, 0, 587,
	578, 1462, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 1463, 600, 673, 674, 675, 676, 1464, 609, 1465,
	601, 602, 603, 677, 604, 678, 1466, 605, 606, 607,
	608, 0, 610, 611, 1467, 1468, 612, 613, 614, 616,
	617, 615, 618, 1469, 619, 1470, 0, 620, 621, 622,
	679, 680, 681, 1471, 624, 623, 625, 682, 1472, 626,
	1473, 1474, 1475, 1476, 627, 628, 683, 629, 630, 631,
	0, 0, 0, 0, 1488, 0, 1392, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2235, 277, 279, 278, 280, 281, 282, 283,
	1397, 284, 285, 1398, 1399, 1400, 0, 1401, 632, 1402,
	1403, 1404, 1405, 286, 287, 1191, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 1406,
	637, 296, 297, 298, 299, 300, 301, 1407, 1408, 0,
	302, 638, 639, 640, 1409, 303, 304, 641, 1410, 1336,
	1411, 305, 306, 307, 308, 309, 310, 311, 0, 1412,
	313, 314, 315, 312, 316, 1413, 317, 0, 318, 319,
	320, 321, 322, 323, 1414, 324, 325, 326, 1192, 327,
	328, 329, 1415, 1416, 1418, 1417, 1419, 1420, 1421, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 1422, 339,
	336, 337, 1423, 340, 338, 341, 1424, 342, 343, 344,
	1425, 1426, 345, 346, 347, 1427, 348, 349, 1428, 350,
	351, 352, 1429, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 1430,
	274, 1431, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 1432, 371, 372, 1433, 1434, 1193,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 1435, 385, 650, 1436, 651, 386,
	1437, 387, 388, 389, 390, 391, 652, 653, 654, 471,
	1195, 392, 393, 1438, 394, 395, 396, 397, 398, 0,
	0, 0, 275, 399, 400, 401, 403, 1439, 1194, 402,
	655, 656, 1440, 657, 1441, 404, 405, 1196, 658, 1197,
	406, 407, 408, 1198, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 1442, 416, 418, 417, 1443, 419,
	659, 1199, 420, 421, 1200, 1444, 422, 0, 0, 0,
	423, 424, 427, 1445, 1446, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 1201, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 1202, 467,
	456, 1447, 276, 1203, 468, 469, 1448, 660, 470, 661,
	472, 473, 1449, 0, 474, 0, 1450, 1451, 476, 477,
	478, 1452, 1453, 479, 480, 662, 1204, 481, 1205, 663,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 1454, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 1455, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 1456, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 1457, 533,
	534, 535, 1206, 536, 537, 538, 539, 540, 669, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 1458, 558, 559, 557, 560, 561, 562,
	1459, 563, 564, 546, 547, 565, 566, 1207, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 1460, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 1461, 590, 591, 0, 587,
	578, 1462, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 1463, 600, 673, 674, 675, 676, 1464, 609, 1465,
	601, 602, 603, 677, 604, 678, 1466, 605, 606, 607,
	608, 0, 610, 611, 1467, 1468, 612, 613, 614, 616,
	617, 615, 618, 1469, 619, 1470, 0, 620, 621, 622,
	679, 680, 681, 1471, 624, 623, 625, 682, 1472, 626,
	1473, 1474, 1475, 1476, 627, 628, 683, 629, 630, 631,
	1389, 0, 1392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 1397, 284, 285, 1398,
	1399, 1400, 0, 1401, 632, 1402, 1403, 1404, 1405, 286,
	287, 1191, 288, 289, 290, 291, 292, 293, 633, 634,
	0, 294, 635, 295, 636, 1406, 637, 296, 297, 298,
	299, 300, 301, 1407, 1408, 0, 302, 638, 639, 640,
	1409, 303, 304, 641, 1410, 1336, 1411, 305, 306, 307,
	308, 309, 310, 311, 0, 1412, 313, 314, 315, 312,
	316, 1413, 317, 0, 318, 319, 320, 321, 322, 323,
	1414, 324, 325, 326, 1192, 327, 328, 329, 1415, 1416,
	1418, 1417, 1419, 1420, 1421, 330, 331, 332, 333, 334,
	0, 335, 642, 643, 1422, 339, 336, 337, 1423, 340,
	338, 341, 1424, 342, 343, 344, 1425, 1426, 345, 346,
	347, 1427, 348, 349, 1428, 350, 351, 352, 1429, 353,
	354, 644, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 645, 646, 366, 1430, 274, 1431, 0, 0,
	0, 0, 367, 368, 369, 647, 0, 0, 0, 370,
	1432, 371, 372, 1433, 1434, 1193, 373, 374, 375, 648,
	649, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	1435, 385, 650, 1436, 651, 386, 1437, 387, 388, 389,
	390, 391, 652, 653, 654, 471, 1195, 392, 393, 1438,
	394, 395, 396, 397, 398, 0, 0, 0, 275, 399,
	400, 401, 403, 1439, 1194, 402, 655, 656, 1440, 657,
	1441, 404, 405, 1196, 658, 1197, 406, 407, 408, 1198,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	1442, 416, 418, 417, 1443, 419, 659, 1199, 420, 421,
	1200, 1444, 422, 0, 0, 0, 423, 424, 427, 1445,
	1446, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	1201, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 1202, 467, 456, 1447, 276, 1203,
	468, 469, 1448, 660, 470, 661, 472, 473, 1449, 0,
	474, 0, 1450, 1451, 476, 477, 478, 1452, 1453, 479,
	480, 662, 1204, 481, 1205, 663, 482, 483, 475, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 1454, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 666,
	501, 667, 502, 503, 1455, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 668, 513, 514, 516, 515,
	517, 1456, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 1457, 533, 534, 535, 1206, 536,
	537, 538, 539, 540, 669, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 552, 553, 554, 555, 556, 1458,
	558, 559, 557, 560, 561, 562, 1459, 563, 564, 546,
	547, 565, 566, 1207, 567, 568, 569, 570, 571, 572,
	573, 670, 0, 574, 1460, 575, 576, 577, 579, 548,
	580, 585, 586, 671, 581, 582, 583, 584, 672, 588,
	589, 1461, 590, 591, 0, 587, 578, 1462, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 1463, 600, 673,
	674, 675, 676, 1464, 609, 1465, 601, 602, 603, 677,
	604, 678, 1466, 605, 606, 607, 608, 0, 610, 611,
	1467, 1468, 612, 613, 614, 616, 617, 615, 618, 1469,
	619, 1470, 0, 620, 621, 622, 679, 680, 681, 1471,
	624, 623, 625, 682, 1472, 626, 1473, 1474, 1475, 1476,
	627, 628, 683, 629, 630, 631, 1392, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	1397, 284, 285, 1398, 1399, 1400, 0, 1401, 632, 1402,
	1403, 1404, 1405, 286, 287, 1191, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 1406,
	637, 296, 297, 298, 299, 300, 301, 1407, 1408, 0,
	302, 638, 639, 640, 1409, 303, 304, 641, 1410, 1336,
	1411, 305, 306, 307, 308, 309, 310, 311, 0, 1412,
	313, 314, 315, 312, 316, 1413, 317, 0, 318, 319,
	320, 321, 322, 323, 1414, 324, 325, 326, 1192, 327,
	328, 329, 1415, 1416, 1418, 1417, 1419, 1420, 1421, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 1422, 339,
	336, 337, 1423, 340, 338, 341, 1424, 342, 343, 344,
	1425, 1426, 345, 346, 347, 1427, 348, 349, 1428, 350,
	351, 352, 1429, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 1430,
	274, 1431, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 1432, 371, 372, 1433, 1434, 1193,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 1435, 385, 650, 1436, 651, 386,
	1437, 387, 388, 389, 390, 391, 652, 653, 654, 471,
	1195, 392, 393, 1438, 394, 395, 396, 397, 398, 0,
	0, 0, 275, 399, 400, 401, 403, 1439, 1194, 402,
	655, 656, 1440, 657, 1441, 404, 405, 1196, 658, 1197,
	406, 407, 408, 1198, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 1442, 416, 418, 417, 1443, 419,
	659, 1199, 420, 421, 1200, 1444, 422, 0, 0, 0,
	423, 424, 427, 1445, 1446, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 1201, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 1202, 467,
	456, 1447, 276, 1203, 468, 469, 1448, 660, 470, 661,
	472, 473, 1449, 0, 474, 0, 1450, 1451, 476, 477,
	478, 1452, 1453, 479, 480, 662, 1204, 481, 1205, 663,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 1454, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 1455, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 1456, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 1457, 533,
	534, 535, 1206, 536, 537, 538, 539, 540, 669, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 1458, 558, 559, 557, 560, 561, 562,
	1459, 563, 564, 546, 547, 565, 566, 1207, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 1460, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 1461, 590, 591, 0, 587,
	578, 1462, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 1463, 600, 673, 674, 675, 676, 1464, 609, 1465,
	601, 602, 603, 677, 604, 678, 1466, 605, 606, 607,
	608, 0, 610, 611, 1467, 1468, 612, 613, 614, 616,
	617, 615, 618, 1469, 619, 1470, 0, 620, 621, 622,
	679, 680, 681, 1471, 624, 623, 625, 682, 1472, 626,
	1473, 1474, 1475, 1476, 627, 628, 683, 629, 630, 631,
	2578, 0, 1127, 1099, 1100, 1101, 1097, 1098, 1110, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 2575, 284, 285, 0,
	0, 0, 0, 0, 1151, 1115, 0, 0, 0, 286,
	287, 1191, 288, 289, 290, 291, 292, 293, 633, 1164,
	0, 294, 1171, 295, 1170, 0, 1181, 296, 297, 298,
	299, 300, 301, 1117, 1150, 1082, 302, 1211, 1212, 640,
	0, 303, 304, 1157, 0, 1138, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1192, 327, 328, 329, 1141, 1139,
	1140, 1147, 1143, 1142, 1146, 330, 331, 332, 333, 334,
	1174, 335, 1168, 1167, 1087, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 2576, 0, 345, 1159,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 1093, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 1182, 1183, 366, 1106, 274, 0, 0, 0,
	0, 0, 367, 368, 369, 1166, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 1193, 373, 374, 375, 1179,
	1180, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 1189, 0, 1116, 386, 0, 387, 388, 389,
	390, 391, 1152, 1153, 1156, 471, 1195, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 275, 399,
	400, 401, 403, 0, 1194, 402, 1161, 1162, 0, 1122,
	0, 404, 405, 1196, 1154, 1197, 406, 407, 408, 1198,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 1190, 1199, 420, 421,
	1200, 0, 422, 0, 0, 0, 423, 424, 427, 1145,
	1144, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	1201, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 1202, 467, 456, 1084, 276, 1203,
	468, 469, 1107, 1155, 470, 1169, 472, 473, 0, 0,
	474, 0, 0, 0, 476, 477, 478, 0, 0, 479,
	480, 662, 1204, 481, 1205, 1184, 482, 483, 1094, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 1185,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 1165, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 1206, 536,
	537, 538, 539, 540, 1095, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 552, 553, 554, 555, 556, 0,
	558, 559, 557, 560, 561, 562, 1148, 563, 564, 546,
	547, 565, 566, 1207, 567, 568, 569, 570, 571, 572,
	573, 1163, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 1210, 581, 582, 583, 584, 1186, 588,
	589, 0, 590, 591, 1081, 587, 578, 0, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 0, 600, 1175,
	1176, 1177, 1178, 0, 609, 0, 601, 602, 603, 1187,
	604, 1188, 1105, 605, 606, 607, 608, 0, 610, 611,
	0, 1088, 612, 613, 614, 616, 617, 615, 618, 1149,
	619, 0, 0, 620, 621, 622, 679, 1172, 1209, 2574,
	624, 623, 625, 682, 0, 626, 0, 0, 0, 0,
	627, 628, 683, 629, 630, 631, 1085, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1080,
	0, 0, 0, 0, 0, 0, 1078, 1079, 2577, 0,
	0, 0, 0, 0, 0, 1111, 2573, 0, 1071, 1109,
	1127, 1099, 1100, 1101, 1097, 1098, 1110, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 1151, 1115, 0, 0, 0, 286, 287, 1191,
	288, 289, 290, 291, 292, 293, 633, 1164, 0, 294,
	1171, 295, 1170, 0, 1181, 296, 297, 298, 299, 300,
	301, 1117, 1150, 1082, 302, 1211, 1212, 640, 0, 303,
	304, 1157, 0, 1138, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1192, 327, 328, 329, 1141, 1139, 1140, 1147,
	1143, 1142, 1146, 330, 331, 332, 333, 334, 1174, 335,
	1168, 1167, 1087, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 1159, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 1093,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	1182, 1183, 366, 1106, 274, 0, 0, 0, 0, 0,
	367, 368, 369, 1166, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 1193, 373, 374, 375, 1179, 1180, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	1189, 0, 1116, 386, 0, 387, 388, 389, 390, 391,
	1152, 1153, 1156, 471, 1195, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 275, 399, 400, 401,
	403, 0, 1194, 402, 1161, 1162, 0, 1122, 0, 404,
	405, 1196, 1154, 1197, 406, 407, 408, 1198, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 1190, 1199, 420, 421, 1200, 0,
	422, 0, 0, 0, 423, 424, 427, 1145, 1144, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 1201, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 1202, 467, 456, 1084, 276, 1203, 468, 469,
	1107, 1155, 470, 1169, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	1204, 481, 1205, 1184, 482, 483, 1094, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 1185, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 1165, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 1206, 536, 537, 538,
	539, 540, 1095, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 236, 558, 559,
	557, 560, 561, 562, 1148, 563, 564, 546, 547, 565,
	566, 1207, 567, 568, 569, 570, 571, 572, 573, 1163,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 1210, 581, 582, 583, 584, 1186, 588, 589, 0,
	590, 591, 1081, 587, 578, 238, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 1175, 1176, 1177,
	1178, 0, 609, 0, 601, 602, 603, 1187, 604, 1188,
	1105, 605, 606, 607, 608, 0, 610, 611, 0, 1088,
	612, 613, 614, 616, 617, 615, 618, 1149, 619, 0,
	0, 620, 621, 622, 1613, 1172, 1209, 0, 624, 623,
	625, 682, 0, 626, 0, 0, 0, 230, 627, 628,
	683, 629, 630, 631, 1085, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1080, 0, 0,
	0, 0, 0, 0, 1078, 1079, 1127, 1099, 1100, 1101,
	1097, 1098, 1110, 1868, 1866, 0, 0, 1109, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 1151, 1115,
	0, 0, 0, 286, 287, 1191, 288, 289, 290, 291,
	292, 293, 633, 1164, 0, 294, 1171, 295, 1170, 0,
	1181, 296, 297, 298, 299, 300, 301, 1117, 1150, 1082,
	302, 1211, 1212, 640, 0, 303, 304, 1157, 0, 1138,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1192, 327,
	328, 329, 1141, 1139, 1140, 1147, 1143, 1142, 1146, 330,
	331, 332, 333, 334, 1174, 335, 1168, 1167, 1087, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 1159, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 1093, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 1182, 1183, 366, 1106,
	274, 0, 0, 0, 0, 0, 367, 368, 369, 1166,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 1193,
	373, 374, 375, 1179, 1180, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 1189, 0, 1116, 386,
	0, 387, 388, 389, 390, 391, 1152, 1153, 1156, 471,
	1195, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 275, 399, 400, 401, 403, 0, 1194, 402,
	1161, 1162, 0, 1122, 0, 404, 405, 1196, 1154, 1197,
	406, 407, 408, 1198, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	1190, 1199, 420, 421, 1200, 0, 422, 0, 0, 0,
	423, 424, 427, 1145, 1144, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 1201, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 1202, 467,
	456, 1084, 276, 1203, 468, 469, 1107, 1155, 470, 1169,
	472, 473, 0, 0, 474, 0, 0, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 1204, 481, 1205, 1184,
	482, 483, 1094, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 1185, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 1165,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 1206, 536, 537, 538, 539, 540, 1095, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 236, 558, 559, 557, 560, 561, 562,
	1148, 563, 564, 546, 547, 565, 566, 1207, 567, 568,
	569, 570, 571, 572, 573, 1163, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 1210, 581, 582,
	583, 584, 1186, 588, 589, 0, 590, 591, 1081, 587,
	578, 238, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 1175, 1176, 1177, 1178, 0, 609, 0,
	601, 602, 603, 1187, 604, 1188, 1105, 605, 606, 607,
	608, 0, 610, 611, 0, 1088, 612, 613, 614, 616,
	617, 615, 618, 1149, 619, 0, 0, 620, 621, 622,
	1613, 1172, 1209, 0, 624, 623, 625, 682, 0, 626,
	0, 0, 0, 230, 627, 628, 683, 629, 630, 631,
	1085, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1080, 0, 0, 0, 0, 0, 0,
	1078, 1079, 1127, 1099, 1100, 1101, 1097, 1098, 1110, 1868,
	3214, 0, 0, 1109, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 1151, 1115, 0, 0, 0, 286,
	287, 1191, 288, 289, 290, 291, 292, 293, 633, 1164,
	0, 294, 1171, 295, 1170, 0, 1181, 296, 297, 298,
	299, 300, 301, 1117, 1150, 1082, 302, 1211, 1212, 640,
	0, 303, 304, 1157, 0, 1138, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1192, 327, 328, 329, 1141, 1139,
	1140, 1147, 1143, 1142, 1146, 330, 331, 332, 333, 334,
	1174, 335, 1168, 1167, 1087, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 1159,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 1093, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 1182, 1183, 366, 1106, 274, 0, 0, 0,
	0, 0, 367, 368, 369, 1166, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 1193, 373, 374, 375, 1179,
	1180, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 1189, 0, 1116, 386, 0, 387, 388, 389,
	390, 391, 1152, 1153, 1156, 471, 1195, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 275, 399,
	400, 401, 403, 0, 1194, 402, 1161, 1162, 0, 1122,
	0, 404, 405, 1196, 1154, 1197, 406, 407, 408, 1198,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 1190, 1199, 420, 421,
	1200, 0, 422, 0, 0, 0, 423, 424, 427, 1145,
	1144, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	1201, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 1202, 467, 456, 1084, 276, 1203,
	468, 469, 1107, 1155, 470, 1169, 472, 473, 0, 0,
	474, 0, 0, 0, 476, 477, 478, 0, 0, 479,
	480, 662, 1204, 481, 1205, 1184, 482, 483, 1094, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 1185,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 1165, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 1206, 536,
	537, 538, 539, 540, 1095, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 552, 553, 554, 555, 556, 236,
	558, 559, 557, 560, 561, 562, 1148, 563, 564, 546,
	547, 565, 566, 1207, 567, 568, 569, 570, 571, 572,
	573, 1163, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 1210, 581, 582, 583, 584, 1186, 588,
	589, 0, 590, 591, 1081, 587, 578, 238, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 0, 600, 1175,
	1176, 1177, 1178, 0, 609, 0, 601, 602, 603, 1187,
	604, 1188, 1105, 605, 606, 607, 608, 0, 610, 611,
	0, 1088, 612, 613, 614, 616, 617, 615, 618, 1149,
	619, 0, 0, 620, 621, 622, 1613, 1172, 1209, 0,
	624, 623, 625, 682, 0, 626, 0, 0, 0, 230,
	627, 628, 683, 629, 630, 631, 1085, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1080,
	0, 0, 0, 0, 0, 0, 1078, 1079, 1127, 1099,
	1100, 1101, 1097, 1098, 1110, 1868, 1866, 0, 0, 1109,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	1151, 1115, 0, 0, 0, 286, 287, 1191, 288, 289,
	290, 291, 292, 293, 633, 1164, 0, 294, 1171, 295,
	1170, 2709, 1181, 296, 297, 298, 299, 300, 301, 1117,
	1150, 1082, 302, 1211, 1212, 640, 0, 303, 304, 1157,
	0, 1138, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1192, 327, 328, 329, 1141, 1139, 1140, 1147, 1143, 1142,
	1146, 330, 331, 332, 333, 334, 1174, 335, 1168, 1167,
	1087, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 1159, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 1093, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 1182, 1183,
	366, 1106, 274, 0, 0, 0, 0, 0, 367, 368,
	369, 1166, 0, 0, 0, 370, 0, 371, 372, 0,
	2714, 1193, 373, 374, 375, 1179, 1180, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 1189, 0,
	1116, 386, 0, 387, 388, 389, 390, 391, 1152, 1153,
	1156, 471, 1195, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 275, 399, 400, 401, 403, 0,
	1194, 402, 1161, 1162, 0, 1122, 0, 404, 405, 1196,
	1154, 1197, 406, 407, 408, 1198, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	2710, 419, 1190, 1199, 420, 421, 1200, 0, 422, 0,
	0, 0, 423, 424, 427, 1145, 1144, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 1201, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	1202, 467, 456, 1084, 276, 1203, 468, 469, 1107, 1155,
	470, 1169, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 1204, 481,
	1205, 1184, 482, 483, 1094, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 1185, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 1165, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 1206, 536, 537, 538, 539, 540,
	1095, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 1148, 563, 564, 546, 547, 565, 566, 1207,
	567, 568, 569, 570, 571, 572, 573, 1163, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 1210,
	581, 582, 583, 584, 1186, 588, 589, 0, 590, 591,
	1081, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 1175, 1176, 1177, 1178, 0,
	609, 2711, 601, 602, 603, 1187, 604, 1188, 1105, 605,
	606, 607, 608, 0, 610, 611, 0, 1088, 612, 613,
	614, 616, 617, 615, 618, 1149, 619, 0, 0, 620,
	621, 622, 679, 1172, 1209, 0, 624, 623, 625, 682,
	0, 626, 0, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 1085, 0, 0, 2623, 0, 1127, 1099, 1100,
	1101, 1097, 1098, 1110, 0, 1080, 0, 0, 0, 0,
	0, 0, 1078, 1079, 277, 279, 278, 280, 281, 282,
	283, 1111, 284, 285, 0, 1109, 0, 0, 0, 1151,
	1115, 0, 0, 0, 286, 287, 1191, 288, 289, 290,
	291, 292, 293, 633, 1164, 0, 294, 1171, 295, 1170,
	0, 1181, 296, 297, 298, 299, 300, 301, 1117, 1150,
	1082, 302, 1211, 1212, 640, 0, 303, 304, 1157, 0,
	1138, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1192,
	327, 328, 329, 1141, 1139, 1140, 1147, 1143, 1142, 1146,
	330, 331, 332, 333, 334, 1174, 335, 1168, 1167, 1087,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 1159, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 1093, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 1182, 1183, 366,
	1106, 274, 0, 0, 0, 0, 0, 367, 368, 369,
	1166, 0, 0, 0, 370, 0, 371, 372, 0, 0,
	1193, 373, 374, 375, 1179, 1180, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 1189, 0, 1116,
	386, 0, 387, 388, 389, 390, 391, 1152, 1153, 1156,
	471, 1195, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 275, 399, 400, 401, 403, 0, 1194,
	402, 1161, 1162, 0, 1122, 0, 404, 405, 1196, 1154,
	1197, 406, 407, 408, 1198, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 1190, 1199, 420, 421, 1200, 0, 422, 0, 0,
	0, 423, 424, 427, 1145, 1144, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 1201, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 1202,
	467, 456, 1084, 276, 1203, 468, 469, 1107, 1155, 470,
	1169, 472, 473, 0, 0, 474, 0, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 1204, 481, 1205,
	1184, 482, 483, 1094, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 1185, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	1165, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 1206, 536, 537, 538, 539, 540, 1095,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 1148, 563, 564, 546, 547, 565, 566, 1207, 567,
	568, 569, 570, 571, 572, 573, 1163, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 1210, 581,
	582, 583, 584, 1186, 588, 589, 0, 590, 591, 1081,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 1175, 1176, 1177, 1178, 0, 609,
	0, 601, 602, 603, 1187, 604, 1188, 1105, 605, 606,
	607, 608, 0, 610, 611, 0, 1088, 612, 613, 614,
	616, 617, 615, 618, 1149, 619, 0, 0, 620, 621,
	622, 679, 1172, 1209, 0, 624, 623, 625, 682, 0,
	626, 0, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 1085, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1080, 0, 0, 0, 0, 0,
	0, 1078, 1079, 0, 0, 0, 0, 0, 0, 0,
	1111, 2621, 0, 2620, 1109, 1127, 1099, 1100, 1101, 1097,
	1098, 1110, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 1151, 1115, 0,
	0, 0, 286, 287, 1191, 288, 289, 290, 291, 292,
	293, 633, 1164, 0, 294, 1171, 295, 1170, 0, 1181,
	296, 297, 298, 299, 300, 301, 1117, 1150, 1082, 302,
	1211, 1212, 640, 0, 303, 304, 1157, 0, 1138, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1192, 327, 328,
	329, 1141, 1139, 1140, 1147, 1143, 1142, 1146, 330, 331,
	332, 333, 334, 1174, 335, 1168, 1167, 1087, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 1159, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 1093, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 1182, 1183, 366, 1106, 274,
	0, 0, 0, 0, 0, 367, 368, 369, 1166, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 1193, 373,
	374, 375, 1179, 1180, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 1189, 0, 1116, 386, 0,
	387, 388, 389, 390, 391, 1152, 1153, 1156, 471, 1195,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 275, 399, 400, 401, 403, 0, 1194, 402, 1161,
	1162, 0, 1122, 0, 404, 405, 1196, 1154, 1197, 406,
	407, 408, 1198, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 1190,
	1199, 420, 421, 1200, 0, 422, 0, 0, 0, 423,
	424, 427, 1145, 1144, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 1201, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 1202, 467, 456,
	1084, 276, 1203, 468, 469, 1107, 1155, 470, 1169, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 1204, 481, 1205, 1184, 482,
	483, 1094, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 1185, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 1165, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 1206, 536, 537, 538, 539, 540, 1095, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 561, 562, 1148,
	563, 564, 546, 547, 565, 566, 1207, 567, 568, 569,
	570, 571, 572, 573, 1163, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 1210, 581, 582, 583,
	584, 1186, 588, 589, 0, 590, 591, 1081, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 1175, 1176, 1177, 1178, 0, 609, 0, 601,
	602, 603, 1187, 604, 1188, 1105, 605, 606, 607, 608,
	0, 610, 611, 0, 1088, 612, 613, 614, 616, 617,
	615, 618, 1149, 619, 0, 0, 620, 621, 622, 679,
	1172, 1209, 0, 624, 623, 625, 682, 0, 626, 0,
	0, 0, 0, 627, 628, 683, 629, 630, 631, 1085,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1080, 0, 0, 0, 0, 0, 0, 1078,
	1079, 0, 0, 0, 0, 0, 0, 0, 1111, 2618,
	0, 2617, 1109, 1127, 1099, 1100, 1101, 1097, 1098, 1110,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 1151, 1115, 0, 0, 0,
	286, 287, 1191, 288, 289, 290, 291, 292, 293, 633,
	1164, 0, 294, 1171, 295, 1170, 0, 1181, 296, 297,
	298, 299, 300, 301, 1117, 1150, 1082, 302, 1211, 1212,
	640, 0, 303, 304, 1157, 0, 1138, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1192, 327, 328, 329, 1141,
	1139, 1140, 1147, 1143, 1142, 1146, 330, 331, 332, 333,
	334, 1174, 335, 1168, 1167, 1087, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	1159, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 1093, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 1182, 1183, 366, 1106, 274, 0, 0,
	0, 0, 0, 367, 368, 369, 1166, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 1193, 373, 374, 375,
	1179, 1180, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 1189, 0, 1116, 386, 0, 387, 388,
	389, 390, 391, 1152, 1153, 1156, 471, 1195, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 275,
	399, 400, 401, 403, 0, 1194, 402, 1161, 1162, 0,
	1122, 0, 404, 405, 1196, 1154, 1197, 406, 407, 408,
	1198, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 1190, 1199, 420,
	421, 1200, 0, 422, 0, 0, 0, 423, 424, 427,
	1145, 1144, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 1201, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 1202, 467, 456, 1084, 276,
	1203, 468, 469, 1107, 1155, 470, 1169, 472, 473, 0,
	0, 474, 0, 0, 0, 476, 477, 478, 0, 0,
	479, 480, 662, 1204, 481, 1205, 1184, 482, 483, 1094,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	1185, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 1165, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 1206,
	536, 537, 538, 539, 540, 1095, 541, 0, 542, 543,
	549, 550, 551, 544, 545, 552, 553, 554, 555, 556,
	0, 558, 559, 557, 560, 561, 562, 1148, 563, 564,
	546, 547, 565, 566, 1207, 567, 568, 569, 570, 571,
	572, 573, 1163, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 1210, 581, 582, 583, 584, 1186,
	588, 589, 0, 590, 591, 1081, 587, 578, 0, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	1175, 1176, 1177, 1178, 0, 609, 0, 601, 602, 603,
	1187, 604, 1188, 1105, 605, 606, 607, 608, 0, 610,
	611, 0, 1088, 612, 613, 614, 616, 617, 615, 618,
	1149, 619, 0, 0, 620, 621, 622, 679, 1172, 1209,
	0, 624, 623, 625, 682, 0, 626, 0, 0, 0,
	0, 627, 628, 683, 629, 630, 631, 1085, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1080, 0, 0, 0, 0, 0, 0, 1078, 1079, 0,
	0, 0, 0, 0, 0, 0, 1111, 2615, 0, 2614,
	1109, 1127, 1099, 1100, 1101, 1097, 1098, 1110, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 1151, 1115, 0, 0, 0, 286, 287,
	1191, 288, 289, 290, 291, 292, 293, 633, 1164, 0,
	294, 1171, 295, 1170, 0, 1181, 296, 297, 298, 299,
	300, 301, 1117, 1150, 1082, 302, 1211, 1212, 640, 0,
	303, 304, 1157, 0, 1138, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1192, 327, 328, 329, 1141, 1139, 1140,
	1147, 1143, 1142, 1146, 330, 331, 332, 333, 334, 1174,
	335, 1168, 1167, 1087, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 1159, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	1093, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 1182, 1183, 366, 1106, 274, 0, 0, 0, 0,
	0, 367, 368, 369, 1166, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 1193, 373, 374, 375, 1179, 1180,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 1189, 0, 1116, 386, 0, 387, 388, 389, 390,
	391, 1152, 1153, 1156, 471, 1195, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 275, 399, 400,
	401, 403, 0, 1194, 402, 1161, 1162, 0, 1122, 0,
	404, 405, 1196, 1154, 1197, 406, 407, 408, 1198, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 1190, 1199, 420, 421, 1200,
	0, 422, 0, 0, 0, 423, 424, 427, 1145, 1144,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 1201,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 1202, 467, 456, 1084, 276, 1203, 468,
	469, 1107, 1155, 470, 1169, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	662, 1204, 481, 1205, 1184, 482, 483, 1094, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 1185, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 1165, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 1206, 536, 537,
	538, 539, 540, 1095, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 0, 558,
	559, 557, 560, 561, 562, 1148, 563, 564, 546, 547,
	565, 566, 1207, 567, 568, 569, 570, 571, 572, 573,
	1163, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 1210, 581, 582, 583, 584, 1186, 588, 589,
	0, 590, 591, 1081, 587, 578, 0, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 1175, 1176,
	1177, 1178, 0, 609, 0, 601, 602, 603, 1187, 604,
	1188, 1105, 605, 606, 607, 608, 0, 610, 611, 0,
	1088, 612, 613, 614, 616, 617, 615, 618, 1149, 619,
	0, 0, 620, 621, 622, 679, 1172, 1209, 0, 624,
	623, 625, 682, 0, 626, 0, 0, 0, 0, 627,
	628, 683, 629, 630, 631, 1085, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1080, 0,
	0, 0, 0, 0, 0, 1078, 1079, 0, 0, 0,
	0, 0, 0, 0, 1111, 2612, 0, 1709, 1109, 1127,
	1099, 1100, 1101, 1097, 1098, 1110, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 1151, 1115, 0, 0, 0, 286, 287, 1191, 288,
	289, 290, 291, 292, 293, 633, 1164, 0, 294, 1171,
	295, 1170, 0, 1181, 296, 297, 298, 299, 300, 301,
	1117, 1150, 1082, 302, 1211, 1212, 640, 0, 303, 304,
	1157, 0, 1138, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1192, 327, 328, 329, 1141, 1139, 1140, 1147, 1143,
	1142, 1146, 330, 331, 332, 333, 334, 1174, 335, 1168,
	1167, 1087, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 1159, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 1093, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 1182,
	1183, 366, 1106, 274, 0, 0, 0, 0, 0, 367,
	368, 369, 1166, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 1193, 373, 374, 375, 1179, 1180, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 1189,
	0, 1116, 386, 0, 387, 388, 389, 390, 391, 1152,
	1153, 1156, 471, 1195, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 275, 399, 400, 401, 403,
	0, 1194, 402, 1161, 1162, 0, 1122, 0, 404, 405,
	1196, 1154, 1197, 406, 407, 408, 1198, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 1190, 1199, 420, 421, 1200, 0, 422,
	0, 0, 0, 423, 424, 427, 1145, 1144, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 1201, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 1202, 467, 456, 1084, 276, 1203, 468, 469, 1107,
	1155, 470, 1169, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 1204,
	481, 1205, 1184, 482, 483, 1094, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 1185, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 1165, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 1206, 536, 537, 538, 539,
	540, 1095, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 1148, 563, 564, 546, 547, 565, 566,
	1207, 567, 568, 569, 570, 571, 572, 573, 1163, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	1210, 581, 582, 583, 584, 1186, 588, 589, 0, 590,
	591, 1081, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 1175, 1176, 1177, 1178,
	0, 609, 0, 601, 602, 603, 1187, 604, 1188, 1105,
	605, 606, 607, 608, 0, 610, 611, 0, 1088, 612,
	613, 614, 616, 617, 615, 618, 1149, 619, 0, 0,
	620, 621, 622, 679, 1172, 1209, 0, 624, 623, 625,
	682, 0, 626, 1708, 0, 0, 0, 627, 628, 683,
	629, 630, 631, 1085, 0, 0, 1074, 0, 1127, 1099,
	1100, 1101, 1097, 1098, 1110, 0, 1080, 0, 0, 0,
	0, 0, 0, 1078, 1079, 277, 279, 278, 280, 281,
	282, 283, 1111, 284, 285, 0, 1109, 0, 0, 0,
	1151, 1115, 0, 0, 0, 286, 287, 1191, 288, 289,
	290, 291, 292, 293, 633, 1164, 0, 294, 1171, 295,
	1170, 0, 1181, 296, 297, 298, 299, 300, 301, 1117,
	1150, 1082, 302, 1211, 1212, 640, 0, 303, 304, 1157,
	0, 1138, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1192, 327, 328, 329, 1141, 1139, 1140, 1147, 1143, 1142,
	1146, 330, 331, 332, 333, 334, 1174, 335, 1168, 1167,
	1087, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 1159, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 1093, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 1182, 1183,
	366, 1106, 274, 0, 0, 0, 0, 0, 367, 368,
	369, 1166, 0, 0, 0, 370, 0, 371, 372, 0,
	0, 1193, 373, 374, 375, 1179, 1180, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 1189, 0,
	1116, 386, 0, 387, 388, 389, 390, 391, 1152, 1153,
	1156, 471, 1195, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 275, 399, 400, 401, 403, 0,
	1194, 402, 1161, 1162, 0, 1122, 0, 404, 405, 1196,
	1154, 1197, 406, 407, 408, 1198, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 1190, 1199, 420, 421, 1200, 0, 422, 0,
	0, 0, 423, 424, 427, 1145, 1144, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 1201, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	1202, 467, 456, 1084, 276, 1203, 468, 469, 1107, 1155,
	470, 1169, 472, 473, 0, 0, 474, 0, 1089, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 1204, 481,
	1205, 1184, 482, 483, 1094, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 1185, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 1165, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 1206, 536, 537, 538, 539, 540,
	1095, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 1148, 563, 564, 546, 547, 565, 566, 1207,
	567, 568, 569, 570, 571, 572, 573, 1163, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 1210,
	581, 582, 583, 584, 1186, 588, 589, 0, 590, 591,
	1081, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 1175, 1176, 1177, 1178, 0,
	609, 0, 601, 602, 603, 1187, 604, 1188, 1105, 605,
	606, 607, 608, 0, 610, 611, 0, 1088, 612, 613,
	614, 616, 617, 615, 618, 1149, 619, 0, 0, 620,
	621, 622, 679, 1172, 1209, 0, 624, 623, 625, 682,
	0, 626, 0, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 1085, 0, 0, 0, 0, 1127, 1099, 1100,
	1101, 1097, 1098, 1110, 0, 1080, 0, 0, 0, 0,
	0, 0, 1078, 1079, 277, 279, 278, 280, 281, 282,
	283, 1111, 284, 285, 0, 1109, 0, 0, 0, 1151,
	1115, 0, 0, 0, 286, 287, 1191, 288, 289, 290,
	291, 292, 293, 633, 1164, 0, 294, 1171, 295, 1170,
	0, 1181, 296, 297, 298, 299, 300, 301, 1117, 1150,
	1082, 302, 1211, 1212, 640, 0, 303, 304, 1157, 0,
	1138, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 4675, 323, 0, 324, 325, 326, 1192,
	327, 328, 329, 1141, 1139, 1140, 1147, 1143, 1142, 1146,
	330, 331, 332, 333, 334, 1174, 335, 1168, 1167, 1087,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 1159, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 1093, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 1182, 1183, 366,
	1106, 274, 0, 0, 0, 0, 0, 367, 368, 369,
	1166, 0, 0, 0, 370, 0, 371, 372, 0, 0,
	1193, 373, 374, 375, 1179, 1180, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 1189, 0, 1116,
	386, 0, 387, 388, 389, 390, 391, 1152, 1153, 1156,
	471, 1195, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 275, 399, 400, 401, 403, 0, 1194,
	402, 1161, 1162, 0, 1122, 0, 404, 405, 1196, 1154,
	1197, 406, 407, 408, 1198, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 1190, 1199, 420, 421, 1200, 0, 422, 0, 0,
	0, 423, 424, 427, 1145, 1144, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 1201, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 1202,
	467, 456, 1084, 276, 1203, 468, 469, 1107, 1155, 470,
	1169, 472, 473, 0, 0, 474, 0, 1089, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 1204, 481, 1205,
	1184, 482, 483, 1094, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 1185, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	1165, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 1206, 536, 537, 538, 539, 540, 1095,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 1148, 563, 564, 546, 547, 565, 566, 1207, 567,
	568, 569, 570, 571, 572, 573, 1163, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 1210, 581,
	582, 583, 584, 1186, 588, 589, 0, 590, 591, 1081,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 1175, 1176, 1177, 1178, 0, 609,
	0, 601, 602, 603, 1187, 604, 1188, 1105, 605, 606,
	607, 608, 0, 610, 611, 0, 1088, 612, 613, 614,
	616, 617, 615, 618, 1149, 619, 0, 0, 620, 621,
	622, 679, 1172, 1209, 0, 624, 623, 625, 682, 0,
	626, 0, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 1085, 0, 0, 0, 0, 1127, 1099, 1100, 1101,
	1097, 1098, 1110, 0, 1080, 0, 0, 0, 0, 0,
	0, 1078, 1079, 277, 279, 278, 280, 281, 282, 283,
	1111, 284, 285, 0, 1109, 0, 0, 0, 1151, 1115,
	0, 0, 0, 286, 287, 1191, 288, 289, 290, 291,
	292, 293, 633, 1164, 0, 294, 1171, 295, 1170, 0,
	1181, 296, 297, 298, 299, 300, 301, 1117, 1150, 1082,
	302, 1211, 1212, 640, 0, 303, 304, 1157, 0, 1138,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1192, 327,
	328, 329, 1141, 1139, 1140, 1147, 1143, 1142, 1146, 330,
	331, 332, 333, 334, 1174, 335, 1168, 1167, 1087, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 1159, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 1093, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 1182, 1183, 366, 1106,
	274, 0, 0, 0, 0, 0, 367, 368, 369, 1166,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 1193,
	373, 374, 375, 1179, 1180, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 1189, 0, 1116, 386,
	0, 387, 388, 389, 390, 391, 1152, 1153, 1156, 471,
	1195, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 2455, 399, 400, 401, 403, 0, 1194, 402,
	1161, 1162, 0, 1122, 0, 404, 405, 1196, 1154, 1197,
	406, 407, 408, 1198, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	1190, 1199, 420, 421, 1200, 0, 422, 0, 0, 0,
	423, 424, 427, 1145, 1144, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 1201, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 1202, 467,
	456, 1084, 276, 1203, 468, 469, 1107, 1155, 470, 1169,
	472, 473, 0, 0, 474, 0, 0, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 1204, 481, 1205, 1184,
	482, 483, 1094, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 1185, 501, 667, 502, 503, 2454, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 1165,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 1206, 536, 537, 538, 539, 540, 1095, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 0, 558, 559, 557, 560, 561, 562,
	1148, 563, 564, 546, 547, 565, 566, 1207, 567, 568,
	569, 570, 571, 572, 573, 1163, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 1210, 581, 582,
	583, 584, 1186, 588, 589, 0, 590, 591, 1081, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 1175, 1176, 1177, 1178, 0, 609, 0,
	601, 602, 603, 1187, 604, 1188, 1105, 605, 606, 607,
	608, 0, 610, 611, 0, 1088, 612, 613, 614, 616,
	617, 615, 618, 1149, 619, 0, 0, 620, 621, 622,
	679, 1172, 1209, 0, 624, 623, 625, 682, 0, 626,
	0, 0, 0, 0, 627, 628, 683, 629, 630, 631,
	1085, 0, 0, 0, 0, 1127, 1099, 1100, 1101, 1097,
	1098, 1110, 0, 1080, 0, 0, 0, 0, 0, 0,
	1078, 1079, 277, 279, 278, 280, 281, 282, 283, 1111,
	284, 285, 0, 1109, 0, 0, 0, 1151, 1115, 0,
	0, 0, 286, 287, 1191, 288, 289, 290, 291, 292,
	293, 633, 1164, 0, 294, 1171, 295, 1170, 0, 1181,
	296, 297, 298, 299, 300, 301, 1117, 1150, 1082, 302,
	1211, 1212, 640, 0, 303, 304, 1157, 0, 1138, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1192, 327, 328,
	329, 1141, 1139, 1140, 1147, 1143, 1142, 1146, 330, 331,
	332, 333, 334, 1174, 335, 1168, 1167, 1087, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 1159, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 1093, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 1182, 1183, 366, 1106, 274,
	0, 0, 0, 0, 0, 367, 368, 369, 1166, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 1193, 373,
	374, 375, 1179, 1180, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 1189, 0, 1116, 386, 0,
	387, 388, 389, 390, 391, 1152, 1153, 1156, 471, 1195,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 275, 399, 400, 401, 403, 0, 1194, 402, 1161,
	1162, 0, 1122, 0, 404, 405, 1196, 1154, 1197, 406,
	407, 408, 1198, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 1190,
	1199, 420, 421, 1200, 0, 422, 0, 0, 0, 423,
	424, 427, 1145, 1144, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 1201, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 1202, 467, 456,
	1084, 276, 1203, 468, 469, 1107, 1155, 470, 1169, 472,
	473, 0, 0, 474, 0, 1089, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 1204, 481, 1205, 1184, 482,
	483, 1094, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 1185, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 1165, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 1206, 536, 537, 538, 539, 540, 1095, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 561, 562, 1148,
	563, 564, 546, 547, 565, 566, 1207, 567, 568, 569,
	570, 571, 572, 573, 1163, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 1210, 581, 582, 583,
	584, 1186, 588, 589, 0, 590, 591, 1081, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 1175, 1176, 1177, 1178, 0, 609, 0, 601,
	602, 603, 1187, 604, 1188, 1105, 605, 606, 607, 608,
	0, 610, 611, 0, 1088, 612, 613, 614, 616, 617,
	615, 618, 1149, 619, 0, 0, 620, 621, 622, 679,
	1172, 1209, 0, 624, 623, 625, 682, 0, 626, 0,
	0, 0, 0, 627, 628, 683, 629, 630, 631, 1085,
	0, 0, 0, 0, 1127, 1099, 1100, 1101, 1097, 1098,
	1110, 0, 1080, 0, 0, 0, 0, 0, 0, 1078,
	1079, 277, 279, 278, 280, 281, 282, 283, 1111, 284,
	285, 0, 1109, 0, 0, 0, 1151, 1115, 0, 0,
	0, 286, 287, 1191, 288, 289, 290, 291, 292, 293,
	633, 1164, 0, 294, 1171, 295, 1170, 0, 1181, 296,
	297, 298, 299, 300, 301, 1117, 1150, 1082, 302, 1211,
	1212, 640, 0, 303, 304, 1157, 0, 1138, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	4411, 323, 0, 324, 325, 326, 1192, 327, 328, 329,
	1141, 1139, 1140, 1147, 1143, 1142, 1146, 330, 331, 332,
	333, 334, 1174, 335, 1168, 1167, 1087, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 1159, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 1093, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 1182, 1183, 366, 1106, 274, 0,
	0, 0, 0, 0, 367, 368, 369, 1166, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 1193, 373, 374,
	375, 1179, 1180, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 1189, 0, 1116, 386, 0, 387,
	388, 389, 390, 391, 1152, 1153, 1156, 471, 1195, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	275, 399, 400, 401, 403, 0, 1194, 402, 1161, 1162,
	0, 1122, 0, 404, 405, 1196, 1154, 1197, 406, 407,
	408, 1198, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 1190, 1199,
	420, 421, 1200, 0, 422, 0, 0, 0, 423, 424,
	427, 1145, 1144, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 1201, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 1202, 467, 456, 1084,
	276, 1203, 468, 469, 1107, 1155, 470, 1169, 472, 473,
	0, 0, 474, 0, 1089, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 1204, 481, 1205, 1184, 482, 483,
	1094, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 1185, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 1165, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	1206, 536, 537, 538, 539, 540, 1095, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 1148, 563,
	564, 546, 547, 565, 566, 1207, 567, 568, 569, 570,
	571, 572, 573, 1163, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 1210, 581, 582, 583, 584,
	1186, 588, 589, 0, 590, 591, 1081, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 1175, 1176, 1177, 1178, 0, 609, 0, 601, 602,
	603, 1187, 604, 1188, 1105, 605, 606, 607, 608, 0,
	610, 611, 0, 1088, 612, 613, 614, 616, 617, 615,
	618, 1149, 619, 0, 0, 620, 621, 622, 679, 1172,
	1209, 0, 624, 623, 625, 682, 0, 626, 0, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 1085, 0,
	0, 0, 0, 1127, 1099, 1100, 1101, 1097, 1098, 1110,
	0, 1080, 0, 0, 0, 0, 0, 0, 1078, 1079,
	277, 279, 278, 280, 281, 282, 283, 1111, 284, 285,
	0, 1109, 0, 0, 0, 1151, 1115, 0, 0, 0,
	286, 287, 1191, 288, 289, 290, 291, 292, 293, 633,
	1164, 0, 294, 1171, 295, 1170, 0, 1181, 296, 297,
	298, 299, 300, 301, 1117, 1150, 1082, 302, 1211, 1212,
	640, 0, 303, 304, 1157, 0, 1138, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1192, 327, 328, 329, 1141,
	1139, 1140, 1147, 1143, 1142, 1146, 330, 331, 332, 333,
	334, 1174, 335, 1168, 1167, 1087, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	1159, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 1093, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 1182, 1183, 366, 1106, 274, 0, 0,
	0, 0, 0, 367, 368, 369, 1166, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 1193, 373, 374, 375,
	1179, 1180, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 1189, 0, 1116, 386, 0, 387, 388,
	389, 390, 391, 1152, 1153, 1156, 471, 1195, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 275,
	399, 400, 401, 403, 0, 1194, 402, 1161, 1162, 0,
	1122, 0, 404, 405, 1196, 1154, 1197, 406, 407, 408,
	1198, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 1190, 1199, 420,
	421, 1200, 0, 422, 0, 0, 0, 423, 424, 427,
	1145, 1144, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 1201, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 1202, 467, 456, 1084, 4008,
	1203, 468, 469, 1107, 1155, 470, 1169, 472, 473, 0,
	0, 474, 0, 0, 0, 476, 477, 478, 0, 0,
	479, 480, 662, 1204, 481, 1205, 1184, 482, 483, 1094,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	1185, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 1165, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 1206,
	536, 537, 538, 539, 540, 1095, 541, 0, 542, 543,
	549, 550, 551, 544, 545, 552, 553, 554, 555, 556,
	0, 558, 559, 557, 560, 561, 562, 1148, 563, 564,
	546, 547, 565, 566, 1207, 567, 568, 569, 570, 571,
	572, 573, 1163, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 1210, 581, 582, 583, 584, 1186,
	588, 589, 0, 590, 591, 1081, 587, 578, 0, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	1175, 1176, 1177, 1178, 0, 609, 0, 601, 602, 603,
	1187, 604, 1188, 1105, 605, 606, 607, 608, 0, 610,
	611, 0, 1088, 612, 613, 614, 616, 617, 615, 618,
	1149, 619, 0, 0, 620, 621, 622, 679, 1172, 1209,
	0, 624, 623, 625, 682, 0, 626, 0, 0, 0,
	0, 627, 628, 683, 629, 630, 631, 1085, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1080, 0, 0, 0, 0, 0, 0, 1078, 1079, 1937,
	0, 0, 0, 0, 0, 0, 1111, 0, 0, 0,
	1109, 1127, 1099, 1100, 1101, 1097, 1098, 1110, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 1151, 1115, 0, 0, 0, 286, 287,
	1191, 288, 289, 290, 291, 292, 293, 633, 1164, 0,
	294, 1171, 295, 1170, 0, 1181, 296, 297, 298, 299,
	300, 301, 1117, 1150, 1082, 302, 1211, 1212, 640, 0,
	303, 304, 1157, 0, 1138, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1192, 327, 328, 329, 1141, 1139, 1140,
	1147, 1143, 1142, 1146, 330, 331, 332, 333, 334, 1174,
	335, 1168, 1167, 1087, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 1159, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	1093, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 1182, 1183, 366, 1106, 274, 0, 0, 0, 0,
	0, 367, 368, 369, 1166, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 1193, 373, 374, 375, 1179, 1180,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 1189, 0, 1116, 386, 0, 387, 388, 389, 390,
	391, 1152, 1153, 1156, 471, 1195, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 275, 399, 400,
	401, 403, 0, 1194, 402, 1161, 1162, 0, 1122, 0,
	404, 405, 1196, 1154, 1197, 406, 407, 408, 1198, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 1190, 1199, 420, 421, 1200,
	0, 422, 0, 0, 0, 423, 424, 427, 1145, 1144,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 1201,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 1202, 467, 456, 1084, 276, 1203, 468,
	469, 1107, 1155, 470, 1169, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	662, 1204, 481, 1205, 1184, 482, 483, 1094, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 1185, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 1165, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 1206, 536, 537,
	538, 539, 540, 1095, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 0, 558,
	559, 557, 560, 561, 562, 1148, 563, 564, 546, 547,
	565, 566, 1207, 567, 568, 569, 570, 571, 572, 573,
	1163, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 1210, 581, 582, 583, 584, 1186, 588, 589,
	0, 590, 591, 1081, 587, 578, 0, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 1175, 1176,
	1177, 1178, 0, 609, 0, 601, 602, 603, 1187, 604,
	1188, 1105, 605, 606, 607, 608, 0, 610, 611, 0,
	1088, 612, 613, 614, 616, 617, 615, 618, 1149, 619,
	0, 0, 620, 621, 622, 679, 1172, 1209, 3721, 624,
	623, 625, 682, 0, 626, 0, 0, 0, 0, 627,
	628, 683, 629, 630, 631, 1085, 0, 0, 0, 0,
	1127, 1099, 1100, 1101, 1097, 1098, 1110, 0, 1080, 0,
	0, 0, 0, 0, 0, 1078, 1079, 277, 279, 278,
	280, 281, 282, 283, 1111, 284, 285, 0, 1109, 0,
	0, 0, 1151, 1115, 0, 0, 0, 286, 287, 1191,
	288, 289, 290, 291, 292, 293, 633, 1164, 0, 294,
	1171, 295, 1170, 0, 1181, 296, 297, 298, 299, 300,
	301, 1117, 1150, 1082, 302, 1211, 1212, 640, 0, 303,
	304, 1157, 0, 1138, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1192, 327, 328, 329, 1141, 1139, 1140, 1147,
	1143, 1142, 1146, 330, 331, 332, 333, 334, 1174, 335,
	1168, 1167, 1087, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 1159, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 1093,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	1182, 1183, 366, 1106, 274, 0, 0, 0, 0, 0,
	367, 368, 369, 1166, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 1193, 373, 374, 375, 1179, 1180, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	1189, 0, 1116, 386, 0, 387, 388, 389, 390, 391,
	1152, 1153, 1156, 471, 1195, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 275, 399, 400, 401,
	403, 0, 1194, 402, 1161, 1162, 0, 1122, 0, 404,
	405, 1196, 1154, 1197, 406, 407, 408, 1198, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 1190, 1199, 420, 421, 1200, 0,
	422, 0, 0, 0, 423, 424, 427, 1145, 1144, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 1201, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 1202, 467, 456, 1084, 276, 1203, 468, 469,
	1107, 1155, 470, 1169, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	1204, 481, 1205, 1184, 482, 483, 1094, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 1185, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 1165, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 1206, 536, 537, 538,
	539, 540, 1095, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 1148, 563, 564, 546, 547, 565,
	566, 1207, 567, 568, 569, 570, 571, 572, 573, 1163,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 1210, 581, 582, 583, 584, 1186, 588, 589, 0,
	590, 591, 1081, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 1175, 1176, 1177,
	1178, 0, 609, 0, 601, 602, 603, 1187, 604, 1188,
	1105, 605, 606, 607, 608, 0, 610, 611, 0, 1088,
	612, 613, 614, 616, 617, 615, 618, 1149, 619, 0,
	0, 620, 621, 622, 679, 1172, 1209, 0, 624, 623,
	625, 682, 0, 626, 0, 0, 0, 0, 627, 628,
	683, 629, 630, 631, 1085, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1080, 0, 0,
	0, 0, 0, 0, 1078, 1079, 1937, 0, 0, 0,
	0, 0, 0, 1111, 0, 0, 0, 1109, 1127, 1099,
	1100, 1101, 1097, 1098, 1110, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	1151, 1115, 0, 0, 0, 286, 287, 1191, 288, 289,
	290, 291, 292, 293, 633, 1164, 0, 294, 1171, 295,
	1170, 0, 1181, 296, 297, 298, 299, 300, 301, 1117,
	1150, 1082, 302, 1211, 1212, 640, 0, 303, 304, 1157,
	0, 1138, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1192, 327, 328, 329, 1141, 1139, 1140, 1147, 1143, 1142,
	1146, 330, 331, 332, 333, 334, 1174, 335, 1168, 1167,
	1087, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 1159, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 1093, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 1182, 1183,
	366, 1106, 274, 0, 0, 0, 0, 0, 367, 368,
	369, 1166, 0, 0, 0, 370, 0, 371, 372, 0,
	2714, 1193, 373, 374, 375, 1179, 1180, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 1189, 0,
	1116, 386, 0, 387, 388, 389, 390, 391, 1152, 1153,
	1156, 471, 1195, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 275, 399, 400, 401, 403, 0,
	1194, 402, 1161, 1162, 0, 1122, 0, 404, 405, 1196,
	1154, 1197, 406, 407, 408, 1198, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 1190, 1199, 420, 421, 1200, 0, 422, 0,
	0, 0, 423, 424, 427, 1145, 1144, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 1201, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	1202, 467, 456, 1084, 276, 1203, 468, 469, 1107, 1155,
	470, 1169, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 1204, 481,
	1205, 1184, 482, 483, 1094, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 1185, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 1165, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 1206, 536, 537, 538, 539, 540,
	1095, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 1148, 563, 564, 546, 547, 565, 566, 1207,
	567, 568, 569, 570, 571, 572, 573, 1163, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 1210,
	581, 582, 583, 584, 1186, 588, 589, 0, 590, 591,
	1081, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 1175, 1176, 1177, 1178, 0,
	609, 0, 601, 602, 603, 1187, 604, 1188, 1105, 605,
	606, 607, 608, 0, 610, 611, 0, 1088, 612, 613,
	614, 616, 617, 615, 618, 1149, 619, 0, 0, 620,
	621, 622, 679, 1172, 1209, 0, 624, 623, 625, 682,
	0, 626, 0, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 1085, 0, 0, 0, 0, 1127, 1099, 1100,
	1101, 1097, 1098, 1110, 0, 1080, 0, 0, 0, 0,
	0, 0, 1078, 1079, 277, 279, 278, 280, 281, 282,
	283, 1111, 284, 285, 0, 1109, 0, 0, 0, 1151,
	1115, 0, 0, 0, 286, 287, 1191, 288, 289, 290,
	291, 292, 293, 633, 1164, 0, 294, 1171, 295, 1170,
	0, 1181, 296, 297, 298, 299, 300, 301, 1117, 1150,
	1082, 302, 1211, 1212, 640, 0, 303, 304, 1157, 0,
	1138, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1192,
	327, 328, 329, 1141, 1139, 1140, 1147, 1143, 1142, 1146,
	330, 331, 332, 333, 334, 1174, 335, 1168, 1167, 1087,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 1159, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 1093, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 1182, 1183, 366,
	1106, 274, 0, 0, 0, 0, 0, 367, 368, 369,
	1166, 0, 0, 0, 370, 0, 371, 372, 0, 0,
	1193, 373, 374, 375, 1179, 1180, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 1189, 0, 1116,
	386, 0, 387, 388, 389, 390, 391, 1152, 1153, 1156,
	471, 1195, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 275, 399, 400, 401, 403, 0, 1194,
	402, 1161, 1162, 0, 1122, 0, 404, 405, 1196, 1154,
	1197, 406, 407, 408, 1198, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 1190, 1199, 420, 421, 1200, 0, 422, 0, 0,
	0, 423, 424, 427, 1145, 1144, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 1201, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 1202,
	467, 456, 1084, 276, 1203, 468, 469, 1107, 1155, 470,
	1169, 472, 473, 0, 0, 474, 0, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 1204, 481, 1205,
	1184, 482, 483, 1094, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 1185, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	1165, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 1206, 536, 537, 538, 539, 540, 1095,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 1148, 563, 564, 546, 547, 565, 566, 1207, 567,
	568, 569, 570, 571, 572, 573, 1163, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 1210, 581,
	582, 583, 584, 1186, 588, 589, 0, 590, 591, 1081,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 1175, 1176, 1177, 1178, 0, 609,
	0, 601, 602, 603, 1187, 604, 1188, 1105, 605, 606,
	607, 608, 0, 610, 611, 0, 1088, 612, 613, 614,
	616, 617, 615, 618, 1149, 619, 0, 0, 620, 621,
	622, 679, 1172, 1209, 0, 624, 623, 625, 682, 0,
	626, 0, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 1085, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1080, 0, 0, 0, 0, 0,
	0, 1078, 1079, 0, 0, 0, 0, 0, 0, 0,
	1111, 1866, 0, 2719, 1109, 1127, 1099, 1100, 1101, 1097,
	1098, 1110, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 1151, 1115, 0,
	0, 0, 286, 287, 1191, 288, 289, 290, 291, 292,
	293, 633, 1164, 0, 294, 1171, 295, 1170, 0, 1181,
	296, 297, 298, 299, 300, 301, 1117, 1150, 1082, 302,
	1211, 1212, 640, 0, 303, 304, 1157, 0, 1138, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1192, 327, 328,
	329, 1141, 1139, 1140, 1147, 1143, 1142, 1146, 330, 331,
	332, 333, 334, 1174, 335, 1168, 1167, 1087, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 1159, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 1093, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 1182, 1183, 366, 1106, 274,
	0, 0, 0, 0, 0, 367, 368, 369, 1166, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 1193, 373,
	374, 375, 1179, 1180, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 1189, 0, 1116, 386, 0,
	387, 388, 389, 390, 391, 1152, 1153, 1156, 471, 1195,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 275, 399, 400, 401, 403, 0, 1194, 402, 1161,
	1162, 0, 1122, 0, 404, 405, 1196, 1154, 1197, 406,
	407, 408, 1198, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 1190,
	1199, 420, 421, 1200, 0, 422, 0, 0, 0, 423,
	424, 427, 1145, 1144, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 1201, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 1202, 467, 456,
	1084, 276, 1203, 468, 469, 1107, 1155, 470, 1169, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 1204, 481, 1205, 1184, 482,
	483, 1094, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 1185, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 1165, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 1206, 536, 537, 538, 539, 540, 1095, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 561, 562, 1148,
	563, 564, 546, 547, 565, 566, 1207, 567, 568, 569,
	570, 571, 572, 573, 1163, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 1210, 581, 582, 583,
	584, 1186, 588, 589, 0, 590, 591, 1081, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 1175, 1176, 1177, 1178, 0, 609, 0, 601,
	602, 603, 1187, 604, 1188, 1105, 605, 606, 607, 608,
	0, 610, 611, 0, 1088, 612, 613, 614, 616, 617,
	615, 618, 1149, 619, 0, 0, 620, 621, 622, 679,
	1172, 1209, 0, 624, 623, 625, 682, 0, 626, 0,
	0, 0, 0, 627, 628, 683, 629, 630, 631, 1085,
	0, 0, 2717, 0, 1127, 1099, 1100, 1101, 1097, 1098,
	1110, 0, 1080, 0, 0, 0, 0, 0, 0, 1078,
	1079, 277, 279, 278, 280, 281, 282, 283, 1111, 284,
	285, 0, 1109, 0, 0, 0, 1151, 1115, 0, 0,
	0, 286, 287, 1191, 288, 289, 290, 291, 292, 293,
	633, 1164, 0, 294, 1171, 295, 1170, 0, 1181, 296,
	297, 298, 299, 300, 301, 1117, 1150, 1082, 302, 1211,
	1212, 640, 0, 303, 304, 1157, 0, 1138, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1192, 327, 328, 329,
	1141, 1139, 1140, 1147, 1143, 1142, 1146, 330, 331, 332,
	333, 334, 1174, 335, 1168, 1167, 1087, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 1159, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 1093, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 1182, 1183, 366, 1106, 274, 0,
	0, 0, 0, 0, 367, 368, 369, 1166, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 1193, 373, 374,
	375, 1179, 1180, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 1189, 0, 1116, 386, 0, 387,
	388, 389, 390, 391, 1152, 1153, 1156, 471, 1195, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	275, 399, 400, 401, 403, 0, 1194, 402, 1161, 1162,
	0, 1122, 0, 404, 405, 1196, 1154, 1197, 406, 407,
	408, 1198, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 1190, 1199,
	420, 421, 1200, 0, 422, 0, 0, 0, 423, 424,
	427, 1145, 1144, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 1201, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 1202, 467, 456, 1084,
	276, 1203, 468, 469, 1107, 1155, 470, 1169, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 1204, 481, 1205, 1184, 482, 483,
	1094, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 1185, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 1165, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	1206, 536, 537, 538, 539, 540, 1095, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 1148, 563,
	564, 546, 547, 565, 566, 1207, 567, 568, 569, 570,
	571, 572, 573, 1163, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 1210, 581, 582, 583, 584,
	1186, 588, 589, 0, 590, 591, 1081, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 1175, 1176, 1177, 1178, 0, 609, 0, 601, 602,
	603, 1187, 604, 1188, 1105, 605, 606, 607, 608, 0,
	610, 611, 0, 1088, 612, 613, 614, 616, 617, 615,
	618, 1149, 619, 0, 0, 620, 621, 622, 679, 1172,
	1209, 0, 624, 623, 625, 682, 0, 626, 0, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 1085, 0,
	0, 2705, 0, 1127, 1099, 1100, 1101, 1097, 1098, 1110,
	0, 1080, 0, 0, 0, 0, 0, 0, 1078, 1079,
	277, 279, 278, 280, 281, 282, 283, 1111, 284, 285,
	0, 1109, 0, 0, 0, 1151, 1115, 0, 0, 0,
	286, 287, 1191, 288, 289, 290, 291, 292, 293, 633,
	1164, 0, 294, 1171, 295, 1170, 0, 1181, 296, 297,
	298, 299, 300, 301, 1117, 1150, 1082, 302, 1211, 1212,
	640, 0, 303, 304, 1157, 0, 1138, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1192, 327, 328, 329, 1141,
	1139, 1140, 1147, 1143, 1142, 1146, 330, 331, 332, 333,
	334, 1174, 335, 1168, 1167, 1087, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	1159, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 1093, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 1182, 1183, 366, 1106, 274, 0, 0,
	0, 0, 0, 367, 368, 369, 1166, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 1193, 373, 374, 375,
	1179, 1180, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 1189, 0, 1116, 386, 0, 387, 388,
	389, 390, 391, 1152, 1153, 1156, 471, 1195, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 275,
	399, 400, 401, 403, 0, 1194, 402, 1161, 1162, 0,
	1122, 0, 404, 405, 1196, 1154, 1197, 406, 407, 408,
	1198, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 1190, 1199, 420,
	421, 1200, 0, 422, 0, 0, 0, 423, 424, 427,
	1145, 1144, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 1201, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 1202, 467, 456, 1084, 276,
	1203, 468, 469, 1107, 1155, 470, 1169, 472, 473, 0,
	0, 474, 0, 0, 0, 476, 477, 478, 0, 0,
	479, 480, 662, 1204, 481, 1205, 1184, 482, 483, 1094,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	1185, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 1165, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 1206,
	536, 537, 538, 539, 540, 1095, 541, 0, 542, 543,
	549, 550, 551, 544, 545, 552, 553, 554, 555, 556,
	0, 558, 559, 557, 560, 561, 562, 1148, 563, 564,
	546, 547, 565, 566, 1207, 567, 568, 569, 570, 571,
	572, 573, 1163, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 1210, 581, 582, 583, 584, 1186,
	588, 589, 0, 590, 591, 1081, 587, 578, 0, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	1175, 1176, 1177, 1178, 0, 609, 0, 601, 602, 603,
	1187, 604, 1188, 1105, 605, 606, 607, 608, 0, 610,
	611, 0, 1088, 612, 613, 614, 616, 617, 615, 618,
	1149, 619, 0, 0, 620, 621, 622, 679, 1172, 1209,
	0, 624, 623, 625, 682, 0, 626, 0, 0, 0,
	0, 627, 628, 683, 629, 630, 631, 1085, 0, 0,
	2693, 0, 1127, 1099, 1100, 1101, 1097, 1098, 1110, 0,
	1080, 0, 0, 0, 0, 0, 0, 1078, 1079, 277,
	279, 278, 280, 281, 282, 283, 1111, 284, 285, 0,
	1109, 0, 0, 0, 1151, 1115, 0, 0, 0, 286,
	287, 1191, 288, 289, 290, 291, 292, 293, 633, 1164,
	0, 294, 1171, 295, 1170, 0, 1181, 296, 297, 298,
	299, 300, 301, 1117, 1150, 1082, 302, 1211, 1212, 640,
	0, 303, 304, 1157, 0, 1138, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1192, 327, 328, 329, 1141, 1139,
	1140, 1147, 1143, 1142, 1146, 330, 331, 332, 333, 334,
	1174, 335, 1168, 1167, 1087, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 1159,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 1093, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 1182, 1183, 366, 1106, 274, 0, 0, 0,
	0, 0, 367, 368, 369, 1166, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 1193, 373, 374, 375, 1179,
	1180, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 1189, 0, 1116, 386, 0, 387, 388, 389,
	390, 391, 1152, 1153, 1156, 471, 1195, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 275, 399,
	400, 401, 403, 0, 1194, 402, 1161, 1162, 0, 1122,
	0, 404, 405, 1196, 1154, 1197, 406, 407, 408, 1198,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 1190, 1199, 420, 421,
	1200, 0, 422, 0, 0, 0, 423, 424, 427, 1145,
	1144, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	1201, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 1202, 467, 456, 1084, 276, 1203,
	468, 469, 1107, 1155, 470, 1169, 472, 473, 0, 0,
	474, 0, 0, 0, 476, 477, 478, 0, 0, 479,
	480, 662, 1204, 481, 1205, 1184, 482, 483, 1094, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 1185,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 1165, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 1206, 536,
	537, 538, 539, 540, 1095, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 552, 553, 554, 555, 556, 0,
	558, 559, 557, 560, 561, 562, 1148, 563, 564, 546,
	547, 565, 566, 1207, 567, 568, 569, 570, 571, 572,
	573, 1163, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 1210, 581, 582, 583, 584, 1186, 588,
	589, 0, 590, 591, 1081, 587, 578, 0, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 0, 600, 1175,
	1176, 1177, 1178, 0, 609, 0, 601, 602, 603, 1187,
	604, 1188, 1105, 605, 606, 607, 608, 0, 610, 611,
	0, 1088, 612, 613, 614, 616, 617, 615, 618, 1149,
	619, 0, 0, 620, 621, 622, 679, 1172, 1209, 0,
	624, 623, 625, 682, 0, 626, 0, 0, 0, 0,
	627, 628, 683, 629, 630, 631, 1085, 0, 0, 2691,
	0, 2682, 2689, 1100, 1101, 1097, 1098, 1110, 0, 1080,
	0, 0, 0, 0, 0, 0, 1078, 1079, 277, 279,
	278, 280, 281, 282, 283, 1111, 284, 285, 0, 1109,
	0, 0, 0, 1151, 1115, 0, 0, 0, 286, 287,
	1191, 288, 289, 290, 291, 292, 293, 633, 1164, 0,
	294, 1171, 295, 1170, 0, 1181, 296, 297, 298, 299,
	300, 301, 1117, 1150, 1082, 302, 1211, 1212, 640, 0,
	303, 304, 1157, 0, 1138, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1192, 327, 328, 329, 1141, 1139, 1140,
	1147, 1143, 1142, 1146, 330, 331, 332, 333, 334, 1174,
	2685, 1168, 1167, 1087, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 1159, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	1093, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 1182, 1183, 366, 1106, 274, 0, 0, 0, 0,
	0, 367, 368, 369, 1166, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 1193, 373, 374, 375, 1179, 1180,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 1189, 0, 1116, 386, 0, 387, 388, 389, 2686,
	391, 1152, 1153, 1156, 471, 1195, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 275, 399, 400,
	401, 403, 0, 1194, 402, 1161, 1162, 0, 1122, 0,
	404, 405, 1196, 1154, 1197, 406, 407, 408, 1198, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 1190, 1199, 420, 421, 1200,
	0, 422, 0, 0, 0, 423, 424, 427, 1145, 1144,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 2687, 437, 2684, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 1201,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 1202, 467, 456, 1084, 276, 1203, 468,
	469, 1107, 1155, 470, 1169, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	662, 1204, 481, 1205, 1184, 482, 483, 1094, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 1185, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 1165, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 1206, 536, 537,
	538, 539, 540, 1095, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 2688, 0, 558,
	559, 557, 560, 561, 562, 1148, 563, 564, 546, 547,
	565, 566, 1207, 567, 568, 569, 570, 571, 572, 573,
	1163, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 1210, 581, 582, 583, 584, 1186, 588, 589,
	0, 590, 591, 1081, 587, 578, 0, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 1175, 1176,
	1177, 1178, 0, 609, 0, 601, 602, 603, 1187, 604,
	1188, 1105, 605, 606, 607, 608, 0, 610, 611, 0,
	1088, 612, 613, 614, 616, 617, 615, 618, 1149, 619,
	0, 0, 620, 621, 622, 679, 1172, 1209, 0, 624,
	623, 625, 682, 0, 626, 0, 0, 0, 0, 627,
	628, 683, 629, 2683, 631, 1085, 0, 0, 2679, 0,
	2682, 2689, 1100, 1101, 1097, 1098, 1110, 0, 1080, 0,
	0, 0, 0, 0, 0, 1078, 1079, 277, 279, 278,
	280, 281, 282, 283, 1111, 284, 285, 0, 1109, 0,
	0, 0, 1151, 1115, 0, 0, 0, 286, 287, 1191,
	288, 289, 290, 291, 292, 293, 633, 1164, 0, 294,
	1171, 295, 1170, 0, 1181, 296, 297, 298, 299, 300,
	301, 1117, 1150, 1082, 302, 1211, 1212, 640, 0, 303,
	304, 1157, 0, 1138, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1192, 327, 328, 329, 1141, 1139, 1140, 1147,
	1143, 1142, 1146, 330, 331, 332, 333, 334, 1174, 2685,
	1168, 1167, 1087, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 1159, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 1093,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	1182, 1183, 366, 1106, 274, 0, 0, 0, 0, 0,
	367, 368, 369, 1166, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 1193, 373, 374, 375, 1179, 1180, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	1189, 0, 1116, 386, 0, 387, 388, 389, 2686, 391,
	1152, 1153, 1156, 471, 1195, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 275, 399, 400, 401,
	403, 0, 1194, 402, 1161, 1162, 0, 1122, 0, 404,
	405, 1196, 1154, 1197, 406, 407, 408, 1198, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 1190, 1199, 420, 421, 1200, 0,
	422, 0, 0, 0, 423, 424, 427, 1145, 1144, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	2687, 437, 2684, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 1201, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 1202, 467, 456, 1084, 276, 1203, 468, 469,
	1107, 1155, 470, 1169, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	1204, 481, 1205, 1184, 482, 483, 1094, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 1185, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 1165, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 1206, 536, 537, 538,
	539, 540, 1095, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 2688, 0, 558, 559,
	557, 560, 561, 562, 1148, 563, 564, 546, 547, 565,
	566, 1207, 567, 568, 569, 570, 571, 572, 573, 1163,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 1210, 581, 582, 583, 584, 1186, 588, 589, 0,
	590, 591, 1081, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 1175, 1176, 1177,
	1178, 0, 609, 0, 601, 602, 603, 1187, 604, 1188,
	1105, 605, 606, 607, 608, 0, 610, 611, 0, 1088,
	612, 613, 614, 616, 617, 615, 618, 1149, 619, 0,
	0, 620, 621, 622, 679, 1172, 1209, 0, 624, 623,
	625, 682, 0, 626, 0, 0, 0, 0, 627, 628,
	683, 629, 2683, 631, 1085, 0, 0, 0, 0, 1127,
	1099, 1100, 1101, 1097, 1098, 1110, 0, 1080, 0, 0,
	0, 0, 0, 0, 1078, 1079, 277, 279, 278, 280,
	281, 282, 283, 1111, 284, 285, 0, 1109, 0, 0,
	0, 1151, 1115, 0, 0, 0, 286, 287, 1191, 288,
	289, 290, 291, 292, 293, 633, 1164, 0, 294, 1171,
	295, 1170, 0, 1181, 296, 297, 298, 299, 300, 301,
	1117, 1150, 1082, 302, 1211, 1212, 640, 0, 303, 304,
	1157, 0, 1138, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1192, 327, 328, 329, 1141, 1139, 1140, 1147, 1143,
	1142, 1146, 330, 331, 332, 333, 334, 1174, 335, 1168,
	1167, 1087, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 1159, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 1093, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 1182,
	1183, 366, 1106, 274, 0, 0, 0, 0, 0, 367,
	368, 369, 1166, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 1193, 373, 374, 375, 1179, 1180, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 1189,
	0, 1116, 386, 0, 387, 388, 389, 390, 391, 1152,
	1153, 1156, 471, 1195, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 275, 399, 400, 401, 403,
	0, 1194, 402, 1161, 1162, 0, 1122, 0, 404, 405,
	1196, 1154, 1197, 406, 407, 408, 1198, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 1190, 1199, 420, 421, 1200, 0, 422,
	0, 0, 0, 423, 424, 427, 1145, 1144, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 1201, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 1202, 467, 456, 1084, 276, 1203, 468, 469, 1107,
	1155, 470, 1169, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 1204,
	481, 1205, 1184, 482, 483, 1094, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 1185, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 1165, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 1206, 536, 537, 538, 539,
	540, 1095, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 1148, 563, 564, 546, 547, 565, 566,
	1207, 567, 568, 569, 570, 571, 572, 573, 1163, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	1210, 581, 582, 583, 584, 1186, 588, 589, 0, 590,
	591, 1081, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 1175, 1176, 1177, 1178,
	0, 609, 0, 601, 602, 603, 1187, 604, 1188, 1105,
	605, 606, 607, 608, 0, 610, 611, 0, 1088, 612,
	613, 614, 616, 617, 615, 618, 1149, 619, 0, 0,
	620, 621, 622, 679, 1172, 1209, 0, 624, 623, 625,
	682, 0, 626, 0, 0, 0, 0, 627, 628, 683,
	629, 630, 631, 1085, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1080, 0, 0, 0,
	0, 0, 0, 1078, 1079, 0, 0, 0, 0, 0,
	1874, 0, 1111, 0, 0, 0, 1109, 1127, 1099, 1100,
	1101, 1097, 1098, 1110, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 2434, 284, 285, 0, 0, 0, 0, 0, 1151,
	1115, 0, 0, 0, 286, 287, 1191, 288, 289, 290,
	291, 292, 293, 633, 1164, 0, 294, 1171, 295, 1170,
	0, 1181, 296, 297, 298, 299, 300, 301, 1117, 1150,
	1082, 302, 1211, 1212, 640, 0, 303, 304, 1157, 0,
	1138, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1192,
	327, 328, 329, 1141, 1139, 1140, 1147, 1143, 1142, 1146,
	330, 331, 332, 333, 334, 1174, 335, 1168, 1167, 1087,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 1159, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 1093, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 1182, 1183, 366,
	1106, 274, 0, 0, 0, 0, 0, 367, 368, 369,
	1166, 0, 0, 0, 370, 0, 371, 372, 0, 0,
	1193, 373, 374, 375, 1179, 1180, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 1189, 0, 1116,
	386, 0, 387, 388, 389, 390, 391, 1152, 1153, 1156,
	471, 1195, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 275, 399, 400, 401, 403, 0, 1194,
	402, 1161, 1162, 0, 1122, 0, 404, 405, 1196, 1154,
	1197, 406, 407, 408, 1198, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 1190, 1199, 420, 421, 1200, 0, 422, 0, 0,
	0, 423, 424, 427, 1145, 1144, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 1201, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 1202,
	467, 456, 1084, 276, 1203, 468, 469, 1107, 1155, 470,
	1169, 472, 473, 0, 0, 474, 0, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 1204, 481, 1205,
	1184, 482, 483, 1094, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 1185, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	1165, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 1206, 536, 537, 538, 539, 540, 1095,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 1148, 563, 564, 546, 547, 565, 566, 1207, 567,
	568, 569, 570, 571, 572, 573, 1163, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 1210, 581,
	582, 583, 584, 1186, 588, 589, 0, 590, 591, 1081,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 1175, 1176, 1177, 1178, 0, 609,
	0, 601, 602, 603, 1187, 604, 1188, 1105, 605, 606,
	607, 608, 0, 610, 611, 0, 1088, 612, 613, 614,
	616, 617, 615, 618, 1149, 619, 0, 0, 620, 621,
	622, 679, 1172, 1209, 0, 624, 623, 625, 682, 0,
	626, 0, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 1085, 0, 0, 2398, 0, 1127, 1099, 1100, 1101,
	1097, 1098, 1110, 0, 1080, 0, 0, 0, 0, 0,
	0, 1078, 1079, 277, 279, 278, 280, 281, 282, 283,
	1111, 284, 285, 0, 1109, 0, 0, 0, 1151, 1115,
	0, 0, 0, 286, 287, 1191, 288, 289, 290, 291,
	292, 293, 633, 1164, 0, 294, 1171, 295, 1170, 0,
	1181, 296, 297, 298, 299, 300, 301, 1117, 1150, 1082,
	302, 1211, 1212, 640, 0, 303, 304, 1157, 0, 1138,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1192, 327,
	328, 329, 1141, 1139, 1140, 1147, 1143, 1142, 1146, 330,
	331, 332, 333, 334, 1174, 335, 1168, 1167, 1087, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 1159, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 1093, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 1182, 1183, 366, 1106,
	274, 0, 0, 0, 0, 0, 367, 368, 369, 1166,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 1193,
	373, 374, 375, 1179, 1180, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 1189, 0, 1116, 386,
	0, 387, 388, 389, 390, 391, 1152, 1153, 1156, 471,
	1195, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 275, 399, 400, 401, 403, 0, 1194, 402,
	1161, 1162, 0, 1122, 0, 404, 405, 1196, 1154, 1197,
	406, 407, 408, 1198, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	1190, 1199, 420, 421, 1200, 0, 422, 0, 0, 0,
	423, 424, 427, 1145, 1144, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 1201, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 1202, 467,
	456, 1084, 276, 1203, 468, 469, 1107, 1155, 470, 1169,
	472, 473, 0, 0, 474, 0, 0, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 1204, 481, 1205, 1184,
	482, 483, 1094, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 1185, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 1165,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 1206, 536, 537, 538, 539, 540, 1095, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 0, 558, 559, 557, 560, 561, 562,
	1148, 563, 564, 546, 547, 565, 566, 1207, 567, 568,
	569, 570, 571, 572, 573, 1163, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 1210, 581, 582,
	583, 584, 1186, 588, 589, 0, 590, 591, 1081, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 1175, 1176, 1177, 1178, 0, 609, 0,
	601, 602, 603, 1187, 604, 1188, 1105, 605, 606, 607,
	608, 0, 610, 611, 0, 1088, 612, 613, 614, 616,
	617, 615, 618, 1149, 619, 0, 0, 620, 621, 622,
	679, 1172, 1209, 0, 624, 623, 625, 682, 0, 626,
	0, 0, 0, 0, 627, 628, 683, 629, 630, 631,
	1085, 0, 0, 2373, 0, 1127, 1099, 1100, 1101, 1097,
	1098, 1110, 0, 1080, 0, 0, 0, 0, 0, 0,
	1078, 1079, 277, 279, 278, 280, 281, 282, 283, 1111,
	284, 285, 0, 1109, 0, 0, 0, 1151, 1115, 0,
	0, 0, 286, 287, 1191, 288, 289, 290, 291, 292,
	293, 633, 1164, 0, 294, 1171, 295, 1170, 0, 1181,
	296, 297, 298, 299, 300, 301, 1117, 1150, 1082, 302,
	1211, 1212, 640, 0, 303, 304, 1157, 0, 1138, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1192, 327, 328,
	329, 1141, 1139, 1140, 1147, 1143, 1142, 1146, 330, 331,
	332, 333, 334, 1174, 335, 1168, 1167, 1087, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 1159, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 1093, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 1182, 1183, 366, 1106, 274,
	0, 0, 0, 0, 0, 367, 368, 369, 1166, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 1193, 373,
	374, 375, 1179, 1180, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 1189, 0, 1116, 386, 0,
	387, 388, 389, 390, 391, 1152, 1153, 1156, 471, 1195,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 275, 399, 400, 401, 403, 0, 1194, 402, 1161,
	1162, 0, 1122, 0, 404, 405, 1196, 1154, 1197, 406,
	407, 408, 1198, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 1190,
	1199, 420, 421, 1200, 0, 422, 0, 0, 0, 423,
	424, 427, 1145, 1144, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 1201, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 1202, 467, 456,
	1084, 276, 1203, 468, 469, 1107, 1155, 470, 1169, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 1204, 481, 1205, 1184, 482,
	483, 1094, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 1185, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 1165, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 1206, 536, 537, 538, 539, 540, 1095, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 561, 562, 1148,
	563, 564, 546, 547, 565, 566, 1207, 567, 568, 569,
	570, 571, 572, 573, 1163, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 1210, 581, 582, 583,
	584, 1186, 588, 589, 0, 590, 591, 1081, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 1175, 1176, 1177, 1178, 0, 609, 0, 601,
	602, 603, 1187, 604, 1188, 1105, 605, 606, 607, 608,
	0, 610, 611, 0, 1088, 612, 613, 614, 616, 617,
	615, 618, 1149, 619, 0, 0, 620, 621, 622, 679,
	1172, 1209, 0, 624, 623, 625, 682, 0, 626, 0,
	0, 0, 0, 627, 628, 683, 629, 630, 631, 1085,
	0, 0, 1714, 0, 1127, 1099, 1100, 1101, 1097, 1098,
	1110, 0, 1080, 0, 0, 0, 0, 0, 0, 1078,
	1079, 277, 279, 278, 280, 281, 282, 283, 1111, 284,
	285, 0, 1109, 0, 0, 0, 1151, 1115, 0, 0,
	0, 286, 287, 1191, 288, 289, 290, 291, 292, 293,
	633, 1164, 0, 294, 1171, 295, 1170, 0, 1181, 296,
	297, 298, 299, 300, 301, 1117, 1150, 1082, 302, 1211,
	1212, 640, 0, 303, 304, 1157, 0, 1138, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1192, 327, 328, 329,
	1141, 1139, 1140, 1147, 1143, 1142, 1146, 330, 331, 332,
	333, 334, 1174, 335, 1168, 1167, 1087, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 1159, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 1093, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 1182, 1183, 366, 1106, 274, 0,
	0, 0, 0, 0, 367, 368, 369, 1166, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 1193, 373, 374,
	375, 1179, 1180, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 1189, 0, 1116, 386, 0, 387,
	388, 389, 390, 391, 1152, 1153, 1156, 471, 1195, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	275, 399, 400, 401, 403, 0, 1194, 402, 1161, 1162,
	0, 1122, 0, 404, 405, 1196, 1154, 1197, 406, 407,
	408, 1198, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 1190, 1199,
	420, 421, 1200, 0, 422, 0, 0, 0, 423, 424,
	427, 1145, 1144, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 1201, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 1202, 467, 456, 1084,
	276, 1203, 468, 469, 1107, 1155, 470, 1169, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 1204, 481, 1205, 1184, 482, 483,
	1094, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 1185, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 1165, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	1206, 536, 537, 538, 539, 540, 1095, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 1148, 563,
	564, 546, 547, 565, 566, 1207, 567, 568, 569, 570,
	571, 572, 573, 1163, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 1210, 581, 582, 583, 584,
	1186, 588, 589, 0, 590, 591, 1081, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 1175, 1176, 1177, 1178, 0, 609, 0, 601, 602,
	603, 1187, 604, 1188, 1105, 605, 606, 607, 608, 0,
	610, 611, 0, 1088, 612, 613, 614, 616, 617, 615,
	618, 1149, 619, 0, 0, 620, 621, 622, 679, 1172,
	1209, 0, 624, 623, 625, 682, 0, 626, 0, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 1085, 0,
	0, 1643, 0, 1127, 1099, 1100, 1101, 1097, 1098, 1110,
	0, 1080, 0, 0, 0, 0, 0, 0, 1078, 1079,
	277, 279, 278, 280, 281, 282, 283, 1111, 284, 285,
	0, 1109, 0, 0, 0, 1151, 1115, 0, 0, 0,
	286, 287, 1191, 288, 289, 290, 291, 292, 293, 633,
	1164, 0, 294, 1171, 295, 1170, 0, 1181, 296, 297,
	298, 299, 300, 301, 1117, 1150, 1082, 302, 1211, 1212,
	640, 0, 303, 304, 1157, 0, 1138, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1192, 327, 328, 329, 1141,
	1139, 1140, 1147, 1143, 1142, 1146, 330, 331, 332, 333,
	334, 1174, 335, 1168, 1167, 1087, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	1159, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 1093, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 1182, 1183, 366, 1106, 274, 0, 0,
	0, 0, 0, 367, 368, 369, 1166, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 1193, 373, 374, 375,
	1179, 1180, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 1189, 0, 1116, 386, 0, 387, 388,
	389, 390, 391, 1152, 1153, 1156, 471, 1195, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 275,
	399, 400, 401, 403, 0, 1194, 402, 1161, 1162, 0,
	1122, 0, 404, 405, 1196, 1154, 1197, 406, 407, 408,
	1198, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 1190, 1199, 420,
	421, 1200, 0, 422, 0, 0, 0, 423, 424, 427,
	1145, 1144, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 1201, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 1202, 467, 456, 1084, 276,
	1203, 468, 469, 1107, 1155, 470, 1169, 472, 473, 0,
	0, 474, 0, 0, 0, 476, 477, 478, 0, 0,
	479, 480, 662, 1204, 481, 1205, 1184, 482, 483, 1094,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	1185, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 1165, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 1206,
	536, 537, 538, 539, 540, 1095, 541, 0, 542, 543,
	549, 550, 551, 544, 545, 552, 553, 554, 555, 556,
	0, 558, 559, 557, 560, 561, 562, 1148, 563, 564,
	546, 547, 565, 566, 1207, 567, 568, 569, 570, 571,
	572, 573, 1163, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 1210, 581, 582, 583, 584, 1186,
	588, 589, 0, 590, 591, 1081, 587, 578, 0, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	1175, 1176, 1177, 1178, 0, 609, 0, 601, 602, 603,
	1187, 604, 1188, 1105, 605, 606, 607, 608, 0, 610,
	611, 0, 1088, 612, 613, 614, 616, 617, 615, 618,
	1149, 619, 0, 0, 620, 621, 622, 679, 1172, 1209,
	0, 624, 623, 625, 682, 0, 626, 0, 0, 0,
	0, 627, 628, 683, 629, 630, 631, 1085, 0, 0,
	1638, 0, 1127, 1099, 1100, 1101, 1097, 1098, 1110, 0,
	1080, 0, 0, 0, 0, 0, 0, 1078, 1079, 277,
	279, 278, 280, 281, 282, 283, 1111, 284, 285, 0,
	1109, 0, 0, 0, 1151, 1115, 0, 0, 0, 286,
	287, 1191, 288, 289, 290, 291, 292, 293, 633, 1164,
	0, 294, 1171, 295, 1170, 0, 1181, 296, 297, 298,
	299, 300, 301, 1117, 1150, 1082, 302, 1211, 1212, 640,
	0, 303, 304, 1157, 0, 1138, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1192, 327, 328, 329, 1141, 1139,
	1140, 1147, 1143, 1142, 1146, 330, 331, 332, 333, 334,
	1174, 335, 1168, 1167, 1087, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 1159,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 1093, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 1182, 1183, 366, 1106, 274, 0, 0, 0,
	0, 0, 367, 368, 369, 1166, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 1193, 373, 374, 375, 1179,
	1180, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 1189, 0, 1116, 386, 0, 387, 388, 389,
	390, 391, 1152, 1153, 1156, 471, 1195, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 275, 399,
	400, 401, 403, 0, 1194, 402, 1161, 1162, 0, 1122,
	0, 404, 405, 1196, 1154, 1197, 406, 407, 408, 1198,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 1190, 1199, 420, 421,
	1200, 0, 422, 0, 0, 0, 423, 424, 427, 1145,
	1144, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	1201, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 1202, 467, 456, 1084, 276, 1203,
	468, 469, 1107, 1155, 470, 1169, 472, 473, 0, 0,
	474, 0, 0, 0, 476, 477, 478, 0, 0, 479,
	480, 662, 1204, 481, 1205, 1184, 482, 483, 1094, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 1185,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 1165, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 1206, 536,
	537, 538, 539, 540, 1095, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 552, 553, 554, 555, 556, 0,
	558, 559, 557, 560, 561, 562, 1148, 563, 564, 546,
	547, 565, 566, 1207, 567, 568, 569, 570, 571, 572,
	573, 1163, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 1210, 581, 582, 583, 584, 1186, 588,
	589, 0, 590, 591, 1081, 587, 578, 0, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 0, 600, 1175,
	1176, 1177, 1178, 0, 609, 0, 601, 602, 603, 1187,
	604, 1188, 1105, 605, 606, 607, 608, 0, 610, 611,
	0, 1088, 612, 613, 614, 616, 617, 615, 618, 1149,
	619, 0, 0, 620, 621, 622, 679, 1172, 1209, 0,
	624, 623, 625, 682, 0, 626, 0, 0, 0, 0,
	627, 628, 683, 629, 630, 631, 1085, 0, 0, 1629,
	0, 1127, 1099, 1100, 1101, 1097, 1098, 1110, 0, 1080,
	0, 0, 0, 0, 0, 0, 1078, 1079, 277, 279,
	278, 280, 281, 282, 283, 1111, 284, 285, 0, 1109,
	0, 0, 0, 1151, 1115, 0, 0, 0, 286, 287,
	1191, 288, 289, 290, 291, 292, 293, 633, 1164, 0,
	294, 1171, 295, 1170, 0, 1181, 296, 297, 298, 299,
	300, 301, 1117, 1150, 1082, 302, 1211, 1212, 640, 0,
	303, 304, 1157, 0, 1138, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1192, 327, 328, 329, 1141, 1139, 1140,
	1147, 1143, 1142, 1146, 330, 331, 332, 333, 334, 1174,
	335, 1168, 1167, 1087, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 1159, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	1093, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 1182, 1183, 366, 1106, 274, 0, 0, 0, 0,
	0, 367, 368, 369, 1166, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 1193, 373, 374, 375, 1179, 1180,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 1189, 0, 1116, 386, 0, 387, 388, 389, 390,
	391, 1152, 1153, 1156, 471, 1195, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 275, 399, 400,
	401, 403, 0, 1194, 402, 1161, 1162, 0, 1122, 0,
	404, 405, 1196, 1154, 1197, 406, 407, 408, 1198, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 1190, 1199, 420, 421, 1200,
	0, 422, 0, 0, 0, 423, 424, 427, 1145, 1144,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 1201,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 1202, 467, 456, 1084, 276, 1203, 468,
	469, 1107, 1155, 470, 1169, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	662, 1204, 481, 1205, 1184, 482, 483, 1094, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 1185, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 1165, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 1206, 536, 537,
	538, 539, 540, 1095, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 0, 558,
	559, 557, 560, 561, 562, 1148, 563, 564, 546, 547,
	565, 566, 1207, 567, 568, 569, 570, 571, 572, 573,
	1163, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 1210, 581, 582, 583, 584, 1186, 588, 589,
	0, 590, 591, 1081, 587, 578, 0, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 1175, 1176,
	1177, 1178, 0, 609, 0, 601, 602, 603, 1187, 604,
	1188, 1105, 605, 606, 607, 608, 0, 610, 611, 0,
	1088, 612, 613, 614, 616, 617, 615, 618, 1149, 619,
	0, 0, 620, 621, 622, 679, 1172, 1209, 0, 624,
	623, 625, 682, 0, 626, 0, 0, 0, 0, 627,
	628, 683, 629, 630, 631, 1085, 0, 0, 1624, 0,
	1127, 1099, 1100, 1101, 1097, 1098, 1110, 0, 1080, 0,
	0, 0, 0, 0, 0, 1078, 1079, 277, 279, 278,
	280, 281, 282, 283, 1111, 284, 285, 0, 1109, 0,
	0, 0, 1151, 1115, 0, 0, 0, 286, 287, 1191,
	288, 289, 290, 291, 292, 293, 633, 1164, 0, 294,
	1171, 295, 1170, 0, 1181, 296, 297, 298, 299, 300,
	301, 1117, 1150, 1082, 302, 1211, 1212, 640, 0, 303,
	304, 1157, 0, 1138, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1192, 327, 328, 329, 1141, 1139, 1140, 1147,
	1143, 1142, 1146, 330, 331, 332, 333, 334, 1174, 335,
	1168, 1167, 1087, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 1159, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 1093,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	1182, 1183, 366, 1106, 274, 0, 0, 0, 0, 0,
	367, 368, 369, 1166, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 1193, 373, 374, 375, 1179, 1180, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	1189, 0, 1116, 386, 0, 387, 388, 389, 390, 391,
	1152, 1153, 1156, 471, 1195, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 275, 399, 400, 401,
	403, 0, 1194, 402, 1161, 1162, 0, 1122, 0, 404,
	405, 1196, 1154, 1197, 406, 407, 408, 1198, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 1190, 1199, 420, 421, 1200, 0,
	422, 0, 0, 0, 423, 424, 427, 1145, 1144, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 1201, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 1202, 467, 456, 1084, 276, 1203, 468, 469,
	1107, 1155, 470, 1169, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	1204, 481, 1205, 1184, 482, 483, 1094, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 1185, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 1165, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 1206, 536, 537, 538,
	539, 540, 1095, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 1148, 563, 564, 546, 547, 565,
	566, 1207, 567, 568, 569, 570, 571, 572, 573, 1163,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 1210, 581, 582, 583, 584, 1186, 588, 589, 0,
	590, 591, 1081, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 1175, 1176, 1177,
	1178, 0, 609, 0, 601, 602, 603, 1187, 604, 1188,
	1105, 605, 606, 607, 608, 0, 610, 611, 0, 1088,
	612, 613, 614, 616, 617, 615, 618, 1149, 619, 0,
	0, 620, 621, 622, 679, 1172, 1209, 0, 624, 623,
	625, 682, 0, 626, 0, 0, 0, 0, 627, 628,
	683, 629, 630, 631, 1085, 0, 0, 1536, 0, 1127,
	1099, 1100, 1101, 1097, 1098, 1110, 0, 1080, 0, 0,
	0, 0, 0, 0, 1078, 1079, 277, 279, 278, 280,
	281, 282, 283, 1111, 284, 285, 0, 1109, 0, 0,
	0, 1151, 1115, 0, 0, 0, 286, 287, 1191, 288,
	289, 290, 291, 292, 293, 633, 1164, 0, 294, 1171,
	295, 1170, 0, 1181, 296, 297, 298, 299, 300, 301,
	1117, 1150, 1082, 302, 1211, 1212, 640, 0, 303, 304,
	1157, 0, 1138, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1192, 327, 328, 329, 1141, 1139, 1140, 1147, 1143,
	1142, 1146, 330, 331, 332, 333, 334, 1174, 335, 1168,
	1167, 1087, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 1159, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 1093, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 1182,
	1183, 366, 1106, 274, 0, 0, 0, 0, 0, 367,
	368, 369, 1166, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 1193, 373, 374, 375, 1179, 1180, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 1189,
	0, 1116, 386, 0, 387, 388, 389, 390, 391, 1535,
	1153, 1156, 471, 1195, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 275, 399, 400, 401, 403,
	0, 1194, 402, 1161, 1162, 0, 1122, 0, 404, 405,
	1196, 1154, 1197, 406, 407, 408, 1198, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 1190, 1199, 420, 421, 1200, 0, 422,
	0, 0, 0, 423, 424, 427, 1145, 1144, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 1201, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 1202, 467, 456, 1084, 276, 1203, 468, 469, 1107,
	1155, 470, 1169, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 1204,
	481, 1205, 1184, 482, 483, 1094, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 1185, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 1165, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 1206, 536, 537, 538, 539,
	540, 1095, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 1148, 563, 564, 546, 547, 565, 566,
	1207, 567, 568, 569, 570, 571, 572, 573, 1163, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	1210, 581, 582, 583, 584, 1186, 588, 589, 0, 590,
	591, 1081, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 1175, 1176, 1177, 1178,
	0, 609, 0, 601, 602, 603, 1187, 604, 1188, 1105,
	605, 606, 607, 608, 0, 610, 611, 0, 1088, 612,
	613, 614, 616, 617, 615, 618, 1149, 619, 0, 0,
	620, 621, 622, 679, 1172, 1209, 0, 624, 623, 625,
	682, 0, 626, 0, 0, 0, 0, 627, 628, 683,
	629, 630, 631, 1085, 0, 0, 1530, 0, 1127, 1099,
	1100, 1101, 1097, 1098, 1110, 0, 1080, 0, 0, 0,
	0, 0, 0, 1078, 1079, 277, 279, 278, 280, 281,
	282, 283, 1111, 284, 285, 0, 1109, 0, 0, 0,
	1151, 1115, 0, 0, 0, 286, 287, 1191, 288, 289,
	290, 291, 292, 293, 633, 1164, 0, 294, 1171, 295,
	1170, 0, 1181, 296, 297, 298, 299, 300, 301, 1117,
	1150, 1082, 302, 1211, 1212, 640, 0, 303, 304, 1157,
	0, 1138, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1192, 327, 328, 329, 1141, 1139, 1140, 1147, 1143, 1142,
	1146, 330, 331, 332, 333, 334, 1174, 335, 1168, 1167,
	1087, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 1159, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 1093, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 1182, 1183,
	366, 1106, 274, 0, 0, 0, 0, 0, 367, 368,
	369, 1166, 0, 0, 0, 370, 0, 371, 372, 0,
	0, 1193, 373, 374, 375, 1179, 1180, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 1189, 0,
	1116, 386, 0, 387, 388, 389, 390, 391, 1529, 1153,
	1156, 471, 1195, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 275, 399, 400, 401, 403, 0,
	1194, 402, 1161, 1162, 0, 1122, 0, 404, 405, 1196,
	1154, 1197, 406, 407, 408, 1198, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 1190, 1199, 420, 421, 1200, 0, 422, 0,
	0, 0, 423, 424, 427, 1145, 1144, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 1201, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	1202, 467, 456, 1084, 276, 1203, 468, 469, 1107, 1155,
	470, 1169, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 1204, 481,
	1205, 1184, 482, 483, 1094, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 1185, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 1165, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 1206, 536, 537, 538, 539, 540,
	1095, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 1148, 563, 564, 546, 547, 565, 566, 1207,
	567, 568, 569, 570, 571, 572, 573, 1163, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 1210,
	581, 582, 583, 584, 1186, 588, 589, 0, 590, 591,
	1081, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 1175, 1176, 1177, 1178, 0,
	609, 0, 601, 602, 603, 1187, 604, 1188, 1105, 605,
	606, 607, 608, 0, 610, 611, 0, 1088, 612, 613,
	614, 616, 617, 615, 618, 1149, 619, 0, 0, 620,
	621, 622, 679, 1172, 1209, 0, 624, 623, 625, 682,
	0, 626, 0, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 1085, 0, 0, 1523, 0, 1127, 1099, 1100,
	1101, 1097, 1098, 1110, 0, 1080, 0, 0, 0, 0,
	0, 0, 1078, 1079, 277, 279, 278, 280, 281, 282,
	283, 1111, 284, 285, 0, 1109, 0, 0, 0, 1151,
	1115, 0, 0, 0, 286, 287, 1191, 288, 289, 290,
	291, 292, 293, 633, 1164, 0, 294, 1171, 295, 1170,
	0, 1181, 296, 297, 298, 299, 300, 301, 1117, 1150,
	1082, 302, 1211, 1212, 640, 0, 303, 304, 1157, 0,
	1138, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1192,
	327, 328, 329, 1141, 1139, 1140, 1147, 1143, 1142, 1146,
	330, 331, 332, 333, 334, 1174, 335, 1168, 1167, 1087,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 1159, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 1093, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 1182, 1183, 366,
	1106, 274, 0, 0, 0, 0, 0, 367, 368, 369,
	1166, 0, 0, 0, 370, 0, 371, 372, 0, 0,
	1193, 373, 374, 375, 1179, 1180, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 1189, 0, 1116,
	386, 0, 387, 388, 389, 390, 391, 1152, 1153, 1156,
	471, 1195, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 275, 399, 400, 401, 403, 0, 1194,
	402, 1161, 1162, 0, 1122, 0, 404, 405, 1196, 1154,
	1197, 406, 407, 408, 1198, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 1190, 1199, 420, 421, 1200, 0, 422, 0, 0,
	0, 423, 424, 427, 1145, 1144, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 1201, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 1202,
	467, 456, 1084, 276, 1203, 468, 469, 1107, 1155, 470,
	1169, 472, 473, 0, 0, 474, 0, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 1204, 481, 1205,
	1184, 482, 483, 1094, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 1185, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	1165, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 1206, 536, 537, 538, 539, 540, 1095,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 1148, 563, 564, 546, 547, 565, 566, 1207, 567,
	568, 569, 570, 571, 572, 573, 1163, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 1210, 581,
	582, 583, 584, 1186, 588, 589, 0, 590, 591, 1081,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 1175, 1176, 1177, 1178, 0, 609,
	0, 601, 602, 603, 1187, 604, 1188, 1105, 605, 606,
	607, 608, 0, 610, 611, 0, 1088, 612, 613, 614,
	616, 617, 615, 618, 1149, 619, 0, 0, 620, 621,
	622, 679, 1172, 1209, 0, 624, 623, 625, 682, 0,
	626, 0, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 1085, 0, 0, 1338, 0, 1127, 1099, 1100, 1101,
	1097, 1098, 1110, 0, 1080, 0, 0, 0, 0, 0,
	0, 1078, 1079, 277, 279, 278, 280, 281, 282, 283,
	1111, 284, 285, 0, 1109, 0, 0, 0, 1151, 1115,
	0, 0, 0, 286, 287, 1191, 288, 289, 290, 291,
	292, 293, 633, 1164, 0, 294, 1171, 295, 1170, 0,
	1181, 296, 297, 298, 299, 300, 301, 1117, 1150, 1082,
	302, 1211, 1212, 640, 0, 303, 304, 1157, 0, 1138,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1192, 327,
	328, 329, 1141, 1139, 1140, 1147, 1143, 1142, 1146, 330,
	331, 332, 333, 334, 1174, 335, 1168, 1167, 1087, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 1159, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 1093, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 1182, 1183, 366, 1106,
	274, 0, 0, 0, 0, 0, 367, 368, 369, 1166,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 1193,
	373, 374, 375, 1179, 1180, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 1189, 0, 1116, 386,
	0, 387, 388, 389, 390, 391, 1152, 1153, 1156, 471,
	1195, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 275, 399, 400, 401, 403, 0, 1194, 402,
	1161, 1162, 0, 1122, 0, 404, 405, 1196, 1154, 1197,
	406, 407, 408, 1198, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	1190, 1199, 420, 421, 1200, 0, 422, 0, 0, 0,
	423, 424, 427, 1145, 1144, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 1201, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 1202, 467,
	456, 1084, 276, 1203, 468, 469, 1107, 1155, 470, 1169,
	472, 473, 0, 0, 474, 0, 0, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 1204, 481, 1205, 1184,
	482, 483, 1094, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 1185, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 1165,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 1206, 536, 537, 538, 539, 540, 1095, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 0, 558, 559, 557, 560, 561, 562,
	1148, 563, 564, 546, 547, 565, 566, 1207, 567, 568,
	569, 570, 571, 572, 573, 1163, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 1210, 581, 582,
	583, 584, 1186, 588, 589, 0, 590, 591, 1081, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 1175, 1176, 1177, 1178, 0, 609, 0,
	601, 602, 603, 1187, 604, 1188, 1105, 605, 606, 607,
	608, 0, 610, 611, 0, 1088, 612, 613, 614, 616,
	617, 615, 618, 1149, 619, 0, 0, 620, 621, 622,
	679, 1172, 1209, 0, 624, 623, 625, 682, 0, 626,
	0, 0, 0, 0, 627, 628, 683, 629, 630, 631,
	1085, 0, 0, 0, 0, 1127, 1099, 1100, 1101, 1097,
	1098, 1110, 0, 1080, 0, 0, 0, 0, 0, 0,
	1078, 1079, 277, 279, 278, 280, 281, 282, 283, 1111,
	284, 285, 0, 1109, 0, 0, 0, 1151, 1115, 0,
	0, 0, 286, 287, 1191, 288, 289, 290, 291, 292,
	293, 633, 1164, 0, 294, 1171, 295, 1170, 0, 1181,
	296, 297, 298, 299, 300, 301, 1117, 1150, 1082, 302,
	1211, 1212, 640, 0, 303, 304, 1157, 0, 1138, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1192, 327, 328,
	329, 1141, 1139, 1140, 1147, 1143, 1142, 1146, 330, 331,
	332, 333, 334, 1174, 335, 1168, 1167, 1087, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 1159, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 1093, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 1182, 1183, 366, 1106, 274,
	0, 0, 0, 0, 0, 367, 368, 369, 1166, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 1193, 373,
	374, 375, 1179, 1180, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 1189, 0, 1116, 386, 0,
	387, 388, 389, 390, 391, 1152, 1153, 1156, 471, 1195,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 275, 399, 400, 401, 403, 0, 1194, 402, 1161,
	1162, 0, 1122, 0, 404, 405, 1196, 1154, 1197, 406,
	407, 408, 1198, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 1190,
	1199, 420, 421, 1200, 0, 422, 0, 0, 0, 423,
	424, 427, 1145, 1144, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 1201, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 1202, 467, 456,
	1084, 276, 1203, 468, 469, 1107, 1155, 470, 1169, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 1204, 481, 1205, 1184, 482,
	483, 1094, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 1185, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 1165, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 1206, 536, 537, 538, 539, 540, 1095, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 561, 562, 1148,
	563, 564, 546, 547, 565, 566, 1207, 567, 568, 569,
	570, 571, 572, 573, 1163, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 1210, 581, 582, 583,
	584, 1186, 588, 589, 0, 590, 591, 1081, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 1175, 1176, 1177, 1178, 0, 609, 0, 601,
	602, 603, 1187, 604, 1188, 1105, 605, 606, 607, 608,
	0, 610, 611, 0, 1088, 612, 613, 614, 616, 617,
	615, 618, 1149, 619, 0, 0, 620, 621, 622, 679,
	1172, 1209, 0, 624, 623, 625, 682, 0, 626, 0,
	0, 0, 0, 627, 628, 683, 629, 630, 631, 1085,
	0, 0, 0, 0, 1127, 1099, 1100, 1101, 1097, 1098,
	1110, 0, 1080, 0, 0, 0, 0, 0, 0, 1078,
	1079, 277, 279, 278, 280, 281, 282, 283, 1111, 284,
	285, 0, 1109, 0, 0, 0, 1151, 1115, 0, 0,
	0, 286, 287, 1191, 288, 289, 290, 291, 292, 293,
	633, 1164, 0, 294, 1171, 295, 1170, 0, 1181, 296,
	297, 298, 299, 300, 301, 1117, 1150, 1082, 302, 1211,
	1212, 640, 0, 303, 304, 1157, 0, 1138, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1192, 327, 328, 4724,
	1141, 1139, 1140, 1147, 1143, 1142, 1146, 330, 331, 332,
	333, 334, 1174, 335, 1168, 1167, 1087, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 1159, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 1093, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 1182, 1183, 366, 1106, 274, 0,
	0, 0, 0, 0, 367, 368, 369, 1166, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 1193, 373, 374,
	375, 1179, 1180, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 1189, 0, 1116, 386, 0, 387,
	388, 389, 390, 391, 1152, 1153, 1156, 471, 1195, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	275, 399, 400, 401, 403, 0, 1194, 402, 1161, 1162,
	0, 1122, 0, 404, 405, 1196, 1154, 1197, 406, 407,
	408, 1198, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 1190, 1199,
	420, 421, 1200, 0, 422, 0, 0, 0, 423, 424,
	427, 1145, 1144, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 1201, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 1202, 467, 456, 1084,
	276, 1203, 468, 469, 1107, 1155, 470, 1169, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 1204, 481, 1205, 1184, 482, 483,
	1094, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 1185, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 1165, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	1206, 536, 537, 538, 539, 540, 1095, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 1148, 563,
	564, 546, 547, 565, 566, 1207, 567, 568, 569, 570,
	571, 572, 573, 1163, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 1210, 581, 582, 583, 584,
	1186, 588, 589, 0, 590, 591, 1081, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 1175, 1176, 1177, 1178, 0, 609, 0, 601, 602,
	603, 1187, 604, 1188, 1105, 605, 606, 607, 608, 0,
	4723, 611, 0, 1088, 612, 613, 614, 616, 617, 615,
	618, 1149, 619, 0, 0, 620, 621, 622, 679, 1172,
	1209, 0, 624, 623, 625, 682, 0, 626, 0, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 1085, 0,
	0, 0, 0, 1127, 1099, 1100, 1101, 1097, 1098, 1110,
	0, 1080, 0, 0, 0, 0, 0, 0, 1078, 1079,
	277, 279, 278, 280, 281, 282, 283, 1111, 284, 285,
	0, 1109, 0, 0, 0, 1151, 1115, 0, 0, 0,
	286, 287, 1191, 288, 289, 290, 291, 292, 293, 4722,
	1164, 0, 294, 1171, 295, 1170, 0, 1181, 296, 297,
	298, 299, 300, 301, 1117, 1150, 1082, 302, 1211, 1212,
	640, 0, 303, 304, 1157, 0, 1138, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1192, 327, 328, 4724, 1141,
	1139, 1140, 1147, 1143, 1142, 1146, 330, 331, 332, 333,
	334, 1174, 335, 1168, 1167, 1087, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	1159, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 1093, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 1182, 1183, 366, 1106, 274, 0, 0,
	0, 0, 0, 367, 368, 369, 1166, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 1193, 373, 374, 375,
	1179, 1180, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 1189, 0, 1116, 386, 0, 387, 388,
	389, 390, 391, 1152, 1153, 1156, 471, 1195, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 275,
	399, 400, 401, 403, 0, 1194, 402, 1161, 1162, 0,
	1122, 0, 404, 405, 1196, 1154, 1197, 406, 407, 408,
	1198, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 1190, 1199, 420,
	421, 1200, 0, 422, 0, 0, 0, 423, 424, 427,
	1145, 1144, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 1201, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 1202, 467, 456, 1084, 276,
	1203, 468, 469, 1107, 1155, 470, 1169, 472, 473, 0,
	0, 474, 0, 0, 0, 476, 477, 478, 0, 0,
	479, 480, 662, 1204, 481, 1205, 1184, 482, 483, 1094,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	1185, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 1165, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 1206,
	536, 537, 538, 539, 540, 1095, 541, 0, 542, 543,
	549, 550, 551, 544, 545, 552, 553, 554, 555, 556,
	0, 558, 559, 557, 560, 561, 562, 1148, 563, 564,
	546, 547, 565, 566, 1207, 567, 568, 569, 570, 571,
	572, 573, 1163, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 1210, 581, 582, 583, 584, 1186,
	588, 589, 0, 590, 591, 1081, 587, 578, 0, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	1175, 1176, 1177, 1178, 0, 609, 0, 601, 602, 603,
	1187, 604, 1188, 1105, 605, 606, 607, 608, 0, 4723,
	611, 0, 1088, 612, 613, 614, 616, 617, 615, 618,
	1149, 619, 0, 0, 620, 621, 622, 679, 1172, 1209,
	0, 624, 623, 625, 682, 0, 626, 0, 0, 0,
	0, 627, 628, 683, 629, 630, 631, 1085, 0, 0,
	0, 0, 1127, 1099, 1100, 1101, 1097, 1098, 1110, 0,
	1080, 0, 0, 0, 0, 0, 0, 1078, 1079, 277,
	279, 278, 280, 281, 282, 283, 1111, 284, 285, 0,
	1109, 0, 0, 0, 1151, 1115, 0, 0, 0, 286,
	287, 1191, 288, 289, 290, 291, 292, 293, 633, 1164,
	0, 294, 1171, 295, 1170, 0, 1181, 296, 297, 298,
	299, 300, 301, 1117, 1150, 1082, 302, 1211, 1212, 640,
	0, 303, 304, 1157, 0, 1138, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1192, 327, 4347, 329, 1141, 1139,
	1140, 1147, 1143, 1142, 1146, 330, 331, 332, 333, 334,
	1174, 335, 1168, 1167, 1087, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 1159,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 1093, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 1182, 1183, 366, 1106, 274, 0, 0, 0,
	0, 0, 367, 368, 369, 1166, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 1193, 373, 374, 375, 1179,
	1180, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 1189, 0, 4348, 386, 0, 387, 388, 389,
	390, 391, 1152, 1153, 1156, 471, 1195, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 275, 399,
	400, 401, 403, 0, 1194, 402, 1161, 1162, 0, 1122,
	0, 404, 405, 1196, 1154, 1197, 406, 407, 408, 1198,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 1190, 1199, 420, 421,
	1200, 0, 422, 0, 0, 0, 423, 424, 427, 1145,
	1144, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	1201, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 1202, 467, 456, 1084, 276, 1203,
	468, 469, 1107, 1155, 470, 1169, 472, 473, 0, 0,
	474, 0, 0, 0, 476, 477, 478, 0, 0, 479,
	480, 662, 1204, 481, 1205, 1184, 482, 483, 1094, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 1185,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 1165, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 1206, 536,
	537, 538, 4346, 540, 1095, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 552, 553, 554, 555, 556, 0,
	558, 559, 557, 560, 561, 562, 1148, 563, 564, 546,
	547, 565, 566, 1207, 567, 568, 569, 570, 571, 572,
	573, 1163, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 1210, 581, 582, 583, 584, 1186, 588,
	589, 0, 590, 591, 1081, 587, 578, 0, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 0, 600, 1175,
	1176, 1177, 1178, 0, 609, 0, 601, 602, 603, 1187,
	604, 1188, 1105, 605, 606, 607, 608, 0, 610, 611,
	0, 1088, 612, 613, 614, 616, 617, 615, 618, 1149,
	619, 0, 0, 620, 621, 622, 679, 1172, 1209, 0,
	624, 623, 625, 682, 0, 626, 0, 0, 0, 0,
	627, 628, 683, 629, 630, 631, 1085, 0, 0, 0,
	0, 1127, 1099, 1100, 1101, 3181, 3182, 1110, 0, 1080,
	0, 0, 0, 0, 0, 0, 1078, 1079, 277, 279,
	278, 280, 281, 282, 283, 1111, 284, 285, 0, 1109,
	0, 0, 0, 1151, 1115, 0, 0, 0, 286, 287,
	1191, 288, 289, 290, 291, 292, 293, 633, 1164, 0,
	294, 1171, 295, 1170, 0, 1181, 296, 297, 298, 299,
	300, 301, 1117, 1150, 1082, 302, 1211, 1212, 640, 0,
	303, 304, 1157, 0, 1138, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1192, 327, 328, 329, 1141, 1139, 1140,
	1147, 1143, 1142, 1146, 330, 331, 332, 333, 334, 1174,
	335, 1168, 1167, 1087, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 1159, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	1093, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 1182, 1183, 366, 1106, 274, 0, 0, 0, 0,
	0, 367, 368, 369, 1166, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 1193, 373, 374, 375, 1179, 1180,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 1189, 0, 1116, 386, 0, 387, 388, 389, 390,
	391, 1152, 1153, 1156, 471, 1195, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 275, 399, 400,
	401, 403, 0, 1194, 402, 1161, 1162, 0, 1122, 0,
	404, 405, 1196, 1154, 1197, 406, 407, 408, 1198, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 1190, 1199, 420, 421, 1200,
	0, 422, 0, 0, 0, 423, 424, 427, 1145, 1144,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 1201,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 1202, 467, 456, 1084, 276, 1203, 468,
	469, 1107, 1155, 470, 1169, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	662, 1204, 481, 1205, 1184, 482, 483, 1094, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 1185, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 1165, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 1206, 536, 537,
	538, 539, 540, 1095, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 0, 558,
	559, 557, 560, 561, 562, 1148, 563, 564, 546, 547,
	565, 566, 1207, 567, 568, 569, 570, 571, 572, 573,
	1163, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 1210, 581, 582, 583, 584, 1186, 588, 589,
	0, 590, 591, 1081, 587, 578, 0, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 1175, 1176,
	1177, 1178, 0, 609, 0, 601, 602, 603, 1187, 604,
	1188, 1105, 605, 606, 607, 608, 0, 610, 611, 0,
	1088, 612, 613, 614, 616, 617, 615, 618, 1149, 619,
	0, 0, 620, 621, 622, 679, 1172, 1209, 0, 624,
	623, 625, 682, 0, 626, 0, 0, 0, 0, 627,
	628, 683, 629, 630, 631, 1085, 0, 0, 0, 0,
	1127, 1099, 1100, 1101, 3179, 3180, 1110, 0, 1080, 0,
	0, 0, 0, 0, 0, 1078, 1079, 277, 279, 278,
	280, 281, 282, 283, 1111, 284, 285, 0, 1109, 0,
	0, 0, 1151, 1115, 0, 0, 0, 286, 287, 1191,
	288, 289, 290, 291, 292, 293, 633, 1164, 0, 294,
	1171, 295, 1170, 0, 1181, 296, 297, 298, 299, 300,
	301, 1117, 1150, 1082, 302, 1211, 1212, 640, 0, 303,
	304, 1157, 0, 1138, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1192, 327, 328, 329, 1141, 1139, 1140, 1147,
	1143, 1142, 1146, 330, 331, 332, 333, 334, 1174, 335,
	1168, 1167, 1087, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 1159, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 1093,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	1182, 1183, 366, 1106, 274, 0, 0, 0, 0, 0,
	367, 368, 369, 1166, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 1193, 373, 374, 375, 1179, 1180, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	1189, 0, 1116, 386, 0, 387, 388, 389, 390, 391,
	1152, 1153, 1156, 471, 1195, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 275, 399, 400, 401,
	403, 0, 1194, 402, 1161, 1162, 0, 1122, 0, 404,
	405, 1196, 1154, 1197, 406, 407, 408, 1198, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 1190, 1199, 420, 421, 1200, 0,
	422, 0, 0, 0, 423, 424, 427, 1145, 1144, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 1201, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 1202, 467, 456, 1084, 276, 1203, 468, 469,
	1107, 1155, 470, 1169, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	1204, 481, 1205, 1184, 482, 483, 1094, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 1185, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 1165, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 1206, 536, 537, 538,
	539, 540, 1095, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 1148, 563, 564, 546, 547, 565,
	566, 1207, 567, 568, 569, 570, 571, 572, 573, 1163,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 1210, 581, 582, 583, 584, 1186, 588, 589, 0,
	590, 591, 1081, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 1175, 1176, 1177,
	1178, 0, 609, 0, 601, 602, 603, 1187, 604, 1188,
	1105, 605, 606, 607, 608, 0, 610, 611, 0, 1088,
	612, 613, 614, 616, 617, 615, 618, 1149, 619, 0,
	0, 620, 621, 622, 679, 1172, 1209, 0, 624, 623,
	625, 682, 0, 626, 0, 0, 0, 0, 627, 628,
	683, 629, 630, 631, 1085, 0, 0, 0, 0, 1127,
	1099, 1100, 1101, 1097, 1098, 1110, 0, 1080, 0, 0,
	0, 0, 0, 0, 1078, 1079, 277, 279, 278, 280,
	281, 282, 283, 1111, 284, 285, 0, 1109, 0, 0,
	0, 1151, 1115, 0, 0, 0, 286, 287, 1191, 288,
	289, 290, 291, 292, 293, 633, 1164, 0, 294, 1171,
	295, 1170, 0, 1181, 296, 297, 298, 299, 300, 301,
	1117, 1150, 1082, 302, 1211, 1212, 640, 0, 303, 304,
	1157, 0, 1138, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1192, 327, 328, 329, 1141, 1139, 1140, 1147, 1143,
	1142, 1146, 330, 331, 332, 333, 334, 1174, 335, 1168,
	1167, 1087, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 1159, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 1093, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 1182,
	1183, 366, 1106, 274, 0, 0, 0, 0, 0, 367,
	368, 369, 1166, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 1193, 373, 374, 375, 1179, 1180, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 1189,
	0, 1116, 386, 0, 387, 388, 389, 390, 391, 1152,
	1153, 1156, 471, 1195, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 275, 399, 400, 401, 403,
	0, 1194, 402, 1161, 1162, 0, 1122, 0, 404, 405,
	1196, 1154, 1197, 406, 407, 408, 1198, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 1190, 1199, 420, 421, 1200, 0, 422,
	0, 0, 0, 423, 424, 427, 1145, 1144, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 1201, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 1202, 467, 456, 1084, 276, 1203, 468, 469, 1107,
	1155, 470, 1169, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 1204,
	481, 1205, 1184, 482, 483, 1094, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 1185, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 1165, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 1206, 536, 537, 538, 539,
	540, 1095, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 1148, 563, 564, 546, 547, 565, 566,
	1207, 567, 568, 569, 570, 571, 572, 573, 1163, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	1210, 581, 582, 583, 584, 1186, 588, 589, 0, 590,
	591, 1081, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 1175, 1176, 1177, 1178,
	0, 609, 0, 601, 602, 603, 1187, 604, 1188, 1105,
	605, 606, 607, 608, 0, 610, 611, 0, 1088, 612,
	613, 614, 616, 617, 615, 618, 1149, 619, 0, 0,
	620, 621, 622, 679, 1172, 1209, 0, 624, 623, 625,
	682, 0, 626, 0, 0, 0, 0, 627, 628, 683,
	629, 630, 631, 1085, 0, 0, 0, 0, 1127, 1099,
	1100, 1101, 1097, 1098, 1110, 0, 1080, 0, 0, 0,
	0, 0, 0, 2442, 2443, 277, 279, 278, 280, 281,
	282, 283, 1111, 284, 285, 0, 1109, 0, 0, 0,
	1151, 1115, 0, 0, 0, 286, 287, 1191, 288, 289,
	290, 291, 292, 293, 633, 1164, 0, 294, 1171, 295,
	1170, 0, 1181, 296, 297, 298, 299, 300, 301, 1117,
	1150, 0, 302, 1211, 1212, 640, 0, 303, 304, 1157,
	0, 1138, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1192, 327, 328, 329, 1141, 1139, 1140, 1147, 1143, 1142,
	1146, 330, 331, 332, 333, 334, 1174, 335, 1168, 1167,
	0, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 1159, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 1093, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 1182, 1183,
	366, 1106, 274, 0, 0, 0, 0, 0, 367, 368,
	369, 1166, 0, 0, 0, 370, 0, 371, 372, 0,
	0, 1193, 373, 374, 375, 1179, 1180, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 1189, 0,
	1116, 386, 0, 387, 388, 389, 390, 391, 1152, 1153,
	1156, 471, 1195, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 275, 399, 400, 401, 403, 0,
	1194, 402, 1161, 1162, 0, 1122, 0, 404, 405, 1196,
	1154, 1197, 406, 407, 408, 1198, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 1190, 1199, 420, 421, 1200, 0, 422, 0,
	0, 0, 423, 424, 427, 1145, 1144, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 1201, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	1202, 467, 456, 0, 276, 1203, 468, 469, 1107, 1155,
	470, 1169, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 1204, 481,
	1205, 1184, 482, 483, 1094, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 1185, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 1165, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 1206, 536, 537, 538, 539, 540,
	1095, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 1148, 563, 564, 546, 547, 565, 566, 1207,
	567, 568, 569, 570, 571, 572, 573, 1163, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 1210,
	581, 582, 583, 584, 1186, 588, 589, 0, 590, 591,
	0, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 1175, 1176, 1177, 1178, 0,
	609, 0, 601, 602, 603, 1187, 604, 1188, 1105, 605,
	606, 607, 608, 0, 610, 611, 0, 0, 612, 613,
	614, 616, 617, 615, 618, 1149, 619, 0, 0, 620,
	621, 622, 679, 1172, 1209, 0, 624, 623, 625, 682,
	0, 626, 0, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 0, 0, 0, 0, 0, 1127, 1099, 1100,
	1101, 1097, 1098, 1110, 0, 2701, 0, 0, 0, 0,
	0, 0, 2699, 2700, 277, 279, 278, 280, 281, 282,
	283, 1111, 284, 285, 0, 1109, 0, 0, 0, 1151,
	1115, 0, 0, 0, 286, 287, 1191, 288, 289, 290,
	291, 292, 293, 633, 1164, 0, 294, 1171, 295, 1170,
	0, 1181, 296, 297, 298, 299, 300, 301, 1117, 1150,
	0, 302, 1211, 1212, 640, 0, 303, 304, 1157, 0,
	1138, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1192,
	327, 328, 329, 1141, 1139, 1140, 1147, 1143, 1142, 1146,
	330, 331, 332, 333, 334, 1174, 335, 1168, 1167, 0,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 1159, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 1093, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 1182, 1183, 366,
	1106, 274, 0, 0, 0, 0, 0, 367, 368, 369,
	1166, 0, 0, 0, 370, 0, 371, 372, 0, 0,
	1193, 373, 374, 375, 1179, 1180, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 1189, 0, 1116,
	386, 0, 387, 388, 389, 390, 391, 1152, 1153, 1156,
	471, 1195, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 275, 399, 400, 401, 403, 0, 1194,
	402, 1161, 1162, 0, 1122, 0, 404, 405, 1196, 1154,
	1197, 406, 407, 408, 1198, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 1190, 1199, 420, 421, 1200, 0, 422, 0, 0,
	0, 423, 424, 427, 1145, 1144, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 1201, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 1202,
	467, 456, 0, 276, 1203, 468, 469, 1107, 1155, 470,
	1169, 472, 473, 0, 0, 474, 0, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 1204, 481, 1205,
	1184, 482, 483, 475, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 1185, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	1165, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 1206, 536, 537, 538, 539, 540, 3174,
	3175, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 1148, 563, 564, 546, 547, 565, 566, 1207, 567,
	568, 569, 570, 571, 572, 573, 1163, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 1210, 581,
	582, 583, 584, 1186, 588, 589, 0, 590, 591, 0,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 1175, 1176, 1177, 1178, 0, 609,
	0, 601, 602, 603, 1187, 604, 1188, 1105, 605, 606,
	607, 608, 0, 610, 611, 0, 0, 612, 613, 614,
	616, 617, 615, 618, 1149, 619, 0, 0, 620, 621,
	622, 679, 1172, 1209, 0, 624, 623, 625, 682, 0,
	626, 0, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 0, 0, 0, 0, 0, 1127, 1099, 1100, 1101,
	1097, 1098, 1110, 0, 0, 0, 0, 0, 0, 0,
	0, 2118, 2119, 277, 279, 278, 280, 281, 282, 283,
	1111, 284, 285, 0, 1109, 0, 0, 0, 1151, 1115,
	0, 0, 0, 286, 287, 1191, 288, 289, 290, 291,
	292, 293, 0, 1164, 0, 294, 1171, 295, 1170, 0,
	1181, 296, 297, 298, 299, 300, 301, 1117, 1150, 1082,
	302, 1211, 1212, 640, 0, 303, 304, 1157, 0, 1138,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1192, 327,
	328, 4724, 1141, 1139, 1140, 1147, 1143, 1142, 1146, 330,
	331, 332, 333, 334, 1174, 335, 1168, 1167, 1087, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 1159, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 1093, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 1182, 1183, 366, 1106,
	274, 0, 0, 0, 0, 0, 367, 368, 369, 1166,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 1193,
	373, 374, 375, 1179, 1180, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 1189, 0, 1116, 386,
	0, 387, 388, 389, 390, 391, 1152, 1153, 1156, 471,
	0, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 275, 399, 400, 401, 403, 0, 1194, 402,
	1161, 1162, 0, 1122, 0, 404, 405, 0, 1154, 0,
	406, 407, 408, 1198, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	1190, 1199, 420, 421, 0, 0, 422, 0, 0, 0,
	423, 424, 427, 1145, 1144, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 1201, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 1202, 467,
	456, 1084, 276, 0, 468, 469, 1107, 1155, 470, 1169,
	472, 473, 0, 0, 474, 0, 0, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 1204, 481, 1205, 1184,
	482, 483, 1094, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 1185, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 1165,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 1206, 536, 537, 538, 539, 540, 1095, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 0, 558, 559, 557, 560, 561, 562,
	1148, 563, 564, 546, 547, 565, 566, 0, 567, 568,
	569, 570, 571, 572, 573, 1163, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 1210, 581, 582,
	583, 584, 1186, 588, 589, 0, 590, 591, 1081, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 1175, 1176, 1177, 1178, 0, 609, 0,
	601, 602, 603, 1187, 604, 1188, 1105, 605, 606, 607,
	608, 0, 4723, 611, 0, 1088, 612, 613, 614, 616,
	617, 615, 618, 1149, 619, 0, 0, 620, 621, 622,
	679, 1172, 1209, 0, 624, 623, 625, 682, 0, 626,
	0, 0, 0, 0, 627, 628, 683, 629, 630, 631,
	0, 0, 0, 1071, 0, 1249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1078, 1079, 277, 279, 278, 280, 281, 282, 283, 1111,
	284, 285, 0, 1109, 0, 0, 0, 1151, 0, 0,
	0, 0, 286, 287, 1191, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 0, 637,
	296, 297, 298, 299, 300, 301, 0, 1150, 0, 302,
	638, 639, 640, 0, 303, 304, 1157, 0, 1138, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1192, 327, 328,
	329, 1141, 1139, 1140, 1147, 1143, 1142, 1146, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 0, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 346, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 1182, 1183, 366, 0, 274,
	0, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 1193, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 1189, 0, 651, 386, 0,
	387, 388, 389, 390, 391, 1152, 1153, 1156, 471, 1195,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 275, 399, 400, 401, 403, 0, 1194, 402, 655,
	656, 0, 657, 0, 404, 405, 1196, 1154, 1197, 406,
	407, 408, 1198, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 1235, 416, 418, 417, 0, 419, 1190,
	1199, 420, 421, 1200, 0, 422, 0, 0, 0, 423,
	424, 427, 1145, 1144, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 1201, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 1202, 467, 456,
	0, 276, 1203, 468, 469, 0, 1155, 470, 661, 472,
	473, 0, 0, 474, 0, 0, 1241, 476, 477, 478,
	0, 0, 479, 480, 662, 1204, 481, 1205, 1184, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 1185, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 1206, 536, 537, 538, 539, 540, 669, 1243, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 236, 558, 559, 557, 560, 561, 562, 1148,
	563, 564, 546, 547, 565, 566, 1207, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 1186, 588, 589, 0, 590, 591, 0, 587, 578,
	238, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 673, 674, 675, 676, 0, 609, 0, 601,
	602, 603, 1187, 604, 1188, 0, 605, 606, 607, 608,
	0, 610, 611, 0, 0, 612, 613, 614, 616, 617,
	615, 618, 1149, 619, 0, 0, 620, 621, 622, 1613,
	680, 681, 0, 624, 623, 625, 682, 0, 626, 0,
	0, 0, 230, 627, 628, 683, 629, 630, 631, 1249,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 1239, 0, 1961, 0,
	0, 1151, 0, 0, 0, 0, 286, 287, 1191, 288,
	289, 290, 291, 292, 293, 633, 634, 0, 294, 635,
	295, 636, 0, 637, 296, 297, 298, 299, 300, 301,
	0, 1150, 0, 302, 638, 639, 640, 0, 303, 304,
	1157, 0, 1138, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1192, 327, 328, 329, 1141, 1139, 1140, 1147, 1143,
	1142, 1146, 330, 331, 332, 333, 334, 0, 335, 642,
	643, 0, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 346, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 644, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 1182,
	1183, 366, 0, 274, 0, 0, 0, 0, 0, 367,
	368, 369, 647, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 1193, 373, 374, 375, 648, 649, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 1189,
	0, 651, 386, 0, 387, 388, 389, 390, 391, 1152,
	1153, 1156, 471, 1195, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 275, 399, 400, 401, 403,
	0, 1194, 402, 655, 656, 0, 657, 0, 404, 405,
	1196, 1154, 1197, 406, 407, 408, 1198, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 1235, 416, 418,
	417, 0, 419, 1190, 1199, 420, 421, 1200, 0, 422,
	0, 0, 0, 423, 424, 427, 1145, 1144, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 1201, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 1202, 467, 456, 0, 276, 1203, 468, 469, 0,
	1155, 470, 661, 472, 473, 0, 0, 474, 0, 0,
	1241, 476, 477, 478, 0, 0, 479, 480, 662, 1204,
	481, 1205, 1184, 482, 483, 475, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 1185, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 668, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 1206, 536, 537, 538, 539,
	540, 669, 1243, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 236, 558, 559, 557,
	560, 561, 562, 1148, 563, 564, 546, 547, 565, 566,
	1207, 567, 568, 569, 570, 571, 572, 573, 670, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	671, 581, 582, 583, 584, 1186, 588, 589, 0, 590,
	591, 0, 587, 578, 238, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 673, 674, 675, 676,
	0, 609, 0, 601, 602, 603, 1187, 604, 1188, 0,
	605, 606, 607, 608, 0, 610, 611, 0, 0, 612,
	613, 614, 616, 617, 615, 618, 1149, 619, 0, 0,
	620, 621, 622, 1613, 680, 681, 0, 624, 623, 625,
	682, 0, 626, 0, 0, 0, 230, 627, 628, 683,
	629, 630, 631, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 3338, 0, 1249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1239, 0, 1961, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 1151, 0,
	0, 0, 0, 286, 287, 1191, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 0,
	637, 296, 297, 298, 299, 300, 301, 0, 1150, 0,
	302, 638, 639, 640, 0, 303, 304, 1157, 0, 1138,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1192, 327,
	328, 329, 1141, 1139, 1140, 1147, 1143, 1142, 1146, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 0, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 346, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 1182, 1183, 366, 0,
	274, 0, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 1193,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 1189, 0, 651, 386,
	0, 387, 388, 389, 390, 391, 1152, 1153, 1156, 471,
	1195, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 275, 399, 400, 401, 403, 0, 1194, 402,
	655, 656, 0, 657, 0, 404, 405, 1196, 1154, 1197,
	406, 407, 408, 1198, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 1235, 416, 418, 417, 0, 419,
	1190, 1199, 420, 421, 1200, 0, 422, 0, 0, 0,
	423, 424, 427, 1145, 1144, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 1201, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 1202, 467,
	456, 0, 276, 1203, 468, 469, 0, 1155, 470, 661,
	472, 473, 0, 0, 474, 0, 0, 1241, 476, 477,
	478, 0, 0, 479, 480, 662, 1204, 481, 1205, 1184,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 1185, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 1206, 536, 537, 538, 539, 540, 669, 1243,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 0, 558, 559, 557, 560, 561, 562,
	1148, 563, 564, 546, 547, 565, 566, 1207, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 1186, 588, 589, 0, 590, 591, 0, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 673, 674, 675, 676, 0, 609, 0,
	601, 602, 603, 1187, 604, 1188, 0, 605, 606, 607,
	608, 0, 610, 611, 0, 0, 612, 613, 614, 616,
	617, 615, 618, 1149, 619, 0, 0, 620, 621, 622,
	679, 680, 681, 0, 624, 623, 625, 682, 0, 626,
	0, 1231, 0, 1249, 627, 628, 683, 629, 630, 631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 1151, 0, 1239, 0, 1237,
	286, 287, 1191, 288, 289, 290, 291, 292, 293, 633,
	634, 0, 294, 635, 295, 636, 0, 637, 296, 297,
	298, 299, 300, 301, 0, 1150, 0, 302, 638, 639,
	640, 0, 303, 304, 1157, 0, 1138, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1192, 327, 328, 329, 1141,
	1139, 1140, 1147, 1143, 1142, 1146, 330, 331, 332, 333,
	334, 0, 335, 642, 643, 0, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	346, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 644, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 1182, 1183, 366, 0, 274, 0, 0,
	0, 0, 0, 367, 368, 369, 647, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 1193, 373, 374, 375,
	648, 649, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 1189, 0, 651, 386, 0, 387, 388,
	389, 390, 391, 1152, 1153, 1156, 471, 1195, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 275,
	399, 400, 401, 403, 0, 1194, 402, 655, 656, 0,
	657, 0, 404, 405, 1196, 1154, 1197, 406, 407, 408,
	1198, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 1235, 416, 418, 417, 0, 419, 1190, 1199, 420,
	421, 1200, 0, 422, 0, 0, 0, 423, 424, 427,
	1145, 1144, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 1201, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 1202, 467, 456, 0, 276,
	1203, 468, 469, 0, 1155, 470, 661, 472, 473, 0,
	0, 474, 0, 0, 1241, 476, 477, 478, 0, 0,
	479, 480, 662, 1204, 481, 1205, 1184, 482, 483, 475,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	1185, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 668, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 1206,
	536, 537, 538, 539, 540, 669, 1243, 0, 542, 543,
	549, 550, 551, 544, 545, 552, 553, 554, 555, 556,
	0, 558, 559, 557, 560, 561, 562, 1148, 563, 564,
	546, 547, 565, 566, 1207, 567, 568, 569, 570, 571,
	572, 573, 670, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 671, 581, 582, 583, 584, 1186,
	588, 589, 0, 590, 591, 0, 587, 578, 0, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	673, 674, 675, 676, 0, 609, 0, 601, 602, 603,
	1187, 604, 1188, 0, 605, 606, 607, 608, 0, 610,
	611, 0, 0, 612, 613, 614, 616, 617, 615, 618,
	1149, 619, 0, 0, 620, 621, 622, 679, 680, 681,
	0, 624, 623, 625, 682, 0, 626, 0, 0, 0,
	1249, 627, 628, 683, 629, 630, 631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 1151, 0, 1239, 0, 1237, 286, 287, 1191,
	288, 289, 290, 291, 292, 293, 633, 634, 0, 294,
	635, 295, 636, 0, 637, 296, 297, 298, 299, 300,
	301, 0, 1150, 0, 302, 638, 639, 640, 0, 303,
	304, 1157, 0, 1138, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1192, 327, 328, 329, 1141, 1139, 1140, 1147,
	1143, 1142, 1146, 330, 331, 332, 333, 334, 0, 335,
	642, 643, 0, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 346, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 644,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	1182, 1183, 366, 0, 274, 0, 0, 0, 0, 0,
	367, 368, 369, 647, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 1193, 373, 374, 375, 648, 649, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	1189, 0, 651, 386, 0, 387, 388, 389, 390, 391,
	1152, 1153, 1156, 471, 1195, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 275, 399, 400, 401,
	403, 0, 1194, 402, 655, 656, 0, 657, 0, 404,
	405, 1196, 1154, 1197, 406, 407, 408, 1198, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 1235, 416,
	418, 417, 0, 419, 1190, 1199, 420, 421, 1200, 0,
	422, 0, 0, 0, 423, 424, 427, 1145, 1144, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 1201, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 1202, 467, 456, 0, 276, 1203, 468, 469,
	0, 1155, 470, 661, 472, 473, 0, 0, 474, 0,
	0, 1241, 476, 477, 478, 0, 0, 479, 480, 662,
	1204, 481, 1205, 1184, 482, 483, 475, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 1185, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 668, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 1206, 536, 537, 538,
	539, 540, 669, 1243, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 1148, 563, 564, 546, 547, 565,
	566, 1207, 567, 568, 569, 570, 571, 572, 573, 670,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 671, 581, 582, 583, 584, 1186, 588, 589, 0,
	590, 591, 0, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 673, 674, 675,
	676, 0, 609, 0, 601, 602, 603, 1187, 604, 1188,
	0, 605, 606, 607, 608, 0, 610, 611, 0, 0,
	612, 613, 614, 616, 617, 615, 618, 1149, 619, 0,
	0, 620, 621, 622, 679, 680, 681, 0, 624, 623,
	625, 682, 0, 626, 0, 0, 0, 1249, 627, 628,
	683, 629, 630, 631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 1151,
	0, 1239, 0, 1237, 286, 287, 1191, 288, 289, 290,
	291, 292, 293, 633, 634, 0, 294, 635, 295, 636,
	0, 637, 296, 297, 298, 299, 300, 301, 0, 1150,
	0, 302, 638, 639, 640, 0, 303, 304, 1157, 0,
	1138, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1192,
	327, 328, 329, 1141, 1139, 1140, 1147, 1143, 1142, 1146,
	330, 331, 332, 333, 334, 0, 335, 642, 643, 0,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 346, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 644, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 1182, 1183, 366,
	0, 274, 0, 0, 0, 0, 0, 367, 368, 369,
	647, 0, 0, 0, 370, 0, 371, 372, 0, 0,
	1193, 373, 374, 375, 648, 649, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 1189, 0, 651,
	386, 0, 387, 388, 389, 390, 391, 1152, 1153, 1156,
	471, 1195, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 275, 399, 400, 401, 403, 0, 1194,
	402, 655, 656, 0, 657, 0, 404, 405, 1196, 1154,
	1197, 406, 407, 408, 1198, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 1190, 1199, 420, 421, 1200, 0, 422, 0, 0,
	0, 423, 424, 427, 1145, 1144, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 1201, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 1202,
	467, 456, 0, 276, 1203, 468, 469, 0, 1155, 470,
	661, 472, 473, 0, 0, 474, 0, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 1204, 481, 1205,
	1184, 482, 483, 475, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 1185, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	668, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 1206, 536, 537, 538, 539, 540, 669,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 1148, 563, 564, 546, 547, 565, 566, 1207, 567,
	568, 569, 570, 571, 572, 573, 670, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 671, 581,
	582, 583, 584, 1186, 588, 589, 0, 590, 591, 0,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 673, 674, 675, 676, 0, 609,
	0, 601, 602, 603, 1187, 604, 1188, 0, 605, 606,
	607, 608, 0, 610, 611, 0, 0, 612, 613, 614,
	616, 617, 615, 618, 1149, 619, 0, 0, 620, 621,
	622, 679, 680, 681, 0, 624, 623, 625, 682, 0,
	626, 0, 0, 0, 1249, 627, 628, 683, 629, 630,
	631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 1151, 0, 0, 0,
	4169, 286, 287, 1191, 288, 289, 290, 291, 292, 293,
	633, 634, 0, 294, 635, 295, 636, 0, 637, 296,
	297, 298, 299, 300, 301, 0, 1150, 0, 302, 638,
	639, 640, 0, 303, 304, 1157, 0, 1138, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1192, 327, 328, 329,
	1141, 1139, 1140, 1147, 1143, 1142, 1146, 330, 331, 332,
	333, 334, 0, 335, 642, 643, 0, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 346, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 644, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 1182, 1183, 366, 0, 274, 0,
	0, 0, 0, 0, 367, 368, 369, 647, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 1193, 373, 374,
	375, 648, 649, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 1189, 0, 651, 386, 0, 387,
	388, 389, 390, 391, 1152, 1153, 1156, 471, 1195, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	275, 399, 400, 401, 403, 0, 1194, 402, 655, 656,
	0, 657, 0, 404, 405, 1196, 1154, 1197, 406, 407,
	408, 1198, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 1190, 1199,
	420, 421, 1200, 0, 422, 0, 0, 0, 423, 424,
	427, 1145, 1144, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 1201, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 1202, 467, 456, 0,
	276, 1203, 468, 469, 0, 1155, 470, 661, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 1204, 481, 1205, 1184, 482, 483,
	475, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 1185, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 668, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	1206, 536, 537, 538, 539, 540, 669, 1243, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 1148, 563,
	564, 546, 547, 565, 566, 1207, 567, 568, 569, 570,
	571, 572, 573, 670, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 671, 581, 582, 583, 584,
	1186, 588, 589, 0, 590, 591, 0, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 673, 674, 675, 676, 0, 609, 0, 601, 602,
	603, 1187, 604, 1188, 0, 605, 606, 607, 608, 0,
	610, 611, 0, 0, 612, 613, 614, 616, 617, 615,
	618, 1149, 619, 0, 0, 620, 621, 622, 679, 680,
	681, 0, 624, 623, 625, 682, 0, 626, 271, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 2546, 2547,
	2548, 2565, 2566, 2567, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 2568, 0,
	632, 0, 0, 0, 0, 286, 287, 1858, 288, 289,
	290, 291, 292, 293, 633, 634, 0, 294, 635, 295,
	636, 0, 637, 296, 297, 298, 299, 300, 301, 0,
	0, 1843, 302, 638, 639, 640, 0, 303, 304, 641,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	2558, 0, 313, 314, 315, 312, 316, 0, 317, 2554,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 642, 643,
	0, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 346, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 644, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 645, 646,
	366, 0, 0, 0, 2559, 2560, 2561, 2562, 367, 368,
	369, 647, 0, 0, 2553, 370, 0, 371, 372, 0,
	0, 0, 373, 374, 375, 648, 649, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 650, 0,
	651, 386, 0, 387, 388, 389, 390, 391, 652, 653,
	654, 471, 0, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 0, 399, 400, 401, 403, 0,
	0, 402, 655, 656, 0, 657, 0, 404, 405, 0,
	658, 0, 406, 407, 408, 0, 409, 0, 2563, 2564,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 659, 0, 420, 421, 0, 0, 422, 0,
	0, 0, 423, 424, 427, 0, 0, 425, 426, 428,
	429, 2556, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 0, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	0, 467, 456, 0, 0, 0, 468, 469, 0, 660,
	470, 661, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 0, 481,
	0, 663, 482, 483, 475, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 666, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 668, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	669, 541, 2557, 542, 543, 549, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 0, 563, 564, 546, 547, 565, 566, 0,
	567, 568, 569, 570, 571, 572, 573, 670, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 671,
	581, 582, 583, 584, 672, 588, 589, 0, 590, 591,
	1842, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 673, 674, 675, 676, 0,
	609, 0, 601, 602, 603, 677, 604, 678, 0, 605,
	606, 607, 608, 0, 610, 611, 0, 0, 612, 613,
	614, 616, 617, 615, 618, 0, 619, 0, 0, 620,
	621, 622, 679, 680, 681, 0, 624, 623, 625, 682,
	0, 626, 0, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 0, 0, 0, 0, 0, 0, 0, 1071,
	0, 1331, 2543, 2544, 2545, 2569, 2555, 2549, 0, 2551,
	2552, 2550, 2537, 2538, 2539, 2540, 2541, 2542, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 286, 287,
	1191, 288, 289, 290, 291, 292, 293, 633, 634, 0,
	294, 635, 295, 636, 0, 637, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 638, 639, 640, 0,
	303, 304, 641, 0, 1336, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1192, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 642, 643, 0, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 346, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	644, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 645, 646, 366, 0, 274, 0, 0, 0, 0,
	0, 367, 368, 369, 647, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 1193, 373, 374, 375, 648, 649,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 650, 0, 651, 386, 0, 387, 388, 389, 390,
	391, 652, 653, 654, 471, 1195, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 0, 399, 400,
	401, 403, 0, 1194, 402, 655, 656, 0, 657, 0,
	404, 405, 1196, 658, 1197, 406, 407, 408, 1198, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 659, 1199, 420, 421, 1200,
	0, 422, 0, 0, 0, 423, 424, 427, 0, 0,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 1201,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 1202, 467, 456, 0, 0, 1203, 468,
	469, 0, 660, 470, 661, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	662, 1204, 481, 1205, 663, 482, 483, 475, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 666, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 668, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 1206, 536, 537,
	538, 539, 540, 669, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 236, 558,
	559, 557, 560, 561, 562, 0, 563, 564, 546, 547,
	565, 566, 1207, 567, 568, 569, 570, 571, 572, 573,
	670, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 671, 581, 582, 583, 584, 672, 588, 589,
	0, 590, 591, 0, 587, 578, 238, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 673, 674,
	675, 676, 0, 609, 0, 601, 602, 603, 677, 604,
	678, 0, 605, 606, 607, 608, 0, 610, 611, 0,
	0, 612, 613, 614, 616, 617, 615, 618, 0, 619,
	0, 0, 620, 621, 622, 1613, 680, 681, 0, 624,
	623, 625, 682, 0, 626, 0, 0, 0, 230, 627,
	628, 683, 629, 630, 631, 0, 0, 231, 1610, 0,
	1331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 190, 284, 285, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 286, 287, 1191,
	288, 289, 290, 291, 292, 293, 633, 634, 0, 294,
	635, 295, 636, 0, 637, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 638, 639, 640, 0, 303,
	304, 641, 0, 1336, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1192, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	642, 643, 0, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 346, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 644,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	645, 646, 366, 0, 274, 0, 0, 0, 0, 0,
	367, 368, 369, 647, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 1193, 373, 374, 375, 648, 649, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	650, 0, 651, 386, 0, 387, 388, 389, 390, 391,
	652, 653, 654, 471, 1195, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 0, 399, 400, 401,
	403, 0, 1194, 402, 655, 656, 0, 657, 0, 404,
	405, 1196, 658, 1197, 406, 407, 408, 1198, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 659, 1199, 420, 421, 1200, 0,
	422, 0, 0, 0, 423, 424, 427, 0, 0, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 1201, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 1202, 467, 456, 0, 0, 1203, 468, 469,
	0, 660, 470, 661, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	1204, 481, 1205, 663, 482, 483, 475, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 666, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 668, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 1206, 536, 537, 538,
	539, 540, 669, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 236, 558, 559,
	557, 560, 561, 562, 0, 563, 564, 546, 547, 565,
	566, 1207, 567, 568, 569, 570, 571, 572, 573, 670,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 671, 581, 582, 583, 584, 672, 588, 589, 0,
	590, 591, 0, 587, 578, 238, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 673, 674, 675,
	676, 0, 609, 0, 601, 602, 603, 677, 604, 678,
	0, 605, 606, 607, 608, 0, 610, 611, 0, 0,
	612, 613, 614, 616, 617, 615, 618, 0, 619, 0,
	0, 620, 621, 622, 1613, 680, 681, 0, 624, 623,
	625, 682, 0, 626, 0, 0, 0, 230, 627, 628,
	683, 629, 630, 631, 1331, 1330, 231, 0, 0, 0,
	1328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 190, 0, 0, 632, 0, 0, 0,
	0, 286, 287, 1191, 288, 289, 290, 291, 292, 293,
	633, 634, 0, 294, 635, 295, 636, 0, 637, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 638,
	639, 640, 0, 303, 304, 641, 0, 1336, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1192, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 642, 643, 0, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 346, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 644, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 645, 646, 366, 0, 274, 0,
	0, 0, 0, 0, 367, 368, 369, 647, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 1193, 373, 374,
	375, 648, 649, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 650, 0, 651, 386, 0, 387,
	388, 389, 390, 391, 652, 653, 654, 471, 1195, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	0, 399, 400, 401, 403, 0, 1194, 402, 655, 656,
	0, 657, 0, 404, 405, 1196, 658, 1197, 406, 407,
	408, 1198, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 659, 1199,
	420, 421, 1200, 0, 422, 0, 0, 0, 423, 424,
	427, 0, 0, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 1201, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 1202, 467, 456, 0,
	0, 1203, 468, 469, 0, 660, 470, 661, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 1204, 481, 1205, 663, 482, 483,
	475, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 666, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 668, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	1206, 536, 537, 538, 539, 540, 669, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 0, 563,
	564, 546, 547, 565, 566, 1207, 567, 568, 569, 570,
	571, 572, 573, 670, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 671, 581, 582, 583, 584,
	672, 588, 589, 0, 590, 591, 0, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 673, 674, 675, 676, 0, 609, 0, 601, 602,
	603, 677, 604, 678, 0, 605, 606, 607, 608, 0,
	610, 611, 0, 0, 612, 613, 614, 616, 617, 615,
	618, 0, 619, 0, 0, 620, 621, 622, 679, 680,
	681, 0, 624, 623, 625, 682, 0, 626, 0, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 1331, 1330,
	0, 0, 0, 0, 1328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 1635, 0, 0,
	632, 0, 0, 0, 0, 286, 287, 1191, 288, 289,
	290, 291, 292, 293, 633, 634, 0, 294, 635, 295,
	636, 0, 637, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 638, 639, 640, 0, 303, 304, 641,
	0, 1336, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1192, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 642, 643,
	0, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 346, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 644, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 645, 646,
	366, 0, 274, 0, 0, 0, 0, 0, 367, 368,
	369, 647, 0, 0, 0, 370, 0, 371, 372, 0,
	0, 1193, 373, 374, 375, 648, 649, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 650, 0,
	651, 386, 0, 387, 388, 389, 390, 391, 652, 653,
	654, 471, 1195, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 0, 399, 400, 401, 403, 0,
	1194, 402, 655, 656, 0, 657, 0, 404, 405, 1196,
	658, 1197, 406, 407, 408, 1198, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 659, 1199, 420, 421, 1200, 0, 422, 0,
	0, 0, 423, 424, 427, 0, 0, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 1201, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	1202, 467, 456, 0, 0, 1203, 468, 469, 0, 660,
	470, 661, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 1204, 481,
	1205, 663, 482, 483, 475, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 666, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 668, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 1206, 536, 537, 538, 539, 540,
	669, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 0, 563, 564, 546, 547, 565, 566, 1207,
	567, 568, 569, 570, 571, 572, 573, 670, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 671,
	581, 582, 583, 584, 672, 588, 589, 0, 590, 591,
	0, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 673, 674, 675, 676, 0,
	609, 0, 601, 602, 603, 677, 604, 678, 0, 605,
	606, 607, 608, 0, 610, 611, 0, 0, 612, 613,
	614, 616, 617, 615, 618, 0, 619, 0, 0, 620,
	621, 622, 679, 680, 681, 0, 624, 623, 625, 682,
	0, 626, 0, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 1331, 1330, 0, 0, 0, 0, 1328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 3634, 0, 0, 632, 0, 0, 0, 0, 286,
	287, 1191, 288, 289, 290, 291, 292, 293, 633, 634,
	0, 294, 635, 295, 636, 0, 637, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 638, 639, 640,
	0, 303, 304, 641, 0, 1336, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1192, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 642, 643, 0, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 346,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 644, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 645, 646, 366, 0, 274, 0, 0, 0,
	0, 0, 367, 368, 369, 647, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 1193, 373, 374, 375, 648,
	649, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 650, 0, 651, 386, 0, 387, 388, 389,
	390, 391, 652, 653, 654, 471, 1195, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 0, 399,
	400, 401, 403, 0, 1194, 402, 655, 656, 0, 657,
	0, 404, 405, 1196, 658, 1197, 406, 407, 408, 1198,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 659, 1199, 420, 421,
	1200, 0, 422, 0, 0, 0, 423, 424, 427, 0,
	0, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	1201, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 1202, 467, 456, 0, 0, 1203,
	468, 469, 0, 660, 470, 661, 472, 473, 0, 0,
	474, 0, 0, 0, 476, 477, 478, 0, 0, 479,
	480, 662, 1204, 481, 1205, 663, 482, 483, 475, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 666,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 668, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 2315, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 1206, 536,
	537, 538, 539, 540, 669, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 552, 553, 554, 555, 556, 0,
	558, 559, 557, 560, 561, 562, 0, 563, 564, 546,
	547, 565, 566, 1207, 567, 568, 569, 570, 571, 572,
	573, 670, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 671, 581, 582, 583, 584, 672, 588,
	589, 0, 590, 591, 0, 587, 578, 0, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 0, 600, 673,
	674, 675, 676, 0, 609, 0, 601, 602, 603, 677,
	604, 678, 0, 605, 606, 607, 608, 0, 610, 611,
	0, 0, 612, 613, 614, 616, 617, 615, 618, 0,
	619, 0, 0, 620, 621, 622, 679, 680, 681, 0,
	624, 623, 625, 682, 0, 626, 0, 0, 0, 0,
	627, 628, 683, 629, 630, 631, 1331, 2227, 0, 0,
	0, 0, 2228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 1635, 0, 0, 632, 0,
	0, 0, 0, 286, 287, 1191, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 0,
	637, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 638, 639, 640, 0, 303, 304, 641, 0, 1336,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1192, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 0, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 346, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 0,
	274, 0, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 1193,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 650, 0, 651, 386,
	0, 387, 388, 389, 390, 391, 652, 653, 654, 471,
	1195, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 0, 399, 400, 401, 403, 0, 1194, 402,
	655, 656, 0, 657, 0, 404, 405, 1196, 658, 1197,
	406, 407, 408, 1198, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 2226, 418, 417, 0, 419,
	659, 1199, 420, 421, 1200, 0, 422, 0, 0, 0,
	423, 424, 427, 0, 0, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 1201, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 1202, 467,
	456, 0, 0, 1203, 468, 469, 0, 660, 470, 661,
	472, 473, 0, 0, 474, 0, 0, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 1204, 481, 1205, 663,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 1206, 536, 537, 538, 539, 540, 669, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 0, 558, 559, 557, 560, 561, 562,
	0, 563, 564, 546, 547, 565, 566, 1207, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 0, 590, 591, 0, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 673, 674, 675, 676, 0, 609, 0,
	601, 602, 603, 677, 604, 678, 0, 605, 606, 607,
	608, 0, 610, 611, 0, 0, 612, 613, 614, 616,
	617, 615, 618, 0, 619, 0, 0, 620, 621, 622,
	679, 680, 681, 0, 624, 623, 625, 682, 0, 626,
	0, 0, 0, 0, 627, 628, 683, 629, 630, 631,
	1331, 1330, 0, 0, 0, 0, 1328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 1635,
	0, 0, 632, 0, 0, 0, 0, 286, 287, 1191,
	288, 289, 290, 291, 292, 293, 633, 634, 0, 294,
	635, 295, 636, 0, 637, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 638, 639, 640, 0, 303,
	304, 641, 0, 1336, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1192, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	642, 643, 0, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 346, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 644,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	645, 646, 366, 0, 274, 0, 0, 0, 0, 0,
	367, 368, 369, 647, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 1193, 373, 374, 375, 648, 649, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	650, 0, 651, 386, 0, 387, 388, 389, 390, 391,
	652, 653, 654, 471, 1195, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 0, 399, 400, 401,
	403, 0, 1194, 402, 655, 656, 0, 657, 0, 404,
	405, 1196, 658, 1197, 406, 407, 408, 1198, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 659, 1199, 420, 421, 1200, 0,
	422, 0, 0, 0, 423, 424, 427, 0, 0, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 1201, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 1202, 467, 456, 0, 0, 1203, 468, 469,
	0, 660, 470, 661, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	1204, 481, 1205, 663, 482, 483, 475, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 666, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 668, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 1206, 536, 537, 538,
	539, 540, 669, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 0, 563, 564, 546, 547, 565,
	566, 1207, 567, 568, 569, 570, 571, 572, 573, 670,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 671, 581, 582, 583, 584, 672, 588, 589, 0,
	590, 591, 0, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 673, 674, 675,
	676, 0, 609, 0, 601, 602, 603, 677, 604, 678,
	0, 605, 606, 607, 608, 0, 610, 611, 0, 0,
	612, 613, 614, 616, 617, 615, 618, 0, 619, 0,
	0, 620, 621, 622, 679, 680, 681, 0, 624, 623,
	625, 682, 1071, 626, 271, 0, 0, 0, 627, 628,
	683, 629, 630, 631, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 632, 0, 0, 0,
	0, 286, 287, 1619, 288, 289, 290, 291, 292, 293,
	633, 634, 0, 294, 635, 295, 636, 0, 637, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 638,
	639, 640, 0, 303, 304, 641, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 642, 643, 0, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 346, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 644, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 645, 646, 366, 0, 0, 0,
	0, 0, 0, 0, 367, 368, 369, 647, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 0, 373, 374,
	375, 648, 649, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 650, 0, 651, 386, 0, 387,
	388, 389, 390, 391, 652, 653, 654, 471, 0, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	0, 399, 400, 401, 403, 0, 0, 402, 655, 656,
	0, 657, 0, 404, 405, 0, 658, 0, 406, 407,
	408, 0, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 659, 0,
	420, 421, 0, 0, 422, 0, 0, 0, 423, 424,
	427, 0, 0, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 0, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 0, 467, 456, 0,
	0, 0, 468, 469, 0, 660, 470, 661, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 0, 481, 0, 663, 482, 483,
	475, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 666, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 668, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 669, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 236, 558, 559, 557, 560, 561, 562, 0, 563,
	564, 546, 547, 565, 566, 0, 567, 568, 569, 570,
	571, 572, 573, 670, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 671, 581, 582, 583, 584,
	672, 588, 589, 0, 590, 591, 0, 587, 578, 238,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 673, 674, 675, 676, 0, 609, 0, 601, 602,
	603, 677, 604, 678, 0, 605, 606, 607, 608, 0,
	610, 611, 0, 0, 612, 613, 614, 616, 617, 615,
	618, 0, 619, 0, 0, 620, 621, 622, 1613, 680,
	681, 0, 624, 623, 625, 682, 0, 626, 271, 0,
	0, 230, 627, 628, 683, 629, 630, 631, 0, 0,
	231, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	632, 0, 0, 0, 0, 286, 287, 190, 288, 289,
	290, 291, 292, 293, 633, 634, 0, 294, 635, 295,
	636, 0, 637, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 638, 639, 640, 0, 303, 304, 641,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 642, 643,
	0, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 346, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 644, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 645, 646,
	366, 0, 274, 0, 0, 0, 0, 0, 367, 368,
	369, 647, 0, 0, 0, 370, 0, 371, 372, 0,
	0, 0, 373, 374, 375, 648, 649, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 650, 0,
	651, 386, 0, 387, 388, 389, 390, 391, 652, 653,
	654, 471, 0, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 275, 399, 400, 401, 403, 0,
	0, 402, 655, 656, 0, 657, 0, 404, 405, 0,
	658, 0, 406, 407, 408, 0, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 659, 0, 420, 421, 0, 0, 422, 0,
	0, 0, 423, 424, 427, 0, 0, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 0, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	0, 467, 456, 0, 276, 0, 468, 469, 0, 660,
	470, 661, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 0, 481,
	0, 663, 482, 483, 475, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 666, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 668, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	669, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 0, 563, 564, 546, 547, 565, 566, 0,
	567, 568, 569, 570, 571, 572, 573, 670, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 671,
	581, 582, 583, 584, 672, 588, 589, 0, 590, 591,
	0, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 673, 674, 675, 676, 0,
	609, 0, 601, 602, 603, 677, 604, 678, 0, 605,
	606, 607, 608, 0, 610, 611, 0, 0, 612, 613,
	614, 616, 617, 615, 618, 0, 619, 0, 0, 620,
	621, 622, 679, 680, 681, 0, 624, 623, 625, 682,
	0, 626, 0, 0, 0, 1249, 627, 628, 683, 629,
	630, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 1151, 0, 0,
	0, 1975, 286, 287, 1191, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 0, 637,
	296, 297, 298, 299, 300, 301, 0, 1150, 0, 302,
	638, 639, 640, 0, 303, 304, 1157, 0, 1138, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1192, 327, 328,
	329, 1141, 1139, 1140, 1147, 1143, 1142, 1146, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 0, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 346, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 1182, 1183, 366, 0, 274,
	0, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 1193, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 1189, 0, 651, 386, 0,
	387, 388, 389, 390, 391, 1152, 1153, 1156, 471, 1195,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 275, 399, 400, 401, 403, 0, 1194, 402, 655,
	656, 0, 657, 0, 404, 405, 1196, 1154, 1197, 406,
	407, 408, 1198, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 1190,
	1199, 420, 421, 1200, 0, 422, 0, 0, 0, 423,
	424, 427, 1145, 1144, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 1201, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 1202, 467, 456,
	0, 276, 1203, 468, 469, 0, 1155, 470, 661, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 1204, 481, 1205, 1184, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 1185, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 1206, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 561, 562, 1148,
	563, 564, 546, 547, 565, 566, 1207, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 1186, 588, 589, 0, 590, 591, 0, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 673, 674, 675, 676, 0, 609, 0, 601,
	602, 603, 1187, 604, 1188, 0, 605, 606, 607, 608,
	0, 610, 611, 0, 0, 612, 613, 614, 616, 617,
	615, 618, 1149, 619, 0, 0, 620, 621, 622, 679,
	680, 681, 0, 624, 623, 625, 682, 0, 626, 271,
	3080, 0, 0, 627, 628, 683, 629, 630, 631, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 633, 634, 0, 294, 635,
	295, 636, 0, 637, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 638, 639, 640, 0, 303, 304,
	641, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 642,
	643, 0, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 346, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 644, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 645,
	646, 366, 0, 0, 0, 0, 0, 0, 0, 367,
	368, 369, 647, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 0, 373, 374, 375, 648, 649, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 650,
	0, 651, 386, 0, 387, 388, 389, 390, 391, 652,
	653, 654, 471, 0, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 0, 399, 400, 401, 403,
	0, 0, 402, 655, 656, 0, 657, 0, 404, 405,
	0, 658, 0, 406, 407, 408, 0, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 659, 0, 420, 421, 0, 0, 422,
	0, 0, 0, 423, 424, 427, 0, 0, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 0, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 0, 467, 456, 0, 0, 0, 468, 469, 0,
	660, 470, 661, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 0,
	481, 0, 663, 482, 483, 475, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 666, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 668, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 669, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 0, 563, 564, 546, 547, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 670, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	671, 581, 582, 583, 584, 672, 588, 589, 0, 590,
	591, 0, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 673, 674, 675, 676,
	0, 609, 0, 601, 602, 603, 677, 604, 678, 0,
	605, 606, 607, 608, 0, 610, 611, 0, 0, 612,
	613, 614, 616, 617, 615, 618, 0, 619, 0, 0,
	620, 621, 622, 679, 680, 681, 0, 624, 623, 625,
	682, 0, 626, 271, 0, 0, 0, 627, 628, 683,
	629, 630, 631, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 632, 0, 0, 0, 0,
	286, 287, 4893, 288, 289, 290, 291, 292, 293, 633,
	634, 0, 294, 635, 295, 636, 0, 637, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 638, 639,
	640, 0, 303, 304, 641, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 642, 643, 0, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	346, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 644, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 645, 646, 366, 0, 274, 0, 0,
	0, 0, 0, 367, 368, 369, 647, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 0, 373, 374, 375,
	648, 649, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 650, 0, 651, 386, 0, 387, 388,
	389, 390, 391, 652, 653, 654, 471, 0, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 275,
	399, 400, 401, 403, 0, 0, 402, 655, 656, 0,
	657, 0, 404, 405, 0, 658, 0, 406, 407, 408,
	0, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 659, 0, 420,
	421, 0, 0, 422, 0, 0, 0, 423, 424, 427,
	0, 0, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 0, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 0, 467, 456, 0, 276,
	0, 468, 469, 0, 660, 470, 661, 472, 473, 0,
	0, 474, 0, 0, 0, 476, 477, 478, 0, 0,
	479, 480, 662, 0, 481, 0, 663, 482, 483, 475,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	666, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 668, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 669, 541, 0, 542, 543,
	549, 550, 551, 544, 545, 552, 553, 554, 555, 556,
	0, 558, 559, 557, 560, 561, 562, 0, 563, 564,
	546, 547, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 670, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 671, 581, 582, 583, 584, 672,
	588, 589, 0, 590, 591, 0, 587, 578, 0, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	673, 674, 675, 676, 0, 609, 0, 601, 602, 603,
	677, 604, 678, 0, 605, 606, 607, 608, 0, 610,
	611, 0, 0, 612, 613, 614, 616, 617, 615, 618,
	0, 619, 0, 0, 620, 621, 622, 679, 680, 681,
	0, 624, 623, 625, 682, 271, 626, 0, 0, 0,
	0, 627, 628, 683, 629, 630, 631, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 632, 0, 0,
	0, 0, 286, 287, 3584, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 0, 637,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	638, 639, 640, 0, 303, 304, 641, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 0, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 346, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 0, 274,
	0, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 0, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 650, 0, 651, 386, 0,
	387, 388, 389, 390, 391, 652, 653, 654, 471, 0,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 275, 399, 400, 401, 403, 0, 0, 402, 655,
	656, 0, 657, 0, 404, 405, 0, 658, 0, 406,
	407, 408, 0, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 659,
	0, 420, 421, 0, 0, 422, 0, 0, 0, 423,
	424, 427, 0, 0, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 0, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 0, 467, 456,
	0, 276, 0, 468, 469, 0, 660, 470, 661, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 0, 481, 0, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 561, 562, 0,
	563, 564, 546, 547, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 0, 590, 591, 0, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 673, 674, 675, 676, 0, 609, 0, 601,
	602, 603, 677, 604, 678, 0, 605, 606, 607, 608,
	0, 610, 611, 0, 0, 612, 613, 614, 616, 617,
	615, 618, 0, 619, 0, 0, 620, 621, 622, 679,
	680, 681, 0, 624, 623, 625, 682, 271, 626, 0,
	0, 0, 0, 627, 628, 683, 629, 630, 631, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 632,
	0, 0, 0, 0, 286, 287, 1607, 288, 289, 290,
	291, 292, 293, 633, 634, 0, 294, 635, 295, 636,
	0, 637, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 638, 639, 640, 0, 303, 304, 641, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 642, 643, 0,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 346, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 644, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 645, 646, 366,
	0, 0, 0, 0, 0, 0, 0, 367, 368, 369,
	647, 0, 0, 0, 370, 0, 371, 372, 0, 0,
	0, 373, 374, 375, 648, 649, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 650, 0, 651,
	386, 0, 387, 388, 389, 390, 391, 652, 653, 654,
	471, 0, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 0, 399, 400, 401, 403, 0, 0,
	402, 655, 656, 0, 657, 0, 404, 405, 0, 658,
	0, 406, 407, 408, 0, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 659, 0, 420, 421, 0, 0, 422, 0, 0,
	0, 423, 424, 427, 0, 0, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 0, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 0,
	467, 456, 0, 0, 0, 468, 469, 0, 660, 470,
	661, 472, 473, 0, 0, 474, 0, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 0, 481, 0,
	663, 482, 483, 475, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 666, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	668, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 669,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 0, 563, 564, 546, 547, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 670, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 671, 581,
	582, 583, 584, 672, 588, 589, 0, 590, 591, 0,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 673, 674, 675, 676, 0, 609,
	0, 601, 602, 603, 677, 604, 678, 0, 605, 606,
	607, 608, 0, 610, 611, 0, 0, 612, 613, 614,
	616, 617, 615, 618, 0, 619, 0, 0, 620, 621,
	622, 679, 680, 681, 0, 624, 623, 625, 682, 0,
	626, 271, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 286, 287,
	3068, 288, 289, 290, 291, 292, 293, 633, 634, 0,
	294, 635, 295, 636, 0, 637, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 638, 639, 640, 0,
	303, 304, 641, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 642, 643, 0, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 346, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	644, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 645, 646, 366, 0, 0, 0, 0, 0, 0,
	0, 367, 368, 369, 647, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 0, 373, 374, 375, 648, 649,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 650, 0, 651, 386, 0, 387, 388, 389, 390,
	391, 652, 653, 654, 471, 0, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 0, 399, 400,
	401, 403, 0, 0, 402, 655, 656, 0, 657, 0,
	404, 405, 0, 658, 0, 406, 407, 408, 0, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 659, 0, 420, 421, 0,
	0, 422, 0, 0, 0, 423, 424, 427, 0, 0,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 0,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 0, 467, 456, 0, 0, 0, 468,
	469, 0, 660, 470, 661, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	662, 0, 481, 0, 663, 482, 483, 475, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 666, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 668, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 669, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 0, 558,
	559, 557, 560, 561, 562, 0, 563, 564, 546, 547,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	670, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 671, 581, 582, 583, 584, 672, 588, 589,
	0, 590, 591, 0, 587, 578, 0, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 673, 674,
	675, 676, 0, 609, 0, 601, 602, 603, 677, 604,
	678, 0, 605, 606, 607, 608, 0, 610, 611, 0,
	0, 612, 613, 614, 616, 617, 615, 618, 0, 619,
	0, 0, 620, 621, 622, 679, 680, 681, 0, 624,
	623, 625, 682, 0, 626, 271, 0, 0, 0, 627,
	628, 683, 629, 630, 631, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 632, 0, 0,
	0, 0, 286, 287, 3746, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 0, 637,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	638, 639, 640, 0, 303, 304, 641, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 0, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 346, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 0, 0,
	0, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 0, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 650, 0, 651, 386, 0,
	387, 388, 389, 390, 391, 652, 653, 654, 471, 0,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 0, 399, 400, 401, 403, 0, 0, 402, 655,
	656, 0, 657, 0, 404, 405, 0, 658, 0, 406,
	407, 408, 0, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 659,
	0, 420, 421, 0, 0, 422, 0, 0, 0, 423,
	424, 427, 0, 0, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 0, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 0, 467, 456,
	0, 0, 0, 468, 469, 0, 660, 470, 661, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 0, 481, 0, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 561, 562, 0,
	563, 564, 546, 547, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 0, 590, 591, 0, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 673, 674, 675, 676, 0, 609, 0, 601,
	602, 603, 677, 604, 678, 0, 605, 606, 607, 608,
	0, 610, 611, 0, 0, 612, 613, 614, 616, 617,
	615, 618, 0, 619, 0, 0, 620, 621, 622, 679,
	680, 681, 0, 624, 623, 625, 682, 905, 626, 810,
	0, 0, 0, 627, 628, 683, 629, 630, 631, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 286, 287, 2304, 288,
	289, 290, 291, 292, 293, 633, 634, 0, 294, 635,
	295, 636, 0, 637, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 638, 639, 640, 0, 303, 304,
	641, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 817, 334, 0, 335, 642,
	643, 0, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 346, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 644, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 645,
	646, 366, 0, 274, 0, 0, 0, 0, 0, 367,
	368, 369, 647, 0, 0, 0, 370, 0, 371, 372,
	0, 903, 0, 373, 374, 375, 648, 649, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 650,
	0, 651, 386, 0, 387, 388, 389, 390, 391, 652,
	653, 654, 471, 0, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 275, 399, 400, 401, 403,
	0, 0, 402, 655, 656, 0, 657, 0, 404, 405,
	0, 658, 0, 406, 407, 408, 0, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 659, 0, 420, 421, 0, 0, 422,
	0, 0, 0, 423, 424, 427, 0, 0, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 0, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 0, 467, 456, 0, 276, 0, 468, 469, 0,
	660, 470, 661, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 0,
	481, 0, 663, 482, 483, 475, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 666, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 668, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 669, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 0, 563, 564, 546, 547, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 670, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	671, 581, 582, 583, 584, 672, 588, 589, 0, 590,
	591, 0, 587, 578, 815, 592, 593, 594, 595, 596,
	816, 598, 360, 599, 0, 600, 673, 674, 675, 676,
	0, 609, 0, 601, 602, 603, 677, 604, 678, 0,
	605, 606, 607, 608, 0, 610, 611, 0, 0, 612,
	613, 614, 616, 617, 615, 618, 0, 619, 0, 0,
	620, 621, 622, 679, 680, 681, 810, 624, 623, 625,
	682, 0, 626, 0, 0, 0, 0, 627, 628, 683,
	629, 630, 631, 277, 279, 278, 280, 281, 282, 283,
	2044, 284, 285, 0, 0, 0, 0, 0, 632, 0,
	0, 0, 0, 286, 287, 820, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 0,
	637, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 638, 639, 640, 0, 303, 304, 641, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 817, 334, 0, 335, 642, 643, 0, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 346, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 0,
	274, 0, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 0,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 650, 0, 651, 386,
	0, 387, 388, 389, 390, 391, 652, 653, 654, 471,
	0, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 275, 399, 400, 401, 403, 0, 0, 402,
	655, 656, 0, 657, 0, 404, 405, 0, 658, 0,
	406, 407, 408, 0, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	659, 0, 420, 421, 0, 0, 422, 0, 0, 0,
	423, 424, 427, 0, 0, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 0, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 0, 467,
	456, 0, 276, 0, 468, 469, 0, 660, 470, 661,
	472, 473, 0, 0, 474, 0, 0, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 0, 481, 0, 663,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 669, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 2043, 553,
	554, 555, 556, 0, 2045, 559, 557, 560, 561, 562,
	0, 563, 564, 546, 547, 565, 566, 0, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 0, 590, 591, 0, 587,
	578, 815, 592, 593, 594, 595, 596, 816, 598, 360,
	599, 0, 600, 673, 674, 675, 676, 0, 609, 0,
	601, 602, 603, 677, 604, 678, 0, 605, 606, 2042,
	608, 0, 610, 611, 0, 0, 612, 613, 614, 616,
	617, 615, 618, 0, 619, 0, 0, 620, 621, 622,
	679, 680, 681, 810, 624, 623, 625, 682, 0, 626,
	0, 0, 0, 0, 627, 628, 683, 629, 630, 631,
	277, 279, 278, 280, 281, 282, 283, 1995, 284, 285,
	0, 0, 0, 0, 0, 632, 0, 0, 0, 0,
	286, 287, 820, 288, 289, 290, 291, 292, 293, 633,
	634, 0, 294, 635, 295, 636, 0, 637, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 638, 639,
	640, 0, 303, 304, 641, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 817,
	334, 0, 335, 642, 643, 0, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	346, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 644, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 645, 646, 366, 0, 274, 0, 0,
	0, 0, 0, 367, 368, 369, 647, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 0, 373, 374, 375,
	648, 649, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 650, 0, 651, 386, 0, 387, 388,
	389, 390, 391, 652, 653, 654, 471, 0, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 275,
	399, 400, 401, 403, 0, 0, 402, 655, 656, 0,
	657, 0, 404, 405, 0, 658, 0, 406, 407, 408,
	0, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 659, 0, 420,
	421, 0, 0, 422, 0, 0, 0, 423, 424, 427,
	0, 0, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 0, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 0, 467, 456, 0, 276,
	0, 468, 469, 0, 660, 470, 661, 472, 473, 0,
	0, 474, 0, 0, 0, 476, 477, 478, 0, 0,
	479, 480, 662, 0, 481, 0, 663, 482, 483, 475,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	666, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 668, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 669, 541, 0, 542, 543,
	549, 550, 551, 544, 545, 1994, 553, 554, 555, 556,
	0, 1996, 559, 557, 560, 561, 562, 0, 563, 564,
	546, 547, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 670, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 671, 581, 582, 583, 584, 672,
	588, 589, 0, 590, 591, 0, 587, 578, 815, 592,
	593, 594, 595, 596, 816, 598, 360, 599, 0, 600,
	673, 674, 675, 676, 0, 609, 0, 601, 602, 603,
	677, 604, 678, 0, 605, 606, 1993, 608, 0, 610,
	611, 0, 0, 612, 613, 614, 616, 617, 615, 618,
	0, 619, 0, 0, 620, 621, 622, 679, 680, 681,
	0, 624, 623, 625, 682, 0, 626, 808, 0, 810,
	0, 627, 628, 683, 629, 630, 631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 820,
	0, 632, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 633, 634, 0, 294, 635,
	295, 636, 0, 637, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 638, 639, 640, 0, 303, 304,
	641, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 817, 334, 0, 335, 642,
	643, 0, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 346, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 644, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 645,
	646, 366, 0, 274, 0, 0, 0, 0, 0, 367,
	368, 369, 647, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 0, 373, 374, 375, 648, 649, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 650,
	0, 651, 386, 0, 387, 388, 389, 390, 391, 652,
	653, 654, 471, 0, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 275, 399, 400, 401, 403,
	0, 0, 402, 655, 656, 0, 657, 0, 404, 405,
	0, 658, 0, 406, 407, 408, 0, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 659, 0, 420, 421, 0, 0, 422,
	0, 0, 0, 423, 424, 427, 0, 0, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 0, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 0, 467, 456, 0, 276, 0, 468, 469, 0,
	660, 470, 661, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 0,
	481, 0, 663, 482, 483, 475, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 666, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 668, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 669, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 0, 563, 564, 546, 547, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 670, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	671, 581, 582, 583, 584, 672, 588, 589, 0, 590,
	591, 0, 587, 578, 815, 592, 593, 594, 595, 596,
	816, 598, 360, 599, 0, 600, 673, 674, 675, 676,
	0, 609, 0, 601, 602, 603, 677, 604, 678, 0,
	605, 606, 607, 608, 0, 610, 611, 0, 0, 612,
	613, 614, 616, 617, 615, 618, 0, 619, 0, 0,
	620, 621, 622, 679, 680, 681, 0, 624, 623, 625,
	682, 2017, 626, 0, 0, 0, 0, 627, 628, 683,
	629, 630, 631, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 0, 0, 820, 0, 0, 286, 287,
	1191, 288, 289, 290, 291, 292, 293, 0, 2023, 0,
	294, 2013, 295, 2029, 0, 2036, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 2039, 2040, 0, 0,
	303, 304, 0, 0, 1336, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1192, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 1174,
	335, 2027, 2026, 0, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 1159, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	0, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 0, 0, 366, 0, 0, 0, 0, 0, 0,
	0, 367, 368, 369, 2025, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 1193, 373, 374, 375, 2034, 2035,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 0, 0, 0, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 471, 1195, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 0, 399, 400,
	401, 403, 0, 1194, 402, 2020, 2021, 0, 2016, 0,
	404, 405, 1196, 0, 1197, 406, 407, 408, 1198, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 0, 1199, 420, 421, 1200,
	0, 422, 0, 0, 0, 423, 424, 427, 0, 0,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 1201,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 1202, 467, 456, 0, 0, 1203, 468,
	469, 0, 0, 470, 2028, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	0, 1204, 481, 1205, 0, 482, 483, 475, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	2010, 495, 496, 497, 2011, 498, 499, 500, 0, 501,
	0, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 2024, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 1206, 536, 537,
	538, 539, 540, 0, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 0, 558,
	559, 557, 560, 561, 562, 0, 563, 564, 546, 547,
	565, 566, 1207, 567, 568, 569, 570, 571, 572, 573,
	2022, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 2038, 581, 582, 583, 584, 0, 588, 589,
	0, 590, 591, 0, 587, 578, 0, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 2030, 2031,
	2032, 2033, 0, 609, 0, 601, 602, 603, 0, 604,
	0, 0, 605, 606, 607, 608, 0, 610, 611, 0,
	0, 612, 613, 614, 616, 617, 615, 618, 0, 619,
	0, 0, 620, 621, 622, 0, 2014, 2037, 0, 624,
	623, 625, 0, 0, 626, 0, 0, 0, 0, 627,
	628, 0, 629, 630, 631, 810, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 632, 2004, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 0, 637,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	638, 639, 640, 0, 303, 304, 641, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 817, 334, 0, 335, 642, 643, 0, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 346, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 0, 274,
	0, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 0, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 650, 0, 651, 386, 0,
	387, 388, 389, 390, 391, 652, 653, 654, 471, 0,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 275, 399, 400, 401, 403, 0, 0, 402, 655,
	656, 0, 657, 0, 404, 405, 0, 658, 0, 406,
	407, 408, 0, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 659,
	0, 420, 421, 0, 0, 422, 0, 0, 0, 423,
	424, 427, 0, 0, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 0, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 0, 467, 456,
	0, 276, 0, 468, 469, 0, 660, 470, 661, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 0, 481, 0, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 561, 562, 0,
	563, 564, 546, 547, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 0, 590, 591, 0, 587, 578,
	815, 592, 593, 594, 595, 596, 816, 598, 360, 599,
	0, 600, 673, 674, 675, 676, 0, 609, 0, 601,
	602, 603, 677, 604, 678, 0, 605, 606, 607, 608,
	0, 610, 611, 0, 0, 612, 613, 614, 616, 617,
	615, 618, 0, 619, 0, 0, 620, 621, 622, 679,
	680, 681, 810, 624, 623, 625, 682, 0, 626, 0,
	0, 0, 0, 627, 628, 683, 629, 630, 631, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 632, 0, 0, 0, 0, 286,
	287, 820, 288, 289, 290, 291, 292, 293, 633, 634,
	0, 294, 635, 295, 636, 0, 637, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 638, 639, 640,
	0, 303, 304, 641, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 817, 334,
	0, 335, 642, 643, 0, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 346,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 644, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 645, 646, 366, 0, 274, 0, 0, 0,
	0, 0, 367, 368, 369, 647, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 0, 373, 374, 375, 648,
	649, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 650, 0, 651, 386, 0, 387, 388, 389,
	390, 391, 652, 653, 654, 471, 0, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 275, 399,
	400, 401, 403, 0, 0, 402, 655, 656, 0, 657,
	0, 404, 405, 0, 658, 0, 406, 407, 408, 0,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 659, 0, 420, 421,
	0, 0, 422, 0, 0, 0, 423, 424, 427, 0,
	0, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	0, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 0, 467, 456, 0, 276, 0,
	468, 469, 0, 660, 470, 661, 472, 473, 0, 0,
	474, 0, 0, 0, 476, 477, 478, 0, 0, 479,
	480, 662, 0, 481, 0, 663, 482, 483, 475, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 666,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 668, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 0, 2352,
	537, 538, 539, 540, 669, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 2353, 553, 554, 555, 556, 0,
	558, 559, 557, 560, 561, 562, 0, 563, 564, 546,
	547, 565, 566, 0, 567, 568, 569, 570, 571, 572,
	573, 670, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 671, 581, 582, 583, 584, 672, 588,
	589, 0, 590, 591, 0, 587, 578, 815, 592, 593,
	594, 595, 596, 816, 598, 360, 599, 0, 600, 673,
	674, 675, 676, 0, 609, 0, 601, 602, 603, 677,
	604, 678, 0, 605, 606, 2354, 608, 0, 610, 611,
	0, 0, 612, 613, 614, 616, 617, 615, 618, 0,
	619, 0, 0, 620, 621, 622, 679, 680, 681, 271,
	624, 623, 625, 682, 0, 626, 0, 0, 0, 0,
	627, 628, 683, 629, 630, 631, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 286, 287, 820, 288,
	289, 290, 291, 292, 293, 633, 634, 0, 294, 635,
	295, 636, 0, 637, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 638, 639, 640, 0, 303, 304,
	641, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 642,
	643, 0, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 346, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 644, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 645,
	646, 366, 0, 274, 0, 0, 0, 0, 0, 367,
	368, 369, 647, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 0, 373, 374, 375, 648, 649, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 650,
	0, 651, 386, 0, 387, 388, 389, 390, 391, 652,
	653, 654, 471, 0, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 275, 399, 400, 401, 403,
	0, 0, 402, 655, 656, 0, 657, 0, 404, 405,
	0, 658, 0, 406, 407, 408, 0, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 659, 0, 420, 421, 0, 0, 422,
	0, 0, 0, 423, 424, 427, 0, 0, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 0, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 0, 467, 456, 0, 276, 0, 468, 469, 0,
	660, 470, 661, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 0,
	481, 0, 663, 482, 483, 475, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 666, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 668, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 669, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 0, 563, 564, 546, 547, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 670, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	671, 581, 582, 583, 584, 672, 588, 589, 0, 590,
	591, 0, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 673, 674, 675, 676,
	0, 609, 0, 601, 602, 603, 677, 604, 678, 0,
	605, 606, 607, 608, 0, 610, 611, 0, 0, 612,
	613, 614, 616, 617, 615, 618, 0, 619, 0, 0,
	620, 621, 622, 679, 680, 681, 0, 624, 623, 625,
	682, 0, 626, 0, 1331, 2092, 0, 627, 628, 683,
	629, 630, 631, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 820, 632, 0, 0, 0,
	0, 286, 287, 1191, 288, 289, 290, 291, 292, 293,
	633, 634, 0, 294, 635, 295, 636, 0, 637, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 638,
	639, 640, 0, 303, 304, 641, 0, 1336, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1192, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 3031, 330, 331, 332,
	333, 334, 0, 335, 642, 643, 0, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 346, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 644, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 645, 646, 366, 0, 274, 0,
	0, 0, 0, 0, 367, 368, 369, 647, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 1193, 373, 374,
	375, 648, 649, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 650, 0, 651, 386, 0, 387,
	388, 389, 390, 391, 652, 653, 654, 471, 1195, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	0, 399, 400, 401, 403, 0, 1194, 402, 655, 656,
	0, 657, 0, 404, 405, 1196, 658, 1197, 406, 407,
	408, 1198, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 659, 1199,
	420, 421, 1200, 0, 422, 0, 0, 0, 423, 424,
	427, 0, 0, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 1201, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 1202, 467, 456, 0,
	0, 1203, 468, 469, 0, 660, 470, 661, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 1204, 481, 1205, 663, 482, 483,
	475, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 666, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 668, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	1206, 536, 537, 538, 539, 540, 669, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 3032, 563,
	564, 546, 547, 565, 566, 1207, 567, 568, 569, 570,
	571, 572, 573, 670, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 671, 581, 582, 583, 584,
	672, 588, 589, 0, 590, 591, 0, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 673, 674, 675, 676, 0, 609, 0, 601, 602,
	603, 677, 604, 678, 0, 605, 606, 607, 608, 0,
	610, 611, 0, 0, 612, 613, 614, 616, 617, 615,
	618, 0, 619, 0, 0, 620, 621, 622, 679, 680,
	681, 0, 624, 623, 625, 682, 0, 626, 0, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 1331, 1330,
	0, 0, 0, 0, 1328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	632, 0, 0, 0, 0, 286, 287, 1191, 288, 289,
	290, 291, 292, 293, 633, 634, 0, 294, 635, 295,
	636, 0, 637, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 638, 639, 640, 0, 303, 304, 641,
	0, 1336, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1192, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 642, 643,
	0, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 346, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 644, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 645, 646,
	366, 0, 274, 0, 0, 0, 0, 0, 367, 368,
	369, 647, 0, 0, 0, 370, 0, 371, 372, 0,
	0, 1193, 373, 374, 375, 648, 649, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 650, 0,
	651, 386, 0, 387, 388, 389, 390, 391, 652, 653,
	654, 471, 1195, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 0, 399, 400, 401, 403, 0,
	1194, 402, 655, 656, 0, 657, 0, 404, 405, 1196,
	658, 1197, 406, 407, 408, 1198, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 659, 1199, 420, 421, 1200, 0, 422, 0,
	0, 0, 423, 424, 427, 0, 0, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 1201, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	1202, 467, 456, 0, 0, 1203, 468, 469, 3940, 660,
	470, 661, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 1204, 481,
	1205, 663, 482, 483, 475, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 666, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 668, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 1206, 536, 537, 538, 539, 540,
	669, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 0, 563, 564, 546, 547, 565, 566, 1207,
	567, 568, 569, 570, 571, 572, 573, 670, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 671,
	581, 582, 583, 584, 672, 588, 589, 0, 590, 591,
	0, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 673, 674, 675, 676, 0,
	609, 0, 601, 602, 603, 677, 604, 678, 0, 605,
	606, 607, 608, 0, 610, 611, 0, 0, 612, 613,
	614, 616, 617, 615, 618, 0, 619, 0, 0, 620,
	621, 622, 679, 680, 681, 0, 624, 623, 625, 682,
	0, 626, 0, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 1331, 1330, 0, 0, 0, 0, 1328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 632, 0, 0, 0, 0, 286,
	287, 1191, 288, 289, 290, 291, 292, 293, 633, 634,
	0, 294, 635, 295, 636, 0, 637, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 638, 639, 640,
	0, 303, 304, 641, 0, 1336, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1192, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 642, 643, 0, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 346,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 644, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 645, 646, 366, 0, 274, 0, 0, 0,
	0, 0, 367, 368, 369, 647, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 1193, 373, 374, 375, 648,
	649, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 650, 0, 651, 386, 0, 387, 388, 389,
	390, 391, 652, 653, 654, 471, 1195, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 0, 399,
	400, 401, 403, 0, 1194, 402, 655, 656, 0, 657,
	0, 404, 405, 1196, 658, 1197, 406, 407, 408, 1198,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 659, 1199, 420, 421,
	1200, 0, 422, 0, 0, 0, 423, 424, 427, 0,
	0, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	1201, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 1202, 467, 456, 0, 0, 1203,
	468, 469, 3546, 660, 470, 661, 472, 473, 0, 0,
	474, 0, 0, 0, 476, 477, 478, 0, 0, 479,
	480, 662, 1204, 481, 1205, 663, 482, 483, 475, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 666,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 668, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 1206, 536,
	537, 538, 539, 540, 669, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 552, 553, 554, 555, 556, 0,
	558, 559, 557, 560, 561, 562, 0, 563, 564, 546,
	547, 565, 566, 1207, 567, 568, 569, 570, 571, 572,
	573, 670, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 671, 581, 582, 583, 584, 672, 588,
	589, 0, 590, 591, 0, 587, 578, 0, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 0, 600, 673,
	674, 675, 676, 0, 609, 0, 601, 602, 603, 677,
	604, 678, 0, 605, 606, 607, 608, 0, 610, 611,
	0, 0, 612, 613, 614, 616, 617, 615, 618, 0,
	619, 0, 0, 620, 621, 622, 679, 680, 681, 0,
	624, 623, 625, 682, 0, 626, 0, 0, 0, 0,
	627, 628, 683, 629, 630, 631, 1663, 0, 1331, 1330,
	0, 0, 0, 0, 1328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	632, 0, 0, 0, 0, 286, 287, 1191, 288, 289,
	290, 291, 292, 293, 633, 634, 0, 294, 635, 295,
	636, 0, 637, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 638, 639, 640, 0, 303, 304, 641,
	0, 1336, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1192, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 642, 643,
	0, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 346, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 644, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 645, 646,
	366, 0, 274, 0, 0, 0, 0, 0, 1662, 368,
	369, 647, 0, 0, 0, 370, 0, 371, 372, 0,
	0, 1193, 373, 374, 375, 648, 649, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 650, 0,
	651, 386, 0, 387, 388, 389, 390, 391, 652, 653,
	654, 471, 1195, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 0, 399, 400, 401, 403, 0,
	1194, 402, 655, 656, 0, 657, 0, 404, 405, 1196,
	658, 1197, 406, 407, 408, 1198, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 659, 1199, 420, 421, 1200, 0, 422, 0,
	0, 0, 423, 424, 427, 0, 0, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 1201, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	1202, 467, 456, 0, 0, 1203, 468, 469, 0, 660,
	470, 661, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 1204, 481,
	1205, 663, 482, 483, 475, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 666, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 1661,
	512, 668, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 1206, 536, 537, 538, 539, 540,
	669, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	552, 1660, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 0, 563, 564, 546, 547, 565, 566, 1207,
	567, 568, 569, 570, 571, 572, 573, 670, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 671,
	581, 582, 583, 584, 672, 588, 589, 0, 590, 591,
	0, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 673, 674, 675, 676, 0,
	609, 0, 601, 602, 603, 677, 604, 678, 0, 605,
	606, 607, 608, 0, 610, 611, 0, 0, 612, 613,
	614, 616, 617, 615, 618, 0, 619, 0, 0, 620,
	621, 622, 679, 680, 681, 0, 624, 623, 625, 682,
	0, 626, 0, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 1581, 0, 1331, 1330, 0, 0, 0, 0,
	1328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 632, 0, 0, 0,
	0, 286, 287, 1191, 288, 289, 290, 291, 292, 293,
	633, 634, 0, 294, 635, 295, 636, 0, 637, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 638,
	639, 640, 0, 303, 304, 641, 0, 1336, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1192, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 642, 643, 0, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 346, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 644, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 645, 646, 366, 0, 274, 0,
	0, 0, 0, 0, 367, 368, 369, 647, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 1193, 373, 374,
	375, 648, 649, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 650, 0, 651, 386, 0, 387,
	388, 389, 390, 391, 1580, 653, 654, 471, 1195, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	0, 399, 400, 401, 403, 0, 1194, 402, 655, 656,
	0, 657, 0, 404, 405, 1196, 658, 1197, 406, 407,
	408, 1198, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 659, 1199,
	420, 421, 1200, 0, 422, 0, 0, 0, 423, 424,
	427, 0, 0, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 1201, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 1202, 467, 456, 0,
	0, 1203, 468, 469, 0, 660, 470, 661, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 1204, 481, 1205, 663, 482, 483,
	475, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 666, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 668, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	1206, 536, 537, 538, 539, 540, 669, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 0, 563,
	564, 546, 547, 565, 566, 1207, 567, 568, 569, 570,
	571, 572, 573, 670, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 671, 581, 582, 583, 584,
	672, 588, 589, 0, 590, 591, 0, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 673, 674, 675, 676, 0, 609, 0, 601, 602,
	603, 677, 604, 678, 0, 605, 606, 607, 608, 0,
	610, 611, 0, 0, 612, 613, 614, 616, 617, 615,
	618, 0, 619, 0, 0, 620, 621, 622, 679, 680,
	681, 0, 624, 623, 625, 682, 0, 626, 0, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 1541, 0,
	1331, 1330, 0, 0, 0, 0, 1328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 286, 287, 1191,
	288, 289, 290, 291, 292, 293, 633, 634, 0, 294,
	635, 295, 636, 0, 637, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 638, 639, 640, 0, 303,
	304, 641, 0, 1336, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1192, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	642, 643, 0, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 346, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 644,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	645, 646, 366, 0, 274, 0, 0, 0, 0, 0,
	367, 368, 369, 647, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 1193, 373, 374, 375, 648, 649, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	650, 0, 651, 386, 0, 387, 388, 389, 390, 391,
	652, 653, 654, 471, 1195, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 0, 399, 400, 401,
	403, 0, 1194, 402, 655, 656, 0, 657, 0, 404,
	405, 1196, 658, 1197, 406, 407, 408, 1198, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 659, 1199, 420, 421, 1200, 0,
	422, 0, 0, 0, 423, 424, 427, 0, 0, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 1201, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 1202, 467, 456, 0, 0, 1203, 468, 469,
	0, 660, 470, 661, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	1204, 481, 1205, 663, 482, 483, 475, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 666, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 668, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 1206, 536, 537, 538,
	539, 540, 669, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 0, 563, 564, 546, 547, 565,
	566, 1207, 567, 568, 569, 570, 571, 572, 573, 670,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 671, 581, 582, 583, 584, 672, 588, 589, 0,
	590, 591, 0, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 673, 674, 675,
	676, 0, 609, 0, 601, 602, 603, 677, 604, 678,
	0, 605, 606, 607, 608, 0, 610, 611, 0, 0,
	612, 613, 614, 616, 617, 615, 618, 0, 619, 0,
	0, 620, 621, 622, 679, 680, 681, 0, 624, 623,
	625, 682, 0, 626, 0, 0, 0, 0, 627, 628,
	683, 629, 630, 631, 1506, 0, 1331, 1330, 0, 0,
	0, 0, 1328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 632, 0,
	0, 0, 0, 286, 287, 1191, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 0,
	637, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 638, 639, 640, 0, 303, 304, 641, 0, 1336,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1192, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 0, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 346, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 0,
	274, 0, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 1193,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 650, 0, 651, 386,
	0, 387, 388, 389, 390, 391, 1505, 653, 654, 471,
	1195, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 0, 399, 400, 401, 403, 0, 1194, 402,
	655, 656, 0, 657, 0, 404, 405, 1196, 658, 1197,
	406, 407, 408, 1198, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	659, 1199, 420, 421, 1200, 0, 422, 0, 0, 0,
	423, 424, 427, 0, 0, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 1201, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 1202, 467,
	456, 0, 0, 1203, 468, 469, 0, 660, 470, 661,
	472, 473, 0, 0, 474, 0, 0, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 1204, 481, 1205, 663,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 1206, 536, 537, 538, 539, 540, 669, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 0, 558, 559, 557, 560, 561, 562,
	0, 563, 564, 546, 547, 565, 566, 1207, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 0, 590, 591, 0, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 673, 674, 675, 676, 0, 609, 0,
	601, 602, 603, 677, 604, 678, 0, 605, 606, 607,
	608, 0, 610, 611, 0, 0, 612, 613, 614, 616,
	617, 615, 618, 0, 619, 0, 0, 620, 621, 622,
	679, 680, 681, 0, 624, 623, 625, 682, 0, 626,
	0, 0, 0, 0, 627, 628, 683, 629, 630, 631,
	1325, 0, 1331, 1330, 0, 0, 0, 0, 1328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 632, 0, 0, 0, 0, 286,
	287, 1191, 288, 289, 290, 291, 292, 293, 633, 634,
	0, 294, 635, 295, 636, 0, 637, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 638, 639, 640,
	0, 303, 304, 641, 0, 1336, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1192, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 642, 643, 0, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 346,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 644, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 645, 646, 366, 0, 274, 0, 0, 0,
	0, 0, 367, 368, 369, 647, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 1193, 373, 374, 375, 648,
	649, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 650, 0, 651, 386, 0, 387, 388, 389,
	390, 391, 1324, 653, 654, 471, 1195, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 0, 399,
	400, 401, 403, 0, 1194, 402, 655, 656, 0, 657,
	0, 404, 405, 1196, 658, 1197, 406, 407, 408, 1198,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 659, 1199, 420, 421,
	1200, 0, 422, 0, 0, 0, 423, 424, 427, 0,
	0, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	1201, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 1202, 467, 456, 0, 0, 1203,
	468, 469, 0, 660, 470, 661, 472, 473, 0, 0,
	474, 0, 0, 0, 476, 477, 478, 0, 0, 479,
	480, 662, 1204, 481, 1205, 663, 482, 483, 475, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 666,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 668, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 1206, 536,
	537, 538, 539, 540, 669, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 552, 553, 554, 555, 556, 0,
	558, 559, 557, 560, 561, 562, 0, 563, 564, 546,
	547, 565, 566, 1207, 567, 568, 569, 570, 571, 572,
	573, 670, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 671, 581, 582, 583, 584, 672, 588,
	589, 0, 590, 591, 0, 587, 578, 0, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 0, 600, 673,
	674, 675, 676, 0, 609, 0, 601, 602, 603, 677,
	604, 678, 0, 605, 606, 607, 608, 0, 610, 611,
	0, 0, 612, 613, 614, 616, 617, 615, 618, 0,
	619, 0, 0, 620, 621, 622, 679, 680, 681, 0,
	624, 623, 625, 682, 0, 626, 0, 0, 0, 0,
	627, 628, 683, 629, 630, 631, 1331, 1330, 0, 0,
	0, 0, 1328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 632, 0,
	0, 0, 0, 286, 287, 1191, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 0,
	637, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 638, 639, 640, 0, 303, 304, 641, 0, 1336,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1192, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 0, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 346, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 0,
	274, 0, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 1193,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 650, 0, 651, 386,
	0, 387, 388, 389, 390, 391, 652, 653, 654, 471,
	1195, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 0, 399, 400, 401, 403, 0, 1194, 402,
	655, 656, 0, 657, 0, 404, 405, 1196, 658, 1197,
	406, 407, 408, 1198, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	659, 1199, 420, 421, 1200, 0, 422, 0, 0, 0,
	423, 424, 427, 0, 0, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 1201, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 1202, 467,
	456, 0, 0, 1203, 468, 469, 0, 660, 470, 661,
	472, 473, 0, 0, 474, 0, 0, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 1204, 481, 1205, 663,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 1206, 536, 537, 538, 539, 540, 669, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 0, 558, 559, 557, 560, 561, 562,
	0, 563, 564, 546, 547, 565, 566, 1207, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 0, 590, 591, 0, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 673, 674, 675, 676, 0, 609, 0,
	601, 602, 603, 677, 604, 678, 0, 605, 606, 607,
	608, 0, 610, 611, 0, 0, 612, 613, 614, 616,
	617, 615, 618, 0, 619, 0, 0, 620, 621, 622,
	679, 680, 681, 0, 624, 623, 625, 682, 0, 626,
	1331, 2092, 0, 0, 627, 628, 683, 629, 630, 631,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 286, 287, 1191,
	288, 289, 290, 291, 292, 293, 633, 634, 0, 294,
	635, 295, 636, 0, 637, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 638, 639, 640, 0, 303,
	304, 641, 0, 1336, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1192, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	642, 643, 2089, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 346, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 644,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	645, 646, 366, 0, 274, 0, 0, 0, 0, 0,
	367, 368, 369, 647, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 1193, 373, 374, 375, 648, 649, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	650, 0, 651, 386, 0, 387, 388, 389, 390, 391,
	652, 653, 654, 471, 1195, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 0, 399, 400, 401,
	403, 0, 1194, 402, 655, 656, 0, 657, 0, 404,
	405, 1196, 658, 1197, 406, 407, 408, 1198, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 659, 1199, 420, 421, 1200, 0,
	422, 0, 0, 0, 423, 424, 427, 0, 0, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 1201, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 1202, 467, 456, 0, 0, 1203, 468, 469,
	0, 660, 470, 661, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	1204, 481, 1205, 663, 482, 483, 475, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 666, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 668, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 1206, 536, 537, 538,
	539, 540, 669, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 0, 563, 564, 546, 547, 565,
	566, 1207, 567, 568, 569, 570, 571, 572, 573, 670,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 671, 581, 582, 583, 584, 672, 588, 589, 0,
	590, 591, 0, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 673, 674, 675,
	676, 0, 609, 0, 601, 602, 603, 677, 604, 678,
	0, 605, 606, 607, 608, 0, 610, 611, 0, 0,
	612, 613, 614, 616, 617, 615, 618, 0, 619, 0,
	0, 620, 621, 622, 679, 680, 681, 0, 624, 623,
	625, 682, 0, 626, 1331, 1330, 0, 0, 627, 628,
	683, 629, 630, 631, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 632, 0, 0, 0,
	0, 286, 287, 1191, 288, 289, 290, 291, 292, 293,
	633, 634, 0, 294, 635, 295, 636, 0, 637, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 638,
	639, 640, 0, 303, 304, 641, 0, 1336, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1192, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 642, 643, 0, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 346, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 644, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 645, 646, 366, 0, 274, 0,
	0, 0, 0, 0, 367, 368, 369, 647, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 1193, 373, 374,
	375, 648, 649, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 650, 0, 651, 386, 0, 387,
	388, 389, 390, 391, 652, 653, 654, 471, 1195, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	0, 399, 400, 401, 403, 0, 1194, 402, 655, 656,
	0, 657, 0, 404, 405, 1196, 658, 1197, 406, 407,
	408, 1198, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 659, 1199,
	420, 421, 1200, 0, 422, 0, 0, 0, 423, 424,
	427, 0, 0, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 1201, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 1202, 467, 456, 0,
	0, 1203, 468, 469, 0, 660, 470, 661, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 1204, 481, 1205, 663, 482, 483,
	475, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 666, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 668, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	1206, 536, 537, 538, 539, 540, 669, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 0, 563,
	564, 546, 547, 565, 566, 1207, 567, 568, 569, 570,
	571, 572, 573, 670, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 671, 581, 582, 583, 584,
	672, 588, 589, 0, 590, 591, 0, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 673, 674, 675, 676, 0, 609, 0, 601, 602,
	603, 677, 604, 678, 0, 605, 606, 607, 608, 0,
	610, 611, 0, 0, 612, 613, 614, 616, 617, 615,
	618, 0, 619, 0, 0, 620, 621, 622, 679, 680,
	681, 1331, 624, 623, 625, 682, 0, 626, 0, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 286, 287,
	1191, 288, 289, 290, 291, 292, 293, 633, 634, 0,
	294, 635, 295, 636, 0, 637, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 638, 639, 640, 0,
	303, 304, 641, 0, 1336, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1192, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 642, 643, 0, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 346, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	644, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 645, 646, 366, 0, 274, 0, 0, 0, 0,
	0, 367, 368, 369, 647, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 1193, 373, 374, 375, 648, 649,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 650, 0, 651, 386, 0, 387, 388, 389, 390,
	391, 652, 653, 654, 471, 1195, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 0, 399, 400,
	401, 403, 0, 1194, 402, 655, 656, 0, 657, 0,
	404, 405, 1196, 658, 1197, 406, 407, 408, 1198, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 659, 1199, 420, 421, 1200,
	0, 422, 0, 0, 0, 423, 424, 427, 0, 0,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 1201,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 1202, 467, 456, 0, 0, 1203, 468,
	469, 0, 660, 470, 661, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	662, 1204, 481, 1205, 663, 482, 483, 475, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 666, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 668, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 1206, 536, 537,
	538, 539, 540, 669, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 0, 558,
	559, 557, 560, 561, 562, 0, 563, 564, 546, 547,
	565, 566, 1207, 567, 568, 569, 570, 571, 572, 573,
	670, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 671, 581, 582, 583, 584, 672, 588, 589,
	0, 590, 591, 0, 587, 578, 0, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 673, 674,
	675, 676, 0, 609, 0, 601, 602, 603, 677, 604,
	678, 0, 605, 606, 607, 608, 0, 610, 611, 0,
	0, 612, 613, 614, 616, 617, 615, 618, 0, 619,
	0, 0, 620, 621, 622, 679, 680, 681, 271, 624,
	623, 625, 682, 0, 626, 0, 0, 0, 0, 627,
	628, 683, 629, 630, 631, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	632, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 633, 634, 0, 294, 635, 295,
	636, 0, 637, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 638, 639, 640, 2870, 303, 304, 641,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 2867, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 642, 643,
	0, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 346, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 2874, 354, 644, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 645, 646,
	366, 0, 3093, 0, 0, 0, 0, 0, 367, 368,
	369, 647, 0, 0, 0, 370, 0, 371, 372, 2873,
	0, 0, 373, 374, 375, 648, 649, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 650, 0,
	651, 386, 0, 387, 388, 389, 390, 391, 652, 653,
	654, 471, 0, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 3090, 399, 400, 401, 403, 0,
	0, 402, 655, 656, 0, 657, 0, 404, 3092, 0,
	658, 0, 406, 407, 408, 0, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 659, 0, 420, 421, 3089, 0, 422, 0,
	0, 0, 423, 424, 427, 0, 0, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 0, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	0, 467, 456, 0, 0, 0, 468, 469, 0, 660,
	470, 661, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 0, 481,
	0, 663, 482, 483, 475, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 666, 501, 667, 502, 503,
	2872, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 668, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	669, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 0, 563, 564, 546, 547, 565, 566, 0,
	567, 568, 569, 570, 571, 572, 573, 670, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 671,
	581, 582, 583, 584, 672, 588, 589, 0, 590, 591,
	0, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 673, 674, 675, 676, 0,
	609, 0, 601, 602, 603, 677, 604, 678, 0, 605,
	606, 607, 608, 0, 610, 611, 0, 3091, 612, 613,
	614, 616, 617, 615, 618, 0, 619, 0, 0, 620,
	621, 622, 679, 680, 681, 271, 624, 623, 625, 682,
	0, 626, 0, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 632, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 0, 637,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	638, 639, 640, 2870, 303, 304, 641, 0, 0, 2864,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 2867, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 0, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 346, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 2874, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 0, 0,
	0, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 0, 371, 372, 2873, 0, 0, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 650, 0, 651, 386, 0,
	387, 388, 389, 390, 391, 2863, 653, 654, 471, 0,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 0, 399, 400, 401, 403, 0, 0, 402, 655,
	656, 0, 657, 0, 404, 405, 0, 658, 0, 406,
	407, 408, 0, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 659,
	0, 420, 421, 0, 0, 422, 0, 0, 0, 423,
	424, 427, 0, 0, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 0, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 0, 467, 456,
	0, 0, 0, 468, 469, 0, 660, 470, 661, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 0, 481, 0, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 2872, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 561, 562, 0,
	563, 564, 546, 547, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 0, 590, 591, 0, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 673, 674, 675, 676, 0, 609, 0, 601,
	602, 603, 677, 604, 678, 0, 605, 606, 607, 608,
	0, 610, 611, 0, 2871, 612, 613, 614, 616, 617,
	615, 618, 0, 619, 0, 0, 620, 621, 622, 679,
	680, 681, 0, 624, 623, 625, 682, 1740, 626, 271,
	0, 0, 0, 627, 628, 683, 629, 630, 631, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 1739, 284, 285, 0, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 633, 634, 0, 294, 635,
	295, 636, 0, 637, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 638, 639, 640, 0, 303, 304,
	641, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 1738, 334, 0, 335, 642,
	643, 0, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 346, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 644, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 645,
	646, 366, 0, 274, 0, 0, 0, 0, 0, 367,
	368, 369, 647, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 0, 373, 374, 375, 648, 649, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 650,
	0, 651, 386, 0, 387, 388, 389, 390, 391, 652,
	653, 654, 471, 0, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 275, 399, 400, 401, 403,
	0, 0, 402, 655, 656, 0, 657, 0, 404, 405,
	0, 658, 0, 406, 407, 408, 0, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 659, 0, 420, 421, 0, 0, 422,
	0, 0, 0, 423, 424, 427, 0, 0, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 0, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 0, 467, 456, 0, 276, 0, 468, 469, 0,
	660, 470, 661, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 0,
	481, 0, 663, 482, 483, 475, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 666, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 668, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 669, 541, 0, 542, 543, 549, 550, 551, 1741,
	545, 552, 553, 554, 555, 556, 0, 1737, 559, 557,
	560, 561, 562, 0, 563, 564, 546, 547, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 670, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	671, 581, 582, 583, 584, 672, 588, 589, 0, 590,
	591, 0, 587, 578, 1735, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 673, 674, 675, 676,
	0, 609, 0, 601, 602, 603, 677, 604, 678, 0,
	605, 606, 607, 608, 0, 610, 611, 0, 0, 612,
	613, 614, 616, 617, 615, 618, 0, 619, 0, 0,
	620, 621, 622, 679, 680, 681, 0, 1736, 623, 625,
	682, 1481, 626, 271, 0, 0, 0, 627, 628, 683,
	629, 630, 631, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 632, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 633,
	634, 0, 294, 635, 295, 636, 0, 637, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 638, 639,
	640, 0, 303, 304, 641, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 642, 643, 0, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	346, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 644, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 645, 646, 366, 0, 274, 0, 0,
	0, 0, 0, 367, 368, 369, 647, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 0, 373, 374, 375,
	648, 649, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 650, 0, 651, 386, 0, 387, 388,
	389, 390, 391, 1483, 653, 654, 471, 0, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 275,
	399, 400, 401, 403, 0, 0, 402, 655, 656, 0,
	657, 0, 404, 405, 0, 658, 0, 406, 407, 408,
	0, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 659, 0, 420,
	421, 0, 0, 422, 0, 0, 0, 423, 424, 427,
	0, 0, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 0, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 0, 467, 456, 0, 276,
	0, 468, 469, 0, 660, 470, 661, 472, 473, 0,
	0, 474, 0, 0, 1241, 476, 477, 478, 0, 0,
	479, 480, 662, 0, 481, 0, 663, 482, 483, 475,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	666, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 668, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 669, 541, 0, 542, 543,
	549, 550, 551, 544, 545, 552, 553, 554, 555, 556,
	0, 558, 559, 557, 560, 561, 562, 0, 563, 564,
	546, 547, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 670, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 671, 581, 582, 583, 584, 672,
	588, 589, 0, 590, 591, 0, 587, 578, 0, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	673, 674, 675, 676, 0, 609, 0, 601, 602, 603,
	677, 604, 678, 0, 605, 606, 607, 608, 0, 610,
	611, 0, 0, 612, 613, 614, 616, 617, 615, 618,
	0, 619, 0, 0, 620, 621, 622, 679, 680, 681,
	0, 624, 623, 625, 682, 1478, 626, 271, 0, 0,
	0, 627, 628, 683, 629, 630, 631, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 632,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 633, 634, 0, 294, 635, 295, 636,
	0, 637, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 638, 639, 640, 0, 303, 304, 641, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 642, 643, 0,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 346, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 644, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 645, 646, 366,
	0, 274, 0, 0, 0, 0, 0, 367, 368, 369,
	647, 0, 0, 0, 370, 0, 371, 372, 0, 0,
	0, 373, 374, 375, 648, 649, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 650, 0, 651,
	386, 0, 387, 388, 389, 390, 391, 1480, 653, 654,
	471, 0, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 275, 399, 400, 401, 403, 0, 0,
	402, 655, 656, 0, 657, 0, 404, 405, 0, 658,
	0, 406, 407, 408, 0, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 659, 0, 420, 421, 0, 0, 422, 0, 0,
	0, 423, 424, 427, 0, 0, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 0, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 0,
	467, 456, 0, 276, 0, 468, 469, 0, 660, 470,
	661, 472, 473, 0, 0, 474, 0, 0, 1241, 476,
	477, 478, 0, 0, 479, 480, 662, 0, 481, 0,
	663, 482, 483, 475, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 666, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	668, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 669,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 0, 563, 564, 546, 547, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 670, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 671, 581,
	582, 583, 584, 672, 588, 589, 0, 590, 591, 0,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 673, 674, 675, 676, 0, 609,
	0, 601, 602, 603, 677, 604, 678, 0, 605, 606,
	607, 608, 0, 610, 611, 0, 0, 612, 613, 614,
	616, 617, 615, 618, 0, 619, 0, 0, 620, 621,
	622, 679, 680, 681, 0, 624, 623, 625, 682, 1385,
	626, 271, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 633, 634, 0,
	294, 635, 295, 636, 0, 637, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 638, 639, 640, 0,
	303, 304, 641, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 642, 643, 0, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 346, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	644, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 645, 646, 366, 0, 274, 0, 0, 0, 0,
	0, 367, 368, 369, 647, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 0, 373, 374, 375, 648, 649,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 650, 0, 651, 386, 0, 387, 388, 389, 390,
	391, 1387, 653, 654, 471, 0, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 275, 399, 400,
	401, 403, 0, 0, 402, 655, 656, 0, 657, 0,
	404, 405, 0, 658, 0, 406, 407, 408, 0, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 659, 0, 420, 421, 0,
	0, 422, 0, 0, 0, 423, 424, 427, 0, 0,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 0,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 0, 467, 456, 0, 276, 0, 468,
	469, 0, 660, 470, 661, 472, 473, 0, 0, 474,
	0, 0, 1241, 476, 477, 478, 0, 0, 479, 480,
	662, 0, 481, 0, 663, 482, 483, 475, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 666, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 668, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 669, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 0, 558,
	559, 557, 560, 561, 562, 0, 563, 564, 546, 547,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	670, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 671, 581, 582, 583, 584, 672, 588, 589,
	0, 590, 591, 0, 587, 578, 0, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 673, 674,
	675, 676, 0, 609, 0, 601, 602, 603, 677, 604,
	678, 0, 605, 606, 607, 608, 0, 610, 611, 0,
	0, 612, 613, 614, 616, 617, 615, 618, 0, 619,
	0, 0, 620, 621, 622, 679, 680, 681, 0, 624,
	623, 625, 682, 715, 626, 271, 0, 0, 0, 627,
	628, 683, 629, 630, 631, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 714, 282, 283, 704,
	284, 285, 0, 0, 0, 0, 0, 632, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 0, 637,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	638, 639, 640, 0, 303, 304, 641, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 707, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 0, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 346, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 0, 0,
	0, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 0, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 708, 385, 650, 0, 651, 386, 0,
	387, 388, 389, 390, 391, 652, 653, 654, 471, 0,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 0, 399, 400, 401, 403, 0, 0, 402, 655,
	656, 0, 657, 0, 404, 405, 0, 658, 0, 406,
	407, 408, 0, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 659,
	0, 420, 421, 0, 0, 422, 0, 0, 0, 423,
	424, 427, 0, 0, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 0, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 0, 467, 456,
	0, 0, 0, 468, 469, 0, 660, 470, 661, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 0, 481, 0, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 709, 558, 559, 557, 560, 561, 562, 0,
	563, 564, 546, 547, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 0, 590, 591, 0, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 673, 674, 675, 676, 0, 609, 0, 601,
	602, 603, 677, 604, 678, 0, 605, 606, 607, 608,
	0, 610, 611, 0, 0, 612, 613, 614, 616, 617,
	615, 618, 0, 619, 0, 0, 620, 621, 622, 679,
	680, 681, 0, 624, 623, 625, 682, 703, 626, 271,
	0, 0, 0, 627, 628, 683, 629, 630, 631, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 704, 284, 285, 0, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 633, 634, 0, 294, 635,
	295, 636, 0, 637, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 638, 639, 640, 0, 303, 304,
	641, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 707, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 642,
	643, 0, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 346, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 644, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 645,
	646, 366, 0, 0, 0, 0, 0, 0, 0, 367,
	368, 369, 647, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 0, 373, 374, 375, 648, 649, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 708, 385, 650,
	0, 651, 386, 0, 387, 388, 389, 390, 391, 652,
	653, 654, 471, 0, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 0, 399, 400, 401, 403,
	0, 0, 402, 655, 656, 0, 657, 0, 404, 405,
	0, 658, 0, 406, 407, 408, 0, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 659, 0, 420, 421, 0, 0, 422,
	0, 0, 0, 423, 424, 427, 0, 0, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 0, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 0, 467, 456, 0, 0, 0, 468, 469, 0,
	660, 470, 661, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 0,
	481, 0, 663, 482, 483, 475, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 666, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 668, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 669, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 709, 558, 559, 557,
	560, 561, 562, 0, 563, 564, 546, 547, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 670, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	671, 581, 582, 583, 584, 672, 588, 589, 0, 590,
	591, 0, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 673, 674, 675, 676,
	0, 609, 0, 601, 602, 603, 677, 604, 678, 0,
	605, 606, 607, 608, 0, 610, 611, 0, 0, 612,
	613, 614, 616, 617, 615, 618, 0, 619, 0, 0,
	620, 621, 622, 679, 680, 681, 271, 624, 623, 625,
	682, 0, 626, 0, 0, 0, 0, 627, 628, 683,
	629, 630, 631, 277, 279, 278, 280, 281, 282, 283,
	704, 284, 285, 0, 0, 0, 0, 0, 632, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 0,
	637, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 638, 639, 640, 0, 303, 304, 641, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 707, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 0, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 346, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 0,
	0, 0, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 0,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 708, 385, 650, 0, 651, 386,
	0, 387, 388, 389, 390, 391, 652, 653, 654, 471,
	0, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 0, 399, 400, 401, 403, 0, 0, 402,
	655, 656, 0, 657, 0, 404, 405, 0, 658, 0,
	406, 407, 408, 0, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	659, 0, 420, 421, 0, 0, 422, 0, 0, 0,
	423, 424, 427, 0, 0, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 0, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 0, 467,
	456, 0, 0, 0, 468, 469, 0, 660, 470, 661,
	472, 473, 0, 0, 474, 0, 0, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 0, 481, 0, 663,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 669, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 709, 558, 559, 557, 560, 561, 562,
	0, 563, 564, 546, 547, 565, 566, 0, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 0, 590, 591, 0, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 673, 674, 675, 676, 0, 609, 0,
	601, 602, 603, 677, 604, 678, 0, 605, 606, 607,
	608, 0, 610, 611, 0, 0, 612, 613, 614, 616,
	617, 615, 618, 0, 619, 0, 0, 620, 621, 622,
	679, 680, 681, 271, 624, 623, 625, 682, 0, 626,
	0, 0, 0, 0, 627, 628, 683, 629, 630, 631,
	277, 279, 278, 280, 281, 282, 283, 704, 284, 285,
	0, 0, 0, 0, 0, 632, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 633,
	634, 0, 294, 635, 295, 636, 0, 637, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 638, 639,
	640, 0, 303, 304, 641, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 707, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 642, 643, 0, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	346, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 644, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 645, 646, 366, 0, 0, 0, 0,
	0, 0, 0, 367, 368, 369, 647, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 0, 373, 374, 375,
	648, 649, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 3951, 385, 650, 0, 651, 386, 0, 387, 388,
	389, 390, 391, 652, 653, 654, 471, 0, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 0,
	399, 400, 401, 403, 0, 0, 402, 655, 656, 0,
	657, 0, 404, 405, 0, 658, 0, 406, 407, 408,
	0, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 659, 0, 420,
	421, 0, 0, 422, 0, 0, 0, 423, 424, 427,
	0, 0, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 0, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 0, 467, 456, 0, 0,
	0, 468, 469, 0, 660, 470, 661, 472, 473, 0,
	0, 474, 0, 0, 0, 476, 477, 478, 0, 0,
	479, 480, 662, 0, 481, 0, 663, 482, 483, 475,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	666, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 668, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 669, 541, 0, 542, 543,
	549, 550, 551, 544, 545, 552, 553, 554, 555, 556,
	709, 558, 559, 557, 560, 561, 562, 0, 563, 564,
	546, 547, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 670, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 671, 581, 582, 583, 584, 672,
	588, 589, 0, 590, 591, 0, 587, 578, 0, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	673, 674, 675, 676, 0, 609, 0, 601, 602, 603,
	677, 604, 678, 0, 605, 606, 607, 608, 0, 610,
	611, 0, 0, 612, 613, 614, 616, 617, 615, 618,
	0, 619, 0, 0, 620, 621, 622, 679, 680, 681,
	271, 624, 623, 625, 682, 0, 626, 0, 0, 0,
	0, 627, 628, 683, 629, 630, 631, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 633, 634, 0, 294,
	635, 295, 636, 0, 637, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 638, 639, 640, 0, 303,
	304, 641, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	642, 643, 0, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 346, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 644,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	645, 646, 366, 0, 274, 0, 0, 0, 0, 0,
	367, 368, 369, 647, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 0, 373, 374, 375, 648, 649, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	650, 0, 651, 386, 0, 387, 388, 389, 390, 391,
	652, 653, 654, 471, 0, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 275, 399, 400, 401,
	403, 0, 0, 402, 655, 656, 0, 657, 0, 404,
	405, 0, 658, 0, 406, 407, 408, 0, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 659, 0, 420, 421, 0, 0,
	422, 0, 0, 0, 423, 424, 427, 0, 0, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 0, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 0, 467, 456, 0, 276, 0, 468, 469,
	0, 660, 470, 661, 472, 473, 0, 0, 474, 0,
	0, 1241, 476, 477, 478, 0, 0, 479, 480, 662,
	0, 481, 0, 663, 482, 483, 475, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 666, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 668, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 669, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 0, 563, 564, 546, 547, 565,
	566, 0, 567, 568, 569, 570, 571, 572, 573, 670,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 671, 581, 582, 583, 584, 672, 588, 589, 0,
	590, 591, 0, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 673, 674, 675,
	676, 0, 609, 0, 601, 602, 603, 677, 604, 678,
	0, 605, 606, 607, 608, 0, 610, 611, 0, 0,
	612, 613, 614, 616, 617, 615, 618, 0, 619, 0,
	0, 620, 621, 622, 679, 680, 681, 271, 624, 623,
	625, 682, 0, 626, 0, 0, 0, 0, 627, 628,
	683, 629, 630, 631, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 632,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 633, 634, 0, 294, 635, 295, 636,
	0, 637, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 638, 639, 640, 0, 303, 304, 641, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 642, 643, 0,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 346, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 644, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 645, 646, 366,
	0, 274, 0, 0, 0, 0, 0, 367, 368, 369,
	647, 0, 0, 0, 370, 0, 371, 372, 0, 0,
	0, 373, 374, 375, 648, 649, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 650, 0, 651,
	386, 0, 387, 388, 389, 390, 391, 652, 653, 654,
	471, 0, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 275, 399, 400, 401, 403, 0, 0,
	402, 655, 656, 0, 657, 0, 404, 405, 0, 658,
	0, 406, 407, 408, 0, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 659, 0, 420, 421, 0, 0, 422, 0, 0,
	0, 423, 424, 427, 0, 0, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 0, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 3494,
	467, 456, 0, 276, 0, 468, 469, 0, 660, 470,
	661, 472, 473, 0, 0, 474, 0, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 0, 481, 0,
	663, 482, 483, 475, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 666, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	668, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 669,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 0, 563, 564, 546, 547, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 670, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 671, 581,
	582, 583, 584, 672, 588, 589, 0, 590, 591, 0,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 673, 674, 675, 676, 0, 609,
	0, 601, 602, 603, 677, 604, 678, 0, 605, 606,
	607, 608, 0, 610, 611, 0, 0, 612, 613, 614,
	616, 617, 615, 618, 0, 619, 0, 0, 620, 621,
	622, 679, 680, 681, 0, 624, 623, 625, 682, 3038,
	626, 271, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 633, 634, 0,
	294, 635, 295, 636, 0, 637, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 638, 639, 640, 0,
	303, 304, 641, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 642, 643, 0, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 346, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	644, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 645, 646, 366, 0, 274, 0, 0, 0, 0,
	0, 367, 368, 369, 647, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 0, 373, 374, 375, 648, 649,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 650, 0, 651, 386, 0, 387, 388, 389, 390,
	391, 3037, 653, 654, 471, 0, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 275, 399, 400,
	401, 403, 0, 0, 402, 655, 656, 0, 657, 0,
	404, 405, 0, 658, 0, 406, 407, 408, 0, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 659, 0, 420, 421, 0,
	0, 422, 0, 0, 0, 423, 424, 427, 0, 0,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 0,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 0, 467, 456, 0, 276, 0, 468,
	469, 0, 660, 470, 661, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	662, 0, 481, 0, 663, 482, 483, 475, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 666, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 668, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 669, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 0, 558,
	559, 557, 560, 561, 562, 0, 563, 564, 546, 547,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	670, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 671, 581, 582, 583, 584, 672, 588, 589,
	0, 590, 591, 0, 587, 578, 0, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 673, 674,
	675, 676, 0, 609, 0, 601, 602, 603, 677, 604,
	678, 0, 605, 606, 607, 608, 0, 610, 611, 0,
	0, 612, 613, 614, 616, 617, 615, 618, 0, 619,
	0, 0, 620, 621, 622, 679, 680, 681, 0, 624,
	623, 625, 682, 2321, 626, 271, 0, 0, 0, 627,
	628, 683, 629, 630, 631, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 632, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 0, 637,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	638, 639, 640, 0, 303, 304, 641, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 0, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 346, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 0, 274,
	0, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 0, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 650, 0, 651, 386, 0,
	387, 388, 389, 390, 391, 652, 653, 654, 471, 0,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 275, 399, 400, 401, 403, 0, 0, 402, 655,
	656, 0, 657, 0, 404, 405, 0, 658, 0, 406,
	407, 408, 0, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 659,
	0, 420, 421, 0, 0, 422, 0, 0, 0, 423,
	424, 427, 0, 0, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 0, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 0, 467, 456,
	0, 276, 0, 468, 469, 0, 660, 470, 661, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 0, 481, 0, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 561, 562, 0,
	563, 564, 546, 547, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 0, 590, 591, 0, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 673, 674, 675, 676, 0, 609, 0, 601,
	602, 603, 677, 604, 678, 0, 605, 606, 607, 608,
	0, 610, 611, 0, 0, 612, 613, 614, 616, 617,
	615, 618, 0, 619, 0, 0, 620, 621, 622, 679,
	680, 681, 271, 624, 623, 625, 682, 0, 626, 0,
	0, 0, 0, 627, 628, 683, 629, 630, 631, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 632, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 633, 634,
	0, 294, 635, 295, 636, 0, 637, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 638, 639, 640,
	0, 303, 304, 641, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 642, 643, 0, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 346,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 644, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 645, 646, 366, 0, 274, 0, 0, 0,
	0, 0, 367, 368, 369, 647, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 0, 373, 374, 375, 648,
	649, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 650, 0, 651, 386, 0, 387, 388, 389,
	390, 391, 652, 653, 654, 471, 0, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 275, 399,
	400, 401, 403, 0, 0, 402, 655, 656, 0, 657,
	0, 404, 405, 0, 658, 0, 406, 407, 408, 0,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 659, 0, 420, 421,
	0, 0, 422, 0, 0, 0, 423, 424, 427, 0,
	0, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	0, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 0, 467, 456, 0, 276, 0,
	468, 469, 0, 660, 470, 661, 472, 473, 0, 0,
	474, 0, 0, 0, 476, 477, 478, 0, 0, 479,
	480, 662, 0, 481, 0, 663, 482, 483, 475, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 666,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 668, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 669, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 552, 553, 554, 555, 556, 0,
	558, 559, 557, 560, 561, 562, 0, 563, 564, 546,
	547, 565, 566, 0, 567, 568, 569, 570, 571, 572,
	573, 670, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 671, 581, 582, 583, 584, 672, 588,
	589, 0, 590, 591, 0, 587, 578, 2260, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 0, 600, 673,
	674, 675, 676, 0, 609, 0, 601, 602, 603, 677,
	604, 678, 0, 605, 606, 607, 608, 0, 610, 611,
	0, 0, 612, 613, 614, 616, 617, 615, 618, 0,
	619, 0, 0, 620, 621, 622, 679, 680, 681, 0,
	624, 623, 625, 682, 2267, 626, 271, 0, 0, 0,
	627, 628, 683, 629, 630, 631, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 632, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 0,
	637, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 638, 639, 640, 0, 303, 304, 641, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 0, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 346, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 0,
	274, 0, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 0,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 650, 0, 651, 386,
	0, 387, 388, 389, 390, 391, 2266, 653, 654, 471,
	0, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 275, 399, 400, 401, 403, 0, 0, 402,
	655, 656, 0, 657, 0, 404, 405, 0, 658, 0,
	406, 407, 408, 0, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	659, 0, 420, 421, 0, 0, 422, 0, 0, 0,
	423, 424, 427, 0, 0, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 0, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 0, 467,
	456, 0, 276, 0, 468, 469, 0, 660, 470, 661,
	472, 473, 0, 0, 474, 0, 0, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 0, 481, 0, 663,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 669, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 0, 558, 559, 557, 560, 561, 562,
	0, 563, 564, 546, 547, 565, 566, 0, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 0, 590, 591, 0, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 673, 674, 675, 676, 0, 609, 0,
	601, 602, 603, 677, 604, 678, 0, 605, 606, 607,
	608, 0, 610, 611, 0, 0, 612, 613, 614, 616,
	617, 615, 618, 0, 619, 0, 0, 620, 621, 622,
	679, 680, 681, 0, 624, 623, 625, 682, 2253, 626,
	271, 0, 0, 0, 627, 628, 683, 629, 630, 631,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 633, 634, 0, 294,
	635, 295, 636, 0, 637, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 638, 639, 640, 0, 303,
	304, 641, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	642, 643, 0, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 346, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 644,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	645, 646, 366, 0, 274, 0, 0, 0, 0, 0,
	367, 368, 369, 647, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 0, 373, 374, 375, 648, 649, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	650, 0, 651, 386, 0, 387, 388, 389, 390, 391,
	2255, 653, 654, 471, 0, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 275, 399, 400, 401,
	403, 0, 0, 402, 655, 656, 0, 657, 0, 404,
	405, 0, 658, 0, 406, 407, 408, 0, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 659, 0, 420, 421, 0, 0,
	422, 0, 0, 0, 423, 424, 427, 0, 0, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 0, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 0, 467, 456, 0, 276, 0, 468, 469,
	0, 660, 470, 661, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	0, 481, 0, 663, 482, 483, 475, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 666, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 668, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 669, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 0, 563, 564, 546, 547, 565,
	566, 0, 567, 568, 569, 570, 571, 572, 573, 670,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 671, 581, 582, 583, 584, 672, 588, 589, 0,
	590, 591, 0, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 673, 674, 675,
	676, 0, 609, 0, 601, 602, 603, 677, 604, 678,
	0, 605, 606, 607, 608, 0, 610, 611, 0, 0,
	612, 613, 614, 616, 617, 615, 618, 0, 619, 0,
	0, 620, 621, 622, 679, 680, 681, 271, 624, 623,
	625, 682, 0, 626, 0, 0, 0, 0, 627, 628,
	683, 629, 630, 631, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 632,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 633, 634, 0, 294, 635, 295, 636,
	0, 637, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 638, 639, 640, 0, 303, 304, 641, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 642, 643, 0,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 346, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 644, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 645, 646, 366,
	0, 274, 0, 0, 0, 0, 0, 367, 368, 369,
	647, 0, 0, 0, 370, 0, 371, 372, 0, 0,
	0, 373, 374, 375, 648, 649, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 650, 0, 651,
	386, 0, 387, 388, 389, 390, 391, 2220, 653, 654,
	471, 0, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 275, 399, 400, 401, 403, 0, 0,
	402, 655, 656, 0, 657, 0, 404, 405, 0, 658,
	0, 406, 407, 408, 0, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 659, 0, 420, 421, 0, 0, 422, 0, 0,
	0, 423, 424, 427, 0, 0, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 0, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 0,
	467, 456, 0, 276, 0, 468, 469, 0, 660, 470,
	661, 472, 473, 0, 0, 474, 0, 0, 1241, 476,
	477, 478, 0, 0, 479, 480, 662, 0, 481, 0,
	663, 482, 483, 475, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 666, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	668, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 669,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 0, 563, 564, 546, 547, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 670, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 671, 581,
	582, 583, 584, 672, 588, 589, 0, 590, 591, 0,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 673, 674, 675, 676, 0, 609,
	0, 601, 602, 603, 677, 604, 678, 0, 605, 606,
	607, 608, 0, 610, 611, 0, 0, 612, 613, 614,
	616, 617, 615, 618, 0, 619, 0, 0, 620, 621,
	622, 679, 680, 681, 0, 624, 623, 625, 682, 1585,
	626, 271, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 633, 634, 0,
	294, 635, 295, 636, 0, 637, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 638, 639, 640, 0,
	303, 304, 641, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 642, 643, 0, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 346, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	644, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 645, 646, 366, 0, 274, 0, 0, 0, 0,
	0, 367, 368, 369, 647, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 0, 373, 374, 375, 648, 649,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 650, 0, 651, 386, 0, 387, 388, 389, 390,
	391, 1584, 653, 654, 471, 0, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 275, 399, 400,
	401, 403, 0, 0, 402, 655, 656, 0, 657, 0,
	404, 405, 0, 658, 0, 406, 407, 408, 0, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 659, 0, 420, 421, 0,
	0, 422, 0, 0, 0, 423, 424, 427, 0, 0,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 0,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 0, 467, 456, 0, 276, 0, 468,
	469, 0, 660, 470, 661, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	662, 0, 481, 0, 663, 482, 483, 475, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 666, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 668, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 669, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 0, 558,
	559, 557, 560, 561, 562, 0, 563, 564, 546, 547,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	670, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 671, 581, 582, 583, 584, 672, 588, 589,
	0, 590, 591, 0, 587, 578, 0, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 673, 674,
	675, 676, 0, 609, 0, 601, 602, 603, 677, 604,
	678, 0, 605, 606, 607, 608, 0, 610, 611, 0,
	0, 612, 613, 614, 616, 617, 615, 618, 0, 619,
	0, 0, 620, 621, 622, 679, 680, 681, 0, 624,
	623, 625, 682, 1498, 626, 271, 0, 0, 0, 627,
	628, 683, 629, 630, 631, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 632, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 0, 637,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	638, 639, 640, 0, 303, 304, 641, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 0, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 346, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 0, 274,
	0, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 0, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 650, 0, 651, 386, 0,
	387, 388, 389, 390, 391, 652, 653, 654, 471, 0,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 275, 399, 400, 401, 403, 0, 0, 402, 655,
	656, 0, 657, 0, 404, 405, 0, 658, 0, 406,
	407, 408, 0, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 659,
	0, 420, 421, 0, 0, 422, 0, 0, 0, 423,
	424, 427, 0, 0, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 0, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 0, 467, 456,
	0, 276, 0, 468, 469, 0, 660, 470, 661, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 0, 481, 0, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 561, 562, 0,
	563, 564, 546, 547, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 0, 590, 591, 0, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 673, 674, 675, 676, 0, 609, 0, 601,
	602, 603, 677, 604, 678, 0, 605, 606, 607, 608,
	0, 610, 611, 0, 0, 612, 613, 614, 616, 617,
	615, 618, 0, 619, 0, 0, 620, 621, 622, 679,
	680, 681, 0, 624, 623, 625, 682, 1491, 626, 271,
	0, 0, 0, 627, 628, 683, 629, 630, 631, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 633, 634, 0, 294, 635,
	295, 636, 0, 637, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 638, 639, 640, 0, 303, 304,
	641, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 642,
	643, 0, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 346, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 644, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 645,
	646, 366, 0, 274, 0, 0, 0, 0, 0, 367,
	368, 369, 647, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 0, 373, 374, 375, 648, 649, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 650,
	0, 651, 386, 0, 387, 388, 389, 390, 391, 1493,
	653, 654, 471, 0, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 275, 399, 400, 401, 403,
	0, 0, 402, 655, 656, 0, 657, 0, 404, 405,
	0, 658, 0, 406, 407, 408, 0, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 659, 0, 420, 421, 0, 0, 422,
	0, 0, 0, 423, 424, 427, 0, 0, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 0, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 0, 467, 456, 0, 276, 0, 468, 469, 0,
	660, 470, 661, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 0,
	481, 0, 663, 482, 483, 475, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 666, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 668, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 669, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 0, 563, 564, 546, 547, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 670, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	671, 581, 582, 583, 584, 672, 588, 589, 0, 590,
	591, 0, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 673, 674, 675, 676,
	0, 609, 0, 601, 602, 603, 677, 604, 678, 0,
	605, 606, 607, 608, 0, 610, 611, 0, 0, 612,
	613, 614, 616, 617, 615, 618, 0, 619, 0, 0,
	620, 621, 622, 679, 680, 681, 0, 624, 623, 625,
	682, 1315, 626, 271, 0, 0, 0, 627, 628, 683,
	629, 630, 631, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 632, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 633,
	634, 0, 294, 635, 295, 636, 0, 637, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 638, 639,
	640, 0, 303, 304, 641, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 642, 643, 0, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	346, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 644, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 645, 646, 366, 0, 274, 0, 0,
	0, 0, 0, 367, 368, 369, 647, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 0, 373, 374, 375,
	648, 649, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 650, 0, 651, 386, 0, 387, 388,
	389, 390, 391, 1314, 653, 654, 471, 0, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 275,
	399, 400, 401, 403, 0, 0, 402, 655, 656, 0,
	657, 0, 404, 405, 0, 658, 0, 406, 407, 408,
	0, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 659, 0, 420,
	421, 0, 0, 422, 0, 0, 0, 423, 424, 427,
	0, 0, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 0, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 0, 467, 456, 0, 276,
	0, 468, 469, 0, 660, 470, 661, 472, 473, 0,
	0, 474, 0, 0, 0, 476, 477, 478, 0, 0,
	479, 480, 662, 0, 481, 0, 663, 482, 483, 475,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	666, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 668, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 669, 541, 0, 542, 543,
	549, 550, 551, 544, 545, 552, 553, 554, 555, 556,
	0, 558, 559, 557, 560, 561, 562, 0, 563, 564,
	546, 547, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 670, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 671, 581, 582, 583, 584, 672,
	588, 589, 0, 590, 591, 0, 587, 578, 0, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	673, 674, 675, 676, 0, 609, 0, 601, 602, 603,
	677, 604, 678, 0, 605, 606, 607, 608, 0, 610,
	611, 0, 0, 612, 613, 614, 616, 617, 615, 618,
	0, 619, 0, 0, 620, 621, 622, 679, 680, 681,
	0, 624, 623, 625, 682, 1305, 626, 271, 0, 0,
	0, 627, 628, 683, 629, 630, 631, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 632,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 633, 634, 0, 294, 635, 295, 636,
	0, 637, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 638, 639, 640, 0, 303, 304, 641, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 642, 643, 0,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 346, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 644, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 645, 646, 366,
	0, 274, 0, 0, 0, 0, 0, 367, 368, 369,
	647, 0, 0, 0, 370, 0, 371, 372, 0, 0,
	0, 373, 374, 375, 648, 649, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 650, 0, 651,
	386, 0, 387, 388, 389, 390, 391, 1304, 653, 654,
	471, 0, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 275, 399, 400, 401, 403, 0, 0,
	402, 655, 656, 0, 657, 0, 404, 405, 0, 658,
	0, 406, 407, 408, 0, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 659, 0, 420, 421, 0, 0, 422, 0, 0,
	0, 423, 424, 427, 0, 0, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 0, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 0,
	467, 456, 0, 276, 0, 468, 469, 0, 660, 470,
	661, 472, 473, 0, 0, 474, 0, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 0, 481, 0,
	663, 482, 483, 475, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 666, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	668, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 669,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 0, 563, 564, 546, 547, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 670, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 671, 581,
	582, 583, 584, 672, 588, 589, 0, 590, 591, 0,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 673, 674, 675, 676, 0, 609,
	0, 601, 602, 603, 677, 604, 678, 0, 605, 606,
	607, 608, 0, 610, 611, 0, 0, 612, 613, 614,
	616, 617, 615, 618, 0, 619, 0, 0, 620, 621,
	622, 679, 680, 681, 0, 624, 623, 625, 682, 1302,
	626, 271, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 633, 634, 0,
	294, 635, 295, 636, 0, 637, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 638, 639, 640, 0,
	303, 304, 641, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 642, 643, 0, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 346, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	644, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 645, 646, 366, 0, 274, 0, 0, 0, 0,
	0, 367, 368, 369, 647, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 0, 373, 374, 375, 648, 649,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 650, 0, 651, 386, 0, 387, 388, 389, 390,
	391, 1301, 653, 654, 471, 0, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 275, 399, 400,
	401, 403, 0, 0, 402, 655, 656, 0, 657, 0,
	404, 405, 0, 658, 0, 406, 407, 408, 0, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 659, 0, 420, 421, 0,
	0, 422, 0, 0, 0, 423, 424, 427, 0, 0,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 0,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 0, 467, 456, 0, 276, 0, 468,
	469, 0, 660, 470, 661, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	662, 0, 481, 0, 663, 482, 483, 475, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 666, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 668, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 669, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 0, 558,
	559, 557, 560, 561, 562, 0, 563, 564, 546, 547,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	670, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 671, 581, 582, 583, 584, 672, 588, 589,
	0, 590, 591, 0, 587, 578, 0, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 673, 674,
	675, 676, 0, 609, 0, 601, 602, 603, 677, 604,
	678, 0, 605, 606, 607, 608, 0, 610, 611, 0,
	0, 612, 613, 614, 616, 617, 615, 618, 0, 619,
	0, 0, 620, 621, 622, 679, 680, 681, 0, 624,
	623, 625, 682, 1297, 626, 271, 0, 0, 0, 627,
	628, 683, 629, 630, 631, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 632, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 0, 637,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	638, 639, 640, 0, 303, 304, 641, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 0, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 346, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 0, 274,
	0, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 0, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 650, 0, 651, 386, 0,
	387, 388, 389, 390, 391, 1296, 653, 654, 471, 0,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 275, 399, 400, 401, 403, 0, 0, 402, 655,
	656, 0, 657, 0, 404, 405, 0, 658, 0, 406,
	407, 408, 0, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 659,
	0, 420, 421, 0, 0, 422, 0, 0, 0, 423,
	424, 427, 0, 0, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 0, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 0, 467, 456,
	0, 276, 0, 468, 469, 0, 660, 470, 661, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 0, 481, 0, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 561, 562, 0,
	563, 564, 546, 547, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 0, 590, 591, 0, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 673, 674, 675, 676, 0, 609, 0, 601,
	602, 603, 677, 604, 678, 0, 605, 606, 607, 608,
	0, 610, 611, 0, 0, 612, 613, 614, 616, 617,
	615, 618, 0, 619, 0, 0, 620, 621, 622, 679,
	680, 681, 0, 624, 623, 625, 682, 685, 626, 271,
	0, 0, 0, 627, 628, 683, 629, 630, 631, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 633, 634, 0, 294, 635,
	295, 636, 0, 637, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 638, 639, 640, 0, 303, 304,
	641, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 642,
	643, 0, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 346, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 644, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 645,
	646, 366, 0, 274, 0, 0, 0, 0, 0, 367,
	368, 369, 647, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 0, 373, 374, 375, 648, 649, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 650,
	0, 651, 386, 0, 387, 388, 389, 390, 391, 652,
	653, 654, 471, 0, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 275, 399, 400, 401, 403,
	0, 0, 402, 655, 656, 0, 657, 0, 404, 405,
	0, 658, 0, 406, 407, 408, 0, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 659, 0, 420, 421, 0, 0, 422,
	0, 0, 0, 423, 424, 427, 0, 0, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 0, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 0, 467, 456, 0, 276, 0, 468, 469, 0,
	660, 470, 661, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 0,
	481, 0, 663, 482, 483, 475, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 666, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 668, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 669, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 0, 563, 564, 546, 547, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 670, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	671, 581, 582, 583, 584, 672, 588, 589, 0, 590,
	591, 0, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 673, 674, 675, 676,
	0, 609, 0, 601, 602, 603, 677, 604, 678, 0,
	605, 606, 607, 608, 0, 610, 611, 0, 0, 612,
	613, 614, 616, 617, 615, 618, 0, 619, 0, 0,
	620, 621, 622, 679, 680, 681, 0, 624, 623, 625,
	682, 262, 626, 271, 0, 0, 0, 627, 628, 683,
	629, 630, 631, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 632, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 633,
	634, 0, 294, 635, 295, 636, 0, 637, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 638, 639,
	640, 0, 303, 304, 641, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 642, 643, 0, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	346, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 644, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 645, 646, 366, 0, 274, 0, 0,
	0, 0, 0, 367, 368, 369, 647, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 0, 373, 374, 375,
	648, 649, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 650, 0, 651, 386, 0, 387, 388,
	389, 390, 391, 652, 653, 654, 471, 0, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 275,
	399, 400, 401, 403, 0, 0, 402, 655, 656, 0,
	657, 0, 404, 405, 0, 658, 0, 406, 407, 408,
	0, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 659, 0, 420,
	421, 0, 0, 422, 0, 0, 0, 423, 424, 427,
	0, 0, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 0, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 0, 467, 456, 0, 276,
	0, 468, 469, 0, 660, 470, 661, 472, 473, 0,
	0, 474, 0, 0, 0, 476, 477, 478, 0, 0,
	479, 480, 662, 0, 481, 0, 663, 482, 483, 475,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	666, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 668, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 669, 541, 0, 542, 543,
	549, 550, 551, 544, 545, 552, 553, 554, 555, 556,
	0, 558, 559, 557, 560, 561, 562, 0, 563, 564,
	546, 547, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 670, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 671, 581, 582, 583, 584, 672,
	588, 589, 0, 590, 591, 0, 587, 578, 0, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	673, 674, 675, 676, 0, 609, 0, 601, 602, 603,
	677, 604, 678, 0, 605, 606, 607, 608, 0, 610,
	611, 0, 0, 612, 613, 614, 616, 617, 615, 618,
	0, 619, 0, 0, 620, 621, 622, 679, 680, 681,
	271, 624, 623, 625, 682, 0, 626, 0, 0, 0,
	0, 627, 628, 683, 629, 630, 631, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 633, 634, 0, 294,
	635, 295, 636, 0, 637, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 638, 639, 640, 0, 303,
	304, 641, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	642, 643, 0, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 346, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 644,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	645, 646, 366, 0, 274, 0, 0, 0, 0, 0,
	367, 368, 369, 647, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 0, 373, 374, 375, 648, 649, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	650, 0, 651, 386, 0, 387, 388, 389, 390, 391,
	652, 653, 654, 471, 0, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 275, 399, 400, 401,
	403, 0, 0, 402, 655, 656, 0, 657, 0, 404,
	405, 0, 658, 0, 406, 407, 408, 0, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 659, 0, 420, 421, 0, 0,
	422, 0, 0, 0, 423, 424, 427, 0, 0, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 0, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 0, 467, 456, 0, 276, 0, 468, 469,
	0, 660, 470, 661, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	0, 481, 0, 663, 482, 483, 475, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 666, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 668, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 669, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 0, 563, 564, 546, 547, 565,
	566, 0, 567, 568, 569, 570, 571, 572, 573, 670,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 671, 581, 582, 583, 584, 672, 588, 589, 0,
	590, 591, 0, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 673, 674, 675,
	676, 0, 609, 0, 601, 602, 603, 677, 604, 678,
	0, 605, 606, 607, 608, 0, 610, 611, 0, 0,
	612, 613, 614, 616, 617, 615, 618, 0, 619, 0,
	0, 620, 621, 622, 679, 680, 681, 271, 624, 623,
	625, 682, 0, 626, 0, 0, 0, 0, 627, 628,
	683, 629, 630, 631, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 632,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 633, 634, 0, 294, 635, 295, 636,
	0, 637, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 638, 639, 640, 0, 303, 304, 641, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 707, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 642, 643, 0,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 346, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 644, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 645, 646, 366,
	0, 0, 0, 0, 0, 0, 0, 367, 368, 369,
	647, 0, 0, 0, 370, 0, 371, 372, 0, 0,
	0, 373, 374, 375, 648, 649, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 708, 385, 650, 0, 651,
	386, 0, 387, 388, 389, 390, 391, 652, 653, 654,
	471, 0, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 0, 399, 400, 401, 403, 0, 0,
	402, 655, 656, 0, 657, 0, 404, 405, 0, 658,
	0, 406, 407, 408, 0, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 659, 0, 420, 421, 0, 0, 422, 0, 0,
	0, 423, 424, 427, 0, 0, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 0, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 0,
	467, 456, 0, 0, 0, 468, 469, 0, 660, 470,
	661, 472, 473, 0, 0, 474, 0, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 0, 481, 0,
	663, 482, 483, 475, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 666, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	668, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 669,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 709, 558, 559, 557, 560, 561,
	562, 0, 563, 564, 546, 547, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 670, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 671, 581,
	582, 583, 584, 672, 588, 589, 0, 590, 591, 0,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 673, 674, 675, 676, 0, 609,
	0, 601, 602, 603, 677, 604, 678, 0, 605, 606,
	607, 608, 0, 610, 611, 0, 0, 612, 613, 614,
	616, 617, 615, 618, 0, 619, 0, 0, 620, 621,
	622, 679, 680, 681, 271, 624, 623, 625, 682, 0,
	626, 0, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 632, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	633, 634, 0, 294, 635, 295, 636, 0, 637, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 638,
	639, 640, 0, 303, 304, 641, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	2361, 334, 0, 335, 642, 643, 0, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 346, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 644, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 645, 646, 366, 0, 274, 0,
	0, 0, 0, 0, 367, 368, 369, 647, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 0, 373, 374,
	375, 648, 649, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 650, 0, 651, 386, 0, 387,
	388, 389, 390, 391, 652, 653, 654, 471, 0, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	275, 399, 400, 401, 403, 0, 0, 402, 655, 656,
	0, 657, 0, 404, 405, 0, 658, 0, 406, 407,
	408, 0, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 659, 0,
	420, 421, 0, 0, 422, 0, 0, 0, 423, 424,
	427, 0, 0, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 0, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 0, 467, 456, 0,
	276, 0, 468, 469, 0, 660, 470, 661, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 0, 481, 0, 663, 482, 483,
	475, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 666, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 668, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 669, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 0, 563,
	564, 546, 547, 565, 566, 0, 567, 568, 569, 570,
	571, 572, 573, 670, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 671, 581, 582, 583, 584,
	672, 588, 589, 0, 590, 591, 0, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 673, 674, 675, 676, 0, 609, 0, 601, 602,
	603, 677, 604, 678, 0, 605, 606, 607, 608, 0,
	610, 611, 0, 0, 612, 613, 614, 616, 617, 615,
	618, 0, 619, 0, 0, 620, 621, 622, 679, 680,
	681, 271, 624, 623, 625, 682, 0, 626, 0, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 633, 634, 0,
	294, 635, 295, 636, 0, 637, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 638, 639, 640, 0,
	303, 304, 641, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 2359, 334, 0,
	335, 642, 643, 0, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 346, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	644, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 645, 646, 366, 0, 274, 0, 0, 0, 0,
	0, 367, 368, 369, 647, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 0, 373, 374, 375, 648, 649,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 650, 0, 651, 386, 0, 387, 388, 389, 390,
	391, 652, 653, 654, 471, 0, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 275, 399, 400,
	401, 403, 0, 0, 402, 655, 656, 0, 657, 0,
	404, 405, 0, 658, 0, 406, 407, 408, 0, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 659, 0, 420, 421, 0,
	0, 422, 0, 0, 0, 423, 424, 427, 0, 0,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 0,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 0, 467, 456, 0, 276, 0, 468,
	469, 0, 660, 470, 661, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	662, 0, 481, 0, 663, 482, 483, 475, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 666, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 668, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 669, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 0, 558,
	559, 557, 560, 561, 562, 0, 563, 564, 546, 547,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	670, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 671, 581, 582, 583, 584, 672, 588, 589,
	0, 590, 591, 0, 587, 578, 0, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 673, 674,
	675, 676, 0, 609, 0, 601, 602, 603, 677, 604,
	678, 0, 605, 606, 607, 608, 0, 610, 611, 0,
	0, 612, 613, 614, 616, 617, 615, 618, 0, 619,
	0, 0, 620, 621, 622, 679, 680, 681, 271, 624,
	623, 625, 682, 0, 626, 0, 0, 0, 0, 627,
	628, 683, 629, 630, 631, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	632, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 633, 634, 0, 294, 635, 295,
	636, 0, 637, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 638, 639, 640, 0, 303, 304, 641,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 2357, 334, 0, 335, 642, 643,
	0, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 346, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 644, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 645, 646,
	366, 0, 274, 0, 0, 0, 0, 0, 367, 368,
	369, 647, 0, 0, 0, 370, 0, 371, 372, 0,
	0, 0, 373, 374, 375, 648, 649, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 650, 0,
	651, 386, 0, 387, 388, 389, 390, 391, 652, 653,
	654, 471, 0, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 275, 399, 400, 401, 403, 0,
	0, 402, 655, 656, 0, 657, 0, 404, 405, 0,
	658, 0, 406, 407, 408, 0, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 659, 0, 420, 421, 0, 0, 422, 0,
	0, 0, 423, 424, 427, 0, 0, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 0, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	0, 467, 456, 0, 276, 0, 468, 469, 0, 660,
	470, 661, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 0, 481,
	0, 663, 482, 483, 475, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 666, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 668, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	669, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 0, 563, 564, 546, 547, 565, 566, 0,
	567, 568, 569, 570, 571, 572, 573, 670, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 671,
	581, 582, 583, 584, 672, 588, 589, 0, 590, 591,
	0, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 673, 674, 675, 676, 0,
	609, 0, 601, 602, 603, 677, 604, 678, 0, 605,
	606, 607, 608, 0, 610, 611, 0, 0, 612, 613,
	614, 616, 617, 615, 618, 0, 619, 0, 0, 620,
	621, 622, 679, 680, 681, 271, 624, 623, 625, 682,
	0, 626, 0, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 632, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 0, 637,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	638, 639, 640, 0, 303, 304, 641, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 0, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 346, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 0, 274,
	0, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 0, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 650, 0, 651, 386, 0,
	387, 388, 389, 390, 391, 2273, 653, 654, 471, 0,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 275, 399, 400, 401, 403, 0, 0, 402, 655,
	656, 0, 657, 0, 404, 405, 0, 658, 0, 406,
	407, 408, 0, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 659,
	0, 420, 421, 0, 0, 422, 0, 0, 0, 423,
	424, 427, 0, 0, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 0, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 0, 467, 456,
	0, 276, 0, 468, 469, 0, 660, 470, 661, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 0, 481, 0, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 561, 562, 0,
	563, 564, 546, 547, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 0, 590, 591, 0, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 673, 674, 675, 676, 0, 609, 0, 601,
	602, 603, 677, 604, 678, 0, 605, 606, 607, 608,
	0, 610, 611, 0, 0, 612, 613, 614, 616, 617,
	615, 618, 0, 619, 0, 0, 620, 621, 622, 679,
	680, 681, 271, 624, 623, 625, 682, 0, 626, 0,
	0, 0, 0, 627, 628, 683, 629, 630, 631, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 632, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 633, 634,
	0, 294, 635, 295, 636, 0, 637, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 638, 639, 640,
	0, 303, 304, 641, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 642, 643, 0, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 346,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 644, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 645, 646, 366, 0, 274, 0, 0, 0,
	0, 0, 367, 368, 369, 647, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 0, 373, 374, 375, 648,
	649, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 650, 0, 651, 386, 0, 387, 388, 389,
	390, 391, 2068, 653, 654, 471, 0, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 275, 399,
	400, 401, 403, 0, 0, 402, 655, 656, 0, 657,
	0, 404, 405, 0, 658, 0, 406, 407, 408, 0,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 659, 0, 420, 421,
	0, 0, 422, 0, 0, 0, 423, 424, 427, 0,
	0, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	0, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 0, 467, 456, 0, 276, 0,
	468, 469, 0, 660, 470, 661, 472, 473, 0, 0,
	474, 0, 0, 0, 476, 477, 478, 0, 0, 479,
	480, 662, 0, 481, 0, 663, 482, 483, 475, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 666,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 668, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 669, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 552, 553, 554, 555, 556, 0,
	558, 559, 557, 560, 561, 562, 0, 563, 564, 546,
	547, 565, 566, 0, 567, 568, 569, 570, 571, 572,
	573, 670, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 671, 581, 582, 583, 584, 672, 588,
	589, 0, 590, 591, 0, 587, 578, 0, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 0, 600, 673,
	674, 675, 676, 0, 609, 0, 601, 602, 603, 677,
	604, 678, 0, 605, 606, 607, 608, 0, 610, 611,
	0, 0, 612, 613, 614, 616, 617, 615, 618, 0,
	619, 0, 0, 620, 621, 622, 679, 680, 681, 271,
	624, 623, 625, 682, 0, 626, 0, 0, 0, 0,
	627, 628, 683, 629, 630, 631, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 633, 634, 0, 294, 635,
	295, 636, 0, 637, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 638, 639, 640, 0, 303, 304,
	641, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 642,
	643, 0, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 346, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 644, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 645,
	646, 366, 0, 274, 0, 0, 0, 0, 0, 367,
	368, 369, 647, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 0, 373, 374, 375, 648, 649, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 650,
	0, 651, 386, 0, 387, 388, 389, 390, 391, 2062,
	653, 654, 471, 0, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 275, 399, 400, 401, 403,
	0, 0, 402, 655, 656, 0, 657, 0, 404, 405,
	0, 658, 0, 406, 407, 408, 0, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 659, 0, 420, 421, 0, 0, 422,
	0, 0, 0, 423, 424, 427, 0, 0, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 0, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 0, 467, 456, 0, 276, 0, 468, 469, 0,
	660, 470, 661, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 0,
	481, 0, 663, 482, 483, 475, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 666, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 668, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 669, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 0, 563, 564, 546, 547, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 670, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	671, 581, 582, 583, 584, 672, 588, 589, 0, 590,
	591, 0, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 673, 674, 675, 676,
	0, 609, 0, 601, 602, 603, 677, 604, 678, 0,
	605, 606, 607, 608, 0, 610, 611, 0, 0, 612,
	613, 614, 616, 617, 615, 618, 0, 619, 0, 0,
	620, 621, 622, 679, 680, 681, 0, 624, 623, 625,
	682, 892, 626, 271, 0, 0, 0, 627, 628, 683,
	629, 630, 631, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 632, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 633,
	634, 0, 294, 635, 295, 636, 0, 637, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 638, 639,
	640, 0, 303, 304, 641, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 642, 643, 0, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	346, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 644, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 645, 646, 366, 0, 0, 0, 0,
	0, 0, 0, 367, 368, 369, 647, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 0, 373, 374, 375,
	648, 649, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 650, 0, 651, 386, 0, 387, 388,
	389, 390, 391, 652, 653, 654, 471, 0, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 0,
	399, 400, 401, 403, 0, 0, 402, 655, 656, 0,
	657, 891, 404, 405, 0, 658, 0, 406, 407, 408,
	0, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 659, 0, 420,
	421, 0, 0, 422, 0, 0, 0, 423, 424, 427,
	0, 0, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 0, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 0, 467, 456, 0, 0,
	0, 468, 469, 0, 660, 470, 661, 472, 473, 0,
	0, 474, 0, 0, 0, 476, 477, 478, 0, 0,
	479, 480, 662, 0, 481, 0, 663, 482, 483, 475,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	666, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 668, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 669, 541, 0, 542, 543,
	549, 550, 551, 544, 545, 552, 553, 554, 555, 556,
	0, 558, 559, 557, 560, 561, 562, 0, 563, 564,
	546, 547, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 670, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 671, 581, 582, 583, 584, 672,
	588, 589, 0, 590, 591, 0, 587, 578, 890, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	673, 674, 675, 676, 0, 609, 0, 601, 602, 603,
	677, 604, 678, 0, 605, 606, 607, 608, 0, 610,
	611, 0, 0, 612, 613, 614, 616, 617, 615, 618,
	0, 619, 0, 0, 620, 621, 622, 679, 680, 681,
	271, 624, 623, 625, 682, 0, 626, 0, 0, 0,
	0, 627, 628, 683, 629, 630, 631, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 633, 634, 0, 294,
	635, 295, 636, 0, 637, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 638, 639, 640, 0, 303,
	304, 641, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	642, 643, 0, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 346, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 644,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	645, 646, 366, 0, 3093, 0, 0, 0, 0, 0,
	367, 368, 369, 647, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 0, 373, 374, 375, 648, 649, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	650, 0, 651, 386, 0, 387, 388, 389, 390, 391,
	652, 653, 654, 471, 0, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 0, 399, 400, 401,
	403, 0, 0, 402, 655, 656, 0, 657, 0, 404,
	405, 0, 658, 0, 406, 407, 408, 0, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 659, 0, 420, 421, 0, 0,
	422, 0, 0, 0, 423, 424, 427, 0, 0, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 0, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 0, 467, 456, 0, 0, 0, 468, 469,
	0, 660, 470, 661, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	0, 481, 0, 663, 482, 483, 475, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 666, 501, 667,
	502, 503, 4246, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 668, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 669, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 0, 563, 564, 546, 547, 565,
	566, 0, 567, 568, 569, 570, 571, 572, 573, 670,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 671, 581, 582, 583, 584, 672, 588, 589, 0,
	590, 591, 0, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 673, 674, 675,
	676, 0, 609, 0, 601, 602, 603, 677, 604, 678,
	0, 605, 606, 607, 608, 0, 610, 611, 0, 0,
	612, 613, 614, 616, 617, 615, 618, 0, 619, 0,
	0, 620, 621, 622, 679, 680, 681, 0, 624, 623,
	625, 682, 1349, 626, 271, 0, 0, 0, 627, 628,
	683, 629, 630, 631, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 632, 0, 0, 0,
	0, 286, 287, 1352, 288, 289, 290, 291, 292, 293,
	633, 634, 0, 294, 635, 295, 636, 0, 637, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 638,
	639, 1350, 0, 303, 304, 641, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 642, 643, 0, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 346, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 644, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 645, 646, 366, 0, 0, 0,
	0, 0, 0, 0, 367, 368, 369, 647, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 0, 373, 374,
	375, 648, 649, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 650, 0, 651, 386, 0, 387,
	388, 389, 390, 391, 652, 653, 654, 471, 0, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	0, 399, 400, 401, 403, 0, 0, 402, 655, 656,
	0, 657, 0, 404, 405, 0, 658, 0, 406, 407,
	408, 0, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 659, 0,
	420, 421, 0, 0, 422, 0, 0, 0, 423, 424,
	427, 0, 0, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 775, 0, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 0, 467, 456, 0,
	0, 0, 468, 469, 0, 660, 470, 661, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 0, 481, 0, 663, 482, 483,
	475, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 666, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 668, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	0, 774, 537, 538, 539, 540, 669, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 773, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 1353, 562, 0, 563,
	564, 546, 547, 565, 566, 0, 567, 568, 569, 570,
	571, 572, 573, 670, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 671, 581, 582, 583, 584,
	672, 588, 589, 0, 590, 591, 0, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 771, 674, 675, 676, 0, 609, 0, 601, 602,
	603, 677, 604, 678, 0, 605, 606, 607, 608, 0,
	610, 611, 0, 0, 612, 613, 614, 616, 617, 615,
	618, 0, 619, 0, 0, 620, 621, 622, 679, 680,
	681, 0, 624, 623, 625, 682, 1349, 626, 271, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	632, 0, 0, 0, 0, 286, 287, 1352, 288, 289,
	290, 291, 292, 293, 633, 634, 0, 294, 635, 295,
	636, 0, 637, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 638, 639, 1350, 0, 303, 304, 641,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 642, 643,
	0, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 346, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 644, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 645, 646,
	366, 0, 0, 0, 0, 0, 0, 0, 367, 368,
	369, 647, 0, 0, 0, 370, 0, 371, 372, 0,
	0, 0, 373, 374, 375, 648, 649, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 650, 0,
	651, 386, 0, 387, 388, 389, 390, 391, 652, 653,
	654, 471, 0, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 0, 399, 400, 401, 403, 0,
	0, 402, 655, 656, 0, 657, 0, 404, 405, 0,
	658, 0, 406, 407, 408, 0, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 659, 0, 420, 421, 0, 0, 422, 0,
	0, 0, 423, 424, 427, 0, 0, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 775, 0, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	0, 467, 456, 0, 0, 0, 468, 469, 0, 660,
	470, 661, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 0, 481,
	0, 663, 482, 483, 475, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 666, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 668, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 0, 774, 537, 538, 539, 540,
	669, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	773, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	1353, 562, 0, 563, 564, 546, 547, 565, 566, 0,
	567, 568, 569, 570, 571, 572, 573, 670, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 671,
	581, 582, 583, 584, 672, 588, 589, 0, 590, 591,
	0, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 771, 674, 675, 676, 0,
	609, 0, 601, 1351, 603, 677, 604, 678, 0, 605,
	606, 607, 608, 0, 610, 611, 0, 0, 612, 613,
	614, 616, 617, 615, 618, 0, 619, 0, 0, 620,
	621, 622, 679, 680, 681, 0, 624, 623, 625, 682,
	694, 626, 271, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 693, 284, 285, 0,
	0, 0, 0, 0, 632, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 633, 634,
	0, 294, 635, 295, 636, 0, 637, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 638, 639, 640,
	0, 303, 304, 641, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 642, 643, 0, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 346,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 644, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 645, 646, 366, 0, 0, 0, 0, 0,
	0, 0, 367, 368, 369, 647, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 0, 373, 374, 375, 648,
	649, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 650, 0, 651, 386, 0, 387, 388, 389,
	390, 391, 652, 653, 654, 471, 0, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 0, 399,
	400, 401, 403, 0, 0, 402, 655, 656, 0, 657,
	0, 404, 405, 0, 658, 0, 406, 407, 408, 0,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 659, 0, 420, 421,
	0, 0, 422, 0, 0, 0, 423, 424, 427, 0,
	0, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	0, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 0, 467, 456, 0, 0, 0,
	468, 469, 0, 660, 470, 661, 472, 473, 0, 0,
	474, 0, 0, 0, 476, 477, 478, 0, 0, 479,
	480, 662, 0, 481, 0, 663, 482, 483, 475, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 666,
	501, 667, 692, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 668, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 669, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 552, 553, 554, 555, 556, 0,
	558, 559, 557, 560, 561, 562, 0, 563, 564, 546,
	547, 565, 566, 0, 567, 568, 569, 570, 571, 572,
	573, 670, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 671, 581, 582, 583, 584, 672, 588,
	589, 0, 590, 591, 0, 587, 578, 0, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 0, 600, 673,
	674, 675, 676, 0, 609, 0, 601, 602, 603, 677,
	604, 678, 0, 605, 606, 607, 608, 0, 610, 611,
	0, 0, 612, 613, 614, 616, 617, 615, 618, 0,
	619, 0, 0, 620, 621, 622, 679, 680, 681, 0,
	624, 623, 625, 682, 0, 626, 271, 3080, 0, 0,
	627, 628, 683, 629, 630, 631, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 632, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 0,
	637, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 638, 639, 640, 0, 303, 304, 641, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 0, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 346, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 0,
	0, 0, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 0,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 650, 0, 651, 386,
	0, 387, 388, 389, 390, 391, 652, 653, 654, 471,
	0, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 0, 399, 400, 401, 403, 0, 0, 402,
	655, 656, 0, 657, 0, 404, 405, 0, 658, 0,
	406, 407, 408, 0, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	659, 0, 420, 421, 0, 0, 422, 0, 0, 0,
	423, 424, 427, 0, 0, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 0, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 0, 467,
	456, 0, 0, 0, 468, 469, 0, 660, 470, 661,
	472, 473, 0, 0, 474, 0, 0, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 0, 481, 0, 663,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 669, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 0, 558, 559, 557, 560, 561, 562,
	0, 563, 564, 546, 547, 565, 566, 0, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 0, 590, 591, 0, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 673, 674, 675, 676, 0, 609, 0,
	601, 602, 603, 677, 604, 678, 0, 605, 606, 607,
	608, 0, 610, 611, 0, 0, 612, 613, 614, 616,
	617, 615, 618, 0, 619, 0, 0, 620, 621, 622,
	679, 680, 681, 0, 624, 623, 625, 682, 0, 626,
	271, 4256, 0, 0, 627, 628, 683, 629, 630, 631,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 633, 634, 0, 294,
	635, 295, 636, 0, 637, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 638, 639, 640, 0, 303,
	304, 641, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	642, 643, 0, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 346, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 644,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	645, 646, 366, 0, 0, 0, 0, 0, 0, 0,
	367, 368, 369, 647, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 0, 373, 374, 375, 648, 649, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	650, 0, 651, 386, 0, 387, 388, 389, 390, 391,
	652, 653, 654, 471, 0, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 0, 399, 400, 401,
	403, 0, 0, 402, 655, 656, 0, 657, 0, 404,
	405, 0, 658, 0, 406, 407, 408, 0, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 659, 0, 420, 421, 0, 0,
	422, 0, 0, 0, 423, 424, 427, 0, 0, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 0, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 0, 467, 456, 0, 0, 0, 468, 469,
	0, 660, 470, 661, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	0, 481, 0, 663, 482, 483, 475, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 666, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 668, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 669, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 0, 563, 564, 546, 547, 565,
	566, 0, 567, 568, 569, 570, 571, 572, 573, 670,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 671, 581, 582, 583, 584, 672, 588, 589, 0,
	590, 591, 0, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 673, 674, 675,
	676, 0, 609, 0, 601, 602, 603, 677, 604, 678,
	0, 605, 606, 607, 608, 0, 610, 611, 0, 0,
	612, 613, 614, 616, 617, 615, 618, 0, 619, 0,
	0, 620, 621, 622, 679, 680, 681, 271, 624, 623,
	625, 682, 0, 626, 0, 0, 0, 0, 627, 628,
	683, 629, 630, 631, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 632,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 633, 634, 0, 294, 635, 295, 636,
	0, 637, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 638, 639, 640, 0, 303, 304, 641, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 642, 643, 0,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 346, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 644, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 645, 646, 366,
	0, 0, 0, 0, 0, 0, 0, 367, 368, 369,
	647, 0, 0, 0, 370, 0, 371, 372, 0, 0,
	0, 373, 374, 375, 648, 649, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 650, 0, 651,
	386, 0, 387, 388, 389, 390, 391, 652, 653, 654,
	471, 0, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 0, 399, 400, 401, 403, 0, 0,
	402, 655, 656, 0, 657, 0, 404, 405, 0, 658,
	0, 406, 407, 408, 0, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 659, 0, 420, 421, 0, 0, 422, 0, 0,
	0, 423, 424, 427, 0, 0, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 0, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 0,
	467, 456, 0, 0, 0, 468, 469, 0, 660, 470,
	661, 472, 473, 0, 0, 474, 0, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 0, 481, 0,
	663, 482, 483, 475, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 666, 501, 667, 502, 503, 4537,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	668, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 669,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 0, 563, 564, 546, 547, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 670, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 671, 581,
	582, 583, 584, 672, 588, 589, 0, 590, 591, 0,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 673, 674, 675, 676, 0, 609,
	0, 601, 602, 603, 677, 604, 678, 0, 605, 606,
	607, 608, 0, 610, 611, 0, 0, 612, 613, 614,
	616, 617, 615, 618, 0, 619, 0, 0, 620, 621,
	622, 679, 680, 681, 271, 624, 623, 625, 682, 0,
	626, 0, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 632, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	633, 634, 0, 294, 635, 295, 636, 0, 637, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 638,
	639, 640, 0, 303, 304, 641, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 642, 643, 0, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 346, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 644, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 645, 646, 366, 0, 0, 0,
	0, 0, 0, 0, 367, 368, 369, 647, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 0, 373, 374,
	375, 648, 649, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 650, 0, 651, 386, 0, 387,
	388, 389, 390, 391, 652, 653, 654, 471, 0, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	0, 399, 400, 401, 403, 0, 0, 402, 655, 656,
	0, 657, 0, 404, 405, 0, 658, 0, 406, 407,
	408, 0, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 659, 0,
	420, 421, 0, 0, 422, 0, 0, 0, 423, 424,
	427, 0, 0, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 0, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 0, 467, 456, 0,
	0, 0, 468, 469, 0, 660, 470, 661, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 0, 481, 0, 663, 482, 483,
	475, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 666, 501, 667, 502, 503, 4142, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 668, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 669, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 0, 563,
	564, 546, 547, 565, 566, 0, 567, 568, 569, 570,
	571, 572, 573, 670, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 671, 581, 582, 583, 584,
	672, 588, 589, 0, 590, 591, 0, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 673, 674, 675, 676, 0, 609, 0, 601, 602,
	603, 677, 604, 678, 0, 605, 606, 607, 608, 0,
	610, 611, 0, 0, 612, 613, 614, 616, 617, 615,
	618, 0, 619, 0, 0, 620, 621, 622, 679, 680,
	681, 271, 624, 623, 625, 682, 0, 626, 0, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 633, 634, 0,
	294, 635, 295, 636, 0, 637, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 638, 639, 640, 0,
	303, 304, 641, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 642, 643, 3906, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 346, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	644, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 645, 646, 366, 0, 0, 0, 0, 0, 0,
	0, 367, 368, 369, 647, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 0, 373, 374, 375, 648, 649,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 650, 0, 651, 386, 0, 387, 388, 389, 390,
	391, 652, 653, 654, 471, 0, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 0, 399, 400,
	401, 403, 0, 0, 402, 655, 656, 0, 657, 0,
	404, 405, 0, 658, 0, 406, 407, 408, 0, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 659, 0, 420, 421, 0,
	0, 422, 0, 0, 0, 423, 424, 427, 0, 0,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 0,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 0, 467, 456, 0, 0, 0, 468,
	469, 0, 660, 470, 661, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	662, 0, 481, 0, 663, 482, 483, 475, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 666, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 668, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 669, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 0, 558,
	559, 557, 560, 561, 562, 0, 563, 564, 546, 547,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	670, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 671, 581, 582, 583, 584, 672, 588, 589,
	0, 590, 591, 0, 587, 578, 0, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 673, 674,
	675, 676, 0, 609, 0, 601, 602, 603, 677, 604,
	678, 0, 605, 606, 607, 608, 0, 610, 611, 0,
	0, 612, 613, 614, 616, 617, 615, 618, 0, 619,
	0, 0, 620, 621, 622, 679, 680, 681, 271, 624,
	623, 625, 682, 0, 626, 0, 0, 0, 0, 627,
	628, 683, 629, 630, 631, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	632, 0, 2754, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 633, 634, 0, 294, 635, 295,
	636, 0, 637, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 638, 639, 640, 0, 303, 304, 641,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 642, 643,
	0, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 346, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 644, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 645, 646,
	366, 0, 0, 0, 0, 0, 0, 0, 367, 368,
	369, 647, 0, 0, 0, 370, 0, 371, 372, 0,
	0, 0, 373, 374, 375, 648, 649, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 650, 0,
	651, 386, 0, 387, 388, 389, 390, 391, 652, 653,
	654, 471, 0, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 0, 399, 400, 401, 403, 0,
	0, 402, 655, 656, 0, 657, 0, 404, 405, 0,
	658, 0, 406, 407, 408, 0, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 659, 0, 420, 421, 0, 0, 422, 0,
	0, 0, 423, 424, 427, 0, 0, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 0, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	0, 467, 456, 0, 0, 0, 468, 469, 0, 660,
	470, 661, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 0, 481,
	0, 663, 482, 483, 475, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 666, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 668, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	669, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 0, 563, 564, 546, 547, 565, 566, 0,
	567, 568, 569, 570, 571, 572, 573, 670, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 671,
	581, 582, 583, 584, 672, 588, 589, 0, 590, 591,
	0, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 673, 674, 675, 676, 0,
	609, 0, 601, 602, 603, 677, 604, 678, 0, 605,
	606, 607, 608, 0, 610, 611, 0, 0, 612, 613,
	614, 616, 617, 615, 618, 0, 619, 0, 0, 620,
	621, 622, 679, 680, 681, 0, 624, 623, 625, 682,
	0, 626, 271, 3080, 0, 0, 627, 628, 683, 629,
	630, 631, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 632, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 633, 634,
	0, 294, 635, 295, 636, 0, 637, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 638, 639, 640,
	0, 303, 304, 641, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 642, 643, 0, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 346,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 644, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 645, 646, 366, 0, 0, 0, 0, 0,
	0, 0, 367, 368, 369, 647, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 0, 373, 374, 375, 648,
	649, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 650, 0, 651, 386, 0, 387, 388, 389,
	390, 391, 652, 653, 654, 471, 0, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 0, 399,
	400, 401, 403, 0, 0, 402, 655, 656, 0, 657,
	0, 404, 405, 0, 658, 0, 406, 407, 408, 0,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 659, 0, 420, 421,
	0, 0, 422, 0, 0, 0, 423, 424, 427, 0,
	0, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	0, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 0, 467, 456, 0, 0, 0,
	468, 469, 0, 660, 470, 661, 472, 473, 0, 0,
	474, 0, 0, 0, 476, 477, 3077, 0, 0, 479,
	480, 662, 0, 481, 0, 663, 482, 483, 475, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 666,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 668, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 669, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 552, 553, 554, 555, 556, 0,
	558, 559, 557, 560, 561, 562, 0, 563, 564, 546,
	547, 565, 566, 0, 567, 568, 569, 570, 571, 572,
	573, 670, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 671, 581, 582, 583, 584, 672, 588,
	589, 0, 590, 591, 0, 587, 578, 0, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 0, 600, 673,
	674, 675, 676, 0, 609, 0, 601, 602, 603, 677,
	604, 678, 0, 605, 606, 607, 608, 0, 610, 611,
	0, 0, 612, 613, 614, 616, 617, 615, 618, 0,
	619, 0, 0, 620, 621, 622, 679, 680, 681, 271,
	624, 623, 625, 682, 0, 626, 0, 0, 0, 0,
	627, 628, 683, 629, 630, 631, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 633, 634, 0, 294, 635,
	295, 636, 0, 637, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 638, 639, 640, 0, 303, 304,
	641, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 642,
	643, 0, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 346, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 644, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 645,
	646, 366, 0, 0, 0, 0, 0, 0, 0, 367,
	368, 369, 647, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 0, 373, 374, 375, 648, 649, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 650,
	0, 651, 386, 0, 387, 388, 389, 390, 391, 652,
	653, 654, 471, 0, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 0, 399, 400, 401, 403,
	0, 0, 402, 655, 656, 0, 657, 0, 404, 405,
	0, 658, 0, 406, 407, 408, 0, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 659, 0, 420, 421, 0, 0, 422,
	0, 0, 0, 423, 424, 427, 0, 0, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 0, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 0, 467, 456, 0, 0, 0, 468, 469, 0,
	660, 470, 661, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 0,
	481, 0, 663, 482, 483, 475, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 666, 501, 667, 502,
	503, 2186, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 668, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 0, 774, 537, 538, 539,
	540, 669, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 773, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 0, 563, 564, 546, 547, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 670, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	671, 581, 582, 583, 584, 672, 588, 589, 0, 590,
	591, 0, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 771, 674, 675, 676,
	0, 609, 0, 601, 602, 603, 677, 604, 678, 0,
	605, 606, 607, 608, 0, 610, 611, 0, 0, 612,
	613, 614, 616, 617, 615, 618, 0, 619, 0, 0,
	620, 621, 622, 679, 680, 681, 271, 624, 623, 625,
	682, 0, 626, 0, 0, 0, 0, 627, 628, 683,
	629, 630, 631, 277, 279, 278, 280, 281, 282, 283,
	2331, 284, 285, 0, 0, 0, 0, 0, 632, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 0,
	637, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 638, 639, 640, 0, 303, 304, 641, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 0, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 346, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 0,
	0, 0, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 0,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 650, 0, 651, 386,
	0, 387, 388, 389, 390, 391, 652, 653, 654, 471,
	0, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 0, 399, 400, 401, 403, 0, 0, 402,
	655, 656, 0, 657, 0, 404, 405, 0, 658, 0,
	406, 407, 408, 0, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	659, 0, 420, 421, 0, 0, 422, 0, 0, 0,
	423, 424, 427, 0, 0, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 0, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 0, 467,
	456, 0, 0, 0, 468, 469, 0, 660, 470, 661,
	472, 473, 0, 0, 474, 0, 0, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 0, 481, 0, 663,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 669, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 0, 558, 559, 557, 560, 561, 562,
	0, 563, 564, 546, 547, 565, 566, 0, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 0, 590, 591, 0, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 673, 674, 675, 676, 0, 609, 0,
	601, 602, 603, 677, 604, 678, 0, 605, 606, 607,
	608, 0, 610, 611, 0, 0, 612, 613, 614, 616,
	617, 615, 618, 0, 619, 0, 0, 620, 621, 622,
	679, 680, 681, 0, 624, 623, 625, 682, 2319, 626,
	271, 0, 0, 0, 627, 628, 683, 629, 630, 631,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 633, 634, 0, 294,
	635, 295, 636, 0, 637, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 638, 639, 640, 0, 303,
	304, 641, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	642, 643, 0, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 346, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 644,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	645, 646, 366, 0, 0, 0, 0, 0, 0, 0,
	367, 368, 369, 647, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 0, 373, 374, 375, 648, 649, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	650, 0, 651, 386, 0, 387, 388, 389, 390, 391,
	652, 653, 654, 471, 0, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 0, 399, 400, 401,
	403, 0, 0, 402, 655, 656, 0, 657, 0, 404,
	405, 0, 658, 0, 406, 407, 408, 0, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 659, 0, 420, 421, 0, 0,
	422, 0, 0, 0, 423, 424, 427, 0, 0, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 0, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 0, 467, 456, 0, 0, 0, 468, 469,
	0, 660, 470, 661, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	0, 481, 0, 663, 482, 483, 475, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 666, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 668, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 669, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 0, 563, 564, 546, 547, 565,
	566, 0, 567, 568, 569, 570, 571, 572, 573, 670,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 671, 581, 582, 583, 584, 672, 588, 589, 0,
	590, 591, 0, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 673, 674, 675,
	676, 0, 609, 0, 601, 602, 603, 677, 604, 678,
	0, 605, 606, 607, 608, 0, 610, 611, 0, 0,
	612, 613, 614, 616, 617, 615, 618, 0, 619, 0,
	0, 620, 621, 622, 679, 680, 681, 0, 624, 623,
	625, 682, 2082, 626, 271, 0, 0, 0, 627, 628,
	683, 629, 630, 631, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 632, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	633, 634, 0, 294, 635, 295, 636, 0, 637, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 638,
	639, 640, 0, 303, 304, 641, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 642, 643, 0, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 346, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 644, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 645, 646, 366, 0, 0, 0,
	0, 0, 0, 0, 367, 368, 369, 647, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 0, 373, 374,
	375, 648, 649, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 650, 0, 651, 386, 0, 387,
	388, 389, 390, 391, 652, 653, 654, 471, 0, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	0, 399, 400, 401, 403, 0, 0, 402, 655, 656,
	0, 657, 0, 404, 405, 0, 658, 0, 406, 407,
	408, 0, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 659, 0,
	420, 421, 0, 0, 422, 0, 0, 0, 423, 424,
	427, 0, 0, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 0, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 0, 467, 456, 0,
	0, 0, 468, 469, 0, 660, 470, 661, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 0, 481, 0, 663, 482, 483,
	475, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 666, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 668, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 669, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 0, 563,
	564, 546, 547, 565, 566, 0, 567, 568, 569, 570,
	571, 572, 573, 670, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 671, 581, 582, 583, 584,
	672, 588, 589, 0, 590, 591, 0, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 673, 674, 675, 676, 0, 609, 0, 601, 602,
	603, 677, 604, 678, 0, 605, 606, 607, 608, 0,
	610, 611, 0, 0, 612, 613, 614, 616, 617, 615,
	618, 0, 619, 0, 0, 620, 621, 622, 679, 680,
	681, 0, 624, 623, 625, 682, 2049, 626, 271, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	632, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 633, 634, 0, 294, 635, 295,
	636, 0, 637, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 638, 639, 640, 0, 303, 304, 641,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 642, 643,
	0, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 346, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 644, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 645, 646,
	366, 0, 0, 0, 0, 0, 0, 0, 367, 368,
	369, 647, 0, 0, 0, 370, 0, 371, 372, 0,
	0, 0, 373, 374, 375, 648, 649, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 650, 0,
	651, 386, 0, 387, 388, 389, 390, 391, 652, 653,
	654, 471, 0, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 0, 399, 400, 401, 403, 0,
	0, 402, 655, 656, 0, 657, 0, 404, 405, 0,
	658, 0, 406, 407, 408, 0, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 659, 0, 420, 421, 0, 0, 422, 0,
	0, 0, 423, 424, 427, 0, 0, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 0, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	0, 467, 456, 0, 0, 0, 468, 469, 0, 660,
	470, 661, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 0, 481,
	0, 663, 482, 483, 475, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 666, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 668, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	669, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 0, 563, 564, 546, 547, 565, 566, 0,
	567, 568, 569, 570, 571, 572, 573, 670, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 671,
	581, 582, 583, 584, 672, 588, 589, 0, 590, 591,
	0, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 673, 674, 675, 676, 0,
	609, 0, 601, 602, 603, 677, 604, 678, 0, 605,
	606, 607, 608, 0, 610, 611, 0, 0, 612, 613,
	614, 616, 617, 615, 618, 0, 619, 0, 0, 620,
	621, 622, 679, 680, 681, 0, 624, 623, 625, 682,
	765, 626, 271, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 632, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 633, 634,
	0, 294, 635, 295, 636, 0, 637, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 638, 639, 640,
	0, 303, 761, 641, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 642, 643, 0, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 346,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 644, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 645, 646, 366, 0, 0, 0, 0, 0,
	0, 0, 367, 368, 369, 647, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 0, 373, 374, 375, 648,
	649, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 650, 0, 651, 386, 0, 387, 388, 389,
	390, 391, 652, 653, 654, 471, 0, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 0, 399,
	400, 401, 403, 0, 0, 402, 655, 656, 0, 657,
	0, 404, 405, 0, 658, 0, 406, 407, 408, 0,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 659, 0, 420, 421,
	0, 0, 422, 0, 0, 0, 423, 766, 427, 0,
	0, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 775,
	0, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 0, 467, 456, 0, 0, 0,
	468, 469, 0, 660, 470, 661, 472, 473, 0, 0,
	474, 0, 0, 0, 476, 477, 478, 0, 0, 479,
	480, 662, 0, 481, 0, 663, 482, 483, 475, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 666,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 668, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 0, 774,
	537, 538, 539, 540, 669, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 773, 553, 554, 555, 556, 0,
	558, 559, 557, 560, 1618, 562, 0, 563, 564, 546,
	547, 565, 566, 0, 567, 568, 569, 570, 571, 572,
	573, 670, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 671, 581, 582, 583, 584, 672, 588,
	589, 0, 590, 591, 0, 587, 578, 0, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 0, 600, 771,
	674, 675, 676, 0, 609, 0, 601, 602, 603, 677,
	604, 678, 0, 605, 606, 607, 608, 0, 610, 611,
	0, 0, 612, 613, 614, 616, 617, 615, 618, 0,
	619, 0, 0, 620, 621, 622, 679, 680, 681, 0,
	624, 623, 625, 682, 1591, 626, 271, 0, 0, 0,
	627, 628, 683, 629, 630, 631, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 632, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 0,
	637, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 638, 639, 640, 0, 303, 304, 641, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 0, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 346, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 0,
	0, 0, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 0,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 650, 0, 651, 386,
	0, 387, 388, 389, 390, 391, 1590, 653, 654, 471,
	0, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 0, 399, 400, 401, 403, 0, 0, 402,
	655, 656, 0, 657, 0, 404, 405, 0, 658, 0,
	406, 407, 408, 0, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	659, 0, 420, 421, 0, 0, 422, 0, 0, 0,
	423, 424, 427, 0, 0, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 0, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 0, 467,
	456, 0, 0, 0, 468, 469, 0, 660, 470, 661,
	472, 473, 0, 0, 474, 0, 0, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 0, 481, 0, 663,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 669, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 0, 558, 559, 557, 560, 561, 562,
	0, 563, 564, 546, 547, 565, 566, 0, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 0, 590, 591, 0, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 673, 674, 675, 676, 0, 609, 0,
	601, 602, 603, 677, 604, 678, 0, 605, 606, 607,
	608, 0, 610, 611, 0, 0, 612, 613, 614, 616,
	617, 615, 618, 0, 619, 0, 0, 620, 621, 622,
	679, 680, 681, 0, 624, 623, 625, 682, 1575, 626,
	271, 0, 0, 0, 627, 628, 683, 629, 630, 631,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 633, 634, 0, 294,
	635, 295, 636, 0, 637, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 638, 639, 640, 0, 303,
	304, 641, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	642, 643, 0, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 346, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 644,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	645, 646, 366, 0, 0, 0, 0, 0, 0, 0,
	367, 368, 369, 647, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 0, 373, 374, 375, 648, 649, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	650, 0, 651, 386, 0, 387, 388, 389, 390, 391,
	1573, 653, 654, 471, 0, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 0, 399, 400, 401,
	403, 0, 0, 402, 655, 656, 0, 657, 0, 404,
	405, 0, 658, 0, 406, 407, 408, 0, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 659, 0, 420, 421, 0, 0,
	422, 0, 0, 0, 423, 424, 427, 0, 0, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 0, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 0, 467, 456, 0, 0, 0, 468, 469,
	0, 660, 470, 661, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	0, 481, 0, 663, 482, 483, 475, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 666, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 668, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 669, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 0, 563, 564, 546, 547, 565,
	566, 0, 567, 568, 569, 570, 571, 572, 573, 670,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 671, 581, 582, 583, 584, 672, 588, 589, 0,
	590, 591, 0, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 673, 674, 675,
	676, 0, 609, 0, 601, 602, 603, 677, 604, 678,
	0, 605, 606, 607, 608, 0, 610, 611, 0, 0,
	612, 613, 614, 616, 617, 615, 618, 0, 619, 0,
	0, 620, 621, 622, 679, 680, 681, 0, 624, 623,
	625, 682, 1568, 626, 271, 0, 0, 0, 627, 628,
	683, 629, 630, 631, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 632, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	633, 634, 0, 294, 635, 295, 636, 0, 637, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 638,
	639, 640, 0, 303, 304, 641, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 642, 643, 0, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 346, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 644, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 645, 646, 366, 0, 0, 0,
	0, 0, 0, 0, 367, 368, 369, 647, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 0, 373, 374,
	375, 648, 649, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 650, 0, 651, 386, 0, 387,
	388, 389, 390, 391, 652, 653, 654, 471, 0, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	0, 399, 400, 401, 403, 0, 0, 402, 655, 656,
	0, 657, 0, 404, 405, 0, 658, 0, 406, 407,
	408, 0, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 659, 0,
	420, 421, 0, 0, 422, 0, 0, 0, 423, 424,
	427, 0, 0, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 0, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 0, 467, 456, 0,
	0, 0, 468, 469, 0, 660, 470, 661, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 0, 481, 0, 663, 482, 483,
	475, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 666, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 668, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 669, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 0, 563,
	564, 546, 547, 565, 566, 0, 567, 568, 569, 570,
	571, 572, 573, 670, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 671, 581, 582, 583, 584,
	672, 588, 589, 0, 590, 591, 0, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 673, 674, 675, 676, 0, 609, 0, 601, 602,
	603, 677, 604, 678, 0, 605, 606, 607, 608, 0,
	610, 611, 0, 0, 612, 613, 614, 616, 617, 615,
	618, 0, 619, 0, 0, 620, 621, 622, 679, 680,
	681, 0, 624, 623, 625, 682, 1545, 626, 271, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	632, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 633, 634, 0, 294, 635, 295,
	636, 0, 637, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 638, 639, 640, 0, 303, 304, 641,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 642, 643,
	0, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 346, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 644, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 645, 646,
	366, 0, 0, 0, 0, 0, 0, 0, 367, 368,
	369, 647, 0, 0, 0, 370, 0, 371, 372, 0,
	0, 0, 373, 374, 375, 648, 649, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 650, 0,
	651, 386, 0, 387, 388, 389, 390, 391, 1543, 653,
	654, 471, 0, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 0, 399, 400, 401, 403, 0,
	0, 402, 655, 656, 0, 657, 0, 404, 405, 0,
	658, 0, 406, 407, 408, 0, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 659, 0, 420, 421, 0, 0, 422, 0,
	0, 0, 423, 424, 427, 0, 0, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 0, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	0, 467, 456, 0, 0, 0, 468, 469, 0, 660,
	470, 661, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 0, 481,
	0, 663, 482, 483, 475, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 666, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 668, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	669, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 0, 563, 564, 546, 547, 565, 566, 0,
	567, 568, 569, 570, 571, 572, 573, 670, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 671,
	581, 582, 583, 584, 672, 588, 589, 0, 590, 591,
	0, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 673, 674, 675, 676, 0,
	609, 0, 601, 602, 603, 677, 604, 678, 0, 605,
	606, 607, 608, 0, 610, 611, 0, 0, 612, 613,
	614, 616, 617, 615, 618, 0, 619, 0, 0, 620,
	621, 622, 679, 680, 681, 0, 624, 623, 625, 682,
	1503, 626, 271, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 632, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 633, 634,
	0, 294, 635, 295, 636, 0, 637, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 638, 639, 640,
	0, 303, 304, 641, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 642, 643, 0, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 346,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 644, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 645, 646, 366, 0, 0, 0, 0, 0,
	0, 0, 367, 368, 369, 647, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 0, 373, 374, 375, 648,
	649, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 650, 0, 651, 386, 0, 387, 388, 389,
	390, 391, 652, 653, 654, 471, 0, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 0, 399,
	400, 401, 403, 0, 0, 402, 655, 656, 0, 657,
	0, 404, 405, 0, 658, 0, 406, 407, 408, 0,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 659, 0, 420, 421,
	0, 0, 422, 0, 0, 0, 423, 424, 427, 0,
	0, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	0, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 0, 467, 456, 0, 0, 0,
	468, 469, 0, 660, 470, 661, 472, 473, 0, 0,
	474, 0, 0, 0, 476, 477, 478, 0, 0, 479,
	480, 662, 0, 481, 0, 663, 482, 483, 475, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 666,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 668, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 669, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 552, 553, 554, 555, 556, 0,
	558, 559, 557, 560, 561, 562, 0, 563, 564, 546,
	547, 565, 566, 0, 567, 568, 569, 570, 571, 572,
	573, 670, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 671, 581, 582, 583, 584, 672, 588,
	589, 0, 590, 591, 0, 587, 578, 0, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 0, 600, 673,
	674, 675, 676, 0, 609, 0, 601, 602, 603, 677,
	604, 678, 0, 605, 606, 607, 608, 0, 610, 611,
	0, 0, 612, 613, 614, 616, 617, 615, 618, 0,
	619, 0, 0, 620, 621, 622, 679, 680, 681, 0,
	624, 623, 625, 682, 1486, 626, 271, 0, 0, 0,
	627, 628, 683, 629, 630, 631, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 632, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 0,
	637, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 638, 639, 640, 0, 303, 304, 641, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 0, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 346, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 0,
	0, 0, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 0,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 650, 0, 651, 386,
	0, 387, 388, 389, 390, 391, 652, 653, 654, 471,
	0, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 0, 399, 400, 401, 403, 0, 0, 402,
	655, 656, 0, 657, 0, 404, 405, 0, 658, 0,
	406, 407, 408, 0, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	659, 0, 420, 421, 0, 0, 422, 0, 0, 0,
	423, 424, 427, 0, 0, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 0, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 0, 467,
	456, 0, 0, 0, 468, 469, 0, 660, 470, 661,
	472, 473, 0, 0, 474, 0, 0, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 0, 481, 0, 663,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 669, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 0, 558, 559, 557, 560, 561, 562,
	0, 563, 564, 546, 547, 565, 566, 0, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 0, 590, 591, 0, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 673, 674, 675, 676, 0, 609, 0,
	601, 602, 603, 677, 604, 678, 0, 605, 606, 607,
	608, 0, 610, 611, 0, 0, 612, 613, 614, 616,
	617, 615, 618, 0, 619, 0, 0, 620, 621, 622,
	679, 680, 681, 0, 624, 623, 625, 682, 1355, 626,
	271, 0, 0, 0, 627, 628, 683, 629, 630, 631,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 633, 634, 0, 294,
	635, 295, 636, 0, 637, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 638, 639, 640, 0, 303,
	304, 641, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	642, 643, 0, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 346, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 644,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	645, 646, 366, 0, 0, 0, 0, 0, 0, 0,
	367, 368, 369, 647, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 0, 373, 374, 375, 648, 649, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	650, 0, 651, 386, 0, 387, 388, 389, 390, 391,
	652, 653, 654, 471, 0, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 0, 399, 400, 401,
	403, 0, 0, 402, 655, 656, 0, 657, 0, 404,
	405, 0, 658, 0, 406, 407, 408, 0, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 659, 0, 420, 421, 0, 0,
	422, 0, 0, 0, 423, 424, 427, 0, 0, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 0, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 0, 467, 456, 0, 0, 0, 468, 469,
	0, 660, 470, 661, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	0, 481, 0, 663, 482, 483, 475, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 666, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 668, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 0, 774, 537, 538,
	539, 540, 669, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 773, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 0, 563, 564, 546, 547, 565,
	566, 0, 567, 568, 569, 570, 571, 572, 573, 670,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 671, 581, 582, 583, 584, 672, 588, 589, 0,
	590, 591, 0, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 771, 674, 675,
	676, 0, 609, 0, 601, 602, 603, 677, 604, 678,
	0, 605, 606, 607, 608, 0, 610, 611, 0, 0,
	612, 613, 614, 616, 617, 615, 618, 0, 619, 0,
	0, 620, 621, 622, 679, 680, 681, 0, 624, 623,
	625, 682, 1320, 626, 271, 0, 0, 0, 627, 628,
	683, 629, 630, 631, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 632, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	633, 634, 0, 294, 635, 295, 636, 0, 637, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 638,
	639, 640, 0, 303, 304, 641, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 642, 643, 0, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 346, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 644, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 645, 646, 366, 0, 0, 0,
	0, 0, 0, 0, 367, 368, 369, 647, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 0, 373, 374,
	375, 648, 649, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 650, 0, 651, 386, 0, 387,
	388, 389, 390, 391, 1319, 653, 654, 471, 0, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	0, 399, 400, 401, 403, 0, 0, 402, 655, 656,
	0, 657, 0, 404, 405, 0, 658, 0, 406, 407,
	408, 0, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 659, 0,
	420, 421, 0, 0, 422, 0, 0, 0, 423, 424,
	427, 0, 0, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 0, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 0, 467, 456, 0,
	0, 0, 468, 469, 0, 660, 470, 661, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 0, 481, 0, 663, 482, 483,
	475, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 666, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 668, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 669, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 0, 563,
	564, 546, 547, 565, 566, 0, 567, 568, 569, 570,
	571, 572, 573, 670, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 671, 581, 582, 583, 584,
	672, 588, 589, 0, 590, 591, 0, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 673, 674, 675, 676, 0, 609, 0, 601, 602,
	603, 677, 604, 678, 0, 605, 606, 607, 608, 0,
	610, 611, 0, 0, 612, 613, 614, 616, 617, 615,
	618, 0, 619, 0, 0, 620, 621, 622, 679, 680,
	681, 0, 624, 623, 625, 682, 1311, 626, 271, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	632, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 633, 634, 0, 294, 635, 295,
	636, 0, 637, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 638, 639, 640, 0, 303, 304, 641,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 642, 643,
	0, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 346, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 644, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 645, 646,
	366, 0, 0, 0, 0, 0, 0, 0, 367, 368,
	369, 647, 0, 0, 0, 370, 0, 371, 372, 0,
	0, 0, 373, 374, 375, 648, 649, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 650, 0,
	651, 386, 0, 387, 388, 389, 390, 391, 1310, 653,
	654, 471, 0, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 0, 399, 400, 401, 403, 0,
	0, 402, 655, 656, 0, 657, 0, 404, 405, 0,
	658, 0, 406, 407, 408, 0, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 659, 0, 420, 421, 0, 0, 422, 0,
	0, 0, 423, 424, 427, 0, 0, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 0, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	0, 467, 456, 0, 0, 0, 468, 469, 0, 660,
	470, 661, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 0, 481,
	0, 663, 482, 483, 475, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 666, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 668, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	669, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 0, 563, 564, 546, 547, 565, 566, 0,
	567, 568, 569, 570, 571, 572, 573, 670, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 671,
	581, 582, 583, 584, 672, 588, 589, 0, 590, 591,
	0, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 673, 674, 675, 676, 0,
	609, 0, 601, 602, 603, 677, 604, 678, 0, 605,
	606, 607, 608, 0, 610, 611, 0, 0, 612, 613,
	614, 616, 617, 615, 618, 0, 619, 0, 0, 620,
	621, 622, 679, 680, 681, 271, 624, 623, 625, 682,
	0, 626, 0, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 277, 279, 278, 280, 281, 282, 283, 1264,
	284, 285, 0, 0, 0, 0, 0, 632, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 0, 637,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	638, 639, 640, 0, 303, 304, 641, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 0, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 346, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 0, 0,
	0, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 0, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 650, 0, 651, 386, 0,
	387, 388, 389, 390, 391, 652, 653, 654, 471, 0,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 0, 399, 400, 401, 403, 0, 0, 402, 655,
	656, 0, 657, 0, 404, 405, 0, 658, 0, 406,
	407, 408, 0, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 659,
	0, 420, 421, 0, 0, 422, 0, 0, 0, 423,
	424, 427, 0, 0, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 0, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 0, 467, 456,
	0, 0, 0, 468, 469, 0, 660, 470, 661, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 0, 481, 0, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 561, 562, 0,
	563, 564, 546, 547, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 0, 590, 591, 0, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 673, 674, 675, 676, 0, 609, 0, 601,
	602, 603, 677, 604, 678, 0, 605, 606, 607, 608,
	0, 610, 611, 0, 0, 612, 613, 614, 616, 617,
	615, 618, 0, 619, 0, 0, 620, 621, 622, 679,
	680, 681, 271, 624, 623, 625, 682, 0, 626, 0,
	0, 0, 0, 627, 628, 683, 629, 630, 631, 277,
	279, 278, 280, 281, 282, 283, 780, 284, 285, 0,
	0, 0, 0, 0, 632, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 633, 634,
	0, 294, 635, 295, 636, 0, 637, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 638, 639, 640,
	0, 303, 304, 641, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 642, 643, 0, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 346,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 644, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 645, 646, 366, 0, 0, 0, 0, 0,
	0, 0, 367, 368, 369, 647, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 0, 373, 374, 375, 648,
	649, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 650, 0, 651, 386, 0, 387, 388, 389,
	390, 391, 652, 653, 654, 471, 0, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 0, 399,
	400, 401, 403, 0, 0, 402, 655, 656, 0, 657,
	0, 404, 405, 0, 658, 0, 406, 407, 408, 0,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 659, 0, 420, 421,
	0, 0, 422, 0, 0, 0, 423, 424, 427, 0,
	0, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	0, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 0, 467, 456, 0, 0, 0,
	468, 469, 0, 660, 470, 661, 472, 473, 0, 0,
	474, 0, 0, 0, 476, 477, 478, 0, 0, 479,
	480, 662, 0, 481, 0, 663, 482, 483, 475, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 666,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 668, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 669, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 552, 553, 554, 555, 556, 0,
	558, 559, 557, 560, 561, 562, 0, 563, 564, 546,
	547, 565, 566, 0, 567, 568, 569, 570, 571, 572,
	573, 670, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 671, 581, 582, 583, 584, 672, 588,
	589, 0, 590, 591, 0, 587, 578, 0, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 0, 600, 673,
	674, 675, 676, 0, 609, 0, 601, 602, 603, 677,
	604, 678, 0, 605, 606, 607, 608, 0, 610, 611,
	0, 0, 612, 613, 614, 616, 617, 615, 618, 0,
	619, 0, 0, 620, 621, 622, 679, 680, 681, 0,
	624, 623, 625, 682, 765, 626, 271, 0, 0, 0,
	627, 628, 683, 629, 630, 631, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 632, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 0,
	637, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 638, 639, 640, 0, 303, 761, 641, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 760, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 0, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 346, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 0,
	0, 0, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 0,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 650, 0, 651, 386,
	0, 387, 388, 389, 390, 391, 652, 653, 654, 471,
	0, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 0, 399, 400, 401, 403, 0, 0, 402,
	655, 656, 0, 657, 0, 404, 405, 0, 658, 0,
	406, 407, 408, 0, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	659, 0, 420, 421, 0, 0, 422, 0, 0, 0,
	423, 766, 427, 0, 0, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 775, 0, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 0, 467,
	456, 0, 0, 0, 468, 469, 0, 660, 470, 661,
	472, 473, 0, 0, 474, 0, 0, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 0, 481, 0, 663,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 0, 774, 537, 538, 539, 540, 762, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 773, 553,
	554, 555, 556, 0, 558, 559, 557, 560, 763, 562,
	0, 563, 564, 546, 547, 565, 566, 0, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 0, 590, 591, 0, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 771, 674, 675, 676, 0, 609, 0,
	601, 767, 603, 677, 604, 678, 0, 605, 606, 607,
	608, 0, 610, 611, 0, 0, 612, 613, 614, 616,
	617, 615, 618, 0, 619, 0, 0, 620, 621, 622,
	679, 680, 681, 0, 624, 623, 625, 682, 754, 626,
	271, 0, 0, 0, 627, 628, 683, 629, 630, 631,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 633, 634, 0, 294,
	635, 295, 636, 0, 637, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 638, 639, 640, 0, 303,
	304, 641, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	642, 643, 0, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 346, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 644,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	645, 646, 366, 0, 0, 0, 0, 0, 0, 0,
	367, 368, 369, 647, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 0, 373, 374, 375, 648, 649, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	650, 0, 651, 386, 0, 387, 388, 389, 390, 391,
	652, 653, 654, 471, 0, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 0, 399, 400, 401,
	403, 0, 0, 402, 655, 656, 0, 657, 0, 404,
	405, 0, 658, 0, 406, 407, 408, 0, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 659, 0, 420, 421, 0, 0,
	422, 0, 0, 0, 423, 424, 427, 0, 0, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 0, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 0, 467, 456, 0, 0, 0, 468, 469,
	0, 660, 470, 661, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	0, 481, 0, 663, 482, 483, 475, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 666, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 668, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 669, 541, 0, 542, 543, 755, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 0, 563, 564, 546, 547, 565,
	566, 0, 567, 568, 569, 570, 571, 572, 573, 670,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 671, 581, 582, 583, 584, 672, 588, 589, 0,
	590, 591, 0, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 673, 674, 675,
	676, 0, 609, 0, 601, 602, 603, 677, 604, 678,
	0, 605, 606, 607, 608, 0, 610, 611, 0, 0,
	612, 613, 614, 616, 617, 615, 618, 0, 619, 0,
	0, 620, 621, 622, 679, 680, 681, 0, 624, 623,
	625, 682, 717, 626, 271, 0, 0, 0, 627, 628,
	683, 629, 630, 631, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 632, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	633, 634, 0, 294, 635, 295, 636, 0, 637, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 638,
	639, 640, 0, 303, 304, 641, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 642, 643, 0, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 346, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 644, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 645, 646, 366, 0, 0, 0,
	0, 0, 0, 0, 367, 368, 369, 647, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 0, 373, 374,
	375, 648, 649, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 650, 0, 651, 386, 0, 387,
	388, 389, 390, 391, 652, 653, 654, 471, 0, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	0, 399, 400, 401, 403, 0, 0, 402, 655, 656,
	0, 657, 0, 404, 405, 0, 658, 0, 406, 407,
	408, 0, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 659, 0,
	420, 421, 0, 0, 422, 0, 0, 0, 423, 424,
	427, 0, 0, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 0, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 0, 467, 456, 0,
	0, 0, 468, 469, 0, 660, 470, 661, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 0, 481, 0, 663, 482, 483,
	475, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 666, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 668, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 669, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 0, 563,
	564, 546, 547, 565, 566, 0, 567, 568, 569, 570,
	571, 572, 573, 670, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 671, 581, 582, 583, 584,
	672, 588, 589, 0, 590, 591, 0, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 673, 674, 675, 676, 0, 609, 0, 601, 602,
	603, 677, 604, 678, 0, 605, 606, 607, 608, 0,
	610, 611, 0, 0, 612, 613, 614, 616, 617, 615,
	618, 0, 619, 0, 0, 620, 621, 622, 679, 680,
	681, 0, 624, 623, 625, 682, 711, 626, 271, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	632, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 633, 634, 0, 294, 635, 295,
	636, 0, 637, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 638, 639, 640, 0, 303, 304, 641,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 642, 643,
	0, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 346, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 644, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 645, 646,
	366, 0, 0, 0, 0, 0, 0, 0, 367, 368,
	369, 647, 0, 0, 0, 370, 0, 371, 372, 0,
	0, 0, 373, 374, 375, 648, 649, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 650, 0,
	651, 386, 0, 387, 388, 389, 390, 391, 652, 653,
	654, 471, 0, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 0, 399, 400, 401, 403, 0,
	0, 402, 655, 656, 0, 657, 0, 404, 405, 0,
	658, 0, 406, 407, 408, 0, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 659, 0, 420, 421, 0, 0, 422, 0,
	0, 0, 423, 424, 427, 0, 0, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 0, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	0, 467, 456, 0, 0, 0, 468, 469, 0, 660,
	470, 661, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 0, 481,
	0, 663, 482, 483, 475, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 666, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 668, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	669, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 0, 563, 564, 546, 547, 565, 566, 0,
	567, 568, 569, 570, 571, 572, 573, 670, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 671,
	581, 582, 583, 584, 672, 588, 589, 0, 590, 591,
	0, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 673, 674, 675, 676, 0,
	609, 0, 601, 602, 603, 677, 604, 678, 0, 605,
	606, 607, 608, 0, 610, 611, 0, 0, 612, 613,
	614, 616, 617, 615, 618, 0, 619, 0, 0, 620,
	621, 622, 679, 680, 681, 0, 624, 623, 625, 682,
	689, 626, 271, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 632, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 633, 634,
	0, 294, 635, 295, 636, 0, 637, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 638, 639, 640,
	0, 303, 304, 641, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 642, 643, 0, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 346,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 644, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 645, 646, 366, 0, 0, 0, 0, 0,
	0, 0, 367, 368, 369, 647, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 0, 373, 374, 375, 648,
	649, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 650, 0, 651, 386, 0, 387, 388, 389,
	390, 391, 652, 653, 654, 471, 0, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 0, 399,
	400, 401, 403, 0, 0, 402, 655, 656, 0, 657,
	0, 404, 405, 0, 658, 0, 406, 407, 408, 0,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 659, 0, 420, 421,
	0, 0, 422, 0, 0, 0, 423, 424, 427, 0,
	0, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	0, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 0, 467, 456, 0, 0, 0,
	468, 469, 0, 660, 470, 661, 472, 473, 0, 0,
	474, 0, 0, 0, 476, 477, 478, 0, 0, 479,
	480, 662, 0, 481, 0, 663, 482, 483, 475, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 666,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 668, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 669, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 552, 553, 554, 555, 556, 0,
	558, 559, 557, 560, 561, 562, 0, 563, 564, 546,
	547, 565, 566, 0, 567, 568, 569, 570, 571, 572,
	573, 670, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 671, 581, 582, 583, 584, 672, 588,
	589, 0, 590, 591, 0, 587, 578, 0, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 0, 600, 673,
	674, 675, 676, 0, 609, 0, 601, 602, 603, 677,
	604, 678, 0, 605, 606, 607, 608, 0, 610, 611,
	0, 0, 612, 613, 614, 616, 617, 615, 618, 0,
	619, 0, 0, 620, 621, 622, 679, 680, 681, 271,
	624, 623, 625, 682, 0, 626, 0, 0, 0, 0,
	627, 628, 683, 629, 630, 631, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 633, 634, 0, 294, 635,
	295, 636, 0, 637, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 638, 639, 640, 0, 303, 304,
	641, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 642,
	643, 0, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 346, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 644, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 645,
	646, 366, 0, 0, 0, 0, 0, 0, 0, 367,
	368, 369, 647, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 0, 373, 374, 375, 648, 649, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 650,
	0, 651, 386, 0, 387, 388, 389, 390, 391, 652,
	653, 654, 471, 0, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 0, 399, 400, 401, 403,
	0, 0, 402, 655, 656, 0, 657, 0, 404, 405,
	0, 658, 0, 406, 407, 408, 0, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 659, 0, 420, 421, 0, 0, 422,
	0, 0, 0, 423, 424, 427, 0, 0, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 0, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 0, 467, 456, 0, 0, 0, 468, 469, 0,
	660, 470, 661, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 0,
	481, 0, 663, 482, 483, 475, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 666, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 668, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 669, 541, 0, 542, 543, 549, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 0, 563, 564, 546, 547, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 670, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	671, 581, 582, 583, 584, 672, 588, 589, 0, 590,
	591, 0, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 673, 674, 675, 676,
	0, 609, 0, 601, 602, 603, 677, 604, 678, 0,
	605, 606, 607, 608, 0, 610, 611, 0, 0, 612,
	613, 614, 616, 617, 615, 618, 0, 619, 0, 0,
	620, 621, 622, 679, 680, 681, 271, 624, 623, 625,
	682, 0, 626, 0, 0, 0, 0, 627, 628, 683,
	629, 630, 631, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 632, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 0,
	637, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 638, 639, 640, 0, 303, 304, 641, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 0, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 346, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 0,
	0, 0, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 0,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 650, 0, 651, 386,
	0, 387, 388, 389, 390, 391, 3604, 653, 654, 471,
	0, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 0, 399, 400, 401, 403, 0, 0, 402,
	655, 656, 0, 657, 0, 404, 405, 0, 658, 0,
	406, 407, 408, 0, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	659, 0, 420, 421, 0, 0, 422, 0, 0, 0,
	423, 424, 427, 0, 0, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 0, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 0, 467,
	456, 0, 0, 0, 468, 469, 0, 660, 470, 661,
	472, 473, 0, 0, 474, 0, 0, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 0, 481, 0, 663,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 669, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 0, 558, 559, 557, 560, 561, 562,
	0, 563, 564, 546, 547, 565, 566, 0, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 0, 590, 591, 0, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 673, 674, 675, 676, 0, 609, 0,
	601, 602, 603, 677, 604, 678, 0, 605, 606, 607,
	608, 0, 610, 611, 0, 0, 612, 613, 614, 616,
	617, 615, 618, 0, 619, 0, 0, 620, 621, 622,
	679, 680, 681, 271, 624, 623, 625, 682, 0, 626,
	0, 0, 0, 0, 627, 628, 683, 629, 630, 631,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 632, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 633,
	634, 0, 294, 635, 295, 636, 0, 637, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 638, 639,
	640, 0, 303, 304, 641, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 642, 643, 0, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	346, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 644, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 645, 646, 366, 0, 0, 0, 0,
	0, 0, 0, 367, 368, 369, 647, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 0, 373, 374, 375,
	648, 649, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 650, 0, 651, 386, 0, 387, 388,
	389, 390, 391, 652, 653, 654, 471, 0, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 0,
	399, 400, 401, 403, 0, 0, 402, 655, 656, 0,
	657, 0, 404, 405, 0, 658, 0, 406, 407, 408,
	0, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 659, 0, 420,
	421, 0, 0, 422, 0, 0, 0, 423, 424, 427,
	0, 0, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 0, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 0, 467, 456, 0, 0,
	0, 468, 469, 0, 660, 470, 661, 472, 473, 0,
	0, 474, 0, 0, 0, 476, 477, 478, 0, 0,
	479, 480, 662, 0, 481, 0, 663, 482, 483, 475,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	666, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 668, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 0,
	774, 537, 538, 539, 540, 669, 541, 0, 542, 543,
	549, 550, 551, 544, 545, 773, 553, 554, 555, 556,
	0, 558, 559, 557, 560, 561, 562, 0, 563, 564,
	546, 547, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 670, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 671, 581, 582, 583, 584, 672,
	588, 589, 0, 590, 591, 0, 587, 578, 0, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	771, 674, 675, 676, 0, 609, 0, 601, 602, 603,
	677, 604, 678, 0, 605, 606, 607, 608, 0, 610,
	611, 0, 0, 612, 613, 614, 616, 617, 615, 618,
	0, 619, 0, 0, 620, 621, 622, 679, 680, 681,
	271, 624, 623, 625, 682, 0, 626, 0, 0, 0,
	0, 627, 628, 683, 629, 630, 631, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 633, 634, 0, 294,
	635, 295, 636, 0, 637, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 638, 639, 640, 0, 303,
	304, 641, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	642, 643, 0, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 346, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 644,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	645, 646, 366, 0, 0, 0, 0, 0, 0, 0,
	367, 368, 369, 647, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 0, 373, 374, 375, 648, 649, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	650, 0, 651, 386, 0, 387, 388, 389, 390, 391,
	3532, 653, 654, 471, 0, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 0, 399, 400, 401,
	403, 0, 0, 402, 655, 656, 0, 657, 0, 404,
	405, 0, 658, 0, 406, 407, 408, 0, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 659, 0, 420, 421, 0, 0,
	422, 0, 0, 0, 423, 424, 427, 0, 0, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 0, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 0, 467, 456, 0, 0, 0, 468, 469,
	0, 660, 470, 661, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	0, 481, 0, 663, 482, 483, 475, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 666, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 668, 513, 514, 516, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 669, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 0, 563, 564, 546, 547, 565,
	566, 0, 567, 568, 569, 570, 571, 572, 573, 670,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 671, 581, 582, 583, 584, 672, 588, 589, 0,
	590, 591, 0, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 673, 674, 675,
	676, 0, 609, 0, 601, 602, 603, 677, 604, 678,
	0, 605, 606, 607, 608, 0, 610, 611, 0, 0,
	612, 613, 614, 616, 617, 615, 618, 0, 619, 0,
	0, 620, 621, 622, 679, 680, 681, 271, 624, 623,
	625, 682, 0, 626, 0, 0, 0, 0, 627, 628,
	683, 629, 630, 631, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 632,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 633, 634, 0, 294, 635, 295, 636,
	0, 637, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 638, 639, 640, 0, 303, 304, 641, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 642, 643, 0,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 346, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 644, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 645, 646, 366,
	0, 0, 0, 0, 0, 0, 0, 367, 368, 369,
	647, 0, 0, 0, 370, 0, 371, 372, 0, 0,
	0, 373, 374, 375, 648, 649, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 650, 0, 651,
	386, 0, 387, 388, 389, 390, 391, 3510, 653, 654,
	471, 0, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 0, 399, 400, 401, 403, 0, 0,
	402, 655, 656, 0, 657, 0, 404, 405, 0, 658,
	0, 406, 407, 408, 0, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 659, 0, 420, 421, 0, 0, 422, 0, 0,
	0, 423, 424, 427, 0, 0, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 0, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 0,
	467, 456, 0, 0, 0, 468, 469, 0, 660, 470,
	661, 472, 473, 0, 0, 474, 0, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 0, 481, 0,
	663, 482, 483, 475, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 666, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 510, 511, 512,
	668, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 669,
	541, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 0, 563, 564, 546, 547, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 670, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 671, 581,
	582, 583, 584, 672, 588, 589, 0, 590, 591, 0,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 673, 674, 675, 676, 0, 609,
	0, 601, 602, 603, 677, 604, 678, 0, 605, 606,
	607, 608, 0, 610, 611, 0, 0, 612, 613, 614,
	616, 617, 615, 618, 0, 619, 0, 0, 620, 621,
	622, 679, 680, 681, 271, 624, 623, 625, 682, 0,
	626, 0, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 632, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	633, 634, 0, 294, 635, 295, 636, 0, 637, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 638,
	639, 640, 0, 303, 304, 641, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 642, 643, 0, 339, 336, 337,
	0, 340, 338, 341, 0, 342, 343, 344, 0, 0,
	345, 346, 347, 0, 348, 349, 0, 350, 351, 352,
	0, 353, 354, 644, 355, 356, 357, 359, 361, 358,
	362, 363, 364, 365, 645, 646, 366, 0, 0, 0,
	0, 0, 0, 0, 367, 368, 369, 647, 0, 0,
	0, 370, 0, 371, 372, 0, 0, 0, 373, 374,
	375, 648, 649, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 650, 0, 651, 386, 0, 387,
	388, 389, 390, 391, 3507, 653, 654, 471, 0, 392,
	393, 0, 394, 395, 396, 397, 398, 0, 0, 0,
	0, 399, 400, 401, 403, 0, 0, 402, 655, 656,
	0, 657, 0, 404, 405, 0, 658, 0, 406, 407,
	408, 0, 409, 0, 0, 0, 410, 411, 412, 413,
	414, 415, 0, 416, 418, 417, 0, 419, 659, 0,
	420, 421, 0, 0, 422, 0, 0, 0, 423, 424,
	427, 0, 0, 425, 426, 428, 429, 0, 430, 431,
	433, 436, 432, 434, 435, 437, 450, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 452,
	0, 451, 0, 453, 454, 455, 461, 463, 464, 459,
	460, 462, 465, 466, 457, 458, 0, 467, 456, 0,
	0, 0, 468, 469, 0, 660, 470, 661, 472, 473,
	0, 0, 474, 0, 0, 0, 476, 477, 478, 0,
	0, 479, 480, 662, 0, 481, 0, 663, 482, 483,
	475, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 494, 664, 495, 496, 497, 665, 498, 499,
	500, 666, 501, 667, 502, 503, 0, 504, 505, 0,
	506, 507, 508, 509, 510, 511, 512, 668, 513, 514,
	516, 515, 517, 0, 518, 0, 519, 520, 521, 0,
	0, 0, 0, 0, 522, 0, 524, 525, 526, 527,
	523, 528, 529, 530, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 669, 541, 0, 542,
	543, 549, 550, 551, 544, 545, 552, 553, 554, 555,
	556, 0, 558, 559, 557, 560, 561, 562, 0, 563,
	564, 546, 547, 565, 566, 0, 567, 568, 569, 570,
	571, 572, 573, 670, 0, 574, 0, 575, 576, 577,
	579, 548, 580, 585, 586, 671, 581, 582, 583, 584,
	672, 588, 589, 0, 590, 591, 0, 587, 578, 0,
	592, 593, 594, 595, 596, 597, 598, 360, 599, 0,
	600, 673, 674, 675, 676, 0, 609, 0, 601, 602,
	603, 677, 604, 678, 0, 605, 606, 607, 608, 0,
	610, 611, 0, 0, 612, 613, 614, 616, 617, 615,
	618, 0, 619, 0, 0, 620, 621, 622, 679, 680,
	681, 271, 624, 623, 625, 682, 0, 626, 0, 0,
	0, 0, 627, 628, 683, 629, 630, 631, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 633, 634, 0,
	294, 635, 295, 636, 0, 637, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 638, 639, 640, 0,
	303, 304, 641, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 642, 643, 0, 339, 336, 337, 0, 340, 338,
	341, 0, 342, 343, 344, 0, 0, 345, 346, 347,
	0, 348, 349, 0, 350, 351, 352, 0, 353, 354,
	644, 355, 356, 357, 359, 361, 358, 362, 363, 364,
	365, 645, 646, 366, 0, 0, 0, 0, 0, 0,
	0, 367, 368, 369, 647, 0, 0, 0, 370, 0,
	371, 372, 0, 0, 0, 373, 374, 375, 648, 649,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 650, 0, 651, 386, 0, 387, 388, 389, 390,
	391, 3459, 653, 654, 471, 0, 392, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 0, 399, 400,
	401, 403, 0, 0, 402, 655, 656, 0, 657, 0,
	404, 405, 0, 658, 0, 406, 407, 408, 0, 409,
	0, 0, 0, 410, 411, 412, 413, 414, 415, 0,
	416, 418, 417, 0, 419, 659, 0, 420, 421, 0,
	0, 422, 0, 0, 0, 423, 424, 427, 0, 0,
	425, 426, 428, 429, 0, 430, 431, 433, 436, 432,
	434, 435, 437, 450, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 452, 0, 451, 0,
	453, 454, 455, 461, 463, 464, 459, 460, 462, 465,
	466, 457, 458, 0, 467, 456, 0, 0, 0, 468,
	469, 0, 660, 470, 661, 472, 473, 0, 0, 474,
	0, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	662, 0, 481, 0, 663, 482, 483, 475, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 494,
	664, 495, 496, 497, 665, 498, 499, 500, 666, 501,
	667, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	509, 510, 511, 512, 668, 513, 514, 516, 515, 517,
	0, 518, 0, 519, 520, 521, 0, 0, 0, 0,
	0, 522, 0, 524, 525, 526, 527, 523, 528, 529,
	530, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 669, 541, 0, 542, 543, 549, 550,
	551, 544, 545, 552, 553, 554, 555, 556, 0, 558,
	559, 557, 560, 561, 562, 0, 563, 564, 546, 547,
	565, 566, 0, 567, 568, 569, 570, 571, 572, 573,
	670, 0, 574, 0, 575, 576, 577, 579, 548, 580,
	585, 586, 671, 581, 582, 583, 584, 672, 588, 589,
	0, 590, 591, 0, 587, 578, 0, 592, 593, 594,
	595, 596, 597, 598, 360, 599, 0, 600, 673, 674,
	675, 676, 0, 609, 0, 601, 602, 603, 677, 604,
	678, 0, 605, 606, 607, 608, 0, 610, 611, 0,
	0, 612, 613, 614, 616, 617, 615, 618, 0, 619,
	0, 0, 620, 621, 622, 679, 680, 681, 271, 624,
	623, 625, 682, 0, 626, 0, 0, 0, 0, 627,
	628, 683, 629, 630, 631, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	632, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 633, 634, 0, 294, 635, 295,
	636, 0, 637, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 638, 639, 640, 0, 303, 304, 641,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 642, 643,
	0, 339, 336, 337, 0, 340, 338, 341, 0, 342,
	343, 344, 0, 0, 345, 346, 347, 0, 348, 349,
	0, 350, 351, 352, 0, 353, 354, 644, 355, 356,
	357, 359, 361, 358, 362, 363, 364, 365, 645, 646,
	366, 0, 0, 0, 0, 0, 0, 0, 367, 368,
	369, 647, 0, 0, 0, 370, 0, 371, 372, 0,
	0, 0, 373, 374, 375, 648, 649, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 650, 0,
	651, 386, 0, 387, 388, 389, 390, 391, 3457, 653,
	654, 471, 0, 392, 393, 0, 394, 395, 396, 397,
	398, 0, 0, 0, 0, 399, 400, 401, 403, 0,
	0, 402, 655, 656, 0, 657, 0, 404, 405, 0,
	658, 0, 406, 407, 408, 0, 409, 0, 0, 0,
	410, 411, 412, 413, 414, 415, 0, 416, 418, 417,
	0, 419, 659, 0, 420, 421, 0, 0, 422, 0,
	0, 0, 423, 424, 427, 0, 0, 425, 426, 428,
	429, 0, 430, 431, 433, 436, 432, 434, 435, 437,
	450, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 452, 0, 451, 0, 453, 454, 455,
	461, 463, 464, 459, 460, 462, 465, 466, 457, 458,
	0, 467, 456, 0, 0, 0, 468, 469, 0, 660,
	470, 661, 472, 473, 0, 0, 474, 0, 0, 0,
	476, 477, 478, 0, 0, 479, 480, 662, 0, 481,
	0, 663, 482, 483, 475, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 494, 664, 495, 496,
	497, 665, 498, 499, 500, 666, 501, 667, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 509, 510, 511,
	512, 668, 513, 514, 516, 515, 517, 0, 518, 0,
	519, 520, 521, 0, 0, 0, 0, 0, 522, 0,
	524, 525, 526, 527, 523, 528, 529, 530, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	669, 541, 0, 542, 543, 549, 550, 551, 544, 545,
	552, 553, 554, 555, 556, 0, 558, 559, 557, 560,
	561, 562, 0, 563, 564, 546, 547, 565, 566, 0,
	567, 568, 569, 570, 571, 572, 573, 670, 0, 574,
	0, 575, 576, 577, 579, 548, 580, 585, 586, 671,
	581, 582, 583, 584, 672, 588, 589, 0, 590, 591,
	0, 587, 578, 0, 592, 593, 594, 595, 596, 597,
	598, 360, 599, 0, 600, 673, 674, 675, 676, 0,
	609, 0, 601, 602, 603, 677, 604, 678, 0, 605,
	606, 607, 608, 0, 610, 611, 0, 0, 612, 613,
	614, 616, 617, 615, 618, 0, 619, 0, 0, 620,
	621, 622, 679, 680, 681, 271, 624, 623, 625, 682,
	0, 626, 0, 0, 0, 0, 627, 628, 683, 629,
	630, 631, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 632, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 633, 634, 0, 294, 635, 295, 636, 0, 637,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	638, 639, 640, 0, 303, 304, 641, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 642, 643, 0, 339, 336,
	337, 0, 340, 338, 341, 0, 342, 343, 344, 0,
	0, 345, 346, 347, 0, 348, 349, 0, 350, 351,
	352, 0, 353, 354, 644, 355, 356, 357, 359, 361,
	358, 362, 363, 364, 365, 645, 646, 366, 0, 0,
	0, 0, 0, 0, 0, 367, 368, 369, 647, 0,
	0, 0, 370, 0, 371, 372, 0, 0, 0, 373,
	374, 375, 648, 649, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 650, 0, 651, 386, 0,
	387, 388, 389, 390, 391, 3442, 653, 654, 471, 0,
	392, 393, 0, 394, 395, 396, 397, 398, 0, 0,
	0, 0, 399, 400, 401, 403, 0, 0, 402, 655,
	656, 0, 657, 0, 404, 405, 0, 658, 0, 406,
	407, 408, 0, 409, 0, 0, 0, 410, 411, 412,
	413, 414, 415, 0, 416, 418, 417, 0, 419, 659,
	0, 420, 421, 0, 0, 422, 0, 0, 0, 423,
	424, 427, 0, 0, 425, 426, 428, 429, 0, 430,
	431, 433, 436, 432, 434, 435, 437, 450, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	452, 0, 451, 0, 453, 454, 455, 461, 463, 464,
	459, 460, 462, 465, 466, 457, 458, 0, 467, 456,
	0, 0, 0, 468, 469, 0, 660, 470, 661, 472,
	473, 0, 0, 474, 0, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 662, 0, 481, 0, 663, 482,
	483, 475, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 494, 664, 495, 496, 497, 665, 498,
	499, 500, 666, 501, 667, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 509, 510, 511, 512, 668, 513,
	514, 516, 515, 517, 0, 518, 0, 519, 520, 521,
	0, 0, 0, 0, 0, 522, 0, 524, 525, 526,
	527, 523, 528, 529, 530, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 669, 541, 0,
	542, 543, 549, 550, 551, 544, 545, 552, 553, 554,
	555, 556, 0, 558, 559, 557, 560, 561, 562, 0,
	563, 564, 546, 547, 565, 566, 0, 567, 568, 569,
	570, 571, 572, 573, 670, 0, 574, 0, 575, 576,
	577, 579, 548, 580, 585, 586, 671, 581, 582, 583,
	584, 672, 588, 589, 0, 590, 591, 0, 587, 578,
	0, 592, 593, 594, 595, 596, 597, 598, 360, 599,
	0, 600, 673, 674, 675, 676, 0, 609, 0, 601,
	602, 603, 677, 604, 678, 0, 605, 606, 607, 608,
	0, 610, 611, 0, 0, 612, 613, 614, 616, 617,
	615, 618, 0, 619, 0, 0, 620, 621, 622, 679,
	680, 681, 271, 624, 623, 625, 682, 0, 626, 0,
	0, 0, 0, 627, 628, 683, 629, 630, 631, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 632, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 633, 634,
	0, 294, 635, 295, 636, 0, 637, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 638, 639, 640,
	0, 303, 304, 641, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 642, 643, 0, 339, 336, 337, 0, 340,
	338, 341, 0, 342, 343, 344, 0, 0, 345, 346,
	347, 0, 348, 349, 0, 350, 351, 352, 0, 353,
	354, 644, 355, 356, 357, 359, 361, 358, 362, 363,
	364, 365, 645, 646, 366, 0, 0, 0, 0, 0,
	0, 0, 367, 368, 369, 647, 0, 0, 0, 370,
	0, 371, 372, 0, 0, 0, 373, 374, 375, 648,
	649, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 650, 0, 651, 386, 0, 387, 388, 389,
	390, 391, 3048, 653, 654, 471, 0, 392, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 0, 399,
	400, 401, 403, 0, 0, 402, 655, 656, 0, 657,
	0, 404, 405, 0, 658, 0, 406, 407, 408, 0,
	409, 0, 0, 0, 410, 411, 412, 413, 414, 415,
	0, 416, 418, 417, 0, 419, 659, 0, 420, 421,
	0, 0, 422, 0, 0, 0, 423, 424, 427, 0,
	0, 425, 426, 428, 429, 0, 430, 431, 433, 436,
	432, 434, 435, 437, 450, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 452, 0, 451,
	0, 453, 454, 455, 461, 463, 464, 459, 460, 462,
	465, 466, 457, 458, 0, 467, 456, 0, 0, 0,
	468, 469, 0, 660, 470, 661, 472, 473, 0, 0,
	474, 0, 0, 0, 476, 477, 478, 0, 0, 479,
	480, 662, 0, 481, 0, 663, 482, 483, 475, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	494, 664, 495, 496, 497, 665, 498, 499, 500, 666,
	501, 667, 502, 503, 0, 504, 505, 0, 506, 507,
	508, 509, 510, 511, 512, 668, 513, 514, 516, 515,
	517, 0, 518, 0, 519, 520, 521, 0, 0, 0,
	0, 0, 522, 0, 524, 525, 526, 527, 523, 528,
	529, 530, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 669, 541, 0, 542, 543, 549,
	550, 551, 544, 545, 552, 553, 554, 555, 556, 0,
	558, 559, 557, 560, 561, 562, 0, 563, 564, 546,
	547, 565, 566, 0, 567, 568, 569, 570, 571, 572,
	573, 670, 0, 574, 0, 575, 576, 577, 579, 548,
	580, 585, 586, 671, 581, 582, 583, 584, 672, 588,
	589, 0, 590, 591, 0, 587, 578, 0, 592, 593,
	594, 595, 596, 597, 598, 360, 599, 0, 600, 673,
	674, 675, 676, 0, 609, 0, 601, 602, 603, 677,
	604, 678, 0, 605, 606, 607, 608, 0, 610, 611,
	0, 0, 612, 613, 614, 616, 617, 615, 618, 0,
	619, 0, 0, 620, 621, 622, 679, 680, 681, 271,
	624, 623, 625, 682, 0, 626, 0, 0, 0, 0,
	627, 628, 683, 629, 630, 631, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 633, 634, 0, 294, 635,
	295, 636, 0, 637, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 638, 639, 640, 0, 303, 304,
	641, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 642,
	643, 0, 339, 336, 337, 0, 340, 338, 341, 0,
	342, 343, 344, 0, 0, 345, 346, 347, 0, 348,
	349, 0, 350, 351, 352, 0, 353, 354, 644, 355,
	356, 357, 359, 361, 358, 362, 363, 364, 365, 645,
	646, 366, 0, 0, 0, 0, 0, 0, 0, 367,
	368, 369, 647, 0, 0, 0, 370, 0, 371, 372,
	0, 0, 0, 373, 374, 375, 648, 649, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 650,
	0, 651, 386, 0, 387, 388, 389, 390, 391, 652,
	653, 654, 471, 0, 392, 393, 0, 394, 395, 396,
	397, 398, 0, 0, 0, 0, 399, 400, 401, 403,
	0, 0, 402, 655, 656, 0, 657, 0, 404, 405,
	0, 658, 0, 406, 407, 408, 0, 409, 0, 0,
	0, 410, 411, 412, 413, 414, 415, 0, 416, 418,
	417, 0, 419, 659, 0, 420, 421, 0, 0, 422,
	0, 0, 0, 423, 424, 427, 0, 0, 425, 426,
	428, 429, 0, 430, 431, 433, 436, 432, 434, 435,
	437, 450, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 452, 0, 451, 0, 453, 454,
	455, 461, 463, 464, 459, 460, 462, 465, 466, 457,
	458, 0, 467, 456, 0, 0, 0, 468, 469, 0,
	660, 470, 661, 472, 473, 0, 0, 474, 0, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 662, 0,
	481, 0, 663, 482, 483, 475, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 494, 664, 495,
	496, 497, 665, 498, 499, 500, 666, 501, 667, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 509, 510,
	511, 512, 668, 513, 514, 516, 515, 517, 0, 518,
	0, 519, 520, 521, 0, 0, 0, 0, 0, 522,
	0, 524, 525, 526, 527, 523, 528, 529, 530, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 669, 541, 0, 542, 543, 755, 550, 551, 544,
	545, 552, 553, 554, 555, 556, 0, 558, 559, 557,
	560, 561, 562, 0, 563, 564, 546, 547, 565, 566,
	0, 567, 568, 569, 570, 571, 572, 573, 670, 0,
	574, 0, 575, 576, 577, 579, 548, 580, 585, 586,
	671, 581, 582, 583, 584, 672, 588, 589, 0, 590,
	591, 0, 587, 578, 0, 592, 593, 594, 595, 596,
	597, 598, 360, 599, 0, 600, 673, 674, 675, 676,
	0, 609, 0, 601, 602, 603, 677, 604, 678, 0,
	605, 606, 607, 608, 0, 610, 611, 0, 0, 612,
	613, 614, 616, 617, 615, 618, 0, 619, 0, 0,
	620, 621, 622, 679, 680, 681, 271, 624, 623, 625,
	682, 0, 626, 0, 0, 0, 0, 627, 628, 683,
	629, 630, 631, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 632, 0,
	2291, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 633, 634, 0, 294, 635, 295, 636, 0,
	637, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 638, 639, 640, 0, 303, 304, 641, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 642, 643, 0, 339,
	336, 337, 0, 340, 338, 341, 0, 342, 343, 344,
	0, 0, 345, 346, 347, 0, 348, 349, 0, 350,
	351, 352, 0, 353, 354, 644, 355, 356, 357, 359,
	361, 358, 362, 363, 364, 365, 645, 646, 366, 0,
	0, 0, 0, 0, 0, 0, 367, 368, 369, 647,
	0, 0, 0, 370, 0, 371, 372, 0, 0, 0,
	373, 374, 375, 648, 649, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 650, 0, 651, 386,
	0, 387, 388, 389, 390, 391, 652, 653, 654, 471,
	0, 392, 393, 0, 394, 395, 396, 397, 398, 0,
	0, 0, 0, 399, 400, 401, 403, 0, 0, 402,
	655, 656, 0, 657, 0, 404, 405, 0, 658, 0,
	406, 407, 408, 0, 409, 0, 0, 0, 410, 411,
	412, 413, 414, 415, 0, 416, 418, 417, 0, 419,
	659, 0, 420, 421, 0, 0, 422, 0, 0, 0,
	423, 424, 427, 0, 0, 425, 426, 428, 429, 0,
	430, 431, 433, 436, 432, 434, 435, 437, 450, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 452, 0, 451, 0, 453, 454, 455, 461, 463,
	464, 459, 460, 462, 465, 466, 457, 458, 0, 467,
	456, 0, 0, 0, 468, 469, 0, 660, 470, 661,
	472, 473, 0, 0, 474, 0, 0, 0, 476, 477,
	478, 0, 0, 479, 480, 662, 0, 481, 0, 663,
	482, 483, 475, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 494, 664, 495, 496, 497, 665,
	498, 499, 500, 666, 501, 667, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 509, 510, 511, 512, 668,
	513, 514, 516, 515, 517, 0, 518, 0, 519, 520,
	521, 0, 0, 0, 0, 0, 522, 0, 524, 525,
	526, 527, 523, 528, 529, 530, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 669, 541,
	0, 542, 543, 549, 550, 551, 544, 545, 552, 553,
	554, 555, 556, 0, 558, 559, 557, 560, 561, 562,
	0, 0, 564, 546, 547, 565, 566, 0, 567, 568,
	569, 570, 571, 572, 573, 670, 0, 574, 0, 575,
	576, 577, 579, 548, 580, 585, 586, 671, 581, 582,
	583, 584, 672, 588, 589, 0, 590, 591, 0, 587,
	578, 0, 592, 593, 594, 595, 596, 597, 598, 360,
	599, 0, 600, 673, 674, 675, 676, 0, 609, 0,
	601, 602, 603, 677, 604, 678, 0, 605, 606, 607,
	608, 0, 610, 611, 0, 0, 612, 613, 614, 616,
	617, 615, 618, 0, 619, 0, 0, 620, 621, 622,
	679, 680, 681, 271, 624, 623, 625, 682, 0, 626,
	0, 0, 0, 0, 627, 628, 683, 629, 630, 631,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 632, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 633,
	634, 0, 294, 635, 295, 636, 0, 637, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 638, 639,
	640, 0, 303, 304, 641, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 642, 643, 0, 339, 336, 337, 0,
	340, 338, 341, 0, 342, 343, 344, 0, 0, 345,
	346, 347, 0, 348, 349, 0, 350, 351, 352, 0,
	353, 354, 644, 355, 356, 357, 359, 361, 358, 362,
	363, 364, 365, 645, 646, 366, 0, 0, 0, 0,
	0, 0, 0, 367, 368, 369, 647, 0, 0, 0,
	370, 0, 371, 372, 0, 0, 0, 373, 374, 375,
	648, 649, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 650, 0, 651, 386, 0, 387, 388,
	389, 390, 391, 1282, 653, 654, 471, 0, 392, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 0,
	399, 400, 401, 403, 0, 0, 402, 655, 656, 0,
	657, 0, 404, 405, 0, 658, 0, 406, 407, 408,
	0, 409, 0, 0, 0, 410, 411, 412, 413, 414,
	415, 0, 416, 418, 417, 0, 419, 659, 0, 420,
	421, 0, 0, 422, 0, 0, 0, 423, 424, 427,
	0, 0, 425, 426, 428, 429, 0, 430, 431, 433,
	436, 432, 434, 435, 437, 450, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 452, 0,
	451, 0, 453, 454, 455, 461, 463, 464, 459, 460,
	462, 465, 466, 457, 458, 0, 467, 456, 0, 0,
	0, 468, 469, 0, 660, 470, 661, 472, 473, 0,
	0, 474, 0, 0, 0, 476, 477, 478, 0, 0,
	479, 480, 662, 0, 481, 0, 663, 482, 483, 475,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 494, 664, 495, 496, 497, 665, 498, 499, 500,
	666, 501, 667, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 509, 510, 511, 512, 668, 513, 514, 516,
	515, 517, 0, 518, 0, 519, 520, 521, 0, 0,
	0, 0, 0, 522, 0, 524, 525, 526, 527, 523,
	528, 529, 530, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 669, 541, 0, 542, 543,
	549, 550, 551, 544, 545, 552, 553, 554, 555, 556,
	0, 558, 559, 557, 560, 561, 562, 0, 563, 564,
	546, 547, 565, 566, 0, 567, 568, 569, 570, 571,
	572, 573, 670, 0, 574, 0, 575, 576, 577, 579,
	548, 580, 585, 586, 671, 581, 582, 583, 584, 672,
	588, 589, 0, 590, 591, 0, 587, 578, 0, 592,
	593, 594, 595, 596, 597, 598, 360, 599, 0, 600,
	673, 674, 675, 676, 0, 609, 0, 601, 602, 603,
	677, 604, 678, 0, 605, 606, 607, 608, 0, 610,
	611, 0, 0, 612, 613, 614, 616, 617, 615, 618,
	0, 619, 0, 0, 620, 621, 622, 679, 680, 681,
	271, 624, 623, 625, 682, 0, 626, 0, 0, 0,
	0, 627, 628, 683, 629, 630, 631, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 633, 634, 0, 294,
	635, 295, 636, 0, 637, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 638, 639, 640, 0, 303,
	304, 641, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	642, 643, 0, 339, 336, 337, 0, 340, 338, 341,
	0, 342, 343, 344, 0, 0, 345, 346, 347, 0,
	348, 349, 0, 350, 351, 352, 0, 353, 354, 644,
	355, 356, 357, 359, 361, 358, 362, 363, 364, 365,
	645, 646, 366, 0, 0, 0, 0, 0, 0, 0,
	367, 368, 369, 647, 0, 0, 0, 370, 0, 371,
	372, 0, 0, 0, 373, 374, 375, 648, 649, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	650, 0, 651, 386, 0, 387, 388, 389, 390, 391,
	652, 653, 654, 471, 0, 392, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 0, 399, 400, 401,
	403, 0, 0, 402, 655, 656, 0, 657, 0, 404,
	405, 0, 658, 0, 406, 407, 408, 0, 409, 0,
	0, 0, 410, 411, 412, 413, 414, 415, 0, 416,
	418, 417, 0, 419, 659, 0, 420, 421, 0, 0,
	422, 0, 0, 0, 423, 424, 427, 0, 0, 425,
	426, 428, 429, 0, 430, 431, 433, 436, 432, 434,
	435, 437, 450, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 452, 0, 451, 0, 453,
	454, 455, 461, 463, 464, 459, 460, 462, 465, 466,
	457, 458, 0, 467, 456, 0, 0, 0, 468, 469,
	0, 660, 470, 661, 472, 473, 0, 0, 474, 0,
	0, 0, 476, 477, 478, 0, 0, 479, 480, 662,
	0, 481, 0, 663, 482, 483, 475, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 494, 664,
	495, 496, 497, 665, 498, 499, 500, 666, 501, 667,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 509,
	510, 511, 512, 668, 513, 514, 1214, 515, 517, 0,
	518, 0, 519, 520, 521, 0, 0, 0, 0, 0,
	522, 0, 524, 525, 526, 527, 523, 528, 529, 530,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 669, 541, 0, 542, 543, 549, 550, 551,
	544, 545, 552, 553, 554, 555, 556, 0, 558, 559,
	557, 560, 561, 562, 0, 563, 564, 546, 547, 565,
	566, 0, 567, 568, 569, 570, 571, 572, 573, 670,
	0, 574, 0, 575, 576, 577, 579, 548, 580, 585,
	586, 671, 581, 582, 583, 584, 672, 588, 589, 0,
	590, 591, 0, 587, 578, 0, 592, 593, 594, 595,
	596, 597, 598, 360, 599, 0, 600, 673, 674, 675,
	676, 0, 609, 0, 601, 602, 603, 677, 604, 678,
	0, 605, 606, 607, 608, 0, 610, 611, 0, 0,
	612, 613, 614, 616, 617, 615, 618, 0, 619, 0,
	0, 620, 621, 622, 679, 680, 681, 271, 624, 623,
	625, 682, 0, 626, 0, 0, 0, 0, 627, 628,
	683, 629, 630, 631, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 632,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 633, 634, 0, 294, 635, 295, 636,
	0, 637, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 638, 639, 640, 0, 303, 304, 641, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 642, 643, 0,
	339, 336, 337, 0, 340, 338, 341, 0, 342, 343,
	344, 0, 0, 345, 346, 347, 0, 348, 349, 0,
	350, 351, 352, 0, 353, 354, 644, 355, 356, 357,
	359, 361, 358, 362, 363, 364, 365, 645, 646, 366,
	0, 0, 0, 0, 0, 0, 0, 367, 368, 369,
	647, 0, 0, 0, 370, 0, 371, 372, 0, 0,
	0, 373, 374, 375, 648, 649, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 650, 0, 651,
	0, 0, 387, 388, 389, 390, 391, 652, 653, 654,
	471, 0, 392, 393, 0, 394, 395, 396, 397, 398,
	0, 0, 0, 0, 399, 400, 401, 403, 0, 0,
	402, 655, 656, 0, 657, 0, 404, 405, 0, 658,
	0, 406, 407, 408, 0, 409, 0, 0, 0, 410,
	411, 412, 413, 414, 415, 0, 416, 418, 417, 0,
	419, 659, 0, 420, 421, 0, 0, 422, 0, 0,
	0, 423, 424, 427, 0, 0, 425, 426, 428, 429,
	0, 430, 431, 433, 436, 432, 434, 435, 437, 450,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 452, 0, 451, 0, 453, 454, 455, 461,
	463, 464, 459, 460, 462, 465, 466, 457, 458, 0,
	467, 456, 0, 0, 0, 468, 469, 0, 660, 470,
	661, 472, 473, 0, 0, 474, 0, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 662, 0, 481, 0,
	663, 482, 483, 475, 484, 485, 0, 487, 488, 489,
	490, 491, 492, 0, 493, 494, 664, 495, 496, 497,
	665, 498, 499, 500, 666, 501, 667, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 509, 0, 511, 512,
	668, 513, 514, 516, 515, 517, 0, 518, 0, 519,
	520, 521, 0, 0, 0, 0, 0, 522, 0, 524,
	525, 526, 527, 523, 528, 529, 530, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 669,
	0, 0, 542, 543, 549, 550, 551, 544, 545, 552,
	553, 554, 555, 556, 0, 558, 559, 557, 560, 561,
	562, 0, 563, 564, 546, 547, 565, 566, 0, 567,
	568, 569, 570, 571, 572, 573, 670, 0, 574, 0,
	575, 576, 577, 579, 548, 580, 585, 586, 671, 581,
	582, 583, 584, 672, 588, 589, 0, 590, 591, 0,
	587, 578, 0, 592, 593, 594, 595, 596, 597, 598,
	360, 599, 0, 600, 673, 674, 675, 676, 0, 609,
	0, 601, 602, 603, 677, 604, 678, 0, 605, 606,
	607, 608, 0, 610, 611, 0, 0, 612, 613, 614,
	616, 617, 615, 618, 0, 619, 0, 0, 620, 621,
	622, 679, 680, 681, 0, 624, 623, 625, 682, 0,
	626, 0, 0, 0, 0, 627, 628, 683, 629, 630,
	631, 1787, 1788, 0, 1820, 1821, 1822, 1831, 1832, 1833,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1824, 1818, 0, 0, 0, 0, 0,
	0, 1790, 0, 0, 0, 0, 0, 0, 0, 0,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 0, 0,
	0, 0, 0, 0, 1787, 1788, 1789, 1820, 1821, 1822,
	1831, 1832, 1833, 0, 0, 0, 1809, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 1824, 1818, 0, 0,
	0, 0, 0, 0, 1790, 0, 0, 0, 0, 0,
	0, 0, 0, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 0, 0, 0, 0, 0, 0, 0, 0, 1789,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1809,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 1813, 1814, 1815, 0, 0, 0, 0, 0, 0,
	1795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1787, 1788, 0, 1820, 1821, 1822, 1831,
	1832, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1824, 1818, 0, 1828, 0,
	0, 1838, 0, 1790, 0, 0, 0, 0, 1817, 1819,
	0, 0, 1837, 1812, 1813, 1814, 1815, 0, 0, 0,
	0, 0, 0, 1795, 0, 1834, 0, 1835, 0, 1843,
	0, 0, 0, 0, 1804, 1805, 0, 0, 1789, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1809, 0,
	0, 0, 1826, 0, 0, 0, 0, 1806, 0, 0,
	0, 1828, 0, 0, 1838, 0, 0, 1810, 0, 0,
	0, 1817, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1834, 0,
	1835, 0, 0, 0, 0, 0, 0, 1804, 1805, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1836, 0, 0, 0, 1826, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1825,
	1810, 0, 1812, 1813, 1814, 1815, 0, 0, 0, 0,
	1840, 0, 1795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1836, 0, 0, 0, 0, 0,
	1828, 0, 0, 1838, 0, 0, 0, 0, 0, 0,
	1817, 1819, 1825, 0, 0, 1816, 0, 0, 0, 0,
	0, 0, 0, 1840, 0, 0, 0, 1834, 0, 1835,
	0, 0, 0, 0, 0, 0, 1804, 1805, 1811, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 0, 0, 0, 1810,
	0, 0, 0, 0, 0, 0, 0, 0, 1816, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1842, 0, 0, 0,
	0, 1811, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1829, 0,
	0, 1825, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1842,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1801, 1802,
	1808, 1830, 1807, 1803, 0, 1800, 1798, 1799, 1791, 1792,
	1793, 1794, 1796, 1797, 0, 0, 0, 1816, 0, 0,
	0, 0, 3259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1811, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1801, 1802, 1808, 1830, 1807, 1803, 1829, 1800, 1798,
	1799, 1791, 1792, 1793, 1794, 1796, 1797, 0, 0, 0,
	0, 0, 0, 1787, 1788, 3258, 1820, 1821, 1822, 1831,
	1832, 1833, 0, 0, 0, 0, 0, 0, 1842, 0,
	0, 0, 0, 0, 0, 1824, 1818, 0, 0, 0,
	0, 0, 0, 1790, 0, 0, 0, 0, 0, 0,
	0, 0, 1837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	0, 0, 0, 0, 0, 0, 0, 0, 1789, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1809, 0,
	0, 0, 0, 0, 0, 0, 0, 1806, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1801, 1802, 1808, 1830, 1807, 1803, 0, 1800, 1798, 1799,
	1791, 1792, 1793, 1794, 1796, 1797, 0, 0, 0, 0,
	0, 0, 1787, 1788, 2580, 1820, 1821, 1822, 1831, 1832,
	1833, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 1818, 0, 0, 0, 0,
	0, 0, 1790, 0, 0, 0, 0, 0, 0, 0,
	0, 1837, 1812, 1813, 1814, 1815, 0, 0, 0, 0,
	0, 0, 1795, 0, 0, 0, 0, 0, 1843, 0,
	0, 0, 0, 0, 0, 1787, 1788, 1789, 1820, 1821,
	1822, 1831, 1832, 1833, 0, 0, 0, 1809, 0, 0,
	0, 0, 0, 0, 0, 0, 1806, 1824, 1818, 0,
	1828, 0, 0, 1838, 0, 1790, 0, 0, 0, 0,
	1817, 1819, 0, 0, 1837, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1834, 0, 1835,
	0, 1843, 0, 0, 0, 0, 1804, 1805, 0, 0,
	1789, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1809, 0, 0, 0, 1826, 0, 0, 0, 0, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	0, 1812, 1813, 1814, 1815, 0, 0, 0, 0, 0,
	0, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1836, 0, 0, 0, 0, 0, 1828,
	0, 0, 1838, 0, 0, 0, 0, 0, 0, 1817,
	1819, 1825, 0, 0, 1812, 1813, 1814, 1815, 0, 0,
	0, 0, 1840, 0, 1795, 0, 1834, 0, 1835, 0,
	0, 0, 0, 0, 0, 1804, 1805, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 1838, 0, 0, 1810, 0,
	0, 0, 1817, 1819, 0, 0, 0, 1816, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1834,
	0, 1835, 0, 0, 0, 0, 0, 0, 1804, 1805,
	1811, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1836, 0, 0, 0, 1826, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	1825, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1825, 0, 0, 1816, 0, 0, 0,
	0, 0, 0, 0, 1840, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1811,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1801, 1802, 1808, 1830, 1807, 1803, 1829, 1800, 1798, 1799,
	1791, 1792, 1793, 1794, 1796, 1797, 0, 0, 0, 1816,
	4651, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1842, 0, 0,
	0, 0, 1811, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1787, 1788, 0, 1820, 1821, 1822, 1831, 1832, 1833, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 1818, 0, 0, 0, 0, 0, 0,
	1790, 0, 0, 0, 0, 0, 0, 0, 0, 1837,
	1842, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 1843, 0, 0, 1801,
	1802, 1808, 1830, 1807, 1803, 1789, 1800, 1798, 1799, 1791,
	1792, 1793, 1794, 1796, 1797, 1809, 0, 0, 0, 4647,
	0, 0, 0, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1801, 1802, 1808, 1830, 1807, 1803, 0, 1800,
	1798, 1799, 1791, 1792, 1793, 1794, 1796, 1797, 0, 0,
	0, 0, 4562, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	1813, 1814, 1815, 0, 0, 0, 0, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1787, 1788, 0, 1820, 1821, 1822, 1831, 1832, 1833,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1824, 1818, 0, 0, 1828, 0, 0,
	1838, 1790, 0, 0, 0, 0, 0, 1817, 1819, 0,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1834, 0, 1835, 1843, 0, 0,
	0, 0, 0, 1804, 1805, 0, 1789, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1809, 0, 0, 0,
	0, 1826, 0, 0, 0, 1806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 0, 0, 1787,
	1788, 0, 1820, 1821, 1822, 1831, 1832, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1824, 1818, 0, 0, 0, 0, 0, 0, 1790,
	0, 0, 0, 0, 0, 0, 0, 0, 1837, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 0, 0, 1825, 0,
	1812, 1813, 1814, 1815, 1789, 0, 0, 0, 0, 1840,
	1795, 0, 0, 0, 1809, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 0,
	0, 1838, 0, 0, 0, 0, 0, 0, 1817, 1819,
	0, 0, 0, 0, 1816, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1834, 0, 1835, 0, 0,
	0, 0, 0, 0, 1804, 1805, 0, 1811, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1812, 1813,
	1814, 1815, 1826, 0, 0, 0, 0, 0, 1795, 0,
	0, 0, 0, 0, 1829, 0, 0, 1810, 0, 0,
	1787, 1788, 0, 1820, 1821, 1822, 1831, 1832, 1833, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 1818, 0, 1842, 1828, 0, 0, 1838,
	1790, 0, 0, 0, 0, 0, 1817, 1819, 0, 1837,
	0, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1834, 0, 1835, 1843, 0, 0, 1825,
	0, 0, 1804, 1805, 0, 1789, 0, 0, 0, 0,
	1840, 0, 0, 0, 0, 1809, 0, 0, 0, 0,
	1826, 0, 0, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1801, 1802, 1808,
	1830, 1807, 1803, 0, 1800, 1798, 1799, 1791, 1792, 1793,
	1794, 1796, 1797, 0, 0, 1816, 0, 4521, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1836,
	0, 0, 0, 0, 0, 0, 0, 0, 1811, 0,
	0, 0, 0, 0, 0, 0, 0, 1825, 0, 1812,
	1813, 1814, 1815, 0, 0, 0, 0, 0, 1840, 1795,
	0, 0, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1842, 1828, 0, 0,
	1838, 0, 0, 0, 0, 0, 0, 1817, 1819, 0,
	0, 0, 0, 1816, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1834, 0, 1835, 0, 0, 0,
	0, 0, 0, 1804, 1805, 0, 1811, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 0, 0, 1810, 0, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1801, 1802,
	1808, 1830, 1807, 1803, 0, 1800, 1798, 1799, 1791, 1792,
	1793, 1794, 1796, 1797, 1842, 0, 0, 0, 4520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1825, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 1802, 1808, 1830,
	1807, 1803, 0, 1800, 1798, 1799, 1791, 1792, 1793, 1794,
	1796, 1797, 0, 0, 1816, 0, 4331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 0, 0,
	1787, 1788, 0, 1820, 1821, 1822, 1831, 1832, 1833, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 1818, 1829, 0, 0, 0, 0, 0,
	1790, 0, 0, 0, 0, 0, 0, 0, 0, 1837,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1842, 1843, 0, 0, 0,
	0, 0, 0, 0, 0, 1789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1809, 0, 0, 0, 0,
	0, 0, 0, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1801, 1802, 1808,
	1830, 1807, 1803, 0, 1800, 1798, 1799, 1791, 1792, 1793,
	1794, 1796, 1797, 0, 0, 0, 0, 4165, 0, 1812,
	1813, 1814, 1815, 0, 0, 0, 0, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1787, 1788, 0, 1820, 1821, 1822, 1831, 1832, 1833,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1824, 1818, 0, 0, 1828, 0, 0,
	1838, 1790, 0, 0, 0, 0, 0, 1817, 1819, 0,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1834, 0, 1835, 1843, 0, 0,
	0, 0, 0, 1804, 1805, 0, 1789, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1809, 0, 0, 0,
	0, 1826, 0, 0, 0, 1806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 0, 0, 1787,
	1788, 0, 1820, 1821, 1822, 1831, 1832, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1824, 1818, 0, 0, 0, 0, 0, 0, 1790,
	0, 0, 0, 0, 0, 0, 0, 0, 1837, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 0, 0, 1825, 0,
	1812, 1813, 1814, 1815, 1789, 0, 0, 0, 0, 1840,
	1795, 0, 0, 0, 1809, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 0,
	0, 1838, 0, 0, 0, 0, 0, 0, 1817, 1819,
	0, 0, 0, 0, 1816, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1834, 0, 1835, 0, 0,
	0, 0, 0, 0, 1804, 1805, 0, 1811, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1812, 1813,
	1814, 1815, 1826, 0, 0, 0, 0, 0, 1795, 0,
	0, 0, 0, 0, 1829, 0, 0, 1810, 0, 0,
	1787, 1788, 0, 1820, 1821, 1822, 1831, 1832, 1833, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 1818, 0, 1842, 1828, 0, 0, 1838,
	1790, 0, 0, 0, 0, 0, 1817, 1819, 0, 1837,
	0, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1834, 0, 1835, 1843, 0, 0, 1825,
	0, 0, 1804, 1805, 0, 1789, 0, 0, 0, 0,
	1840, 0, 0, 0, 0, 1809, 0, 0, 0, 0,
	1826, 0, 0, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1801, 1802, 1808,
	1830, 1807, 1803, 0, 1800, 1798, 1799, 1791, 1792, 1793,
	1794, 1796, 1797, 0, 0, 1816, 0, 4095, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1836,
	0, 0, 0, 0, 0, 0, 0, 0, 1811, 0,
	0, 0, 0, 0, 0, 0, 0, 1825, 0, 1812,
	1813, 1814, 1815, 0, 0, 0, 0, 0, 1840, 1795,
	0, 0, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1842, 1828, 0, 0,
	1838, 0, 0, 0, 0, 0, 0, 1817, 1819, 0,
	0, 0, 0, 1816, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1834, 0, 1835, 0, 0, 0,
	0, 0, 0, 1804, 1805, 0, 1811, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 0, 0, 1810, 0, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1801, 1802,
	1808, 1830, 1807, 1803, 0, 1800, 1798, 1799, 1791, 1792,
	1793, 1794, 1796, 1797, 1842, 0, 0, 0, 4094, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1825, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 1802, 1808, 1830,
	1807, 1803, 0, 1800, 1798, 1799, 1791, 1792, 1793, 1794,
	1796, 1797, 0, 0, 1816, 0, 4093, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 0, 0,
	1787, 1788, 0, 1820, 1821, 1822, 1831, 1832, 1833, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 1818, 1829, 0, 0, 0, 0, 0,
	1790, 0, 0, 0, 0, 0, 0, 0, 0, 1837,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1842, 1843, 0, 0, 0,
	0, 0, 0, 0, 0, 1789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1809, 0, 0, 0, 0,
	0, 0, 0, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1801, 1802, 1808,
	1830, 1807, 1803, 0, 1800, 1798, 1799, 1791, 1792, 1793,
	1794, 1796, 1797, 0, 0, 0, 0, 3751, 0, 1812,
	1813, 1814, 1815, 0, 0, 0, 0, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1787, 1788, 0, 1820, 1821, 1822, 1831, 1832, 1833,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1824, 1818, 0, 0, 1828, 0, 0,
	1838, 1790, 0, 0, 0, 0, 0, 1817, 1819, 0,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1834, 0, 1835, 1843, 0, 0,
	0, 0, 0, 1804, 1805, 0, 1789, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1809, 0, 0, 0,
	0, 1826, 0, 0, 0, 1806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 0, 0, 1787,
	1788, 0, 1820, 1821, 1822, 1831, 1832, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1824, 1818, 0, 0, 0, 0, 0, 0, 1790,
	0, 0, 0, 0, 0, 0, 0, 0, 1837, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 0, 0, 1825, 0,
	1812, 1813, 1814, 1815, 1789, 0, 0, 0, 0, 1840,
	1795, 0, 0, 0, 1809, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 0,
	0, 1838, 0, 0, 0, 0, 0, 0, 1817, 1819,
	0, 0, 0, 0, 1816, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1834, 0, 1835, 0, 0,
	0, 0, 0, 0, 1804, 1805, 0, 1811, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1812, 1813,
	1814, 1815, 1826, 0, 0, 0, 0, 0, 1795, 0,
	0, 0, 0, 0, 1829, 0, 0, 1810, 0, 0,
	1787, 1788, 0, 1820, 1821, 1822, 1831, 1832, 1833, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 1818, 0, 1842, 1828, 0, 0, 1838,
	1790, 0, 0, 0, 0, 0, 1817, 1819, 0, 1837,
	0, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1834, 0, 1835, 1843, 0, 0, 1825,
	0, 0, 1804, 1805, 0, 1789, 0, 0, 0, 0,
	1840, 0, 0, 0, 0, 1809, 0, 0, 0, 0,
	1826, 0, 0, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1801, 1802, 1808,
	1830, 1807, 1803, 0, 1800, 1798, 1799, 1791, 1792, 1793,
	1794, 1796, 1797, 0, 0, 1816, 0, 3256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1836,
	0, 0, 0, 0, 0, 0, 0, 0, 1811, 0,
	0, 0, 0, 0, 0, 0, 0, 1825, 0, 1812,
	1813, 1814, 1815, 0, 0, 0, 0, 0, 1840, 1795,
	0, 0, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1842, 1828, 0, 0,
	1838, 0, 0, 0, 0, 0, 0, 1817, 1819, 0,
	0, 0, 0, 1816, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1834, 0, 1835, 0, 0, 0,
	0, 0, 0, 1804, 1805, 0, 1811, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 0, 0, 1810, 0, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1801, 1802,
	1808, 1830, 1807, 1803, 0, 1800, 1798, 1799, 1791, 1792,
	1793, 1794, 1796, 1797, 1842, 0, 0, 0, 3255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1825, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 1802, 1808, 1830,
	1807, 1803, 0, 1800, 1798, 1799, 1791, 1792, 1793, 1794,
	1796, 1797, 0, 0, 1816, 0, 3254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 0, 0,
	1787, 1788, 0, 1820, 1821, 1822, 1831, 1832, 1833, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 1818, 1829, 0, 0, 0, 0, 0,
	1790, 0, 0, 0, 0, 0, 0, 0, 0, 1837,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1842, 1843, 0, 0, 0,
	0, 0, 0, 0, 0, 1789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1809, 0, 0, 0, 0,
	0, 0, 0, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1801, 1802, 1808,
	1830, 1807, 1803, 0, 1800, 1798, 1799, 1791, 1792, 1793,
	1794, 1796, 1797, 0, 0, 0, 0, 3253, 0, 1812,
	1813, 1814, 1815, 0, 0, 0, 0, 0, 0, 1795,
	4800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1787, 1788, 0, 1820, 1821, 1822, 1831, 1832, 1833,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1824, 1818, 0, 0, 1828, 0, 0,
	1838, 1790, 0, 0, 0, 0, 0, 1817, 1819, 0,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1834, 0, 1835, 1843, 0, 0,
	0, 0, 0, 1804, 1805, 0, 1789, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1809, 0, 0, 0,
	0, 1826, 0, 0, 0, 1806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 0, 0, 1787,
	1788, 0, 1820, 1821, 1822, 1831, 1832, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1824, 1818, 0, 0, 0, 0, 3189, 0, 1790,
	0, 0, 0, 0, 0, 0, 0, 0, 1837, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 0, 0, 1825, 0,
	1812, 1813, 1814, 1815, 1789, 0, 0, 0, 0, 1840,
	1795, 0, 3318, 0, 1809, 0, 3317, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 4799, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 0,
	0, 1838, 0, 0, 0, 0, 0, 0, 1817, 1819,
	0, 0, 3190, 0, 1816, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1834, 0, 1835, 0, 0,
	0, 0, 0, 0, 1804, 1805, 0, 1811, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1812, 1813,
	1814, 1815, 1826, 0, 0, 0, 0, 0, 1795, 0,
	0, 0, 0, 2727, 1829, 0, 0, 1810, 0, 0,
	1787, 1788, 0, 1820, 1821, 1822, 1831, 1832, 1833, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 1818, 0, 1842, 1828, 2726, 0, 1838,
	1790, 0, 0, 0, 0, 0, 1817, 1819, 0, 1837,
	0, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1834, 0, 1835, 1843, 0, 0, 1825,
	0, 0, 1804, 1805, 0, 1789, 0, 0, 0, 0,
	1840, 0, 0, 0, 0, 1809, 0, 0, 0, 0,
	1826, 0, 0, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1801, 1802, 1808,
	1830, 1807, 1803, 0, 1800, 1798, 1799, 1791, 1792, 1793,
	1794, 1796, 1797, 0, 0, 1816, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1836,
	0, 0, 0, 0, 0, 0, 0, 0, 1811, 0,
	0, 0, 0, 0, 0, 0, 0, 1825, 0, 1812,
	1813, 1814, 1815, 0, 0, 0, 0, 0, 1840, 1795,
	0, 0, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1842, 1828, 0, 0,
	1838, 0, 0, 0, 0, 0, 0, 1817, 1819, 0,
	0, 0, 0, 1816, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1834, 0, 1835, 0, 0, 0,
	0, 0, 0, 1804, 1805, 0, 1811, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 0, 0, 1810, 0, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1801, 1802,
	1808, 1830, 1807, 1803, 0, 1800, 1798, 1799, 1791, 1792,
	1793, 1794, 1796, 1797, 1842, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1825, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 1802, 1808, 1830,
	1807, 1803, 0, 1800, 1798, 1799, 1791, 1792, 1793, 1794,
	1796, 1797, 0, 0, 1816, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1787, 1788, 1811, 1820, 1821,
	1822, 1831, 1832, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1824, 1818, 0,
	0, 0, 0, 0, 1829, 1790, 0, 0, 0, 0,
	0, 0, 0, 0, 1837, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 0, 0, 0, 1842, 0, 0, 0, 0,
	1789, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1809, 0, 0, 0, 0, 0, 0, 0, 0, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1801, 1802, 1808,
	1830, 1807, 1803, 0, 1800, 1798, 1799, 1791, 1792, 1793,
	1794, 1796, 1797, 0, 1812, 1813, 1814, 1815, 0, 0,
	0, 0, 0, 0, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1787, 1788, 0, 1820,
	1821, 1822, 1831, 1832, 1833, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1824, 1818,
	0, 0, 1828, 0, 0, 1838, 1790, 0, 0, 0,
	0, 0, 1817, 1819, 0, 1837, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1834,
	0, 1835, 1843, 0, 0, 0, 0, 0, 1804, 1805,
	0, 1789, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1809, 0, 0, 0, 0, 1826, 0, 0, 0,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1787, 1788, 0, 1820, 1821, 1822,
	1831, 1832, 1833, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1824, 1818, 0, 0,
	0, 0, 0, 0, 1790, 1836, 0, 0, 0, 0,
	0, 0, 0, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1825, 1068, 1812, 1813, 1814, 1815, 0,
	1843, 0, 0, 0, 1840, 1795, 0, 0, 0, 1789,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1809,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 0, 1838, 0, 0, 0,
	0, 0, 0, 1817, 1819, 0, 0, 0, 0, 1816,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1834, 0, 1835, 0, 0, 0, 0, 0, 0, 1804,
	1805, 0, 1811, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 0, 0,
	0, 0, 0, 1812, 1813, 1814, 1815, 0, 0, 1829,
	0, 0, 1810, 1795, 0, 0, 0, 0, 0, 3324,
	0, 0, 0, 0, 0, 1787, 1788, 0, 1820, 1821,
	1822, 1831, 1832, 1833, 0, 0, 0, 0, 0, 0,
	1842, 0, 0, 0, 0, 0, 0, 1824, 1818, 0,
	0, 1828, 3319, 0, 1838, 1790, 1836, 0, 0, 0,
	0, 1817, 1819, 0, 1837, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1825, 0, 0, 0, 1834, 0,
	1835, 1843, 0, 0, 0, 1840, 0, 1804, 1805, 0,
	1789, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1809, 0, 0, 0, 0, 1826, 0, 0, 0, 1806,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 1801, 1802, 1808, 1830, 1807, 1803, 0, 1800,
	1798, 1799, 1791, 1792, 1793, 1794, 1796, 1797, 0, 0,
	1816, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1811, 1836, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1825, 0, 1812, 1813, 1814, 1815, 0, 0,
	1829, 0, 0, 1840, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1842, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 3732, 1838, 0, 0, 0, 0,
	0, 0, 1817, 1819, 0, 0, 0, 0, 1816, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1834,
	0, 1835, 0, 0, 0, 0, 0, 0, 1804, 1805,
	0, 1811, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1826, 0, 0, 0,
	0, 0, 0, 1827, 0, 0, 0, 0, 1829, 0,
	0, 1810, 0, 1801, 1802, 1808, 1830, 1807, 1803, 0,
	1800, 1798, 1799, 1791, 1792, 1793, 1794, 1796, 1797, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1842,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1801, 1802, 1808, 1830, 1807, 1803, 0, 1800, 1798,
	1799, 1791, 1792, 1793, 1794, 1796, 1797, 0, 0, 1816,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1787, 1788, 1811, 1820, 1821, 1822, 1831, 1832, 1833, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 1818, 0, 0, 0, 0, 0, 1829,
	1790, 0, 0, 0, 0, 0, 0, 0, 0, 1837,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 0, 0, 0,
	1842, 0, 0, 0, 0, 1789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1809, 0, 0, 0, 0,
	0, 0, 0, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1801, 1802, 1808, 1830, 1807, 1803, 0, 1800,
	1798, 1799, 1791, 1792, 1793, 1794, 1796, 1797, 0, 1812,
	1813, 1814, 1815, 0, 0, 0, 0, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1787, 1788, 0, 1820, 1821, 1822, 1831, 1832, 1833,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1824, 1818, 0, 0, 1828, 3257, 0,
	1838, 1790, 0, 0, 0, 0, 0, 1817, 1819, 0,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1834, 0, 1835, 1843, 0, 0,
	0, 0, 0, 1804, 1805, 0, 1789, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1809, 0, 0, 0,
	0, 1826, 0, 0, 0, 1806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 0, 0, 1787,
	1788, 0, 1820, 1821, 1822, 1831, 1832, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1824, 1818, 0, 0, 0, 0, 0, 0, 1790,
	0, 0, 0, 0, 0, 0, 0, 0, 1837, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 0, 0, 1825, 0,
	1812, 1813, 1814, 1815, 1789, 0, 0, 0, 0, 1840,
	1795, 0, 0, 0, 1809, 0, 0, 0, 0, 3284,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 0,
	0, 1838, 0, 0, 0, 0, 0, 0, 1817, 1819,
	0, 0, 0, 0, 1816, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1834, 0, 1835, 0, 0,
	0, 0, 0, 0, 1804, 1805, 0, 1811, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1812, 1813,
	1814, 1815, 1826, 0, 0, 0, 0, 0, 1795, 0,
	0, 0, 0, 0, 1829, 0, 0, 1810, 0, 0,
	1787, 1788, 0, 1820, 1821, 1822, 1831, 1832, 1833, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 1818, 0, 1842, 1828, 0, 0, 1838,
	1790, 0, 0, 0, 0, 0, 1817, 1819, 0, 1837,
	0, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1834, 0, 1835, 1843, 0, 0, 1825,
	0, 0, 1804, 1805, 0, 1789, 0, 0, 0, 0,
	1840, 0, 0, 0, 0, 1809, 0, 0, 0, 0,
	1826, 0, 0, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1801, 1802, 1808,
	1830, 1807, 1803, 0, 1800, 1798, 1799, 1791, 1792, 1793,
	1794, 1796, 1797, 0, 0, 1816, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1836,
	0, 0, 0, 0, 0, 0, 0, 0, 1811, 0,
	0, 0, 0, 0, 0, 0, 0, 1825, 0, 1812,
	1813, 1814, 1815, 0, 0, 0, 0, 0, 1840, 1795,
	0, 0, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1842, 1828, 0, 0,
	1838, 0, 0, 0, 0, 0, 0, 1817, 1819, 0,
	0, 0, 0, 1816, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1834, 0, 1835, 0, 0, 0,
	0, 0, 0, 1804, 1805, 0, 1811, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 0, 0, 1810, 0, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1801, 1802,
	1808, 1830, 1807, 1803, 0, 1800, 1798, 1799, 1791, 1792,
	1793, 1794, 1796, 1797, 1842, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1825, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2306,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 1802, 1808, 1830,
	1807, 1803, 0, 1800, 1798, 1799, 1791, 1792, 1793, 1794,
	1796, 1797, 0, 0, 1816, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1787, 1788, 1811, 1820, 1821,
	1822, 1831, 1832, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1824, 1818, 0,
	0, 0, 0, 0, 1829, 1790, 0, 0, 0, 0,
	0, 0, 0, 0, 1837, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 0, 0, 0, 1842, 0, 0, 0, 0,
	1789, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1809, 0, 0, 0, 0, 0, 0, 0, 0, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1801, 1802, 1808,
	1830, 1807, 1803, 0, 1800, 1798, 1799, 1791, 1792, 1793,
	1794, 1796, 1797, 0, 1812, 1813, 1814, 1815, 0, 0,
	0, 0, 0, 0, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1787, 1788, 0, 1820,
	1821, 1822, 1831, 1832, 1833, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1818,
	0, 0, 1828, 0, 0, 1838, 1790, 0, 0, 0,
	0, 0, 1817, 1819, 0, 1837, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1834,
	0, 1835, 1843, 0, 0, 0, 0, 0, 1804, 1805,
	0, 1789, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1809, 0, 0, 0, 0, 1826, 0, 0, 0,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1812, 1813, 1814, 1815, 0,
	0, 0, 0, 0, 1840, 1795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 0, 1838, 0, 0, 0,
	0, 0, 0, 1817, 1819, 0, 0, 0, 0, 1816,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1834, 0, 1835, 0, 0, 0, 0, 0, 0, 1804,
	1805, 0, 1811, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	0, 0, 1810, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1842, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1840, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1801, 1802, 1808, 1830, 1807, 1803, 0, 1800,
	1798, 1799, 1791, 1792, 1793, 1794, 1796, 1797, 0, 0,
	1816, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1811, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1842, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1801, 1802, 1808, 1830, 1807, 1803, 0,
	1800, 1798, 1799, 1791, 1792, 1793, 1794, 1796, 1797,
}

var sqlPact = [...]int{
	5117, -1000, -1000, -1000, -1000, 200, -1000, -1000, 198, 197,
	195, 194, 191, 190, 189, 188, 186, 183, 181, -1000,
	-1000, -1000, -1000, -1000, -1000, 180, -1000, -1000, 179, -1000,
	177, 172, 171, -1000, -1000, 168, -1000, 163, -1000, -1000,
	-1000, -1000, 161, 160, 159, 93079, 92525, 93626, 2385, 116228,
	100218, 2177, 82595, 115674, 82041, 115120, 2259, 10144, 114566, 2844,
	158, -1000, 114012, 157, 153, 152, -1000, 113458, -1000, 2110,
	-1000, 151, -1000, 6375, 69235, 150, 148, 145, 2284, 144,
	-1000, 143, 142, -1000, -1000, 139, -1000, 12507, 1745, -1000,
	138, 136, -1000, 6358, 98009, 134, 132, 2377, 131, 130,
	67585, 129, 125, 2317, 3031, -1000, -1000, 2144, -1000, -1000,
	116, 115, 114, 112, 110, 109, 108, 106, 105, 103,
	102, 101, 99, -1000, 98, 97, 95, 94, 93, -1000,
	89, 88, 77, -1000, 75, -1000, 74, 73, 70, 66,
	62, 61, 60, 55, 54, 51, 50, 48, 47, 46,
	17897, -1000, -1000, 44, 2075, 1737, 1733, 1726, 1723, 1713,
	973, 43, 41, 40, 39, 34, 33, 32, 31, 30,
	29, 28, 27, 26, 25, 24, 23, 22, 21, 165,
	20, 18, 17, 15, 14, 11, 10, 2735, -1000, 1615,
	1176, 31854, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	123886, 116775, 9, -197, 8, -1000, 3492, 1046, 55859, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 286, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 471, 2225, 742, -1000,
	-1000, -1000, 112911, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2384, -1, -1000, 2141, -1000, -1000, -1000, -1000, -1000,
	736, -1000, 2379, 185, 2343, -1000, -1000, -1000, 3526, 2547,
	3928, 3925, 3924, 3923, 3922, 123339, 1971, 3921, 2618, 3920,
	3919, 3918, 3916, 3914, 3913, 3909, -1000, 91971, 1089, 91417,
	90863, 3541, 112364, 90309, 111810, 75958, 47902, 1125, 3522, -1000,
	-1000, -1000, -1000, -1000, -1000, 116775, -1000, 1087, -1000, -1000,
	3908, 2186, 735, 99664, -1000, -1000, 111256, 1719, -1000, -1000,
	-1000, 917, 1211, 33561, 33561, 33561, 285, -1000, -1000, -1000,
	-1000, -1000, -1000, 3906, 3904, 3902, 3899, 3898, -1000, -1000,
	81487, 24838, 80933, 80379, 110702, 24272, 89755, 89201, 3896, 3895,
	3893, 110148, 75392, 3657, 3656, 1082, 2121, 1494, -1000, -1000,
	-1000, -1000, -1000, -1000, -16, 71445, 3704, 116775, -1000, 268,
	-1000, -1000, -1000, -1000, -1000, -1000, 47333, 1120, 46764, 903,
	46195, 900, -1000, -1000, -1000, -1000, 74826, -1000, 109594, 2541,
	3892, 3890, 1189, 3889, 3430, 1963, 3887, 1960, 1304, 3886,
	3885, 3884, 3883, 3882, 3881, 3876, 1593, 109040, 3101, 1625,
	108486, 1829, 74260, 1081, 88647, 93626, 2772, 107932, 1554, 1553,
	-1000, -1000, -1000, -1000, 3240, 3030, 2977, 1359, -1000, -1000,
	-1000, -1000, 59226, 7043, 6997, -1000, -1000, 10271, 107378, 62046,
	93626, 93626, -1000, -1000, -1000, -1000, -1000, 45626, 959, 45057,
	1122, -1000, -1000, 59790, 3017, -1000, -1000, -1000, -1000, 44488,
	780, 43919, 1104, 116775, -1000, 3093, 2101, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2475, 1655, 3732, 2848, 73694,
	2149, 1403, 3490, 3231, 3221, 1493, 2118, 3220, 3871, 2706,
	3212, 3206, 3205, 3163, 3160, 1671, 2654, 674, 2756, 31285,
	3070, 1810, 43350, 1784, 1552, 3157, 3155, 3743, 2099, 2132,
	2298, 79825, 3870, 3869, 3452, 3154, 3141, 2902, 3138, -1000,
	3004, 1592, -1000, -1000, -1000, -1000, -1000, 1457, -1000, -1000,
	-1000, -1000, -1000, 84236, -1000, -1000, 1758, -1000, -1000, 1758,
	-1000, -1000, -1000, -1000, -1000, 1523, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1615, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2554,
	-1000, 2185, -1000, -1000, 2574, 3461, 3461, 3461, 3519, 451,
	446, -1000, 165, -1000, -1000, 131179, -1000, -1000, 48471, 48471,
	48471, 48471, 48471, 48471, 48471, 48471, 2287, -1000, 733, -1000,
	-1000, 779, -1000, 730, 643, 577, -1000, -1000, -1000, -1000,
	-1000, -1000, 729, -1000, -1000, -1000, -1000, -1000, -1000, 3704,
	-1000, 27738, -1000, -1000, -1000, 432, 727, 48471, -1000, -1000,
	3767, 3765, 954, -1000, 262, 939, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3088, 724,
	723, -1000, 712, 704, 694, 693, 692, -1000, 687, -1000,
	686, 685, 680, 679, 678, 677, 673, 670, -1000, 2153,
	-1000, -1000, -1000, -1000, -1000, -1000, 607, 605, 605, 605,
	-1000, 1061, -1000, -1000, -1000, 260, 603, 258, 601, 599,
	598, -1000, 668, 667, 665, 660, 658, 655, 652, 649,
	648, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1045, -1000,
	-1000, -1000, -1000, -17, 116775, -1000, 471, -17, -1000, -1000,
	645, -1000, 35866, 35866, 35866, -1000, -1000, 2378, 48471, -1000,
	3075, -1000, -10, -10, 884, 57530, -1000, 54725, 884, 361,
	788, 63154, -1000, 3000, -1000, -1000, 644, 259, -1000, -1000,
	-1000, -1000, 25402, 2998, 116775, 116775, 116775, 93626, 93626, 93626,
	3868, 3350, 48471, -1000, -1000, 68679, 116775, 94173, -1000, -1000,
	3639, 69787, 68132, 116775, 3087, 106824, 3866, -1000, -1000, -1000,
	-1000, -1000, 3322, 3865, 3864, 3863, -1000, 116775, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 244, 3321, -1000, -1000, 97455,
	244, 3317, -1000, 244, 3315, -1000, 96908, -1000, -1000, 2353,
	3314, -1000, -1000, 257, 3313, -1000, -1000, -1000, 249, 3312,
	-1000, -1000, 250, -45, 3308, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 131179, -1000, -1000,
	-1000, 106270, -1000, 3462, -1000, 116775, -1000, 48471, -1000, -1000,
	3634, 1611, 77076, 3570, -1000, -1000, -29, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2601, 2555, 1140, 2409, -1000, 3374,
	1952, 33561, 3418, -1000, -1000, -1000, -1000, -1000, 243, 25402,
	-1000, -1000, -1000, -1000, -1000, -1000, 2636, 3307, 1401, -1000,
	2400, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2163,
	3306, -1000, 2015, 3303, 2067, -1000, -1000, 2300, -1000, 3446,
	-1000, -1000, 2096, 3300, -9, -1000, -1000, 2521, -1000, -1000,
	-1000, -1000, 2069, -1000, 1289, 3299, -1000, 2846, 2846, 88093,
	3241, 61482, 59790, 71445, -21, -1000, -1000, -1000, -1000, -213,
	-1000, 23702, 131179, -1000, -1000, -1000, -1000, 1847, 131179, 908,
	-1000, -1000, 3298, -1000, 131179, 905, -1000, -1000, 3295, -1000,
	3074, -1000, -1000, 2496, -1000, -1000, 3862, -1000, -1000, 3861,
	-1000, 3860, 3858, 3857, -1000, 1872, 2109, 3856, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 87546, 2376, -1000, -1000,
	86438, 3072, -1000, 2491, 3569, -1000, 86992, 1080, -1000, 1011,
	2489, -1000, 96361, 1018, 2488, -1000, 3855, 3540, 2804, 1011,
	2484, -1000, -1000, -1000, -1000, -1000, 1030, -1000, 65371, -1000,
	65371, -1000, 1747, -1000, 122792, -10, 93626, 3704, -1000, -42,
	-1000, -1000, -1000, 1046, -1000, 58657, -1000, 58657, 99110, 76522,
	960, 795, 67031, 130998, -1000, 1028, -1000, -1000, 131179, -1000,
	-1000, -1000, -117, 2845, -1000, 76522, 60918, 131179, -1000, -1000,
	-1000, -1000, 131179, -1000, -1000, -1000, 76522, 86438, -1000, 105716,
	85891, -1000, -1000, 1590, 2638, -1000, -1000, -1000, 76522, 1290,
	76522, 76522, 76522, -1000, 105162, -1000, -1000, 2171, 1490, 3448,
	2150, 93626, -1000, 1973, -1000, -1000, -1000, 3479, 3213, 116775,
	-1000, -1000, 3071, -1000, 70898, 95814, -1000, 95267, -1000, 94720,
	-1000, 93626, -1000, 93626, -1000, 3854, 3853, 3852, -1000, -1000,
	3851, -1000, 3849, 3467, -1000, 1032, 42781, 131179, 3465, -1000,
	3848, 2094, 3070, 131179, -1000, 3208, 1746, 1725, 116775, -1000,
	-1000, 116775, -1000, 116775, -1000, -1000, -1000, 1649, -1000, -1000,
	2600, -1000, -1000, -1000, -1000, 93626, 93626, 93626, 93626, 1600,
	-1000, 42212, -1000, -1000, 3148, 3847, 1845, -1000, 1964, -1000,
	2997, 3480, -1000, 1589, 1836, -1000, -1000, 264, -1000, -1000,
	-29, -1000, 122245, -1000, 2574, -1000, 116775, -1000, 2608, 3039,
	3067, 1524, 2390, 2710, -1000, 41643, 2653, 51885, 2398, 165,
	-1000, -1000, 165, 165, 32992, -1000, -1000, 69787, 69787, 25402,
	1531, 48471, 48471, 48471, 48471, 48471, 48471, 48471, 48471, 48471,
	48471, 48471, 48471, 48471, 48471, 48471, 48471, 48471, 48471, 48471,
	48471, 48471, 48471, 48471, 48471, 48471, 48471, 48471, 48471, 48471,
	48471, 48471, 48471, 48471, 48471, 48471, 48471, 2174, 48471, 1514,
	48471, 48471, 48471, 48471, 2256, -1000, -1000, 2059, 534, 2155,
	643, -1000, -1000, -1000, 3690, 3690, 3690, 797, 797, 797,
	131785, 131785, 609, 3846, 779, -1000, 48471, -1000, 120, 58084,
	48471, 25968, -1000, 446, 13393, 2634, -1000, 445, 26566, -1000,
	-1000, -1000, 27738, 577, 41045, 48471, 1038, 131179, -1000, -1000,
	1455, 3718, 23132, 3109, 2894, 642, 846, 839, 30687, 30089,
	29491, 28893, 831, 830, 48471, 48471, 48471, 48471, 48471, 48471,
	48471, 48471, -1000, -1000, 3733, -1000, 3718, -1000, -1000, -1000,
	-1000, 3718, 1520, 1461, 3718, -1000, 3718, 3718, 8586, 8586,
	40476, 39907, 39338, 52454, 38769, 48471, 28324, 38200, 37631, -1000,
	116775, -17, 3633, 48471, 147, -1000, 129399, -1000, 147, 147,
	640, -49, 131179, 2645, 2645, 56416, 2579, 2294, 2294, 2294,
	-1000, 884, 18543, 884, 103514, 2306, 884, 884, 235, 256,
	444, 54161, 3075, 103514, 764, 637, 6, 5, 3, -1000,
	-1000, 2, 0, -1000, -1000, 93626, 633, 25968, 25402, 221,
	2124, -51, 2715, 2711, -1000, 2701, 2697, -1000, 2694, -1000,
	1874, -57, 1513, 93626, 116775, 1574, 3844, -50, -1000, 708,
	-63, -1000, 1315, 220, 3718, -1000, -1000, -1000, -1000, -1000,
	3843, 3842, -1000, 1044, 622, 611, 776, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 607, 605, 605, 605, -1000,
	260, 603, 258, 601, 599, 598, -1000, -1000, -1000, -1000,
	-1000, 2993, 93626, 116775, 1562, 3837, -213, 94173, -19, -1000,
	-1000, 116775, -1000, -1000, -1000, 3836, -1000, 93626, -1000, -1000,
	93626, 244, 3294, -1000, 93626, -1000, 93626, 234, 3293, -1000,
	-1000, 116775, -1000, 93626, 93626, -1000, 116775, 116775, 116775, 76522,
	76522, 233, -1000, 93626, 867, -64, 1199, -29, -1000, -1000,
	-1000, -1000, -1000, 1758, -1000, 1986, -1000, -1000, -1000, -1000,
	-1000, -1000, 1599, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 954, -1000, -1000, -1000, -1000, -1000, -1000, 3715, 3711,
	-18, -1000, -1000, 25402, -1000, -30, 1684, 2014, 1504, -1000,
	79271, 2571, 3454, 3835, 2787, 3438, 1730, -1000, 1647, -1000,
	3542, 84236, 3580, 3612, 1361, -1000, 2991, -1000, -1000, 913,
	1821, 1828, 1499, 1498, 84236, 2015, -1000, 69787, -1000, 2780,
	3518, 1375, 1363, 1375, 1375, 1412, -1000, 84236, 1826, 1478,
	1477, 1474, -1000, -1000, 2023, 2019, -1000, -1000, 104615, -1000,
	1471, 1470, 3654, 2554, 2285, 818, 2007, -1000, -32, 3579,
	3596, 1323, -1000, 2988, 1469, -1000, -1000, -1000, 3516, 93626,
	25402, 1618, 1616, 1602, 1823, 1466, -20, -1000, 3576, 1465,
	1460, -1000, 1057, 6117, 3394, -1000, 76522, 1057, 1057, 2032,
	3292, 2833, 1842, -1000, 2843, 840, 2841, -1000, -1000, -1000,
	840, -21, 71445, 116775, 219, -1000, 120, 48471, 48471, 120,
	48471, 120, 3557, 3288, -1000, -1000, -1000, -1000, -1000, 3833,
	2076, 2617, -1000, -1000, 597, 2483, 2974, 116775, 2730, -22,
	93626, -1000, 70351, 3286, 72000, 2015, 2481, -1000, -1000, 85337,
	-1000, 3284, 471, 2478, -1000, 761, 3831, 3281, -1000, 121698,
	-1000, 3462, 1502, 3280, 1135, 208, 3632, -1000, 208, 65923,
	-1000, 116775, -1000, -10, 5049, 78177, -65, -66, 443, -1000,
	104068, 116775, 1134, 78724, 116775, 3407, 2083, 2080, 997, 59790,
	-1000, 59790, -77, -117, 2838, 1619, 960, 960, 840, -1000,
	840, -1000, 93626, 3065, -1000, -1000, 76522, 960, 960, 960,
	-1000, -1000, -1000, -1000, 3830, 3828, 3827, 3825, -1000, -1000,
	1008, 93626, 116775, 93626, -1000, -1000, 1666, -1000, 218, -1000,
	116775, -1000, 116775, 116775, 93626, -1000, 1008, 116775, 1008, 116775,
	1008, 116775, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 120,
	-1000, -1000, 131179, -1000, 48471, -1000, -1000, 1629, 3824, 1754,
	-1000, 3062, -1000, 3045, -1000, 38, -1000, -1000, 1959, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3823, 131179, -1000, 2003,
	-1000, -1000, -1000, -1000, 93626, 93626, 93626, 93626, 116775, 3393,
	-1000, 116775, 3390, 93626, -1000, -1000, 84236, -1000, 2608, 3039,
	-1000, -1000, -1000, -1000, -1000, -1000, 1527, 2351, -1000, 2660,
	-1000, 1683, -1000, -1000, -1000, 131179, 53023, -1000, -1000, 131179,
	1881, -1000, 51316, 50747, -1000, -1000, 1809, 93626, 2737, -1000,
	2737, -204, -1000, 129218, 2657, 93626, -1000, -1000, -1000, -1000,
	-1000, 912, 1476, 1476, 1247, 1247, 1247, 1247, 3550, 326,
	5060, 6417, 8246, 8246, 6764, 6764, 6764, 6764, 6764, 8246,
	624, 797, 797, 624, 624, 624, 624, 624, 797, 797,
	797, 8246, 8246, 8246, 797, 131785, 131604, 10033, 48471, 48471,
	1459, 2055, 534, 8939, 48471, 289, 289, 289, 289, -1000,
	1801, -1000, -1000, -1000, -1000, 2963, 595, 52454, 52454, -1000,
	-1000, -1000, -1000, 27152, 48471, -1000, -1000, -1000, -1000, 37033,
	-1000, -1000, 11350, -309, 439, -1000, 217, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	435, -174, -24, -1000, 48471, 48471, 48471, 427, -1000, 216,
	48471, 116775, -1000, 125172, 751, -115, -1000, -78, 1436, -1000,
	48471, -1000, -1000, 1456, -1000, 1430, 1429, 1428, -1000, 591,
	425, -1000, 215, -1000, 2290, 590, 589, 48471, -1000, -1000,
	-1000, -1000, -1000, 128509, -1000, -1000, 128328, -1000, -1000, 128230,
	-1000, -1000, 128049, -1000, -1000, -1000, -1000, -1000, 130900, 125053,
	124990, 17780, 6847, 17582, 16946, -86, 423, -89, 422, 909,
	893, 421, 403, 402, -94, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -95, 400, -1000,
	2962, -174, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	399, -1000, 398, -1000, 130719, -174, 397, 5479, -1000, 52454,
	52454, 52454, 52454, -1000, 395, -1000, 129120, -1000, 130294, 36464,
	36464, 36464, 393, 130113, 48471, -174, -97, -1000, -100, -1000,
	-1000, 518, -103, 1033, 35866, 55302, 25402, -1000, 1033, 1033,
	48471, -1000, 48471, 2671, -1000, -1000, -1000, -1000, 2668, 2026,
	2645, 56416, -1000, -1000, -1000, -1000, 103514, -1000, 3704, 2952,
	-1000, 103514, -1000, -1000, 116775, 471, -1000, 103514, 103514, 25402,
	884, -1000, 884, 103514, 630, -1000, -1000, -1000, -1000, -1000,
	392, 63711, -24, 214, 25402, 1011, -1000, -1000, 2753, 2753,
	2753, 2753, 2753, -1000, -1000, 116775, 1426, -27, -44, 2837,
	-1000, 3661, -1000, 2167, -1000, 69787, -1000, 775, 1101, 25402,
	-1000, -1000, -1000, 588, -1000, 3718, 3718, -1000, 3718, 116775,
	2960, 133, 2834, -1000, 126, 72000, 3815, -1000, -1000, 244,
	-1000, 93626, 244, 244, -1000, 93626, 93626, 2353, -1000, 257,
	-1000, 249, -1000, -1000, -45, -1000, 1027, 33561, -1000, 1758,
	-1000, -1000, 1626, -1000, 2093, -1000, 1383, -1000, -1000, -1000,
	-1000, 33561, -1000, 2199, 116775, 116775, 93626, -1000, 116775, -1000,
	2275, 72000, -1000, 2477, 121151, 2464, 69787, 116775, -1000, -1000,
	587, 927, 2649, 2647, 1129, 116775, 116775, 2644, 120604, 120057,
	-1000, 3814, 116775, 2172, 48471, 3509, 2286, 2429, 120, 120,
	-1000, 120, 120, 120, -1000, 586, 1440, 93626, 93626, 116775,
	72000, 93626, 2025, -1000, -1000, -1000, -1000, -1000, 84783, -1000,
	-1000, 3730, 3729, -1000, 1375, -1000, -1000, -1000, 1375, 2015,
	1863, 116775, 72000, 93626, 72000, 119510, 118963, -1000, -1000, 1820,
	116775, -1000, -1000, -1000, -1000, 1437, -1000, 818, 2180, 120,
	120, -1000, 120, 120, 120, 584, 25402, 2057, -1000, 3068,
	116775, 3761, 118416, 3759, 116775, 116775, 116775, 72000, 3477, 116775,
	116775, 72000, -1000, 117869, 6117, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 73128, 1115, 116775, 1289,
	-1000, -1000, 1812, 1416, 1404, 84236, 2178, 1811, 1911, 116775,
	59790, 996, 59790, 2809, -1000, -1000, 22562, -1000, 131179, 131179,
	-1000, 131179, -1000, 70351, 116775, -1000, 1070, 116775, 78724, 1007,
	3279, 64819, -213, 960, 76522, 93626, -22, 2730, 116775, -1000,
	-1000, -1000, -1000, -1000, 2015, 3278, 471, 2472, -1000, 76522,
	3629, 3274, 583, 3813, 3811, -1000, 93626, 2375, 2465, -1000,
	-1000, 117322, 3341, 818, 116775, 1033, 56416, 2008, -1000, 62600,
	1100, 116775, 1951, 124, -1000, -1000, -1000, 13, 116775, -1000,
	786, -1000, -1000, 5049, 5049, 960, -222, 579, -1000, 853,
	852, 60354, 76522, -108, -1000, -1000, -1000, -1000, 2464, 93626,
	116775, 1284, 2801, 116775, -109, -1000, 212, 578, 850, 847,
	-1000, 3008, -1000, -117, -1000, 997, 59790, 2959, 2955, -1000,
	-1000, 1025, -1000, 1584, 960, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -12, 1907, 116775, -213,
	-213, -37, -27, -1000, 1008, -1000, 1008, -1000, 1008, -1000,
	131179, -1000, -1000, -1000, 1752, 1729, 116775, -1000, -1000, 116775,
	-1000, 25402, 116775, 93626, 25402, 93626, 3036, 3023, -1000, -1000,
	-1000, 116775, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1166,
	-1000, 1881, 2350, -1000, 577, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2570, -1000, -28, 32992, 886, -1000,
	-1000, 93626, -13, 48471, 48471, 8266, 6380, 48471, 52454, 52454,
	-1000, 48471, 6129, -1000, -1000, -1000, -1000, -1000, 2953, 574,
	48471, 69787, 5367, 5169, -1000, 389, 16225, 624, -1000, 48471,
	-1000, 512, -1000, 384, 35297, -1000, 129824, -43, -110, -1000,
	19126, -174, -118, -1000, -1000, 774, -1000, 3335, -1000, 48471,
	130005, 2508, 2092, 1921, 1761, 3718, 3758, 21992, -1000, 66477,
	1036, 2320, 127619, -1000, -1000, -1000, -1000, 69787, 69787, 48471,
	48471, -1000, 48471, 48471, 48471, -1000, -1000, -1000, 3718, 902,
	-1000, -1000, -1000, 902, -1000, -1000, 1375, -1000, 1375, -1000,
	48471, -1000, -1000, 2949, 48471, -1000, 69787, 69787, 52454, 52454,
	52454, 52454, 52454, 52454, 52454, 52454, 52454, 52454, 52454, 52454,
	52454, 52454, 52454, 52454, 52454, 52454, 52454, 52454, 2614, 52454,
	3687, 3687, 3687, 1324, -1000, 2981, 2949, 48471, 48471, 69787,
	381, 380, 378, -1000, 48471, -174, -1000, -1000, 7932, 573,
	-1000, 2560, -1000, 2893, -1000, 48471, -1000, -116, -1000, 3075,
	-1000, -1000, 2893, 2893, -120, 131179, 56416, 56416, -1000, 572,
	48471, 2667, -1000, -1000, 750, -311, -1000, 845, -1000, -1000,
	-1000, -1000, -1000, -1000, 471, -1000, -1000, -1000, 207, 103514,
	103514, 749, -1000, -125, -1000, -1000, -126, -1000, 3623, 376,
	25402, -1000, 1033, 2704, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -213, 116775, 116775, 1800, 2342, 3757, -1000, 3719, 773,
	748, 203, 3718, 373, 368, 365, -213, 116775, 116775, 1791,
	116775, -1000, -1000, -1000, 244, -1000, -1000, -1000, 234, -1000,
	-1000, -1000, -1000, 2713, -1000, -29, -1000, -1000, -1000, 48471,
	-1000, -1000, 3451, 1396, 1394, -1000, -1000, -1000, 2985, -1000,
	3271, -1000, 2458, -1000, 1106, -1000, 2065, -1000, 48471, 571,
	2796, 569, 568, 3810, 2195, 3809, 1133, 3262, 2353, 3261,
	2353, -1000, -1000, -1000, 924, -1000, 131179, 2286, -1000, 567,
	566, -1000, -30, 1681, 1956, 1391, 1024, -1000, -1000, -1000,
	-1000, 48471, 48471, 102967, -1000, 487, 3446, -14, -1000, -1000,
	-1000, 1788, 1371, 1366, -1000, -1000, -1000, -1000, 2015, 1781,
	1353, 1260, -1000, -1000, -1000, -1000, -1000, 2454, -1000, -1000,
	3259, 1022, -1000, 3172, 3169, 889, 116775, -1000, 1020, -1000,
	-1000, -1000, -1000, 48471, -1000, -32, 1248, 3567, 2453, 93626,
	-1000, 2353, 3257, 1243, -1000, 1242, -1000, -1000, -1000, 3574,
	3568, 1255, -1000, -1000, -1000, -1000, -1000, 72564, -1000, -1000,
	1057, 116775, 72000, 93626, 1802, -1000, -1000, 83142, 83689, 116775,
	2833, -213, 840, -1000, 2628, 840, 996, 2948, -1000, 2707,
	1014, 93626, 3807, 358, -132, -33, 69787, 3622, -1000, 2365,
	623, 93626, 891, -1000, 3704, -1000, -1000, -1000, 1013, -1000,
	3561, 93626, 3621, 3256, 1011, 120, 93626, 3739, -1000, -1000,
	3620, 93626, 3250, 2374, 2452, 2610, 818, 77630, 1011, 2316,
	-41, -1000, 1951, 34699, 3443, -134, -1000, -1000, -1000, 1033,
	65923, 56416, 48471, 3806, -135, -1000, -1000, -1000, -1000, -1000,
	100772, 100772, 76522, 76522, 76522, 960, 116775, 116775, 78724, -1000,
	-1000, 565, 116775, 116775, 564, -1000, 116775, 116775, 3804, 76522,
	76522, 76522, -34, 563, -1000, 844, 841, 838, -1000, -1000,
	-1000, -1000, -1000, -1000, 997, -1000, -117, 59790, 120, -1000,
	2330, 93626, -1000, 21422, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1008, -213, -1000, -1000, 2215, 2394, 2215, 1900, 1896,
	-1000, -1000, 2348, -1000, -1000, -1000, -1000, 2736, 3456, 25402,
	3573, 289, 48471, 48471, 5752, 5042, 707, 289, 48471, 48471,
	69787, 7651, -146, 48471, 48471, -1000, 48471, 747, 131179, -1000,
	3756, 48471, 355, 353, -1000, -1000, -1000, 3717, -1000, -1000,
	-1000, 131179, 48471, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	350, -1000, 202, -1000, -1000, -1000, 124433, -1000, 48471, 349,
	3508, -1000, 348, 347, 15588, 424, 127438, 127340, 127159, 346,
	-1000, -1000, 345, 344, 131179, 2981, 131179, -1000, -1000, 943,
	943, 1355, 1355, 1355, 1355, 3687, 1179, 303, 956, 974,
	974, 974, 1019, 1324, 1324, 974, 974, 974, 1324, 2945,
	2615, 561, 7610, -1000, -1000, 131179, 131179, 342, -1000, -1000,
	-1000, -174, 341, 7932, -1000, 2889, 3507, 131179, -1000, 56416,
	2889, 2889, -1000, -1000, 2026, 116775, 131179, 56416, -1000, 2952,
	-1000, 19707, -1000, 25402, -1000, -1000, -1000, -1000, 3704, -1000,
	63711, -1000, 559, -1000, 166, -1000, 2704, -1000, 837, -1000,
	-1000, 76522, 76522, -213, -127, 116775, -1000, -1000, 744, 3803,
	770, 25402, 340, -1000, -1000, -1000, -213, -213, 116775, -213,
	-1000, -1000, -1000, 3406, 131179, 116775, 116775, 1637, 102420, 116775,
	3244, -1000, 2270, -1000, 1129, 126729, 56973, -1000, 56973, 116775,
	-1000, -1000, -1000, -1000, 2071, 1516, 3802, 1183, -1000, 3481,
	116775, -1000, 116775, -1000, -1000, -1000, 116775, 116775, 93626, 116775,
	-1000, 72000, 3185, -151, 131179, -35, -1000, 836, -1000, 1379,
	-1000, 20852, 116775, 72000, 93626, 116775, 72000, 93626, 3233, 116775,
	2277, -1000, -1000, 3162, -1000, 3182, -152, 25402, -1000, 3750,
	3749, 3227, 3487, -1000, 116775, 3747, 116775, 93626, 3404, -1000,
	-1000, -1000, -1000, -1000, -1000, 1779, 1239, 1235, 2373, -36,
	2370, 2337, -37, 2178, 996, -38, 556, -1000, 834, -1000,
	-1000, 833, -1000, 996, -1000, 76522, 59790, 3801, 471, -1000,
	2783, -1000, 98556, 2363, 120, -1000, 3799, 101326, 555, -1000,
	2327, -1000, 631, -1000, 2551, 72000, 2015, 120, 93626, -1000,
	-1000, 471, 339, -39, -1000, 3266, 1112, 25402, 93626, 3200,
	2612, 818, 77630, -1000, 1502, 2710, -1000, -40, -1000, 585,
	120, 2316, -1000, -41, 131179, -1000, 829, -1000, -153, -1000,
	-1000, 338, -1000, 3403, 3400, -1000, 2884, 56973, 554, 552,
	116775, 3397, -1000, -1000, -154, -1000, -1000, 3260, 3260, 76522,
	59790, 76522, -1000, 997, 840, -1000, 2525, -1000, -1000, -1000,
	-1000, -1000, 25402, 1816, -1000, 551, 550, -1000, -1000, -1000,
	-1000, 3456, 289, 289, 48471, 48471, 48471, 289, 7651, -169,
	-1000, 289, 289, -174, -1000, -1000, 129824, -1000, -1000, -1000,
	131179, -1000, 20282, 2221, -1000, 126548, -1000, 32992, -1000, -1000,
	48471, 48471, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	52454, 2938, 549, 69787, -1000, -1000, 332, 1031, 48471, 50178,
	3075, 1031, 1031, -1000, -171, -1000, -1000, -1000, 3704, 166,
	-1000, -1000, 3798, 25402, -1000, 76522, -1000, -1000, 3797, -198,
	762, -1000, 3794, -1000, -1000, 118, -1000, -1000, -1000, 2830,
	3619, -1000, 1998, -1000, 116775, -1000, 116775, -1000, 25402, 116775,
	2913, 1296, -1000, 927, 2639, 546, 52454, 1163, 93626, 933,
	2875, 2863, -1000, 3650, 3506, 2825, -172, -1000, 116775, 48471,
	116775, -177, -178, 2416, -1000, -1000, 1161, 1292, 48471, 1159,
	-1000, -1000, -1000, 69787, 545, 2353, 2353, -179, -184, -1000,
	-1000, -1000, 48471, 1232, 116775, 34130, -1000, 3786, 3446, -1000,
	-1000, -1000, -1000, -1000, -1000, 116775, -1000, 116775, -1000, 48471,
	1229, -1000, -1000, -1000, 3746, 2353, 25402, 2353, -1000, 2353,
	3487, 1181, 116775, 72000, 93626, 1954, 1954, 2943, -1000, -1000,
	-1000, 2561, 2561, 76522, 59790, -1000, -45, 996, -1000, 3617,
	2762, 3782, -1000, -1000, -1000, -1000, 2635, -1000, -1000, 116775,
	2626, 967, -1000, -185, -1000, 827, 825, 78724, 1007, 937,
	-1000, -52, 542, -1000, 824, -1000, -1000, -1000, -1000, 471,
	3616, -1000, 3741, 540, 538, 116775, 2369, 535, 25402, 3441,
	818, 77630, -1000, 3341, 1951, -1000, 2421, 116775, 3437, -1000,
	2710, 534, -1000, 960, 524, 522, 3361, 3361, -186, 56973,
	56973, -187, 519, 960, -1000, -192, -1000, -1000, -1000, -1000,
	-1000, -54, -1000, 906, 896, -1000, -1000, 93626, 93626, 48471,
	48471, -1000, 289, 289, 289, -1000, 325, -1000, -1000, 2316,
	3505, -1000, -60, 126450, 126269, 5425, 52454, 69787, -201, -1000,
	-1000, 116775, 131179, -62, -1000, 131179, 516, 514, 441, -1000,
	-1000, -1000, 625, -1000, -1000, -1000, 116775, 3781, -1000, 116775,
	101873, 116775, -1000, -1000, 1715, -1000, -1000, -1000, 116775, 2425,
	-1000, -1000, -1000, 1128, 48471, 7610, 52454, 513, 48471, -1000,
	511, 510, 3609, 3381, -1000, 2757, 2954, 2004, 56973, -1000,
	3456, -1000, 125824, -1000, 1110, 2036, -1000, -1000, -1000, -1000,
	131179, 52454, 3487, 56973, -1000, -1000, 499, 492, 131179, 490,
	823, 2937, -1000, -1000, -1000, -1000, -1000, 131179, 481, 3567,
	-1000, -1000, -1000, -1000, 2353, 93626, -1000, -1000, -1000, 1225,
	-1000, -1000, -1000, -1000, 3779, 3778, 2927, 83142, -1000, -202,
	-1000, -1000, 2044, 120, 2198, 2827, -1000, 2363, 478, -1000,
	-1000, 2354, 2709, -1000, 101326, 33561, 33561, 323, 3607, 937,
	-1000, 3683, -1000, 3376, 3376, 48471, 3604, 120, -1000, 3739,
	56973, -1000, 93626, 56973, 2361, 2151, 2597, 77630, -1000, 2610,
	-1000, -1000, -203, 116775, 1951, -1000, -1000, 76522, 76522, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1110, -208, -210, -1000, 76522, -1000, -1000, 2525, -1000, 116775,
	-1000, 116775, -1000, -1000, -211, -216, -1000, 2126, 48471, 32992,
	-1000, -1000, 5425, -217, -1000, -79, -1000, 3603, 50178, 3777,
	3775, 3772, -1000, -213, -1000, -213, -1000, 1981, -1000, -1000,
	-1000, 3197, 2887, 125761, 7610, 2562, 116775, 125642, 2015, 2015,
	-1000, 3600, 2939, -1000, -1000, 2762, 474, -1000, -1000, -1000,
	-1000, 886, 116775, 2762, 2885, 93626, 7610, 1126, -219, 2215,
	2215, 48471, 32423, 2274, 48471, -1000, -1000, 3487, 116775, -1000,
	-1000, 116775, 2360, -1000, 2918, 3708, -1000, 1007, -1000, 2263,
	116775, -1000, 3473, -1000, 3396, -1000, -1000, -1000, 2783, 120,
	-1000, -1000, -1000, -224, 131179, 120, -1000, 309, -225, 1112,
	-226, 93626, 2010, -1000, 818, -1000, 2612, 1033, -1000, -1000,
	-232, -234, 2004, 1110, 2180, -240, -1000, -241, -247, -1000,
	-1000, 308, 49609, 49609, 49609, -174, -204, -1000, 116775, 472,
	-1000, -1000, -1000, -1000, -1000, 3118, 992, -1000, 849, 1961,
	305, 1111, 290, 135, -1000, -1000, -1000, 2180, 116775, -1000,
	-1000, -1000, 989, 471, -1000, 48471, 1110, -248, -1000, 1098,
	-249, -1000, 1097, -250, -1000, 2925, -1000, -255, 2353, -256,
	233, 1954, 971, 3543, -1000, -1000, -1000, 2354, 93626, -257,
	-1000, -1000, 2451, -1000, 2762, 967, -1000, -1000, -1000, 1110,
	469, 2004, 468, 1613, 818, -1000, -1000, 1375, 3441, 3347,
	960, 960, 2762, 2004, 957, -1000, 960, -1000, -1000, -1000,
	3242, -1000, 53592, 2366, 1873, 128939, 3242, 3242, -1000, -1000,
	116775, 3533, -1000, 873, 858, 1561, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2825, -258, 3532, 2562, 131179, 2762,
	-1000, 2215, 2822, -1000, 2215, 2924, -1000, 2258, -1000, -1000,
	-1000, 2900, -1000, 2920, -1000, 1831, 3678, 2576, 467, -1000,
	116775, 1868, 1862, 3771, 2198, 2354, 2004, 56973, 2762, 56973,
	2188, -1000, 116775, -1000, 2151, 1319, -1000, -1000, 2180, 2762,
	1033, 466, -1000, -1000, 1970, 3645, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 816, -1000, 3364, -1000, 1154, 2229,
	2229, 1033, -1000, 804, 849, -1000, -1000, 456, -1000, 455,
	-1000, 2336, 116775, 2319, -1000, -1000, -1000, -1000, 116775, -1000,
	-1000, 3714, -1000, 1007, -1000, 2762, -263, 2180, -266, -1000,
	-1000, -1000, -213, 2010, -1000, 1694, 957, 2180, -1000, 1848,
	-1000, -1000, 2289, 49040, 48471, -1000, 3664, -1000, -1000, 2648,
	-1000, -1000, 48471, 2825, 48471, 48471, -1000, 233, 64265, -271,
	-1000, 2354, 2180, 1110, 957, 2004, 1613, 65923, 1033, 957,
	-1000, -1000, -1000, 131179, -1000, -1000, -1000, 131179, -1000, -273,
	-278, -1000, -222, 100772, 2344, 2576, 957, 2004, 1033, 2762,
	2188, -260, -1000, 1033, 2180, 1208, -280, -1000, -1000, -1000,
	-1000, 1033, 2762, -1000, 2180, -1000, -1000, -1000, -1000, -1000,
	453, -1000, -1000, 2180, 957, 48471, 957, 1033, -296, 1033,
	-1000, 2180, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4613, 4611, 4606, 4603, 4601, 4596, 4595, 4594, 4592,
	4591, 4590, 4588, 146, 4585, 4584, 4583, 4580, 4576, 4574,
	4569, 4568, 4567, 4566, 4565, 4563, 4561, 4560, 4554, 4553,
	4552, 4547, 4544, 4542, 4539, 4535, 4523, 4518, 4517, 4513,
	4510, 4509, 4507, 4502, 4496, 4494, 4492, 4491, 4486, 4481,
	4475, 4473, 4464, 4463, 4462, 4460, 4459, 4458, 4455, 4453,
	4450, 4449, 4447, 4446, 4444, 4442, 4441, 54, 4440, 4437,
	4436, 4433, 4431, 4427, 4426, 4425, 4424, 4423, 4422, 4421,
	4420, 4418, 4416, 4414, 4412, 4411, 4410, 4409, 62, 4407,
	287, 4403, 4401, 4400, 4399, 4398, 4397, 4396, 4393, 4392,
	4390, 4388, 4387, 286, 4386, 125, 162, 4385, 4384, 3952,
	4383, 4382, 285, 4381, 4369, 4368, 4367, 290, 4366, 4364,
	4363, 4362, 4361, 4360, 4359, 4358, 4357, 4356, 4351, 88,
	209, 4350, 4349, 227, 4347, 4346, 4345, 4344, 4341, 4339,
	4335, 4332, 4329, 4325, 4324, 260, 174, 4322, 284, 4318,
	4315, 4314, 4310, 4309, 4308, 4306, 4305, 4304, 4303, 4299,
	4298, 4297, 4296, 4295, 4292, 4291, 4290, 4289, 4288, 4285,
	4284, 4278, 4277, 4276, 4275, 4273, 4271, 4270, 4269, 4268,
	4264, 4263, 4262, 4261, 4260, 4259, 4258, 4257, 261, 221,
	240, 4256, 4255, 279, 275, 4254, 4253, 4251, 4250, 4248,
	134, 11, 39, 4247, 4246, 114, 87, 95, 103, 112,
	105, 4245, 111, 4244, 122, 60, 4243, 22, 2, 168,
	252, 8372, 242, 4242, 4241, 4240, 247, 203, 4237, 244,
	4236, 4229, 4228, 4222, 4216, 4212, 76, 53, 188, 187,
	183, 180, 3, 4211, 161, 106, 81, 58, 47, 17,
	77, 214, 24, 1, 268, 4207, 264, 14, 142, 7,
	36, 4206, 4205, 4204, 4203, 3739, 138, 4201, 272, 254,
	177, 4200, 4199, 4198, 964, 4197, 4194, 51, 4192, 282,
	97, 133, 8, 130, 4191, 154, 171, 37, 4188, 176,
	61, 4187, 165, 102, 90, 10760, 11461, 4186, 4185, 129,
	67, 92, 453, 202, 173, 205, 190, 167, 172, 136,
	219, 216, 184, 72, 4183, 263, 4182, 3601, 89, 191,
	163, 6106, 4181, 4180, 4178, 84, 206, 107, 4177, 4176,
	82, 9, 15, 4, 6, 143, 25, 23, 10, 4175,
	70, 131, 45, 32, 4174, 28, 4173, 4172, 4171, 4168,
	4167, 43, 166, 4166, 4165, 289, 4164, 85, 50, 26,
	4163, 164, 223, 4161, 238, 135, 4159, 4158, 265, 213,
	186, 4156, 74, 245, 4154, 4153, 4152, 4151, 4148, 139,
	12, 137, 4146, 4143, 148, 4142, 48, 246, 201, 4141,
	63, 4140, 4139, 181, 59, 145, 288, 194, 222, 123,
	234, 193, 237, 4136, 4134, 4133, 217, 4132, 4131, 232,
	157, 4130, 4125, 250, 292, 98, 42, 79, 243, 83,
	200, 160, 4123, 212, 4122, 4121, 294, 189, 220, 13,
	16, 104, 132, 4120, 5, 241, 159, 229, 115, 4119,
	7860, 68, 2936, 4118, 4117, 152, 127, 86, 120, 158,
	269, 110, 4116, 4115, 2824, 4114, 4113, 4112, 4108, 196,
	4107, 4105, 4096, 147, 150, 210, 4094, 121, 80, 49,
	31, 124, 266, 273, 113, 233, 179, 257, 4093, 4087,
	4084, 195, 4080, 56, 100, 169, 211, 256, 57, 4079,
	96, 4073, 153, 840, 65, 151, 4070, 231, 4064, 4063,
	4060, 4056, 4051, 4050, 4049, 251, 236, 4048, 4043, 4039,
	44, 199, 4038, 267, 204, 185, 108, 69, 4037, 99,
	3176, 4036, 170, 116, 71, 270, 316, 4034, 4213, 93,
	4032, 0, 14072, 8185, 12441, 13588, 4031, 1712, 4027, 4026,
	4024, 224, 149, 4023, 4022, 4020, 109, 4019, 91, 4017,
	4015, 78, 4014, 27, 19, 20, 33, 29, 258, 198,
	4013, 4011, 30, 141, 155, 4010, 283, 235, 4009, 4006,
	4004, 4002, 119, 4001, 46, 4000, 41, 3999, 3996, 52,
	18, 35, 3994, 3993, 208, 3992, 225, 255, 3991, 175,
	3990, 73, 140, 3989, 3988, 3987, 64, 66, 262, 94,
	3985, 280, 3984, 207, 3979, 3977, 34, 3976, 3975, 253,
	118, 117, 3973, 259, 144, 40, 218, 182, 228, 3969,
	3965, 178, 3964, 3963, 3961, 271, 3960, 3958, 38, 3957,
	3956, 3955, 21, 3950, 3947, 215, 3339, 3941, 3939, 55,
	3933, 197,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 52, 52, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 37, 39, 38,
	32, 32, 33, 33, 34, 35, 35, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 18, 18,
	40, 40, 19, 19, 42, 42, 20, 20, 43, 43,
	598, 598, 616, 616, 23, 23, 45, 45, 24, 46,
	17, 599, 599, 599, 599, 36, 25, 47, 29, 29,
	29, 29, 29, 203, 203, 203, 203, 22, 22, 41,
	41, 239, 239, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	594, 594, 241, 241, 240, 233, 233, 234, 234, 235,
	235, 600, 600, 242, 242, 242, 244, 244, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 494, 494,
	494, 526, 526, 526, 525, 525, 620, 620, 621, 621,
	621, 621, 621, 132, 132, 392, 392, 392, 56, 56,
	56, 56, 56, 589, 589, 205, 205, 205, 207, 207,
	206, 206, 206, 206, 206, 79, 79, 605, 605, 606,
	606, 604, 607, 607, 607, 204, 204, 204, 128, 128,
	128, 128, 128, 128, 129, 129, 130, 130, 208, 208,
	208, 210, 210, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 214, 16, 16, 16, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 108, 108, 528, 528, 529,
	529, 199, 199, 200, 200, 200, 200, 201, 201, 202,
	202, 202, 70, 70, 211, 211, 213, 213, 212, 212,
	212, 212, 212, 58, 58, 58, 58, 58, 58, 58,
	59, 59, 59, 59, 59, 60, 60, 60, 60, 60,
	60, 61, 61, 61, 61, 61, 61, 68, 68, 68,
	68, 68, 68, 190, 190, 71, 71, 71, 71, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 76, 76,
	76, 76, 622, 622, 622, 622, 622, 622, 622, 622,
	622, 622, 622, 622, 622, 622, 622, 622, 622, 622,
	622, 623, 623, 624, 624, 625, 625, 626, 626, 626,
	626, 626, 626, 626, 626, 626, 626, 626, 626, 626,
	626, 626, 626, 626, 626, 626, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 85, 85, 353, 353, 316, 316, 86,
	86, 86, 87, 87, 88, 88, 72, 72, 587, 587,
	369, 369, 485, 485, 73, 595, 595, 595, 597, 597,
	596, 596, 90, 90, 391, 391, 91, 91, 91, 91,
	91, 91, 92, 92, 92, 92, 92, 92, 92, 93,
	93, 93, 93, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 100, 100, 100, 100, 100, 101, 101,
	101, 98, 98, 98, 95, 95, 95, 94, 94, 94,
	99, 99, 99, 586, 305, 305, 97, 97, 97, 96,
	96, 96, 370, 370, 102, 102, 102, 102, 317, 103,
	103, 103, 103, 103, 103, 103, 103, 106, 106, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 487, 487, 104, 104, 104, 452, 452, 109,
	109, 109, 407, 407, 110, 110, 110, 110, 110, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 131, 131,
	131, 131, 131, 131, 131, 131, 591, 591, 362, 362,
	268, 268, 268, 268, 121, 121, 121, 121, 122, 122,
	122, 123, 123, 195, 195, 138, 138, 138, 138, 137,
	137, 137, 137, 137, 137, 137, 137, 62, 62, 62,
	63, 63, 64, 64, 65, 65, 66, 66, 67, 67,
	67, 67, 67, 141, 141, 617, 617, 143, 140, 140,
	140, 140, 140, 139, 139, 142, 142, 142, 142, 144,
	146, 146, 146, 146, 146, 145, 145, 145, 145, 147,
	147, 519, 519, 378, 378, 517, 517, 538, 538, 518,
	518, 323, 323, 323, 323, 323, 324, 324, 324, 527,
	527, 527, 527, 527, 527, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 196, 196,
	197, 198, 198, 198, 198, 198, 173, 173, 173, 189,
	189, 189, 189, 189, 189, 189, 189, 176, 176, 176,
	160, 160, 149, 149, 149, 149, 149, 149, 149, 154,
	154, 154, 154, 154, 154, 154, 154, 150, 150, 162,
	162, 162, 162, 162, 155, 155, 156, 156, 156, 157,
	157, 157, 157, 183, 183, 159, 159, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 151, 151, 151, 151,
	164, 164, 164, 164, 414, 414, 414, 188, 188, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 186, 186, 186, 186, 186,
	186, 608, 608, 609, 609, 609, 180, 180, 180, 180,
	180, 180, 466, 466, 174, 174, 174, 174, 179, 179,
	179, 179, 182, 182, 182, 182, 397, 397, 171, 171,
	171, 172, 172, 172, 177, 177, 178, 354, 354, 175,
	175, 181, 181, 181, 181, 152, 152, 152, 152, 152,
	152, 152, 153, 153, 153, 153, 184, 184, 170, 170,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 627, 627, 166, 166, 166, 165, 165, 165, 165,
	168, 168, 169, 169, 169, 169, 169, 169, 167, 158,
	187, 588, 588, 584, 584, 584, 584, 584, 584, 584,
	584, 585, 585, 585, 585, 590, 590, 114, 114, 114,
	114, 114, 124, 124, 124, 124, 124, 115, 115, 115,
	115, 115, 115, 115, 117, 117, 116, 116, 116, 116,
	80, 80, 80, 80, 80, 15, 15, 15, 81, 81,
	259, 259, 217, 217, 217, 342, 342, 218, 218, 331,
	331, 331, 331, 215, 215, 216, 216, 82, 82, 628,
	628, 628, 601, 601, 601, 602, 602, 602, 602, 602,
	602, 325, 325, 326, 326, 432, 432, 432, 432, 432,
	329, 329, 329, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 332, 332, 243, 243, 243, 340, 341, 341,
	333, 333, 339, 338, 338, 337, 337, 336, 336, 334,
	335, 335, 335, 344, 344, 343, 346, 346, 345, 431,
	547, 547, 549, 549, 549, 549, 549, 549, 549, 551,
	551, 551, 551, 551, 551, 551, 551, 551, 551, 551,
	551, 551, 551, 551, 551, 551, 415, 415, 629, 629,
	630, 631, 545, 545, 545, 546, 541, 541, 542, 542,
	542, 542, 542, 327, 327, 328, 328, 328, 328, 543,
	544, 360, 360, 470, 548, 548, 550, 550, 552, 632,
	632, 632, 632, 632, 632, 633, 633, 633, 430, 430,
	429, 429, 351, 351, 553, 553, 553, 553, 554, 554,
	554, 554, 554, 557, 556, 555, 555, 555, 555, 555,
	84, 84, 84, 394, 394, 393, 393, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 395, 395, 395,
	395, 395, 192, 192, 271, 271, 78, 78, 78, 12,
	12, 12, 12, 12, 12, 12, 286, 286, 13, 13,
	13, 603, 603, 603, 83, 83, 83, 83, 83, 83,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	593, 593, 592, 592, 272, 272, 635, 635, 89, 89,
	89, 89, 89, 89, 89, 89, 488, 488, 489, 489,
	77, 77, 77, 77, 77, 416, 416, 413, 413, 412,
	412, 359, 359, 468, 468, 468, 469, 276, 276, 277,
	277, 236, 236, 236, 31, 30, 21, 21, 26, 26,
	27, 27, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 28, 28, 49, 49, 49, 49, 50, 50, 50,
	50, 53, 53, 54, 54, 48, 48, 48, 48, 51,
	51, 44, 44, 55, 55, 55, 55, 55, 610, 612,
	612, 611, 611, 615, 615, 615, 615, 615, 615, 613,
	613, 614, 614, 618, 618, 619, 619, 120, 120, 125,
	125, 125, 125, 125, 126, 126, 126, 126, 127, 127,
	127, 127, 136, 136, 191, 191, 191, 191, 191, 191,
	191, 57, 57, 57, 57, 69, 69, 69, 69, 134,
	637, 637, 637, 135, 135, 135, 636, 636, 269, 269,
	426, 426, 427, 427, 638, 638, 428, 428, 428, 428,
	428, 262, 261, 263, 263, 264, 264, 75, 75, 75,
	252, 252, 251, 253, 253, 254, 254, 249, 249, 530,
	530, 256, 256, 256, 257, 257, 245, 245, 246, 246,
	247, 247, 248, 248, 260, 260, 639, 639, 112, 112,
	112, 194, 194, 315, 315, 315, 423, 423, 423, 352,
	352, 283, 283, 425, 425, 425, 425, 390, 390, 390,
	193, 193, 367, 367, 380, 380, 381, 381, 482, 482,
	382, 118, 118, 119, 119, 133, 133, 221, 221, 219,
	219, 219, 219, 219, 219, 219, 219, 226, 226, 227,
	227, 228, 228, 229, 230, 230, 230, 230, 371, 371,
	231, 231, 231, 220, 220, 220, 222, 222, 222, 222,
	222, 222, 222, 225, 225, 225, 225, 232, 232, 232,
	224, 224, 564, 564, 564, 566, 566, 568, 568, 567,
	567, 563, 563, 565, 565, 634, 634, 396, 396, 396,
	349, 350, 347, 347, 348, 348, 357, 357, 355, 356,
	356, 358, 358, 467, 467, 467, 237, 237, 237, 387,
	387, 387, 387, 388, 388, 419, 419, 417, 417, 417,
	417, 418, 418, 420, 420, 420, 421, 421, 422, 422,
	384, 384, 385, 385, 386, 386, 386, 386, 448, 448,
	223, 223, 223, 364, 364, 364, 365, 365, 438, 438,
	438, 438, 438, 438, 438, 439, 439, 437, 437, 437,
	437, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	472, 473, 473, 366, 366, 474, 424, 424, 582, 582,
	582, 583, 583, 465, 465, 475, 475, 475, 475, 475,
	475, 463, 463, 464, 464, 483, 484, 484, 400, 400,
	400, 400, 398, 398, 401, 401, 401, 401, 401, 399,
	399, 476, 476, 476, 476, 389, 389, 477, 477, 477,
	477, 478, 479, 479, 480, 480, 433, 434, 434, 490,
	490, 490, 490, 492, 363, 363, 363, 363, 363, 540,
	539, 539, 491, 491, 491, 491, 491, 491, 491, 491,
	491, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 507, 507, 507, 507, 507, 507, 507,
	493, 493, 493, 493, 493, 497, 497, 497, 496, 496,
	496, 496, 496, 496, 496, 496, 496, 496, 496, 498,
	498, 503, 503, 504, 504, 504, 499, 500, 505, 505,
	505, 505, 640, 640, 509, 509, 501, 501, 501, 501,
	501, 501, 501, 501, 501, 495, 495, 495, 502, 502,
	502, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 408, 408, 410, 410, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 442,
	442, 442, 442, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 558, 558,
	558, 558, 558, 558, 558, 558, 444, 444, 561, 561,
	562, 562, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 569, 569, 570, 570, 572, 572, 573,
	573, 574, 575, 575, 575, 576, 577, 577, 571, 571,
	578, 578, 578, 578, 579, 579, 580, 580, 580, 580,
	580, 581, 581, 581, 581, 581, 454, 454, 455, 455,
	461, 461, 461, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 322, 322,
	321, 273, 273, 273, 273, 273, 273, 376, 376, 374,
	374, 374, 377, 377, 375, 375, 373, 373, 372, 372,
	451, 451, 449, 449, 453, 453, 402, 402, 508, 508,
	508, 508, 508, 508, 508, 508, 403, 403, 403, 411,
	404, 404, 405, 405, 405, 405, 405, 445, 446, 406,
	406, 406, 447, 447, 456, 460, 460, 459, 458, 458,
	457, 457, 435, 435, 436, 436, 383, 383, 641, 641,
	379, 379, 481, 481, 481, 481, 319, 319, 368, 368,
	318, 318, 310, 310, 311, 311, 311, 311, 361, 361,
	462, 462, 510, 510, 511, 511, 512, 512, 513, 513,
	514, 515, 516, 450, 450, 294, 293, 280, 281, 292,
	291, 290, 279, 282, 287, 288, 289, 284, 285, 301,
	300, 299, 250, 255, 306, 307, 307, 309, 309, 308,
	308, 296, 297, 298, 486, 278, 312, 312, 313, 313,
	313, 314, 314, 314, 314, 274, 274, 275, 275, 302,
	302, 303, 304, 304, 295, 295, 295, 265, 265, 265,
	266, 266, 267, 267, 524, 524, 521, 521, 521, 522,
	522, 522, 523, 523, 523, 523, 520, 520, 520, 520,
	520, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 532, 532,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 534, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	537, 537,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 0, 6, 6, 6, 6, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	4, 4, 6, 5, 6, 5, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 3, 6, 4,
	6, 7, 9, 6, 2, 2, 3, 0, 8, 6,
	8, 7, 2, 0, 1, 2, 5, 0, 1, 3,
	3, 1, 1, 3, 1, 12, 3, 1, 0, 1,
	1, 2, 3, 3, 0, 4, 6, 0, 5, 7,
	6, 8, 8, 2, 1, 3, 1, 3, 2, 5,
	0, 1, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 6, 4, 9, 7,
	12, 12, 12, 9, 2, 7, 2, 1, 1, 1,
	3, 3, 0, 3, 1, 3, 1, 1, 3, 2,
	5, 0, 7, 5, 2, 0, 1, 2, 3, 1,
	1, 2, 2, 1, 2, 1, 2, 1, 2, 2,
	3, 3, 3, 3, 3, 3, 5, 3, 3, 5,
	3, 3, 5, 3, 3, 5, 3, 6, 6, 6,
	6, 6, 4, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 6, 3,
	8, 3, 4, 3, 3, 4, 3, 4, 4, 4,
	3, 5, 7, 3, 3, 4, 3, 3, 3, 3,
	3, 2, 0, 1, 0, 1, 0, 4, 3, 3,
	3, 3, 3, 6, 4, 4, 4, 3, 5, 3,
	3, 3, 3, 3, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 2, 1,
	2, 1, 2, 7, 3, 2, 0, 1, 3, 3,
	1, 0, 1, 2, 2, 1, 6, 5, 1, 2,
	1, 3, 2, 0, 7, 2, 5, 0, 1, 3,
	3, 1, 9, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 6, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 1, 1, 3, 4, 6, 3, 3,
	5, 3, 1, 3, 2, 2, 2, 2, 1, 2,
	2, 5, 3, 3, 6, 6, 3, 1, 1, 1,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 3, 5, 7, 2, 3, 0, 3,
	5, 2, 3, 0, 2, 3, 2, 3, 2, 6,
	4, 7, 7, 7, 9, 10, 5, 2, 6, 4,
	7, 7, 7, 10, 5, 2, 2, 1, 1, 3,
	1, 1, 1, 1, 1, 2, 1, 2, 2, 3,
	2, 4, 3, 2, 2, 1, 2, 1, 3, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 3,
	5, 4, 6, 4, 3, 0, 1, 3, 2, 4,
	2, 4, 1, 6, 3, 1, 1, 5, 3, 3,
	2, 2, 6, 3, 3, 3, 3, 4, 4, 3,
	1, 3, 3, 2, 2, 1, 3, 3, 1, 2,
	1, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 2, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 1, 1, 1, 2, 2, 2,
	1, 3, 3, 3, 3, 3, 2, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 2, 5, 7, 3,
	3, 3, 4, 4, 6, 5, 5, 5, 3, 4,
	4, 3, 4, 4, 3, 4, 4, 5, 3, 5,
	5, 5, 7, 3, 3, 3, 4, 6, 4, 2,
	6, 4, 3, 2, 3, 4, 3, 5, 3, 6,
	5, 6, 3, 5, 6, 3, 4, 3, 4, 3,
	3, 4, 4, 5, 0, 1, 1, 1, 1, 3,
	2, 3, 4, 3, 4, 3, 5, 3, 4, 4,
	3, 4, 5, 3, 4, 3, 4, 4, 5, 3,
	3, 1, 1, 0, 2, 3, 5, 4, 6, 4,
	6, 4, 1, 0, 3, 4, 4, 5, 7, 5,
	3, 3, 3, 4, 4, 5, 2, 0, 4, 2,
	3, 4, 2, 3, 3, 3, 5, 2, 0, 3,
	3, 4, 3, 3, 3, 3, 4, 4, 4, 4,
	4, 3, 4, 5, 4, 4, 2, 3, 2, 3,
	6, 6, 7, 9, 7, 9, 4, 3, 4, 4,
	5, 1, 1, 10, 10, 3, 5, 5, 5, 3,
	5, 6, 4, 4, 5, 5, 2, 3, 2, 5,
	4, 2, 0, 1, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 1, 2, 0, 1, 2, 1,
	2, 2, 1, 2, 1, 2, 2, 3, 7, 3,
	3, 7, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 6, 5, 8, 3, 6, 6, 3, 13, 16,
	1, 0, 1, 2, 3, 0, 2, 0, 4, 0,
	4, 5, 4, 3, 3, 1, 3, 10, 13, 0,
	2, 3, 1, 1, 0, 1, 2, 2, 2, 2,
	1, 1, 0, 1, 3, 1, 1, 1, 2, 3,
	3, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 8, 0, 1, 1, 0, 2, 1, 0,
	1, 0, 1, 1, 0, 1, 4, 1, 0, 3,
	7, 7, 1, 1, 3, 7, 1, 3, 11, 3,
	2, 0, 3, 1, 2, 2, 3, 2, 6, 2,
	1, 2, 2, 2, 8, 4, 2, 3, 5, 5,
	5, 2, 5, 5, 2, 2, 2, 0, 1, 1,
	3, 4, 11, 12, 9, 5, 3, 1, 5, 10,
	7, 11, 3, 3, 0, 2, 4, 3, 3, 1,
	5, 1, 3, 1, 2, 0, 1, 2, 2, 0,
	1, 3, 3, 2, 2, 1, 1, 1, 4, 0,
	6, 0, 3, 0, 2, 2, 2, 0, 1, 1,
	2, 2, 0, 3, 3, 2, 1, 1, 2, 2,
	5, 8, 4, 1, 0, 1, 2, 2, 1, 2,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 1, 4, 2, 2, 2, 4, 7, 3, 4,
	6, 5, 7, 5, 5, 3, 3, 0, 2, 2,
	2, 1, 1, 1, 8, 10, 11, 7, 10, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 0, 3, 3, 0, 1, 8, 11,
	3, 6, 6, 5, 3, 4, 1, 0, 1, 3,
	17, 20, 16, 19, 4, 2, 0, 1, 0, 1,
	0, 1, 3, 2, 4, 2, 3, 1, 0, 2,
	0, 1, 1, 0, 9, 6, 6, 8, 6, 8,
	5, 7, 2, 6, 7, 4, 4, 5, 2, 4,
	6, 6, 8, 6, 7, 8, 9, 6, 7, 8,
	9, 6, 8, 6, 8, 6, 7, 8, 9, 6,
	8, 6, 8, 6, 6, 8, 8, 4, 7, 3,
	0, 7, 10, 1, 1, 1, 1, 2, 2, 3,
	0, 3, 0, 1, 0, 2, 0, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 3, 2, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 0, 2, 4, 2, 1, 0, 2, 1,
	1, 0, 1, 3, 1, 0, 1, 1, 1, 1,
	1, 2, 3, 2, 2, 1, 2, 13, 16, 3,
	1, 0, 4, 1, 0, 2, 2, 3, 0, 1,
	1, 4, 4, 5, 1, 0, 3, 0, 3, 0,
	3, 0, 3, 0, 4, 0, 1, 0, 6, 7,
	3, 6, 3, 1, 3, 1, 1, 4, 2, 1,
	3, 1, 3, 4, 8, 11, 5, 2, 2, 0,
	10, 3, 2, 0, 1, 3, 1, 1, 3, 3,
	5, 6, 4, 5, 4, 1, 1, 3, 3, 1,
	2, 4, 4, 2, 3, 5, 5, 1, 3, 1,
	0, 1, 2, 3, 2, 4, 2, 3, 0, 2,
	0, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 8, 8, 8, 2, 4, 4, 4,
	2, 2, 2, 2, 3, 1, 3, 1, 2, 6,
	7, 1, 0, 1, 0, 1, 0, 1, 1, 0,
	1, 5, 1, 0, 1, 0, 1, 0, 3, 3,
	5, 1, 3, 3, 4, 5, 2, 2, 0, 2,
	2, 1, 1, 1, 0, 1, 0, 2, 2, 5,
	4, 2, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 3, 1, 3, 3, 3, 2, 0,
	4, 2, 5, 3, 2, 0, 1, 3, 3, 5,
	1, 1, 1, 1, 1, 1, 3, 2, 4, 4,
	0, 4, 4, 3, 4, 1, 5, 3, 4, 5,
	5, 1, 5, 1, 3, 2, 0, 3, 0, 2,
	3, 1, 3, 2, 0, 3, 5, 6, 4, 6,
	4, 3, 2, 1, 0, 5, 1, 0, 2, 2,
	2, 1, 1, 0, 1, 1, 1, 1, 0, 4,
	2, 1, 2, 2, 4, 1, 3, 1, 2, 3,
	2, 4, 1, 0, 1, 0, 2, 1, 0, 2,
	5, 7, 2, 1, 2, 4, 3, 5, 0, 1,
	3, 5, 1, 2, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 6, 6,
	1, 1, 1, 1, 1, 3, 5, 0, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 3,
	0, 5, 4, 1, 2, 1, 4, 1, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 2, 5, 1,
	4, 2, 5, 1, 4, 3, 3, 0, 1, 2,
	4, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 1, 0, 1, 4, 1, 3,
	3, 3, 5, 2, 2, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 3, 3, 2, 2, 3, 5, 4, 6,
	3, 5, 4, 6, 4, 6, 5, 7, 3, 3,
	3, 3, 3, 4, 3, 2, 4, 2, 3, 3,
	4, 3, 4, 3, 4, 5, 6, 6, 7, 6,
	7, 6, 7, 3, 4, 4, 1, 3, 1, 3,
	3, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 5, 6, 6, 7, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 6, 1,
	1, 1, 1, 1, 1, 2, 1, 5, 5, 6,
	3, 1, 1, 1, 2, 2, 2, 4, 3, 5,
	6, 8, 6, 5, 4, 3, 2, 2, 4, 1,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 6, 6, 8, 8, 6, 4,
	6, 6, 6, 4, 1, 3, 3, 3, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 3, 3, 3, 4, 3, 4, 3, 4,
	3, 4, 4, 3, 6, 5, 5, 5, 4, 4,
	3, 4, 3, 5, 0, 5, 0, 2, 0, 1,
	3, 3, 2, 2, 0, 6, 1, 0, 3, 0,
	3, 3, 3, 0, 1, 4, 2, 2, 2, 2,
	2, 3, 2, 2, 3, 0, 4, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 1, 1, 1, 2, 1, 2, 2, 3, 1,
	2, 3, 2, 3, 2, 3, 1, 0, 1, 3,
	1, 3, 3, 3, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 3, 1, 2,
	3, 0, 3, 3, 2, 2, 1, 2, 2, 3,
	2, 1, 1, 1, 5, 1, 2, 4, 2, 0,
	1, 0, 3, 5, 1, 0, 1, 2, 1, 0,
	1, 3, 3, 2, 1, 1, 1, 3, 1, 3,
	3, 1, 1, 1, 1, 5, 3, 1, 1, 3,
	1, 1, 1, 1, 2, 2, 1, 1, 2, 2,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	7, 1, 7, 5, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 0, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 600, -105, -102, -70, -68, -109, -110,
	-91, -111, -104, -131, -136, -118, -119, -120, -132, -138,
	-191, -196, -197, -198, -3, -56, -58, -71, -90, -92,
	-103, -113, -112, -114, -121, -128, -124, -108, -62, -133,
	-137, -148, -192, -193, -194, 32, 31, 100, 80, 154,
	128, 137, 202, 384, 429, 441, 399, 142, 420, 404,
	-142, -143, 459, -57, -69, -135, -134, 73, 129, 414,
	-4, -12, -16, 29, 46, -59, -60, -61, 62, -78,
	-74, -85, -79, -72, -73, -76, -622, 102, -565, -93,
	-96, -127, -626, 161, 220, -115, -116, 366, -122, -123,
	422, -125, -126, 425, 162, -64, -63, 156, -219, -221,
	-140, -139, -141, -195, -149, -150, -151, -152, -153, -154,
	-155, -157, -183, -158, -159, -160, -161, -162, -163, -167,
	-186, -164, -165, -166, -169, -168, -170, -175, -171, -172,
	-173, -174, -176, -177, -179, -180, -181, -182, -184, -185,
	464, -178, -187, -156, 525, 49, 479, 82, 146, 433,
	21, -5, -6, -7, -8, -9, -10, -11, -15, -14,
	-55, -75, -77, -80, -81, -82, -89, -83, -84, -564,
	-94, -95, -98, -100, -101, -97, -99, 421, -222, -220,
	597, 540, -18, -23, -24, -19, -20, -22, -25, -21,
	-26, -27, -28, -40, -45, -46, -42, -43, -41, -44,
	-47, -48, -49, -50, -51, -52, -53, -54, -30, -36,
	-37, -31, -32, -33, -34, -35, -38, -39, -17, -29,
	561, 570, -225, -223, -224, -232, 451, 548, 499, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, -317, 2, -296, -302, -303, -304, -295, -265, -534,
	-537, 4, -531, -535, 168, 230, 330, 21, 23, 22,
	24, 25, 26, 27, 29, 30, 41, 42, 44, 45,
	46, 47, 48, 49, 53, 55, 59, 60, 61, 62,
	63, 64, 68, 73, 74, 79, 80, 81, 82, 83,
	84, 85, 91, 88, 89, 90, 92, 94, 96, 97,
	98, 99, 100, 101, 103, 104, 105, 107, 108, 109,
	117, 118, 119, 120, 121, 123, 128, 129, 132, 127,
	131, 133, 135, 136, 137, 140, 141, 142, 144, 145,
	147, 148, 149, 151, 152, 154, 155, 156, 159, 157,
	507, 158, 160, 161, 162, 163, 166, 174, 175, 176,
	181, 183, 184, 188, 189, 190, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 203, 207, 209, 210, 211,
	212, 213, 219, 220, 222, 223, 224, 225, 226, 231,
	232, 233, 237, 234, 243, 244, 248, 249, 250, 252,
	256, 257, 258, 259, 260, 261, 263, 265, 264, 267,
	270, 271, 274, 278, 279, 283, 284, 280, 285, 286,
	288, 289, 292, 290, 293, 294, 291, 295, 297, 298,
	299, 300, 301, 302, 303, 304, 305, 306, 307, 308,
	296, 311, 309, 313, 314, 315, 328, 324, 325, 319,
	320, 316, 321, 317, 318, 322, 323, 327, 332, 333,
	336, 217, 338, 339, 342, 360, 346, 347, 348, 351,
	352, 355, 358, 359, 361, 362, 363, 364, 365, 366,
	367, 368, 369, 371, 372, 374, 375, 376, 378, 379,
	380, 382, 384, 385, 387, 388, 390, 391, 392, 393,
	394, 395, 396, 398, 399, 401, 400, 402, 404, 406,
	407, 408, 414, 420, 416, 417, 418, 419, 421, 422,
	423, 424, 425, 427, 428, 429, 431, 432, 433, 434,
	435, 437, 439, 440, 444, 445, 461, 462, 481, 441,
	442, 443, 446, 447, 448, 449, 450, 454, 452, 453,
	455, 456, 457, 459, 460, 463, 464, 466, 467, 468,
	469, 470, 471, 472, 475, 477, 478, 479, 498, 480,
	482, 486, 487, 488, 489, 483, 484, 497, 491, 492,
	494, 495, 500, 501, 502, 503, 504, 505, 506, 508,
	510, 518, 519, 520, 522, 525, 526, 527, 528, 516,
	530, 531, 534, 535, 536, 539, 537, 538, 540, 542,
	545, 546, 547, 553, 552, 554, 557, 562, 563, 565,
	566, 567, 36, 50, 51, 54, 56, 58, 69, 70,
	71, 75, 124, 125, 153, 164, 165, 177, 191, 192,
	204, 206, 214, 215, 216, 238, 239, 241, 246, 268,
	335, 337, 353, 357, 373, 377, 381, 383, 397, 436,
	473, 485, 490, 511, 512, 513, 514, 521, 523, 548,
	549, 550, 555, 564, -317, 2, -296, 344, -289, 2,
	-265, -265, 384, 28, 2, 28, 372, 453, 502, 504,
	2, -591, -362, 2, 28, -268, -265, 102, 202, 451,
	-289, 2, -591, -362, 25, 2, -265, 2, 358, 22,
	27, 66, 77, 98, 140, 163, 185, 188, -625, 360,
	391, 439, 455, 497, 508, 522, 2, 552, 289, 452,
	499, 230, 120, 527, 446, -603, 444, 445, 358, 389,
	431, 205, 541, -269, 2, 441, -265, 289, 2, 600,
	94, 74, 436, 456, -145, 2, 279, 519, -146, -147,
	-144, 511, -519, 446, 431, 311, -265, 600, 600, 600,
	28, -278, -265, 499, 230, 446, 120, 495, 600, 2,
	499, 363, 552, 452, 120, 394, 230, 527, 188, 140,
	27, 446, -603, 575, 576, 289, 126, -589, 2, -584,
	4, -535, -531, -311, -310, 499, 505, 120, -304, -295,
	590, -303, 600, 600, 600, 2, 249, 250, 393, 392,
	456, 457, 600, 600, 600, 600, 444, 2, 163, 22,
	27, 66, 93, 98, 126, 185, 188, 349, -623, 360,
	391, 455, 497, 501, 508, 522, -602, 480, 68, 419,
	446, -601, -603, 289, 527, 140, -412, 120, 279, 200,
	535, 504, 502, 533, 132, 237, 538, 537, 600, 600,
	-106, 2, 597, 32, 31, -105, -109, 142, 459, -214,
	499, 242, 2, -265, 600, 600, 2, 249, 250, 444,
	445, 600, 600, 186, -584, 2, 600, 600, 2, 249,
	250, 444, 445, 242, 2, 68, 448, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 2, -189, 456, 480, 211, 47, 46,
	74, 28, 390, 79, 364, 121, 126, 148, 528, 203,
	230, 231, 257, 93, 94, -414, 44, 250, 68, 249,
	445, -608, 444, -466, 500, 447, 453, 494, 261, 441,
	519, 102, 542, 432, 567, 394, 395, 492, 408, 280,
	157, 187, 4, 120, 311, 431, 458, 511, 279, 440,
	367, 84, 600, -634, 2, 499, -636, 2, 519, 519,
	2, -636, 2, -636, 2, -636, 2, -637, 519, 564,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, -220, -222,
	-221, 600, 600, 600, 600, 600, 600, 600, -189, 456,
	2, 74, 28, -355, -357, 532, 240, 150, 350, -219,
	-221, 2, -564, -517, 2, -440, -538, -442, 588, 589,
	581, 496, 67, -321, 329, 568, -454, 126, 533, 344,
	-537, -443, -456, 153, 360, 436, -377, 8, 9, 5,
	6, 7, -274, -444, -450, 524, 167, 334, -314, 601,
	10, 597, -561, -221, -455, 37, 206, 65, -521, -313,
	-275, -493, 241, -312, -295, -558, -559, 4, -531, -532,
	-522, -496, -504, -500, -501, -507, -265, -534, 77, 111,
	112, 110, 115, 114, 282, 281, 116, 113, 458, 541,
	66, 36, 214, 215, 246, 335, 216, 75, -560, 141,
	-533, 238, 239, 473, 51, 397, 177, 125, 124, 337,
	56, 54, 549, -505, 122, 511, 512, 513, 514, 191,
	192, 58, 164, 165, 357, 381, 490, 521, 523, 204,
	268, 43, 106, 187, 236, 218, 245, 247, 251, 269,
	272, 312, 326, 331, 354, 356, 430, 465, -640, 550,
	485, 69, 70, -566, 400, -567, -289, -566, 600, 600,
	602, 600, -347, -349, -350, 2, 28, 138, 597, 2,
	-471, 2, -472, -476, -221, 262, -475, 597, -473, 595,
	-296, 345, -562, 437, -558, -559, -274, -295, -313, 4,
	-531, -533, 599, -351, 597, 120, 446, 499, 78, 230,
	163, -407, 597, -265, 28, 344, 515, 602, -348, 388,
	-452, 597, 344, 186, 347, 60, 293, 2, 2, 2,
	2, 2, 214, -265, 499, 119, 2, 260, 2, 2,
	2, 2, 2, 2, 2, -370, 214, 2, -296, 552,
	-370, 214, 2, -370, 214, 2, -413, 2, 87, -279,
	214, 2, -265, -305, 214, 2, -300, -302, -309, 214,
	2, -307, -265, -529, 214, 2, -528, -524, 10, -523,
	5, 4, -531, -535, -532, -534, 77, -440, 2, -133,
	2, 60, -265, 552, 2, 461, 2, 597, -145, 2,
	71, 519, 43, 456, -146, 2, -427, 2, -428, -261,
	-262, -263, -483, -264, 248, 387, 396, 571, 130, 329,
	567, -617, 186, 580, 515, -517, -517, -517, -378, 599,
	2, 2, 2, 2, 2, 2, -476, 214, -296, 2,
	-293, -520, 4, -531, -535, -532, -536, 28, 31, 32,
	33, 35, 37, 38, 39, 40, 57, 65, 66, 72,
	76, 78, 87, 93, 102, 110, 111, 113, 112, 114,
	115, 116, 126, 130, 134, 138, 139, 143, 146, 150,
	167, 169, 182, 185, 186, 202, 205, 208, 221, 235,
	240, 242, 262, 266, 273, 281, 282, 329, 334, 340,
	344, 345, 349, 350, 370, 386, 403, 426, 451, 458,
	476, 493, 499, 509, 515, 517, 524, 532, 533, 541,
	543, 551, 556, 558, 559, 560, 561, -537, 2, -476,
	214, 2, -299, 214, -476, -302, 2, -279, 2, -292,
	-520, 2, -318, 214, -296, -298, -302, -300, 2, 2,
	2, 2, -307, 2, -528, 214, 2, 28, 28, 552,
	388, 242, 515, 602, -368, -310, -311, -516, 8, -361,
	-265, 599, -440, 2, -133, -117, 2, 182, -440, 214,
	2, -133, 214, 2, -440, 214, 2, -133, 214, 2,
	-605, 2, -528, 214, -265, 2, 293, 2, 2, 522,
	2, 98, 499, 119, 2, 418, -624, 439, 526, 2,
	2, 2, 2, 2, 2, 2, 499, -284, 2, -265,
	182, 483, -307, 214, -308, 2, 452, -635, 400, -528,
	214, 2, 552, -300, 214, 2, -300, 230, 244, -279,
	214, 2, 504, 502, 504, 502, 186, 2, 242, 2,
	242, 2, -477, 2, -478, -472, -479, 595, 345, -487,
	2, -486, -523, 548, -106, 597, -106, 597, 456, 597,
	-528, -296, -296, -440, 2, -133, -117, 2, -440, 2,
	-133, 2, -130, -528, -129, 597, 186, -440, 2, -133,
	-117, 2, -440, 2, -133, 2, -214, 182, 2, 120,
	499, -189, 2, 182, 543, 2, 8, 2, 221, -528,
	447, 395, 174, 2, 461, 2, 462, 74, -414, 567,
	74, 186, 2, 186, 2, -397, 2, 561, 388, 186,
	2, 2, -588, 2, 344, 186, 2, 186, 2, 186,
	2, 186, 2, 186, 2, -188, 457, 520, 498, 392,
	250, 2, -133, 558, -117, 250, 249, -440, 558, 2,
	-609, 182, 445, -440, 2, 518, 259, 158, 186, -397,
	2, 186, 2, 186, 2, 5, 2, 393, 481, 2,
	248, 387, 481, 2, -296, 499, 552, 452, 120, 28,
	2, 444, 2, 2, 88, 89, 186, 2, 186, 2,
	201, 186, 2, 186, 499, 567, 2, -389, -476, -426,
	-427, -426, 515, -355, -357, -189, 461, 2, -226, -387,
	-228, 182, -417, -418, -229, 273, 169, 340, -230, -396,
	28, 138, -396, -396, 60, 598, 598, 11, 12, 76,
	41, 588, 589, 590, 591, 180, 592, 593, 586, 587,
	585, 578, 579, 583, 254, 255, 95, 582, 580, 86,
	287, 438, 170, 171, 172, 173, 415, 228, 34, 229,
	14, 15, 16, -321, 33, 349, 272, 568, 218, 465,
	581, 17, 18, 19, 245, 247, 331, 50, 221, -273,
	360, -320, 496, 67, -440, -440, -440, -440, -440, -440,
	-440, -440, 356, 597, -383, -435, 595, -221, 597, 597,
	597, 597, -516, -221, -440, -454, 598, -375, 597, -221,
	-454, -449, 597, 436, 595, 597, -457, -440, 5, 5,
	5, 597, 599, -569, 562, 182, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 383, -498, 597, -497, 597, -497, -497, 553,
	-495, 597, 570, 563, 597, -495, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 553,
	602, -566, -351, 597, -379, -481, -440, 590, -379, -379,
	344, -372, -440, 106, -400, 251, 312, 187, 269, 430,
	236, -437, 601, -437, -465, 570, -221, -473, -295, -221,
	-475, 597, -471, -465, -107, -516, -90, -103, -112, -133,
	-148, -193, -194, 590, -296, 597, 186, 597, 599, -520,
	186, -361, -279, -306, -265, -296, -312, -313, -318, 2,
	137, -372, -584, 527, 446, 28, 452, -361, -268, 38,
	-451, -490, -491, -540, 601, -539, -493, -503, -499, -502,
	373, 377, -522, 54, 549, -505, 241, 4, -531, -533,
	238, 239, 473, 51, 397, 177, 125, 124, 337, 56,
	511, 512, 513, 514, 191, 192, 58, 550, 485, 69,
	70, -584, 527, 446, 28, 452, -361, 182, -361, 2,
	2, 153, 2, 2, 2, -265, -242, 602, 64, 423,
	153, -370, 214, -242, 153, -242, 153, -319, 214, -318,
	-242, 153, -242, 602, 153, -242, 602, 153, 599, 602,
	153, -361, 2, -413, -519, -372, 38, -427, 2, 126,
	-525, -523, 5, -638, 602, 271, -324, 286, 328, 210,
	345, 565, 338, 130, -527, 5, 4, -450, -462, 126,
	279, 241, -510, -512, 8, -511, 9, -513, 588, 589,
	-518, -517, 109, 599, -520, -239, 416, 459, 359, -238,
	24, 29, 142, 232, 315, 546, 159, -337, 233, -334,
	363, 153, 477, 536, -598, -599, 443, 506, 507, 90,
	338, 459, 359, 416, 153, -393, -395, 38, 118, 315,
	358, 61, 225, 291, 292, 479, 555, 153, 459, 359,
	416, 359, -13, -254, 24, 142, -256, -251, 459, -599,
	99, 416, 574, 421, 369, 491, 386, -599, -241, 477,
	536, -598, -599, 443, 416, -240, -339, -334, 363, 153,
	601, 24, 142, 416, 459, 359, -620, -621, 29, 416,
	359, -592, -286, -563, 221, 561, 153, -286, -286, -476,
	214, -613, 182, 2, -606, -129, 263, 5, 10, -528,
	-129, -368, 602, 602, -520, 590, 445, 444, 153, 153,
	153, 153, 182, 329, 2, 2, 2, 2, 2, 188,
	-601, -625, 2, 2, -296, 214, -353, 344, -587, -369,
	499, -296, 182, 329, 43, -299, 214, 2, -302, 552,
	-592, 329, -301, 214, -296, 38, 597, 329, 2, -413,
	2, 230, -563, 329, -477, -315, -296, -472, -315, 459,
	-289, 38, -437, -296, 598, 602, -487, -487, -528, -202,
	561, 186, 102, 597, 597, -214, 561, 561, -484, 602,
	-483, 221, -529, -130, -528, 419, -528, -587, -279, 2,
	-296, 2, 499, 252, -528, -202, 221, -528, -528, -528,
	-519, 28, 462, 2, -188, 457, 520, 89, 462, 2,
	-296, 499, 120, 230, 80, -613, 182, 2, -265, -590,
	182, -585, 431, 446, 527, -584, -296, 120, -296, 120,
	-296, 120, -296, -296, 2, 2, 2, 2, 2, 85,
	2, -133, -440, 2, 85, 2, 46, 478, -609, 182,
	2, 518, 2, 518, 2, -265, -265, -265, 480, 271,
	-296, -296, -296, -297, -302, 500, 445, -440, 2, -627,
	2, 186, 182, 2, 499, 230, 499, 230, 120, 186,
	74, 120, 28, 499, 442, -242, 602, -269, -226, -387,
	-519, -388, -387, -227, -226, -229, 182, 396, 537, 315,
	463, 256, -418, -417, 28, -440, -422, 176, 314, -440,
	-420, -442, 588, 589, -511, -513, -371, 338, -220, -220,
	-220, -358, -467, -440, 386, 230, -492, -490, -490, -294,
	-520, 511, -440, -440, -440, -440, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, 272, 218,
	465, 50, 221, -440, 515, -440, -440, -440, -440, 309,
	329, 334, 524, 167, 534, 138, 338, -641, 493, 40,
	-447, -221, -376, 597, -461, 35, 476, 28, -454, 597,
	2, -435, -440, -436, -322, -320, -265, 588, 589, 590,
	591, 592, 593, 578, 579, 580, 14, 15, 16, 583,
	587, 585, 586, 180, 95, 582, 287, 438, 86, 170,
	171, 172, 173, 254, 255, 17, 18, 19, 34, 581,
	-373, -372, -372, 598, 551, 28, 138, 590, 2, 598,
	602, 38, 598, -440, -373, -453, -449, -372, -460, -459,
	558, -408, -409, 566, 296, 123, 212, 294, -410, 450,
	-514, 8, -520, 590, -570, 175, 205, 597, 598, 2,
	598, 2, 598, -440, 2, 598, -440, 2, 598, -440,
	2, 598, -440, 2, 598, 2, 598, 2, -440, -440,
	-440, -440, -440, -440, -440, -372, 8, -514, -514, 511,
	511, -514, -514, -514, -506, 373, 374, 375, 376, 274,
	275, 276, 277, 377, 378, 379, 380, 301, 302, 303,
	304, 297, 298, 299, 300, 305, 306, 307, 308, 196,
	197, 198, 199, 192, 193, 194, 195, -506, -402, 2,
	-508, -372, 4, 566, 296, 123, 212, 294, 450, 5,
	-402, 2, -403, 2, -440, -372, -404, -441, -442, 588,
	589, 581, -321, -454, -405, 2, -440, -373, -440, 57,
	266, 517, -406, -440, 186, -372, -372, 2, -372, 2,
	-567, 38, -372, -364, 602, 186, 38, 4, -364, -364,
	597, 598, 602, -401, 209, 290, 285, 244, -401, -471,
	-400, 251, -398, 354, -398, -398, -465, -280, 595, 603,
	-520, -465, -464, -463, 38, -289, 351, -465, -465, 599,
	598, -464, 596, -582, 597, 600, 600, 600, 600, 600,
	-296, 597, -372, -520, 599, 482, 2, 598, 245, 245,
	245, 245, 245, 437, 598, 515, -586, -305, -309, 500,
	2, 561, -105, 346, 598, 602, -363, 37, 595, 599,
	-514, 2, 2, -509, 553, 597, 597, -409, 597, 186,
	-586, -309, 500, 2, -362, 515, -265, 2, -296, -370,
	-242, 153, -370, -370, -242, 602, 153, -279, -300, -305,
	-307, -309, -265, -528, -529, -242, -301, -617, 598, 519,
	-428, -323, 396, 475, 417, 454, 495, 8, 9, 8,
	9, 602, -520, 602, -618, 93, 515, 78, 446, -258,
	280, 515, -431, 214, 78, -541, -282, 93, -542, -265,
	72, 533, 386, 185, 151, -618, 93, 386, -618, 93,
	2, 232, 93, 459, 480, 28, 60, -476, 41, 41,
	28, -616, 327, 267, 557, 186, 567, 499, 230, 446,
	515, 515, -476, -395, -490, 118, 291, 292, 60, -515,
	-510, 588, 589, -515, 60, -515, -515, -515, 561, -299,
	-476, 446, 515, 515, 515, 406, 406, -251, -146, 515,
	515, 28, -189, 424, 126, -639, 580, 406, 602, 41,
	41, 28, -616, 327, 267, 186, 515, -318, -280, 547,
	42, 547, 42, 547, 515, 42, 446, 515, 602, 42,
	515, 515, -13, 459, -593, -270, 105, 321, 284, 322,
	97, 318, 96, 317, 103, 319, 104, 320, 554, 332,
	63, 316, 295, 323, -271, -272, 365, 545, 120, -528,
	-13, -13, 459, 359, 416, 153, -614, 221, 28, -603,
	221, -484, 221, -484, -310, -265, 599, -133, -440, -440,
	-133, -440, -133, 46, 153, 2, -635, 260, 597, -327,
	329, 186, -361, -485, 242, 602, -369, -584, 153, -526,
	-525, 116, 458, -394, -393, 329, -301, 214, 2, 153,
	-351, 329, 147, 597, 394, 2, 153, -281, 214, -266,
	-265, -413, -245, 503, 153, -391, 543, -423, -133, 597,
	126, 38, -423, -380, -381, -482, -382, -282, 597, -289,
	-437, -106, -486, 598, 598, 598, -201, 348, -200, -265,
	5, -214, 543, -326, -432, -431, -545, -546, -541, 272,
	230, 533, 244, 168, -352, -283, -282, 119, 398, 398,
	-208, 561, -129, -130, 598, -484, 221, 483, -202, -202,
	-484, -484, -296, 182, -528, -202, -202, -202, 2, 2,
	2, 2, -397, -296, -279, -318, -296, 28, 599, -361,
	-361, -309, -305, -397, -279, -397, -279, -397, -279, -133,
	-440, 480, 2, 456, 182, 182, 599, -397, -354, 426,
	2, 394, 120, 499, 363, 230, -296, -318, -296, -318,
	-279, 120, -279, 121, -296, -476, -388, -227, 345, 256,
	463, -420, -421, -442, 436, 437, -421, 436, 437, 8,
	9, 8, 9, -231, 467, 333, -370, 602, -236, 39,
	134, 256, -296, 567, 149, -440, -440, 515, -641, 493,
	-447, 149, -440, 309, 334, 524, 167, 534, 138, 338,
	186, 597, -441, -441, 598, -374, -440, -440, 596, 605,
	598, 599, 598, -357, 602, -355, -440, -372, -372, 598,
	599, -372, -361, 596, 596, 602, 598, -458, -459, 143,
	-440, 515, 515, 515, 515, 597, 598, 599, -575, 355,
	597, 597, -440, 598, 598, 598, 598, 38, 602, 602,
	602, 598, 602, 602, 602, 598, 598, 598, 602, 598,
	567, 567, 598, 598, 598, 598, 602, 598, 602, 598,
	186, 598, 598, -411, 370, 598, 11, 12, 588, 589,
	590, 591, 180, 592, 593, 586, 587, 585, 578, 579,
	580, 86, 287, 438, 14, 15, 16, -321, 245, 221,
	-441, -441, -441, -441, 598, -445, -446, 186, 182, 38,
	-406, -406, -406, 598, 186, -372, 598, 598, 597, -568,
	289, 329, 598, -434, -433, 559, -481, -365, 2, -471,
	-291, -520, -434, -434, -372, -440, 251, 251, -399, 543,
	344, -401, -471, -464, -516, -439, -438, 184, 39, 134,
	324, 325, 217, -464, -289, -351, -464, -464, -520, -465,
	-465, -463, 598, -583, -516, 598, -366, -474, -562, -357,
	599, -520, -211, -563, -190, 5, 334, -190, -190, -190,
	-190, -361, 515, 515, 221, 25, 371, -490, 595, 596,
	8, -520, 597, -514, -514, -514, -361, 186, 186, 221,
	186, -526, 2, -242, -370, -242, -242, -318, -319, -242,
	-242, -242, -392, 561, -517, -427, 531, 83, 396, 511,
	-517, -238, 416, -282, -282, -296, -306, 200, 407, -526,
	329, -431, 214, -244, 329, -490, -290, -265, 597, -415,
	563, 256, 256, 543, -282, -290, 256, 214, -282, 214,
	-290, 2, -290, -594, 396, 339, -440, 60, -335, 278,
	394, 330, -239, 416, 459, 359, -133, -133, -133, -133,
	-133, 597, -617, 543, 137, -296, -318, -296, -306, -526,
	-301, 459, 359, 416, 326, -312, -515, -515, -393, 459,
	359, 416, -306, -526, -299, -526, -250, 214, -265, -250,
	214, 446, -279, 406, 567, 45, -639, -240, -133, -133,
	-133, -133, -133, 597, -280, -241, 416, 5, 214, -282,
	5, -282, 214, 5, -265, -282, -306, -526, -621, 24,
	142, -282, -306, -526, -270, -528, 334, 539, -279, -592,
	-286, 446, 515, 515, -476, -610, -611, 202, 429, 446,
	432, -361, -129, -205, 561, -129, -199, 226, 590, -589,
	-265, 552, -265, -325, -328, -326, -282, -217, -218, 563,
	561, 153, -316, -296, 595, -202, -528, -296, -485, -307,
	-308, 153, -351, 329, -528, 38, 153, 597, 2, 2,
	-300, 344, 329, -281, 214, -246, 144, -639, -279, -434,
	-365, -390, -425, 426, 344, -352, 548, -289, -390, -367,
	602, 186, 580, 599, -352, -480, 590, -106, -106, -202,
	602, 597, 580, 580, 597, -528, -528, 598, 602, -244,
	-296, -281, 230, 230, -288, -266, 598, 602, 599, 597,
	580, 580, -210, 348, -209, 145, 258, 243, 469, 470,
	471, 472, 136, 468, -484, -208, -130, 186, 186, -65,
	561, 499, -202, 601, 432, -265, -397, -397, -397, 456,
	456, -265, -361, -292, -279, -296, -293, -318, 182, 182,
	-279, 537, -421, 345, 283, -467, -237, 569, -296, 601,
	-440, -440, 149, 149, -440, -441, -441, -440, 149, 186,
	597, -440, -451, 33, 33, 598, 602, -436, -440, -320,
	598, 551, -357, -357, 598, 590, -520, 601, 598, -449,
	146, -440, 509, 296, 212, 294, -410, 294, -410, -410,
	-514, 5, -520, 590, -576, -285, 597, -265, 559, -356,
	350, 598, -492, -490, -440, -440, -440, -440, -440, -514,
	-495, -495, -510, -510, -440, -445, -440, -492, -490, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, 138,
	329, 338, -441, -446, -445, -440, -440, -490, 598, 598,
	598, -372, -105, 597, 289, -384, 205, -440, -484, 602,
	-384, -384, 598, -471, -471, 597, -440, 251, 596, 602,
	604, 580, -351, 599, -463, -464, 596, 598, 602, 598,
	602, -424, 38, 598, -520, -434, -213, -212, 135, 53,
	107, 133, 334, -361, -361, 446, 347, 5, 8, 595,
	596, 599, -514, 598, 598, 598, -361, -361, 446, -361,
	-242, -242, 119, 315, -440, 515, 515, 60, 221, 153,
	329, 545, -547, -542, 151, -440, 597, 230, 597, 597,
	2, -233, -234, -235, 142, 459, 24, -619, 2, 543,
	153, -242, 153, -242, 565, -335, 597, 597, 515, 446,
	-258, 515, 561, -372, -440, -203, 126, -519, -599, 601,
	-599, 601, 446, 515, 515, 446, 515, 515, 329, 153,
	561, 166, 166, 567, -250, 561, -372, 515, -494, 48,
	26, 329, -300, -242, 153, 515, 515, 527, 459, -528,
	334, -13, -306, -526, -301, 459, 359, 416, -591, -362,
	-591, 202, -309, -614, -484, -207, 348, -206, 145, 428,
	136, 258, 223, -484, -205, 186, 242, 561, -301, 2,
	598, 598, 602, -548, 38, 342, 342, 597, -296, -86,
	561, -483, -516, -595, 561, 43, -299, 38, 153, -592,
	-133, -301, -488, -489, 5, 38, -296, 153, 344, 329,
	-247, 265, -639, -524, -563, -357, -390, -379, 330, 91,
	598, -434, -381, -365, -440, 2, 598, -200, -201, -528,
	-528, -528, -202, -214, -214, -432, -329, 597, -281, -266,
	597, -214, -283, 2, -529, -528, -528, 602, 597, 580,
	580, 580, -208, -484, -129, -133, 348, -296, 590, -397,
	-341, -340, 363, 338, -341, 436, 436, 345, 176, 261,
	-236, -280, -440, -440, 149, 33, 33, -440, -440, -451,
	598, -440, -440, -372, 596, 5, -440, 598, 598, 8,
	-440, 598, 599, -577, -265, -440, 598, 60, 598, 598,
	602, 602, 598, 598, 598, 598, 598, 598, 598, -446,
	186, 138, 338, 597, 598, 598, -105, -448, 208, 60,
	-471, -448, -448, -399, -361, -471, -438, -280, 595, -520,
	-516, -474, 597, 599, -212, 580, -528, -528, 561, -309,
	596, 2, 595, -520, 598, -309, 119, -282, -282, 499,
	436, -250, 386, -431, 153, -549, 93, -551, 76, 168,
	102, 329, 334, 533, 386, 72, 126, 344, 403, -629,
	-630, -631, 38, 572, 573, 598, -359, -468, -562, 597,
	-265, -359, -361, 329, 488, 126, 344, 329, 126, 344,
	556, 119, 2, 527, 79, -282, -290, -361, -361, -296,
	-306, -526, 160, 598, 602, 580, 2, 590, 590, -306,
	-526, -301, -306, -526, -299, 153, -250, 361, 166, 160,
	598, -280, 5, 5, 153, -277, 76, -282, 5, -282,
	-300, 119, 446, 515, 515, 344, 344, 347, -610, -611,
	-205, 602, 597, 580, 580, -205, -529, -129, 2, -351,
	-342, 232, -282, -546, -543, -544, 386, -550, -552, 168,
	386, -133, 2, -216, -215, -265, 5, 597, -327, 348,
	596, -597, 348, -596, 117, 136, -526, -394, -133, -301,
	-351, 598, 602, 147, -416, 543, -280, -296, 153, -248,
	264, -639, -524, -245, -419, -417, 139, 597, 344, -133,
	-357, 580, 598, 598, 119, 119, 224, 152, -359, 597,
	597, -361, 119, 598, -209, -210, -528, -129, -528, -208,
	-484, -66, -67, 230, 93, 368, -293, 499, 230, 597,
	597, -236, -440, -440, -440, 598, -357, -520, 590, -571,
	363, 598, -467, -440, -440, -441, 186, 597, -451, 598,
	-572, 560, -440, -385, -386, -440, 434, 108, 206, -572,
	-572, 598, -516, 2, -528, 2, 515, 595, 2, 186,
	221, 38, 406, -431, -290, -294, -287, -265, 168, 214,
	334, 556, -415, 256, 597, -441, 537, -296, 597, 2,
	213, 213, 30, 60, -632, 130, 235, 598, 602, -469,
	-276, -265, -440, -469, 598, 598, 334, 537, 334, 556,
	-440, 537, -490, 597, -242, -242, 598, 598, -440, 515,
	-519, 100, -517, 2, -599, -250, -279, -440, 515, 5,
	-242, -294, -242, -242, -277, 527, -306, -526, -301, -615,
	500, 453, 528, 447, 189, 435, -615, 182, -206, -207,
	-528, -129, -205, 38, -332, 234, 2, -548, 256, -287,
	256, -628, 561, 598, 602, 580, 580, -325, -217, -87,
	-88, 516, -483, 602, 597, 580, -351, 38, 5, 597,
	597, -265, 344, 597, -280, -260, 92, -639, -524, -246,
	-390, 330, -361, 93, -419, -447, -202, 597, 597, -330,
	81, 94, 127, 213, 190, 231, 480, 486, 28, -330,
	598, -359, -359, 598, 597, -202, 598, 602, 28, 597,
	28, 597, -296, -318, -372, -372, 598, -357, 60, 602,
	598, 598, -441, -451, 598, -573, -574, -285, 602, 597,
	597, 460, 596, -361, 2, -361, -250, 386, -265, -551,
	-287, 329, 543, -440, -441, -267, 597, -440, 597, 597,
	38, 126, 235, 131, 219, -430, -633, 101, 489, 222,
	-468, -236, 598, -429, 543, 403, -441, -277, -359, 597,
	597, 597, 580, 186, 597, -494, -242, -300, 515, 2,
	2, 186, -591, 598, -604, 401, -133, -336, -337, 221,
	597, -331, 344, 119, 315, -215, -517, -517, 598, 38,
	-88, 9, -596, -597, -440, 38, -133, -488, -359, -296,
	-359, 344, -252, -251, 273, -524, -247, 598, -290, -390,
	-529, -529, -429, 598, 598, -529, -67, -361, -361, 598,
	598, -578, 394, 437, 207, -372, -358, 598, 602, 38,
	-386, 2, 2, 2, 406, 153, 209, 598, -553, 288,
	-265, 598, -394, -394, 38, 131, 219, -332, 597, -237,
	-469, -332, 209, -296, -600, 543, 598, -344, -343, -340,
	-346, -345, -340, -372, -517, 100, 361, -372, -277, -361,
	-361, 344, -607, 187, -606, 5, 10, -217, 361, -360,
	-470, -282, 82, 119, -342, -133, 598, -133, 598, 598,
	-416, 598, -296, -249, -530, 406, 408, -639, -248, -434,
	598, 598, -430, -429, -338, -334, 598, 598, 598, 598,
	-579, -580, 50, 530, 109, -440, -579, -579, -574, -576,
	168, 561, -554, -557, -556, 577, 466, 187, 362, 598,
	488, 555, 598, 598, -338, -361, 561, -351, -440, -429,
	598, 602, 548, 598, 602, 548, 598, 186, 598, -242,
	-612, 561, -242, -615, -204, 561, 46, -331, -296, 598,
	602, 385, 132, 142, -332, -628, -429, 597, -430, 597,
	-257, -256, -639, -510, -260, 139, -202, -202, -332, -430,
	-218, 561, -202, -581, 151, -580, 382, 181, 436, 382,
	181, -581, -581, -287, 55, -556, 577, -557, 577, 537,
	132, -632, 598, 55, -553, -332, -343, 221, -345, 186,
	361, 202, 186, 444, -606, 30, -259, -258, 597, -470,
	437, 437, 2, -336, -331, -430, -359, -332, -359, -253,
	-254, -255, -361, -252, 330, 537, -338, -332, -434, 109,
	205, 510, 315, 33, 580, -555, 315, 423, 64, 459,
	-555, -434, 580, -554, 597, 597, 347, -361, 348, -361,
	2, -217, -332, 598, -338, 598, -249, 459, -218, -338,
	436, 352, -580, -440, 23, 334, 126, -440, -632, -372,
	-372, -242, -201, 597, 598, -331, -338, -429, -218, -430,
	-257, -380, -434, -218, 598, 598, -201, -243, 64, 423,
	-259, -218, -430, -434, -332, -253, -434, -434, -333, -334,
	515, 598, -434, -332, -338, 597, -338, -218, -372, -218,
	-434, 598, -434, -333,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 549, 550, 552, 553, 554, 556,
	557, 559, 561, 563, 564, 565, 567, 568, 570, 571,
	572, 573, 574, 576, 578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	645, 647, 0, 1404, 1406, 1408, 1410, 0, 800, 0,
	36, 37, 39, 0, -2, 333, 335, 337, 0, 365,
	367, 368, 370, 372, 373, 374, 376, -2, 0, 482,
	483, 485, 487, -2, 0, 1007, 1009, 0, 634, 636,
	0, 1012, 1014, 0, 0, 657, 658, 0, 1515, -2,
	649, 651, 653, 655, 725, 727, 729, 731, 733, 735,
	737, 739, 741, 743, 744, 746, 748, 750, 752, 754,
	755, 757, 759, 761, 762, 764, 765, 767, 769, 771,
	773, 775, 777, 779, 781, 783, 785, 787, 789, 791,
	-2, 794, 795, 796, -2, -2, 0, -2, -2, -2,
	1422, 41, 43, 45, 47, 49, 51, 53, 55, 57,
	59, 426, 428, 430, 432, 434, 437, 439, 441, 1573,
	489, 491, 493, 495, 497, 499, 501, 0, -2, 1587,
	0, 0, 61, 62, 63, 64, 65, 66, 67, 68,
	69, 70, 71, 109, 110, 111, 112, 113, 114, 115,
	116, 75, 76, 77, 79, 80, 81, 82, 86, 87,
	88, 89, 90, 91, 92, 93, 94, 95, 107, 73,
	0, 0, 1546, 1548, 1550, 1552, -2, 0, 0, 5,
	9, 11, 13, 15, 17, 19, 21, 23, 25, 27,
	29, 551, 555, 558, 560, 562, 566, 569, 575, 577,
	579, 534, 535, 538, 2281, 2299, 2300, 2301, 2304, 2305,
	2306, 2307, 2308, 2309, 2758, 2840, 2841, 2331, 2332, 2333,
	2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343,
	2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353,
	2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363,
	2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373,
	2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383,
	2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393,
	2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403,
	2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413,
	2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423,
	2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433,
	2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443,
	2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453,
	2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463,
	2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473,
	2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483,
	2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493,
	2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503,
	2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513,
	2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523,
	2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533,
	2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543,
	2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553,
	2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563,
	2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573,
	2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583,
	2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593,
	2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603,
	2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613,
	2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623,
	2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633,
	2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643,
	2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653,
	2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663,
	2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673,
	2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683,
	2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693,
	2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703,
	2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713,
	2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723,
	2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733,
	2734, 2735, 2736, 2737, 536, 537, 1193, 0, 603, 601,
	2266, 604, 2556, 606, 608, 476, 477, 478, 479, 480,
	481, 0, 627, 617, 1585, 628, 630, 631, 632, 633,
	598, 596, 0, 627, 2335, 625, 1402, 1403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 488, 0, 0, 0,
	0, -2, 0, 0, 0, 0, 0, 0, 0, 405,
	1251, 1252, 1253, 1387, 1388, 2603, 1429, 0, 234, 646,
	-2, -2, 2723, -2, 680, 681, -2, -2, 695, 698,
	690, 2727, 0, 2606, 2590, -2, 701, 1405, 1407, 1409,
	798, 799, 2285, 0, 0, 0, 0, 0, 38, 40,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 244,
	-2, -2, -2, -2, 0, 0, 2651, 2387, 2234, 2301,
	2237, 2232, 334, 336, 338, 339, 0, 0, 0, 0,
	0, 0, 366, 369, 371, 375, -2, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	1070, 1062, 1063, 1309, 0, 0, 0, -2, 484, 486,
	539, 540, 0, 1574, 1574, 547, 548, -2, 0, 0,
	0, 0, 304, 292, 1008, 1010, 1011, 0, 0, 0,
	0, 635, 637, 0, 0, 273, 1013, 1015, 1016, 0,
	0, 0, 0, 0, 306, 0, 0, 650, 652, 654,
	656, 726, 728, 730, 732, 734, 736, 738, 740, 742,
	745, 747, 749, 751, 753, 756, 758, 760, 763, 766,
	768, 770, 772, 774, 776, 778, 780, 782, 784, 786,
	788, 790, 792, 793, 806, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, -2, 0, -2, -2, -2,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	903, 0, 0, 0, -2, -2, -2, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, -2, 988,
	0, 0, 809, 811, 812, 813, 814, 0, 876, 901,
	902, 912, 797, 0, 1233, 1575, 1431, 1412, 1426, 1431,
	1414, 1415, 1416, 1417, 1418, 1423, 1425, 1419, 1420, 1421,
	42, 44, 46, 48, 50, 52, 54, 56, 58, 60,
	427, 429, 431, 433, 435, 438, 440, 442, -2, 1544,
	1545, 490, 492, 494, 496, 498, 500, 502, 638, 0,
	640, 0, 810, -2, 0, 1579, 1579, 1579, 0, 0,
	1545, 1543, 0, 643, 644, 705, 706, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 2108, 1936, 0, 707,
	-2, 1969, 1971, 2698, 2529, 2723, 2107, 1973, 1974, 1975,
	1976, 1977, 0, 1979, 1980, 1981, 1982, 1983, 1984, 0,
	1986, 0, 1991, 1992, 1993, 0, 2705, 2211, 2295, -2,
	0, 0, 2711, 2291, 0, 2074, 2009, -2, -2, 2318,
	2297, 1780, 1781, 1782, 1783, 1784, -2, -2, 2741, 2013,
	2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023,
	0, 2686, 2706, 2707, 2712, 2714, 2708, 2695, 2034, 2400,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 1807, 1816, -2, -2, -2, -2, -2,
	-2, -2, 2699, 2700, 2717, 2720, 2726, 2731, 2732, 2704,
	2713, 2740, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749,
	2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 1808, -2,
	-2, -2, -2, 1562, 2570, 1565, 1193, 1563, 1547, 1549,
	0, 1551, 0, 0, 0, 1556, 1582, 1580, 0, 1631,
	1560, 1561, 1650, 1650, 1674, 0, 1655, 0, 1674, 1574,
	1701, 0, 1661, 2595, 2010, 2011, 0, 2301, 2296, -2,
	-2, 2738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 599, 0, 605, 607, 0, 0, 0, 626, 1584,
	0, 0, 0, 0, 0, 0, 0, 408, 409, 410,
	411, 412, 2706, 0, 0, 0, 417, 0, 419, 420,
	421, 422, 423, 424, 425, 205, 2706, 507, 532, 0,
	205, 2706, 510, 205, 2706, 513, 0, 516, 1307, 205,
	2706, 519, 2262, 205, 2706, 522, 524, 2270, 205, 2706,
	528, 2277, 2275, 529, 2706, 531, 309, 307, 308, 2314,
	2315, 2322, 2323, 2324, 2325, 2739, 2741, 1398, 1399, 1400,
	1401, 0, 1428, 1308, 648, 0, 674, 0, 678, 679,
	2694, -2, 0, 2615, 683, 684, -2, 686, 1432, 1436,
	1437, 1438, 1439, 1440, 0, 0, 0, 0, 1445, 0,
	0, 0, 0, 675, 676, 693, 694, 699, 702, 0,
	801, 802, 803, 804, 805, 72, 0, 2706, 1701, 74,
	0, 2256, 2326, 2327, 2328, 2329, 2330, 2759, 2760, 2761,
	2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771,
	2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781,
	2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791,
	2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801,
	2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811,
	2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821,
	2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831,
	2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 78, 0,
	2706, 83, 0, 2706, 0, -2, 96, 0, 108, 0,
	2259, 117, 0, 2706, 0, 2231, -2, 0, 217, 293,
	294, 295, 0, 1037, -2, 2706, 1245, 1247, 1247, 0,
	-2, 0, 0, 0, 998, 2228, 2233, 999, 2252, 1000,
	2238, 0, 340, 341, 342, 343, 344, 0, 345, 2706,
	347, 348, 0, 350, 351, 2706, 353, 354, 0, 356,
	0, 256, 257, 2706, 379, 381, 0, 383, 384, 0,
	386, 0, 0, 0, 390, -2, 406, 0, 403, 393,
	394, 396, 397, 398, 399, 400, 0, 446, 444, 2267,
	0, 0, -2, 2706, 0, 1034, 0, 0, 1287, -2,
	2706, 1238, 0, 1294, 2706, 1290, 0, -2, 0, 1572,
	2706, 1449, 1066, 1067, 1068, 1069, 1713, 473, 0, 1480,
	0, 1482, 0, 1501, 1707, 1650, 0, 0, 1712, 0,
	-2, 592, 2284, -2, 542, 0, 543, 0, -2, 0,
	321, 0, 0, 1017, 1019, 1020, 1022, 1023, 1026, 1027,
	1028, 1029, 1687, 274, 276, 0, 0, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 1396, 1397, 0, 0, 659, 0,
	0, 807, 808, 0, 0, 819, 820, 821, 0, 321,
	2607, 2565, 2421, 828, 0, 831, 834, -2, 0, 0,
	0, 0, 838, 0, 843, 844, 845, 0, -2, 0,
	852, 854, 1006, 856, 0, 0, 858, 0, 862, 0,
	865, 0, 867, 0, 869, -2, -2, -2, 877, 878,
	-2, 883, -2, 0, 887, -2, 0, 890, 0, 893,
	-2, 0, 903, 899, 900, 0, 0, 0, 0, 920,
	921, 0, 930, 0, 933, 934, 935, 0, 939, 940,
	0, 942, 943, 944, 945, 0, 2678, 2612, 2387, 0,
	951, -2, 957, 959, 0, -2, 0, 975, 0, 979,
	0, 0, 987, 0, 0, 815, 816, 205, 1705, 1411,
	-2, 1413, 0, -2, 0, 639, 0, 642, 1604, 1530,
	1527, 0, 1601, 1602, 1531, 0, 0, 0, 1538, 0,
	1577, 1578, 0, 0, 0, 1517, 1518, 0, 0, 0,
	0, 2113, 2114, 2115, 2116, 2129, 2117, 2118, 2128, 2126,
	2127, 2119, 2120, 2125, 2139, 2140, 2130, 2131, 2121, 2134,
	2132, 2133, 2135, 2136, 2137, 2138, 0, 0, 2144, 0,
	2122, 2123, 2124, 2152, 0, 0, 2153, 0, 2155, 0,
	2145, 2141, 2142, 2143, 0, 1915, 1917, 2219, 0, 0,
	0, 2151, 2146, 2147, 1853, 1854, 1855, 1856, 1857, 1890,
	1894, 1895, 0, 0, 1970, 2216, 2215, 1972, 0, 0,
	2167, 0, 1985, -2, 0, 2108, 2162, 0, 0, 1994,
	1995, 1996, 0, 0, 2167, 0, 0, 2210, 2006, 2007,
	1845, 0, 0, 2076, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1794, 1793, 0, 1795, 0, 1796, 1797, 1804,
	1817, 0, 0, 0, 0, 1821, 0, 0, 0, 0,
	0, 0, 0, 2191, -2, 0, 0, 0, 0, 1809,
	0, 1564, 0, 0, 1635, 2220, 2224, 2225, 1635, 1635,
	0, 0, 2168, 1698, 1698, 0, 0, 1693, 1693, 1693,
	1691, 1674, 0, 1674, 1684, 0, 1674, 1674, 0, -2,
	1655, 0, 0, 1684, 0, 1668, 580, 582, 584, 586,
	587, 588, 590, 1702, 1703, 0, 0, 0, 0, 2302,
	0, 0, 0, 0, 2274, 0, 0, 2287, 0, 362,
	0, 0, 0, 2661, 2606, 0, -2, 610, 629, 1574,
	0, 2170, 1728, 1732, 0, 1734, 1735, 1736, 1737, 1738,
	0, 0, 1729, -2, 1805, 1807, 1828, 2319, 2320, 2321,
	1788, 1789, 1790, 1791, 1792, 1800, 1787, 1787, 1787, 1798,
	1827, 1819, 1827, 1823, 1773, 1774, 1775, 1810, 1811, 1812,
	1813, 0, 2661, 2606, 0, -2, 619, 0, 0, 1512,
	407, 0, 414, 415, 416, 0, 503, 0, 203, 204,
	0, 205, 2706, 508, 0, 511, 0, 205, 2706, 2226,
	517, 0, 520, 0, 0, 526, 0, 0, 0, 0,
	0, 205, 1514, 0, 0, 0, 0, -2, 688, 696,
	697, 224, 225, 0, 1434, 0, 1441, 716, 717, 718,
	1443, 1444, 0, 1446, 691, 719, 720, 721, 722, 723,
	724, 0, 2240, 2241, 2242, 2243, 2246, 2247, 0, 0,
	689, 709, 692, 0, 703, 118, 1384, 0, 0, 161,
	0, 1384, 1384, 0, 0, 0, 0, 188, 0, 1105,
	0, 0, 0, 0, 133, 146, 157, 130, 131, 0,
	0, 0, 0, 0, 0, 84, 1215, 0, 1218, 0,
	0, 0, 0, 0, 0, 0, 1231, 0, 0, 0,
	0, 0, 98, 99, 0, 0, 104, 105, 0, 145,
	0, 0, 0, 0, 0, 1477, 0, 140, 120, 0,
	0, 133, 147, 159, 0, 192, 194, 1102, 0, 0,
	0, 0, 0, 0, 0, 0, 216, 226, 0, 0,
	0, 1239, 0, 0, 0, 1571, 0, 0, 0, 0,
	2706, 1382, 0, 1367, 0, 1687, 2470, -2, -2, 274,
	1687, 997, 0, 0, 2302, 2236, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 385, 387, 388, 389, 0,
	1286, 0, 395, 436, 1164, 2706, 0, 0, 463, 458,
	0, 460, 0, 0, 0, 1214, 2706, 1212, 2271, 0,
	1236, 0, 1193, 2706, 2269, 0, 0, 0, 1295, 2311,
	1304, 1308, 1467, 0, 475, 0, 1483, 1485, 0, 0,
	1708, 0, 1710, 1650, 1574, 0, 0, 0, 0, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	1686, 0, 0, 1687, 274, 2581, 321, 321, 1687, 661,
	1687, 663, 0, 0, 822, 823, 0, 321, 321, 321,
	829, 830, 832, 833, -2, -2, -2, -2, 835, 836,
	927, 0, 0, 0, 926, 846, 0, 848, 851, 855,
	0, 991, 2590, 2606, 2661, 1004, 927, 2387, 927, 2387,
	927, 2387, 866, 868, 871, 915, 923, 882, 889, 0,
	884, 888, 891, 894, 0, 896, 904, 0, -2, 0,
	907, 0, 909, 0, 911, 927, 928, 931, 938, 941,
	946, 947, 948, 949, 2282, 950, -2, 954, 955, 0,
	966, 971, 972, 968, 0, 0, 0, 0, 0, 0,
	982, 983, 0, 0, 990, 1232, 0, 1424, 1604, 1530,
	641, 1521, 1603, 1522, 1529, 1532, 0, 0, 1534, 0,
	1536, 0, 1599, 1600, 1607, 1608, 0, 1618, 1619, 1611,
	0, -2, 0, 0, 1614, 1615, 1540, 0, 1557, 1558,
	1559, 1588, 1591, 1323, 0, 2840, 1849, 1723, 1850, 1851,
	2255, 0, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865,
	1866, 1867, -2, -2, -2, -2, -2, -2, -2, -2,
	1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885,
	1886, -2, -2, -2, 1891, 1892, 1893, -2, 2154, 2156,
	0, 2219, 0, -2, 0, -2, -2, -2, -2, 1912,
	0, 1914, 1919, 1921, 1923, 0, 0, 0, 0, 2218,
	1933, 2202, 2203, 0, 0, 2110, 2111, 2112, 1918, 0,
	1937, 2217, 2214, 0, 0, 2148, 0, 2113, 2114, 2115,
	2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125,
	2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135,
	2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145,
	0, 2166, 1587, 1998, 0, 0, 0, 0, 2005, 1990,
	2164, 0, 2163, 0, 0, 0, 2174, 0, 2209, 2205,
	0, 2253, 1844, 1831, 1832, 1833, 1834, 1835, 1836, 1846,
	0, 2250, 2288, 2294, 2084, 0, 0, 0, 2035, 2036,
	2037, 2038, 2039, 0, 2041, 2042, 0, 2044, 2045, 0,
	2047, 2048, 0, 2050, 2051, 2052, 2053, 2054, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1741, 1742, 1743, 1744, 1745,
	1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755,
	1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765,
	1766, 1767, 1768, 1769, 1770, 1771, 1772, 0, 0, 2056,
	0, 2177, -2, -2, -2, -2, -2, -2, -2, -2,
	0, 2058, 0, 2060, 2168, 2188, 0, 0, 1938, 0,
	0, 0, 0, 2108, 0, 2063, 2168, 2196, 0, 0,
	0, 0, 0, 2168, 0, 2201, 0, 2070, 0, 2072,
	1566, 0, 0, 1718, 0, 0, 0, 2223, 1718, 1718,
	0, 1630, 0, 0, 1694, 1695, 1696, 1697, 0, 0,
	1698, 0, 1688, 1692, 1689, 1690, 1684, 1647, 0, 0,
	2257, 1684, 1653, 1683, 0, 1193, 1673, 1684, 1684, 0,
	-2, 1657, 1674, 0, 0, 581, 583, 585, 589, 591,
	0, 0, 1587, -2, 0, -2, 323, 1192, 0, 0,
	0, 0, 0, 600, 602, 0, 0, 523, 0, 0,
	616, 0, 594, 0, 597, 0, 1719, 1722, 0, 0,
	1733, 1739, 1740, 0, -2, 0, 0, 1829, 0, 0,
	0, 0, 0, 624, 0, 0, 0, 418, 533, 205,
	505, 0, 205, 205, 514, 0, 0, 205, 525, 205,
	2278, 205, 2276, 310, 530, 1513, 237, 0, 677, 0,
	1433, 1442, 0, 713, 0, 715, 0, 2244, 2248, 2245,
	2249, 0, 704, 0, 0, 0, 0, 1383, 0, 1330,
	0, 0, 165, 2706, 0, 207, 0, 0, 1157, 2263,
	0, 1147, 0, 0, 2407, 0, 0, 0, 0, 0,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 0, 0, 0, 132, 0, 0, 0, 0, 0,
	0, 0, 0, 1216, 1217, 1219, 1226, 1228, 0, 1222,
	2251, 0, 0, 1223, 0, 1225, 1227, 1229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 106, 1248, 0,
	0, 1249, 1250, 1455, 1456, 0, 1476, 1477, 0, 0,
	0, 129, 0, 0, 0, 0, 0, 0, 2230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1241, 0, 1282, 1280, 1260, 1261, 1262, 1263,
	1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273,
	1274, 1275, 1276, 1277, 1278, 1279, 0, 0, 0, -2,
	1243, 1244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 312, 2229, 2239, 0, 1024, 1025, 346,
	349, 352, 355, 243, 0, 391, 0, 0, 1072, 1047,
	0, 0, 445, 321, 0, 0, 459, 463, 2280, 1032,
	221, 222, 223, 1210, 1213, 0, 1193, 2706, 1259, 0,
	0, 0, 0, 0, 0, 1293, 0, 0, 2706, 2258,
	2310, 2311, 1469, 1477, 0, 1718, 0, 1499, 1486, 0,
	0, 0, 1499, 1503, 1504, 1506, 1507, 0, 0, 1709,
	1715, 541, 593, 1574, 1574, 321, 319, 2532, 317, 314,
	316, 0, 0, 0, 1073, 1075, 1076, 1077, 207, 0,
	2311, 1147, 2459, 2311, 0, 1489, 1491, 0, 0, 0,
	268, 0, 277, 1687, 275, 280, 0, 0, 0, 457,
	660, 665, 817, 0, 321, 825, 826, 827, 873, 917,
	925, 970, 837, 839, 840, 841, 0, 0, 0, 1005,
	1001, 1002, 1003, 857, 927, 860, 927, 863, 927, 886,
	892, 905, 898, 906, 0, 0, 0, 919, 936, 0,
	953, 0, 0, 0, 0, 0, 0, 0, 976, 977,
	978, 980, 985, 984, 989, 1706, 1525, 1526, 1528, 0,
	1537, 0, 0, 1613, -2, -2, 1612, 1616, 1617, -2,
	-2, -2, -2, 1533, 0, 1542, 1539, 0, 1598, 1321,
	1322, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	1934, 0, -2, 1913, 1916, 1920, 1922, 1924, 0, 0,
	0, 0, 0, 0, 2157, 0, 2159, 1935, 2212, 2215,
	2150, 0, 2106, 0, 0, 1586, 1587, 1587, 0, 2004,
	0, 2165, 0, 2172, 2173, 0, 1997, 0, 2206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2008, 0,
	0, 0, 0, 2040, 2043, 2046, 2049, 0, 0, 0,
	0, 2029, 0, 0, 0, 2033, 1799, 1785, 0, 1827,
	1825, 1826, 1820, 1827, 1824, 1777, 0, 1776, 0, 2055,
	0, 2057, 2059, 0, 0, 2061, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1941, 1942, 1943, 1963, 2062, 2194, 2195, 0, 0, 0,
	0, 0, 0, 2068, 0, 2200, 2069, 2071, 1574, 0,
	1567, 0, 1632, 1621, 1717, 0, 2221, 1687, 1634, 1636,
	2222, 2260, 1621, 1621, 0, 2169, 0, 0, 1678, 0,
	0, 0, 1680, 1651, 0, 0, 1645, 0, 1640, 1641,
	1642, 1643, 1644, 1652, 1193, 1682, 1654, 1658, 2288, 0,
	1684, 0, 1669, 0, 1671, 1704, 0, 1663, 1666, 0,
	0, 2303, 1718, 0, 357, 363, 364, 358, 359, 360,
	361, 609, 0, 0, 0, 0, 0, 2171, 0, 1724,
	0, 1730, 0, 0, 0, 0, 618, 0, 0, 0,
	0, 1511, 413, 504, 205, 509, 512, 2227, 205, 518,
	521, 527, 233, 0, 673, -2, 711, 712, 714, 0,
	710, 162, 1384, 0, 0, 1326, 1328, 1332, 1338, 1341,
	0, 167, 2706, 179, 0, 1121, 0, 2261, 0, 0,
	0, 0, 0, 0, 1386, 0, 0, 2706, 205, 2706,
	205, 182, 184, 187, 0, 191, 189, 0, 1109, 0,
	0, 1112, 119, 1384, 0, 0, 122, 126, 134, 135,
	138, 0, 0, 0, 144, 0, 0, 0, 1343, 1347,
	1355, 0, 0, 0, 1220, 1221, 1224, 1230, 85, 0,
	0, 0, 1351, 1353, 1359, 97, 100, 2706, 2272, 102,
	2706, 0, 1325, 0, 0, 0, 0, 193, 124, 128,
	136, 137, 139, 0, 1361, 121, 0, 220, 0, 0,
	210, 205, 2706, 0, 212, 0, 213, 214, 227, 0,
	0, 0, 1035, 1036, 1281, 1234, 1235, 0, 1246, 1240,
	0, 0, 0, 0, 0, 1363, 1364, 0, 0, 0,
	1382, 1379, 1687, 239, 0, 1687, 247, 0, 2235, 0,
	378, 0, 0, 0, 0, 1071, 1175, 0, 1042, 0,
	0, 0, 451, 447, 0, 456, 462, 461, 467, -2,
	0, 0, 0, 0, -2, 0, 0, 1297, 1291, 1292,
	0, 0, 0, 0, 2706, 1471, 1477, 0, 1572, 1587,
	474, 1478, 1499, 0, 0, 0, 1488, 1484, 1481, 1718,
	0, 0, 0, 0, 0, 1711, 1714, 544, 545, 296,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 1078,
	1082, 0, 2311, 2311, 0, 2265, 0, 0, 0, 0,
	0, 0, 278, 0, 281, 0, 0, 0, 286, 287,
	288, 289, 290, 291, 280, 270, 1687, 0, 0, 662,
	0, 0, 824, 0, 847, 850, 859, 861, 864, 908,
	910, 927, 937, 960, 961, 1099, 0, 1099, 0, 0,
	981, 1535, 0, 1610, 1541, 1592, 1593, 0, 1323, 0,
	1852, 1897, 0, 0, -2, 0, 0, 1901, 0, 0,
	0, -2, 0, 0, 0, 2158, 2160, 0, 2214, 2149,
	1999, 0, 0, 0, 2003, 1987, 1988, 0, 2109, 2175,
	2204, 2208, 0, 1837, 1838, 1839, 1840, 1841, 1842, 1843,
	0, 2254, 2289, 2293, 2082, 2083, 2087, 2268, 0, 0,
	0, 2012, 0, 0, 0, 0, 0, 0, 0, 0,
	1818, 1822, 0, 0, 2176, 2187, 2189, 1939, 1940, 1944,
	1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, -2,
	-2, -2, 1957, 1958, 1959, -2, -2, -2, 1964, 0,
	0, 0, 2190, 2192, 2193, 2197, 2198, 0, 2065, 2066,
	2067, 2199, 0, 1574, 1568, 1629, 0, 1716, 1633, 0,
	1629, 1629, 1581, 1676, 0, 0, 1700, 0, 1648, 0,
	1649, 0, 1681, 0, 1656, 1659, 1660, 1670, 0, 1662,
	0, 1665, 0, 1999, -2, 322, 324, 326, 0, 329,
	330, 0, 0, 612, 613, 0, 611, 595, 0, 0,
	1726, 0, 0, 1802, 1806, 1830, 621, 622, 0, 620,
	506, 515, 235, 0, 1685, 0, 0, 0, 0, 0,
	0, 206, 1119, 1156, 0, 0, 0, 1146, 0, 0,
	1162, 169, 170, 171, 0, 0, 0, 0, 180, 0,
	0, 177, 0, 186, 190, 1106, 0, 0, 0, 0,
	1331, 0, 0, 0, 141, 142, 143, 0, 148, 0,
	149, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1461, 1462, 0, 1452, 0, 0, 0, 208, 0,
	0, 0, 1320, 229, 0, 0, 0, 0, 0, 1284,
	1285, 1242, 1344, 1348, 1356, 0, 0, 0, 0, 627,
	0, 632, 1381, 0, 247, 245, 0, 248, 0, 251,
	252, 0, 254, 247, 241, 0, 0, 0, 1193, 392,
	1045, 1163, 0, 1165, 0, 1043, 0, 0, 1164, 443,
	0, 450, 0, 464, 0, 0, 1214, 0, 0, 1237,
	1257, 1193, 0, 1296, 1298, 0, 1306, 0, 0, 0,
	1473, 1477, 0, 1466, 1467, 1606, 1479, 1497, -2, 0,
	0, 1587, 1505, 1502, 1508, 1509, 0, 318, 0, 313,
	315, 0, 299, 0, 0, 1074, 1079, 0, 0, 0,
	0, 0, 1490, 1492, 0, 1018, 1021, 0, 0, 0,
	0, 0, 269, 280, 1687, 305, 0, 818, 842, 918,
	962, 1098, 0, 0, 964, 0, 0, 1609, 1596, 1597,
	1594, 1323, 1899, 1903, 0, 0, 0, 1905, -2, 0,
	1927, -2, -2, 2161, 2213, 1978, 1587, 2000, 2002, 1989,
	2207, 1847, 0, 2089, 2086, 0, 2073, 0, 2024, 2025,
	0, 0, 2028, 2030, 2031, 2032, 1786, 1779, 1778, 2186,
	0, 0, 0, 0, 2064, 1569, 0, 2078, 0, 0,
	1637, 2078, 2078, 1677, 0, 1679, 1646, 1638, 0, 2289,
	1672, 1664, 0, 0, 327, 0, 331, 332, 0, 0,
	1720, 1725, 0, 1731, 1801, 0, 236, 163, 164, 1335,
	1339, 1336, 0, 166, 0, 1120, 0, 1123, 0, 0,
	0, 0, 1130, 1147, 0, 0, 0, 0, 0, 0,
	1149, 0, 1148, 0, 0, 1179, 0, 1311, 1318, 0,
	-2, 0, 0, 0, 173, 196, 0, 0, 0, 0,
	199, 1385, 175, 0, 0, 205, 205, 0, 0, 1327,
	1329, 1342, 0, 0, 0, 0, 151, 0, 0, 1345,
	1349, 1357, 1352, 1354, 1360, 0, 103, 0, 1463, 0,
	0, 1362, 218, 219, 0, 205, 0, 205, 211, 205,
	1320, 0, 0, 0, 0, 0, 0, 0, 1365, 1366,
	238, 0, 0, 0, 0, 240, 311, 247, 380, 0,
	1093, 0, 1175, 1167, 1168, 1169, 0, 1174, 1176, 0,
	0, 1059, 1044, 0, 1055, 0, 0, 1072, 1047, 0,
	448, 465, 0, 468, 0, 471, 1033, 1211, 1254, 1193,
	0, 1288, 0, 0, 0, 0, 0, 0, 0, 1475,
	1477, 0, 1468, 1469, 1499, 1605, 0, 0, 0, 1487,
	1606, 0, 320, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 282, 0, 283, 284, 285, 271,
	272, 664, 666, 0, 0, 672, 1097, 0, 0, 0,
	0, 1595, 1907, -2, -2, 1928, 0, 2290, 2292, 1587,
	0, 2075, 1589, 0, 0, -2, 0, 0, 0, 1570,
	1553, 0, 1628, 1620, 1622, 1624, 2593, 2382, 2705, 1554,
	1555, 1699, 0, 1667, 328, 614, 0, 0, 1727, 0,
	0, 0, 1337, 168, 0, 1124, 1125, 2264, 1127, 0,
	1129, 1131, 1132, 1133, 0, 1136, 0, 2313, 0, 1141,
	1144, 1145, 0, 0, 1158, 1180, 0, 1189, 0, 1313,
	1323, 1317, 0, 1315, 1191, 0, 172, 198, 174, 200,
	195, 0, 1320, 0, 176, 185, 0, 0, 123, 0,
	0, 2376, 154, 152, 150, 101, 1324, 125, 0, 220,
	228, 1319, 230, 215, 205, 0, 1346, 1350, 1358, 0,
	1373, 1374, 1375, 1376, 0, 0, 0, 0, 249, 0,
	250, 253, 0, 0, 1108, 0, 1046, 1166, 0, 1177,
	1178, 1049, 0, 1048, 0, 0, 0, 0, 0, 449,
	452, 0, 455, 0, 0, 0, 0, 0, 1299, 1297,
	0, 1305, 0, 0, 0, 1451, 0, 0, 1470, 1471,
	472, 1493, 0, 0, 1499, 1510, 298, 0, 0, 1080,
	1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1081,
	1191, 0, 0, 1155, 0, 303, 279, 0, 668, 0,
	670, 0, 963, 965, 0, 0, 2001, 2093, 0, 0,
	2026, 2027, -2, 0, 1967, 2077, 2079, 0, 0, 0,
	0, 0, 1639, 615, 1721, 623, 1333, 0, 1340, 1122,
	1126, 0, 0, 0, 1137, 1197, 0, 0, 1214, 1214,
	1150, 0, 0, 1183, 1184, 1093, 0, 1185, 1186, 1187,
	1312, 1598, 1318, 1093, 0, 0, 197, 202, 0, 0,
	0, 0, 0, 0, 0, 209, 231, 1320, 0, 1377,
	1378, 0, 0, 246, 264, 0, 1255, 1047, 1107, 0,
	0, 1057, 0, 1060, 0, 1056, 1053, 1054, 1045, 0,
	453, 454, 469, 0, 470, 0, 1258, 0, 0, 1306,
	0, 0, 1458, 1450, 1477, 1472, 1473, 1718, 1496, 1500,
	0, 0, 1189, 1191, 1104, 0, 667, 0, 0, 973,
	974, 0, 0, 0, 0, 2088, 1590, 1968, 0, 0,
	1623, 1625, 1626, 1627, 1334, 0, 0, 1135, 1202, 0,
	0, 0, 0, 0, 1151, 1181, 1182, 1104, 0, 1316,
	1314, 1160, 0, 1193, 178, 0, 1191, 0, 1113, 0,
	0, 1116, 0, 0, 155, 2376, 153, 0, 205, 1370,
	205, 0, 267, 0, 261, 259, 260, 1049, 0, 0,
	1171, 1173, 0, 1061, 1093, 1059, 466, 1256, 1289, 1191,
	0, 1189, 0, 1465, 1477, 1459, 1460, 0, 1475, 0,
	321, 321, 1093, 1189, 1047, 1103, 321, 669, 671, 2085,
	2105, 2094, -2, 2664, 2383, 0, 2105, 2105, 2080, 2081,
	0, 0, 1138, 1198, 1199, 0, 1194, 1195, 1196, 2312,
	1139, 1140, 1142, 1143, 1179, 0, 0, 1197, 201, 1093,
	1110, 0, 0, 1111, 0, 0, 158, 0, 160, 232,
	1368, 0, 1371, 0, 255, 0, 0, 1041, 0, 1170,
	0, 0, 0, 0, 1108, 1049, 1189, 0, 1093, 0,
	1454, 1464, 0, 1474, 1451, 0, 300, 301, 1104, 1093,
	1718, 0, 302, 2090, 0, 0, 2096, 2097, 2098, 2099,
	2100, 2091, 2092, 1128, 0, 1200, 0, 1201, 0, 0,
	0, 1718, 1188, 0, 1202, 183, 1114, 0, 1117, 0,
	156, 0, 0, 0, 262, 263, 1038, 1040, 0, 1172,
	1050, 0, 1052, 1047, 1058, 1093, 0, 1104, 0, 1447,
	1453, 1457, 2273, 1458, 1494, 0, 1047, 1104, 1154, 0,
	2102, 2103, 0, 0, 0, 1203, 0, 1206, 1207, 0,
	1204, 1159, 0, 1179, 0, 0, 1369, 205, 0, 0,
	1051, 1049, 1104, 1191, 1047, 1189, 1465, 0, 1718, 1047,
	2101, 2104, 2095, 1134, 1205, 1208, 1209, 1190, 1161, 0,
	0, 1372, 265, 0, 1096, 1041, 1047, 1189, 1718, 1093,
	1454, 1718, 1152, 1718, 1101, 0, 0, 1092, 1094, 1095,
	1039, 1718, 1093, 1302, 1104, 1448, 1495, 1153, 1115, 1100,
	0, 266, 1300, 1104, 1047, 0, 1047, 1718, 0, 1718,
	1303, 1101, 1301, 1118,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 586, 3, 592, 587, 3,
	597, 598, 590, 588, 602, 589, 599, 591, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 605, 3,
	578, 580, 579, 583, 601, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 595, 3, 596, 593, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 603, 585, 604, 581,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 582, 57921, 584, 57922, 594, 57923, 600, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1469
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1474
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1476
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1479
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1480
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1481
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1482
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1483
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1484
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1485
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1486
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1487
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1489
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1496
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1505
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1507
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1510
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1511
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1512
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1513
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1514
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1515
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1516
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1517
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1518
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1519
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1578
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1604
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1618
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1636
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1640
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1644
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1674
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1678
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1685
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1697
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1707
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1714
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1724
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1731
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1741
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1750
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1757
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1781
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1813
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1817
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1821
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1827
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1831
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1837
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1846
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1857
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1867
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1875
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1885
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1889
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1898
		{
		}
	case 133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1899
		{
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1903
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1912
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1924
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1929
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1936
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1948
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1955
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1963
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1968
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1972
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1977
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1983
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1991
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2002
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2012
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2022
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2031
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2042
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 152:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2048
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2056
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2060
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2064
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2068
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2074
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2079
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2090
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2094
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2100
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2104
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2111
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2116
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2121
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2126
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2131
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2136
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2141
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2146
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2151
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2156
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2161
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2166
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2170
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2175
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2184
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2196
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2206
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2213
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2216
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2222
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2229
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2237
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2244
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2253
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2262
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2267
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2274
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2282
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2283
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2287
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2291
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2297
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2305
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2309
		{
			sqlVAL.union.val = nil
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2315
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2319
		{
			sqlVAL.union.val = nil
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = true
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2329
		{
			sqlVAL.union.val = false
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2335
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2339
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2346
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2350
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2354
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2360
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2364
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 208:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2389
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2400
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2411
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2420
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2430
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2439
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2457
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2461
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2464
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2468
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2475
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2482
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2487
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2489
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2494
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2501
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2509
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2533
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2540
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2544
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2548
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 238:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2582
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2594
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2604
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2615
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2624
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2628
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2632
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2640
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2644
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2648
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2655
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2659
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2668
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2672
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2676
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2680
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2684
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2765
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2776
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2781
		{
			sqlVAL.union.val = nil
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2789
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2793
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2803
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2811
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2815
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2819
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2825
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2829
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2833
		{
			sqlVAL.union.val = nil
		}
	case 268:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2865
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2874
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2884
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2893
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2903
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2910
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2914
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2918
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2924
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2928
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2935
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 279:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2950
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2954
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2963
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2967
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2971
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2975
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2979
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2983
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2987
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2991
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2995
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3001
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3007
		{
			return unimplemented(sqllex, "alter function")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3011
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3015
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3052
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3057
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3061
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3067
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3072
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3077
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3082
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3087
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3091
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3107
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3110
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3114
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3118
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3126
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3130
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3136
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3146
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3150
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3158
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3164
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3168
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3178
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3182
		{
			sqlVAL.union.val = nil
		}
	case 322:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3194
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3208
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3214
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3218
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3224
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3228
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3236
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3240
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3244
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3248
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3252
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3260
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3261
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3262
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3263
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3273
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3281
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3283
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3287
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3290
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3300
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3309
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3317
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3319
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3323
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3326
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3336
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3345
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3353
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3355
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3359
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3362
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3370
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3374
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3378
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3391
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3394
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3398
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3403
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3415
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3417
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3418
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3421
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3422
		{
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3423
		{
			return helpWith(sqllex, "CREATE")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3430
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3433
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3436
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3437
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3440
		{
			return unimplemented(sqllex, "create access method")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3441
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3442
		{
			return unimplemented(sqllex, "create cast")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3443
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3444
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3445
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3446
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3447
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3448
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3449
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3450
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3451
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3452
		{
			return unimplemented(sqllex, "create publication")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3453
		{
			return unimplemented(sqllex, "create rule")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3454
		{
			return unimplemented(sqllex, "create server")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3455
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3456
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3457
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3458
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3461
		{
		}
	case 402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3462
		{
		}
	case 403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3465
		{
		}
	case 404:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3466
		{
		}
	case 405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3469
		{
		}
	case 406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3470
		{
		}
	case 407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3473
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3474
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3475
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3476
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3477
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3478
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3479
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3480
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3481
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3482
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3483
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3484
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3485
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3486
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3487
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3488
		{
			return unimplemented(sqllex, "drop server")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3489
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3490
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3491
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3494
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3495
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3496
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3497
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3498
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3500
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3501
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3502
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3503
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3513
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3521
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3525
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3529
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3535
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3539
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3548
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3555
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3561
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3567
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3571
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3582
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3594
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3609
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3617
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3627
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3631
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3637
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3641
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3648
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3652
		{

			sqlVAL.union.val = nil
		}
	case 464:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3669
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3680
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 466:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3688
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3695
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3699
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3708
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3712
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3725
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3735
		{
			return helpWith(sqllex, "DELETE")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3738
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3739
		{
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3747
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3750
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3751
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3752
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3753
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3754
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3763
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3764
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3765
		{
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3766
		{
			return helpWith(sqllex, "DROP")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3769
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3770
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3771
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3772
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3773
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3774
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3775
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3783
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3787
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3791
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3800
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3808
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3816
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3820
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3823
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3831
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3835
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3838
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3846
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3855
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3863
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3871
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3879
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3886
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3893
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3901
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3908
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3912
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3918
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3922
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3931
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3939
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3946
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3954
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3958
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3961
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3965
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3970
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3983
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3988
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3990
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3995
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3999
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4022
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4029
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4031
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4039
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4047
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4055
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4063
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4074
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4082
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4085
		{
			return helpWith(sqllex, "DELETE")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4087
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4088
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4089
		{
			return helpWith(sqllex, "INSERT")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4092
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4094
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4097
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4102
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4103
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4104
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4109
		{
			return helpWith(sqllex, "DELETE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4110
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4111
		{
			return helpWith(sqllex, "INSERT")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4113
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4117
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4118
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4122
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4126
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 594:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4136
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4144
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4152
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4156
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 598:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4160
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4170
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4177
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4185
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4189
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4193
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4203
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4207
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4211
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4215
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4218
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4241
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4245
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4249
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4253
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4257
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4267
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4282
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4285
		{
			return helpWith(sqllex, "GRANT")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4308
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4312
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4316
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4320
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4324
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4334
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4345
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4348
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4353
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4357
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4367
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4371
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4385
		{
			return helpWith(sqllex, "RESET")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4386
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4394
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4398
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4401
		{
			return helpWith(sqllex, "RESET")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4409
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4412
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4423
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4426
		{
			return helpWith(sqllex, "USE")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4430
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4431
		{
		}
	case 648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4432
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4436
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4437
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4438
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4439
		{
			return helpWith(sqllex, "USE")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4455
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4470
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4473
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4491
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4499
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4503
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 665:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4507
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4513
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4517
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4523
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4527
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4531
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4535
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4539
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4550
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4553
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4563
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4579
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4582
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4584
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4587
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4590
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4604
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4609
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4626
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4629
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4631
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4634
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4638
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4657
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4661
		{
			return unimplemented(sqllex, "set from current")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4665
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4670
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4679
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4684
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4696
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4701
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4708
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4712
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4718
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4722
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4729
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4750
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4754
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4760
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4764
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4768
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4772
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4776
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4782
		{
			sqlVAL.union.val = tree.Low
		}
	case 717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = tree.Normal
		}
	case 718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4790
		{
			sqlVAL.union.val = tree.High
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4805
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4809
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4814
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4818
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4833
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4834
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4835
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4836
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4837
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4838
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4839
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4840
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4841
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4843
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4844
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4845
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4846
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4847
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4849
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4850
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4851
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4853
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4855
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4856
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4857
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4858
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4859
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4860
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4861
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4862
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4863
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4864
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4865
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4866
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4867
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4868
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4869
		{
			return helpWith(sqllex, "SHOW")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4872
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4877
		{
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4878
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4881
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4885
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4890
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4895
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4900
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4905
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4915
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4916
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4917
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4928
		{
			sqlVAL.str = "client_encoding"
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4932
		{
			sqlVAL.str = "timezone"
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4933
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4947
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4951
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4955
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4966
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4974
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4982
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4996
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5005
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5014
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5023
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5031
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5041
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5045
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5048
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5050
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5053
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5055
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5059
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5062
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5070
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5073
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5081
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5085
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5089
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5093
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5096
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5104
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5107
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5113
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.nameList(),
			}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5118
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5123
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5130
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5134
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5144
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5153
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5160
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5163
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5176
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5184
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5192
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5195
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5197
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5201
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5205
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5208
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5210
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5214
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5217
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5225
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5228
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5230
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5233
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5241
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5244
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5246
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5249
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5253
		{
			sqlVAL.union.val = true
		}
	case 875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5255
		{
			sqlVAL.union.val = true
		}
	case 876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5257
		{
			sqlVAL.union.val = false
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5274
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5278
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5282
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5285
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5286
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5287
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5289
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5293
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5297
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5301
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5304
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5306
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5314
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5322
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5330
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5331
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5347
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5349
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5355
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5357
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5363
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5367
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5371
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 903:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5377
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5381
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5385
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 906:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5396
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5399
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5401
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5404
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5406
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5410
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5413
		{
			sqlVAL.union.val = true
		}
	case 913:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5414
		{
			sqlVAL.union.val = false
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5422
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5425
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5427
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5430
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5438
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5448
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5458
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5461
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5468
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5471
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5473
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5476
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5479
		{
			sqlVAL.union.val = true
		}
	case 927:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5480
		{
			sqlVAL.union.val = false
		}
	case 928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5487
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5491
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5494
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5501
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5505
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5508
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5515
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5519
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5523
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5530
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 938:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5534
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5545
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5548
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5556
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5561
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5566
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5570
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5580
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5584
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5589
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5594
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5599
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5604
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5607
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5617
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5621
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5623
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5627
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5635
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5638
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5646
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5649
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5659
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5663
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5667
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5675
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5683
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5690
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5696
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5698
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5701
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5703
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5706
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5710
		{
		}
	case 973:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5719
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5727
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5733
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5742
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5747
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5751
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5754
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5763
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5767
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5783
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5789
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5795
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5801
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5808
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5813
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5817
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5823
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5830
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5837
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 992:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5842
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5970
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6009
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6013
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6018
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6022
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6030
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6039
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6043
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6047
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6054
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6058
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6071
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6072
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6073
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6083
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6084
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6085
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6095
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6104
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6113
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6115
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6119
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6123
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6126
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6131
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6135
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6150
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6158
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6160
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6166
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6174
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6180
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6187
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6194
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6201
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6212
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6221
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6229
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6268
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6284
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6302
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6306
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6313
		{

			sqlVAL.union.val = nil
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6319
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6325
		{
			sqlVAL.str = ""
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6329
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6335
		{
			sqlVAL.union.val = nil
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6339
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6352
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6356
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6362
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6366
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6372
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6376
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6382
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6396
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6411
		{
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6412
		{
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6413
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6431
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6432
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6433
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6437
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6439
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6440
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6441
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6446
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6452
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6456
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6462
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6468
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6481
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6490
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6494
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6500
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6505
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6506
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6508
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6510
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6511
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6512
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6513
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6518
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6527
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6534
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6539
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6544
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6550
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.str = ""
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6564
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6570
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6578
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6584
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6590
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6596
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6606
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6612
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6618
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6625
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6632
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6638
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6642
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6648
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6662
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6668
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6682
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6693
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6697
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6703
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6707
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6711
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6715
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6719
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6723
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6727
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6745
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6749
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6753
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6757
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6763
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6767
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6774
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6778
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6782
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6786
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6796
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6804
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6809
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6815
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6821
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6825
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6831
		{

			sqlVAL.union.val = true
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6836
		{
			sqlVAL.union.val = false
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6841
		{
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6845
		{
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6848
		{
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6865
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6880
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6893
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6905
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6910
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6916
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6923
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6936
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6948
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6959
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6966
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6970
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6976
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6986
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7001
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7008
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7014
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7025
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7029
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7035
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7041
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7045
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7051
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7055
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7061
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7066
		{
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7067
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7068
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7069
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7070
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7071
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7089
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7093
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7099
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7105
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7111
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7115
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7135
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7139
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7143
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7147
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7156
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7160
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7164
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7172
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7178
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7184
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7192
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7196
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7200
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7204
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7208
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7227
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7236
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7244
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7248
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7251
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7252
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7255
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7256
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7258
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7259
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7260
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7270
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7272
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7274
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7276
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7279
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7281
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7282
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7284
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7286
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7294
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7297
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7301
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7305
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7315
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7322
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7333
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7337
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7341
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.expr(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.expr(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7349
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7353
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7356
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7360
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7364
		{
			sqlVAL.str = ""
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7370
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7374
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7378
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = true
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7390
		{

			sqlVAL.union.val = true
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7395
		{
			sqlVAL.union.val = false
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7405
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7419
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7431
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7443
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7453
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7463
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7467
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7471
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7475
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7479
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7483
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7487
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7491
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7495
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7499
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7507
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7511
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7515
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7519
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7523
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7527
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7531
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7535
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7548
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7554
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7558
		{
			sqlVAL.union.val = nil
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7568
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7573
		{
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7574
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7583
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7591
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7599
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7601
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7603
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7605
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7607
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7609
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7613
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7617
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7623
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7627
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7647
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7665
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7684
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7701
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7718
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7722
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7737
		{
			sqlVAL.union.val = false
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7743
		{
			sqlVAL.union.val = true
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7747
		{
			sqlVAL.union.val = false
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7753
		{
			sqlVAL.union.val = true
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7757
		{
			sqlVAL.union.val = false
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7763
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7767
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7776
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7782
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7788
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7796
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7820
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7821
		{
			sqlVAL.str = ""
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7824
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7825
		{
			sqlVAL.str = ""
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7829
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7833
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7837
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7843
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7849
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7855
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7861
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7869
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7875
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7883
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7891
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7901
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7907
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7914
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7920
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7926
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7933
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7945
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7951
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7978
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8000
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8012
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8021
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8031
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8040
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8052
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8058
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8066
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8075
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8086
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8092
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8104
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8110
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8124
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8130
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8138
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8142
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8154
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8163
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8172
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8189
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8193
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.nameList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8204
		{
			sqlVAL.union.val = true
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8208
		{
			sqlVAL.union.val = false
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8214
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.nameList(),
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8222
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.nameList(),
				GrantOptionFor: true,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8233
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8237
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8241
		{
			sqlVAL.union.val = tree.Types
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8245
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8249
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8253
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8259
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8262
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8268
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8272
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8277
		{
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8278
		{
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8281
		{
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8282
		{
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8290
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8293
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8303
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8311
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8313
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8317
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8320
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8333
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8341
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8349
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8362
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8370
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8372
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8378
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8386
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8389
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8393
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8394
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8395
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8411
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8414
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8416
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8419
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8429
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8432
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8437
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8441
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8446
		{
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8447
		{
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8448
		{
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8465
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8468
		{
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8469
		{
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8473
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8477
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8483
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8487
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8493
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8497
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8510
		{
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8512
		{
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8516
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8521
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8525
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8529
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8533
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8539
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8545
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8551
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8561
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8575
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8605
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8610
		{
			sqlVAL.str = ""
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8615
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8628
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8633
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8640
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8644
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8650
		{

		}
	case 1461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8657
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8661
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8665
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8684
		{
			sqlVAL.str = ""
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8690
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8694
		{
			sqlVAL.str = ""
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8700
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8704
		{
			sqlVAL.str = ""
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8710
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.str = ""
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8720
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8728
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8733
		{
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8734
		{
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8749
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8756
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8763
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8774
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8781
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8785
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8794
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8799
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8805
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8809
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8813
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8819
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8823
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8843
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8847
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8854
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8862
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8870
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8874
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8879
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8883
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8900
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8912
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8918
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8924
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8928
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8944
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8948
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8959
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.nameList(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8965
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8974
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.nameList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8980
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9021
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9031
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9046
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9050
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9058
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9062
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9079
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9080
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9083
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9084
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9088
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9098
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9107
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9109
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9113
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9117
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9119
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9124
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9159
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9160
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9161
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9210
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9222
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9226
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9235
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9244
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9259
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9266
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9282
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9287
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9293
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9303
		{
			sqlVAL.union.val = true
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9307
		{
			sqlVAL.union.val = false
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9335
		{
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9336
		{
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9340
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9344
		{
			sqlVAL.union.val = nil
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9349
		{
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9350
		{
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9354
		{
			sqlVAL.union.val = true
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9358
		{
			sqlVAL.union.val = false
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9362
		{
			sqlVAL.union.val = false
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9368
		{
			sqlVAL.union.val = true
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9374
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9379
		{
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9380
		{
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9383
		{
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9384
		{
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9388
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9392
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9404
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9408
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9415
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9419
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9425
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9446
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9451
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9471
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9477
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9486
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9498
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9502
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9506
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9510
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9524
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9528
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9536
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9543
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9565
		{
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9566
		{
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9569
		{
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9570
		{
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9587
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9591
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9596
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9597
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9603
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9604
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9605
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9606
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9610
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9614
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9633
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9636
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9638
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9650
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9653
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9655
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9661
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9665
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9671
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9675
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9680
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9685
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9691
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9696
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9701
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9708
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9713
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9724
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9728
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9732
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9740
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9772
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9782
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9792
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9800
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9809
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9817
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9828
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9852
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9858
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9869
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9873
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9879
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9885
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9891
		{
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9893
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = nil
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9897
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9898
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9902
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9906
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9912
		{
			sqlVAL.union.val = true
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9916
		{
			sqlVAL.union.val = false
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9936
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9940
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9944
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9948
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9952
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9973
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9979
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9986
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9992
		{
			sqlVAL.str = tree.AstFull
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9996
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10000
		{
			sqlVAL.str = tree.AstRight
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10004
		{
			sqlVAL.str = tree.AstInner
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10010
		{
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10011
		{
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10035
		{
			sqlVAL.str = tree.AstHash
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10039
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10043
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10047
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.str = ""
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10064
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10068
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10074
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10075
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10076
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10080
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10085
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10099
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10103
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10109
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10115
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10125
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10135
		{
			sqlVAL.union.val = true
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10139
		{
			sqlVAL.union.val = false
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10145
		{
			sqlVAL.union.val = true
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10149
		{
			sqlVAL.union.val = false
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10155
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10162
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10174
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10187
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10195
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10196
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10206
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10213
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10214
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10216
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10224
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10225
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10237
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10244
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10253
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10293
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10298
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10305
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10306
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10309
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10310
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10312
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10313
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10316
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10317
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10318
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10319
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10320
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10321
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10323
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10324
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10325
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10327
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10328
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10329
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10330
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10331
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10332
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10333
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10334
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10335
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10336
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10337
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10338
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10340
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = types.Geography
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10344
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10347
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10351
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10355
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10363
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10389
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10397
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = nil
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10416
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10420
		{
			sqlVAL.union.val = types.Int2
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10424
		{
			sqlVAL.union.val = types.Int
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10428
		{
			sqlVAL.union.val = types.Float4
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10432
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10436
		{
			sqlVAL.union.val = types.Float
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10440
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10448
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10456
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.union.val = types.Bool
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10470
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = types.Float
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10489
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10495
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10503
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10507
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10511
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10517
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10529
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = types.String
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10556
		{
			sqlVAL.union.val = true
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10557
		{
			sqlVAL.union.val = false
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = types.Date
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10566
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10574
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10588
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10597
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10605
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10622
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.union.val = true
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10633
		{
			sqlVAL.union.val = false
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10634
		{
			sqlVAL.union.val = false
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = types.Interval
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10642
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10646
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10657
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10673
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10681
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10697
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10703
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10712
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10721
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10730
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10745
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10751
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10761
		{
			sqlVAL.union.val = nil
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10767
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10775
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10812
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10816
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10820
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10824
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10835
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10840
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10844
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10848
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10852
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10856
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10860
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10864
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10868
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10872
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10876
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10880
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10884
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10888
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10892
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10896
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10900
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10904
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10908
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10912
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10916
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10920
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10924
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10928
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10932
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10936
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10940
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10944
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10948
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10952
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10956
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10960
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10964
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10968
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10972
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10976
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10980
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10984
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10992
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11002
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11006
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11010
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11014
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11018
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11022
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11026
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11030
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11034
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11038
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11042
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11046
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11050
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11054
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11058
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11062
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11066
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11070
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11074
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11078
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11082
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11086
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11090
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11094
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11098
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11102
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11105
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11107
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11111
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11115
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11123
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11127
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11131
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11135
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11155
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11159
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11163
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11171
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11188
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11193
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11205
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11209
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11213
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11217
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11221
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11225
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11229
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11233
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11237
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11241
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11245
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11249
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11257
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11261
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11265
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11269
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11273
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11277
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11281
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11285
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11289
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11293
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11297
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11301
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11309
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11319
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11323
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11327
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11331
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11345
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11353
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11389
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11393
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11397
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11401
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11405
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11410
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11412
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11416
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11420
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11424
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11436
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11445
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11452
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11456
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11460
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11466
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11471
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11475
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11479
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11483
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11487
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11490
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11494
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11498
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11501
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11502
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11504
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11510
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11514
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11517
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11526
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11579
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11592
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11604
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11613
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11614
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11619
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11623
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11627
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11633
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11637
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11641
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11645
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11649
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11653
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11659
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11663
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11667
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11671
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11675
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11679
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11683
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11687
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11691
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11695
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11699
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11703
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11707
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11714
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11717
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11719
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11722
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11724
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11728
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11731
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11733
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11737
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11740
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11742
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11746
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11749
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11751
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11755
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11758
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11760
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11763
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11765
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11768
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11770
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11773
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11775
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11778
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11780
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11783
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11785
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11789
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11792
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11793
		{
			return unimplemented(sqllex, "treat")
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11795
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11799
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11803
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11807
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11811
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11814
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11816
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11819
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11825
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11829
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11835
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11839
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11846
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11850
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11856
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11860
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11866
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11874
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11878
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11882
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11889
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11909
		{
			sqlVAL.str = ""
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11915
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11919
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11925
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11933
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11941
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11949
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11955
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11968
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11996
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12000
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12004
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12008
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12015
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12024
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12028
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12032
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12036
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12041
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12054
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12058
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12065
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12077
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12081
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12085
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12101
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12102
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12103
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12104
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12105
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12106
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12107
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12108
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12109
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12110
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12111
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12112
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12114
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12115
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12116
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12117
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12118
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12119
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12120
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12121
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12122
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12123
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12124
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12125
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12126
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12127
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12128
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12129
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12130
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12131
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12132
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12133
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12134
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12135
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12136
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12141
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12157
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12164
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12165
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12166
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12167
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12190
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12194
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12200
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12204
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12208
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12219
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12223
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12229
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12233
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12240
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12246
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12250
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12256
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12260
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12266
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12270
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12276
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12280
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12286
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12290
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12313
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12317
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12321
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12327
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12334
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12338
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12355
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12359
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12363
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12367
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12371
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12377
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12383
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12389
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12393
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12397
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12403
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12415
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12422
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12426
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12432
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12438
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12442
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12449
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12455
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12459
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12466
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12472
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12476
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12481
		{
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12482
		{
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12486
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12490
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12496
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12505
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12509
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12513
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12521
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12525
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12531
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12535
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12554
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12562
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12585
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12594
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12598
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12602
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12606
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12612
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12616
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12631
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12635
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12647
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12651
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12660
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12671
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12680
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12688
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12705
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12790
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12798
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12802
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12808
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12812
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12820
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12847
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12854
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12858
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12862
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12876
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12880
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12884
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12897
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12906
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12924
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12937
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12944
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12969
		{
			sqlVAL.str = ""
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12975
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12979
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
